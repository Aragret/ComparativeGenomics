%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[20.47733498 613.08239746]
[9.44742870 623.28643799]
[-2.92243934 631.81677246]
[-16.38043594 638.49987793]
[-30.65257072 643.19952393]
[-45.44828415 645.82012939]
[-60.46635437 646.30834961]
[-75.40103149 644.65417480]
[-89.94826508 640.89135742]
[-103.81188965 635.09649658]
[-116.70966339 627.38751221]
[-128.37901306 617.92144775]
[-138.58233643 606.89086914]
[-147.11193848 594.52050781]
[-153.79415894 581.06207275]
[-158.49293518 566.78967285]
[-161.11264038 551.99377441]
[-161.59991455 536.97570801]
[-159.94485474 522.04113770]
[-156.18113708 507.49411011]
[-150.38540649 493.63082886]
[-142.67564392 480.73355103]
[-133.20880127 469.06478882]
[-122.17763519 458.86215210]
[-109.80671692 450.33331299]
[-96.34789276 443.65191650]
[-82.07517242 438.95401001]
[-67.27913666 436.33523560]
[-52.26100540 435.84887695]
[-37.32653427 437.50488281]
[-33.57023239 422.98281860]
[-29.81393242 408.46075439]
[-26.05763245 393.93869019]
[-22.30133057 379.41665649]
[-18.54503059 364.89459229]
[-14.78873062 350.37252808]
[-27.66871452 358.06057739]
[-42.49665070 355.79510498]
[-52.49340057 344.61184692]
[-53.08858871 329.62365723]
[-44.01010513 317.68292236]
[-29.40850449 314.24877930]
[-15.95944595 320.89129639]
[-9.81151390 334.57540894]
[-4.56479549 320.52294922]
[0.68192279 306.47048950]
[5.92864084 292.41799927]
[11.17535877 278.36553955]
[7.34268618 261.24017334]
[21.64319038 249.63945007]
[26.68010712 235.51042175]
[20.08403587 222.20526123]
[24.99091148 207.80465698]
[38.99131775 200.97630310]
[44.02823257 186.84727478]
[49.06514740 172.71824646]
[54.10206604 158.58921814]
[42.96231079 168.63439941]
[29.19044113 174.57878113]
[14.23982811 175.79499817]
[-0.31174979 172.15473938]
[-12.92863178 164.04212952]
[-22.27932739 152.31333923]
[-27.37703705 138.20613098]
[-27.68378448 123.20927429]
[-23.16720009 108.90541077]
[-14.30392933 96.80406952]
[-2.02933359 88.18233490]
[12.36121845 83.95007324]
[27.34905815 84.55393982]
[41.35248566 89.93019104]
[52.89368057 99.51145935]
[60.75467682 112.28662109]
[64.10588074 126.90747833]
[62.59358978 141.83123779]
[71.00820923 129.41374207]
[79.42282867 116.99624634]
[87.83744812 104.57875061]
[95.87861633 91.91622925]
[103.53921509 79.01989746]
[110.31920624 65.63962555]
[116.18817139 51.83544922]
[122.05712891 38.03127289]
[127.92609406 24.22709656]
[131.79039001 9.73340321]
[133.57286072 -5.16031408]
[135.35533142 -20.05403137]
[136.02511597 -35.03907013]
[135.57850647 -50.03242111]
[135.13189697 -65.02577209]
[134.68530273 -80.01911926]
[131.30177307 -88.50378418]
[134.34533691 -95.23865509]
[134.12200928 -110.23699188]
[133.89868164 -125.23533630]
[133.67535400 -140.23367310]
[119.27564240 -144.91632080]
[107.17811584 -154.02282715]
[98.69499969 -166.56538391]
[94.74649048 -181.18345642]
[95.76089478 -196.29138184]
[101.62817383 -210.25038147]
[111.71189117 -221.54629517]
[124.91823578 -228.95379639]
[139.81468201 -231.66940308]
[154.78538513 -229.39852905]
[168.20642090 -222.38749695]
[178.62199402 -211.39683533]
[184.90228271 -197.61871338]
[186.36605835 -182.54768372]
[182.85453796 -167.81852722]
[174.74862671 -155.02896118]
[162.92758179 -145.56631470]
[148.67369080 -140.45700073]
[148.89701843 -125.45866394]
[149.12034607 -110.46031952]
[149.34367371 -95.46198273]
[149.67864990 -80.46572876]
[150.12524414 -65.47237396]
[150.57185364 -50.47902679]
[151.01846313 -35.48567581]
[159.50328064 -47.85530472]
[172.99325562 -54.41433716]
[187.96211243 -53.44825745]
[200.49703979 -45.20959473]
[207.32144165 -31.85191536]
[206.65142822 -16.86688614]
[198.66213989 -4.17155790]
[185.44197083 2.91554141]
[170.44662476 2.54186130]
[157.59585571 -5.19491959]
[150.24903870 -18.27156639]
[148.46658325 -3.37784839]
[146.68411255 11.51586914]
[155.12673950 -0.88260645]
[166.81123352 -10.28859329]
[180.72677612 -15.88837910]
[195.66954041 -17.19752693]
[210.34681702 -14.10278130]
[223.48887634 -6.87187004]
[233.95881653 3.86966109]
[240.85086060 17.19256210]
[243.56878662 31.94426918]
[241.87747192 46.84861374]
[235.92321777 60.61621857]
[226.22114563 72.05604553]
[213.61056519 80.17844391]
[199.18241882 84.28073120]
[184.18490601 84.00803375]
[169.91543579 79.38393402]
[157.60847473 70.80846405]
[148.32868958 59.02348709]
[142.87889099 45.04852676]
[141.73027039 30.09605789]
[135.86131287 43.90023422]
[129.99234009 57.70441055]
[124.12338257 71.50859070]
[137.29676819 64.33487701]
[152.26464844 65.31582642]
[164.38909912 74.14747620]
[169.91319275 88.09324646]
[167.12524414 102.83187866]
[156.88912964 113.79645538]
[142.37661743 117.58948517]
[128.08456421 113.03565216]
[118.44153595 101.54601288]
[116.43554688 86.68049622]
[108.77494812 99.57682800]
[109.27416229 102.58353424]
[108.69039154 105.83833313]
[106.92964172 108.94046783]
[104.04728699 111.46003723]
[100.25494385 112.99337006]
[91.84032440 125.41086578]
[83.42570496 137.82836914]
[75.01108551 150.24584961]
[68.23109436 163.62612915]
[63.19417953 177.75515747]
[58.15726089 191.88418579]
[53.12034607 206.01321411]
[59.64386749 220.15823364]
[54.33444595 234.41532898]
[40.80913544 240.54733276]
[35.77222061 254.67636108]
[40.58521271 266.64288330]
[36.09907913 278.30731201]
[25.22783089 283.61224365]
[19.98111153 297.66473389]
[14.73439407 311.71719360]
[9.48767567 325.76965332]
[4.24095774 339.82214355]
[-0.26667088 354.12881470]
[-4.02297163 368.65087891]
[-7.77927208 383.17294312]
[-11.53557301 397.69500732]
[-15.29187393 412.21707153]
[-19.04817390 426.73913574]
[-22.80447578 441.26116943]
[-8.94013023 447.05435181]
[3.95859838 454.76171875]
[15.62911034 464.22637939]
[25.83380890 475.25564575]
[34.36494064 487.62500000]
[41.04882050 501.08258057]
[45.74937439 515.35443115]
[48.37090302 530.14996338]
[48.86003876 545.16802979]
[47.20682144 560.10278320]
[43.44491196 574.65026855]
[37.65089035 588.51422119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 198]
[31 197]
[32 196]
[33 195]
[34 194]
[35 193]
[36 192]
[44 191]
[45 190]
[46 189]
[47 188]
[48 187]
[50 184]
[51 183]
[54 180]
[55 179]
[56 178]
[57 177]
[75 176]
[76 175]
[77 174]
[78 173]
[79 168]
[80 167]
[81 157]
[82 156]
[83 155]
[84 154]
[85 134]
[86 133]
[87 132]
[88 121]
[89 120]
[90 119]
[91 118]
[93 117]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
