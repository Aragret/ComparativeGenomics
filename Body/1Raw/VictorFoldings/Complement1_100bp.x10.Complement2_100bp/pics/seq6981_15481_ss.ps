%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[25.17577744 833.13879395]
[10.28492928 834.97174072]
[-4.67964458 836.04809570]
[-19.67952919 836.36517334]
[-34.67621994 835.92205811]
[-49.63121796 834.71997070]
[-64.50613403 832.76196289]
[-79.26279449 830.05303955]
[-93.86330414 826.60021973]
[-108.27019501 822.41229248]
[-122.44647217 817.50006104]
[-136.35575867 811.87609863]
[-149.96234131 805.55487061]
[-163.23129272 798.55261230]
[-176.12855530 790.88726807]
[-188.62103271 782.57849121]
[-200.67662048 773.64764404]
[-212.26441956 764.11767578]
[-223.35464478 754.01306152]
[-233.91883850 743.35968018]
[-243.92990112 732.18487549]
[-253.36210632 720.51739502]
[-262.19125366 708.38714600]
[-270.39471436 695.82525635]
[-277.95135498 682.86401367]
[-284.84182739 669.53668213]
[-291.04846191 655.87744141]
[-296.55526733 641.92132568]
[-301.34817505 627.70428467]
[-305.41482544 613.26269531]
[-308.74478149 598.63366699]
[-311.32952881 583.85473633]
[-313.16244507 568.96386719]
[-314.23876953 553.99932861]
[-314.55575562 538.99945068]
[-314.11264038 524.00274658]
[-312.91049194 509.04776001]
[-310.95245361 494.17285156]
[-308.24349976 479.41619873]
[-304.79061890 464.81567383]
[-300.60266113 450.40881348]
[-295.69039917 436.23254395]
[-290.06640625 422.32327271]
[-283.74514771 408.71670532]
[-276.74282837 395.44778442]
[-269.07742310 382.55053711]
[-260.76864624 370.05807495]
[-251.83779907 358.00250244]
[-242.30780029 346.41473389]
[-232.20312500 335.32455444]
[-221.54971313 324.76037598]
[-210.37489319 314.74935913]
[-198.70738220 305.31716919]
[-186.57710266 296.48803711]
[-174.01519775 288.28463745]
[-161.05393982 280.72802734]
[-147.72656250 273.83758545]
[-134.06730652 267.63101196]
[-120.11121368 262.12420654]
[-105.89411926 257.33135986]
[-91.45252228 253.26475525]
[-76.82349396 249.93482971]
[-62.04457855 247.35011292]
[-47.15372086 245.51725769]
[-32.18914032 244.44096375]
[-17.18925476 244.12400818]
[-2.19256806 244.56718445]
[12.76242447 245.76936340]
[27.63733292 247.72746277]
[42.39397430 250.43644714]
[56.99446487 253.88935852]
[61.18147659 239.48558044]
[65.36849213 225.08180237]
[69.55549622 210.67800903]
[73.31179810 196.15596008]
[76.63406372 181.52848816]
[79.95632172 166.90103149]
[82.95109558 152.20303345]
[85.61688995 137.44181824]
[88.28268433 122.68059540]
[90.94847870 107.91938019]
[93.39421082 93.12010956]
[95.61932373 78.28606415]
[97.84444427 63.45202255]
[100.06955719 48.61797714]
[102.29467773 33.78393555]
[104.18796539 18.90389824]
[105.74848938 3.98529410]
[107.30901337 -10.93331051]
[108.86953735 -25.85191536]
[110.20777130 -40.79209900]
[111.32341766 -55.75055313]
[112.43907166 -70.70900726]
[113.55471802 -85.66745758]
[114.67036438 -100.62591553]
[115.78601837 -115.58436584]
[116.90166473 -130.54281616]
[117.90592194 -145.50917053]
[118.79873657 -160.48257446]
[104.87853241 -166.48287964]
[93.85217285 -176.88456726]
[87.05114746 -190.43159485]
[85.29671478 -205.48808289]
[88.80072021 -220.23588562]
[97.14005280 -232.89413452]
[109.30769348 -241.93429565]
[123.83433533 -246.26470947]
[138.96582031 -245.36247253]
[152.87493896 -239.33651733]
[163.88211060 -228.91452026]
[170.65815735 -215.35499573]
[172.38484192 -200.29528809]
[168.85366821 -185.55397034]
[160.49101257 -172.91111755]
[148.30674744 -163.89338684]
[133.77214050 -159.58975220]
[132.87933350 -144.61634827]
[135.61912537 -137.75228882]
[131.86012268 -129.42716980]
[130.74447632 -114.46871948]
[129.62881470 -99.51026917]
[128.51316833 -84.55181122]
[127.39752197 -69.59336090]
[126.28187561 -54.63490677]
[125.16622162 -39.67645264]
[127.54864502 -35.53723526]
[127.35613251 -29.85745049]
[123.78813934 -24.29139328]
[122.22762299 -9.37278748]
[120.66709900 5.54581690]
[119.10657501 20.46442223]
[121.03090668 23.41895676]
[121.61978912 27.45235062]
[120.38174438 31.92678070]
[117.12872314 36.00905228]
[114.90360260 50.84309387]
[112.67848969 65.67713928]
[110.45336914 80.51118469]
[108.22824860 95.34522247]
[110.31015015 100.15975189]
[109.54635620 105.79801178]
[105.70969391 110.58517456]
[103.04389954 125.34638977]
[100.37810516 140.10760498]
[97.71231079 154.86882019]
[99.47897339 159.78065491]
[99.21161652 164.41549683]
[97.35636902 168.04496765]
[94.58377838 170.22329712]
[91.26152039 184.85075378]
[87.93926239 199.47821045]
[89.37040710 203.57769775]
[89.41782379 207.52261353]
[88.30002594 210.89691162]
[86.34818268 213.39830017]
[83.95928192 214.86502075]
[79.77227020 229.26881409]
[75.58525848 243.67259216]
[71.39824677 258.07638550]
[85.57455444 262.98852539]
[99.48387146 268.61239624]
[113.09049225 274.93356323]
[126.35948181 281.93576050]
[139.25679016 289.60104370]
[151.74929810 297.90972900]
[163.80494690 306.84048462]
[175.39279175 316.37039185]
[186.48307800 326.47497559]
[197.04733276 337.12829590]
[207.05844116 348.30303955]
[216.49072266 359.97045898]
[225.31994629 372.10067749]
[233.52345276 384.66250610]
[241.08018494 397.62371826]
[247.97073364 410.95101929]
[254.17742920 424.61022949]
[259.68432617 438.56628418]
[264.47729492 452.78332520]
[268.54400635 467.22488403]
[271.87405396 481.85391235]
[274.45889282 496.63278198]
[276.29187012 511.52365112]
[277.36828613 526.48822021]
[277.68536377 541.48809814]
[277.24230957 556.48480225]
[276.04025269 571.43975830]
[274.08230591 586.31469727]
[271.37344360 601.07135010]
[267.92062378 615.67187500]
[263.73275757 630.07879639]
[258.82055664 644.25506592]
[253.19664001 658.16436768]
[246.87545776 671.77099609]
[239.87321472 685.03997803]
[232.20790100 697.93725586]
[223.89918518 710.42974854]
[214.96839905 722.48535156]
[205.43846130 734.07318115]
[195.33384705 745.16345215]
[184.68048096 755.72766113]
[173.50572205 765.73876953]
[161.83825684 775.17102051]
[149.70802307 784.00018311]
[137.14617920 792.20367432]
[124.18495178 799.76031494]
[110.85761261 806.65087891]
[97.19838715 812.85748291]
[83.24233246 818.36437988]
[69.02526855 823.15728760]
[54.58369064 827.22399902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 159]
[72 158]
[73 157]
[74 156]
[75 151]
[76 150]
[77 149]
[78 145]
[79 144]
[80 143]
[81 142]
[82 139]
[83 138]
[84 137]
[85 136]
[86 135]
[87 131]
[88 130]
[89 129]
[90 128]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
