%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[126.08468628 556.13696289]
[138.85652161 547.77978516]
[136.85250854 532.91424561]
[134.84849548 518.04870605]
[132.84448242 503.18319702]
[123.41819000 495.60220337]
[121.62695312 483.23388672]
[128.97080994 472.63055420]
[127.18833923 457.73681641]
[117.99346924 446.01916504]
[124.03605652 431.39733887]
[122.25358582 416.50363159]
[120.47112274 401.60992432]
[109.21114349 388.14959717]
[116.59856415 371.28225708]
[114.59455109 356.41671753]
[112.59053802 341.55120850]
[101.55886078 351.71496582]
[86.71184540 349.57812500]
[78.99415588 336.71588135]
[84.09498596 322.60980225]
[98.25419617 317.65835571]
[111.03324127 325.51019287]
[110.14042664 310.53677368]
[109.24761200 295.56338501]
[108.35479736 280.58996582]
[107.46197510 265.61657715]
[106.56916046 250.64315796]
[97.73282623 242.38206482]
[96.86646271 229.91477966]
[104.97862244 219.88702393]
[104.30883026 204.90199280]
[103.63904572 189.91694641]
[102.52339935 174.95849609]
[100.96287537 160.03988647]
[99.40235138 145.12129211]
[97.39833832 130.25575256]
[94.95261383 115.45648193]
[83.97802734 102.77047729]
[90.05548859 87.13587189]
[87.38969421 72.37465668]
[84.72389221 57.61344147]
[82.05809784 42.85222244]
[79.39230347 28.09100533]
[76.01918030 24.10740089]
[74.64846039 19.67181587]
[75.11698914 15.62267590]
[76.95250702 12.61215687]
[74.94849396 -2.25337172]
[65.43684387 -14.89611816]
[71.40440369 -28.54300308]
[69.40039062 -43.40853119]
[65.15251923 -51.49515152]
[67.47890472 -58.51011276]
[65.69644165 -73.40383148]
[63.91397476 -88.29754639]
[62.13150787 -103.19126892]
[60.34904480 -118.08498383]
[58.56657791 -132.97869873]
[49.24420929 -145.76165771]
[55.41429138 -159.31819153]
[53.63182831 -174.21189880]
[51.84936142 -189.10562134]
[50.06689453 -203.99934387]
[40.74452972 -216.78230286]
[46.91461182 -230.33882141]
[45.13214493 -245.23254395]
[42.00210953 -249.40985107]
[40.89783096 -253.91915894]
[41.60654068 -257.93322754]
[43.61798859 -260.82916260]
[34.87570953 -274.01562500]
[41.64496994 -287.28314209]
[40.52931976 -302.24157715]
[39.41367340 -317.20004272]
[38.29802322 -332.15847778]
[37.18237686 -347.11694336]
[30.92082596 -333.48635864]
[20.42428207 -322.77081299]
[6.92586565 -316.22921753]
[-7.98864269 -314.63000488]
[-22.56710052 -318.16110229]
[-35.09684753 -326.40762329]
[-44.10589600 -338.40084839]
[-48.53588104 -352.73175049]
[-47.86636353 -367.71679688]
[-42.17600250 -381.59555054]
[-32.13329315 -392.73754883]
[-18.91804504 -399.83383179]
[-4.08277321 -402.05075073]
[10.62969208 -399.12783813]
[23.49094391 -391.40850830]
[32.99005508 -379.79959106]
[38.01134109 -365.66336060]
[40.45706940 -380.46264648]
[42.90279770 -395.26190186]
[45.34852600 -410.06118774]
[47.79425430 -424.86044312]
[33.89068985 -430.67315674]
[21.70275879 -439.53607178]
[11.88773823 -450.97119141]
[4.97494125 -464.36184692]
[1.33716571 -478.98593140]
[1.17059267 -494.05471802]
[4.48420477 -508.75564575]
[11.09930325 -522.29583740]
[20.65914345 -533.94512939]
[32.64817810 -543.07531738]
[46.41984940 -549.19396973]
[61.23147202 -551.97106934]
[76.28427124 -551.25701904]
[90.76647186 -547.09014893]
[103.89706421 -539.69525146]
[114.96792603 -529.47113037]
[123.38203430 -516.96917725]
[128.68562317 -502.86352539]
[130.59265137 -487.91494751]
[129.00032043 -472.92959595]
[123.99446869 -458.71557617]
[115.84506226 -446.03945923]
[104.99159241 -435.58483887]
[92.01937866 -427.91552734]
[77.62798309 -423.44512939]
[62.59352493 -422.41470337]
[60.14779663 -407.61544800]
[57.70206833 -392.81616211]
[55.25634003 -378.01690674]
[52.81061554 -363.21762085]
[52.14082718 -348.23260498]
[53.25647736 -333.27413940]
[54.37212753 -318.31567383]
[55.48777390 -303.35723877]
[56.60342407 -288.39877319]
[65.26590729 -276.28222656]
[58.57644272 -261.94482422]
[60.02586365 -247.01499939]
[61.80832672 -232.12129211]
[71.00320435 -220.40362549]
[64.96060944 -205.78179932]
[66.74308014 -190.88809204]
[68.52554321 -175.99436951]
[70.30801392 -161.10064697]
[79.50288391 -149.38299561]
[73.46029663 -134.76116943]
[75.24275970 -119.86744690]
[77.02523041 -104.97373199]
[78.80769348 -90.08001709]
[80.59015656 -75.18629456]
[82.37262726 -60.29257965]
[84.26591492 -45.41254425]
[86.26992798 -30.54701614]
[95.63824463 -18.96755219]
[89.81401825 -4.25738525]
[91.81803131 10.60814285]
[94.15351868 25.42521095]
[96.81932068 40.18642807]
[99.48511505 54.94764328]
[102.15090942 69.70886230]
[104.81670380 84.47007751]
[113.96697998 91.67519379]
[115.95141602 103.15139771]
[109.75188446 113.01075745]
[112.19760895 127.81002808]
[115.07048798 131.06587219]
[116.60367584 134.70095825]
[116.84245300 138.24757385]
[115.97936249 141.30070496]
[114.32096100 143.56076050]
[115.88148499 158.47937012]
[117.44200134 173.39796448]
[120.11599731 176.81904602]
[121.43009949 180.53894043]
[121.45735931 184.09347534]
[120.41407013 187.08982849]
[118.62408447 189.24716187]
[119.29386902 204.23220825]
[119.96366119 219.21723938]
[130.23114014 234.50318909]
[121.54256439 249.75035095]
[122.43538666 264.72375488]
[123.32820129 279.69714355]
[124.22101593 294.67056274]
[125.11383057 309.64398193]
[126.00664520 324.61737061]
[127.45606232 339.54718018]
[129.46008301 354.41271973]
[131.46409607 369.27822876]
[141.22923279 377.70468140]
[142.59234619 390.12747192]
[135.36483765 399.82745361]
[137.14730835 414.72116089]
[138.92977905 429.61486816]
[148.25213623 442.39782715]
[142.08206177 455.95437622]
[143.86451721 470.84808350]
[155.24047852 485.32803345]
[147.71000671 501.17916870]
[149.71401978 516.04473877]
[151.71803284 530.91021729]
[153.72204590 545.77575684]
[168.25099182 550.45257568]
[179.30601501 560.97631836]
[184.69210815 575.25750732]
[183.33988953 590.46063232]
[175.51783752 603.56701660]
[162.77900696 611.97448730]
[147.65272522 614.01367188]
[133.14230347 609.27966309]
[122.12882233 598.71246338]
[116.79899597 584.41015625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[8 195]
[9 194]
[11 192]
[12 191]
[13 190]
[15 187]
[16 186]
[17 185]
[23 184]
[24 183]
[25 182]
[26 181]
[27 180]
[28 179]
[31 177]
[32 176]
[33 175]
[34 170]
[35 169]
[36 168]
[37 163]
[38 162]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[48 154]
[49 153]
[51 151]
[52 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[61 142]
[62 141]
[63 140]
[64 139]
[66 137]
[67 136]
[71 135]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
