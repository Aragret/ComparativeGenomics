%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[71.64659882 656.85125732]
[61.13251877 667.79742432]
[47.37257004 674.20275879]
[32.22766876 675.20098877]
[17.74604225 670.65710449]
[5.88621140 661.18560791]
[-1.74787915 648.06750488]
[-4.12378168 633.07684326]
[-0.92017519 618.24102783]
[7.42967939 605.56646729]
[19.79653168 596.76733398]
[34.50786972 593.03356934]
[36.29033279 578.13983154]
[38.07279968 563.24609375]
[39.85526657 548.35241699]
[41.63773346 533.45867920]
[32.33485031 524.54321289]
[29.82814598 511.70581055]
[35.25268555 499.59033203]
[46.83260345 492.71136475]
[48.83662033 477.84585571]
[50.84063339 462.98031616]
[52.84464645 448.11477661]
[54.84865952 433.24926758]
[56.85267258 418.38372803]
[54.63098526 411.33489990]
[58.99878311 403.31243896]
[61.22389984 388.47839355]
[63.33852386 373.62817383]
[65.34253693 358.76266479]
[67.34654999 343.89712524]
[69.35056305 329.03161621]
[71.35457611 314.16607666]
[73.35858917 299.30053711]
[75.25188446 284.42050171]
[77.03434753 269.52679443]
[78.81681824 254.63307190]
[80.48835754 239.72650146]
[82.04888153 224.80789185]
[74.04979706 209.18798828]
[84.98958588 194.37574768]
[86.32781982 179.43556213]
[87.66605377 164.49537659]
[88.89303589 149.54563904]
[90.00868225 134.58718872]
[91.12432861 119.62873840]
[92.23998260 104.67028046]
[90.16294861 101.42092896]
[89.52827454 97.27182007]
[90.70567322 92.88767242]
[93.75413513 89.07365417]
[95.53659821 74.17993927]
[97.31906891 59.28622437]
[99.10153198 44.39250565]
[100.77307129 29.48593140]
[102.33359528 14.56732655]
[103.89411926 -0.35127780]
[105.45464325 -15.26988220]
[107.01516724 -30.18848801]
[93.89661407 -22.91499901]
[79.97314453 -28.49505997]
[75.50862885 -42.81525803]
[83.79412842 -55.31927490]
[98.72189331 -56.78961563]
[109.28717804 -46.14395905]
[111.95297241 -60.90517426]
[114.61876678 -75.66638947]
[113.00599670 -79.69788361]
[112.78247833 -83.63674164]
[113.74848938 -87.05758667]
[115.58669281 -89.64363098]
[117.90772247 -91.21556854]
[121.44738770 -105.79194641]
[124.98706055 -120.36832428]
[128.52673340 -134.94470215]
[132.06640625 -149.52107239]
[135.38867188 -164.14852905]
[138.49278259 -178.82383728]
[141.59689331 -193.49913025]
[144.70100403 -208.17443848]
[147.80511475 -222.84974670]
[141.69268799 -240.21983337]
[153.92260742 -252.80537415]
[156.80787659 -267.52526855]
[159.69316101 -282.24514771]
[154.75482178 -297.27590942]
[164.79574585 -308.27722168]
[159.85742188 -323.30798340]
[169.89834595 -334.30929565]
[155.67233276 -339.13671875]
[142.21672058 -345.81729126]
[129.77163696 -354.23175049]
[118.55916595 -364.22994995]
[108.77941895 -375.63348389]
[100.60693359 -388.23876953]
[94.18754578 -401.82092285]
[89.63581848 -416.13754272]
[87.03298950 -430.93310547]
[86.42549896 -445.94357300]
[87.82419586 -460.90109253]
[91.20411682 -475.53869629]
[96.50495148 -489.59518433]
[103.63208008 -502.81967163]
[112.45832825 -514.97619629]
[122.82617950 -525.84777832]
[134.55059814 -535.24041748]
[147.42234802 -542.98645020]
[161.21173096 -548.94769287]
[175.67265320 -553.01776123]
[190.54704285 -555.12396240]
[205.56942749 -555.22875977]
[220.47175598 -553.33026123]
[234.98805237 -549.46234131]
[248.85925293 -543.69409180]
[261.83782959 -536.12835693]
[273.69213867 -526.90020752]
[284.21066284 -516.17431641]
[293.20562744 -504.14215088]
[300.51657104 -491.01834106]
[306.01300049 -477.03720093]
[309.59680176 -462.44815063]
[311.20404053 -447.51162720]
[310.80603027 -432.49414062]
[308.40985107 -417.66369629]
[304.05831909 -403.28497314]
[297.82904053 -389.61459351]
[289.83319092 -376.89648438]
[280.21350098 -365.35766602]
[269.14160156 -355.20397949]
[256.81512451 -346.61672974]
[243.45402527 -339.74908447]
[229.29675293 -334.72366333]
[214.59594727 -331.63009644]
[199.61399841 -330.52365112]
[184.61824036 -331.42404175]
[189.76293945 -317.44613647]
[179.51564026 -305.39196777]
[184.66033936 -291.41406250]
[174.41304016 -279.35989380]
[171.52777100 -264.63998413]
[168.64250183 -249.92010498]
[175.12854004 -239.70942688]
[172.84524536 -227.42242432]
[162.48040771 -219.74563599]
[159.37629700 -205.07032776]
[156.27218628 -190.39503479]
[153.16807556 -175.71972656]
[150.06396484 -161.04441833]
[151.87202454 -156.62402344]
[150.92240906 -151.02087402]
[146.64277649 -145.98139954]
[143.10311890 -131.40502930]
[139.56344604 -116.82865143]
[136.02377319 -102.25227356]
[132.48410034 -87.67589569]
[129.37998962 -73.00059509]
[126.71418762 -58.23937988]
[124.04839325 -43.47816086]
[121.93376923 -28.62796402]
[120.37324524 -13.70935917]
[118.81272125 1.20924520]
[117.25219727 16.12784958]
[115.69167328 31.04645538]
[118.12225342 38.02600479]
[113.99524689 46.17497253]
[112.21278381 61.06868744]
[110.43031311 75.96240997]
[108.64785004 90.85612488]
[107.19843292 105.78593445]
[106.08278656 120.74438477]
[104.96713257 135.70283508]
[103.85148621 150.66128540]
[106.33395386 159.45191956]
[102.60623932 165.83361816]
[101.26800537 180.77380371]
[99.92977142 195.71397400]
[107.58607483 206.09396362]
[106.16387939 218.51011658]
[96.96748352 226.36842346]
[95.40695953 241.28701782]
[97.62659454 250.14767456]
[93.71053314 256.41552734]
[91.92807007 271.30926514]
[90.14559937 286.20297241]
[92.23307037 295.09567261]
[88.22412109 301.30456543]
[86.22010803 316.17007446]
[84.21609497 331.03561401]
[82.21208191 345.90115356]
[80.20806122 360.76666260]
[78.20404816 375.63220215]
[80.15888977 384.55499268]
[76.05794525 390.70349121]
[73.83282471 405.53753662]
[71.71820068 420.38775635]
[69.71418762 435.25326538]
[67.71017456 450.11880493]
[65.70616150 464.98431396]
[63.70214844 479.84985352]
[61.69813156 494.71539307]
[72.55731201 508.43023682]
[70.18438721 525.42095947]
[56.53144836 535.24114990]
[54.74898529 550.13488770]
[52.96651840 565.02856445]
[51.18405151 579.92230225]
[49.40158463 594.81604004]
[62.81636429 601.91589355]
[72.75754547 613.38488770]
[77.88066864 627.67187500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 207]
[13 206]
[14 205]
[15 204]
[16 203]
[20 200]
[21 199]
[22 198]
[23 197]
[24 196]
[25 195]
[27 194]
[28 193]
[29 191]
[30 190]
[31 189]
[32 188]
[33 187]
[34 186]
[35 184]
[36 183]
[37 182]
[38 180]
[39 179]
[41 176]
[42 175]
[43 174]
[44 172]
[45 171]
[46 170]
[47 169]
[51 168]
[52 167]
[53 166]
[54 165]
[55 163]
[56 162]
[57 161]
[58 160]
[59 159]
[65 158]
[66 157]
[67 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[77 148]
[78 147]
[79 146]
[80 145]
[81 144]
[83 141]
[84 140]
[85 139]
[87 137]
[89 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
