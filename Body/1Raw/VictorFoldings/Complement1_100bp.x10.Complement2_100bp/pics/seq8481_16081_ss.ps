%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[160.66653442 687.46356201]
[147.00645447 681.25903320]
[133.67262268 674.38128662]
[120.69820404 666.84753418]
[108.11544037 658.67633057]
[95.95561218 649.88812256]
[84.24895477 640.50476074]
[73.02458191 630.54943848]
[62.31038666 620.04705811]
[52.13301468 609.02368164]
[42.51776123 597.50671387]
[33.48854065 585.52478027]
[25.06779289 573.10766602]
[17.27645683 560.28619385]
[10.13390255 547.09234619]
[3.65788817 533.55883789]
[-2.13548660 519.71942139]
[-7.23181820 505.60836792]
[-11.61843681 491.26083374]
[-15.28443527 476.71249390]
[-18.22070122 461.99948120]
[-20.41993141 447.15841675]
[-21.87666130 432.22616577]
[-22.58726883 417.23989868]
[-22.54998779 402.23678589]
[-21.76490784 387.25421143]
[-20.23398209 372.32940674]
[-17.96101952 357.49945068]
[-14.95166779 342.80120850]
[-11.21340942 328.27127075]
[-6.75553894 313.94570923]
[-1.58913946 299.86019897]
[4.27294493 286.04968262]
[10.81614017 272.54855347]
[18.02417946 259.39035034]
[25.87914085 246.60780334]
[34.36149597 234.23269653]
[43.45015717 222.29576111]
[53.12252808 210.82670593]
[63.35456085 199.85403442]
[74.12081909 189.40504456]
[85.39453125 179.50567627]
[97.14767456 170.18057251]
[109.35102844 161.45291138]
[121.97425079 153.34437561]
[114.50650787 140.33541870]
[107.03877258 127.32646942]
[99.57102966 114.31752014]
[87.57736206 107.13116455]
[87.42002106 93.15022278]
[79.95227814 80.14126587]
[72.48453522 67.13231659]
[65.01679230 54.12336349]
[57.54905319 41.11441040]
[50.08131409 28.10545921]
[36.42029953 34.32728958]
[22.23668671 39.24253082]
[7.65512133 42.80798340]
[-7.19624805 44.99231339]
[-22.18690491 45.77632523]
[-37.18510818 45.15312958]
[-52.05905151 43.12820435]
[-66.67801666 39.71934128]
[-80.91352844 34.95650101]
[-94.64048004 28.88154030]
[-107.73825073 21.54784584]
[-120.09171295 13.01986980]
[-131.59231567 3.37255645]
[-142.13897705 -7.30931044]
[-151.63902283 -18.93185616]
[-160.00897217 -31.39294052]
[-167.17523193 -44.58304977]
[-173.07485962 -58.38626862]
[-177.65600586 -72.68128967]
[-180.87838745 -87.34249115]
[-182.71369934 -102.24102020]
[-183.14581299 -117.24594116]
[-182.17092896 -132.22540283]
[-179.79760742 -147.04774475]
[-176.04672241 -161.58270264]
[-170.95121765 -175.70256042]
[-164.55589294 -189.28321838]
[-156.91694641 -202.20533752]
[-148.10150146 -214.35533142]
[-138.18702698 -225.62643433]
[-127.26068115 -235.91960144]
[-115.41845703 -245.14436340]
[-102.76444244 -253.21966553]
[-89.40984344 -260.07452393]
[-75.47201538 -265.64868164]
[-61.07345200 -269.89318848]
[-46.34069061 -272.77075195]
[-31.40320778 -274.25604248]
[-16.39227676 -274.33599854]
[-1.43981469 -273.00994873]
[13.32277012 -270.28955078]
[27.76574135 -266.19873047]
[41.76216888 -260.77337646]
[55.18905640 -254.06118774]
[67.92839813 -246.12118530]
[79.86823273 -237.02313232]
[90.90364075 -226.84696960]
[100.93764496 -215.68214417]
[109.88204193 -203.62677002]
[117.65824890 -190.78678894]
[124.19792175 -177.27503967]
[129.44357300 -163.21028137]
[133.34912109 -148.71609497]
[135.88023376 -133.91989136]
[137.01467896 -118.95166779]
[136.74247742 -103.94299316]
[135.06600952 -89.02575684]
[132.00003052 -74.33105469]
[127.57146454 -59.98803329]
[121.81924438 -46.12273407]
[114.79392242 -32.85701370]
[106.55723572 -20.30745506]
[97.18157196 -8.58434486]
[86.74931335 2.20929170]
[75.35216522 11.97859764]
[63.09026718 20.63771820]
[70.55800629 33.64667130]
[78.02574921 46.65562439]
[85.49349213 59.66457367]
[92.96122742 72.67353058]
[100.42897034 85.68247986]
[112.42263794 92.86883545]
[112.57997894 106.84977722]
[120.04772186 119.85873413]
[127.51546478 132.86769104]
[134.98320007 145.87663269]
[148.35098267 139.06512451]
[162.04165649 132.92842102]
[176.02120972 127.48176575]
[190.25488281 122.73870850]
[204.70727539 118.71102905]
[219.34248352 115.40876007]
[234.12408447 112.84009552]
[249.01535034 111.01142883]
[263.97927856 109.92730713]
[278.97860718 109.59042358]
[293.97610474 110.00161743]
[308.93447876 111.15985870]
[323.81649780 113.06227875]
[338.58520508 115.70414734]
[353.20385742 119.07888794]
[367.63610840 123.17810822]
[381.84613037 127.99163055]
[395.79852295 133.50747681]
[409.45861816 139.71194458]
[422.79248047 146.58958435]
[435.76696777 154.12333679]
[448.34976196 162.29443359]
[460.50964355 171.08258057]
[472.21633911 180.46591187]
[483.44076538 190.42112732]
[494.15502930 200.92344666]
[504.33245850 211.94679260]
[513.94775391 223.46371460]
[522.97705078 235.44561768]
[531.39782715 247.86270142]
[539.18927002 260.68408203]
[546.33190918 273.87789917]
[552.80798340 287.41137695]
[558.60144043 301.25079346]
[563.69781494 315.36181641]
[568.08453369 329.70932007]
[571.75061035 344.25762939]
[574.68695068 358.97061157]
[576.88623047 373.81167603]
[578.34301758 388.74392700]
[579.05371094 403.73022461]
[579.01654053 418.73330688]
[578.23150635 433.71588135]
[576.70068359 448.64071655]
[574.42779541 463.47067261]
[571.41851807 478.16891479]
[567.68035889 492.69888306]
[563.22253418 507.02444458]
[558.05621338 521.10998535]
[552.19421387 534.92053223]
[545.65106201 548.42169189]
[538.44311523 561.57995605]
[530.58819580 574.36254883]
[522.10589600 586.73767090]
[513.01733398 598.67468262]
[503.34500122 610.14379883]
[493.11303711 621.11651611]
[482.34683228 631.56555176]
[471.07315063 641.46496582]
[459.32006836 650.79016113]
[447.11676025 659.51788330]
[434.49359131 667.62646484]
[421.48190308 675.09576416]
[408.11410522 681.90722656]
[394.42340088 688.04382324]
[380.44381714 693.49041748]
[366.21011353 698.23339844]
[351.75769043 702.26098633]
[337.12246704 705.56323242]
[322.34085083 708.13177490]
[307.44958496 709.96038818]
[292.48565674 711.04443359]
[277.48629761 711.38122559]
[262.48880005 710.96997070]
[247.53045654 709.81164551]
[232.64845276 707.90911865]
[217.87976074 705.26721191]
[203.26112366 701.89239502]
[188.82887268 697.79309082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 131]
[46 130]
[47 129]
[48 128]
[50 126]
[51 125]
[52 124]
[53 123]
[54 122]
[55 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
