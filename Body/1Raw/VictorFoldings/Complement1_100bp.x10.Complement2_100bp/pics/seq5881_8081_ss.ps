%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[95.32040405 248.36859131]
[107.96754456 239.74835205]
[106.18507385 224.85464478]
[104.40261078 209.96092224]
[102.62014771 195.06719971]
[93.30776978 187.34669495]
[91.70087433 174.95307922]
[99.20178223 164.46026611]
[97.64125824 149.54167175]
[96.08074188 134.62306213]
[87.06134033 122.76979828]
[93.32096100 108.23956299]
[91.20633698 93.38936615]
[88.54054260 78.62815094]
[85.87474060 63.86693192]
[83.20894623 49.10571671]
[80.54315186 34.34449768]
[77.87735748 19.58328056]
[75.21156311 4.82206345]
[60.85218048 -0.44627446]
[51.12201309 -12.11763477]
[48.55730438 -26.99340820]
[53.74815750 -41.06149292]
[65.20654297 -50.57836533]
[62.54075241 -65.33958435]
[59.87495422 -80.10079956]
[49.74328995 -88.08279419]
[47.82683182 -100.43232727]
[54.61400604 -110.44535828]
[52.16827774 -125.24462891]
[42.28442001 -137.59857178]
[47.84301758 -151.41708374]
[32.94455719 -149.65205383]
[17.98084259 -148.57192993]
[2.98334193 -148.17897034]
[-12.01640415 -148.47399902]
[-26.98685074 -149.45642090]
[-41.89651871 -151.12416077]
[-56.71404266 -153.47369385]
[-71.40827179 -156.50009155]
[-85.94830322 -160.19697571]
[-100.30355072 -164.55661011]
[-114.44382477 -169.56977844]
[-128.33940125 -175.22596741]
[-141.96104431 -181.51327515]
[-155.28012085 -188.41848755]
[-168.26860046 -195.92706299]
[-180.89918518 -204.02322388]
[-193.14529419 -212.68994141]
[-204.98120117 -221.90898132]
[-216.38200378 -231.66098022]
[-227.32371521 -241.92539978]
[-237.78332520 -252.68066406]
[-247.73884583 -263.90417480]
[-257.16934204 -275.57229614]
[-266.05499268 -287.66052246]
[-274.37707520 -300.14340210]
[-282.11810303 -312.99468994]
[-289.26181030 -326.18737793]
[-295.79318237 -339.69369507]
[-301.69845581 -353.48526001]
[-306.96520996 -367.53305054]
[-311.58239746 -381.80752563]
[-315.54028320 -396.27868652]
[-318.83056641 -410.91610718]
[-321.44628906 -425.68896484]
[-323.38198853 -440.56622314]
[-324.63360596 -455.51657104]
[-325.19845581 -470.50857544]
[-325.07537842 -485.51071167]
[-324.26464844 -500.49142456]
[-322.76794434 -515.41925049]
[-320.58840942 -530.26275635]
[-317.73065186 -544.99066162]
[-314.20068359 -559.57214355]
[-310.00592041 -573.97644043]
[-305.15515137 -588.17321777]
[-299.65863037 -602.13275146]
[-293.52789307 -615.82556152]
[-286.77581787 -629.22290039]
[-279.41662598 -642.29663086]
[-271.46578979 -655.01916504]
[-262.94003296 -667.36383057]
[-253.85725403 -679.30462646]
[-244.23660278 -690.81646729]
[-234.09828186 -701.87512207]
[-223.46362305 -712.45733643]
[-212.35498047 -722.54089355]
[-200.79573059 -732.10455322]
[-188.81016541 -741.12817383]
[-176.42350769 -749.59277344]
[-163.66180420 -757.48065186]
[-150.55187988 -764.77508545]
[-137.12130737 -771.46087646]
[-123.39834595 -777.52386475]
[-109.41184998 -782.95129395]
[-95.19122314 -787.73181152]
[-80.76638794 -791.85534668]
[-66.16766357 -795.31317139]
[-51.42575836 -798.09808350]
[-36.57167816 -800.20422363]
[-21.63665962 -801.62713623]
[-6.65210867 -802.36376953]
[8.35045910 -802.41271973]
[23.33949471 -801.77374268]
[38.28347397 -800.44824219]
[53.15097046 -798.43902588]
[67.91072083 -795.75030518]
[82.53167725 -792.38769531]
[96.98310089 -788.35833740]
[111.23458862 -783.67065430]
[125.25617981 -778.33453369]
[139.01838684 -772.36114502]
[152.49226379 -765.76312256]
[165.64945984 -758.55426025]
[178.46232605 -750.74975586]
[190.90391541 -742.36608887]
[202.94805908 -733.42083740]
[214.56942749 -723.93273926]
[225.74357605 -713.92187500]
[236.44702148 -703.40917969]
[246.65722656 -692.41687012]
[256.35275269 -680.96801758]
[265.51315308 -669.08666992]
[274.11923218 -656.79791260]
[282.15286255 -644.12744141]
[289.59713745 -631.10198975]
[296.43643188 -617.74896240]
[302.65631104 -604.09637451]
[308.24374390 -590.17303467]
[313.18695068 -576.00811768]
[317.47558594 -561.63153076]
[321.10055542 -547.07336426]
[324.05426025 -532.36437988]
[326.33053589 -517.53540039]
[327.92453003 -502.61770630]
[328.83294678 -487.64257812]
[329.05383301 -472.64154053]
[328.58673096 -457.64617920]
[327.43264771 -442.68798828]
[325.59399414 -427.79843140]
[323.07464600 -413.00881958]
[319.87988281 -398.35028076]
[316.01641846 -383.85363770]
[311.49240112 -369.54934692]
[306.31735229 -355.46749878]
[300.50213623 -341.63772583]
[294.05899048 -328.08911133]
[287.00143433 -314.85012817]
[279.34436035 -301.94860840]
[271.10385132 -289.41174316]
[262.29721069 -277.26583862]
[252.94299316 -265.53649902]
[243.06086731 -254.24830627]
[232.67160034 -243.42506409]
[221.79704285 -233.08952332]
[210.46008301 -223.26339722]
[198.68453979 -213.96737671]
[186.49519348 -205.22099304]
[173.91766357 -197.04264832]
[160.97840881 -189.44953918]
[147.70465088 -182.45764160]
[134.12428284 -176.08164978]
[120.26589203 -170.33497620]
[106.15859985 -165.22970581]
[91.83208466 -160.77658081]
[77.31647491 -156.98495483]
[62.64228821 -153.86280823]
[72.35121155 -142.56741333]
[66.96754456 -127.69035339]
[69.41327667 -112.89108276]
[81.26305389 -99.94699097]
[74.63616943 -82.76659393]
[77.30197144 -68.00537872]
[79.96776581 -53.24416351]
[94.03116608 -48.33638763]
[103.81487274 -36.97262573]
[106.61544037 -22.13944626]
[101.58233643 -7.80191851]
[89.97277832 2.15626788]
[92.63857269 16.91748428]
[95.30436707 31.67870140]
[97.97016907 46.43991852]
[100.63596344 61.20113754]
[103.30175781 75.96235657]
[105.96755219 90.72357178]
[116.53439331 80.07735443]
[131.46202087 81.54910278]
[139.74633789 94.05390930]
[135.28045654 108.37368011]
[121.35646820 113.95242310]
[108.23956299 106.67903900]
[117.37057495 119.59938049]
[110.99934387 133.06254578]
[112.55986786 147.98114014]
[114.12039185 162.89974976]
[125.27950287 177.54747009]
[117.51386261 193.28474426]
[119.29632568 208.17845154]
[121.07879639 223.07217407]
[122.86125946 237.96589661]
[137.18540955 243.35823059]
[147.35420227 254.79737854]
[151.03092957 269.65472412]
[147.37069702 284.51611328]
[137.21461487 295.96655273]
[122.89645386 301.37478638]
[107.70644379 299.49807739]
[95.13512421 290.76760864]
[88.07130432 277.18966675]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 201]
[3 200]
[4 199]
[5 198]
[8 196]
[9 195]
[10 194]
[12 192]
[13 186]
[14 185]
[15 184]
[16 183]
[17 182]
[18 181]
[19 180]
[24 175]
[25 174]
[26 173]
[29 171]
[30 170]
[32 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
