%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[91.98562622 572.07232666]
[79.98640442 563.05432129]
[68.84385681 552.99700928]
[58.64770889 541.98132324]
[49.48005295 530.09600830]
[41.41470718 517.43676758]
[34.51660919 504.10552979]
[28.84129524 490.20959473]
[24.43446350 475.86087036]
[21.33159637 461.17486572]
[19.55767632 446.26983643]
[19.12698364 431.26580811]
[20.04298973 416.28359985]
[22.29831886 401.44378662]
[25.87480927 386.86590576]
[30.74366570 372.66729736]
[36.86568832 358.96228027]
[44.19158554 345.86123657]
[52.66236877 333.46963501]
[62.20983505 321.88720703]
[72.75711823 311.20727539]
[84.21929169 301.51580811]
[96.50405884 292.89080811]
[109.51252747 285.40173340]
[123.13993835 279.10888672]
[137.27658081 274.06295776]
[133.52029419 259.54089355]
[129.76399231 245.01884460]
[126.00768280 230.49678040]
[115.32975006 220.11260986]
[119.36468506 204.81457520]
[115.60838318 190.29251099]
[111.85208130 175.77046204]
[108.09577942 161.24839783]
[104.33947754 146.72633362]
[93.66154480 136.34216309]
[97.69647217 121.04412842]
[86.08751678 115.95632935]
[79.46580505 105.14862823]
[80.20503235 92.49527740]
[88.04020691 82.53217316]
[84.50053406 67.95579529]
[80.22090149 62.91632080]
[79.27129364 57.31317520]
[81.07935333 52.89277267]
[77.97524261 38.21747208]
[67.54960632 26.31718636]
[72.48563385 12.26425266]
[69.38152313 -2.41104984]
[54.53536224 -0.23366019]
[39.58177948 1.00723171]
[24.57978821 1.30672860]
[9.58859253 0.66364843]
[-5.33264065 -0.91947079]
[-20.12502480 -3.43638110]
[-34.73018265 -6.87714958]
[-49.09046936 -11.22819710]
[-63.14921570 -16.47235107]
[-76.85093689 -22.58891487]
[-90.14155579 -29.55375099]
[-102.96862030 -37.33937073]
[-115.28150940 -45.91505051]
[-127.03162384 -55.24694061]
[-138.17260742 -65.29821777]
[-148.66046143 -76.02920532]
[-158.45382690 -87.39756012]
[-167.51403809 -99.35841370]
[-175.80534363 -111.86457062]
[-183.29501343 -124.86665344]
[-189.95349121 -138.31336975]
[-195.75450134 -152.15164185]
[-200.67515564 -166.32685852]
[-204.69601440 -180.78306580]
[-207.80123901 -195.46322632]
[-209.97854614 -210.30940247]
[-211.21936035 -225.26298523]
[-211.51878357 -240.26498413]
[-210.87562561 -255.25617981]
[-209.29243469 -270.17739868]
[-206.77543640 -284.96975708]
[-203.33459473 -299.57492065]
[-198.98347473 -313.93518066]
[-193.73924255 -327.99389648]
[-187.62260437 -341.69558716]
[-180.65769958 -354.98617554]
[-172.87202454 -367.81317139]
[-164.29627991 -380.12603760]
[-154.96432495 -391.87609863]
[-144.91299438 -403.01702881]
[-134.18194580 -413.50482178]
[-122.81353760 -423.29812622]
[-110.85263824 -432.35827637]
[-98.34644318 -440.64950562]
[-85.34431458 -448.13912964]
[-71.89756775 -454.79754639]
[-58.05926514 -460.59848022]
[-43.88402557 -465.51904297]
[-29.42779160 -469.53985596]
[-14.74761581 -472.64498901]
[0.09856675 -474.82220459]
[15.05216312 -476.06295776]
[30.05415916 -476.36230469]
[45.04534531 -475.71905518]
[59.96656418 -474.13577271]
[74.75891876 -471.61871338]
[89.36404419 -468.17779541]
[103.72428131 -463.82659912]
[117.78297424 -458.58230591]
[131.48463440 -452.46557617]
[144.77517700 -445.50061035]
[157.60215759 -437.71487427]
[169.91496277 -429.13906860]
[181.66497803 -419.80703735]
[192.80584717 -409.75564575]
[203.29360962 -399.02456665]
[213.08685303 -387.65609741]
[222.14694214 -375.69512939]
[230.43811035 -363.18890381]
[237.92764282 -350.18673706]
[244.58598328 -336.73995972]
[250.38685608 -322.90161133]
[255.30735779 -308.72634888]
[259.32806396 -294.27011108]
[262.43313599 -279.58990479]
[264.61029053 -264.74371338]
[265.85095215 -249.79011536]
[266.15020752 -234.78811646]
[265.50689697 -219.79693604]
[263.92355347 -204.87573242]
[261.40640259 -190.08337402]
[257.96539307 -175.47827148]
[253.61413574 -161.11805725]
[248.36975098 -147.05940247]
[242.25297546 -133.35777283]
[235.28793335 -120.06726074]
[227.50210571 -107.24031830]
[218.92623901 -94.92756653]
[209.59416199 -83.17758942]
[199.54272461 -72.03677368]
[188.81156921 -61.54907608]
[177.44305420 -51.75588989]
[165.48205566 -42.69586563]
[152.97578430 -34.40476227]
[139.97357178 -26.91529465]
[126.52675629 -20.25702477]
[112.68839264 -14.45623016]
[98.51309967 -9.53580189]
[84.05682373 -5.51516008]
[87.16093445 9.16014194]
[97.36454010 20.01075172]
[92.65054321 35.11336136]
[95.75465393 49.78866196]
[99.07691193 64.41612244]
[102.61658478 78.99250031]
[116.90313721 87.25458527]
[120.91690063 103.26263428]
[112.21853638 117.28782654]
[123.16514587 128.71070862]
[118.86154175 142.97003174]
[122.61783600 157.49209595]
[126.37413788 172.01416016]
[130.13044739 186.53620911]
[133.88673401 201.05827332]
[144.83334351 212.48115540]
[140.52973938 226.74047852]
[144.28604126 241.26254272]
[148.04234314 255.78460693]
[151.79864502 270.30667114]
[166.60894775 267.86514282]
[181.57849121 266.76101685]
[196.58674622 267.00323486]
[211.51286316 268.58981323]
[226.23667908 271.50799561]
[240.63961792 275.73428345]
[254.60574341 281.23461914]
[268.02258301 287.96472168]
[280.78213501 295.87045288]
[292.78161621 304.88809204]
[303.92446899 314.94509888]
[314.12097168 325.96044922]
[323.28897095 337.84545898]
[331.35470581 350.50445557]
[338.25323486 363.83551025]
[343.92895508 377.73126221]
[348.33621216 392.07986450]
[351.43954468 406.76577759]
[353.21392822 421.67074585]
[353.64508057 436.67474365]
[352.72952271 451.65701294]
[350.47463989 466.49688721]
[346.89859009 481.07485962]
[342.03018188 495.27362061]
[335.90856934 508.97882080]
[328.58306885 522.08007812]
[320.11267090 534.47198486]
[310.56555176 546.05468750]
[300.01861572 556.73492432]
[288.55673218 566.42675781]
[276.27221680 575.05212402]
[263.26397705 582.54156494]
[249.63674927 588.83483887]
[235.50025940 593.88122559]
[220.96832275 597.64007568]
[206.15794373 600.08117676]
[191.18836975 601.18481445]
[176.18013000 600.94213867]
[161.25405884 599.35510254]
[146.53033447 596.43646240]
[132.12751770 592.20977783]
[118.16156769 586.70898438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 168]
[27 167]
[28 166]
[29 165]
[31 163]
[32 162]
[33 161]
[34 160]
[35 159]
[37 157]
[41 154]
[42 153]
[45 152]
[46 151]
[48 149]
[49 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
