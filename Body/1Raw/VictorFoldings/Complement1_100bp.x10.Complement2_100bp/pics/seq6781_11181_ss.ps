%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[269.27828979 409.23962402]
[277.88763428 396.92733765]
[288.09338379 385.90206909]
[299.70541382 376.36923218]
[291.85366821 363.58840942]
[284.00189209 350.80755615]
[276.15014648 338.02673340]
[268.29840088 325.24588013]
[260.44662476 312.46502686]
[252.59487915 299.68420410]
[238.09338379 296.48385620]
[229.94851685 283.63412476]
[233.40364075 268.44531250]
[225.55189514 255.66445923]
[217.70013428 242.88362122]
[208.65013123 230.92127991]
[198.48658752 219.88940430]
[188.32304382 208.85752869]
[178.15950012 197.82565308]
[167.99595642 186.79377747]
[157.83239746 175.76190186]
[150.98835754 172.97250366]
[147.60116577 164.48928833]
[137.60299683 153.30731201]
[127.60482025 142.12533569]
[113.35363770 137.79486084]
[109.92308807 122.35005951]
[99.92491913 111.16808319]
[89.84378052 100.06085205]
[79.68023682 89.02897644]
[69.51668549 77.99710083]
[59.35314178 66.96522522]
[49.18959427 55.93334579]
[39.02604675 44.90146637]
[34.04303741 43.34689331]
[30.50809860 40.33732605]
[28.73296356 36.66799927]
[28.66857338 33.14263535]
[19.00776291 21.66793442]
[9.34695148 10.19323444]
[-0.31385851 -1.28146553]
[-15.12079525 -6.85508204]
[-17.39896584 -21.57443047]
[-27.05977631 -33.04912949]
[-36.72058487 -44.52383041]
[-46.38139725 -55.99853134]
[-42.88471985 -41.41178131]
[-43.22938919 -26.41574097]
[-47.39253998 -12.00504494]
[-55.09804916 0.86449844]
[-65.83483887 11.33929825]
[-78.89076996 18.72459793]
[-93.39988708 22.53055954]
[-108.39987183 22.50474358]
[-122.89580536 18.64886665]
[-135.92623901 11.21867085]
[-146.62690735 0.70697707]
[-154.28807068 -12.18901253]
[-158.40159607 -26.61395264]
[-158.69465637 -41.61109161]
[-155.14778137 -56.18571854]
[-147.99626160 -69.37115479]
[-137.71441650 -80.29285431]
[-124.98419189 -88.22642517]
[-110.64995575 -92.64565277]
[-95.66243744 -93.25743866]
[-81.01570129 -90.02119446]
[-67.68122864 -83.15157318]
[-56.54009247 -73.10031128]
[-68.76653290 -83.14146423]
[-66.18787384 -97.81114960]
[-71.64322662 -111.78395081]
[-77.09858704 -125.75674438]
[-82.55393982 -139.72953796]
[-88.00930023 -153.70234680]
[-102.73860931 -150.67654419]
[-117.76741791 -150.18370056]
[-132.66331482 -152.23800659]
[-146.99772644 -156.78033447]
[-160.35821533 -163.68000793]
[-172.36036682 -172.73849487]
[-182.65885925 -183.69519043]
[-190.95739746 -196.23481750]
[-197.01719666 -209.99661255]
[-200.66390991 -224.58459473]
[-201.79263306 -239.57907104]
[-200.37086487 -254.54858398]
[-196.43951416 -269.06246948]
[-190.11170959 -282.70309448]
[-181.56950378 -295.07803345]
[-171.05868530 -305.83117676]
[-158.88165283 -314.65319824]
[-145.38877869 -321.29025269]
[-130.96826172 -325.55133057]
[-116.03503418 -327.31390381]
[-101.01873779 -326.52722168]
[-86.35142517 -323.21389771]
[-72.45510864 -317.46932983]
[-59.72960663 -309.45870972]
[-48.54105759 -299.41259766]
[-39.21138382 -287.62002563]
[-32.00901413 -274.42025757]
[-27.14117241 -260.19308472]
[-24.74792290 -245.34786987]
[-24.89812088 -230.31173706]
[-27.58744431 -215.51728821]
[-32.73851776 -201.39021301]
[-40.20313263 -188.33695984]
[-49.76651764 -176.73309326]
[-61.15351486 -166.91249084]
[-74.03649902 -159.15769958]
[-68.58114624 -145.18490601]
[-63.12578583 -131.21209717]
[-57.67042923 -117.23930359]
[-52.21507263 -103.26651001]
[-40.37883759 -94.22478485]
[-42.56729507 -78.55566406]
[-34.90669632 -65.65933990]
[-25.24588585 -54.18463898]
[-15.58507633 -42.70994186]
[-5.92426586 -31.23524094]
[8.19166470 -26.48237038]
[11.16084194 -10.94227600]
[20.82165146 0.53242415]
[30.48246193 12.00712395]
[40.14327240 23.48182487]
[50.05792236 34.73791885]
[60.22146988 45.76979828]
[70.38501740 56.80167389]
[80.54856110 67.83354950]
[90.71211243 78.86543274]
[100.87565613 89.89730835]
[108.21926880 93.22054291]
[111.10689545 101.16991425]
[121.10506439 112.35189056]
[136.07138062 117.48217773]
[138.78678894 132.12716675]
[148.78497314 143.30914307]
[158.78314209 154.49111938]
[168.86427307 165.59835815]
[179.02783203 176.63023376]
[189.19137573 187.66210938]
[199.35491943 198.69398499]
[209.51846313 209.72586060]
[219.68200684 220.75773621]
[216.79740906 206.03771973]
[220.06990051 191.39904785]
[228.94802856 179.30859375]
[241.93563843 171.80381775]
[256.84411621 170.14939880]
[271.16113281 174.62414551]
[282.47399902 184.47398376]
[288.87628174 198.03903198]
[289.28912354 213.03334045]
[283.64294434 226.93013000]
[272.88919067 237.38751221]
[258.84008789 242.64326477]
[243.86315918 241.81167603]
[230.48097229 235.03186035]
[238.33273315 247.81271362]
[246.18449402 260.59356689]
[261.29489136 264.37683105]
[269.07562256 277.45028687]
[265.37573242 291.83242798]
[273.22747803 304.61328125]
[281.07922363 317.39413452]
[288.93099976 330.17495728]
[296.78274536 342.95581055]
[304.63449097 355.73666382]
[312.48623657 368.51748657]
[326.23834229 362.46820068]
[340.68606567 358.34790039]
[355.56027222 356.23333740]
[370.58389282 356.16390991]
[385.47702026 358.14093018]
[399.96221924 362.12753296]
[413.76962280 368.04946899]
[426.64199829 375.79641724]
[438.33956909 385.22406006]
[448.64440918 396.15676880]
[457.36456299 408.39086914]
[464.33752441 421.69842529]
[469.43344116 435.83157349]
[472.55737305 450.52697754]
[473.65109253 465.51086426]
[472.69427490 480.50415039]
[469.70471191 495.22747803]
[464.73806763 509.40655518]
[457.88693237 522.77722168]
[449.27890015 535.09045410]
[439.07434082 546.11682129]
[427.46334839 555.65093994]
[414.66226196 563.51513672]
[400.90951538 569.56292725]
[386.46133423 573.68170166]
[371.58691406 575.79461670]
[356.56329346 575.86242676]
[341.67037964 573.88378906]
[327.18560791 569.89562988]
[313.37884521 563.97216797]
[300.50729370 556.22381592]
[288.81072998 546.79492188]
[278.50708008 535.86108398]
[269.78826904 523.62609863]
[262.81674194 510.31774902]
[257.72235107 496.18408203]
[254.60002136 481.48834229]
[253.50790405 466.50430298]
[254.46635437 451.51113892]
[257.45751953 436.78814697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[6 168]
[7 167]
[8 166]
[9 165]
[10 164]
[13 161]
[14 160]
[15 159]
[16 145]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
[23 139]
[24 138]
[25 137]
[27 135]
[28 134]
[29 132]
[30 131]
[31 130]
[32 129]
[33 128]
[34 127]
[38 126]
[39 125]
[40 124]
[41 123]
[43 121]
[44 120]
[45 119]
[46 118]
[69 117]
[71 115]
[72 114]
[73 113]
[74 112]
[75 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
