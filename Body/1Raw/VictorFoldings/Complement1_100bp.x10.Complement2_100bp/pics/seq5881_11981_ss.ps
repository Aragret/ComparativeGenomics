%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[189.60115051 416.58612061]
[185.43785095 402.16891479]
[182.30189514 387.49392700]
[180.20890808 372.63430786]
[179.16932678 357.66406250]
[179.18833923 342.65777588]
[180.26582336 327.69021606]
[182.39642334 312.83593750]
[185.56953430 298.16897583]
[189.76933289 283.76235962]
[194.97489929 269.68786621]
[201.16030884 256.01565552]
[208.29473877 242.81379700]
[216.34263611 230.14810181]
[225.26393127 218.08163452]
[213.86146545 208.33566284]
[202.45899963 198.58970642]
[191.05654907 188.84373474]
[179.65408325 179.09776306]
[168.25161743 169.35180664]
[156.84915161 159.60583496]
[145.44668579 149.85987854]
[138.31967163 147.90351868]
[133.94841003 139.88291931]
[122.69231415 129.96827698]
[111.43621826 120.05361938]
[100.18012238 110.13896942]
[92.53063202 107.59775543]
[88.83166504 99.99193573]
[77.72442627 89.91079712]
[62.30559540 86.36537170]
[58.08132935 72.08234406]
[47.26159668 82.47994232]
[35.75752640 92.11493683]
[23.62275696 100.94240570]
[10.91386795 108.92118073]
[-2.30988717 116.01406860]
[-15.98685265 122.18799591]
[-30.05325890 127.41417694]
[-44.44351959 131.66824341]
[-59.09054565 134.93035889]
[-73.92604065 137.18531799]
[-88.88083649 138.42260742]
[-103.88520050 138.63645935]
[-118.86917877 137.82588196]
[-133.76290894 135.99462891]
[-148.49696350 133.15127563]
[-163.00260925 129.30905151]
[-177.21224976 124.48587036]
[-191.05961609 118.70423889]
[-204.48013306 111.99110413]
[-217.41125488 104.37776184]
[-229.79267883 95.89971924]
[-241.56666565 86.59649658]
[-252.67832947 76.51147461]
[-263.07586670 65.69167328]
[-272.71078491 54.18753433]
[-281.53814697 42.05270767]
[-289.51684570 29.34376526]
[-296.60964966 16.11996269]
[-302.78347778 2.44295573]
[-308.00955200 -11.62348557]
[-312.26354980 -26.01377678]
[-315.52554321 -40.66082382]
[-317.78042603 -55.49633026]
[-319.01760864 -70.45113373]
[-319.23135376 -85.45550537]
[-318.42068481 -100.43947601]
[-316.58932495 -115.33319855]
[-313.74588013 -130.06721497]
[-309.90353394 -144.57284546]
[-305.08029175 -158.78245544]
[-299.29855347 -172.62977600]
[-292.58532715 -186.05026245]
[-284.97189331 -198.98132324]
[-276.49377441 -211.36268616]
[-267.19046021 -223.13661194]
[-257.10537720 -234.24821472]
[-246.28549194 -244.64566040]
[-234.78129578 -254.28050232]
[-222.64640808 -263.10781860]
[-209.93740845 -271.08642578]
[-196.71356201 -278.17913818]
[-183.03651428 -284.35287476]
[-168.97004700 -289.57885742]
[-154.57972717 -293.83273315]
[-139.93264771 -297.09466553]
[-125.09712982 -299.34942627]
[-110.14231873 -300.58651733]
[-95.13794708 -300.80017090]
[-80.15397644 -299.98937988]
[-65.26026917 -298.15792847]
[-50.52626419 -295.31436157]
[-36.02066040 -291.47195435]
[-21.81109047 -286.64859009]
[-7.96380568 -280.86676025]
[5.45663118 -274.15344238]
[18.38764763 -266.53994751]
[30.76894951 -258.06173706]
[42.54281235 -248.75834656]
[53.65434265 -238.67317200]
[64.05172729 -227.85322571]
[73.68649292 -216.34896851]
[82.51371002 -204.21401978]
[90.49223328 -191.50497437]
[97.58485413 -178.28106689]
[103.75849915 -164.60398865]
[108.98439789 -150.53747559]
[113.23817444 -136.14712524]
[116.50000000 -121.50003815]
[118.75466919 -106.66449738]
[119.99165344 -91.70967865]
[120.20520782 -76.70530701]
[119.39431763 -61.72134018]
[117.56277466 -46.82764435]
[114.71911621 -32.09365845]
[110.87660217 -17.58807945]
[106.05313873 -3.37854171]
[100.27122498 10.46870518]
[93.55782318 23.88909721]
[85.94422150 36.82006073]
[77.46592712 49.20130920]
[68.16246796 60.97510910]
[82.78684235 63.79946899]
[87.80557251 78.80356598]
[98.91280365 88.88470459]
[110.09477997 98.88287354]
[121.35087585 108.79752350]
[132.60696411 118.71218109]
[143.86306763 128.62683105]
[155.19265747 138.45741272]
[166.59512329 148.20336914]
[177.99758911 157.94934082]
[189.40003967 167.69531250]
[200.80250549 177.44126892]
[212.20497131 187.18724060]
[223.60743713 196.93321228]
[235.00990295 206.67916870]
[245.54016113 195.98794556]
[256.79837036 186.06614685]
[268.72839355 176.96321106]
[281.27081299 168.72448730]
[294.36312866 161.39100647]
[307.94015503 154.99932861]
[321.93420410 149.58128357]
[336.27560425 145.16386414]
[350.89285278 141.76908875]
[365.71316528 139.41384888]
[380.66271973 138.10989380]
[395.66699219 137.86372375]
[410.65124512 138.67655945]
[425.54086304 140.54434204]
[440.26162720 143.45777893]
[454.74020386 147.40234375]
[468.90447998 152.35838318]
[482.68386841 158.30123901]
[496.00970459 165.20126343]
[508.81564331 173.02409363]
[521.03790283 181.73077393]
[532.61547852 191.27789307]
[543.49084473 201.61791992]
[553.60968018 212.69932556]
[562.92169189 224.46691895]
[571.38037109 236.86204529]
[578.94366455 249.82296753]
[585.57385254 263.28509521]
[591.23791504 277.18139648]
[595.90765381 291.44262695]
[599.55981445 305.99774170]
[602.17608643 320.77420044]
[603.74359131 335.69839478]
[604.25439453 350.69601440]
[603.70605469 365.69229126]
[602.10119629 380.61251831]
[599.44793701 395.38238525]
[595.75939941 409.92828369]
[591.05401611 424.17779541]
[585.35516357 438.05987549]
[578.69128418 451.50537109]
[571.09558105 464.44732666]
[562.60589600 476.82125854]
[553.26446533 488.56549072]
[543.11791992 499.62155151]
[532.21673584 509.93432617]
[520.61529541 519.45245361]
[508.37127686 528.12847900]
[495.54580688 535.91925049]
[482.20272827 542.78588867]
[468.40850830 548.69427490]
[454.23187256 553.61486816]
[439.74346924 557.52313232]
[425.01547241 560.39971924]
[410.12121582 562.23022461]
[395.13497925 563.00555420]
[380.13134766 562.72186279]
[365.18515015 561.38049316]
[350.37075806 558.98815918]
[335.76205444 555.55682373]
[321.43176270 551.10351562]
[307.45129395 545.65045166]
[293.89031982 539.22485352]
[280.81637573 531.85864258]
[268.29461670 523.58850098]
[256.38742065 514.45574951]
[245.15409851 504.50582886]
[234.65061951 493.78826904]
[224.92930603 482.35650635]
[216.03860474 470.26748657]
[208.02279663 457.58145142]
[200.92182922 444.36157227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[24 130]
[25 129]
[26 128]
[27 127]
[29 126]
[30 125]
[32 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
