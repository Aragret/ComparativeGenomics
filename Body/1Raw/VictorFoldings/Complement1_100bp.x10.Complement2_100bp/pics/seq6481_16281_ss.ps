%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[108.99629211 574.86407471]
[98.33192444 564.29968262]
[88.70369720 552.78314209]
[80.19622040 540.41552734]
[72.88426208 527.30560303]
[66.83206940 513.56860352]
[62.09284592 499.32522583]
[58.70822906 484.70062256]
[56.70797348 469.82333374]
[56.10964966 454.82412720]
[56.91852188 439.83477783]
[59.12747955 424.98706055]
[62.71710587 410.41143799]
[67.65586090 396.23599243]
[73.90033722 382.58532715]
[81.39566040 369.57937622]
[90.07595825 357.33245850]
[99.86494446 345.95220947]
[110.67658997 335.53860474]
[122.41588593 326.18322754]
[134.97966003 317.96823120]
[148.25750732 310.96585083]
[162.13272095 305.23757935]
[157.73171997 290.89773560]
[146.60075378 281.00073242]
[149.94857788 265.53778076]
[145.54757690 251.19792175]
[141.14657593 236.85807800]
[137.42190552 233.86878967]
[135.53555298 228.50793457]
[136.83488464 222.02539062]
[132.86279297 207.56086731]
[128.89070129 193.09634399]
[124.06469727 178.89389038]
[118.40190887 165.00386047]
[112.73912048 151.11384583]
[107.07633972 137.22381592]
[95.10679626 128.35931396]
[97.06172180 112.65935516]
[90.98788452 98.94408417]
[84.50839233 85.41574097]
[78.02889252 71.88739014]
[71.54940033 58.35904694]
[65.06990051 44.83070374]
[58.38970947 31.40032768]
[51.51029587 18.07089806]
[44.63088226 4.74146843]
[37.75146866 -8.58796120]
[30.87205696 -21.91739082]
[23.99264526 -35.24681854]
[17.11323166 -48.57624817]
[10.23381996 -61.90567780]
[3.35440731 -75.23510742]
[3.61808252 -60.23742294]
[0.89830488 -45.48605728]
[-4.69659805 -31.56854820]
[-12.94378376 -19.03922653]
[-23.51476860 -8.39712811]
[-35.98851776 -0.06612412]
[-49.86820221 5.62196350]
[-64.60100555 8.44058132]
[-79.60011292 8.27746487]
[-94.26813507 5.13911057]
[-108.02083588 -0.84948200]
[-120.31044769 -9.44978905]
[-130.64749146 -20.31926537]
[-138.62025452 -33.02498245]
[-143.91114807 -47.06087494]
[-146.30947876 -61.86790085]
[-145.71971130 -76.85630035]
[-142.16531372 -91.42909241]
[-135.78788757 -105.00585175]
[-126.84141541 -117.04581451]
[-115.68225098 -127.06944275]
[-102.75485229 -134.67749023]
[-88.57411194 -139.56692505]
[-73.70484924 -141.54302979]
[-58.73929214 -140.52706909]
[-44.27352142 -136.55952454]
[-30.88369751 -129.79840088]
[-19.10313606 -120.51302338]
[-9.40104866 -109.07320404]
[-2.16550779 -95.93843079]
[-2.83529305 -110.92346954]
[-5.30091858 -114.49763489]
[-6.39128065 -118.28915405]
[-6.20692253 -121.83899689]
[-4.98713779 -124.76795197]
[-3.07191920 -126.81491852]
[-2.84859157 -141.81324768]
[-10.37957001 -155.72709656]
[-2.45363736 -168.33775330]
[-2.23030972 -183.33609009]
[-2.11864257 -198.33567810]
[-2.11864257 -213.33567810]
[-2.11864257 -228.33567810]
[-16.51181602 -232.99311829]
[-28.76011848 -241.87197876]
[-37.66358948 -254.10241699]
[-42.34995270 -268.48620605]
[-42.36008835 -283.61416626]
[-37.69300461 -298.00421143]
[-28.80593491 -310.24655151]
[-16.56954193 -319.14181519]
[-2.18262291 -323.81854248]
[12.94533730 -323.81854248]
[27.33225632 -319.14181519]
[39.56864929 -310.24655151]
[48.45571899 -298.00421143]
[53.12280273 -283.61416626]
[53.11266708 -268.48620605]
[48.42630386 -254.10241699]
[39.52283478 -241.87197876]
[27.27453041 -232.99311829]
[12.88135719 -228.33567810]
[12.88135719 -213.33567810]
[12.88135719 -198.33567810]
[16.02485847 -191.64686584]
[12.76802731 -183.11276245]
[12.54469967 -168.11442566]
[20.09165192 -155.27337646]
[12.14974594 -141.58992004]
[11.92641830 -126.59159088]
[12.14974594 -111.59325409]
[12.81953049 -96.60821533]
[16.68383598 -82.11451721]
[23.56324959 -68.78508759]
[30.44266129 -55.45566177]
[37.32207489 -42.12623215]
[44.20148849 -28.79680252]
[51.08089828 -15.46737385]
[57.96031189 -2.13794422]
[64.83972168 11.19148540]
[71.71913910 24.52091408]
[75.91577148 26.80068016]
[78.72481537 31.74094772]
[78.59825134 38.35120773]
[85.07774353 51.87955093]
[91.55724335 65.40789795]
[98.03673553 78.93624115]
[104.51622772 92.46459198]
[107.29473114 93.71736145]
[109.67881012 96.00879669]
[111.28288269 99.19477081]
[111.78001404 102.99069977]
[110.95174408 106.99656677]
[123.32633209 116.85456848]
[120.96636200 131.56101990]
[126.62915039 145.45104980]
[132.29193115 159.34107971]
[137.95472717 173.23110962]
[142.83651733 159.04772949]
[155.05621338 150.34837341]
[170.05618286 150.37767029]
[182.24180603 159.12471008]
[187.06814575 173.32705688]
[182.73509216 187.68757629]
[170.85876465 196.85015869]
[155.86875916 197.39739990]
[143.35522461 189.12425232]
[147.32731628 203.58877563]
[151.29940796 218.05329895]
[155.48641968 232.45707703]
[159.88742065 246.79693604]
[164.28842163 261.13677979]
[175.73416138 272.05947876]
[172.07156372 286.49673462]
[176.47256470 300.83657837]
[191.17233276 297.79498291]
[206.09233093 296.14324951]
[221.10144043 295.89593506]
[236.06774902 297.05520630]
[250.85974121 299.61083984]
[265.34741211 303.54043579]
[279.40347290 308.80941772]
[292.90435791 315.37145996]
[305.73141479 323.16894531]
[317.77194214 332.13333130]
[328.92010498 342.18585205]
[339.07797241 353.23809814]
[348.15621948 365.19302368]
[356.07507324 377.94552612]
[362.76498413 391.38351440]
[368.16711426 405.38891602]
[372.23400879 419.83865356]
[374.92990112 434.60574341]
[376.23114014 449.56036377]
[376.12628174 464.57113647]
[374.61624146 479.50613403]
[371.71426392 494.23410034]
[367.44586182 508.62561035]
[361.84860229 522.55419922]
[354.97158813 535.89739990]
[346.87533569 548.53802490]
[337.63095093 560.36492920]
[327.31967163 571.27416992]
[316.03213501 581.16992188]
[303.86752319 589.96520996]
[290.93276978 597.58276367]
[277.34152222 603.95550537]
[263.21325684 609.02758789]
[248.67207336 612.75439453]
[233.84580994 615.10308838]
[218.86476135 616.05316162]
[203.86058044 615.59619141]
[188.96511841 613.73614502]
[174.30928040 610.48944092]
[160.02188110 605.88464355]
[146.22845459 599.96209717]
[133.05024719 592.77398682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 168]
[24 167]
[26 165]
[27 164]
[28 163]
[31 162]
[32 161]
[33 160]
[34 151]
[35 150]
[36 149]
[37 148]
[39 146]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[83 125]
[84 124]
[89 123]
[90 122]
[92 120]
[93 119]
[94 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
