%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[136.14463806 980.55718994]
[121.22009277 979.03533936]
[106.36679840 976.92877197]
[91.60765839 974.24060059]
[76.96543121 970.97515869]
[62.46269989 967.13732910]
[48.12181854 962.73309326]
[33.96490479 957.76922607]
[20.01378632 952.25335693]
[6.28997374 946.19409180]
[-7.18536997 939.60064697]
[-20.39146805 932.48327637]
[-33.30795670 924.85290527]
[-45.91492081 916.72131348]
[-58.19292068 908.10101318]
[-70.12302399 899.00537109]
[-81.68683624 889.44836426]
[-92.86653137 879.44476318]
[-103.64485931 869.00988770]
[-114.00521088 858.15997314]
[-123.93160248 846.91162109]
[-133.40873718 835.28228760]
[-142.42199707 823.28979492]
[-150.95748901 810.95275879]
[-159.00204468 798.29003906]
[-166.54327393 785.32128906]
[-173.56953430 772.06652832]
[-180.06999207 758.54608154]
[-186.03462219 744.78082275]
[-191.45423889 730.79205322]
[-196.32048035 716.60131836]
[-200.62583923 702.23040771]
[-204.36367798 687.70159912]
[-207.52824402 673.03723145]
[-210.11465454 658.25994873]
[-212.11891174 643.39245605]
[-213.53791809 628.45782471]
[-214.36950684 613.47894287]
[-214.61238098 598.47894287]
[-214.26617432 583.48101807]
[-213.33142090 568.50823975]
[-211.80955505 553.58367920]
[-209.70292664 538.73040771]
[-207.01478577 523.97125244]
[-203.74928284 509.32904053]
[-199.91143799 494.82629395]
[-195.50718689 480.48541260]
[-190.54328918 466.32852173]
[-185.02743530 452.37741089]
[-178.96812439 438.65359497]
[-172.37467957 425.17825317]
[-165.25727844 411.97216797]
[-157.62689209 399.05569458]
[-149.49528503 386.44873047]
[-140.87501526 374.17074585]
[-131.77935791 362.24066162]
[-122.22232819 350.67684937]
[-112.21868134 339.49719238]
[-101.78382874 328.71887207]
[-90.93387604 318.35852051]
[-79.68553162 308.43215942]
[-68.05615997 298.95501709]
[-56.06367874 289.94177246]
[-43.72658539 281.40631104]
[-31.06390381 273.36175537]
[-18.09515572 265.82055664]
[-4.84033966 258.79431152]
[8.68010616 252.29388428]
[22.44533539 246.32926941]
[36.43412018 240.90966797]
[50.62489319 236.04344177]
[64.99577332 231.73809814]
[79.52460480 228.00027466]
[94.18897247 224.83572388]
[108.96628571 222.24934387]
[106.96227264 207.38381958]
[104.95825195 192.51828003]
[102.95423889 177.65275574]
[100.95022583 162.78723145]
[91.58191681 151.20776367]
[97.40613556 136.49760437]
[95.40212250 121.63207245]
[93.39810944 106.76654053]
[90.05506134 102.72451019]
[89.21466827 97.09716034]
[91.56256866 91.42933655]
[90.00204468 76.51072693]
[86.43405914 70.94467163]
[86.24153900 65.26488495]
[88.62396240 61.12567139]
[87.50831604 46.16721725]
[86.39266205 31.20876312]
[85.27701569 16.25030899]
[76.53473663 3.06383491]
[83.30399323 -10.20365906]
[68.77405548 -14.59059811]
[56.81243896 -23.93320084]
[49.03686142 -36.96795654]
[46.49890518 -51.93201828]
[49.54180527 -66.80162811]
[57.75403595 -79.56578064]
[70.02496338 -88.49824524]
[84.69503784 -92.39096069]
[99.78025818 -90.71748352]
[113.24047089 -83.70413208]
[123.25529480 -72.29940796]
[128.47030640 -58.04570389]
[128.18020630 -42.87071609]
[122.42425537 -28.82673645]
[111.98087311 -17.81309891]
[98.26245117 -11.31930828]
[106.92492676 0.79723829]
[100.23546600 15.13466072]
[101.35112000 30.09311485]
[102.46676636 45.05156708]
[103.58241272 60.01002121]
[104.92064667 74.95020294]
[106.48117065 89.86881256]
[108.26364136 104.76252747]
[110.26765442 119.62805939]
[112.27166748 134.49359131]
[121.78331757 147.13633728]
[115.81575775 160.78321838]
[117.81977081 175.64874268]
[119.82378387 190.51426697]
[121.82779694 205.37980652]
[123.83181000 220.24533081]
[138.76647949 218.82626343]
[153.74534607 217.99461365]
[168.74533081 217.75167847]
[183.74327087 218.09782410]
[198.71606445 219.03253174]
[213.64060974 220.55433655]
[228.49391174 222.66090393]
[243.25306702 225.34898376]
[257.89529419 228.61444092]
[272.39804077 232.45222473]
[286.73892212 236.85643005]
[300.89584351 241.82026672]
[314.84698486 247.33605957]
[328.57083130 253.39533997]
[342.04617310 259.98873901]
[355.25228882 267.10607910]
[368.16879272 274.73641968]
[380.77578735 282.86795044]
[393.05380249 291.48818970]
[404.98394775 300.58380127]
[416.54776001 310.14077759]
[427.72747803 320.14440918]
[438.50585938 330.57919312]
[448.86621094 341.42913818]
[458.79266357 352.67742920]
[468.26980591 364.30676270]
[477.28311157 376.29922485]
[485.81863403 388.63626099]
[493.86322021 401.29891968]
[501.40447998 414.26763916]
[508.43075562 427.52243042]
[514.93127441 441.04284668]
[520.89593506 454.80804443]
[526.31555176 468.79681396]
[531.18182373 482.98757935]
[535.48724365 497.35842896]
[539.22515869 511.88726807]
[542.38970947 526.55163574]
[544.97619629 541.32891846]
[546.98046875 556.19635010]
[548.39953613 571.13104248]
[549.23114014 586.10992432]
[549.47406006 601.10986328]
[549.12786865 616.10784912]
[548.19317627 631.08062744]
[546.67132568 646.00518799]
[544.56475830 660.85845947]
[541.87664795 675.61761475]
[538.61120605 690.25982666]
[534.77337646 704.76257324]
[530.36914062 719.10345459]
[525.40533447 733.26037598]
[519.88946533 747.21148682]
[513.83020020 760.93530273]
[507.23678589 774.41070557]
[500.11941528 787.61676025]
[492.48907471 800.53326416]
[484.35751343 813.14025879]
[475.73727417 825.41827393]
[466.64163208 837.34838867]
[457.08462524 848.91223145]
[447.08102417 860.09191895]
[436.64617920 870.87023926]
[425.79626465 881.23059082]
[414.54794312 891.15704346]
[402.91857910 900.63415527]
[390.92614746 909.64746094]
[378.58905029 918.18298340]
[365.92639160 926.22753906]
[352.95767212 933.76879883]
[339.70288086 940.79504395]
[326.18243408 947.29553223]
[312.41723633 953.26019287]
[298.42846680 958.67980957]
[284.23770142 963.54608154]
[269.86682129 967.85144043]
[255.33801270 971.58929443]
[240.67364502 974.75390625]
[225.89634705 977.34033203]
[211.02890015 979.34460449]
[196.09422302 980.76361084]
[181.11535645 981.59521484]
[166.11537170 981.83813477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[81 121]
[82 120]
[83 119]
[86 118]
[87 117]
[90 116]
[91 115]
[92 114]
[93 113]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
