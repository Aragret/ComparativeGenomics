%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[87.81830597 536.08166504]
[80.04716492 548.93035889]
[70.88626862 560.82818604]
[60.45081329 571.62548828]
[48.87204361 581.18646240]
[36.29557419 589.39086914]
[22.87956429 596.13555908]
[8.79273701 601.33563232]
[-5.78775311 604.92584229]
[-20.67853928 606.86090088]
[-35.69235611 607.11651611]
[-50.64038467 605.68951416]
[-65.33464050 602.59777832]
[-79.59033203 597.88024902]
[-93.22817230 591.59619141]
[-106.07665253 583.82464600]
[-117.97418976 574.66339111]
[-128.77116394 564.22760010]
[-138.33178711 552.64855957]
[-146.53582764 540.07183838]
[-153.28010559 526.65563965]
[-158.47979736 512.56866455]
[-162.06953430 497.98803711]
[-164.00416565 483.09719849]
[-164.25933838 468.08337402]
[-162.83186340 453.13540649]
[-159.73970032 438.44122314]
[-155.02171326 424.18566895]
[-148.73725891 410.54803467]
[-140.96534729 397.69976807]
[-131.80374146 385.80252075]
[-121.36764526 375.00585938]
[-109.78829956 365.44558716]
[-97.21134186 357.24191284]
[-83.79492950 350.49804688]
[-69.70778656 345.29876709]
[-55.12708282 341.70947266]
[-40.23617935 339.77529907]
[-25.22234917 339.52056885]
[-10.27440453 340.94848633]
[4.41966820 344.04107666]
[18.67507553 348.75949097]
[24.95243645 335.13616943]
[31.22979736 321.51284790]
[29.52886200 306.71569824]
[42.33128738 297.42007446]
[48.60864639 283.79675293]
[54.88600540 270.17343140]
[53.18507385 255.37628174]
[65.98749542 246.08065796]
[72.26485443 232.45733643]
[76.87886810 218.18461609]
[79.76413727 203.46472168]
[82.64941406 188.74482727]
[77.50470734 174.76693726]
[87.75200653 162.71275330]
[89.64529419 147.83271790]
[82.67925262 134.66748047]
[91.22423553 121.35230255]
[92.11705780 106.37889862]
[89.41508484 98.78469849]
[93.13626862 91.18972015]
[94.25191498 76.23126984]
[95.36756134 61.27281570]
[96.48321533 46.31436157]
[89.79375458 31.97694016]
[98.45623016 19.86039352]
[91.76677704 5.52297115]
[100.42925262 -6.59357548]
[93.73979187 -20.93099785]
[102.40227509 -33.04754639]
[103.51792145 -48.00599670]
[104.63357544 -62.96445084]
[105.74922180 -77.92290497]
[106.86486816 -92.88135529]
[107.42308044 -107.87097168]
[107.42308044 -122.87097168]
[107.42308044 -137.87097168]
[98.10671997 -126.11489105]
[83.94828033 -121.16123962]
[69.33491516 -124.54496002]
[58.79473114 -135.21755981]
[55.59371948 -149.87203979]
[60.72375107 -163.96752930]
[72.59522247 -173.13638306]
[87.52964020 -174.53755188]
[100.89940643 -167.73686218]
[108.56181335 -154.84132385]
[110.56582642 -169.70684814]
[112.56983948 -184.57238770]
[114.57385254 -199.43791199]
[116.57786560 -214.30343628]
[107.26837921 -226.79228210]
[109.51249695 -241.83949280]
[121.47606659 -250.63769531]
[123.48007965 -265.50323486]
[117.65586090 -280.21340942]
[127.02416992 -291.79287720]
[113.04499817 -297.45266724]
[100.91302490 -306.41180420]
[91.39088440 -318.10708618]
[85.07715607 -331.80334473]
[82.36870575 -346.63961792]
[83.43580627 -361.68328857]
[88.21137238 -375.98870850]
[96.39520264 -388.65661621]
[107.47286987 -398.89068604]
[120.74800110 -406.04760742]
[135.38613892 -409.67749023]
[150.46708679 -409.55215454]
[165.04286194 -405.67947388]
[178.19720459 -398.30291748]
[189.10324097 -387.88613892]
[197.07540894 -375.08398438]
[201.61254883 -360.70117188]
[202.42947388 -345.64184570]
[199.47480774 -330.85263062]
[192.93431091 -317.26318359]
[183.21911621 -305.72778320]
[170.93991089 -296.97152710]
[156.86859131 -291.54483032]
[141.88970947 -289.78884888]
[147.85726929 -276.14196777]
[138.34561157 -263.49920654]
[136.34159851 -248.63368225]
[145.54826355 -236.98152161]
[143.72767639 -221.87722778]
[131.44338989 -212.29942322]
[129.43937683 -197.43389893]
[127.43537140 -182.56837463]
[125.43135071 -167.70283508]
[123.42733765 -152.83731079]
[122.42308044 -137.87097168]
[122.42308044 -122.87097168]
[122.42308044 -107.87097168]
[134.71374512 -116.46977234]
[149.14218140 -112.36851501]
[155.07228088 -98.59049225]
[148.13258362 -85.29234314]
[133.43879700 -82.27697754]
[121.82332611 -91.76570892]
[120.70767212 -76.80725861]
[119.59202576 -61.84880447]
[118.47637939 -46.89035034]
[117.36072540 -31.93189621]
[124.12998962 -18.66440201]
[115.38771057 -5.47792673]
[122.15696716 7.78956747]
[113.41468811 20.97604179]
[120.18394470 34.24353790]
[111.44166565 47.43001175]
[110.32601929 62.38846588]
[109.21037292 77.34691620]
[108.09471893 92.30537415]
[107.09046173 107.27171326]
[106.19764709 122.24512482]
[113.09982300 136.48135376]
[104.61870575 148.72554016]
[114.61828613 137.54481506]
[129.04646301 133.44267273]
[143.43252563 137.69020081]
[153.31877136 148.97125244]
[155.64186096 163.79026794]
[149.68194580 177.55541992]
[137.28578186 186.00141907]
[122.29444122 186.51119995]
[109.35316467 178.92677307]
[102.47189331 165.59802246]
[107.41022491 180.62878418]
[97.36930084 191.63009644]
[94.48403168 206.34999084]
[91.59875488 221.06988525]
[101.24624634 209.58398438]
[114.20561981 202.03053284]
[128.95442200 199.29690552]
[143.75999451 201.70425415]
[156.88296509 208.96975708]
[166.78167725 220.23986816]
[172.29324341 234.19058228]
[172.77017212 249.18299866]
[168.15641785 263.45581055]
[158.99400330 275.33227539]
[146.35932922 283.41714478]
[131.73670959 286.76062012]
[116.84397888 284.96990967]
[103.43073273 278.25540161]
[93.07273865 267.40588379]
[86.98684692 253.69596863]
[85.88817596 238.73471069]
[79.61080933 252.35801697]
[80.86274719 268.12960815]
[68.50932312 276.45080566]
[62.23196411 290.07412720]
[55.95460129 303.69744873]
[57.20653534 319.46902466]
[44.85311127 327.79022217]
[38.57575226 341.41354370]
[32.29838943 355.03686523]
[45.14733887 362.80761719]
[57.04542542 371.96813965]
[67.84301758 382.40328979]
[77.40433502 393.98175049]
[85.60912323 406.55798340]
[92.35420227 419.97378540]
[97.55474854 434.06045532]
[101.14535522 448.64083862]
[103.08087158 463.53158569]
[103.33694458 478.54537964]
[101.91036987 493.49346924]
[98.81907654 508.18780518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 198]
[43 197]
[44 196]
[46 194]
[47 193]
[48 192]
[50 190]
[51 189]
[52 172]
[53 171]
[54 170]
[56 168]
[57 158]
[59 156]
[60 155]
[62 154]
[63 153]
[64 152]
[65 151]
[67 149]
[69 147]
[71 145]
[72 144]
[73 143]
[74 142]
[75 141]
[76 135]
[77 134]
[78 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[95 125]
[96 124]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
