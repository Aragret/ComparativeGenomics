%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-7.15524244 470.71463013]
[-2.81697345 485.15219116]
[-2.06060100 500.20846558]
[-4.93009901 515.00811768]
[-11.25863934 528.69067383]
[-20.67828751 540.46069336]
[-32.64139938 549.63391113]
[-46.45245361 555.67694092]
[-61.30849838 558.23846436]
[-76.34581757 557.16955566]
[-90.69015503 552.53240967]
[-103.50756836 544.59661865]
[-114.05284882 533.82348633]
[-121.71292877 520.83935547]
[-126.04244232 506.39916992]
[-126.78968811 491.34246826]
[-123.91121674 476.54455566]
[-117.57437897 462.86581421]
[-108.14759827 451.10150146]
[-96.17892456 441.93557739]
[-82.36421204 435.90090942]
[-67.50662231 433.34838867]
[-52.46995163 434.42639160]
[-47.85594177 420.15365601]
[-43.24193192 405.88092041]
[-38.62792206 391.60818481]
[-34.01391602 377.33544922]
[-35.16872406 374.78112793]
[-35.38131332 371.61547852]
[-34.41376495 368.19503784]
[-32.16151810 364.95593262]
[-28.67706299 362.36508179]
[-29.74018860 357.70901489]
[-27.88969612 352.33569336]
[-22.84565544 348.06143188]
[-24.98640251 333.32147217]
[-12.46642017 323.64880371]
[-6.59745932 309.84463501]
[-0.72849834 296.04046631]
[5.14046240 282.23626709]
[11.00942326 268.43209839]
[-3.27043247 273.02401733]
[-16.67720413 266.29656982]
[-21.53088379 252.10356140]
[-15.05106354 238.57536316]
[-0.94967902 233.46156311]
[12.69535732 239.69157410]
[18.06756783 253.69560242]
[25.14467430 240.47007751]
[32.22177887 227.24455261]
[31.71947098 222.49516296]
[34.19536972 217.37979126]
[39.71158218 213.73522949]
[47.17932510 200.72627258]
[54.64706802 187.71731567]
[62.11480713 174.70835876]
[69.58255005 161.69941711]
[75.75831604 148.02973938]
[80.58431244 133.82728577]
[85.41030884 119.62483215]
[90.23631287 105.42237854]
[94.95644379 91.18438721]
[99.46407318 76.87770081]
[96.11626434 61.41475296]
[107.24722290 51.51773453]
[111.64821625 37.17788696]
[116.04921722 22.83803940]
[120.45021820 8.49819279]
[110.54257202 0.99362010]
[103.42897034 -9.16855717]
[99.78317261 -20.99968910]
[99.94246674 -33.35434723]
[103.87648010 -45.04122543]
[111.19161224 -54.93801498]
[121.17031860 -62.09915924]
[132.84150696 -65.84621429]
[145.07499695 -65.83208466]
[150.11190796 -79.96111298]
[155.14881897 -94.09014130]
[151.41184998 -112.12113190]
[165.21357727 -122.95992279]
[162.32763672 -138.51568604]
[173.74833679 -148.07690430]
[178.57434082 -162.27935791]
[183.18833923 -176.55209351]
[187.58934021 -190.89195251]
[191.99034119 -205.23179626]
[196.39134216 -219.57164001]
[200.79234314 -233.91148376]
[187.04423523 -239.95352173]
[174.09054565 -247.55079651]
[162.10646057 -256.60055542]
[151.25404358 -266.98040771]
[141.68006897 -278.55001831]
[133.51400757 -291.15286255]
[126.86628723 -304.61853027]
[121.82683563 -318.76492310]
[118.46378326 -333.40072632]
[116.82261658 -348.32797241]
[116.92553711 -363.34484863]
[118.77114868 -378.24819946]
[122.33449554 -392.83651733]
[127.56737518 -406.91250610]
[134.39903259 -420.28579712]
[142.73707581 -432.77554321]
[152.46873474 -444.21282959]
[163.46240234 -454.44296265]
[175.56941223 -463.32760620]
[188.62600708 -470.74661255]
[202.45564270 -476.59963989]
[216.87126160 -480.80755615]
[231.67791748 -483.31338501]
[246.67536926 -484.08331299]
[261.66079712 -483.10690308]
[276.43154907 -480.39733887]
[290.78784180 -475.99130249]
[304.53555298 -469.94833374]
[317.48873901 -462.35021973]
[329.47219849 -453.29965210]
[340.32394409 -442.91906738]
[349.89712524 -431.34884644]
[358.06234741 -418.74542236]
[364.70916748 -405.27932739]
[369.74768066 -391.13259888]
[373.10977173 -376.49658203]
[374.74993896 -361.56921387]
[374.64599609 -346.55233765]
[372.79940796 -331.64910889]
[369.23507690 -317.06103516]
[364.00125122 -302.98538208]
[357.16870117 -289.61254883]
[348.82983398 -277.12338257]
[339.09741211 -265.68673706]
[328.10305786 -255.45733643]
[315.99545288 -246.57348633]
[302.93838501 -239.15536499]
[289.10833740 -233.30325317]
[274.69244385 -229.09632874]
[259.88562012 -226.59146118]
[244.88810730 -225.82252502]
[229.90274048 -226.79994202]
[215.13218689 -229.51048279]
[210.73118591 -215.17063904]
[206.33018494 -200.83079529]
[201.92918396 -186.49095154]
[197.52819824 -172.15110779]
[198.93467712 -167.58702087]
[197.48895264 -162.09092712]
[192.77679443 -157.45336914]
[187.95079041 -143.25091553]
[191.18191528 -128.71099854]
[179.41603088 -118.13391876]
[184.47976685 -107.14824677]
[180.57539368 -95.27644348]
[169.27784729 -89.05322266]
[164.24093628 -74.92419434]
[159.20402527 -60.79516602]
[172.10173035 -48.68051529]
[178.41809082 -32.09444046]
[176.83654785 -14.36376190]
[167.62969971 0.93335378]
[152.61367798 10.68949413]
[134.79006958 12.89918995]
[130.38906860 27.23903847]
[125.98806763 41.57888412]
[121.58706665 55.91873169]
[125.24967194 70.35599518]
[113.80391693 81.27870178]
[114.84658051 88.59543610]
[109.22917938 95.79839325]
[109.94331360 103.82725525]
[104.43876648 110.24837494]
[99.61277008 124.45082855]
[94.78677368 138.65328979]
[89.96076965 152.85574341]
[101.50750732 143.28114319]
[115.92810822 139.15240479]
[130.79243469 141.16529846]
[143.59559631 148.98060608]
[152.18003845 161.28132629]
[155.09912109 175.99453735]
[151.86093140 190.64083862]
[143.01116943 202.75205994]
[130.04116821 210.28724670]
[115.13660431 211.97659302]
[100.80915070 207.53540039]
[89.47324371 197.71211243]
[83.03917694 184.16209412]
[82.59149933 169.16716003]
[75.12375641 182.17610168]
[67.65602112 195.18505859]
[60.18827820 208.19401550]
[52.72053528 221.20295715]
[45.44730759 234.32165527]
[38.37020111 247.54718018]
[31.29309654 260.77270508]
[24.81360054 274.30105591]
[18.94463921 288.10522461]
[13.07567883 301.90942383]
[7.20671797 315.71359253]
[1.33775699 329.51776123]
[3.05871630 345.24508667]
[-9.04147816 353.93038940]
[-14.70426464 367.82043457]
[-19.74118042 381.94946289]
[-24.35519028 396.22219849]
[-28.96920013 410.49493408]
[-33.58320999 424.76766968]
[-38.19721985 439.04040527]
[-25.37500191 446.96844482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 209]
[24 208]
[25 207]
[26 206]
[27 205]
[32 204]
[35 203]
[37 201]
[38 200]
[39 199]
[40 198]
[41 197]
[48 196]
[49 195]
[50 194]
[53 193]
[54 192]
[55 191]
[56 190]
[57 189]
[58 175]
[59 174]
[60 173]
[61 172]
[62 170]
[63 168]
[65 166]
[66 165]
[67 164]
[68 163]
[77 157]
[78 156]
[79 155]
[81 152]
[83 150]
[84 149]
[85 146]
[86 145]
[87 144]
[88 143]
[89 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
