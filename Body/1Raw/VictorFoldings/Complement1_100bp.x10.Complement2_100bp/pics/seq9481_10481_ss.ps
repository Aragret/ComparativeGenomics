%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[117.32135773 306.39413452]
[130.09320068 298.03692627]
[128.08918762 283.17138672]
[126.08516693 268.30584717]
[124.08115387 253.44033813]
[112.11758423 244.64212036]
[109.87345886 229.59490967]
[119.18295288 217.10606384]
[117.17893982 202.24053955]
[115.17492676 187.37501526]
[112.18015289 172.67700195]
[108.20805359 158.21247864]
[104.23595428 143.74795532]
[100.26386261 129.28343201]
[82.61193848 123.56362915]
[71.94100952 108.38345337]
[72.53525543 89.83747101]
[84.15609741 75.37155914]
[72.54898834 64.62048340]
[75.99623871 50.13028717]
[71.38222504 35.85755539]
[66.76821899 21.58481979]
[62.15420914 7.31208658]
[57.54019928 -6.96064663]
[42.60569000 -10.26332855]
[31.40344810 -20.53009796]
[26.87431335 -34.92986679]
[30.13912201 -49.56533813]
[40.22332764 -60.52774429]
[35.60931778 -74.80047607]
[30.99530983 -89.07321167]
[16.66823006 -89.26409149]
[3.12078571 -93.86345673]
[-8.32675934 -102.40908813]
[-16.56311417 -114.05486298]
[-20.79383278 -127.65454102]
[-20.61793518 -141.87454224]
[-16.06586456 -155.32476807]
[-7.59522486 -166.69444275]
[3.95519161 -174.87988281]
[-0.44580641 -189.21972656]
[-4.84680462 -203.55957031]
[-9.24780273 -217.89941406]
[-13.64880085 -232.23927307]
[-28.23265457 -228.71090698]
[-43.00293732 -226.06953430]
[-57.90575790 -224.32478333]
[-72.88673401 -223.48303223]
[-87.89119720 -223.54734802]
[-102.86440277 -224.51750183]
[-117.75171661 -226.38993835]
[-132.49880981 -229.15785217]
[-147.05187988 -232.81111145]
[-161.35781860 -237.33639526]
[-175.36442566 -242.71720886]
[-189.02059937 -248.93389893]
[-202.27648926 -255.96380615]
[-215.08374023 -263.78125000]
[-227.39562988 -272.35769653]
[-239.16720581 -281.66189575]
[-250.35554504 -291.65985107]
[-260.91979980 -302.31512451]
[-270.82144165 -313.58880615]
[-280.02432251 -325.43975830]
[-288.49484253 -337.82476807]
[-296.20214844 -350.69860840]
[-303.11807251 -364.01431274]
[-309.21740723 -377.72329712]
[-314.47787476 -391.77554321]
[-318.88027954 -406.11975098]
[-322.40859985 -420.70364380]
[-325.04989624 -435.47393799]
[-326.79455566 -450.37677002]
[-327.63626099 -465.35772705]
[-327.57186890 -480.36221313]
[-326.60165405 -495.33541870]
[-324.72912598 -510.22271729]
[-321.96115112 -524.96978760]
[-318.30783081 -539.52282715]
[-313.78247070 -553.82879639]
[-308.40158081 -567.83532715]
[-302.18484497 -581.49145508]
[-295.15487671 -594.74737549]
[-287.33737183 -607.55456543]
[-278.76086426 -619.86639404]
[-269.45660400 -631.63793945]
[-259.45858765 -642.82623291]
[-248.80328369 -653.39044189]
[-237.52955627 -663.29199219]
[-225.67855835 -672.49481201]
[-213.29351807 -680.96533203]
[-200.41964722 -688.67254639]
[-187.10391235 -695.58843994]
[-173.39489746 -701.68768311]
[-159.34262085 -706.94812012]
[-144.99838257 -711.35046387]
[-130.41448975 -714.87866211]
[-115.64418030 -717.51989746]
[-100.74134827 -719.26452637]
[-85.76036072 -720.10614014]
[-70.75589752 -720.04168701]
[-55.78269958 -719.07141113]
[-40.89540100 -717.19879150]
[-26.14833069 -714.43078613]
[-11.59529591 -710.77734375]
[2.71060061 -706.25195312]
[16.71715736 -700.87103271]
[30.37326622 -694.65417480]
[43.62909698 -687.62414551]
[56.43627930 -679.80657959]
[68.74807739 -671.23004150]
[80.51957703 -661.92572021]
[91.70781708 -651.92767334]
[102.27197266 -641.27227783]
[112.17350006 -629.99853516]
[121.37626648 -618.14746094]
[129.84669495 -605.76239014]
[137.55387878 -592.88848877]
[144.46968079 -579.57275391]
[150.56887817 -565.86370850]
[155.82922363 -551.81140137]
[160.23150635 -537.46710205]
[163.75965881 -522.88323975]
[166.40083313 -508.11288452]
[168.14537048 -493.21005249]
[168.98690796 -478.22906494]
[168.92237854 -463.22460938]
[167.95202637 -448.25140381]
[166.07937622 -433.36410522]
[163.31126404 -418.61706543]
[159.65780640 -404.06405640]
[155.13230896 -389.75817871]
[149.75131226 -375.75164795]
[143.53442383 -362.09555054]
[136.50434875 -348.83975220]
[128.68672180 -336.03262329]
[120.11009216 -323.72085571]
[110.80574036 -311.94940186]
[100.80761719 -300.76119995]
[90.15220642 -290.19708252]
[78.87838745 -280.29562378]
[67.02729797 -271.09289551]
[54.64218903 -262.62252808]
[41.76824188 -254.91542053]
[28.45243835 -247.99967957]
[14.74336529 -241.90054321]
[0.69104654 -236.64027405]
[5.09204483 -222.30041504]
[9.49304295 -207.96057129]
[13.89404106 -193.62072754]
[18.29503822 -179.28088379]
[34.02775955 -178.67204285]
[48.62574768 -172.70265198]
[60.31704712 -162.07742310]
[67.67574310 -148.06741333]
[69.79584503 -132.35798645]
[66.40280914 -116.84606171]
[57.88891983 -103.41106415]
[45.26804352 -93.68721771]
[49.88205338 -79.41448975]
[54.49606323 -65.14175415]
[69.08907318 -62.15685654]
[80.30327606 -52.20208359]
[85.06046295 -37.87603760]
[81.98799133 -22.99461746]
[71.81293488 -11.57465553]
[76.42694092 2.69807744]
[81.04095459 16.97081184]
[85.65496063 31.24354362]
[90.26896667 45.51627731]
[101.54605103 55.24647522]
[98.42882538 70.75755310]
[109.42031097 72.27191162]
[119.05951691 77.76660156]
[125.96275330 86.45287323]
[129.13906860 97.08382416]
[128.13249207 108.13338470]
[123.08753204 118.01541138]
[114.72838593 125.31134033]
[118.70047760 139.77586365]
[122.67257690 154.24038696]
[126.64467621 168.70491028]
[132.51536560 154.90147400]
[144.85661316 146.37541199]
[159.84434509 145.76863098]
[172.83442688 153.26913452]
[179.80177307 166.55281067]
[178.58744812 181.50358582]
[169.56773376 193.48876953]
[155.53749084 198.79464722]
[140.84414673 195.77713013]
[130.04045105 185.37100220]
[132.04446411 200.23652649]
[134.04847717 215.10205078]
[146.33276367 224.67985535]
[148.15335083 239.78416443]
[138.94668579 251.43632507]
[140.95069885 266.30184937]
[142.95471191 281.16738892]
[144.95872498 296.03289795]
[159.48767090 300.70971680]
[170.54267883 311.23345947]
[175.92878723 325.51467896]
[174.57656860 340.71777344]
[166.75451660 353.82418823]
[154.01568604 362.23162842]
[138.88940430 364.27078247]
[124.37898254 359.53680420]
[113.36549377 348.96960449]
[108.03566742 334.66729736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[8 194]
[9 193]
[10 192]
[11 182]
[12 181]
[13 180]
[14 179]
[18 172]
[20 170]
[21 169]
[22 168]
[23 167]
[24 166]
[29 161]
[30 160]
[31 159]
[40 151]
[41 150]
[42 149]
[43 148]
[44 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
