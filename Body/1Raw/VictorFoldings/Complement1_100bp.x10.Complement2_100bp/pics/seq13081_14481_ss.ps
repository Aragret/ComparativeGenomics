%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[40.49515915 1028.92028809]
[25.50250816 1028.40417480]
[10.53700161 1027.36511230]
[-4.38312578 1025.80444336]
[-19.23969841 1023.72399902]
[-34.01461411 1021.12634277]
[-48.68987274 1018.01464844]
[-63.24759293 1014.39263916]
[-77.67003632 1010.26483154]
[-91.93964386 1005.63616943]
[-106.03901672 1000.51232910]
[-119.95098114 994.89959717]
[-133.65858459 988.80468750]
[-147.14512634 982.23516846]
[-160.39419556 975.19891357]
[-173.38961792 967.70458984]
[-186.11558533 959.76135254]
[-198.55656433 951.37872314]
[-210.69743347 942.56707764]
[-222.52339172 933.33709717]
[-234.02000427 923.70001221]
[-245.17329407 913.66754150]
[-255.96966553 903.25195312]
[-266.39593506 892.46594238]
[-276.43945312 881.32257080]
[-286.08795166 869.83551025]
[-295.32968140 858.01873779]
[-304.15338135 845.88659668]
[-312.54827881 833.45397949]
[-320.50421143 820.73590088]
[-328.01141357 807.74786377]
[-335.06076050 794.50579834]
[-341.64367676 781.02581787]
[-347.75213623 767.32421875]
[-353.37872314 753.41784668]
[-358.51654053 739.32354736]
[-363.15933228 725.05853271]
[-367.30145264 710.64019775]
[-370.93786621 696.08605957]
[-374.06411743 681.41394043]
[-376.67645264 666.64160156]
[-378.77160645 651.78710938]
[-380.34710693 636.86853027]
[-381.40097046 621.90405273]
[-381.93194580 606.91192627]
[-381.93936157 591.91040039]
[-381.42324829 576.91772461]
[-380.38421631 561.95220947]
[-378.82351685 547.03210449]
[-376.74307251 532.17553711]
[-374.14538574 517.40063477]
[-371.03366089 502.72537231]
[-367.41168213 488.16766357]
[-363.28384399 473.74520874]
[-358.65518188 459.47561646]
[-353.53134155 445.37625122]
[-347.91854858 431.46429443]
[-341.82366943 417.75668335]
[-335.25411987 404.27014160]
[-328.21786499 391.02108765]
[-320.72354126 378.02566528]
[-312.78024292 365.29971313]
[-304.39764404 352.85873413]
[-295.58599854 340.71786499]
[-286.35598755 328.89193726]
[-276.71887207 317.39532471]
[-266.68640137 306.24203491]
[-256.27081299 295.44567871]
[-245.48477173 285.01940918]
[-234.34143066 274.97589111]
[-222.85437012 265.32742310]
[-211.03756714 256.08569336]
[-198.90544128 247.26202393]
[-186.47276306 238.86711121]
[-173.75466919 230.91122437]
[-160.76667786 223.40402222]
[-147.52459717 216.35467529]
[-134.04457092 209.77177429]
[-120.34300995 203.66331482]
[-106.43661499 198.03675842]
[-92.34233093 192.89895630]
[-78.07732391 188.25617981]
[-63.65896988 184.11405945]
[-49.10484695 180.47766113]
[-34.43267822 177.35140991]
[-19.66034508 174.73910522]
[-4.80584192 172.64395142]
[10.11273193 171.06848145]
[25.07719994 170.01463318]
[40.06933212 169.48367310]
[55.07086182 169.47625732]
[70.06351471 169.99238586]
[85.02901459 171.03143311]
[86.58953857 156.11283875]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[79.90161896 81.16296387]
[68.35675049 71.40554047]
[60.20224380 58.67779541]
[56.16318893 44.11148453]
[56.59873962 29.00182724]
[61.47016525 14.69236851]
[70.34429932 2.45549250]
[82.43206787 -6.62070417]
[96.65862274 -11.72917366]
[111.75895691 -12.41567326]
[126.39035797 -8.61916065]
[139.25181580 -0.67721814]
[149.19969177 10.70396137]
[155.34941101 24.51237106]
[157.15419006 39.52017593]
[154.45350647 54.39289474]
[147.48751831 67.80805206]
[136.87564087 78.57278442]
[123.56147003 85.72989655]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[101.50814056 157.67335510]
[99.94762421 172.59196472]
[114.80419922 174.67236328]
[129.57911682 177.27000427]
[144.25437927 180.38168335]
[158.81210327 184.00363159]
[173.23455811 188.13143921]
[187.50416565 192.76005554]
[201.60356140 197.88386536]
[215.51553345 203.49661255]
[229.22314453 209.59146118]
[242.70970154 216.16098022]
[255.95877075 223.19717407]
[268.95422363 230.69148254]
[281.68020630 238.63475037]
[294.12118530 247.01730347]
[306.26208496 255.82893372]
[318.08804321 265.05892944]
[329.58468628 274.69598389]
[340.73797607 284.72842407]
[351.53436279 295.14398193]
[361.96069336 305.92999268]
[372.00421143 317.07333374]
[381.65274048 328.56036377]
[390.89447021 340.37713623]
[399.71820068 352.50924683]
[408.11312866 364.94189453]
[416.06906128 377.65994263]
[423.57629395 390.64791870]
[430.62567139 403.88998413]
[437.20861816 417.36999512]
[443.31710815 431.07153320]
[448.94369507 444.97793579]
[454.08154297 459.07220459]
[458.72436523 473.33718872]
[462.86651611 487.75552368]
[466.50296021 502.30966187]
[469.62924194 516.98181152]
[472.24157715 531.75415039]
[474.33676147 546.60864258]
[475.91229248 561.52722168]
[476.96618652 576.49163818]
[477.49719238 591.48382568]
[477.50463867 606.48535156]
[476.98855591 621.47796631]
[475.94952393 636.44348145]
[474.38885498 651.36358643]
[472.30844116 666.22021484]
[469.71078491 680.99511719]
[466.59909058 695.67034912]
[462.97714233 710.22808838]
[458.84933472 724.65051270]
[454.22067261 738.92016602]
[449.09686279 753.01953125]
[443.48410034 766.93151855]
[437.38925171 780.63909912]
[430.81970215 794.12567139]
[423.78350830 807.37469482]
[416.28918457 820.37017822]
[408.34591675 833.09613037]
[399.96334839 845.53710938]
[391.15170288 857.67797852]
[381.92172241 869.50396729]
[372.28463745 881.00061035]
[362.25216675 892.15386963]
[351.83660889 902.95025635]
[341.05059814 913.37652588]
[329.90725708 923.42010498]
[318.42022705 933.06860352]
[306.60342407 942.31030273]
[294.47131348 951.13403320]
[282.03866577 959.52893066]
[269.32058716 967.48486328]
[256.33261108 974.99206543]
[243.09054565 982.04144287]
[229.61051941 988.62438965]
[215.90896606 994.73284912]
[202.00259399 1000.35943604]
[187.90830994 1005.49725342]
[173.64331055 1010.14007568]
[159.22496033 1014.28222656]
[144.67085266 1017.91864014]
[129.99868774 1021.04492188]
[115.22635651 1023.65722656]
[100.37185669 1025.75244141]
[85.45328522 1027.32788086]
[70.48881531 1028.38183594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
