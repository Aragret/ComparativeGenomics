%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[96.28103638 892.29113770]
[81.43099213 890.14038086]
[66.74529266 887.06146240]
[52.28190231 883.06652832]
[38.09790039 878.17126465]
[24.24925995 872.39508057]
[10.79064178 865.76068115]
[-2.22484088 858.29431152]
[-14.74582195 850.02539062]
[-26.72288513 840.98663330]
[-38.10876465 831.21362305]
[-48.85852051 820.74499512]
[-58.92973328 809.62207031]
[-68.28265381 797.88867188]
[-76.88037109 785.59118652]
[-84.68895721 772.77807617]
[-91.67758179 759.49993896]
[-97.81867981 745.80920410]
[-103.08800507 731.75988770]
[-107.46476746 717.40740967]
[-110.93168640 702.80841064]
[-113.47509003 688.02056885]
[-115.08493042 673.10223389]
[-115.75485992 658.11218262]
[-115.48223114 643.10968018]
[-114.26812744 628.15386963]
[-112.11733246 613.30383301]
[-109.03833008 598.61816406]
[-105.04328918 584.15478516]
[-100.14795685 569.97082520]
[-94.37167358 556.12219238]
[-87.73721313 542.66363525]
[-80.27077484 529.64819336]
[-72.00182343 517.12725830]
[-62.96298599 505.15023804]
[-53.18994141 493.76440430]
[-42.72125626 483.01470947]
[-31.59824944 472.94354248]
[-19.86481476 463.59069824]
[-7.56726027 454.99304199]
[5.24588060 447.18453979]
[18.52404022 440.19595337]
[32.21481323 434.05493164]
[46.26417160 428.78570557]
[60.61666489 424.40899658]
[75.21565247 420.94216919]
[90.00351715 418.39883423]
[104.92190552 416.78906250]
[104.25212097 401.80404663]
[103.58232880 386.81900024]
[102.91254425 371.83395386]
[102.24275970 356.84890747]
[101.57297516 341.86389160]
[100.90319061 326.87884521]
[90.67552948 312.61834717]
[99.29702759 296.34716797]
[98.40421295 281.37374878]
[97.51139832 266.40036011]
[94.59732819 262.61651611]
[94.02929688 256.96194458]
[96.82166290 250.96910095]
[96.37506104 235.97575378]
[95.92845154 220.98239136]
[95.48184967 205.98904419]
[84.49851227 195.99394226]
[83.83200836 180.79492188]
[94.39025879 169.34236145]
[93.94364929 154.34901428]
[93.49703979 139.35566711]
[93.05043793 124.36231232]
[92.60382843 109.36895752]
[85.57224274 122.61874390]
[74.27692413 132.48869324]
[60.20397949 137.68023682]
[45.20494080 137.51036072]
[31.25319290 132.00138855]
[20.18432426 121.87815094]
[13.45463848 108.47250366]
[11.94953918 93.54820251]
[15.86704826 79.06880188]
[24.69175148 66.93930817]
[37.26260376 58.75556564]
[51.92570114 55.59429169]
[66.75185394 57.87139893]
[79.79042816 65.28730011]
[89.32597351 76.86630249]
[94.10426331 91.08734894]
[96.98954010 76.36745453]
[99.87480927 61.64756775]
[102.76008606 46.92767334]
[104.09832001 31.98748970]
[103.87499237 16.98915291]
[94.06717682 1.40427542]
[103.20586395 -13.57742596]
[102.75925446 -28.57077599]
[102.31265259 -43.56412506]
[94.16790009 -57.12781143]
[101.52283478 -70.07981110]
[87.55928040 -76.24275970]
[77.65908813 -87.85951233]
[73.78794861 -102.62355804]
[76.71448517 -117.60348511]
[85.85762787 -129.82501221]
[99.40199280 -136.86155701]
[114.65834045 -137.31599426]
[128.59751892 -131.09809875]
[138.45188904 -119.44245148]
[142.26484680 -104.66327667]
[139.27934265 -89.69499207]
[130.08815002 -77.50956726]
[116.51618195 -70.52641296]
[124.62899017 -58.03515625]
[117.30599976 -44.01073074]
[117.75260925 -29.01738167]
[118.19921112 -14.02403259]
[126.78566742 -5.50350332]
[127.28044891 6.98404884]
[118.87332916 16.76582527]
[119.09665680 31.76416206]
[126.52277374 18.73140526]
[138.32374573 9.47197819]
[152.74897766 5.35946417]
[167.65856934 7.00392962]
[180.84075928 14.16142750]
[190.34005737 25.77018547]
[194.74729919 40.10811615]
[193.40870667 55.04826736]
[186.52282715 68.37435913]
[175.11116028 78.10955048]
[160.86656189 82.80966949]
[145.90211487 81.77749634]
[132.43771362 75.16614532]
[122.47072601 63.95635986]
[117.47997284 49.81294632]
[114.59470367 64.53283691]
[111.70942688 79.25273132]
[108.82415771 93.97261810]
[107.59718323 108.92235565]
[108.04378510 123.91570282]
[108.49039459 138.90905762]
[108.93699646 153.90240479]
[109.38360596 168.89575195]
[120.60480499 179.69956970]
[120.84413910 194.91133118]
[110.47519684 205.54243469]
[110.92180634 220.53579712]
[111.36840820 235.52914429]
[111.81501770 250.52249146]
[112.48480225 265.50753784]
[113.37761688 280.48092651]
[114.27043152 295.45434570]
[123.38179779 304.58374023]
[123.81716919 317.07348633]
[115.88822937 326.20904541]
[116.55801392 341.19409180]
[117.22779846 356.17913818]
[117.89758301 371.16418457]
[118.56736755 386.14920044]
[119.23715973 401.13424683]
[119.90694427 416.11929321]
[134.90945435 416.39169312]
[149.86524963 417.60556030]
[164.71531677 419.75610352]
[179.40104675 422.83486938]
[193.86448669 426.82971191]
[208.04853821 431.72479248]
[221.89723206 437.50088501]
[235.35592651 444.13513184]
[248.37149048 451.60134888]
[260.89254761 459.87011719]
[272.86972046 468.90875244]
[284.25567627 478.68164062]
[295.00555420 489.15014648]
[305.07687378 500.27301025]
[314.42993164 512.00628662]
[323.02777100 524.30371094]
[330.83648682 537.11669922]
[337.82525635 550.39477539]
[343.96649170 564.08544922]
[349.23596191 578.13470459]
[353.61288452 592.48718262]
[357.07995605 607.08605957]
[359.62350464 621.87390137]
[361.23352051 636.79229736]
[361.90359497 651.78228760]
[361.63113403 666.78479004]
[360.41717529 681.74060059]
[358.26654053 696.59063721]
[355.18768311 711.27636719]
[351.19277954 725.73974609]
[346.29760742 739.92382812]
[340.52145386 753.77246094]
[333.88714600 767.23114014]
[326.42083740 780.24664307]
[318.15203857 792.76763916]
[309.11331177 804.74475098]
[299.34039307 816.13073730]
[288.87182617 826.88049316]
[277.74890137 836.95178223]
[266.01556396 846.30474854]
[253.71810913 854.90252686]
[240.90505981 862.71118164]
[227.62696838 869.69989014]
[213.93626404 875.84106445]
[199.88696289 881.11047363]
[185.53450012 885.48730469]
[170.93556213 888.95428467]
[156.14772034 891.49780273]
[141.22935486 893.10772705]
[126.23933411 893.77770996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 160]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[54 154]
[56 151]
[57 150]
[58 149]
[61 148]
[62 147]
[63 146]
[64 145]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[87 137]
[88 136]
[89 135]
[90 134]
[91 119]
[92 118]
[94 115]
[95 114]
[96 113]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
