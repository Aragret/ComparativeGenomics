%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[78.07916260 510.03421021]
[63.11851501 508.96008301]
[48.20707321 507.34024048]
[33.36474228 505.17691040]
[18.61132431 502.47293091]
[3.96650124 499.23193359]
[-10.55018330 495.45825195]
[-24.91936111 491.15692139]
[-39.12185669 486.33364868]
[-53.13872528 480.99490356]
[-66.95125580 475.14779663]
[-80.54103088 468.80010986]
[-93.88990021 461.96032715]
[-106.98006439 454.63760376]
[-119.79405975 446.84167480]
[-132.31477356 438.58297729]
[-144.52552795 429.87246704]
[-156.40998840 420.72183228]
[-167.95233154 411.14324951]
[-179.13714600 401.14953613]
[-189.94950867 390.75396729]
[-200.37498474 379.97045898]
[-210.39967346 368.81335449]
[-220.01019287 357.29760742]
[-229.19372559 345.43853760]
[-237.93801880 333.25198364]
[-246.23138428 320.75418091]
[-254.06278992 307.96182251]
[-261.42175293 294.89199829]
[-268.29849243 281.56213379]
[-274.68377686 267.99002075]
[-280.56915283 254.19372559]
[-285.94671631 240.19171143]
[-290.80932617 226.00262451]
[-295.15045166 211.64541626]
[-298.96435547 197.13925171]
[-302.24591064 182.50346375]
[-304.99072266 167.75758362]
[-307.19519043 152.92131042]
[-308.85632324 138.01441956]
[-309.97189331 123.05680084]
[-310.54046631 108.06842041]
[-310.56124878 93.06927490]
[-310.03424072 78.07937622]
[-308.96008301 63.11872101]
[-307.34027100 48.20728302]
[-305.17694092 33.36495209]
[-302.47299194 18.61152840]
[-299.23199463 3.96670508]
[-295.45831299 -10.54998207]
[-291.15698242 -24.91916084]
[-286.33370972 -39.12166214]
[-280.99496460 -53.13853073]
[-275.14785767 -66.95106506]
[-268.80020142 -80.54084015]
[-261.96044922 -93.88971710]
[-254.63771057 -106.97988892]
[-246.84179688 -119.79388428]
[-238.58308411 -132.31460571]
[-229.87260437 -144.52534485]
[-220.72196960 -156.40982056]
[-211.14340210 -167.95217896]
[-201.14965820 -179.13699341]
[-190.75410461 -189.94935608]
[-179.97059631 -200.37484741]
[-168.81352234 -210.39953613]
[-157.29776001 -220.01007080]
[-145.43870544 -229.19360352]
[-133.25213623 -237.93789673]
[-120.75435638 -246.23127747]
[-107.96202087 -254.06268311]
[-94.89219666 -261.42166138]
[-81.56232452 -268.29840088]
[-67.99019623 -274.68368530]
[-54.19392014 -280.56906128]
[-40.19190216 -285.94665527]
[-26.00282669 -290.80923462]
[-11.64562321 -295.15039062]
[2.86054850 -298.96429443]
[17.49633408 -302.24584961]
[32.24220276 -304.99069214]
[47.07848358 -307.19515991]
[61.98537445 -308.85629272]
[60.86972809 -323.81475830]
[59.75407791 -338.77319336]
[58.63843155 -353.73165894]
[57.52278137 -368.69009399]
[56.40713120 -383.64855957]
[41.47735596 -385.56863403]
[27.23981285 -390.45507812]
[14.27752209 -398.10778809]
[3.12128067 -408.21337891]
[-5.77207041 -420.35806274]
[-12.03835392 -434.04449463]
[-15.42096996 -448.71224976]
[-15.78140163 -463.76065063]
[-13.10488987 -478.57351685]
[-7.50103569 -492.54428101]
[0.80068570 -505.10079956]
[11.46032429 -515.72894287]
[24.04137611 -523.99340820]
[38.02865219 -529.55590820]
[52.84938431 -532.18853760]
[67.89667511 -531.78356934]
[82.55433655 -528.35748291]
[96.22216034 -522.05072021]
[108.34045410 -513.12145996]
[118.41297150 -501.93533325]
[126.02726746 -488.95043945]
[130.87152100 -474.69848633]
[132.74737549 -459.76309204]
[131.57801819 -444.75585938]
[127.41132355 -430.29129028]
[120.41792297 -416.96173096]
[110.88418579 -405.31301880]
[99.20051575 -395.82211304]
[85.84535980 -388.87774658]
[71.36558533 -384.76422119]
[72.48123169 -369.80575562]
[73.59688568 -354.84729004]
[74.71253204 -339.88885498]
[75.82817841 -324.93038940]
[76.94383240 -309.97195435]
[91.93221283 -310.54049683]
[106.93135834 -310.56124878]
[121.92125702 -310.03417969]
[136.88189697 -308.96002197]
[151.79333496 -307.34017944]
[166.63566589 -305.17684937]
[181.38908386 -302.47283936]
[196.03390503 -299.23184204]
[210.55058289 -295.45816040]
[224.91975403 -291.15679932]
[239.12225342 -286.33349609]
[253.13911438 -280.99475098]
[266.95162964 -275.14761353]
[280.54141235 -268.79992676]
[293.89025879 -261.96014404]
[306.98043823 -254.63739014]
[319.79440308 -246.84146118]
[332.31512451 -238.58273315]
[344.52584839 -229.87222290]
[356.41030884 -220.72157288]
[367.95263672 -211.14299011]
[379.13745117 -201.14923096]
[389.94979858 -190.75366211]
[400.37527466 -179.97013855]
[410.39996338 -168.81304932]
[420.01046753 -157.29727173]
[429.19396973 -145.43820190]
[437.93826294 -133.25161743]
[446.23162842 -120.75382233]
[454.06298828 -107.96147156]
[461.42196655 -94.89163971]
[468.29867554 -81.56175995]
[474.68395996 -67.98962402]
[480.56930542 -54.19333649]
[485.94686890 -40.19131088]
[490.80944824 -26.00222778]
[495.15057373 -11.64501762]
[498.96444702 2.86116004]
[502.24597168 17.49695015]
[504.99078369 32.24282455]
[507.19525146 47.07910538]
[508.85635376 61.98600388]
[509.97192383 76.94361877]
[510.54049683 91.93199921]
[510.56124878 106.93114471]
[510.03421021 121.92104340]
[508.96005249 136.88169861]
[507.34020996 151.79313660]
[505.17687988 166.63546753]
[502.47290039 181.38888550]
[499.23190308 196.03370667]
[495.45822144 210.55038452]
[491.15686035 224.91955566]
[486.33358765 239.12205505]
[480.99481201 253.13891602]
[475.14770508 266.95144653]
[468.80001831 280.54122925]
[461.96023560 293.89007568]
[454.63751221 306.98025513]
[446.84158325 319.79425049]
[438.58285522 332.31494141]
[429.87234497 344.52569580]
[420.72171021 356.41015625]
[411.14312744 367.95248413]
[401.14938354 379.13729858]
[390.75381470 389.94964600]
[379.97027588 400.37512207]
[368.81320190 410.39981079]
[357.29745483 420.01031494]
[345.43835449 429.19384766]
[333.25180054 437.93814087]
[320.75399780 446.23150635]
[307.96166992 454.06289673]
[294.89181519 461.42184448]
[281.56195068 468.29858398]
[267.98980713 474.68386841]
[254.19352722 480.56921387]
[240.19151306 485.94677734]
[226.00242615 490.80938721]
[211.64521790 495.15051270]
[197.13903809 498.96438599]
[182.50325012 502.24594116]
[167.75738525 504.99075317]
[152.92109680 507.19522095]
[138.01420593 508.85632324]
[123.05658722 509.97192383]
[108.06820679 510.54046631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
