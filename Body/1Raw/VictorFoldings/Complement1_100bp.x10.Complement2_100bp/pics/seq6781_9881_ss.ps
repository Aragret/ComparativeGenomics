%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[75.98789978 699.12023926]
[62.92297745 706.94500732]
[47.80416107 708.77294922]
[33.25086975 704.28723145]
[21.78455162 694.26507568]
[15.39181709 680.44287109]
[15.18024445 665.21545410]
[21.18649101 651.22094727]
[32.36993790 640.88415527]
[46.79298401 635.99578857]
[48.13121796 621.05560303]
[49.46945190 606.11541748]
[50.80768585 591.17523193]
[52.14591980 576.23504639]
[53.48415375 561.29486084]
[54.82238770 546.35467529]
[56.16062164 531.41448975]
[49.58964539 518.04772949]
[58.52728271 504.99285889]
[59.86551666 490.05267334]
[61.20375061 475.11248779]
[62.54198456 460.17230225]
[63.88021851 445.23211670]
[65.21845245 430.29193115]
[66.55668640 415.35174561]
[67.89492035 400.41156006]
[69.12189484 385.46182251]
[70.23754883 370.50338745]
[62.58412170 361.13580322]
[63.39116669 348.66452026]
[72.77030945 339.81045532]
[74.10854340 324.87026978]
[75.44677734 309.93008423]
[67.93367004 300.44958496]
[68.92630005 287.99172974]
[78.43623352 279.27828979]
[79.99675751 264.35968018]
[81.33499146 249.41949463]
[82.45063782 234.46104431]
[83.56629181 219.50259399]
[76.79702759 206.23510742]
[85.53930664 193.04862976]
[75.65541077 181.96511841]
[76.57375336 166.77922058]
[88.26617432 156.48722839]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[90.94596100 78.48184967]
[94.67366791 72.10015869]
[96.01190948 57.15997314]
[97.35014343 42.21978760]
[95.38413239 38.34825516]
[94.81009674 34.44504929]
[95.46706390 30.95165634]
[97.06722260 28.21193123]
[99.23874664 26.43918800]
[101.46386719 11.60514450]
[103.35715485 -3.27489090]
[104.91767883 -18.19349670]
[106.47820282 -33.11209869]
[108.03872681 -48.03070450]
[97.72377014 -55.09254456]
[91.42660522 -65.80767822]
[90.28934479 -78.11158752]
[94.46670532 -89.66367340]
[103.10823059 -98.29252625]
[114.53060913 -102.40402985]
[116.53462219 -117.26956177]
[118.53863525 -132.13508606]
[120.54264832 -147.00061035]
[122.54666138 -161.86614990]
[116.72244263 -176.57630920]
[126.09075165 -188.15577698]
[127.09501648 -203.12211609]
[127.09501648 -218.12211609]
[127.09501648 -233.12211609]
[127.09501648 -248.12211609]
[127.09501648 -263.12213135]
[127.09501648 -278.12213135]
[126.76004028 -293.11837769]
[126.09025574 -308.10342407]
[125.42047119 -323.08847046]
[124.75068665 -338.07348633]
[124.08089447 -353.05853271]
[115.73510742 -366.49945068]
[122.89638519 -379.55950928]
[122.22660065 -394.54455566]
[107.38742065 -397.11608887]
[93.44813538 -402.81787109]
[81.06072998 -411.38330078]
[70.80457306 -422.41168213]
[63.15936661 -435.38723755]
[58.48268890 -449.70303345]
[56.99327850 -464.68957520]
[58.76079941 -479.64584351]
[63.70257950 -493.87231445]
[71.58747864 -506.70361328]
[82.04671478 -517.53961182]
[94.59108734 -525.87341309]
[108.63386536 -531.31536865]
[123.51825714 -533.61077881]
[138.54808044 -532.65240479]
[153.02037048 -528.48504639]
[166.25822449 -521.30358887]
[177.64248657 -511.44396973]
[186.64070129 -499.36727905]
[192.83200073 -485.63839722]
[195.92680359 -470.89947510]
[195.78036499 -455.83984375]
[192.39953613 -441.16387939]
[185.94242859 -427.55798340]
[176.71107483 -415.65856934]
[165.13723755 -406.02215576]
[151.76222229 -399.09948730]
[137.21163940 -395.21435547]
[137.88142395 -380.22930908]
[146.17930603 -367.86022949]
[139.06593323 -353.72833252]
[139.73571777 -338.74328613]
[140.40550232 -323.75823975]
[141.07528687 -308.77319336]
[141.74507141 -293.78817749]
[144.08639526 -291.15176392]
[145.26708984 -287.25036621]
[144.70648193 -282.64178467]
[142.09501648 -278.12213135]
[142.09501648 -263.12213135]
[142.09501648 -248.12211609]
[142.09501648 -233.12211609]
[142.09501648 -218.12211609]
[142.09501648 -203.12211609]
[151.41137695 -214.87820435]
[165.56980896 -219.83184814]
[180.18318176 -216.44813538]
[190.72335815 -205.77552795]
[193.92437744 -191.12104797]
[188.79434204 -177.02555847]
[176.92286682 -167.85670471]
[161.98844910 -166.45553589]
[148.61869812 -173.25622559]
[140.95628357 -186.15176392]
[146.92384338 -172.50488281]
[137.41218567 -159.86213684]
[135.40817261 -144.99659729]
[133.40415955 -130.13107300]
[131.40014648 -115.26554871]
[129.39613342 -100.40001678]
[142.72161865 -88.81109619]
[146.45578003 -71.38964844]
[138.91888428 -55.07171631]
[122.95732880 -46.47018051]
[121.39680481 -31.55157661]
[119.83628082 -16.63297272]
[118.27576447 -1.71436799]
[120.20009613 1.24016690]
[120.78897858 5.27356052]
[119.55093384 9.74799156]
[116.29790497 13.83026123]
[114.07279205 28.66430473]
[112.29032135 43.55802155]
[110.95208740 58.49820709]
[109.61385345 73.43839264]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[103.22462463 157.60289001]
[113.26096344 169.51547241]
[111.91644287 184.66957092]
[100.49776459 194.16427612]
[107.18722534 208.50169373]
[98.52474213 220.61824036]
[97.40909576 235.57669067]
[96.29344177 250.53515625]
[98.81543732 256.64669800]
[97.99547577 262.27029419]
[94.91535950 265.92019653]
[93.35483551 280.83880615]
[101.24118805 297.47872925]
[90.38696289 311.26834106]
[89.04872894 326.20852661]
[87.71049500 341.14868164]
[95.84371185 357.66937256]
[85.19599915 371.61901855]
[84.08035278 386.57748413]
[86.56282043 395.36810303]
[82.83510590 401.74978638]
[81.49687195 416.68997192]
[80.15863800 431.63015747]
[78.82040405 446.57034302]
[77.48217010 461.51052856]
[76.14393616 476.45071411]
[74.80570221 491.39089966]
[73.46746826 506.33108521]
[79.94272614 520.76654053]
[71.10080719 532.75274658]
[69.76257324 547.69293213]
[68.42433929 562.63311768]
[67.08610535 577.57330322]
[65.74787140 592.51348877]
[64.40963745 607.45367432]
[63.07139969 622.39385986]
[61.73316574 637.33404541]
[75.05786896 644.70782471]
[84.22621918 656.86761475]
[87.64976501 671.70672607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 207]
[11 206]
[12 205]
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[19 198]
[20 197]
[21 196]
[22 195]
[23 194]
[24 193]
[25 192]
[26 191]
[27 189]
[28 188]
[31 186]
[32 185]
[33 184]
[36 182]
[37 181]
[38 178]
[39 177]
[40 176]
[42 174]
[45 171]
[46 170]
[47 169]
[48 168]
[50 166]
[52 165]
[53 164]
[54 163]
[59 162]
[60 161]
[61 157]
[62 156]
[63 155]
[64 154]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
[76 144]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[89 119]
[90 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
