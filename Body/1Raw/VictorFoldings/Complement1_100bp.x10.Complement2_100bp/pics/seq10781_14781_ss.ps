%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[-51.54502487 402.01586914]
[-45.59789658 415.81033325]
[-41.50223923 430.26303101]
[-39.32813644 445.12667847]
[-39.11278915 460.14697266]
[-40.85988235 475.06683350]
[-44.53952026 489.63101196]
[-50.08874512 503.59027100]
[-57.41259384 516.70574951]
[-66.38574982 528.75305176]
[-76.85466766 539.52606201]
[-88.64022064 548.84033203]
[-101.54072571 556.53656006]
[-115.33545685 562.48303223]
[-129.78834534 566.57800293]
[-144.65211487 568.75140381]
[-159.67239380 568.96600342]
[-174.59219360 567.21820068]
[-189.15618896 563.53790283]
[-203.11518860 557.98797607]
[-216.23034668 550.66351318]
[-228.27722168 541.68981934]
[-239.04968262 531.22033691]
[-248.36340332 519.43438721]
[-256.05902100 506.53347778]
[-262.00482178 492.73849487]
[-266.09912109 478.28540039]
[-268.27178955 463.42153931]
[-268.48571777 448.40124512]
[-266.73721313 433.48153687]
[-263.05618286 418.91769409]
[-257.50561523 404.95895386]
[-250.18052673 391.84414673]
[-241.20622253 379.79769897]
[-230.73628235 369.02575684]
[-218.94984436 359.71258545]
[-206.04859924 352.01757812]
[-192.25331116 346.07241821]
[-177.80001831 341.97882080]
[-162.93605042 339.80685425]
[-147.91575623 339.59365845]
[-132.99612427 341.34286499]
[-118.43247223 345.02459717]
[-104.47399902 350.57580566]
[-91.35954285 357.90151978]
[-82.39884949 345.87216187]
[-73.43815613 333.84277344]
[-64.47745514 321.81338501]
[-55.51676178 309.78402710]
[-46.55606461 297.75463867]
[-37.86624146 285.52816772]
[-29.45162392 273.11065674]
[-21.03700447 260.69317627]
[-12.62238598 248.27566528]
[-14.59627628 236.34124756]
[-7.68754482 225.92716980]
[4.85463572 222.91777039]
[13.45319939 210.62692261]
[22.05176353 198.33609009]
[30.65032768 186.04524231]
[31.60621834 171.18135071]
[45.85685730 164.30894470]
[54.45542145 152.01811218]
[63.05398560 139.72727966]
[71.65254974 127.43643188]
[72.60843658 112.57253265]
[86.85907745 105.70013428]
[88.26311493 91.78897858]
[100.85008240 85.70130157]
[108.98529816 73.09899139]
[116.64589691 60.20266342]
[124.30649567 47.30633545]
[124.70214844 31.49007797]
[137.85423279 24.49923134]
[145.51483154 11.60290337]
[145.97850037 5.00771284]
[149.21710205 0.33775526]
[153.60038757 -1.55851424]
[161.64155579 -14.22103882]
[169.68273926 -26.88356400]
[167.63966370 -39.61889648]
[174.59786987 -50.00000000]
[186.37408447 -52.76538849]
[194.60289001 -65.30678558]
[202.83169556 -77.84819031]
[211.06050110 -90.38958740]
[219.28930664 -102.93099213]
[227.51811218 -115.47238922]
[228.61961365 -131.25520325]
[242.07073975 -137.65180969]
[230.29763794 -146.96264648]
[219.39349365 -157.27755737]
[209.44367981 -168.51582336]
[200.52604675 -180.58949280]
[192.71038818 -193.40406799]
[186.05787659 -206.85923767]
[180.62057495 -220.84971619]
[176.44105530 -235.26599121]
[173.55200195 -249.99525452]
[171.97605896 -264.92221069]
[171.72552490 -279.93002319]
[172.80238342 -294.90127563]
[175.19819641 -309.71875000]
[178.89421082 -324.26651001]
[183.86151123 -338.43066406]
[190.06121826 -352.10040283]
[197.44480896 -365.16867065]
[205.95448303 -377.53326416]
[215.52366638 -389.09738159]
[226.07743835 -399.77050781]
[237.53320312 -409.46908569]
[249.80133057 -418.11727905]
[262.78576660 -425.64733887]
[276.38491821 -432.00036621]
[290.49230957 -437.12661743]
[304.99758911 -440.98599243]
[319.78720093 -443.54827881]
[334.74539185 -444.79339600]
[349.75506592 -444.71163940]
[364.69882202 -443.30361938]
[379.45962524 -440.58038330]
[393.92199707 -436.56323242]
[407.97271729 -431.28359985]
[421.50186157 -424.78280640]
[434.40350342 -417.11172485]
[446.57666016 -408.33044434]
[457.92611694 -398.50759888]
[468.36297607 -387.72015381]
[477.80560303 -376.05249023]
[486.18008423 -363.59594727]
[493.42086792 -350.44796753]
[499.47131348 -336.71154785]
[504.28399658 -322.49411011]
[507.82131958 -307.90695190]
[510.05557251 -293.06423950]
[510.96926880 -278.08215332]
[510.55526733 -263.07797241]
[508.81680298 -248.16905212]
[505.76745605 -233.47215271]
[501.43115234 -219.10224915]
[495.84176636 -205.17182922]
[489.04306030 -191.78993225]
[481.08828735 -179.06126404]
[472.03964233 -167.08546448]
[461.96798706 -155.95625305]
[450.95214844 -145.76072693]
[439.07830811 -136.57870483]
[426.43942261 -128.48202515]
[413.13439941 -121.53406525]
[399.26736450 -115.78921509]
[384.94689941 -111.29241180]
[370.28500366 -108.07887268]
[355.39648438 -106.17373657]
[340.39785767 -105.59191895]
[325.40649414 -106.33797455]
[310.53970337 -108.40605927]
[295.91390991 -111.77998352]
[281.64352417 -116.43335724]
[267.84027100 -122.32974243]
[254.61213684 -129.42300415]
[254.09922791 -114.53723145]
[240.05952454 -107.24358368]
[231.83070374 -94.70217896]
[223.60189819 -82.16078186]
[215.37309265 -69.61937714]
[207.14428711 -57.07798004]
[198.91548157 -44.53657913]
[198.85997009 -26.98768044]
[182.34526062 -18.84239197]
[174.30409241 -6.17986631]
[166.26290894 6.48265886]
[158.41116333 19.26350212]
[150.75056458 32.15982819]
[150.90284729 47.05365372]
[137.20281982 54.96693420]
[129.54222107 67.86325836]
[121.88162994 80.75959015]
[136.84005737 79.64364624]
[147.15043640 90.53841400]
[145.21234131 105.41268158]
[132.45446777 113.30168915]
[118.28142548 108.38995361]
[113.14092255 94.29986572]
[111.73688507 108.21102142]
[99.14991760 114.29869843]
[97.57899475 130.04171753]
[83.94338226 136.03500366]
[75.34481812 148.32583618]
[66.74626160 160.61666870]
[58.14769363 172.90751648]
[56.57677841 188.65054321]
[42.94116592 194.64381409]
[34.34260178 206.93464661]
[25.74403763 219.22549438]
[17.14547348 231.51632690]
[15.97431469 249.89321899]
[-0.20489039 256.69027710]
[-8.61950874 269.10778809]
[-17.03412819 281.52526855]
[-25.44874573 293.94277954]
[-25.82230568 299.14926147]
[-27.94351196 303.27890015]
[-31.10951614 305.84628296]
[-34.52668762 306.71533203]
[-43.48738480 318.74472046]
[-52.44808197 330.77410889]
[-61.40877533 342.80346680]
[-70.36946869 354.83285522]
[-79.33016968 366.86221313]
[-68.55670929 377.33062744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 209]
[46 208]
[47 207]
[48 206]
[49 205]
[50 204]
[51 200]
[52 199]
[53 198]
[54 197]
[57 195]
[58 194]
[59 193]
[60 192]
[62 190]
[63 189]
[64 188]
[65 187]
[67 185]
[69 183]
[70 177]
[71 176]
[72 175]
[74 173]
[75 172]
[78 171]
[79 170]
[80 169]
[83 167]
[84 166]
[85 165]
[86 164]
[87 163]
[88 162]
[90 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
