%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[52.14896393 432.37500000]
[37.21504211 430.58114624]
[22.84148026 426.14938354]
[9.49032688 419.22216797]
[-2.40923619 410.02215576]
[-12.47468472 398.84512329]
[-20.38245773 386.05032349]
[-25.87835121 372.04907227]
[-28.78569603 357.29144287]
[-29.01103210 342.25186157]
[-26.54711914 327.41378784]
[-21.47315788 313.25415039]
[-13.95225620 300.22821045]
[-4.22618008 288.75460815]
[7.39241648 279.20223999]
[20.53004456 271.87811279]
[34.76438522 267.01773071]
[49.63785934 264.77731323]
[50.08446503 249.78395081]
[50.53107071 234.79060364]
[50.97767639 219.79725647]
[51.42428207 204.80390930]
[44.38856125 218.05149841]
[34.52315521 229.35076904]
[22.34557724 238.10900879]
[8.49464226 243.86674500]
[-6.30305767 246.32196045]
[-21.27126503 245.34585571]
[-35.62477493 240.98963928]
[-48.61063766 233.48181152]
[-59.54763412 223.21623230]
[-67.86203766 210.73141479]
[-73.11768341 196.68228149]
[-75.03887177 181.80581665]
[-73.52483368 166.88243103]
[-68.65497589 152.69494629]
[-60.68476868 139.98764038]
[-50.03231430 129.42707825]
[-37.25642014 121.56728363]
[-23.02727890 116.82054138]
[-8.09132671 115.43585968]
[6.76792717 117.48587799]
[20.77099609 122.86306000]
[33.18330765 131.28532410]
[43.35373306 142.31085205]
[50.74875641 155.36128235]
[54.98044968 169.75199890]
[55.82672882 184.72976685]
[53.68598175 169.98980713]
[66.20596313 160.31712341]
[72.07492828 146.51295471]
[69.93418121 131.77299500]
[82.45416260 122.10031128]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[103.74166107 72.03072357]
[102.02070618 56.30339813]
[114.12089539 47.61808777]
[113.48600769 42.43696976]
[114.77326202 37.97644806]
[117.38630676 34.84801865]
[120.57249451 33.33788300]
[127.05199432 19.80953789]
[133.53149414 6.28119326]
[140.01098633 -7.24715233]
[138.99400330 -23.03563881]
[151.46995544 -31.17198181]
[138.34527588 -38.44356155]
[125.67442322 -46.47988510]
[113.50190735 -55.25272369]
[101.87047577 -64.73126984]
[90.82099152 -74.88221741]
[80.39225769 -85.66992188]
[70.62091827 -97.05648804]
[61.54128265 -109.00191498]
[53.18525696 -121.46424866]
[45.58218002 -134.39971924]
[38.75876617 -147.76286316]
[32.73897934 -161.50679016]
[27.54396629 -175.58317566]
[23.19197273 -189.94259644]
[19.69828606 -204.53462219]
[17.07517815 -219.30798340]
[15.33186340 -234.21080017]
[14.47446537 -249.19071960]
[14.50599384 -264.19509888]
[15.42634010 -279.17129517]
[17.23227119 -294.06665039]
[19.91744232 -308.82885742]
[23.47242355 -323.40606689]
[27.88472557 -337.74707031]
[33.13885117 -351.80151367]
[39.21634674 -365.51998901]
[46.09585953 -378.85437012]
[53.75323105 -391.75775146]
[62.16156006 -404.18487549]
[71.29131317 -416.09204102]
[81.11042023 -427.43743896]
[91.58439636 -438.18121338]
[102.67644501 -448.28564453]
[114.34761047 -457.71520996]
[126.55689240 -466.43682861]
[139.26139832 -474.41983032]
[152.41651917 -481.63616943]
[165.97604370 -488.06054688]
[179.89233398 -493.67034912]
[194.11650085 -498.44589233]
[208.59860229 -502.37039185]
[223.28776550 -505.43005371]
[238.13238525 -507.61416626]
[253.08032227 -508.91500854]
[268.07907104 -509.32806396]
[283.07592773 -508.85186768]
[298.01824951 -507.48806763]
[312.85354614 -505.24145508]
[327.52969360 -502.11993408]
[341.99511719 -498.13449097]
[356.19906616 -493.29910278]
[370.09161377 -487.63073730]
[383.62396240 -481.14932251]
[396.74856567 -473.87762451]
[409.41934204 -465.84118652]
[421.59179688 -457.06823730]
[433.22314453 -447.58959961]
[444.27252197 -437.43853760]
[454.70117188 -426.65075684]
[464.47241211 -415.26409912]
[473.55194092 -403.31860352]
[481.90786743 -390.85620117]
[489.51080322 -377.92065430]
[496.33410645 -364.55743408]
[502.35379028 -350.81347656]
[507.54867554 -336.73703003]
[511.90054321 -322.37756348]
[515.39410400 -307.78552246]
[518.01708984 -293.01214600]
[519.76025391 -278.10931396]
[520.61755371 -263.12939453]
[520.58587646 -248.12498474]
[519.66540527 -233.14881897]
[517.85931396 -218.25347900]
[515.17401123 -203.49130249]
[511.61892700 -188.91410828]
[507.20648193 -174.57315063]
[501.95223999 -160.51875305]
[495.87463379 -146.80032349]
[488.99499512 -133.46601868]
[481.33752441 -120.56268311]
[472.92907715 -108.13565063]
[463.79922485 -96.22856903]
[453.98001099 -84.88325500]
[443.50595093 -74.13957214]
[432.41378784 -64.03524017]
[420.74255371 -54.60576630]
[408.53320312 -45.88426590]
[395.82861328 -37.90137482]
[382.67343140 -30.68513489]
[369.11386108 -24.26089096]
[355.19750977 -18.65120888]
[340.97329712 -13.87579536]
[326.49118042 -9.95142174]
[311.80197144 -6.89187431]
[296.95733643 -4.70789862]
[282.00939941 -3.40716720]
[267.01065063 -2.99424791]
[252.01377869 -3.47059178]
[237.07147217 -4.83452511]
[222.23620605 -7.08125782]
[207.56008911 -10.20289707]
[193.09468079 -14.18847942]
[178.89079285 -19.02400398]
[164.99829102 -24.69248581]
[166.47872925 -9.87163639]
[153.53933716 -0.76765645]
[147.05982971 12.76068878]
[140.58033752 26.28903389]
[134.10084534 39.81737900]
[127.92507172 53.48704910]
[130.06582642 68.22701263]
[117.54583740 77.89968872]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[96.25833893 127.96927643]
[97.97929382 143.69660950]
[85.87910461 152.38191223]
[80.01013947 166.18608093]
[81.73110199 181.91342163]
[69.63090515 190.59872437]
[66.41763306 205.25050354]
[65.97102356 220.24386597]
[65.52442169 235.23721313]
[65.07781219 250.23056030]
[64.63121033 265.22390747]
[79.34496307 268.34564209]
[93.26476288 274.04467773]
[105.94316101 282.13775635]
[116.97259521 292.36474609]
[125.99850464 304.39691162]
[132.73075867 317.84741211]
[136.95292664 332.28393555]
[138.52929688 347.24237061]
[137.40917969 362.24188232]
[133.62860107 376.80029297]
[127.30908203 390.44958496]
[118.65377045 402.75103760]
[107.94089508 413.30914307]
[95.51483917 421.78457642]
[81.77503967 427.90484619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 195]
[19 194]
[20 193]
[21 192]
[22 191]
[48 190]
[50 188]
[51 187]
[53 185]
[54 184]
[56 182]
[57 181]
[59 179]
[63 178]
[64 177]
[65 176]
[66 175]
[68 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
