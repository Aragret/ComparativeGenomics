%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[124.23881531 492.37475586]
[132.04508972 479.45327759]
[143.04885864 469.11791992]
[156.43356323 462.13562012]
[153.32945251 447.46032715]
[150.22534180 432.78503418]
[147.12123108 418.10971069]
[144.01712036 403.43441772]
[140.91300964 388.75912476]
[130.66783142 399.71524048]
[115.70301056 398.68856812]
[107.05004883 386.43597412]
[111.08759308 371.98959351]
[124.83930969 365.99874878]
[138.16696167 372.87835693]
[136.16293335 358.01284790]
[134.15892029 343.14730835]
[132.15490723 328.28176880]
[129.05079651 313.60647583]
[124.86379242 299.20269775]
[120.67678070 284.79891968]
[116.48976898 270.39514160]
[112.30275726 255.99134827]
[108.11574554 241.58757019]
[103.92873383 227.18379211]
[99.74172211 212.77999878]
[96.43643951 227.41131592]
[88.38459015 240.06704712]
[76.53208923 249.26043701]
[62.27136993 253.91143799]
[47.27775955 253.47366333]
[33.31269455 247.99855042]
[22.01677513 238.12928772]
[14.71703720 225.02532959]
[12.27104473 210.22610474]
[14.96615124 195.47019958]
[22.48573875 182.49114990]
[33.94641113 172.81370544]
[48.00178528 167.57476807]
[63.00064468 167.38978577]
[77.18093872 172.28051758]
[88.87678528 181.67239380]
[96.71473694 194.46351624]
[96.04495239 179.47846985]
[95.37516785 164.49343872]
[87.07728577 152.12434387]
[94.19065857 137.99244690]
[93.52087402 123.00740814]
[92.85108948 108.02236938]
[89.52882385 93.39490509]
[83.65986633 79.59072876]
[77.79090881 65.78655243]
[71.92194366 51.98237610]
[66.05298615 38.17819977]
[65.20698547 53.15432358]
[60.97566223 67.54515076]
[53.58096695 80.59576416]
[43.41082001 91.62155914]
[30.99872208 100.04413605]
[16.99578857 105.42166901]
[2.13658762 107.47206879]
[-12.79939938 106.08776093]
[-27.02865982 101.34138489]
[-39.80475616 93.48190308]
[-50.45747757 82.92162323]
[-58.42800522 70.21450806]
[-63.29821777 56.02715683]
[-64.81263733 41.10380173]
[-62.89182281 26.22729492]
[-57.63653183 12.17802811]
[-49.32244873 -0.30700347]
[-38.38571167 -10.57285881]
[-25.40004158 -18.08101273]
[-11.04664040 -22.43759918]
[3.92154145 -23.41408539]
[18.71930313 -20.95924377]
[32.57038498 -15.20184994]
[44.74818420 -6.44392729]
[54.61387634 4.85510254]
[61.65053558 18.10405922]
[61.20392990 3.11070871]
[60.75732422 -11.88264084]
[60.31071854 -26.87599182]
[59.86411285 -41.86934280]
[56.71999359 -47.68535614]
[56.95045090 -53.36372757]
[59.63413620 -57.31428528]
[59.63413620 -72.31428528]
[59.63413620 -87.31428528]
[47.34346771 -78.71547699]
[32.91503525 -82.81673431]
[26.98493958 -96.59475708]
[33.92462921 -109.89290619]
[48.61841965 -112.90827942]
[60.23389435 -103.41954041]
[61.34954071 -118.37799835]
[54.66008377 -132.71542358]
[63.32256317 -144.83197021]
[64.43820953 -159.79042053]
[50.51369476 -165.73907471]
[39.27684402 -175.88856506]
[31.94655228 -189.13792419]
[29.31795120 -204.04997253]
[31.67617416 -219.00715637]
[38.76541519 -232.38703918]
[49.81669235 -242.73828125]
[63.63124084 -248.93803406]
[78.71056366 -250.31381226]
[93.41896820 -246.71636963]
[106.16099548 -238.53593445]
[115.55448914 -226.65986633]
[120.58051300 -212.37638855]
[120.69387817 -197.23486328]
[115.88228607 -182.87773132]
[106.66767120 -170.86233521]
[94.04955292 -162.49203491]
[79.39666748 -158.67477417]
[78.28101349 -143.71632385]
[85.05027771 -130.44882202]
[76.30799866 -117.26234436]
[75.19234467 -102.30389404]
[74.63413239 -87.31428528]
[74.63413239 -72.31428528]
[74.63413239 -57.31428528]
[74.85746002 -42.31594849]
[75.30406952 -27.32259750]
[75.75067902 -12.32924747]
[76.19728088 2.66410279]
[76.64389038 17.65745354]
[79.85716248 32.30923843]
[85.72612000 46.11341858]
[91.59508514 59.91759491]
[97.46404266 73.72177124]
[103.33300781 87.52594757]
[104.19845581 72.55093384]
[108.57540894 58.20373154]
[116.21633911 45.29574203]
[126.68910980 34.55697632]
[139.40142822 26.59476089]
[153.63436890 21.85939980]
[168.58296204 20.61870003]
[183.40182495 22.94283104]
[197.25285339 28.70034790]
[209.35270691 37.56563950]
[219.01708984 49.03732681]
[225.69943237 62.46663284]
[229.02182007 77.09406281]
[228.79635620 92.09236908]
[225.03576660 106.61331940]
[217.95275879 119.83569336]
[207.94790649 131.01168823]
[195.58702087 139.50924683]
[181.56918335 144.84780884]
[166.68716431 146.72543335]
[151.78262329 145.03594971]
[137.69845581 139.87489319]
[125.23122406 131.53414917]
[115.08599854 120.48542023]
[107.83612823 107.35258484]
[108.50591278 122.33762360]
[109.17569733 137.32266235]
[117.52149200 150.76358032]
[110.36020660 163.82363892]
[111.02999115 178.80868530]
[111.69977570 193.79373169]
[114.14550781 208.59300232]
[118.33251953 222.99678040]
[122.51953125 237.40055847]
[126.70654297 251.80433655]
[130.89355469 266.20812988]
[135.08056641 280.61190796]
[139.26757812 295.01568604]
[143.45458984 309.41946411]
[148.57145691 295.31921387]
[159.98907471 285.59100342]
[174.72291565 282.77780151]
[188.92156982 287.61495972]
[198.87356567 298.83804321]
[201.97744751 313.51339722]
[197.42189026 327.80490112]
[186.39768982 337.97677612]
[171.78656006 341.37014771]
[157.40782166 337.09796143]
[147.02044678 326.27777100]
[149.02445984 341.14331055]
[151.02847290 356.00881958]
[153.03248596 370.87435913]
[155.58831787 385.65499878]
[158.69242859 400.33032227]
[161.79653931 415.00561523]
[164.90065002 429.68090820]
[168.00476074 444.35623169]
[171.10887146 459.03152466]
[186.17446899 459.99603271]
[200.42079163 464.99050903]
[212.79066467 473.64431763]
[222.36616516 485.31533813]
[228.43673706 499.13745117]
[230.55187988 514.08496094]
[228.55465698 529.04870605]
[222.59326172 542.91827393]
[213.11007690 554.66442871]
[200.80880737 563.41552734]
[186.60231018 568.52215576]
[171.54478455 569.60540771]
[156.75360107 566.58489990]
[143.32637024 559.68475342]
[132.25946045 549.41699219]
[124.37414551 536.54364014]
[120.25554657 522.01983643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 193]
[5 192]
[6 191]
[7 190]
[8 189]
[9 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 173]
[20 172]
[21 171]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[43 165]
[44 164]
[45 163]
[47 161]
[48 160]
[49 159]
[50 134]
[51 133]
[52 132]
[53 131]
[54 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[87 124]
[88 123]
[89 122]
[95 121]
[96 120]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
