%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[93.37538147 678.61523438]
[78.36909485 679.12396240]
[63.39578629 678.00720215]
[48.63099670 675.27801514]
[34.24783707 670.96850586]
[20.41494370 665.12915039]
[7.29450083 657.82836914]
[-4.95966053 649.15179443]
[-16.20386696 639.20117188]
[-26.30628777 628.09313965]
[-35.14847565 615.95794678]
[-42.62675858 602.93786621]
[-48.65346146 589.18554688]
[-53.15792465 574.86224365]
[-56.08732986 560.13586426]
[-57.40733719 545.17913818]
[-57.10246658 530.16729736]
[-55.17629242 515.27648926]
[-51.65140152 500.68118286]
[-46.56911850 486.55258179]
[-39.98903275 473.05630493]
[-31.98829079 460.35058594]
[-22.66069794 448.58438110]
[-12.11561489 437.89569092]
[-0.47667682 428.40979004]
[12.11965466 420.23788452]
[25.52569389 413.47583008]
[39.58426285 408.20291138]
[54.13053131 404.48089600]
[68.99395752 402.35348511]
[84.00025940 401.84555054]
[85.11591339 386.88711548]
[86.23155975 371.92864990]
[87.34720612 356.97021484]
[88.46286011 342.01174927]
[80.80943298 332.64416504]
[81.61647797 320.17291260]
[90.99562073 311.31884766]
[84.42464447 297.95202637]
[93.36228180 284.89718628]
[86.79130554 271.53036499]
[95.72894287 258.47552490]
[97.06717682 243.53532410]
[98.40541077 228.59513855]
[90.89230347 219.11465454]
[91.88494110 206.65678406]
[101.39486694 197.94334412]
[102.95539093 183.02473450]
[102.62041473 168.02848816]
[100.39529419 153.19444275]
[98.17018127 138.36039734]
[95.94506073 123.52635193]
[82.93615723 116.69601440]
[76.39088440 103.54138184]
[78.78853607 89.04530334]
[89.22089386 78.69876862]
[86.99577332 63.86472321]
[82.62798309 55.84224319]
[84.84967041 48.79342270]
[82.84565735 33.92789459]
[80.84163666 19.06236649]
[78.83762360 4.19683790]
[76.83361053 -10.66869068]
[67.32196045 -23.31143761]
[73.28952026 -36.95832062]
[63.77787018 -49.60106659]
[69.74542999 -63.24795151]
[67.74141693 -78.11347961]
[65.73740387 -92.97901154]
[62.19773102 -107.55538177]
[57.16081619 -121.68441772]
[52.12390137 -135.81344604]
[47.08698273 -149.94247437]
[41.25761414 -156.97499084]
[42.08196259 -164.31953430]
[37.25596619 -178.52198792]
[32.42996979 -192.72444153]
[27.60397148 -206.92689514]
[12.71379471 -204.78276062]
[-2.31682110 -205.41143799]
[-16.97594070 -208.79150391]
[-30.76427841 -214.80784607]
[-43.21220779 -223.25555420]
[-53.89575958 -233.84687805]
[-62.45105743 -246.22111511]
[-68.58670807 -259.95678711]
[-72.09373474 -274.58602905]
[-72.85268402 -289.61065674]
[-70.83771515 -304.51885986]
[-66.11744690 -318.80288696]
[-58.85266495 -331.97625732]
[-49.29079056 -343.59027100]
[-37.75750732 -353.24935913]
[-24.64562798 -360.62454224]
[-10.40174103 -365.46459961]
[4.48901224 -367.60473633]
[19.51945877 -366.97198486]
[34.17766571 -363.58798218]
[47.96438217 -357.56793213]
[60.41003418 -349.11685181]
[71.09072876 -338.52264404]
[79.64269257 -326.14611816]
[85.77463531 -312.40878296]
[89.27771759 -297.77859497]
[90.03262329 -282.75378418]
[88.01363373 -267.84613037]
[83.28952026 -253.56335449]
[76.02118683 -240.39195251]
[66.45618439 -228.78051758]
[54.92029190 -219.12454224]
[41.80642700 -211.75289917]
[46.63242340 -197.55043030]
[51.45841980 -183.34797668]
[56.28442001 -169.14552307]
[61.21601105 -154.97938538]
[66.25292969 -140.85035706]
[71.28984833 -126.72132874]
[76.32675934 -112.59230042]
[79.16496277 -127.32134247]
[87.35942078 -139.88520813]
[99.69453430 -148.42013550]
[114.34046173 -151.66001892]
[129.12457275 -149.12423706]
[141.85371399 -141.18894958]
[150.63961792 -129.03131104]
[154.17893982 -114.45485687]
[151.94662476 -99.62188721]
[144.27384949 -86.73281097]
[132.29881287 -77.69962311]
[117.79792786 -73.86235809]
[102.92234039 -75.79025269]
[89.87873077 -83.19730377]
[80.60293579 -94.98302460]
[82.60694885 -80.11749268]
[84.61096191 -65.25196838]
[93.97927094 -53.67250443]
[88.15505219 -38.96233368]
[97.52336121 -27.38287163]
[91.69914246 -12.67270374]
[93.70315552 2.19282413]
[95.70716858 17.05835152]
[97.71118164 31.92388153]
[99.71519470 46.78940964]
[101.82981873 61.63960648]
[104.05493927 76.47364807]
[117.06384277 83.30398560]
[123.60911560 96.45861816]
[121.21146393 110.95469666]
[110.77910614 121.30123138]
[113.00422668 136.13526917]
[115.22933960 150.96931458]
[117.45446014 165.80335999]
[122.53701019 151.69068909]
[131.87509155 139.95185852]
[144.48324585 131.82569885]
[159.03091431 128.16979980]
[173.98281860 129.36996460]
[187.76107788 135.29953003]
[198.91160583 145.33274841]
[206.25769043 158.41078186]
[209.02407837 173.15348816]
[206.91880798 188.00500488]
[200.16407776 201.39805603]
[189.47270203 211.91920471]
[175.97299194 218.45814514]
[161.08959961 220.32481384]
[146.39318848 217.32220459]
[133.43472290 209.76719666]
[123.58174133 198.45707703]
[117.87399292 184.58526611]
[116.31346893 199.50387573]
[124.19982147 216.14378357]
[113.34559631 229.93338013]
[112.00736237 244.87356567]
[110.66912842 259.81375122]
[117.14438629 274.24917603]
[108.30246735 286.23541260]
[114.77772522 300.67083740]
[105.93580627 312.65707397]
[114.06902313 329.17773438]
[103.42131042 343.12741089]
[102.30566406 358.08584595]
[101.19001007 373.04431152]
[100.07436371 388.00274658]
[98.95871735 402.96121216]
[113.72365570 405.68954468]
[128.10704041 409.99829102]
[141.94024658 415.83694458]
[155.06108093 423.13699341]
[167.31571960 431.81289673]
[178.56045532 441.76293945]
[188.66346741 452.87042236]
[197.50631714 465.00512695]
[204.98530579 478.02481079]
[211.01274109 491.77679443]
[215.51797485 506.09985352]
[218.44816589 520.82604980]
[219.76898193 535.78277588]
[219.46492004 550.79461670]
[217.53955078 565.68554688]
[214.01544189 580.28100586]
[208.93392944 594.40991211]
[202.35456848 607.90655518]
[194.35450745 620.61267090]
[185.02754211 632.37939453]
[174.48303223 643.06866455]
[162.84460449 652.55517578]
[150.24871826 660.72772217]
[136.84303284 667.49053955]
[122.78475189 672.76422119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 185]
[32 184]
[33 183]
[34 182]
[35 181]
[38 179]
[40 177]
[42 175]
[43 174]
[44 173]
[47 171]
[48 170]
[49 152]
[50 151]
[51 150]
[52 149]
[56 145]
[57 144]
[59 143]
[60 142]
[61 141]
[62 140]
[63 139]
[65 137]
[67 135]
[68 134]
[69 133]
[70 118]
[71 117]
[72 116]
[73 115]
[75 114]
[76 113]
[77 112]
[78 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
