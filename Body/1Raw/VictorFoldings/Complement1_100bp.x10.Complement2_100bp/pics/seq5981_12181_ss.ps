%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[82.11740112 694.37988281]
[67.63867188 690.36151123]
[53.87921906 684.32342529]
[41.11917114 676.38861084]
[29.61830521 666.71850586]
[19.61076164 655.51000977]
[11.30028439 642.99133301]
[4.85606146 629.41735840]
[0.40929040 615.06445312]
[-1.94949865 600.22473145]
[-2.17228365 585.20037842]
[-0.25452915 570.29724121]
[3.76472187 555.81878662]
[9.80364323 542.05969238]
[17.73928833 529.30017090]
[27.41010094 517.79986572]
[38.61919022 507.79302979]
[51.13835907 499.48333740]
[64.71273041 493.03994751]
[79.06594849 488.59405518]
[93.90580750 486.23620605]
[93.68247986 471.23785400]
[93.45915222 456.23953247]
[93.23582458 441.24118042]
[93.01249695 426.24285889]
[85.08656311 413.63217163]
[92.61753845 399.71835327]
[84.69160461 387.10766602]
[92.22258759 373.19384766]
[91.99925995 358.19549561]
[91.77593231 343.19717407]
[91.55260468 328.19882202]
[91.32927704 313.20050049]
[83.40334320 300.58981323]
[90.93431854 286.67599487]
[90.71099091 271.67764282]
[79.87768555 261.52014160]
[79.43754578 246.31286621]
[90.16513824 235.01876831]
[89.94181061 220.02043152]
[89.71848297 205.02209473]
[87.45668793 202.31716919]
[86.39268494 198.38232422]
[87.09026337 193.79248047]
[89.83513641 189.35258484]
[90.28173828 174.35923767]
[90.72834778 159.36587524]
[91.17494965 144.37252808]
[76.52561951 138.67500305]
[64.70982361 128.30911255]
[57.15382004 114.52610016]
[54.76967621 98.98967743]
[57.84518051 83.57520294]
[66.00908661 70.14332581]
[78.27596283 60.31538010]
[93.16509247 55.27766800]
[93.38842010 40.27933121]
[93.61174774 25.28099442]
[92.71893311 10.30758762]
[90.71492004 -4.55794048]
[88.71090698 -19.42346764]
[86.70688629 -34.28899765]
[84.70287323 -49.15452576]
[82.69886017 -64.02005005]
[80.69484711 -78.88558197]
[71.18319702 -91.52832794]
[77.15075684 -105.17520905]
[75.14674377 -120.04074097]
[73.14273071 -134.90626526]
[71.13871765 -149.77180481]
[69.13470459 -164.63732910]
[62.40766907 -151.23034668]
[50.27468109 -142.41044617]
[35.44628143 -140.14801025]
[21.23517609 -144.94848633]
[10.81615734 -155.73941040]
[6.51686382 -170.11007690]
[9.29776764 -184.85003662]
[18.53760719 -196.66635132]
[32.17218018 -202.91923523]
[47.15548706 -202.21174622]
[60.14021683 -194.70198059]
[68.22556305 -182.06758118]
[68.67216492 -197.06092834]
[69.11877441 -212.05427551]
[69.56537628 -227.04763794]
[62.24238968 -241.07205200]
[70.35520172 -253.56330872]
[62.09464645 -263.46917725]
[62.77529526 -275.94796753]
[71.48765564 -284.33972168]
[72.15744019 -299.32476807]
[72.82722473 -314.30981445]
[73.49700928 -329.29483032]
[74.16679382 -344.27987671]
[59.73841476 -348.66995239]
[46.85552979 -356.51101685]
[36.32796097 -367.31011963]
[28.81748199 -380.38848877]
[24.79620934 -394.92398071]
[24.51692200 -410.00286865]
[27.99717712 -424.67727661]
[35.01820374 -438.02478027]
[45.13865280 -449.20635986]
[57.72234344 -457.51907349]
[71.97825623 -462.44042969]
[87.01025391 -463.66107178]
[101.87340546 -461.10421753]
[115.63340759 -454.93063354]
[127.42530060 -445.52838135]
[136.50781250 -433.48852539]
[142.31004333 -419.56784058]
[144.46722412 -404.64144897]
[142.84378052 -389.64761353]
[137.54176331 -375.52883911]
[128.89443970 -363.17269897]
[117.44539642 -353.35586548]
[103.91433716 -346.69543457]
[89.15183258 -343.61010742]
[88.48204803 -328.62506104]
[87.81226349 -313.64001465]
[87.14247894 -298.65496826]
[86.47269440 -283.66995239]
[95.38730621 -268.55383301]
[85.34854889 -253.11671448]
[92.70348358 -240.16471863]
[84.55873108 -226.60102844]
[84.11212158 -211.60768127]
[83.66551208 -196.61433411]
[83.21891022 -181.62097168]
[84.00022888 -166.64134216]
[86.00424194 -151.77581787]
[88.00826263 -136.91027832]
[90.01227570 -122.04475403]
[92.01628876 -107.17922974]
[101.38459778 -95.59976196]
[95.56037903 -80.88959503]
[97.56439209 -66.02406311]
[99.56840515 -51.15853882]
[101.57241821 -36.29301071]
[103.57643127 -21.42748260]
[105.58044434 -6.56195402]
[107.58445740 8.30357456]
[114.73636627 -4.88165140]
[127.47076416 -12.80851841]
[142.45889282 -13.40496254]
[155.78291321 -6.51507425]
[163.95994568 6.06014538]
[164.85253906 21.03356552]
[158.22737122 34.49116898]
[145.81623840 42.91516876]
[130.86338806 44.10355377]
[117.27745056 37.74568558]
[108.61008453 25.50432205]
[108.38675690 40.50265884]
[108.16342926 55.50099564]
[121.49694824 60.19190979]
[132.73216248 68.76847839]
[140.77241516 80.39353180]
[144.83287048 93.93237305]
[144.51722717 108.06346893]
[139.85626221 121.40749359]
[131.30496216 132.66194153]
[119.69798279 140.72827148]
[106.16830444 144.81913757]
[105.72169495 159.81248474]
[105.27509308 174.80583191]
[104.82848358 189.79917908]
[104.71681976 204.79876709]
[104.94014740 219.79710388]
[105.16347504 234.79544067]
[116.22257233 245.76513672]
[116.23540497 260.97875977]
[105.70932770 271.45431519]
[105.93265533 286.45266724]
[113.87456512 300.13610840]
[106.32761383 312.97717285]
[106.55094147 327.97549438]
[106.77426910 342.97384644]
[106.99759674 357.97216797]
[107.22092438 372.97052002]
[115.16282654 386.65396118]
[107.61587524 399.49502563]
[115.55778503 413.17846680]
[108.01083374 426.01953125]
[108.23416138 441.01785278]
[108.45748901 456.01620483]
[108.68081665 471.01452637]
[108.90414429 486.01287842]
[123.80761719 487.92785645]
[138.28684998 491.94442749]
[152.04704285 497.98077393]
[164.80807495 505.91406250]
[176.31013489 515.58276367]
[186.31906128 526.78997803]
[194.63108826 539.30761719]
[201.07699585 552.88079834]
[205.52554321 567.23315430]
[207.88616943 582.07257080]
[208.11080933 597.09692383]
[206.19490051 612.00024414]
[202.17744446 626.47924805]
[196.14022827 640.23907471]
[188.20616150 652.99957275]
[178.53677368 664.50103760]
[167.32891846 674.50927734]
[154.81077576 682.82055664]
[141.23719788 689.26562500]
[126.88453674 693.71325684]
[112.04497528 696.07299805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 189]
[22 188]
[23 187]
[24 186]
[25 185]
[27 183]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[35 175]
[36 174]
[39 171]
[40 170]
[41 169]
[45 168]
[46 167]
[47 166]
[48 165]
[56 156]
[57 155]
[58 154]
[59 143]
[60 142]
[61 141]
[62 140]
[63 139]
[64 138]
[65 137]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[83 130]
[84 129]
[85 128]
[86 127]
[88 125]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
