%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[79.29930878 986.43023682]
[64.31637573 985.68353271]
[49.36862564 984.41436768]
[34.47427368 982.62432861]
[19.65146828 980.31561279]
[4.91826534 977.49090576]
[-9.70738220 974.15380859]
[-24.20765686 970.30828857]
[-38.56489182 965.95904541]
[-52.76159286 961.11145020]
[-66.78047180 955.77130127]
[-80.60443115 949.94512939]
[-94.21665192 943.64013672]
[-107.60053253 936.86383057]
[-120.73976898 929.62463379]
[-133.61836243 921.93127441]
[-146.22061157 913.79315186]
[-158.53115845 905.22015381]
[-170.53503418 896.22271729]
[-182.21757507 886.81188965]
[-193.56457520 876.99908447]
[-204.56219482 866.79620361]
[-215.19703674 856.21575928]
[-225.45614624 845.27056885]
[-235.32702637 833.97406006]
[-244.79765320 822.33990479]
[-253.85649109 810.38232422]
[-262.49249268 798.11590576]
[-270.69512939 785.55554199]
[-278.45443726 772.71661377]
[-285.76092529 759.61462402]
[-292.60574341 746.26568604]
[-298.98049927 732.68597412]
[-304.87744141 718.89208984]
[-310.28939819 704.90075684]
[-315.20974731 690.72912598]
[-319.63253784 676.39434814]
[-323.55236816 661.91400146]
[-326.96441650 647.30566406]
[-329.86459351 632.58709717]
[-332.24932861 617.77636719]
[-334.11572266 602.89135742]
[-335.46148682 587.95031738]
[-336.28500366 572.97143555]
[-336.58526611 557.97290039]
[-336.36190796 542.97302246]
[-335.61517334 527.99005127]
[-334.34603882 513.04235840]
[-332.55596924 498.14797974]
[-330.24719238 483.32516479]
[-327.42254639 468.59197998]
[-324.08538818 453.96633911]
[-320.23986816 439.46606445]
[-315.89062500 425.10882568]
[-311.04299927 410.91213989]
[-305.70281982 396.89324951]
[-299.87667847 383.06930542]
[-293.57162476 369.45709229]
[-286.79534912 356.07321167]
[-279.55612183 342.93399048]
[-271.86276245 330.05538940]
[-263.72460938 317.45315552]
[-255.15159607 305.14260864]
[-246.15419006 293.13876343]
[-236.74333191 281.45620728]
[-226.93049622 270.10922241]
[-216.72761536 259.11163330]
[-206.14715576 248.47679138]
[-195.20199585 238.21768188]
[-183.90545654 228.34680176]
[-172.27130127 218.87619019]
[-160.31372070 209.81736755]
[-148.04728699 201.18138123]
[-135.48692322 192.97874451]
[-122.64794159 185.21945190]
[-109.54598999 177.91296387]
[-96.19702148 171.06817627]
[-82.61730957 164.69343567]
[-68.82339478 158.79650879]
[-54.83208466 153.38456726]
[-40.66041946 148.46421814]
[-26.32567024 144.04144287]
[-11.84530067 140.12164307]
[2.76304650 136.70957947]
[17.48157310 133.80943298]
[32.29235077 131.42471313]
[47.17732620 129.55833435]
[62.11837387 128.21257019]
[77.09728241 127.38906860]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[93.35250854 42.69117737]
[93.57583618 27.69284058]
[93.79916382 12.69450283]
[94.02249146 -2.30383492]
[80.18626404 -8.66612434]
[70.13889313 -20.11034966]
[65.62115479 -34.65372849]
[67.41576385 -49.77653503]
[75.21179962 -62.85865021]
[87.65854645 -71.63351440]
[102.59954071 -74.58084106]
[117.44615173 -71.18997192]
[129.62612915 -62.04841232]
[137.02919006 -48.73997879]
[138.37274170 -33.57044601]
[133.42399597 -19.16802406]
[123.04035187 -8.02801991]
[109.02082825 -2.08050728]
[108.79750061 12.91783047]
[108.57417297 27.91616821]
[108.35084534 42.91450500]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[122.07708740 128.05882263]
[137.02484131 129.32794189]
[151.91918945 131.11795044]
[166.74200439 133.42668152]
[181.47520447 136.25131226]
[196.10086060 139.58840942]
[210.60115051 143.43389893]
[224.95838928 147.78309631]
[239.15510559 152.63070679]
[253.17398071 157.97082520]
[266.99795532 163.79693604]
[280.61019897 170.10195923]
[293.99407959 176.87818909]
[307.13333130 184.11738586]
[320.01193237 191.81072998]
[332.61419678 199.94885254]
[344.92477417 208.52182007]
[356.92864990 217.51919556]
[368.61120605 226.93002319]
[379.95822144 236.74282837]
[390.95587158 246.94566345]
[401.59072876 257.52609253]
[411.84985352 268.47125244]
[421.72076416 279.76776123]
[431.19140625 291.40188599]
[440.25027466 303.35943604]
[448.88629150 315.62585449]
[457.08895874 328.18618774]
[464.84826660 341.02514648]
[472.15481567 354.12707520]
[478.99963379 367.47604370]
[485.37438965 381.05572510]
[491.27136230 394.84963989]
[496.68334961 408.84091187]
[501.60372925 423.01257324]
[506.02655029 437.34732056]
[509.94638062 451.82766724]
[513.35852051 466.43600464]
[516.25866699 481.15454102]
[518.64343262 495.96530151]
[520.50982666 510.85028076]
[521.85565186 525.79132080]
[522.67919922 540.77020264]
[522.97949219 555.76873779]
[522.75616455 570.76861572]
[522.00946045 585.75158691]
[520.74035645 600.69927979]
[518.95031738 615.59368896]
[516.64154053 630.41644287]
[513.81689453 645.14965820]
[510.47979736 659.77532959]
[506.63430786 674.27557373]
[502.28509521 688.63281250]
[497.43746948 702.82952881]
[492.09735107 716.84844971]
[486.27120972 730.67242432]
[479.96618652 744.28460693]
[473.18994141 757.66851807]
[465.95074463 770.80773926]
[458.25738525 783.68634033]
[450.11926270 796.28857422]
[441.54626465 808.59918213]
[432.54888916 820.60302734]
[423.13803101 832.28558350]
[413.32522583 843.63256836]
[403.12237549 854.63024902]
[392.54193115 865.26507568]
[381.59677124 875.52423096]
[370.30026245 885.39508057]
[358.66613770 894.86572266]
[346.70855713 903.92456055]
[334.44213867 912.56060791]
[321.88180542 920.76324463]
[309.04281616 928.52258301]
[295.94088745 935.82910156]
[282.59194946 942.67388916]
[269.01223755 949.04864502]
[255.21832275 954.94561768]
[241.22702026 960.35754395]
[227.05537415 965.27795410]
[212.72062683 969.70074463]
[198.24026489 973.62060547]
[183.63192749 977.03265381]
[168.91340637 979.93286133]
[154.10263062 982.31756592]
[139.21765137 984.18395996]
[124.27661133 985.52978516]
[109.29770660 986.35333252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[90 122]
[91 121]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
