%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[57.37596512 867.06671143]
[42.37263489 867.04840088]
[27.39014053 866.25775146]
[12.46821308 864.69689941]
[-2.35357857 862.36993408]
[-17.03592873 859.28302002]
[-31.53989983 855.44439697]
[-45.82703400 850.86419678]
[-59.85943985 845.55462646]
[-73.59990692 839.52972412]
[-87.01200104 832.80541992]
[-100.06015778 825.39959717]
[-112.70977020 817.33190918]
[-124.92729187 808.62371826]
[-136.68032837 799.29815674]
[-147.93769836 789.37988281]
[-158.66958618 778.89532471]
[-168.84748840 767.87213135]
[-178.44444275 756.33959961]
[-187.43499756 744.32836914]
[-195.79530334 731.87017822]
[-203.50318909 718.99816895]
[-210.53822327 705.74645996]
[-216.88172913 692.15014648]
[-222.51692200 678.24530029]
[-227.42883301 664.06878662]
[-231.60443115 649.65820312]
[-235.03265381 635.05175781]
[-237.70442200 620.28820801]
[-239.61262512 605.40673828]
[-240.75222778 590.44671631]
[-241.12017822 575.44793701]
[-240.71553040 560.45001221]
[-239.53933716 545.49285889]
[-237.59474182 530.61608887]
[-234.88687134 515.85913086]
[-231.42292786 501.26113892]
[-227.21208191 486.86080933]
[-222.26551819 472.69635010]
[-216.59632874 458.80532837]
[-210.21957397 445.22457886]
[-203.15214539 431.99008179]
[-195.41279602 419.13696289]
[-187.02204895 406.69927979]
[-178.00213623 394.71005249]
[-168.37699890 383.20108032]
[-158.17214966 372.20281982]
[-147.41467285 361.74447632]
[-136.13305664 351.85382080]
[-124.35724640 342.55700684]
[-112.11845398 333.87875366]
[-99.44915009 325.84201050]
[-86.38291931 318.46813965]
[-72.95441437 311.77670288]
[-59.19924927 305.78540039]
[-45.15389633 300.51013184]
[-30.85560226 295.96493530]
[-16.34228325 292.16180420]
[-1.65242767 289.11083984]
[13.17501163 286.82012939]
[28.10071373 285.29577637]
[43.08509827 284.54177856]
[58.08842850 284.56018066]
[73.07091522 285.35089111]
[74.63143921 270.43228149]
[76.19196320 255.51368713]
[69.82073212 242.05052185]
[78.95174408 229.13018799]
[80.51226807 214.21157837]
[82.07279205 199.29298401]
[83.63330841 184.37437439]
[77.26207733 170.91120911]
[86.39308929 157.99087524]
[80.02185822 144.52772522]
[89.15287018 131.60737610]
[90.71339417 116.68877411]
[81.67102814 105.36703491]
[83.17844391 90.95613861]
[94.36800385 81.75070190]
[95.92852783 66.83209991]
[88.04217529 50.19217682]
[98.89640045 36.40258408]
[92.42114258 21.96715546]
[101.26306152 9.98092365]
[93.60676575 -0.39905158]
[95.02895355 -12.81521606]
[104.22534943 -20.67351341]
[105.78587341 -35.59211731]
[107.34639740 -50.51072311]
[108.90692139 -65.42932892]
[106.99877167 -69.32970428]
[106.48291016 -73.24102020]
[107.19181824 -76.72425079]
[108.83258820 -79.43984222]
[111.03026581 -81.18006134]
[113.47599792 -95.97933197]
[115.92172241 -110.77860260]
[118.36744690 -125.57787323]
[104.46389008 -131.39059448]
[92.27595520 -140.25349426]
[82.46093750 -151.68861389]
[75.54814148 -165.07928467]
[71.91036224 -179.70335388]
[71.74378967 -194.77215576]
[75.05740356 -209.47306824]
[81.67250061 -223.01327515]
[91.23234558 -234.66256714]
[103.22137451 -243.79272461]
[116.99304962 -249.91137695]
[131.80467224 -252.68852234]
[146.85746765 -251.97442627]
[161.33966064 -247.80757141]
[174.47026062 -240.41268921]
[185.54112244 -230.18856812]
[193.95523071 -217.68658447]
[199.25881958 -203.58096313]
[201.16586304 -188.63238525]
[199.57351685 -173.64701843]
[194.56765747 -159.43299866]
[186.41825867 -146.75688171]
[175.56478882 -136.30227661]
[162.59257507 -128.63296509]
[148.20118713 -124.16255951]
[133.16671753 -123.13214874]
[130.72099304 -108.33287811]
[128.27526855 -93.53360748]
[125.82953644 -78.73433685]
[123.82552338 -63.86880493]
[122.26499939 -48.95019913]
[120.70448303 -34.03159714]
[119.14395905 -19.11299133]
[127.14304352 -3.49308109]
[116.20324707 11.31915855]
[122.77422333 24.68596649]
[113.83658600 37.74081802]
[121.34969330 47.22131348]
[120.35706329 59.67918015]
[110.84712982 68.39262390]
[109.28660583 83.31122589]
[118.32897186 94.63296509]
[116.82155609 109.04386139]
[105.63199615 118.24929810]
[104.07147217 133.16790771]
[110.33109283 147.69813538]
[101.31169891 159.55140686]
[107.57131195 174.08163452]
[98.55191803 185.93489075]
[96.99139404 200.85350037]
[95.43087006 215.77210999]
[93.87034607 230.69070435]
[100.12996674 245.22094727]
[91.11056519 257.07421875]
[89.55004883 271.99279785]
[87.98952484 286.91140747]
[102.81132507 289.23831177]
[117.49369049 292.32510376]
[131.99769592 296.16363525]
[146.28485107 300.74374390]
[160.31729126 306.05325317]
[174.05778503 312.07812500]
[187.46992493 318.80230713]
[200.51811218 326.20803833]
[213.16777039 334.27566528]
[225.38534546 342.98376465]
[237.13842773 352.30929565]
[248.39587402 362.22747803]
[259.12780762 372.71203613]
[269.30578613 383.73513794]
[278.90280151 395.26757812]
[287.89343262 407.27880859]
[296.25378418 419.73690796]
[303.96176147 432.60885620]
[310.99685669 445.86056519]
[317.34045410 459.45684814]
[322.97573853 473.36166382]
[327.88772583 487.53814697]
[332.06338501 501.94869995]
[335.49169922 516.55511475]
[338.16354370 531.31860352]
[340.07183838 546.20013428]
[341.21151733 561.16009521]
[341.57958984 576.15893555]
[341.17501831 591.15679932]
[339.99890137 606.11401367]
[338.05438232 620.99078369]
[335.34661865 635.74774170]
[331.88275146 650.34576416]
[327.67199707 664.74609375]
[322.72549438 678.91058350]
[317.05639648 692.80163574]
[310.67971802 706.38244629]
[303.61236572 719.61700439]
[295.87307739 732.47015381]
[287.48239136 744.90783691]
[278.46255493 756.89715576]
[268.83749390 768.40618896]
[258.63272095 779.40447998]
[247.87528992 789.86291504]
[236.59373474 799.75366211]
[224.81797791 809.05047607]
[212.57923889 817.72882080]
[199.90997314 825.76562500]
[186.84379578 833.13958740]
[173.41532898 839.83111572]
[159.66018677 845.82250977]
[145.61486816 851.09783936]
[131.31660461 855.64312744]
[116.80330658 859.44635010]
[102.11346436 862.49737549]
[87.28604126 864.78814697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 154]
[65 153]
[66 152]
[68 150]
[69 149]
[70 148]
[71 147]
[73 145]
[75 143]
[76 142]
[79 139]
[80 138]
[82 135]
[84 133]
[87 131]
[88 130]
[89 129]
[90 128]
[95 127]
[96 126]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
