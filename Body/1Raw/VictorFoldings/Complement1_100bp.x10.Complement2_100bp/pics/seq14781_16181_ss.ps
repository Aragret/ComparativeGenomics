%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[41.60300827 481.97573853]
[34.92225647 495.41995239]
[26.93607712 508.13211060]
[17.72384262 519.98596191]
[7.37711000 530.86364746]
[-4.00128603 540.65704346]
[-16.29825974 549.26879883]
[-29.39159584 556.61340332]
[-43.15116119 562.61785889]
[-57.44020462 567.22241211]
[-72.11671448 570.38128662]
[-87.03481293 572.06317139]
[-102.04624939 572.25134277]
[-117.00182343 570.94384766]
[-131.75289917 568.15380859]
[-146.15286255 563.90881348]
[-160.05859375 558.25115967]
[-173.33189392 551.23706055]
[-185.84085083 542.93615723]
[-197.46112061 533.43103027]
[-208.07723999 522.81610107]
[-217.58367920 511.19686890]
[-225.88595581 498.68884277]
[-232.90156555 485.41632080]
[-238.56079102 471.51119995]
[-242.80735779 457.11172485]
[-245.59907532 442.36096191]
[-246.90820312 427.40554810]
[-246.72174072 412.39407349]
[-245.04150391 397.47576904]
[-241.88423157 382.79891968]
[-237.28128052 368.50936890]
[-231.27839661 354.74914551]
[-223.93525696 341.65496826]
[-215.32482910 329.35705566]
[-205.53269958 317.97756958]
[-194.65617371 307.62960815]
[-182.80337524 298.41604614]
[-170.09208679 290.42846680]
[-156.64863586 283.74621582]
[-142.60665894 278.43572998]
[-128.10569763 274.54977417]
[-113.28987122 272.12695312]
[-98.30643463 271.19140625]
[-83.30430603 271.75238037]
[-68.43257904 273.80435181]
[-53.83907318 277.32684326]
[-39.66881561 282.28491211]
[-26.06265068 288.62927246]
[-18.40205193 275.73294067]
[-18.55433464 260.83911133]
[-4.85431433 252.92584229]
[2.80628324 240.02951050]
[10.46688080 227.13319397]
[18.12747765 214.23686218]
[17.97519493 199.34303284]
[31.67521667 191.42976379]
[39.33581161 178.53343201]
[46.99641037 165.63710022]
[46.43602371 162.89045715]
[46.92985535 159.75633240]
[48.63094330 156.63514709]
[51.54466629 153.97531128]
[55.51641464 152.22056580]
[63.93103409 139.80307007]
[72.34564972 127.38556671]
[80.76026917 114.96807098]
[89.17488861 102.55057526]
[74.27843475 104.30999756]
[62.41604996 95.12936401]
[60.38305664 80.26777649]
[69.34403992 68.23860931]
[84.16574860 65.93273163]
[96.35762024 74.67104340]
[98.93582153 89.44692230]
[108.42471313 77.82965851]
[117.91361237 66.21239471]
[127.40251160 54.59512711]
[130.13998413 39.01255035]
[144.18359375 34.05004120]
[143.66836548 21.16216660]
[151.81085205 11.68146896]
[163.83222961 10.33505440]
[173.49304199 -1.13964522]
[183.15385437 -12.61434555]
[192.64276123 -24.23160934]
[201.95764160 -35.98886108]
[211.27252197 -47.74611282]
[220.58740234 -59.50336075]
[229.90228271 -71.26061249]
[218.93702698 -81.50833130]
[208.84353638 -92.61573029]
[199.68899536 -104.50889587]
[191.53433228 -117.10866547]
[184.43380737 -130.33119202]
[178.43467712 -144.08848572]
[173.57685852 -158.28900146]
[169.89268494 -172.83821106]
[167.40667725 -187.63931274]
[166.13537598 -202.59379578]
[166.08724976 -217.60214233]
[167.26260376 -232.56446838]
[169.65362549 -247.38121033]
[173.24441528 -261.95376587]
[178.01104736 -276.18511963]
[183.92182922 -289.98062134]
[190.93739319 -303.24841309]
[199.01109314 -315.90023804]
[208.08915710 -327.85186768]
[218.11120605 -339.02377319]
[229.01051331 -349.34161377]
[240.71456909 -358.73672485]
[253.14546204 -367.14657593]
[266.22048950 -374.51519775]
[279.85263062 -380.79354858]
[293.95114136 -385.93984985]
[308.42221069 -389.91989136]
[323.16955566 -392.70712280]
[338.09500122 -394.28305054]
[353.09927368 -394.63714600]
[368.08245850 -393.76705933]
[382.94485474 -391.67861938]
[397.58758545 -388.38568115]
[411.91317749 -383.91015625]
[425.82629395 -378.28186035]
[439.23437500 -371.53823853]
[452.04815674 -363.72418213]
[464.18237305 -354.89163208]
[475.55627441 -345.09945679]
[486.09417725 -334.41275024]
[495.72595215 -322.90267944]
[504.38748169 -310.64581299]
[512.02111816 -297.72372437]
[518.57611084 -284.22244263]
[524.00878906 -270.23178101]
[528.28302002 -255.84483337]
[531.37030029 -241.15737915]
[533.25018311 -226.26715088]
[533.91009521 -211.27323914]
[533.34570312 -196.27543640]
[531.56066895 -181.37355042]
[528.56695557 -166.66673279]
[524.38439941 -152.25286865]
[519.04095459 -138.22789001]
[512.57208252 -124.68511963]
[505.02087402 -111.71469879]
[496.43756104 -99.40292358]
[486.87927246 -87.83174896]
[476.40963745 -77.07816315]
[465.09832764 -67.21374512]
[453.02059937 -58.30413055]
[440.25683594 -50.40861511]
[426.89196777 -43.57974625]
[413.01498413 -37.86296844]
[398.71817017 -33.29632950]
[384.09671021 -29.91021156]
[369.24789429 -27.72715569]
[354.27056885 -26.76168823]
[339.26437378 -27.02023506]
[324.32919312 -28.50107384]
[309.56439209 -31.19435120]
[295.06826782 -35.08214188]
[280.93725586 -40.13857651]
[267.26541138 -46.33000183]
[254.14373779 -53.61521530]
[241.65953064 -61.94573212]
[232.34465027 -50.18848038]
[223.02976990 -38.43122864]
[213.71488953 -26.67397690]
[204.40000916 -14.91672611]
[204.05026245 -10.15366840]
[200.70466614 -5.55975103]
[194.62855530 -2.95353484]
[184.96774292 8.52116489]
[175.30693054 19.99586487]
[173.16647339 37.41382599]
[155.80085754 43.53894043]
[153.74209595 58.29057693]
[139.01977539 64.08403015]
[129.53088379 75.70129395]
[120.04197693 87.31855011]
[110.55307770 98.93581390]
[101.59238434 110.96519470]
[93.17776489 123.38269043]
[84.76314545 135.80018616]
[76.34852600 148.21768188]
[67.93391418 160.63517761]
[59.89273834 173.29769897]
[52.23213959 186.19403076]
[44.57154465 199.09036255]
[44.17588806 214.90661621]
[31.02380562 221.89746094]
[23.36320686 234.79379272]
[15.70261002 247.69010925]
[8.04201221 260.58645630]
[7.64635849 276.40270996]
[-5.50572538 283.39355469]
[-13.16632271 296.28988647]
[-1.08631742 305.20346069]
[10.04613972 315.27554321]
[20.12040520 326.40603638]
[29.03635597 338.48431396]
[36.70537567 351.39028931]
[43.05124664 364.99575806]
[48.01089859 379.16546631]
[51.53503799 393.75857544]
[53.58864212 408.63006592]
[54.15129852 423.63214111]
[53.21741104 438.61569214]
[50.79627228 453.43179321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 198]
[50 197]
[52 195]
[53 194]
[54 193]
[55 192]
[57 190]
[58 189]
[59 188]
[64 187]
[65 186]
[66 185]
[67 184]
[68 183]
[75 182]
[76 181]
[77 180]
[78 179]
[80 177]
[83 175]
[84 174]
[85 173]
[86 170]
[87 169]
[88 168]
[89 167]
[90 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
