%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[87.18051910 715.96508789]
[74.82093048 707.45117188]
[63.18650818 697.97027588]
[52.35271072 687.58398438]
[42.38979721 676.35961914]
[33.36238480 664.36993408]
[25.32902336 651.69274902]
[18.34180832 638.41021729]
[12.44605732 624.60858154]
[7.68000603 610.37719727]
[4.07456493 595.80853271]
[1.65311694 580.99694824]
[0.43136662 566.03851318]
[0.41723749 551.03033447]
[1.61082113 536.06964111]
[4.00437641 521.25354004]
[7.58238029 506.67807007]
[12.32162762 492.43780518]
[18.19138145 478.62503052]
[25.15357590 465.32937622]
[33.16305542 452.63708496]
[42.16787338 440.63043213]
[52.10963440 429.38732910]
[62.92385864 418.98065186]
[74.54040527 409.47790527]
[86.88394928 400.94073486]
[99.87442017 393.42449951]
[113.42758179 386.97793579]
[127.45552826 381.64285278]
[123.26851654 367.23907471]
[119.08150482 352.83529663]
[114.89450073 338.43151855]
[110.70748901 324.02774048]
[106.52047729 309.62393188]
[102.33346558 295.22015381]
[98.14645386 280.81637573]
[94.43659210 295.35037231]
[85.50885010 307.40423584]
[72.68759918 315.18981934]
[57.87479782 317.55221558]
[43.26783371 314.14096069]
[31.03356934 305.46209717]
[22.98688126 292.80307007]
[20.32144737 278.04177856]
[23.43267059 263.36798096]
[31.85901833 250.95845032]
[44.35049438 242.65405273]
[59.05405807 239.68669128]
[73.78852844 242.49658203]
[86.36812592 250.66687012]
[94.92598724 262.98379517]
[93.81033325 248.02534485]
[92.69468689 233.06689453]
[91.57904053 218.10844421]
[80.99552917 228.73808289]
[65.99649811 228.90859985]
[55.17407227 218.52230835]
[54.72782516 203.52894592]
[64.91339111 192.51739502]
[79.89601135 191.79557800]
[91.09255219 201.77610779]
[80.56647491 191.30055237]
[80.57930756 176.08692932]
[91.63840485 165.11723328]
[91.86173248 150.11889648]
[92.08506012 135.12055969]
[92.30838776 120.12222290]
[92.53171539 105.12388611]
[90.26496887 102.00392151]
[89.38445282 97.89994812]
[90.29881287 93.45349121]
[93.11486053 89.46479034]
[94.00767517 74.49138641]
[85.38618469 58.22020340]
[95.61383820 43.95970154]
[96.28362274 28.97466278]
[96.95341492 13.98962307]
[97.62319946 -0.99541569]
[88.62055969 11.00260925]
[75.11325073 17.52583504]
[60.11882401 17.11695480]
[46.98707581 9.86731625]
[38.65167999 -2.60349441]
[36.97477341 -17.50946617]
[42.33099365 -31.52056694]
[53.52373505 -41.50667953]
[68.05252075 -45.23688507]
[82.67157745 -41.87784195]
[94.11497498 -32.17996979]
[99.82622528 -18.30977631]
[102.93033600 -32.98507690]
[106.03444672 -47.66038132]
[109.13855743 -62.33568192]
[104.42456055 -77.43829346]
[114.62816620 -88.28890228]
[100.67746735 -93.90576935]
[87.91417694 -101.85998535]
[76.72615051 -111.90982056]
[67.45337677 -123.74987030]
[60.37764740 -137.02033997]
[55.71398926 -151.31793213]
[53.60412216 -166.20819092]
[54.11215973 -181.23858643]
[57.22267151 -195.95239258]
[62.84112549 -209.90245056]
[70.79678345 -222.66484070]
[80.84788513 -233.85171509]
[92.68898773 -243.12315369]
[105.96025848 -250.19737244]
[120.25838470 -254.85940552]
[135.14888000 -256.96759033]
[150.17921448 -256.45785522]
[164.89266968 -253.34567261]
[178.84208679 -247.72563171]
[191.60357666 -239.76852417]
[202.78932190 -229.71615601]
[212.05940247 -217.87399292]
[219.13212585 -204.60192871]
[223.79254150 -190.30326843]
[225.89903259 -175.41255188]
[225.38758850 -160.38226318]
[222.27374268 -145.66915894]
[216.65211487 -131.72038269]
[208.69355774 -118.95979309]
[198.63992310 -107.77519226]
[186.79672241 -98.50644684]
[173.52384949 -91.43523407]
[159.22465515 -86.77643585]
[144.33369446 -84.67163849]
[129.30346680 -85.18479156]
[134.23948669 -71.13185883]
[123.81385803 -59.23157120]
[120.70974731 -44.55627060]
[117.60563660 -29.88096809]
[114.50152588 -15.20566559]
[112.60823822 -0.32563055]
[111.93845367 14.65940857]
[111.26866150 29.64444733]
[110.59887695 44.62948608]
[118.52782440 53.76504517]
[118.09245300 66.25481415]
[108.98107910 75.38420105]
[108.08826447 90.35760498]
[107.53005219 105.34721375]
[107.30672455 120.34555054]
[107.08339691 135.34388733]
[106.86006927 150.34222412]
[106.63674164 165.34056091]
[117.36433411 176.63465881]
[116.92418671 191.84191895]
[106.09088898 201.99943542]
[106.53749084 216.99279785]
[107.65314484 231.95124817]
[108.76879120 246.90969849]
[109.88443756 261.86816406]
[112.55023193 276.62936401]
[116.73724365 291.03314209]
[120.92425537 305.43692017]
[125.11126709 319.84072876]
[129.29827881 334.24450684]
[133.48529053 348.64828491]
[137.67230225 363.05206299]
[141.85931396 377.45584106]
[156.56127930 374.43945312]
[171.45828247 372.61590576]
[186.45373535 371.99694824]
[201.45034790 372.58666992]
[216.35089111 374.38119507]
[231.05870056 377.36892700]
[245.47840881 381.53045654]
[259.51651001 386.83877563]
[273.08190918 393.25952148]
[286.08666992 400.75100708]
[298.44647217 409.26464844]
[310.08108521 418.74523926]
[320.91513062 429.13128662]
[330.87826538 440.35546875]
[339.90594482 452.34494019]
[347.93960571 465.02194214]
[354.92709351 478.30432129]
[360.82315063 492.10586548]
[365.58950806 506.33709717]
[369.19528198 520.90570068]
[371.61706543 535.71722412]
[372.83914185 550.67559814]
[372.85360718 565.68383789]
[371.66033936 580.64453125]
[369.26712036 595.46069336]
[365.68942261 610.03625488]
[360.95050049 624.27661133]
[355.08105469 638.08953857]
[348.11914062 651.38531494]
[340.10995483 664.07781982]
[331.10540771 676.08465576]
[321.16387939 687.32800293]
[310.34988403 697.73486328]
[298.73355103 707.23791504]
[286.39019775 715.77532959]
[273.39990234 723.29187012]
[259.84686279 729.73870850]
[245.81904602 735.07409668]
[231.40737915 739.26342773]
[216.70533752 742.27947998]
[201.80828857 744.10272217]
[186.81283569 744.72131348]
[171.81623840 744.13128662]
[156.91574097 742.33642578]
[142.20799255 739.34838867]
[127.78836823 735.18652344]
[113.75039673 729.87786865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[35 157]
[36 156]
[51 155]
[52 154]
[53 153]
[54 152]
[61 151]
[64 148]
[65 147]
[66 146]
[67 145]
[68 144]
[72 143]
[73 142]
[75 139]
[76 138]
[77 137]
[78 136]
[90 135]
[91 134]
[92 133]
[93 132]
[95 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
