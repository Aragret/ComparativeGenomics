%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[132.61344910 907.94848633]
[117.79054260 905.63336182]
[103.08837128 902.64599609]
[88.53739929 898.99255371]
[74.16780090 894.68060303]
[60.00934601 889.71911621]
[46.09138107 884.11834717]
[32.44276047 877.88989258]
[19.09177017 871.04669189]
[6.06608057 863.60296631]
[-6.60730982 855.57403564]
[-18.90213203 846.97662354]
[-30.79290581 837.82849121]
[-42.25498199 828.14868164]
[-53.26460648 817.95721436]
[-63.79896164 807.27514648]
[-73.83621216 796.12475586]
[-83.35554504 784.52905273]
[-92.33724213 772.51208496]
[-100.76268768 760.09875488]
[-108.61441040 747.31481934]
[-115.87613678 734.18676758]
[-122.53282928 720.74182129]
[-128.57067871 707.00781250]
[-133.97715759 693.01324463]
[-138.74108887 678.78710938]
[-142.85258484 664.35888672]
[-146.30311584 649.75848389]
[-149.08554077 635.01611328]
[-151.19409180 620.16241455]
[-152.62440491 605.22814941]
[-153.37350464 590.24426270]
[-153.43983459 575.24182129]
[-152.82325745 560.25189209]
[-151.52507019 545.30554199]
[-149.54794312 530.43377686]
[-146.89599609 515.66741943]
[-143.57469177 501.03704834]
[-139.59094238 486.57302856]
[-134.95300293 472.30532837]
[-129.67047119 458.26348877]
[-123.75431061 444.47662354]
[-117.21677399 430.97332764]
[-110.07141113 417.78158569]
[-102.33303833 404.92874146]
[-94.01769257 392.44140625]
[-85.14260864 380.34548950]
[-75.72618103 368.66607666]
[-65.78792572 357.42730713]
[-55.34843826 346.65255737]
[-44.42936325 336.36410522]
[-33.05332947 326.58331299]
[-21.24391556 317.33041382]
[-9.02559757 308.62460327]
[3.57630038 300.48394775]
[16.53565788 292.92529297]
[29.82561493 285.96429443]
[43.41862869 279.61541748]
[57.28651810 273.89178467]
[71.40055084 268.80529785]
[85.73146057 264.36645508]
[100.24954987 260.58450317]
[114.92473602 257.46725464]
[112.47901154 242.66796875]
[110.03327942 227.86869812]
[107.58755493 213.06942749]
[105.14182281 198.27015686]
[102.50380707 195.93066406]
[100.86787415 192.19720459]
[100.87686920 187.55465698]
[102.93275452 182.75669861]
[101.15029144 167.86297607]
[99.36782074 152.96926880]
[88.10784912 139.50895691]
[95.49526215 122.64160919]
[93.49124908 107.77607727]
[89.37898254 100.84342194]
[91.56977081 92.67449188]
[89.78730774 77.78077698]
[88.00483704 62.88706207]
[86.22237396 47.99334335]
[74.08205414 38.23371506]
[72.48654175 23.10397339]
[81.86567688 11.59017944]
[80.08321381 -3.30353808]
[78.30074310 -18.19725609]
[74.17374420 -26.34622383]
[76.60431671 -33.32577133]
[75.04379272 -48.24437714]
[60.09732056 -50.16783524]
[45.99752426 -55.48690414]
[33.50479126 -63.91473389]
[23.29283714 -74.99681854]
[15.91237736 -88.13552856]
[11.76143360 -102.62229156]
[11.06385994 -117.67586517]
[13.85727692 -132.48443604]
[19.99103737 -146.24937439]
[29.13435745 -158.22837830]
[40.79414749 -167.77542114]
[54.34160995 -174.37564087]
[69.04615021 -177.67311096]
[84.11476135 -177.48999023]
[98.73482513 -173.83615112]
[112.11788940 -166.90866089]
[123.54223633 -157.08108521]
[132.39175415 -144.88342285]
[138.18919373 -130.97349548]
[140.62191772 -116.10141754]
[139.55873108 -101.06923676]
[135.05696106 -86.68762207]
[127.35939026 -73.73215485]
[116.88114166 -62.90150452]
[104.18728638 -54.77975464]
[89.96239471 -49.80490112]
[91.52291870 -34.88629532]
[93.19445801 -19.97972107]
[94.97692871 -5.08600378]
[96.75939178 9.80771351]
[108.59064484 18.78306961]
[110.61048889 33.86202621]
[101.11608887 46.21087646]
[102.89855194 61.10459518]
[104.68102264 75.99831390]
[106.46348572 90.89202881]
[108.35678101 105.77206421]
[110.36079407 120.63759613]
[120.12593842 129.06402588]
[121.48905182 141.48681641]
[114.26154327 151.18679810]
[116.04400635 166.08052063]
[117.82646942 180.97422791]
[119.94109344 195.82443237]
[122.38682556 210.62370300]
[124.83255005 225.42297363]
[127.27828217 240.22224426]
[129.72399902 255.02151489]
[144.62184143 253.25154114]
[159.58479309 252.16146851]
[174.58186340 251.75355530]
[189.58193970 252.02865601]
[204.55397034 252.98619080]
[219.46688843 254.62419128]
[234.28981018 256.93923950]
[248.99198914 259.92654419]
[263.54296875 263.57992554]
[277.91259766 267.89181519]
[292.07107544 272.85324097]
[305.98904419 278.45397949]
[319.63769531 284.68234253]
[332.98870850 291.52548218]
[346.01443481 298.96920776]
[358.68786621 306.99807739]
[370.98272705 315.59545898]
[382.87353516 324.74349976]
[394.33563232 334.42327881]
[405.34530640 344.61474609]
[415.87969971 355.29672241]
[425.91699219 366.44711304]
[435.43637085 378.04278564]
[444.41812134 390.05969238]
[452.84359741 402.47296143]
[460.69537354 415.25686646]
[467.95715332 428.38488770]
[474.61392212 441.82980347]
[480.65179443 455.56378174]
[486.05834961 469.55834961]
[490.82232666 483.78448486]
[494.93389893 498.21267700]
[498.38449097 512.81311035]
[501.16696167 527.55541992]
[503.27557373 542.40911865]
[504.70593262 557.34338379]
[505.45510864 572.32727051]
[505.52148438 587.32971191]
[504.90496826 602.31964111]
[503.60684204 617.26599121]
[501.62979126 632.13775635]
[498.97787476 646.90411377]
[495.65664673 661.53448486]
[491.67294312 675.99853516]
[487.03506470 690.26629639]
[481.75259399 704.30816650]
[475.83648682 718.09503174]
[469.29901123 731.59832764]
[462.15368652 744.79010010]
[454.41537476 757.64300537]
[446.10006714 770.13037109]
[437.22503662 782.22631836]
[427.80865479 793.90576172]
[417.87045288 805.14453125]
[407.43099976 815.91937256]
[396.51196289 826.20782471]
[385.13598633 835.98870850]
[373.32659912 845.24163818]
[361.10830688 853.94750977]
[348.50643921 862.08819580]
[335.54711914 869.64691162]
[322.25720215 876.60797119]
[308.66421509 882.95690918]
[294.79632568 888.68054199]
[280.68231201 893.76715088]
[266.35144043 898.20599365]
[251.83334351 901.98803711]
[237.15818787 905.10534668]
[222.35633850 907.55151367]
[207.45849609 909.32141113]
[192.49552917 910.41143799]
[177.49847412 910.81927490]
[162.49838257 910.54412842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 137]
[64 136]
[65 135]
[66 134]
[67 133]
[71 132]
[72 131]
[73 130]
[75 127]
[76 126]
[78 125]
[79 124]
[80 123]
[81 122]
[84 119]
[85 118]
[86 117]
[88 116]
[89 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
