%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[102.47214508 788.18640137]
[88.46939850 782.78607178]
[74.93997955 776.29034424]
[61.96942520 768.74017334]
[49.63973236 760.18341064]
[38.02886200 750.67407227]
[27.21022034 740.27227783]
[17.25220680 729.04382324]
[8.21778107 717.05969238]
[0.16406228 704.39562988]
[-6.85803080 691.13177490]
[-12.80410194 677.35192871]
[-17.63655663 663.14324951]
[-21.32484436 648.59545898]
[-23.84564400 633.80072021]
[-25.18301773 618.85241699]
[-25.32851219 603.84509277]
[-24.28120804 588.87371826]
[-22.04772377 574.03283691]
[-18.64218140 559.41632080]
[-14.08611298 545.11657715]
[-8.40832424 531.22406006]
[-1.64471078 517.82653809]
[6.16196394 505.00869751]
[14.96234322 492.85168457]
[24.70078659 481.43228149]
[35.31572342 470.82269287]
[46.74004745 461.09002686]
[58.90151978 452.29577637]
[71.72325897 444.49557495]
[85.12419891 437.73873901]
[99.01960754 432.06796265]
[113.32164001 427.51910400]
[127.93986511 424.12094116]
[125.71474457 409.28692627]
[116.17507172 397.84820557]
[121.77963257 383.05294800]
[119.55451965 368.21890259]
[117.32939911 353.38488770]
[115.10428619 338.55084229]
[112.87916565 323.71679688]
[110.65405273 308.88275146]
[99.77491760 319.20962524]
[84.89773560 317.29406738]
[76.98940277 304.54815674]
[81.87964630 290.36770630]
[95.96356964 285.20599365]
[108.85810089 292.86669922]
[107.74245453 277.90823364]
[106.62680054 262.94979858]
[105.51115417 247.99133301]
[94.86344147 234.04167175]
[102.99665833 217.52101135]
[94.15473938 205.53477478]
[100.62999725 191.09934998]
[99.29176331 176.15916443]
[83.56636810 174.36837769]
[68.55063629 169.36610413]
[54.89299011 161.36837769]
[43.18322372 150.72055054]
[33.92699814 137.88243103]
[27.52403069 123.40841675]
[24.25082588 107.92355347]
[24.24872971 92.09651947]
[27.51783180 76.61078644]
[33.91696167 62.13507843]
[43.16978455 49.29450989]
[54.87673187 38.64357758]
[68.53225708 30.64222336]
[83.54666138 25.63597679]
[81.76419830 10.74225998]
[79.98173523 -4.15145731]
[78.19926453 -19.04517365]
[68.87689972 -31.82813454]
[75.04698181 -45.38465881]
[73.04296875 -60.25018692]
[63.34413910 -72.74991608]
[69.10785675 -86.48413849]
[66.88273621 -101.31818390]
[64.65762329 -116.15222168]
[62.43250656 -130.98626709]
[59.87667465 -145.76692200]
[56.99140167 -160.48681641]
[54.10612869 -175.20671082]
[39.05397415 -175.33905029]
[24.33665085 -178.49900818]
[10.55682468 -184.55715942]
[-1.72122896 -193.26545715]
[-11.99473095 -204.26727295]
[-19.84298897 -217.11210632]
[-24.94462013 -231.27395630]
[-27.09071922 -246.17292786]
[-26.19339943 -261.19888306]
[-22.28941154 -275.73657227]
[-15.53861713 -289.19061279]
[-6.21745777 -301.01013184]
[5.29236984 -310.71109009]
[18.51954651 -317.89627075]
[32.92242432 -322.27142334]
[47.91122055 -323.65737915]
[62.87215042 -321.99740601]
[77.19257355 -317.35949707]
[90.28607178 -309.93350220]
[101.61648560 -300.02359009]
[110.71983337 -288.03549194]
[117.22334290 -274.46017456]
[120.86069489 -259.85351562]
[121.48294830 -244.81365967]
[119.06461334 -229.95645142]
[113.70472717 -215.89030457]
[105.62277985 -203.19120789]
[95.14970398 -192.37919617]
[82.71437836 -183.89700317]
[68.82601929 -178.09197998]
[71.71128845 -163.37208557]
[74.59656525 -148.65219116]
[77.30307007 -146.39228821]
[79.04943085 -142.70918274]
[79.17866516 -138.06843567]
[77.26654816 -133.21138000]
[79.49166870 -118.37734222]
[81.71678162 -103.54329681]
[83.94190216 -88.70925140]
[93.48157501 -77.27055359]
[87.87701416 -62.47530365]
[91.11703491 -58.96655655]
[92.18727875 -53.38519669]
[89.94069672 -47.16712570]
[99.13557434 -35.44946289]
[93.09298706 -20.82764053]
[94.87545013 -5.93392324]
[96.65791321 8.95979404]
[98.44038391 23.85351181]
[112.54010010 24.87699509]
[126.20777893 28.48865700]
[138.97253418 34.56406784]
[150.39459229 42.89391327]
[160.08042908 53.19120789]
[167.69633484 65.10118866]
[172.97991943 78.21351624]
[175.74917603 92.07644653]
[175.90867615 106.21236420]
[173.45292664 120.13425446]
[168.46653748 133.36245728]
[161.12129211 145.44125366]
[151.67027283 155.95446777]
[140.43908691 164.53991699]
[127.81465912 170.90179443]
[114.23194885 174.82093811]
[115.57018280 189.76112366]
[124.50782013 202.81596375]
[117.93684387 216.18278503]
[127.31598663 225.03683472]
[128.12303162 237.50810242]
[120.46960449 246.87568665]
[121.58525848 261.83413696]
[122.70090485 276.79260254]
[123.81655121 291.75103760]
[125.48809052 306.65762329]
[127.71321106 321.49166870]
[129.93832397 336.32571411]
[132.16345215 351.15975952]
[134.38856506 365.99380493]
[136.61367798 380.82785034]
[146.31251526 393.32757568]
[140.54879761 407.06179810]
[142.77391052 421.89584351]
[157.74580383 420.85546875]
[172.75303650 421.00790405]
[187.70071411 422.35217285]
[202.49432373 424.87982178]
[217.04035950 428.57482910]
[231.24682617 433.41387939]
[245.02392578 439.36630249]
[258.28454590 446.39453125]
[270.94485474 454.45413208]
[282.92480469 463.49407959]
[294.14865112 473.45730591]
[304.54541016 484.28073120]
[314.04940796 495.89602661]
[322.60049438 508.22967529]
[330.14462280 521.20373535]
[336.63412476 534.73614502]
[342.02795410 548.74139404]
[346.29199219 563.13085938]
[349.39932251 577.81365967]
[351.33026123 592.69696045]
[352.07260132 607.68658447]
[351.62164307 622.68780518]
[349.98025513 637.60577393]
[347.15884399 652.34619141]
[343.17520142 666.81585693]
[338.05450439 680.92321777]
[331.82916260 694.57922363]
[324.53854370 707.69738770]
[316.22869873 720.19488525]
[306.95220947 731.99261475]
[296.76770020 743.01605225]
[285.73956299 753.19543457]
[273.93753052 762.46649170]
[261.43621826 770.77050781]
[248.31466675 778.05505371]
[234.65583801 784.27410889]
[220.54606628 789.38824463]
[206.07456970 793.36517334]
[191.33287048 796.17980957]
[176.41413879 797.81427002]
[161.41270447 798.25830078]
[146.42341614 797.50903320]
[131.54104614 795.57122803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 167]
[35 166]
[37 164]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[48 158]
[49 157]
[50 156]
[51 155]
[53 152]
[55 150]
[56 149]
[70 133]
[71 132]
[72 131]
[73 130]
[75 128]
[76 125]
[78 123]
[79 122]
[80 121]
[81 120]
[82 116]
[83 115]
[84 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
