%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[102.18561554 542.81286621]
[91.33010101 532.41979980]
[82.14491272 520.52484131]
[74.83526611 507.39373779]
[69.56444550 493.31979370]
[66.45021057 478.61743164]
[65.56212616 463.61514282]
[66.92005157 448.64804077]
[70.49362946 434.05053711]
[76.20303345 420.14874268]
[83.92071533 407.25317383]
[93.47425842 395.65200806]
[104.65022278 385.60433960]
[117.19895172 377.33468628]
[130.84008789 371.02780151]
[145.26889038 366.82452393]
[143.26487732 351.95901489]
[141.26086426 337.09347534]
[139.25685120 322.22793579]
[137.25283813 307.36242676]
[126.22116089 317.52618408]
[111.37413788 315.38934326]
[103.65644836 302.52709961]
[108.75728607 288.42102051]
[122.91649628 283.46957397]
[135.69554138 291.32141113]
[134.80271912 276.34799194]
[133.90991211 261.37460327]
[133.01708984 246.40119934]
[130.46125793 231.62054443]
[119.47888184 221.55889893]
[123.05654144 206.14750671]
[118.86952972 191.74372864]
[107.88716125 181.68208313]
[111.46482086 166.27069092]
[107.27780914 151.86691284]
[103.09079742 137.46311951]
[98.90378571 123.05934143]
[94.71677399 108.65556335]
[89.62160492 102.40962219]
[90.57636261 94.00609589]
[86.60427094 79.54156494]
[82.63217163 65.07704163]
[69.40773010 61.19053268]
[59.90595627 51.35515213]
[56.53178787 38.21419907]
[60.06297684 25.22671318]
[69.47396851 15.75700092]
[65.71766663 1.23494136]
[61.96136475 -13.28711796]
[58.20506287 -27.80917740]
[54.44876099 -42.33123779]
[50.69246292 -56.85329437]
[36.73419952 -59.06996536]
[24.71149826 -66.41699982]
[16.42231178 -77.75696564]
[13.09148121 -91.35829926]
[15.18982029 -105.15961456]
[22.36788177 -117.08216858]
[33.51364136 -125.34293365]
[29.97397041 -139.91931152]
[26.43429756 -154.49568176]
[23.16760063 -139.85571289]
[16.76656342 -126.29006958]
[7.54350948 -114.46064758]
[-4.05154896 -104.94462585]
[-17.45286369 -98.20632172]
[-32.00655365 -94.57450104]
[-47.00251389 -94.22637939]
[-61.70905685 -97.17893982]
[-75.40861511 -103.28811646]
[-87.43276215 -112.25582886]
[-97.19481659 -123.64452362]
[-104.21845245 -136.89852905]
[-108.16098022 -151.37113953]
[-108.83003998 -166.35620117]
[-106.19297028 -181.12258911]
[-100.37845612 -194.94978333]
[-91.67019653 -207.16314697]
[-80.49308014 -217.16674805]
[-67.39247131 -224.47250366]
[-53.00757599 -228.72393799]
[-38.04026031 -229.71362305]
[-23.22081566 -227.39324951]
[-9.27231598 -221.87606812]
[3.12466002 -213.43124390]
[13.36523724 -202.47084045]
[20.94975471 -189.52961731]
[25.50684357 -175.24551392]
[27.73196220 -190.07955933]
[29.95707893 -204.91360474]
[19.30329895 -218.78862000]
[21.92892647 -235.74211121]
[35.72655869 -245.35794067]
[37.73057175 -260.22348022]
[39.73458481 -275.08898926]
[41.73859787 -289.95452881]
[27.66813278 -295.35070801]
[15.22172356 -303.84680176]
[5.07058907 -314.98461914]
[-2.23783326 -328.16354370]
[-6.30940866 -342.67282104]
[-6.92456245 -357.72998047]
[-4.05012035 -372.52304077]
[2.15890312 -386.25418091]
[11.36766243 -398.18295288]
[23.07954216 -407.66601562]
[36.66293335 -414.19198608]
[51.38530350 -417.40890503]
[66.45269012 -417.14328003]
[81.05252838 -413.40948486]
[94.39747620 -406.40881348]
[105.76784515 -396.51885986]
[114.55045319 -384.27294922]
[120.27165985 -370.33148193]
[122.62293243 -355.44628906]
[121.47746277 -340.42016602]
[116.89703369 -326.06341553]
[109.12866211 -313.15026855]
[98.59127808 -302.37716675]
[85.85315704 -294.32501221]
[71.60124207 -289.42810059]
[56.60412598 -287.95050049]
[54.60011292 -273.08499146]
[52.59609985 -258.21945190]
[50.59208679 -243.35392761]
[59.76119995 -234.30093384]
[62.07649612 -221.42764282]
[56.47217560 -209.39427185]
[44.79112244 -202.68847656]
[42.56600571 -187.85444641]
[40.34088898 -173.02040100]
[41.01067352 -158.03535461]
[44.55034637 -143.45898438]
[48.09001923 -128.88259888]
[63.77783966 -125.84239960]
[76.61603546 -116.23020172]
[84.00395966 -101.92977142]
[84.41742706 -85.78079987]
[77.72293854 -71.01504517]
[65.21452332 -60.60959625]
[68.97082520 -46.08753586]
[72.72711945 -31.56547737]
[76.48342133 -17.04341888]
[80.23972321 -2.52135921]
[83.99602509 12.00070000]
[99.45464325 17.52416420]
[108.66718292 31.31150818]
[107.83825684 48.03915405]
[97.09669495 61.10494995]
[101.06879425 75.56947327]
[105.04089355 90.03399658]
[109.12055969 104.46855164]
[113.30757141 118.87232971]
[117.49457550 133.27610779]
[121.68158722 147.67990112]
[125.86859894 162.08367920]
[137.15045166 173.17558289]
[133.27331543 187.55671692]
[137.46032715 201.96049500]
[148.74218750 213.05239868]
[144.86503601 227.43353271]
[148.35456848 212.84507751]
[156.81835938 200.46102905]
[169.14283752 191.91075134]
[183.70649719 188.31915283]
[198.59326172 190.15879822]
[211.84451294 197.18762207]
[221.71681213 208.48088074]
[226.91130066 222.55274963]
[226.74455261 237.55181885]
[221.23849487 251.50471497]
[211.11755371 262.57568359]
[197.71331787 269.30816650]
[182.78932190 270.81637573]
[168.30911255 266.90188599]
[156.17778015 258.07971191]
[147.99049377 245.50837708]
[148.88331604 260.48178101]
[149.77612305 275.45520020]
[150.66894531 290.42858887]
[152.11836243 305.35839844]
[154.12237549 320.22393799]
[156.12638855 335.08944702]
[158.13040161 349.95498657]
[160.13441467 364.82052612]
[175.16117859 365.05288696]
[189.98545837 367.52236938]
[204.27607727 372.17382812]
[217.71376038 378.90335083]
[229.99832153 387.56054688]
[240.85531616 397.95205688]
[250.04220581 409.84570312]
[257.35372925 422.97579956]
[262.62655640 437.04898071]
[265.74288940 451.75088501]
[266.63308716 466.75308228]
[265.27731323 481.72033691]
[261.70581055 496.31835938]
[255.99838257 510.22097778]
[248.28253174 523.11761475]
[238.73063660 534.72015381]
[227.55610657 544.76940918]
[215.00856018 553.04089355]
[201.36831665 559.34973145]
[186.94010925 563.55499268]
[172.04627991 565.56286621]
[157.01954651 565.32836914]
[142.19561768 562.85675049]
[127.90567780 558.20324707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 186]
[17 185]
[18 184]
[19 183]
[20 182]
[26 181]
[27 180]
[28 179]
[29 178]
[30 162]
[32 160]
[33 159]
[35 157]
[36 156]
[37 155]
[38 154]
[39 153]
[41 152]
[42 151]
[43 150]
[48 146]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[60 135]
[61 134]
[62 133]
[89 132]
[90 131]
[91 130]
[94 126]
[95 125]
[96 124]
[97 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
