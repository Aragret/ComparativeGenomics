%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[39.00904846 484.94027710]
[44.49739075 498.95681763]
[47.05154037 513.79125977]
[46.56690598 528.83618164]
[43.06333160 543.47552490]
[36.68428802 557.10974121]
[27.69099426 569.18060303]
[16.45171738 579.19378662]
[3.42669940 586.73925781]
[-10.85069275 591.50799561]
[-25.79580879 593.30474854]
[-40.79665756 592.05596924]
[-55.23896027 587.81274414]
[-68.53131866 580.74890137]
[-80.12940979 571.15362549]
[-89.55831146 559.41992188]
[-96.43190002 546.02813721]
[-100.46872711 531.52679443]
[-101.50347137 516.50970459]
[-99.49376678 501.59170532]
[-94.52190399 487.38378906]
[-86.79148865 474.46768188]
[-76.61906433 463.37234497]
[-64.42118835 454.55209351]
[-50.69736481 448.36813354]
[-36.00956345 445.07366943]
[-20.95924950 444.80361938]
[-6.16272116 447.56906128]
[-0.49993435 433.67901611]
[5.16285229 419.78900146]
[2.80288649 405.08255005]
[15.17746925 395.22454834]
[20.84025574 381.33450317]
[26.50304222 367.44448853]
[32.16582870 353.55444336]
[36.67345810 339.24777222]
[39.99571609 324.62030029]
[43.31797791 309.99285889]
[46.64023590 295.36538696]
[49.96249390 280.73791504]
[53.28475571 266.11047363]
[51.70079041 258.89154053]
[56.76690292 251.29072571]
[60.30657196 236.71435547]
[49.12220383 229.59371948]
[40.66165543 219.35569763]
[35.75910187 206.98764038]
[34.90468216 193.68800354]
[38.19555664 180.75015259]
[45.32507324 169.43658447]
[55.61129761 160.85578918]
[68.06221008 155.85359192]
[81.47137451 154.92979431]
[85.44346619 140.46527100]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[98.84349060 57.15087128]
[101.06861115 42.31682587]
[95.46405029 27.52157593]
[105.00372314 16.08287621]
[91.72822571 8.80369377]
[81.76287842 -2.55693221]
[76.29592133 -16.61511993]
[75.96919250 -31.66713905]
[80.80283356 -45.89589310]
[90.19517517 -57.59026718]
[102.99758148 -65.35091400]
[117.65486145 -68.25766754]
[119.87998199 -83.09171295]
[122.10510254 -97.92575836]
[124.33021545 -112.75980377]
[126.55533600 -127.59384918]
[124.64321136 -132.45089722]
[124.77244568 -137.09164429]
[126.51881409 -140.77474976]
[129.22531128 -143.03465271]
[132.11059570 -157.75454712]
[125.57571411 -168.87472534]
[128.28190613 -181.07554626]
[138.24594116 -187.93446350]
[141.35005188 -202.60975647]
[144.45416260 -217.28506470]
[147.33943176 -232.00495911]
[150.00521851 -246.76617432]
[152.67102051 -261.52740479]
[155.33682251 -276.28860474]
[158.00260925 -291.04983521]
[160.66841125 -305.81103516]
[163.33419800 -320.57226562]
[165.77992249 -335.37152100]
[168.00505066 -350.20556641]
[170.23016357 -365.03961182]
[172.45527649 -379.87365723]
[174.68040466 -394.70770264]
[176.90551758 -409.54174805]
[179.13063049 -424.37579346]
[181.35574341 -439.20983887]
[167.64796448 -445.55596924]
[156.28425598 -455.50799561]
[148.18582153 -468.25915527]
[144.00918579 -482.77575684]
[144.09291077 -497.88104248]
[148.43022156 -512.35046387]
[156.66950989 -525.01110840]
[168.14285278 -534.83654785]
[181.92015076 -541.03027344]
[196.88453674 -543.09027100]
[211.82293701 -540.84954834]
[225.52433777 -534.48962402]
[236.87805176 -524.52618408]
[244.96365356 -511.76690674]
[249.12571716 -497.24609375]
[249.02680969 -482.14089966]
[244.67495728 -467.67584229]
[236.42295837 -455.02349854]
[224.93975830 -445.20959473]
[211.15625000 -439.02969360]
[196.18978882 -436.98471069]
[193.96467590 -422.15066528]
[191.73956299 -407.31661987]
[189.51443481 -392.48257446]
[187.28932190 -377.64855957]
[185.06420898 -362.81451416]
[182.83909607 -347.98046875]
[180.61396790 -333.14642334]
[182.68193054 -328.84146118]
[182.06750488 -323.19174194]
[178.09541321 -317.90646362]
[175.42962646 -303.14523315]
[172.76382446 -288.38403320]
[170.09803772 -273.62280273]
[167.43223572 -258.86160278]
[164.76644897 -244.10037231]
[162.10064697 -229.33915710]
[164.03952026 -224.97454834]
[163.25715637 -219.34561157]
[159.12945557 -214.18095398]
[156.02534485 -199.50566101]
[152.92123413 -184.83035278]
[159.25190735 -168.46301270]
[146.83047485 -154.86927795]
[143.94520569 -140.14938354]
[141.38937378 -125.36872864]
[139.16426086 -110.53468323]
[136.93914795 -95.70063782]
[134.71401978 -80.86660004]
[132.48890686 -66.03255463]
[145.64828491 -58.95327377]
[155.61027527 -47.77795410]
[161.15812683 -33.84254074]
[161.60432434 -18.82180786]
[156.87571716 -4.52809095]
[147.52468872 7.30738783]
[134.66471863 15.24419785]
[119.83776855 18.30799294]
[125.60148621 32.04221344]
[115.90265656 44.54194260]
[113.67753601 59.37598801]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[114.82231140 118.31401825]
[129.77107239 117.07537842]
[142.65242004 124.76115417]
[148.66189575 138.50474548]
[145.55813599 153.18011475]
[134.49876404 163.31373596]
[119.60864258 165.12599182]
[106.44142151 157.94097900]
[99.90799713 144.43736267]
[95.93589783 158.90188599]
[109.41422272 169.05012512]
[117.94226074 183.56510925]
[120.23609161 200.20584106]
[115.97180176 216.41564941]
[105.83089447 229.71498108]
[91.39151764 238.08074951]
[74.88294983 240.25402832]
[71.34327698 254.83039856]
[67.91221619 269.43273926]
[64.58995819 284.06018066]
[61.26769638 298.68765259]
[57.94543839 313.31509399]
[54.62317657 327.94256592]
[51.30091858 342.57003784]
[62.29252625 332.36294556]
[76.74412537 328.34408569]
[91.42719269 331.41125488]
[103.06149292 340.87924194]
[109.04788971 354.63290405]
[108.04901123 369.59960938]
[100.28800964 382.43576050]
[87.49871826 390.27374268]
[72.53828430 391.36251831]
[58.74891281 385.45883179]
[49.21118546 373.88162231]
[46.05585480 359.21725464]
[40.39307022 373.10726929]
[34.73028183 386.99728394]
[29.06749535 400.88732910]
[31.02242088 416.58728027]
[19.05287933 425.45178223]
[13.39009285 439.34179688]
[7.72730589 453.23184204]
[20.23970985 461.59991455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 209]
[29 208]
[30 207]
[32 205]
[33 204]
[34 203]
[35 202]
[36 190]
[37 189]
[38 188]
[39 187]
[40 186]
[41 185]
[43 184]
[44 183]
[53 176]
[54 175]
[55 166]
[56 165]
[58 163]
[59 162]
[60 161]
[61 160]
[63 158]
[71 150]
[72 149]
[73 148]
[74 147]
[75 146]
[79 145]
[80 144]
[83 142]
[84 141]
[85 140]
[86 137]
[87 136]
[88 135]
[89 134]
[90 133]
[91 132]
[92 131]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
