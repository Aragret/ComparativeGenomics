%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[92.26378632 535.17266846]
[80.29238892 526.09350586]
[69.70114136 515.43652344]
[60.69618988 503.40914917]
[53.45282364 490.24557495]
[48.11203766 476.20199585]
[44.77779388 461.55178833]
[43.51499176 446.58007812]
[44.34821320 431.57836914]
[47.26123810 416.83859253]
[52.19736481 402.64773560]
[59.06050873 389.28198242]
[67.71707916 377.00149536]
[77.99857330 366.04537964]
[89.70485687 356.62683105]
[102.60805511 348.92919922]
[116.45702362 343.10232544]
[130.98217773 339.25964355]
[129.19970703 324.36593628]
[120.00483704 312.64828491]
[126.04742432 298.02645874]
[124.26495361 283.13272095]
[122.48249054 268.23901367]
[120.25737000 253.40496826]
[117.59157562 238.64375305]
[114.92578125 223.88253784]
[105.04976654 212.73294067]
[110.21133423 197.77737427]
[107.54553986 183.01615906]
[95.20103455 174.76092529]
[92.28726196 159.82893372]
[101.02980804 146.93685913]
[98.36401367 132.17564392]
[88.48799896 121.02603912]
[93.64956665 106.07048035]
[91.30199432 104.12667084]
[89.60980988 101.28571320]
[88.90666962 97.78870392]
[89.43247223 93.99663544]
[91.29194641 90.35311127]
[89.50948334 75.45938873]
[85.38248444 67.31042480]
[87.81305695 60.33087540]
[86.25253296 45.41226959]
[77.12152100 32.49193192]
[83.49275208 19.02877235]
[81.93222809 4.11016750]
[79.48650360 -10.68910313]
[76.16424561 -25.31656265]
[72.84197998 -39.94402313]
[69.51972198 -54.57148361]
[66.19746399 -69.19894409]
[62.64982605 -73.02795410]
[61.08241272 -77.39791107]
[61.36967468 -81.46393585]
[63.06893158 -84.55341339]
[60.40313721 -99.31462860]
[57.73734283 -114.07584381]
[53.50787735 -99.68447113]
[45.74318695 -86.85054779]
[34.95828247 -76.42530060]
[21.86848068 -69.10019684]
[7.34198618 -65.36109161]
[-7.65771389 -65.45597839]
[-22.13574219 -69.37856293]
[-35.13182449 -76.86868286]
[-45.78397369 -87.42954254]
[-53.38567352 -100.36067200]
[-57.43273163 -114.80439758]
[-57.65672302 -129.80271912]
[-54.04278564 -144.36087036]
[-46.83061981 -157.51322937]
[-36.49858475 -168.38746643]
[-23.73196983 -176.26232910]
[-9.37753296 -180.61550903]
[5.61264420 -181.15827942]
[20.24431801 -177.85461426]
[33.54701996 -170.92367554]
[44.63843536 -160.82513428]
[52.78290176 -148.22879028]
[57.44118881 -133.96510315]
[59.66630554 -148.79913330]
[61.89142227 -163.63317871]
[64.11653900 -178.46722412]
[66.34165955 -193.30126953]
[51.86579514 -197.30212402]
[37.97774124 -203.01870728]
[24.88002968 -210.36767578]
[12.76365948 -219.24183655]
[1.80532444 -229.51181030]
[-7.83517122 -241.02781677]
[-16.01724052 -253.62190247]
[-22.62156487 -267.11041260]
[-27.55183220 -281.29669189]
[-30.73614693 -295.97378540]
[-32.12807465 -310.92770386]
[-31.70730972 -325.94036865]
[-29.47999382 -340.79287720]
[-25.47860527 -355.26858521]
[-19.76149750 -369.15643311]
[-12.41204262 -382.25387573]
[-3.53741741 -394.36990356]
[6.73296070 -405.32785034]
[18.24931908 -414.96792603]
[30.84371567 -423.14950562]
[44.33248520 -429.75332642]
[58.51892471 -434.68307495]
[73.19615173 -437.86685181]
[88.15013123 -439.25820923]
[103.16278839 -438.83688354]
[118.01519012 -436.60900879]
[132.49075317 -432.60708618]
[146.37837219 -426.88946533]
[159.47554016 -419.53952026]
[171.59124756 -410.66442871]
[182.54881287 -400.39364624]
[192.18844604 -388.87692261]
[200.36958313 -376.28222656]
[206.97288513 -362.79321289]
[211.90209961 -348.60656738]
[215.08531189 -333.92922974]
[216.47612000 -318.97518921]
[216.05422974 -303.96255493]
[213.82580566 -289.11022949]
[209.82333374 -274.63482666]
[204.10519409 -260.74740601]
[196.75476074 -247.65052795]
[187.87922668 -235.53515625]
[177.60803223 -224.57797241]
[166.09095764 -214.93876648]
[153.49594116 -206.75811768]
[140.00668335 -200.15530396]
[125.81987000 -195.22662354]
[111.14240265 -192.04396057]
[96.18832397 -190.65370178]
[81.17569733 -191.07615662]
[78.95058441 -176.24211121]
[76.72546387 -161.40806580]
[74.50035095 -146.57402039]
[72.27523041 -131.73997498]
[72.49855804 -116.74164581]
[75.16435242 -101.98042297]
[77.83014679 -87.21920776]
[80.82492065 -72.52120209]
[84.14718628 -57.89374161]
[87.46944427 -43.26628494]
[90.79170227 -28.63882256]
[94.11396027 -14.01136303]
[101.24300385 -27.20896912]
[114.71759796 -33.79951096]
[129.51206970 -31.32487679]
[140.10842896 -20.70804596]
[142.55450439 -5.90883350]
[135.93797302 7.55302095]
[122.72663116 14.65657806]
[107.84799194 12.75238609]
[96.85083771 2.54964447]
[98.41135406 17.46824837]
[107.43075562 29.32151031]
[101.17113495 43.85174561]
[102.73165894 58.77035141]
[104.40319824 73.67692566]
[106.18566895 88.57064056]
[108.41078186 103.40468597]
[118.47747803 115.61010742]
[113.12522888 129.50984192]
[115.79103088 144.27105713]
[128.49072266 153.29078674]
[130.98394775 168.29873657]
[122.30675507 180.35037231]
[124.97254944 195.11158752]
[135.03924561 207.31700134]
[129.68699646 221.21675110]
[132.35279846 235.97796631]
[135.01858521 250.73918152]
[137.93962097 253.95188904]
[139.52676392 257.56375122]
[139.81831360 261.10641479]
[139.00077820 264.17205811]
[137.37620544 266.45654297]
[139.15867615 281.35028076]
[140.94114685 296.24398804]
[150.26350403 309.02694702]
[144.09342957 322.58346558]
[145.87588501 337.47717285]
[160.89761353 337.78372192]
[175.73046875 340.17797852]
[190.08573914 344.61334229]
[203.68399048 351.00344849]
[216.26052856 359.22396851]
[227.57054138 369.11486816]
[237.39389038 380.48358154]
[245.53933716 393.10885620]
[251.84835815 406.74493408]
[256.19812012 421.12637329]
[258.50399780 435.97323608]
[258.72103882 450.99652100]
[256.84506226 465.90377808]
[252.91258240 480.40487671]
[247.00013733 494.21752930]
[239.22280884 507.07284546]
[229.73200989 518.72064209]
[218.71244812 528.93414307]
[206.37866211 537.51452637]
[192.97068787 544.29486084]
[178.74954224 549.14306641]
[163.99205017 551.96484375]
[148.98544312 552.70520020]
[134.02186584 551.34979248]
[119.39255524 547.92498779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 185]
[19 184]
[21 182]
[22 181]
[23 180]
[24 175]
[25 174]
[26 173]
[28 171]
[29 170]
[32 167]
[33 166]
[35 164]
[40 163]
[41 162]
[43 161]
[44 160]
[46 158]
[47 157]
[48 148]
[49 147]
[50 146]
[51 145]
[52 144]
[56 143]
[57 142]
[58 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
