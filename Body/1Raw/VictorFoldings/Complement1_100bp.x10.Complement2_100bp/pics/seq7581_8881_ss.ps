%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[141.05769348 582.51770020]
[135.60301208 568.53112793]
[131.56806946 554.07086182]
[128.99298096 539.28076172]
[127.90331268 524.30773926]
[128.30992126 509.30065918]
[130.20875549 494.40859985]
[133.58093262 479.77963257]
[138.39295959 465.55911255]
[144.59698486 451.88839722]
[152.13137817 438.90332031]
[160.92123413 426.73300171]
[170.87919617 415.49835205]
[181.90629578 405.31100464]
[193.89294434 396.27227783]
[206.72001648 388.47195435]
[200.24052429 374.94360352]
[187.76457214 366.80728149]
[188.78155518 351.01876831]
[176.14895630 348.47967529]
[167.15103149 338.98657227]
[165.23541260 325.85107422]
[171.32316589 313.83633423]
[165.04580688 300.21301270]
[158.76843262 286.58969116]
[152.49107361 272.96640015]
[146.21371460 259.34307861]
[139.93635559 245.71975708]
[134.82441711 259.82180786]
[121.90729523 267.44729614]
[107.09052277 265.10992432]
[97.14813232 253.87832642]
[96.62564850 238.88742065]
[105.76194763 226.99087524]
[120.38002777 223.62759399]
[133.79798889 230.33659363]
[128.97200012 216.13414001]
[124.14599609 201.93168640]
[119.31999969 187.72923279]
[115.50798035 184.85215759]
[113.46285248 179.54985046]
[114.56859589 173.03149414]
[110.16760254 158.69165039]
[105.76660156 144.35180664]
[94.63564301 134.45478821]
[97.98345184 118.99183655]
[85.23217010 112.11063385]
[80.98094177 98.25879669]
[87.67669678 85.40916443]
[83.27570343 71.06931305]
[79.99359131 68.22647858]
[77.98850250 64.82881165]
[77.27803040 61.34590530]
[77.72548676 58.20482254]
[79.06707764 55.74346542]
[75.52740479 41.16709137]
[71.98773193 26.59071541]
[68.44805908 12.01434040]
[64.90838623 -2.56203532]
[61.15208817 -17.08409500]
[57.17998886 -31.54861832]
[53.20789337 -46.01314163]
[49.23579788 -60.47766495]
[36.01135635 -64.36417389]
[26.50958061 -74.19956207]
[23.13541222 -87.34050751]
[26.66660118 -100.32799530]
[36.07759094 -109.79770660]
[32.32128906 -124.31977081]
[21.37467957 -135.74266052]
[25.67828560 -150.00198364]
[21.92198372 -164.52403259]
[18.16568375 -179.04609680]
[14.40938282 -193.56816101]
[10.48704243 -179.09005737]
[1.65829337 -166.96351624]
[-10.91529083 -158.78396606]
[-25.57943916 -155.62757874]
[-40.40483093 -157.90963745]
[-53.44092941 -165.32987976]
[-62.97261429 -176.91207886]
[-67.74582672 -191.13235474]
[-67.13256836 -206.11981201]
[-61.21352386 -219.90258789]
[-50.76744461 -230.66732788]
[-37.16869354 -236.99772644]
[-22.20642281 -238.06092834]
[-7.84917068 -233.71704102]
[4.01411581 -224.53758240]
[11.82346821 -211.72804260]
[11.37686253 -226.72138977]
[10.93025589 -241.71475220]
[10.48365021 -256.70809937]
[10.03704453 -271.70144653]
[-4.58036184 -275.51040649]
[-17.53184509 -283.28445435]
[-27.76748657 -294.39337158]
[-34.45752716 -307.93664551]
[-37.05963898 -322.81634521]
[-35.36287308 -337.82626343]
[-29.50478745 -351.74960327]
[-19.96026611 -363.45767212]
[-7.50304270 -372.00134277]
[6.85703421 -376.68801880]
[21.95585632 -377.13775635]
[36.56942749 -373.31411743]
[49.51309586 -365.52706909]
[59.73757172 -354.40786743]
[66.41400146 -340.85787964]
[69.00115967 -325.97558594]
[67.28932190 -310.96737671]
[61.41725159 -297.04992676]
[51.86097336 -285.35144043]
[39.39517212 -276.82028198]
[25.03039360 -272.14804077]
[25.47700119 -257.15469360]
[25.92360687 -242.16134644]
[26.37021255 -227.16799927]
[26.81681824 -212.17465210]
[28.93144226 -197.32446289]
[32.68774414 -182.80239868]
[36.44404221 -168.28033447]
[40.20034409 -153.75828552]
[50.87827682 -143.37409973]
[46.84334946 -128.07606506]
[50.59964752 -113.55400848]
[66.05826569 -108.03054810]
[75.27080536 -94.24320221]
[74.44187927 -77.51555634]
[63.70032120 -64.44976044]
[67.67241669 -49.98523712]
[71.64451599 -35.52071381]
[75.61660767 -21.05619049]
[79.25062561 -17.95732117]
[80.97652435 -12.54268456]
[79.48476410 -6.10170746]
[83.02443695 8.47466755]
[86.56410980 23.05104256]
[90.10378265 37.62741852]
[93.64345551 52.20379257]
[97.61554718 66.66831970]
[102.01654816 81.00816345]
[114.76782990 87.88936615]
[119.01905823 101.74120331]
[112.32330322 114.59083557]
[123.76905060 125.51353455]
[120.10645294 139.95080566]
[124.50744629 154.29064941]
[128.90844727 168.63049316]
[133.52246094 182.90322876]
[138.34844971 197.10568237]
[143.17445374 211.30813599]
[148.00044250 225.51060486]
[153.55967712 239.44239807]
[159.83703613 253.06571960]
[166.11439514 266.68902588]
[172.39175415 280.31234741]
[178.66911316 293.93566895]
[184.94647217 307.55899048]
[201.46569824 313.31527710]
[208.57089233 328.93035889]
[202.30990601 344.53927612]
[215.24929810 353.64328003]
[213.76885986 368.46411133]
[220.24836731 381.99246216]
[234.36628723 376.88729858]
[248.92237854 373.21319580]
[263.77194214 371.00671387]
[278.76742554 370.28973389]
[293.75979614 371.06939697]
[308.60000610 373.33798218]
[323.14059448 377.07293701]
[337.23706055 382.23709106]
[350.74926758 388.77917480]
[363.54293823 396.63415527]
[375.49093628 405.72393799]
[386.47448730 415.95819092]
[396.38442993 427.23522949]
[405.12228394 439.44296265]
[412.60119629 452.46005249]
[418.74685669 466.15710449]
[423.49816895 480.39801025]
[426.80792236 495.04125977]
[428.64318848 509.94125366]
[428.98577881 524.94995117]
[427.83224487 539.91821289]
[425.19409180 554.69720459]
[421.09750366 569.14007568]
[415.58319092 583.10327148]
[408.70599365 596.44805908]
[400.53424072 609.04174805]
[391.14916992 620.75915527]
[380.64401245 631.48394775]
[369.12322998 641.10943604]
[356.70126343 649.53997803]
[343.50164795 656.69177246]
[329.65548706 662.49371338]
[315.30044556 666.88818359]
[300.57919312 669.83154297]
[285.63803101 671.29449463]
[270.62545776 671.26245117]
[255.69065857 669.73577881]
[240.98210144 666.72967529]
[226.64593506 662.27398682]
[212.82467651 656.41302490]
[199.65567017 649.20495605]
[187.26979065 640.72155762]
[175.79016113 631.04699707]
[165.33087158 620.27752686]
[155.99584961 608.52014160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 165]
[17 164]
[19 162]
[23 159]
[24 158]
[25 157]
[26 156]
[27 155]
[28 154]
[36 153]
[37 152]
[38 151]
[39 150]
[42 149]
[43 148]
[44 147]
[46 145]
[49 142]
[50 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[60 133]
[61 132]
[62 131]
[63 130]
[68 126]
[69 125]
[71 123]
[72 122]
[73 121]
[74 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
