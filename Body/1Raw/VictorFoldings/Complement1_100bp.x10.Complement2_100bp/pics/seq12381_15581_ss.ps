%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[53.68859100 811.17626953]
[38.68646622 811.28240967]
[23.69450760 810.72015381]
[8.74247837 809.49060059]
[-6.13993597 807.59619141]
[-20.92318726 805.04071045]
[-35.57792282 801.82922363]
[-50.07505035 797.96807861]
[-64.38578796 793.46502686]
[-78.48171234 788.32891846]
[-92.33485413 782.56994629]
[-105.91769409 776.19958496]
[-119.20327759 769.23046875]
[-132.16520691 761.67645264]
[-144.77777100 753.55255127]
[-157.01593018 744.87481689]
[-168.85536194 735.66058350]
[-180.27256775 725.92803955]
[-191.24488831 715.69653320]
[-201.75054932 704.98645020]
[-211.76866150 693.81896973]
[-221.27935791 682.21630859]
[-230.26376343 670.20153809]
[-238.70401001 657.79840088]
[-246.58337402 645.03161621]
[-253.88618469 631.92651367]
[-260.59796143 618.50909424]
[-266.70535278 604.80603027]
[-272.19625854 590.84448242]
[-277.05978394 576.65216064]
[-281.28625488 562.25732422]
[-284.86727905 547.68847656]
[-287.79574585 532.97454834]
[-290.06585693 518.14483643]
[-291.67309570 503.22863770]
[-292.61425781 488.25570679]
[-292.88748169 473.25567627]
[-292.49224854 458.25839233]
[-291.42932129 443.29360962]
[-289.70080566 428.39102173]
[-287.31015015 413.58020020]
[-284.26208496 398.89062500]
[-280.56268311 384.35137939]
[-276.21926880 369.99136353]
[-271.24047852 355.83911133]
[-265.63616943 341.92269897]
[-259.41751099 328.26974487]
[-252.59681702 314.90734863]
[-245.18763733 301.86209106]
[-237.20469666 289.15982056]
[-228.66383362 276.82577515]
[-219.58201599 264.88442993]
[-209.97724915 253.35952759]
[-199.86862183 242.27392578]
[-189.27619934 231.64962769]
[-178.22100830 221.50775146]
[-166.72500610 211.86840820]
[-154.81101990 202.75074768]
[-142.50268555 194.17286682]
[-129.82446289 186.15179443]
[-116.80150604 178.70346069]
[-103.45967865 171.84266663]
[-89.82546997 165.58300781]
[-75.92594147 159.93692017]
[-61.78870392 154.91563416]
[-47.44181442 150.52909851]
[-32.91375732 146.78602600]
[-18.23338318 143.69384766]
[-3.42983389 141.25869751]
[11.46749687 139.48542786]
[26.42903328 138.37754822]
[41.42507172 137.93724060]
[56.42583466 138.16542053]
[71.40154266 139.06159973]
[86.32246399 140.62400818]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[98.84349060 57.15087128]
[87.95445251 46.25431442]
[85.59713745 31.21116257]
[92.46851349 17.82280350]
[105.74696350 11.12796593]
[107.97207642 -3.70607805]
[110.19719696 -18.54012108]
[112.42231750 -33.37416458]
[114.64743042 -48.20820999]
[116.87255096 -63.04225159]
[119.09766388 -77.87629700]
[104.76357269 -82.40181732]
[91.31396484 -89.11408234]
[79.08004761 -97.84779358]
[68.36308289 -108.38787079]
[59.42699814 -120.47476196]
[52.49184418 -133.81080627]
[47.72840881 -148.06759644]
[45.25399780 -162.89405823]
[45.12953949 -177.92504883]
[47.35810852 -192.79045105]
[51.88481522 -207.12416077]
[58.59818649 -220.57322693]
[67.33290863 -232.80642700]
[77.87387085 -243.52252197]
[89.96149445 -252.45761108]
[103.29811096 -259.39166260]
[117.55529785 -264.15390015]
[132.38195801 -266.62710571]
[147.41296387 -266.75030518]
[162.27818298 -264.52053833]
[176.61152649 -259.99264526]
[190.06002808 -253.27815247]
[202.29251099 -244.54243469]
[213.00772095 -234.00057983]
[221.94181824 -221.91221619]
[228.87477112 -208.57502747]
[233.63584900 -194.31744385]
[236.10781860 -179.49058533]
[236.22979736 -164.45956421]
[233.99877930 -149.59452820]
[229.46969604 -135.26156616]
[222.75410461 -121.81362152]
[214.01737976 -109.58186340]
[203.47463989 -98.86750793]
[191.38554382 -89.93441010]
[178.04777527 -83.00256348]
[163.78981018 -78.24266052]
[148.96273804 -75.77191162]
[133.93170166 -75.65117645]
[131.70658875 -60.81713486]
[129.48147583 -45.98309326]
[127.25635529 -31.14904785]
[125.03124237 -16.31500435]
[122.80612183 -1.48096073]
[120.58100891 13.35308266]
[131.31080627 23.64917374]
[133.95162964 38.46437073]
[127.28440094 52.15383530]
[113.67753601 59.37598801]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[101.15650940 142.84913635]
[115.87916565 145.73327637]
[130.45872498 149.27040100]
[144.86625671 153.45349121]
[159.07313538 158.27424622]
[173.05114746 163.72308350]
[186.77256775 169.78919983]
[200.21014404 176.46052551]
[213.33718872 183.72383118]
[226.12763977 191.56471252]
[238.55610657 199.96757507]
[250.59793091 208.91574097]
[262.22915649 218.39144897]
[273.42675781 228.37590027]
[284.16845703 238.84924316]
[294.43292236 249.79071045]
[304.19979858 261.17855835]
[313.44967651 272.99017334]
[322.16421509 285.20214844]
[330.32608032 297.79019165]
[337.91909790 310.72930908]
[344.92819214 323.99383545]
[351.33941650 337.55743408]
[357.14007568 351.39315796]
[362.31863403 365.47357178]
[366.86480713 379.77066040]
[370.76956177 394.25610352]
[374.02517700 408.90109253]
[376.62515259 423.67657471]
[378.56436157 438.55322266]
[379.83892822 453.50149536]
[380.44635010 468.49169922]
[380.38537598 483.49404907]
[379.65618896 498.47882080]
[378.26016235 513.41625977]
[376.20013428 528.27661133]
[373.48013306 543.03051758]
[370.10562134 557.64855957]
[366.08328247 572.10174561]
[361.42105103 586.36145020]
[356.12823486 600.39929199]
[350.21536255 614.18743896]
[343.69409180 627.69848633]
[336.57745361 640.90563965]
[328.87954712 653.78259277]
[320.61563110 666.30389404]
[311.80215454 678.44464111]
[302.45657349 690.18072510]
[292.59747314 701.48883057]
[282.24441528 712.34649658]
[271.41796875 722.73217773]
[260.13961792 732.62530518]
[248.43173218 742.00616455]
[236.31759644 750.85620117]
[223.82125854 759.15777588]
[210.96749878 766.89447021]
[197.78186035 774.05084229]
[184.29052734 780.61273193]
[170.52026367 786.56713867]
[156.49841309 791.90222168]
[142.25282288 796.60736084]
[127.81179047 800.67321777]
[113.20395660 804.09173584]
[98.45835114 806.85614014]
[83.60422516 808.96093750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 146]
[76 145]
[77 144]
[79 142]
[80 141]
[81 140]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[90 131]
[91 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
