%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[215.80006409 398.74740601]
[209.93110657 384.94323730]
[204.06214905 371.13903809]
[191.96194458 362.45373535]
[193.68290710 346.72640991]
[181.58271790 338.04110718]
[183.30368042 322.31378174]
[177.43470764 308.50958252]
[171.56575012 294.70541382]
[159.05912781 291.60476685]
[150.49407959 281.71932983]
[149.16690063 268.51141357]
[155.78504944 256.78051758]
[150.12226868 242.89047241]
[138.15272522 234.02598572]
[140.10765076 218.32601929]
[134.44487000 204.43598938]
[128.78207397 190.54595947]
[116.81253815 181.68145752]
[118.76746368 165.98150635]
[113.10467529 152.09147644]
[107.44188690 138.20144653]
[101.77909851 124.31141663]
[96.11631012 110.42139435]
[89.31562805 123.79116058]
[75.09626770 128.56712341]
[61.60372925 122.01338959]
[56.56715012 107.88423920]
[62.87171555 94.27349091]
[76.90587616 88.97799683]
[90.62957764 95.03057861]
[86.22857666 80.69072723]
[72.54704285 73.24403381]
[68.28807831 58.63869476]
[75.47167969 45.64133072]
[71.07067871 31.30148506]
[66.66967773 16.96163750]
[62.26868439 2.62178993]
[49.09654999 1.57469368]
[37.09323883 -3.87316108]
[27.67848015 -13.05357742]
[21.95772171 -24.85831070]
[20.59234428 -37.87283325]
[23.72328186 -50.54581451]
[30.95680046 -61.37405396]
[41.41387558 -69.08076477]
[37.44178009 -83.54528809]
[33.46968460 -98.00981140]
[29.49758720 -112.47433472]
[19.92269516 -100.92784119]
[4.92329454 -101.06195068]
[-4.44361448 -112.77779388]
[-1.27309561 -127.43888855]
[12.09766293 -134.23762512]
[25.81115913 -128.16348267]
[22.92588615 -142.88337708]
[20.04061317 -157.60325623]
[9.79331493 -169.65745544]
[14.93801975 -183.63533020]
[4.69072104 -195.68952942]
[9.83542538 -209.66740417]
[6.95015287 -224.38729858]
[4.06488037 -239.10719299]
[1.17960763 -253.82708740]
[-1.70566487 -268.54696655]
[-4.59093761 -283.26687622]
[-8.64127636 -288.49240112]
[-9.33975124 -294.13235474]
[-7.33611250 -298.46762085]
[-9.78184032 -313.26690674]
[-12.22756767 -328.06616211]
[-27.21729279 -327.20581055]
[-42.21354675 -327.94363403]
[-57.04641724 -330.27133179]
[-71.54782867 -334.16250610]
[-85.55346680 -339.57305908]
[-98.90464783 -346.44168091]
[-111.45008850 -354.69055176]
[-123.04763031 -364.22622681]
[-133.56587219 -374.94064331]
[-142.88565063 -386.71240234]
[-150.90132141 -399.40811157]
[-157.52210999 -412.88391113]
[-162.67295837 -426.98712158]
[-166.29553223 -441.55795288]
[-168.34877014 -456.43130493]
[-168.80941772 -471.43862915]
[-167.67224121 -486.40988159]
[-164.95013428 -501.17547607]
[-160.67393494 -515.56805420]
[-154.89210510 -529.42456055]
[-147.67015076 -542.58795166]
[-139.08990479 -554.90911865]
[-129.24858093 -566.24847412]
[-118.25770569 -576.47747803]
[-106.24179840 -585.48028564]
[-93.33701324 -593.15478516]
[-79.68956757 -599.41412354]
[-65.45410156 -604.18737793]
[-50.79191971 -607.42041016]
[-35.86914825 -609.07659912]
[-20.85487366 -609.13714600]
[-5.91922045 -607.60144043]
[8.76857758 -604.48687744]
[23.04209709 -599.82867432]
[36.73960876 -593.67968750]
[49.70590973 -586.10955811]
[61.79407883 -577.20404053]
[72.86714935 -567.06402588]
[82.79965973 -555.80450439]
[91.47906494 -543.55297852]
[98.80701447 -530.44824219]
[104.70047760 -516.63885498]
[109.09268951 -502.28128052]
[111.93386841 -487.53814697]
[113.19182587 -472.57653809]
[112.85231018 -457.56597900]
[110.91916656 -442.67654419]
[107.41430664 -428.07696533]
[102.37742615 -413.93264771]
[95.86561584 -400.40383911]
[87.95265198 -387.64385986]
[78.72818756 -375.79727173]
[68.29675293 -364.99832153]
[56.77653885 -355.36938477]
[44.29807663 -347.01953125]
[31.00276375 -340.04336548]
[17.04124069 -334.51995850]
[2.57170343 -330.51190186]
[5.01743078 -315.71261597]
[7.46315813 -300.91336060]
[10.12895393 -286.15213013]
[13.01422691 -271.43225098]
[15.89949894 -256.71234131]
[18.78477097 -241.99246216]
[21.67004395 -227.27256775]
[24.55531693 -212.55268860]
[34.59624100 -201.55136108]
[29.65791130 -186.52061462]
[39.69883728 -175.51928711]
[34.76050568 -160.48854065]
[37.64577866 -145.76864624]
[40.53105164 -131.04875183]
[43.96211243 -116.44642639]
[47.93420792 -101.98190308]
[51.90630341 -87.51737976]
[55.87839890 -73.05285645]
[72.57957458 -70.49733734]
[86.52921295 -60.86711121]
[94.89330292 -46.05983353]
[95.94696808 -29.03076363]
[89.42990875 -13.20295811]
[76.60852814 -1.77920806]
[81.00952911 12.56063938]
[85.41053009 26.90048599]
[89.81152344 41.24033356]
[103.04953766 47.97016525]
[107.71704865 62.45011520]
[100.56842804 76.28972626]
[104.96942139 90.62957764]
[110.00634003 104.75860596]
[115.66912842 118.64863586]
[121.33191681 132.53866577]
[126.99469757 146.42868042]
[132.65748596 160.31871033]
[145.03207397 170.17672729]
[142.67210388 184.88317871]
[148.33488464 198.77320862]
[153.99768066 212.66322327]
[166.37225342 222.52124023]
[164.01229858 237.22769165]
[169.67507935 251.11772156]
[185.92079163 257.60589600]
[192.32165527 273.52267456]
[185.36993408 288.83645630]
[191.23889160 302.64062500]
[197.10784912 316.44482422]
[209.62783813 326.11749268]
[207.48709106 340.85745239]
[220.00706482 350.53012085]
[217.86631775 365.27008057]
[223.73529053 379.07424927]
[229.60424805 392.87844849]
[244.38124084 389.99157715]
[259.43554688 390.24047852]
[274.10900879 393.61431885]
[287.76022339 399.96557617]
[299.79235840 409.01657104]
[309.67947388 420.37170410]
[316.98931885 433.53451538]
[321.40237427 447.92962646]
[322.72564697 462.92770386]
[320.90136719 477.87313843]
[316.00921631 492.11254883]
[308.26312256 505.02343750]
[298.00167847 516.04144287]
[285.67346191 524.68487549]
[271.81744385 530.57586670]
[257.03930664 533.45690918]
[241.98510742 533.20208740]
[227.31295776 529.82250977]
[213.66424561 523.46588135]
[201.63565063 514.41009521]
[191.75300598 503.05111694]
[184.44834900 489.88543701]
[180.04096985 475.48858643]
[178.72358704 460.48999023]
[180.55375671 445.54528809]
[185.45149231 431.30780029]
[193.20266724 418.39993286]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 183]
[2 182]
[3 181]
[5 179]
[7 177]
[8 176]
[9 175]
[13 172]
[14 171]
[16 169]
[17 168]
[18 167]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[31 160]
[32 159]
[35 156]
[36 155]
[37 154]
[38 153]
[46 147]
[47 146]
[48 145]
[49 144]
[55 143]
[56 142]
[57 141]
[59 139]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[69 131]
[70 130]
[71 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
