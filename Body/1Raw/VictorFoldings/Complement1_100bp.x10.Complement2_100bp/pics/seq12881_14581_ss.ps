%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[88.63832855 883.65539551]
[73.74128723 881.87603760]
[58.94760513 879.37896729]
[44.29184341 876.17010498]
[29.80822754 872.25689697]
[15.53058434 867.64849854]
[1.49226213 862.35571289]
[-12.27395344 856.39080811]
[-25.73591042 849.76782227]
[-38.86216736 842.50219727]
[-51.62206650 834.61083984]
[-63.98580551 826.11224365]
[-75.92451477 817.02624512]
[-87.41030121 807.37408447]
[-98.41634369 797.17822266]
[-108.91693878 786.46252441]
[-118.88755798 775.25207520]
[-128.30491638 763.57293701]
[-137.14701843 751.45245361]
[-145.39321899 738.91900635]
[-153.02426147 726.00170898]
[-160.02229309 712.73089600]
[-166.37100220 699.13739014]
[-172.05555725 685.25311279]
[-177.06266785 671.11035156]
[-181.38064575 656.74224854]
[-184.99942017 642.18225098]
[-187.91050720 627.46441650]
[-190.10713196 612.62316895]
[-191.58416748 597.69311523]
[-192.33815002 582.70916748]
[-192.36732483 567.70623779]
[-191.67161560 552.71942139]
[-190.25267029 537.78375244]
[-188.11376953 522.93402100]
[-185.25993347 508.20501709]
[-181.69783020 493.63110352]
[-177.43576050 479.24627686]
[-172.48368835 465.08416748]
[-166.85317993 451.17785645]
[-160.55738831 437.55981445]
[-153.61100769 424.26184082]
[-146.03027344 411.31500244]
[-137.83287048 398.74951172]
[-129.03797913 386.59475708]
[-119.66610718 374.87911987]
[-109.73915863 363.62994385]
[-99.28031921 352.87350464]
[-88.31401062 342.63494873]
[-76.86584473 332.93814087]
[-64.96257019 323.80578613]
[-52.63197327 315.25915527]
[-39.90285873 307.31823730]
[-26.80496025 300.00161743]
[-13.36886311 293.32632446]
[0.37405008 287.30795288]
[14.39168262 281.96060181]
[28.65129471 277.29672241]
[43.11958313 273.32723999]
[57.76275253 270.06137085]
[72.54660797 267.50680542]
[87.43662262 265.66949463]
[86.32097626 250.71102905]
[85.20532227 235.75257874]
[84.08967590 220.79411316]
[82.97402954 205.83566284]
[75.80509186 219.01164246]
[63.68001556 227.84242249]
[48.93997574 230.62290955]
[34.43103409 226.81625366]
[22.95464325 217.15745544]
[16.72671318 203.51147461]
[16.94976044 188.51313782]
[23.58071709 175.05838013]
[35.33925247 165.74511719]
[49.95497131 162.37158203]
[64.60581207 165.58917236]
[76.46292877 174.77659607]
[83.23720551 188.16116333]
[84.79772949 173.24255371]
[86.35825348 158.32394409]
[87.91877747 143.40534973]
[89.47929382 128.48674011]
[91.03981781 113.56813049]
[84.26443481 104.09525299]
[85.56227875 92.52127838]
[94.26747894 84.78430939]
[96.04994202 69.89059448]
[97.83241272 54.99687576]
[99.61487579 40.10315704]
[86.12853241 33.22246170]
[75.82935333 22.16357803]
[69.94625854 8.27439594]
[69.17152405 -6.76122332]
[73.57937622 -21.12758255]
[82.61936951 -33.09641647]
[95.18503571 -41.23479843]
[109.74927521 -44.57667160]
[111.53174591 -59.47038651]
[97.64108276 -65.40556335]
[85.98610687 -75.01483154]
[77.51161957 -87.51922607]
[72.90461731 -101.90505981]
[72.53857422 -117.00614166]
[76.44314575 -131.59829712]
[84.30182648 -144.49859619]
[95.47753906 -154.66128540]
[109.06431580 -161.26251221]
[123.96074677 -163.76713562]
[138.95922852 -161.97212219]
[152.84391785 -156.02301025]
[164.48924255 -146.40202332]
[172.95115662 -133.88912964]
[177.54370117 -119.49867249]
[177.89457703 -104.39723206]
[173.97534180 -89.80901337]
[166.10371399 -76.91660309]
[154.91780090 -66.76515198]
[141.32440186 -60.17758560]
[126.42546082 -57.68792343]
[124.64299774 -42.79420471]
[138.00730896 -36.10986710]
[148.29762268 -25.23610687]
[154.25791931 -11.47205162]
[155.15115356 3.52873659]
[150.85021973 17.95690346]
[141.85571289 30.06555176]
[129.23774719 38.38173294]
[114.50859070 41.88562393]
[112.72612762 56.77933884]
[110.94366455 71.67305756]
[109.16119385 86.56677246]
[116.15846252 101.81192017]
[105.95842743 115.12865448]
[104.39790344 130.04725647]
[102.83737946 144.96586609]
[101.27685547 159.88447571]
[99.71633148 174.80307007]
[98.15580750 189.72167969]
[97.93247986 204.72001648]
[99.04813385 219.67846680]
[100.16378021 234.63691711]
[101.27942657 249.59538269]
[102.39507294 264.55383301]
[117.39289856 264.16201782]
[132.39213562 264.49530029]
[147.35775757 265.55282593]
[162.25482178 267.33215332]
[177.04850769 269.82913208]
[191.70428467 273.03793335]
[206.18792725 276.95108032]
[220.46559143 281.55938721]
[234.50393677 286.85214233]
[248.27017212 292.81692505]
[261.73217773 299.43984985]
[274.85845947 306.70544434]
[287.61840820 314.59671021]
[299.98217773 323.09524536]
[311.92092896 332.18121338]
[323.40676880 341.83334351]
[334.41284180 352.02914429]
[344.91348267 362.74478149]
[354.88415527 373.95520020]
[364.30157471 385.63427734]
[373.14373779 397.75469971]
[381.39001465 410.28814697]
[389.02108765 423.20535278]
[396.01919556 436.47619629]
[402.36798096 450.06961060]
[408.05258179 463.95391846]
[413.05978394 478.09661865]
[417.37780762 492.46472168]
[420.99664307 507.02468872]
[423.90780640 521.74249268]
[426.10452271 536.58374023]
[427.58160400 551.51379395]
[428.33566284 566.49774170]
[428.36492920 581.50067139]
[427.66928101 596.48748779]
[426.25039673 611.42315674]
[424.11157227 626.27288818]
[421.25781250 641.00189209]
[417.69577026 655.57586670]
[413.43377686 669.96069336]
[408.48178101 684.12286377]
[402.85131836 698.02917480]
[396.55560303 711.64727783]
[389.60928345 724.94525146]
[382.02859497 737.89215088]
[373.83126831 750.45764160]
[365.03643799 762.61242676]
[355.66461182 774.32812500]
[345.73773193 785.57733154]
[335.27893066 796.33386230]
[324.31268311 806.57244873]
[312.86456299 816.26928711]
[300.96130371 825.40173340]
[288.63076782 833.94842529]
[275.90170288 841.88940430]
[262.80383301 849.20605469]
[249.36775208 855.88146973]
[235.62487793 861.89984131]
[221.60726929 867.24731445]
[207.34767151 871.91125488]
[192.87940979 875.88079834]
[178.23625183 879.14672852]
[163.45240784 881.70135498]
[148.56240845 883.53875732]
[133.60101318 884.65460205]
[118.60318756 885.04632568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 144]
[63 143]
[64 142]
[65 141]
[66 140]
[79 139]
[80 138]
[81 137]
[82 136]
[83 135]
[84 134]
[87 132]
[88 131]
[89 130]
[90 129]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
