%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[89.58597565 911.24645996]
[74.61532593 910.27734375]
[59.69503784 908.71380615]
[44.84870529 906.55828857]
[30.09980583 903.81427002]
[15.47166061 900.48608398]
[0.98739845 896.57891846]
[-13.33007717 892.09899902]
[-27.45812798 887.05340576]
[-41.37441635 881.45013428]
[-55.05693054 875.29803467]
[-68.48404694 868.60681152]
[-81.63452148 861.38708496]
[-94.48757172 853.65026855]
[-107.02287292 845.40850830]
[-119.22059631 836.67498779]
[-131.06146240 827.46337891]
[-142.52674866 817.78826904]
[-153.59831238 807.66503906]
[-164.25866699 797.10968018]
[-174.49095154 786.13879395]
[-184.27897644 774.76977539]
[-193.60726929 763.02062988]
[-202.46107483 750.90991211]
[-210.82640076 738.45672607]
[-218.69003296 725.68084717]
[-226.03950500 712.60247803]
[-232.86323547 699.24218750]
[-239.15039062 685.62121582]
[-244.89106750 671.76104736]
[-250.07617188 657.68359375]
[-254.69749451 643.41113281]
[-258.74774170 628.96624756]
[-262.22052002 614.37176514]
[-265.11032104 599.65069580]
[-267.41259766 584.82641602]
[-269.12365723 569.92236328]
[-270.24084473 554.96197510]
[-270.76239014 539.96905518]
[-270.68743896 524.96728516]
[-270.01611328 509.98031616]
[-268.74951172 495.03189087]
[-266.88961792 480.14566040]
[-264.43936157 465.34512329]
[-261.40261841 450.65368652]
[-257.78421021 436.09460449]
[-253.58982849 421.69088745]
[-248.82612610 407.46533203]
[-243.50062561 393.44039917]
[-237.62176514 379.63827515]
[-231.19882202 366.08078003]
[-224.24195862 352.78936768]
[-216.76216125 339.78503418]
[-208.77128601 327.08837891]
[-200.28195190 314.71942139]
[-191.30757141 302.69778442]
[-181.86236572 291.04241943]
[-171.96122742 279.77175903]
[-161.61985779 268.90365601]
[-150.85456848 258.45529175]
[-139.68240356 248.44319153]
[-128.12103271 238.88314819]
[-116.18872070 229.79031372]
[-103.90434265 221.17906189]
[-91.28732300 213.06300354]
[-78.35761261 205.45495605]
[-65.13565826 198.36697388]
[-51.64235687 191.81025696]
[-37.89905548 185.79516602]
[-23.92747879 180.33120728]
[-9.74972057 175.42704773]
[4.61180067 171.09042358]
[19.13437843 167.32818604]
[33.79504776 164.14628601]
[48.57062531 161.54975891]
[63.43775177 159.54270935]
[78.37291718 158.12832642]
[93.35250854 157.30882263]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[91.20349121 72.95106506]
[89.19947815 58.08553696]
[87.19546509 43.22000885]
[85.19145203 28.35447884]
[83.18743896 13.48895073]
[81.18342590 -1.37657738]
[79.17940521 -16.24210548]
[64.22727203 -18.32446861]
[50.39188004 -24.36470604]
[38.69990540 -33.91459274]
[30.01897430 -46.26546097]
[24.99326706 -60.50080109]
[23.99572563 -75.56424713]
[27.10037231 -90.33799744]
[34.07682419 -103.72574615]
[44.40738297 -114.73402405]
[57.32544708 -122.54594421]
[71.87241364 -126.58181763]
[86.96881104 -126.54215240]
[101.49436951 -122.42988586]
[114.37120056 -114.55018616]
[124.64376831 -103.48777008]
[131.54977417 -90.06355286]
[134.57673645 -75.27368927]
[133.50004578 -60.21568680]
[128.39959717 -46.00695801]
[119.65387726 -33.70187759]
[107.91188049 -24.21356583]
[94.04493713 -18.24611855]
[96.04895020 -3.38059092]
[98.05296326 11.48493671]
[100.05697632 26.35046577]
[102.06098938 41.21599197]
[104.06500244 56.08152008]
[106.06901550 70.94705200]
[114.34706116 58.43809128]
[128.35591125 53.07597733]
[142.87060547 56.86064148]
[152.47752380 68.38049316]
[153.59352112 83.33892059]
[145.80236816 96.15679932]
[132.00996399 102.05336761]
[117.36053467 98.82936096]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[108.35084534 157.08549500]
[123.34819031 157.45863342]
[138.31884766 158.42771912]
[153.23913574 159.99122620]
[168.08547974 162.14668274]
[182.83438110 164.89065552]
[197.46253967 168.21884155]
[211.94680786 172.12594604]
[226.26429749 176.60581970]
[240.39236450 181.65135193]
[254.30865479 187.25459290]
[267.99121094 193.40666199]
[281.41833496 200.09783936]
[294.56881714 207.31753540]
[307.42190552 215.05435181]
[319.95721436 223.29603577]
[332.15496826 232.02957153]
[343.99584961 241.24113464]
[355.46115112 250.91618347]
[366.53274536 261.03939819]
[377.19314575 271.59475708]
[387.42544556 282.56561279]
[397.21350098 293.93460083]
[406.54180908 305.68371582]
[415.39566040 317.79443359]
[423.76101685 330.24755859]
[431.62469482 343.02340698]
[438.97421265 356.10180664]
[445.79794312 369.46203613]
[452.08517456 383.08300781]
[457.82586670 396.94317627]
[463.01101685 411.02059937]
[467.63238525 425.29302979]
[471.68267822 439.73791504]
[475.15548706 454.33242798]
[478.04531860 469.05343628]
[480.34762573 483.87771606]
[482.05871582 498.78179932]
[483.17596436 513.74212646]
[483.69754028 528.73504639]
[483.62261963 543.73687744]
[482.95135498 558.72381592]
[481.68478394 573.67224121]
[479.82492065 588.55847168]
[477.37469482 603.35906982]
[474.33801270 618.05047607]
[470.71963501 632.60955811]
[466.52529907 647.01330566]
[461.76162720 661.23889160]
[456.43615723 675.26379395]
[450.55734253 689.06597900]
[444.13442993 702.62347412]
[437.17758179 715.91485596]
[429.69784546 728.91925049]
[421.70700073 741.61590576]
[413.21768188 753.98486328]
[404.24334717 766.00659180]
[394.79815674 777.66198730]
[384.89706421 788.93261719]
[374.55572510 799.80078125]
[363.79046631 810.24914551]
[352.61831665 820.26129150]
[341.05697632 829.82135010]
[329.12469482 838.91424561]
[316.84033203 847.52551270]
[304.22332764 855.64160156]
[291.29364014 863.24969482]
[278.07171631 870.33770752]
[264.57843018 876.89447021]
[250.83514404 882.90960693]
[236.86357117 888.37359619]
[222.68583679 893.27777100]
[208.32432556 897.61444092]
[193.80175781 901.37670898]
[179.14109802 904.55865479]
[164.36552429 907.15521240]
[149.49839783 909.16229248]
[134.56323242 910.57672119]
[119.58364868 911.39630127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 132]
[79 131]
[80 130]
[81 129]
[83 127]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
