%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[43.31449127 309.35696411]
[41.36124802 324.23818970]
[38.16961670 338.90380859]
[33.76198196 353.25091553]
[28.16926003 367.17886353]
[21.43068504 380.58999634]
[13.59352016 393.39019775]
[4.71273899 405.48971558]
[-5.14936447 416.80364990]
[-15.92361450 427.25268555]
[-27.53443527 436.76348877]
[-39.90038300 445.26934814]
[-52.93472290 452.71063232]
[-66.54602051 459.03512573]
[-80.63880920 464.19845581]
[-95.11422729 468.16439819]
[-109.87073517 470.90518188]
[-124.80484009 472.40151978]
[-139.81178284 472.64297485]
[-154.78630066 471.62780762]
[-169.62333679 469.36315918]
[-184.21884155 465.86489868]
[-198.47042847 461.15759277]
[-212.27813721 455.27423096]
[-225.54510498 448.25610352]
[-238.17828369 440.15243530]
[-250.08903503 431.02005005]
[-261.19384766 420.92303467]
[-271.41479492 409.93218994]
[-280.68020630 398.12463379]
[-288.92507935 385.58316040]
[-296.09158325 372.39575195]
[-302.12945557 358.65490723]
[-306.99633789 344.45703125]
[-310.65811157 329.90167236]
[-313.08905029 315.09097290]
[-314.27212524 300.12878418]
[-314.19903564 285.12008667]
[-312.87030029 270.17013550]
[-310.29522705 255.38380432]
[-306.49191284 240.86480713]
[-301.48699951 226.71498108]
[-295.31558228 213.03359985]
[-288.02099609 199.91661072]
[-279.65438843 187.45602417]
[-270.27441406 175.73924255]
[-259.94689941 164.84846497]
[-248.74430847 154.86006165]
[-236.74516296 145.84411621]
[-224.03367615 137.86386108]
[-210.69898987 130.97526550]
[-196.83464050 125.22666168]
[-182.53788757 120.65836334]
[-167.90901184 117.30242157]
[-153.05061340 115.18237305]
[-138.06692505 114.31307983]
[-123.06304932 114.70066071]
[-108.14422607 116.34237671]
[-93.41510010 119.22672272]
[-78.97898865 123.33345795]
[-64.93715668 128.63378906]
[-51.38809586 135.09053040]
[-38.42684555 142.65838623]
[-26.14431572 151.28428650]
[-14.62666798 160.90769958]
[-3.95468855 171.46116638]
[7.44777393 161.71519470]
[18.85023689 151.96922302]
[30.25269890 142.22326660]
[41.65516281 132.47729492]
[53.05762482 122.73133087]
[38.06794357 123.28765869]
[25.10317993 115.74346161]
[18.18060493 102.43639374]
[19.44525528 87.48979950]
[28.50526237 75.53504181]
[42.55328751 70.27642822]
[57.23639679 73.34340668]
[68.00486755 83.78562927]
[71.52197266 98.36746979]
[66.69775391 112.57078552]
[79.30006409 104.43556976]
[82.40582275 88.22686768]
[96.20434570 79.17322540]
[112.30966187 82.77693939]
[124.78945160 74.45499420]
[137.20695496 66.04037476]
[149.56146240 57.53354645]
[161.91596985 49.02671814]
[154.20709229 36.15326691]
[147.33021545 22.81680489]
[141.31304932 9.07103539]
[136.17980957 -5.02869415]
[131.95117188 -19.42560768]
[128.64414978 -34.06173325]
[126.27207947 -48.87813568]
[124.84449768 -63.81515503]
[124.36715698 -78.81264496]
[124.84197998 -93.81021118]
[126.26705933 -108.74746704]
[128.63664246 -123.56427002]
[131.94120789 -138.20094299]
[136.16743469 -152.59857178]
[141.29830933 -166.69915771]
[147.31317139 -180.44593811]
[154.18780518 -193.78355408]
[161.89451599 -206.65830994]
[170.40228271 -219.01834106]
[179.67684937 -230.81388855]
[189.68086243 -241.99745178]
[200.37405396 -252.52401733]
[211.71333313 -262.35116577]
[223.65307617 -271.43936157]
[236.14518738 -279.75198364]
[249.13937378 -287.25555420]
[262.58328247 -293.91989136]
[276.42282104 -299.71813965]
[290.60226440 -304.62695312]
[305.06448364 -308.62655640]
[319.75125122 -311.70086670]
[334.60342407 -313.83749390]
[349.56121826 -315.02783203]
[364.56439209 -315.26705933]
[379.55255127 -314.55426025]
[394.46530151 -312.89230347]
[409.24261475 -310.28784180]
[423.82501221 -306.75140381]
[438.15374756 -302.29718018]
[452.17111206 -296.94317627]
[465.82070923 -290.71087646]
[479.04754639 -283.62542725]
[491.79833984 -275.71536255]
[504.02178955 -267.01248169]
[515.66864014 -257.55187988]
[526.69201660 -247.37161255]
[537.04754639 -236.51271057]
[546.69348145 -225.01887512]
[555.59106445 -212.93640137]
[563.70434570 -200.31393433]
[571.00073242 -187.20230103]
[577.45086670 -173.65429688]
[583.02874756 -159.72447205]
[587.71191406 -145.46891785]
[591.48144531 -130.94505310]
[594.32226562 -116.21133423]
[596.22290039 -101.32711029]
[597.17565918 -86.35230255]
[597.17675781 -71.34722137]
[596.22619629 -56.37228012]
[594.32775879 -41.48777771]
[591.48907471 -26.75365067]
[587.72161865 -12.22922611]
[583.04058838 2.02700710]
[577.46472168 15.95764542]
[571.01660156 29.50659561]
[563.72210693 42.61930084]
[555.61065674 55.24295425]
[546.71490479 67.32673645]
[537.07061768 78.82197571]
[526.71667480 89.68239594]
[515.69476318 99.86426544]
[504.04931641 109.32657623]
[491.82714844 118.03122711]
[479.07748413 125.94318390]
[465.85171509 133.03056335]
[452.20303345 139.26484680]
[438.18643188 144.62092590]
[423.85833740 149.07722473]
[409.27648926 152.61579895]
[394.49954224 155.22242737]
[379.58700562 156.88656616]
[364.59896851 157.60156250]
[349.59576416 157.36450195]
[334.63778687 156.17636108]
[319.78530884 154.04191589]
[305.09808350 150.96975708]
[290.63528442 146.97225952]
[276.45513916 142.06552124]
[262.61474609 136.26930237]
[249.16986084 129.60693359]
[236.17457581 122.10525513]
[223.68124390 113.79445648]
[211.74017334 104.70801544]
[200.39945984 94.88252258]
[189.70472717 84.35752869]
[179.69908142 73.17542267]
[170.42279053 61.38122940]
[158.06828308 69.88805389]
[145.71377563 78.39488220]
[141.98739624 84.77734375]
[133.11138916 86.93478394]
[120.63159943 95.25672913]
[119.64334869 107.89306641]
[111.61349487 117.69995117]
[99.42052460 121.16189575]
[87.43527985 117.03787994]
[74.83296967 125.17309570]
[62.80358887 134.13378906]
[51.40112686 143.87976074]
[39.99866486 153.62573242]
[28.59620285 163.37168884]
[17.19373894 173.11766052]
[5.79127741 182.86361694]
[14.55440903 195.04861450]
[22.26718521 207.92416382]
[28.87550354 221.39994812]
[34.33301163 235.38143921]
[38.60143280 249.77056885]
[41.65081787 264.46640015]
[43.45978546 279.36587524]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 203]
[67 202]
[68 201]
[69 200]
[70 199]
[71 198]
[81 197]
[82 196]
[85 192]
[86 191]
[87 189]
[88 188]
[89 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
