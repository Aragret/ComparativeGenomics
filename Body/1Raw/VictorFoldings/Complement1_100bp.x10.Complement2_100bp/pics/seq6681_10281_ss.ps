%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[43.56199646 640.14459229]
[35.09977341 652.56115723]
[24.95656204 663.64703369]
[13.33885765 673.17645264]
[0.48318499 680.95538330]
[-13.34873199 686.82556152]
[-27.87529373 690.66741943]
[-42.80075836 692.40270996]
[-57.82125854 691.99615479]
[-72.63100433 689.45605469]
[-86.92847443 684.83404541]
[-100.42260742 678.22424316]
[-112.83866882 669.76129150]
[-123.92388916 659.61737061]
[-133.45257568 647.99908447]
[-141.23075867 635.14294434]
[-147.10006714 621.31066895]
[-150.94100952 606.78381348]
[-152.67539978 591.85827637]
[-152.26792908 576.83776855]
[-149.72686768 562.02819824]
[-145.10397339 547.73101807]
[-138.49336243 534.23730469]
[-130.02960205 521.82177734]
[-119.88501740 510.73718262]
[-108.26613617 501.20919800]
[-95.40950012 493.43182373]
[-81.57685852 487.56335449]
[-67.04981995 483.72332764]
[-52.12414169 481.98983765]
[-37.10369110 482.39825439]
[-22.29426193 484.94021606]
[-17.68025208 470.66748047]
[-13.06624317 456.39477539]
[-8.45223427 442.12203979]
[-3.83822489 427.84930420]
[0.77578449 413.57656860]
[-12.00542545 404.52301025]
[-21.37492943 391.94729614]
[-26.40591812 377.07336426]
[-26.59453201 361.35330200]
[-21.91029739 346.32580566]
[-12.80028820 333.46548462]
[-0.14647783 324.03820801]
[14.81963253 318.97640991]
[30.63686371 318.78698730]
[35.03786087 304.44714355]
[39.43885803 290.10729980]
[43.83985901 275.76742554]
[48.24085617 261.42758179]
[52.64185333 247.08773804]
[48.97925186 232.65048218]
[60.42500305 221.72778320]
[64.82600403 207.38792419]
[69.22699738 193.04808044]
[73.19909668 178.58355713]
[76.73876953 164.00718689]
[80.27844238 149.43080139]
[83.81811523 134.85443115]
[87.35778809 120.27806091]
[90.89745331 105.70168304]
[91.90171814 90.73533630]
[90.34119415 75.81673431]
[88.78067017 60.89812851]
[87.22014618 45.97952271]
[84.55435181 31.21830559]
[80.79804993 16.69624710]
[77.04174805 2.17418790]
[66.09513855 -9.24869823]
[70.39875031 -23.50802040]
[66.64244843 -38.03007889]
[62.88614655 -52.55213928]
[59.12984467 -67.07419586]
[55.37354279 -81.59626007]
[41.08916092 -87.36363220]
[33.03393173 -100.28518677]
[34.11912918 -115.29473114]
[43.71955109 -126.65122223]
[39.96324921 -141.17327881]
[29.01663971 -152.59617615]
[33.32024384 -166.85548401]
[29.56394386 -181.37754822]
[14.53059864 -180.61373901]
[-0.34871468 -182.89210510]
[-14.46469784 -188.11932373]
[-27.23930931 -196.08137512]
[-38.14943695 -206.45219421]
[-46.74831772 -218.80712891]
[-52.68383408 -232.64021301]
[-55.71292877 -247.38502502]
[-55.71156311 -262.43777466]
[-52.67979050 -277.18203735]
[-46.74176788 -291.01403809]
[-38.14064407 -303.36740112]
[-27.22863388 -313.73626709]
[-14.45257854 -321.69598389]
[-0.33564714 -326.92065430]
[14.54407978 -329.19631958]
[29.57728577 -328.42977905]
[44.14837265 -324.65243530]
[57.66066360 -318.01895142]
[69.56083679 -308.80099487]
[79.36158752 -297.37600708]
[86.66158295 -284.21185303]
[91.16188812 -269.84759521]
[92.67823029 -254.87142944]
[91.14849854 -239.89662170]
[86.63535309 -225.53639221]
[79.32359314 -212.37876892]
[69.51262665 -200.96255493]
[57.60421753 -191.75523376]
[44.08600235 -185.13385010]
[47.84230423 -170.61178589]
[58.52023697 -160.22761536]
[54.48530960 -144.92958069]
[58.24160767 -130.40753174]
[72.14450073 -125.13043976]
[80.37144470 -112.52959442]
[79.59193420 -97.32282257]
[69.89560699 -85.35255432]
[73.65190125 -70.83049774]
[77.40820312 -56.30843735]
[81.16450500 -41.78638077]
[84.92080688 -27.26432037]
[95.59873962 -16.88014984]
[91.56381226 -1.58211279]
[95.32011414 12.93994617]
[99.07640839 27.46200562]
[104.61083221 13.52033520]
[116.31304169 4.13639259]
[131.12409973 1.76311851]
[145.17243958 7.02088118]
[154.78585815 18.53531265]
[157.45143127 33.29656982]
[152.47238159 47.44609451]
[141.15022278 57.28523636]
[126.44454193 60.24206543]
[112.19936371 55.54367447]
[102.13875580 44.41900253]
[103.69927216 59.33760452]
[105.25979614 74.25621033]
[106.82032013 89.17481232]
[112.06942749 75.12323761]
[120.60614014 62.78936005]
[131.90843201 52.92740250]
[145.28517151 46.14043427]
[159.91835022 42.84347534]
[174.91316223 43.23813629]
[189.35266113 47.30028152]
[202.35385132 54.78151703]
[213.12173462 65.22435760]
[220.99781799 77.99021149]
[225.50050354 92.29846191]
[226.35443115 107.27413177]
[223.50740051 122.00146484]
[217.13349915 135.57987976]
[207.62248230 147.17904663]
[195.55596924 156.08967590]
[181.67182922 161.76687622]
[166.81907654 163.86349487]
[151.90597534 162.25129700]
[137.84445190 157.02890015]
[125.49436951 148.51562500]
[115.61096191 137.23208618]
[108.79859161 123.86827850]
[105.47383118 109.24135590]
[101.93415833 123.81773376]
[98.39448547 138.39410400]
[94.85481262 152.97047424]
[91.31513977 167.54685974]
[87.77546692 182.12322998]
[89.14542389 186.24357605]
[89.13410187 190.18875122]
[87.96618652 193.54603577]
[85.97731781 196.01808167]
[83.56684875 197.44908142]
[79.16584778 211.78892517]
[74.76484680 226.12876892]
[78.11266327 241.59172058]
[66.98169708 251.48873901]
[62.58070374 265.82858276]
[58.17970276 280.16842651]
[53.77870560 294.50827026]
[49.37770844 308.84814453]
[44.97671127 323.18798828]
[56.91388321 331.23748779]
[66.08815765 342.31292725]
[71.76255035 355.51049805]
[73.48519897 369.75656128]
[71.12533569 383.89489746]
[64.88314819 396.78054810]
[55.27286530 407.37265015]
[43.08038712 414.81829834]
[29.29900551 418.52148438]
[15.04851818 418.19058228]
[10.43450832 432.46331787]
[5.82049942 446.73602295]
[1.20649004 461.00875854]
[-3.40751934 475.28149414]
[-8.02152824 489.55422974]
[5.47341967 496.16235352]
[17.89052963 504.62380981]
[28.97700310 514.76635742]
[38.50713730 526.38342285]
[46.28690338 539.23864746]
[52.15792465 553.07019043]
[56.00066757 567.59649658]
[57.73690414 582.52185059]
[57.33128357 597.54241943]
[54.79206467 612.35229492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 200]
[33 199]
[34 198]
[35 197]
[36 196]
[37 195]
[46 185]
[47 184]
[48 183]
[49 182]
[50 181]
[51 180]
[53 178]
[54 177]
[55 176]
[56 171]
[57 170]
[58 169]
[59 168]
[60 167]
[61 166]
[62 142]
[63 141]
[64 140]
[65 139]
[66 128]
[67 127]
[68 126]
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[78 116]
[79 115]
[81 113]
[82 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
