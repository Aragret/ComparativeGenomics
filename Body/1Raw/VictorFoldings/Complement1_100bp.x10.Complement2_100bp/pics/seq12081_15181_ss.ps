%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[99.17227173 572.45886230]
[95.02754974 558.02197266]
[92.72498322 543.17944336]
[92.30089569 528.16528320]
[93.76196289 513.21643066]
[97.08515167 498.56860352]
[102.21804047 484.45275879]
[109.07968903 471.09158325]
[117.56187439 458.69580078]
[127.53080750 447.46087646]
[138.82928467 437.56399536]
[151.27909851 429.16131592]
[164.68389893 422.38528442]
[159.64698792 408.25625610]
[154.61007690 394.12722778]
[149.57315063 379.99819946]
[144.53623962 365.86917114]
[139.49932861 351.74014282]
[135.69235229 366.24899292]
[125.64720154 377.38879395]
[111.60797119 382.67083740]
[96.71107483 380.91516113]
[84.28451538 372.51394653]
[77.10440826 359.34405518]
[76.77481842 344.34765625]
[83.36936951 330.87503052]
[95.41482544 321.93597412]
[110.22020721 319.52746582]
[124.47793579 324.18762207]
[135.00283813 334.87533569]
[125.12681580 323.72573853]
[130.28837585 308.77017212]
[127.62258911 294.00897217]
[117.86718750 286.85641479]
[115.52546692 274.58041382]
[122.38852692 263.65975952]
[119.94280243 248.86047363]
[117.49707794 234.06120300]
[115.05134583 219.26193237]
[112.60562134 204.46266174]
[109.93982697 189.70144653]
[107.05455017 174.98155212]
[94.58850861 166.91102600]
[91.45274353 152.02406311]
[100.00238037 139.00326538]
[97.11711121 124.28337097]
[94.23183441 109.56347656]
[91.23706055 94.86547089]
[80.81143188 82.96518707]
[85.74745178 68.91225433]
[82.64334106 54.23694992]
[79.53923035 39.56164932]
[74.70167542 31.81336975]
[76.49987030 24.64480782]
[64.07845306 11.05106449]
[70.40911102 -5.31626987]
[67.30500031 -19.99157143]
[64.20088959 -34.66687393]
[61.09678268 -49.34217834]
[57.39564514 -34.80596161]
[50.59354782 -21.43691254]
[41.02237701 -9.88733673]
[29.14913177 -0.72076494]
[15.55313301 5.61554670]
[0.89776218 8.81243515]
[-14.10191441 8.71391773]
[-28.71402931 5.32480097]
[-42.22562408 -1.18955302]
[-53.97743607 -10.51129436]
[-63.39607620 -22.18559456]
[-70.02198029 -35.64283752]
[-73.53186035 -50.22641373]
[-73.75445557 -65.22476196]
[-70.67890930 -79.90608215]
[-64.45528412 -93.55403137]
[-55.38724518 -105.50269318]
[-43.91724396 -115.16908264]
[-30.60492134 -122.08154297]
[-16.09981918 -125.90280151]
[-1.10967278 -126.44641113]
[13.63411522 -123.68584442]
[27.41216278 -117.75580597]
[39.55220795 -108.94562531]
[49.46191406 -97.68517303]
[56.65776062 -84.52387238]
[60.78754044 -70.11042023]
[63.45333481 -84.87163544]
[58.29176712 -99.82719421]
[68.16778564 -110.97679138]
[70.83358002 -125.73801422]
[69.06691742 -130.64984131]
[69.33427429 -135.28468323]
[71.18952179 -138.91415405]
[73.96211243 -141.09248352]
[77.28437042 -155.71994019]
[80.60662842 -170.34739685]
[83.92888641 -184.97485352]
[87.25115204 -199.60232544]
[73.54178619 -205.81828308]
[61.36451721 -214.66696167]
[51.21800232 -225.78601074]
[43.51773071 -238.72009277]
[38.57902527 -252.93959045]
[36.60412216 -267.86221313]
[37.67388916 -282.87689209]
[41.74452591 -297.36877441]
[48.64933777 -310.74444580]
[58.10557938 -322.45614624]
[69.72602081 -332.02435303]
[83.03482056 -339.05718994]
[97.48698425 -343.26669312]
[112.49069977 -344.48046875]
[127.43158722 -342.64886475]
[141.69781494 -337.84683228]
[154.70520020 -330.27102661]
[165.92108154 -320.23165894]
[174.88619995 -308.13986206]
[181.23342896 -294.49078369]
[184.70285034 -279.84332275]
[185.15238953 -264.79730225]
[182.56364441 -249.96882629]
[177.04261780 -235.96513367]
[168.81539917 -223.35968018]
[158.21888733 -212.66860962]
[145.68701172 -204.32974243]
[131.73291016 -198.68455505]
[116.92803192 -195.96418762]
[101.87860870 -196.28005981]
[98.55635071 -181.65260315]
[95.23409271 -167.02514648]
[91.91183472 -152.39767456]
[88.58956909 -137.77021790]
[85.59479523 -123.07221985]
[82.92900085 -108.31099701]
[88.28124237 -94.41126251]
[78.21455383 -82.20584106]
[75.54875946 -67.44462585]
[75.77208710 -52.44628525]
[78.87619781 -37.77098465]
[81.98030853 -23.09568214]
[85.08441162 -8.42037964]
[95.04844666 -1.56146944]
[97.75463104 10.63936234]
[91.21976471 21.75953484]
[94.21453857 36.45753860]
[97.31864929 51.13284302]
[100.42275238 65.80814362]
[110.62635803 76.65875244]
[105.91236115 91.76136017]
[110.52886963 98.36896515]
[108.95172882 106.67819977]
[111.83699799 121.39809418]
[114.72227478 136.11798096]
[127.55485535 144.94763184]
[130.27124023 159.91679382]
[121.77444458 172.09628296]
[124.65971375 186.81617737]
[128.71005249 192.04171753]
[129.40852356 197.68168640]
[127.40489197 202.01693726]
[129.85061646 216.81620789]
[132.29634094 231.61547852]
[134.74206543 246.41474915]
[137.18780518 261.21401978]
[149.19897461 275.17156982]
[142.38380432 291.34317017]
[145.04960632 306.10437012]
[155.11628723 318.30978394]
[149.76405334 332.20953369]
[153.62835693 346.70321655]
[158.66526794 360.83224487]
[163.70219421 374.96130371]
[168.73910522 389.09033203]
[173.77601624 403.21936035]
[178.81294250 417.34838867]
[193.48121643 414.11651611]
[208.43888855 412.74859619]
[223.45005798 413.26620483]
[238.27798462 415.66119385]
[252.68879700 419.89578247]
[266.45523071 425.90316772]
[279.36013794 433.58862305]
[291.20004272 442.83093262]
[301.78814697 453.48431396]
[310.95751953 465.38079834]
[318.56353760 478.33270264]
[324.48620605 492.13580322]
[328.63214111 506.57235718]
[330.93594360 521.41473389]
[331.36129761 536.42877197]
[329.90148926 551.37774658]
[326.57952881 566.02593994]
[321.44784546 580.14215088]
[314.58731079 593.50390625]
[306.10617065 605.90045166]
[296.13818359 617.13623047]
[284.84054565 627.03399658]
[272.39141846 635.43774414]
[258.98721313 642.21490479]
[244.83924866 647.25854492]
[230.17070007 650.48919678]
[215.21290588 651.85583496]
[200.20178223 651.33697510]
[185.37405396 648.94073486]
[170.96359253 644.70495605]
[157.19767761 638.69641113]
[144.29339600 631.00982666]
[132.45428467 621.76654053]
[121.86705780 611.11224365]
[112.69869232 599.21502686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 175]
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[30 169]
[32 167]
[33 166]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 157]
[42 156]
[45 153]
[46 152]
[47 151]
[48 149]
[50 147]
[51 146]
[52 145]
[54 144]
[56 141]
[57 140]
[58 139]
[59 138]
[86 137]
[87 136]
[89 134]
[90 133]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
