%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[119.91867065 735.66839600]
[107.09193420 727.86895752]
[95.07784271 718.86804199]
[83.98856354 708.74957275]
[73.92764282 697.60803223]
[64.98901367 685.54754639]
[57.25614166 672.68060303]
[50.80121994 659.12738037]
[45.68452454 645.01440430]
[41.95382690 630.47357178]
[39.64395905 615.64050293]
[38.77649307 600.65368652]
[39.35952377 585.65319824]
[41.38760757 570.77899170]
[44.84181213 556.16992188]
[49.68988419 541.96246338]
[55.88655472 528.28924561]
[63.37397003 515.27795410]
[72.08221436 503.05004883]
[81.92998505 491.71969604]
[92.82533264 481.39270020]
[104.66652679 472.16546631]
[117.34300232 464.12417603]
[130.73640442 457.34390259]
[144.72169495 451.88793945]
[159.16825867 447.80722046]
[156.50247192 433.04602051]
[153.83666992 418.28479004]
[151.17086792 403.52359009]
[148.50508118 388.76235962]
[133.16885376 383.67190552]
[122.43062592 371.47164917]
[119.29232788 355.42895508]
[124.70345306 339.90426636]
[137.27653503 329.16604614]
[134.39126587 314.44616699]
[131.50598145 299.72625732]
[119.03994751 291.65573120]
[115.90418243 276.76876831]
[124.45381927 263.74795532]
[114.41289520 252.74664307]
[119.35122681 237.71589661]
[116.46595001 222.99600220]
[113.58068085 208.27610779]
[101.11463928 200.20558167]
[97.97886658 185.31861877]
[106.52850342 172.29782104]
[103.64323425 157.57792664]
[100.75795746 142.85803223]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[75.85646057 84.41306305]
[65.95360565 72.88786316]
[63.16770172 58.05192184]
[68.14852905 43.90811157]
[79.46395874 34.22169495]
[69.21665955 22.16750717]
[74.36135864 8.18962097]
[71.47608948 -6.53027010]
[68.59081268 -21.25016212]
[65.70554352 -35.97005463]
[50.13145065 -36.67604828]
[35.18505859 -41.07879639]
[21.73029518 -48.91946793]
[10.54381561 -59.74064255]
[2.27019882 -72.91298676]
[-2.61520863 -87.67187500]
[-3.83359790 -103.16175079]
[-1.31860423 -118.48573303]
[4.78008986 -132.75753784]
[14.10565758 -145.15275574]
[26.11500359 -154.95645142]
[40.11038971 -161.60443115]
[37.00627899 -176.27973938]
[33.90216827 -190.95504761]
[30.79805946 -205.63034058]
[20.37242699 -217.53062439]
[25.30845261 -231.58355713]
[22.20434189 -246.25886536]
[19.10023117 -260.93417358]
[4.06077099 -260.57464600]
[-10.78863907 -262.98495483]
[-24.94223404 -268.08303833]
[-37.91794586 -275.69525146]
[-49.27382660 -285.56228638]
[-58.62310028 -297.34811401]
[-65.64733887 -310.65130615]
[-70.10728455 -325.01873779]
[-71.85105133 -339.96109009]
[-70.81923676 -354.96942139]
[-67.04698944 -369.53256226]
[-60.66278076 -383.15447998]
[-51.88406754 -395.37121582]
[-41.00983810 -405.76669312]
[-28.41047287 -413.98681641]
[-14.51509857 -419.75164795]
[0.20301454 -422.86480713]
[15.24257183 -423.22027588]
[30.09133148 -420.80596924]
[44.24355316 -415.70407104]
[57.21721268 -408.08837891]
[68.57043457 -398.21826172]
[77.91652679 -386.42993164]
[84.93717957 -373.12484741]
[89.39325714 -358.75619507]
[91.13299561 -343.81335449]
[90.09713745 -328.80532837]
[86.32096100 -314.24319458]
[79.93308258 -300.62301636]
[71.15106964 -288.40863037]
[60.27404404 -278.01608276]
[47.67246246 -269.79934692]
[33.77553558 -264.03826904]
[36.87964630 -249.36297607]
[39.98375320 -234.68766785]
[50.18735886 -223.83706665]
[45.47336197 -208.73445129]
[48.57747269 -194.05914307]
[51.68158340 -179.38385010]
[54.78569031 -164.70854187]
[69.23687744 -164.44180298]
[83.27191162 -160.95713806]
[96.18305206 -154.42681885]
[107.31845093 -145.17678833]
[116.11507416 -133.67039490]
[122.12717438 -120.48516846]
[125.04888153 -106.28385925]
[124.72973633 -91.78111267]
[121.18246460 -77.70751190]
[114.58248901 -64.77274323]
[105.25926971 -53.62986755]
[93.67984772 -44.84229279]
[80.42543793 -38.85532379]
[83.31070709 -24.13543510]
[86.19598389 -9.41554260]
[89.08125305 5.30434847]
[99.12217712 16.30567169]
[94.18384552 31.33642197]
[108.31876373 36.03427124]
[118.27056885 47.25110626]
[121.29167175 62.04094696]
[116.47258759 76.45182037]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[115.47785187 139.97276306]
[118.36312866 154.69265747]
[121.24839783 169.41253662]
[134.08097839 178.24218750]
[136.79736328 193.21134949]
[128.30056763 205.39083862]
[131.18583679 220.11073303]
[134.07112122 234.83062744]
[144.31842041 246.88481140]
[139.17370605 260.86270142]
[152.00628662 269.69235229]
[154.72267151 284.66149902]
[146.22587585 296.84100342]
[149.11116028 311.56088257]
[151.99642944 326.28079224]
[165.44685364 330.12118530]
[175.88061523 339.33816528]
[181.29930115 352.09027100]
[180.69789124 365.86660767]
[174.25071716 377.98117065]
[163.26629639 386.09655762]
[165.93209839 400.85778809]
[168.59788513 415.61898804]
[171.26368713 430.38021851]
[173.92947388 445.14144897]
[188.89082336 443.91122437]
[203.90107727 444.13073730]
[218.82005310 445.79797363]
[233.50846863 448.89730835]
[247.82917786 453.39984131]
[261.64846802 459.26351929]
[274.83731079 466.43356323]
[287.27258301 474.84307861]
[298.83813477 484.41354370]
[309.42599487 495.05554199]
[318.93731689 506.66976929]
[327.28329468 519.14776611]
[334.38598633 532.37304688]
[340.17910767 546.22204590]
[344.60852051 560.56555176]
[347.63287354 575.26959229]
[349.22396851 590.19683838]
[349.36694336 605.20800781]
[348.06042480 620.16290283]
[345.31665039 634.92187500]
[341.16119385 649.34710693]
[335.63290405 663.30395508]
[328.78338623 676.66210938]
[320.67654419 689.29675293]
[311.38815308 701.09002686]
[301.00488281 711.93176270]
[289.62368774 721.72076416]
[277.35086060 730.36553955]
[264.30096436 737.78552246]
[250.59584045 743.91131592]
[236.36347961 748.68572998]
[221.73675537 752.06427002]
[206.85223389 754.01531982]
[191.84889221 754.52069092]
[176.86682129 753.57562256]
[162.04591370 751.18902588]
[147.52453613 747.38305664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 173]
[27 172]
[28 171]
[29 170]
[30 169]
[35 163]
[36 162]
[37 161]
[40 158]
[42 156]
[43 155]
[44 154]
[47 151]
[48 150]
[49 149]
[50 148]
[51 147]
[53 145]
[58 140]
[60 138]
[61 137]
[62 136]
[63 135]
[75 122]
[76 121]
[77 120]
[78 119]
[80 117]
[81 116]
[82 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
