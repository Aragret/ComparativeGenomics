%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[85.34505463 601.15075684]
[70.87244415 597.16601562]
[56.83658218 591.84350586]
[43.36080170 585.23004150]
[30.56353569 577.38372803]
[18.55725098 568.37353516]
[7.44746017 558.27868652]
[-2.66820073 547.18774414]
[-11.70083332 535.19836426]
[-19.57105637 522.41577148]
[-26.20970535 508.95239258]
[-31.55843544 494.92651367]
[-35.57024384 480.46139526]
[-38.20987320 465.68414307]
[-39.45412827 450.72463989]
[-39.29206848 435.71438599]
[-37.72512436 420.78524780]
[-34.76705933 406.06845093]
[-30.44387627 391.69329834]
[-24.79356575 377.78616333]
[-17.86578178 364.46923828]
[-9.72141171 351.85958862]
[-0.43202710 340.06799316]
[9.92073441 329.19808960]
[21.24588966 319.34539795]
[33.44390869 310.59652710]
[46.40759659 303.02835083]
[60.02302551 296.70739746]
[74.17053223 291.68917847]
[88.72579956 288.01782227]
[103.56089783 285.72558594]
[102.66808319 270.75219727]
[101.77526855 255.77879333]
[100.88244629 240.80538940]
[99.98963165 225.83197021]
[99.09681702 210.85856628]
[98.20400238 195.88516235]
[97.31118774 180.91175842]
[81.67751312 178.85574341]
[66.73894501 173.80816650]
[53.06221008 165.96049500]
[41.16616821 155.61045837]
[31.50212669 143.15071106]
[24.43671036 129.05393982]
[20.23796082 113.85494995]
[19.06517029 98.13033295]
[20.96282768 82.47664642]
[25.85894394 67.48774719]
[33.56777191 53.73228073]
[43.79686356 41.73208618]
[56.15814972 31.94241714]
[70.18267822 24.73467255]
[85.33839417 20.38228989]
[84.00016022 5.44210529]
[82.66192627 -9.49808025]
[81.32369232 -24.43826485]
[79.98545837 -39.37844849]
[78.64722443 -54.31863403]
[77.30899048 -69.25881958]
[75.97074890 -84.19900513]
[60.96599960 -83.95455170]
[45.98342896 -84.80603790]
[31.10298347 -86.74890900]
[16.40405846 -89.77281189]
[1.96507621 -93.86160278]
[-12.13692188 -98.99346924]
[-25.82669449 -105.14103699]
[-39.03120041 -112.27149200]
[-51.67998886 -120.34679413]
[-63.70557022 -129.32386780]
[-75.04378510 -139.15480042]
[-85.63413239 -149.78715515]
[-95.42011261 -161.16419983]
[-104.34951019 -173.22521973]
[-112.37468719 -185.90586853]
[-119.45281982 -199.13848877]
[-125.54615021 -212.85249329]
[-130.62216187 -226.97470093]
[-134.65376282 -241.42974854]
[-137.61946106 -256.14053345]
[-139.50341797 -271.02853394]
[-140.29559326 -286.01437378]
[-139.99174500 -301.01803589]
[-138.59350586 -315.95950317]
[-136.10833740 -330.75903320]
[-132.54949951 -345.33770752]
[-127.93598175 -359.61767578]
[-122.29238892 -373.52279663]
[-115.64883423 -386.97885132]
[-108.04077148 -399.91406250]
[-99.50878906 -412.25942993]
[-90.09841156 -423.94903564]
[-79.85984802 -434.92056274]
[-68.84771729 -445.11541748]
[-57.12078857 -454.47927856]
[-44.74162292 -462.96212769]
[-31.77627182 -470.51870728]
[-18.29391098 -477.10873413]
[-4.36647224 -482.69699097]
[9.93173122 -487.25372314]
[24.52441216 -490.75460815]
[39.33371353 -493.18090820]
[54.28061676 -494.51974487]
[69.28537750 -494.76397705]
[84.26792908 -493.91223145]
[99.14833832 -491.96911621]
[113.84722137 -488.94497681]
[128.28613281 -484.85595703]
[142.38804626 -479.72384644]
[156.07771301 -473.57604980]
[169.28210449 -466.44537354]
[181.93077087 -458.36987305]
[193.95619202 -449.39260864]
[205.29425049 -439.56146240]
[215.88442993 -428.92895508]
[225.67021179 -417.55175781]
[234.59942627 -405.49060059]
[242.62438965 -392.80981445]
[249.70230103 -379.57705688]
[255.79541016 -365.86294556]
[260.87118530 -351.74066162]
[264.90255737 -337.28555298]
[267.86801147 -322.57473755]
[269.75170898 -307.68667603]
[270.54364014 -292.70083618]
[270.23956299 -277.69717407]
[268.84106445 -262.75573730]
[266.35565186 -247.95623779]
[262.79656982 -233.37763977]
[258.18283081 -219.09774780]
[252.53900146 -205.19271851]
[245.89523315 -191.73677063]
[238.28695679 -178.80168152]
[229.75476074 -166.45646667]
[220.34419250 -154.76699829]
[210.10545349 -143.79565430]
[199.09315491 -133.60095215]
[187.36607361 -124.23730469]
[174.98677063 -115.75466156]
[162.02130127 -108.19828796]
[148.53881836 -101.60848999]
[134.61129761 -96.02043915]
[120.31301880 -91.46394348]
[105.72027588 -87.96331787]
[90.91093445 -85.53723907]
[92.24916840 -70.59705353]
[93.58740234 -55.65686798]
[94.92564392 -40.71668243]
[96.26387787 -25.77649879]
[97.60211182 -10.83631420]
[98.94034576 4.10387087]
[100.27857971 19.04405594]
[114.42011261 20.33819771]
[128.11796570 24.08344841]
[140.95065308 30.16457367]
[152.52333069 38.39445877]
[162.47991943 48.51988220]
[170.51406860 60.22929764]
[176.37857056 73.16241455]
[179.89299011 86.92129517]
[180.94918823 101.08258820]
[179.51466370 115.21057892]
[175.63354492 128.87055969]
[169.42527771 141.64221191]
[161.08085632 153.13258362]
[150.85704041 162.98811340]
[139.06842041 170.90557861]
[126.07769775 176.64134216]
[112.28459167 180.01893616]
[113.17740631 194.99235535]
[114.07022095 209.96575928]
[114.96304321 224.93916321]
[115.85585785 239.91256714]
[116.74867249 254.88597107]
[117.64148712 269.85937500]
[118.53430176 284.83279419]
[133.53668213 285.34588623]
[148.42507935 287.26162720]
[163.06866455 290.56311035]
[177.33874512 295.22134399]
[191.10990906 301.19540405]
[204.26113892 308.43280029]
[216.67686462 316.86987305]
[228.24794006 326.43252563]
[238.87272644 337.03671265]
[248.45780945 348.58923340]
[256.91897583 360.98855591]
[264.18182373 374.12573242]
[270.18261719 387.88528442]
[274.86853027 402.14630127]
[278.19839478 416.78344727]
[280.14300537 431.66809082]
[280.68521118 446.66946411]
[279.82028198 461.65567017]
[277.55581665 476.49502563]
[273.91168213 491.05712891]
[268.91995239 505.21398926]
[262.62445068 518.84124756]
[255.08053589 531.81903076]
[246.35449219 544.03338623]
[236.52301025 555.37695312]
[225.67248535 565.75006104]
[213.89828491 575.06146240]
[201.30386353 583.22937012]
[187.99993896 590.18206787]
[174.10339355 595.85839844]
[159.73635864 600.20843506]
[145.02511597 603.19403076]
[130.09893799 604.78887939]
[115.08898926 604.97900391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 176]
[32 175]
[33 174]
[34 173]
[35 172]
[36 171]
[37 170]
[38 169]
[53 152]
[54 151]
[55 150]
[56 149]
[57 148]
[58 147]
[59 146]
[60 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
