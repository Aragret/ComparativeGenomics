%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[120.24323273 499.88885498]
[121.22098541 484.61462402]
[129.19494629 471.55038452]
[142.33274841 463.69818115]
[141.43992615 448.72479248]
[140.54711914 433.75137329]
[139.65429688 418.77798462]
[138.76147461 403.80456543]
[130.28034973 391.56039429]
[137.18254089 377.32415771]
[136.28971863 362.35073853]
[135.39691162 347.37734985]
[134.50408936 332.40393066]
[132.16860962 317.58685303]
[128.41230774 303.06481934]
[124.65600586 288.54275513]
[120.89970398 274.02069092]
[117.14340210 259.49862671]
[113.38710022 244.97656250]
[109.63079834 230.45451355]
[105.87449646 215.93244934]
[100.34008026 229.87411499]
[88.63787079 239.25807190]
[73.82681274 241.63133240]
[59.77846527 236.37358093]
[50.16504669 224.85914612]
[47.49947357 210.09788513]
[52.47852325 195.94836426]
[63.80068588 186.10922241]
[78.50637054 183.15238953]
[92.75154877 187.85078430]
[102.81215668 198.97546387]
[101.25163269 184.05685425]
[99.69110870 169.13824463]
[98.13059235 154.21963501]
[96.57006836 139.30104065]
[87.55067444 127.44777679]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[80.20065308 65.01094055]
[79.20802307 52.55307007]
[86.72113037 43.07257843]
[85.38289642 28.13239288]
[84.04466248 13.19220734]
[82.70642853 -1.74797809]
[73.32728577 -10.60204124]
[72.52024078 -23.07330513]
[80.17366791 -32.44089127]
[79.05801392 -47.39934158]
[77.94236755 -62.35779572]
[76.71539307 -77.30753326]
[75.37715912 -92.24771881]
[66.43952179 -105.30256653]
[73.01049805 -118.66938019]
[71.67226410 -133.60955811]
[56.66969681 -133.29368591]
[41.68054962 -134.00234985]
[26.77470779 -135.73226929]
[12.02166843 -138.47537231]
[-2.50978017 -142.21887207]
[-16.75188637 -146.94529724]
[-30.63824654 -152.63262939]
[-44.10411453 -159.25434875]
[-57.08670425 -166.77957153]
[-69.52548981 -175.17323303]
[-81.36247253 -184.39616394]
[-92.54245758 -194.40539551]
[-103.01332855 -205.15423584]
[-112.72624969 -216.59259033]
[-121.63595581 -228.66709900]
[-129.70088196 -241.32150269]
[-136.88343811 -254.49676514]
[-143.15014648 -268.13146973]
[-148.47177124 -282.16204834]
[-152.82350159 -296.52307129]
[-156.18504333 -311.14758301]
[-158.54074097 -325.96743774]
[-159.87960815 -340.91348267]
[-160.19538879 -355.91604614]
[-159.48661804 -370.90518188]
[-157.75659180 -385.81100464]
[-155.01339722 -400.56402588]
[-151.26980591 -415.09545898]
[-146.54327393 -429.33752441]
[-140.85585022 -443.22384644]
[-134.23403931 -456.68966675]
[-126.70873260 -469.67221069]
[-118.31499481 -482.11093140]
[-109.09197235 -493.94787598]
[-99.08267212 -505.12777710]
[-88.33375549 -515.59857178]
[-76.89534760 -525.31140137]
[-64.82077026 -534.22106934]
[-52.16632080 -542.28588867]
[-38.99100876 -549.46838379]
[-25.35626221 -555.73498535]
[-11.32564926 -561.05651855]
[3.03540993 -565.40814209]
[17.65995789 -568.76959229]
[32.47980499 -571.12518311]
[47.42585754 -572.46392822]
[62.42842484 -572.77960205]
[77.41756439 -572.07073975]
[92.32337952 -570.34063721]
[107.07638550 -567.59735107]
[121.60778046 -563.85363770]
[135.84982300 -559.12701416]
[149.73611450 -553.43951416]
[163.20188904 -546.81762695]
[176.18437195 -539.29223633]
[188.62304688 -530.89837646]
[200.45991516 -521.67529297]
[211.63975525 -511.66592407]
[222.11048889 -500.91693115]
[231.82325745 -489.47845459]
[240.73280334 -477.40380859]
[248.79756165 -464.74932861]
[255.97993469 -451.57394409]
[262.24645996 -437.93917847]
[267.56790161 -423.90850830]
[271.91943359 -409.54742432]
[275.28079224 -394.92285156]
[277.63629150 -380.10299683]
[278.97494507 -365.15692139]
[279.29052734 -350.15435791]
[278.58154297 -335.16522217]
[276.85131836 -320.25942993]
[274.10794067 -305.50643921]
[270.36413574 -290.97506714]
[265.63742065 -276.73306274]
[259.94982910 -262.84680176]
[253.32783508 -249.38107300]
[245.80233765 -236.39863586]
[237.40843201 -223.96002197]
[228.18525696 -212.12322998]
[218.17581177 -200.94343567]
[207.42675781 -190.47279358]
[195.98820496 -180.76008606]
[183.91351318 -171.85063171]
[171.25895691 -163.78594971]
[158.08355713 -156.60365295]
[144.44871521 -150.33723450]
[130.41802979 -145.01589966]
[116.05691528 -140.66445923]
[101.43232727 -137.30319214]
[86.61244965 -134.94779968]
[87.95068359 -120.00761414]
[96.79259491 -108.02137756]
[90.31734467 -93.58595276]
[91.65557861 -78.64576721]
[95.38328552 -72.26407623]
[92.90081787 -63.47344589]
[94.01647186 -48.51499176]
[95.13211823 -33.55653763]
[105.77983093 -19.60687447]
[97.64661407 -3.08621240]
[98.98484802 11.85397243]
[100.32308197 26.79415703]
[101.66131592 41.73434448]
[112.51554108 55.52393341]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[117.85990906 124.27735901]
[111.48867035 137.74050903]
[113.04919434 152.65911865]
[114.60971832 167.57772827]
[116.17024231 182.49632263]
[117.73076630 197.41493225]
[120.39656067 212.17614746]
[124.15286255 226.69821167]
[127.90915680 241.22027588]
[131.66546631 255.74232483]
[135.42176819 270.26437378]
[139.17805481 284.78643799]
[142.93435669 299.30850220]
[146.69065857 313.83056641]
[151.09231567 299.49090576]
[160.88430786 288.12796021]
[174.41651917 281.65655518]
[189.40853882 281.16720581]
[203.33393860 286.74243164]
[213.84605408 297.44268799]
[219.17340088 311.46481323]
[218.41822815 326.44577026]
[211.70780945 339.86108398]
[200.17294312 349.44998169]
[185.75747681 353.59658813]
[170.89067078 351.60214233]
[158.07783508 343.80270386]
[149.47749329 331.51110840]
[150.37031555 346.48452759]
[151.26312256 361.45791626]
[152.15594482 376.43133545]
[160.70092773 389.74652100]
[153.73487854 402.91174316]
[154.62770081 417.88516235]
[155.52052307 432.85855103]
[156.41333008 447.83197021]
[157.30615234 462.80535889]
[171.28395081 469.04074097]
[180.75384521 481.06488037]
[183.53971863 496.11471558]
[179.00141907 510.73190308]
[168.18179321 521.55755615]
[153.56712341 526.10394287]
[138.51574707 523.32641602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[10 197]
[11 196]
[12 195]
[13 194]
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[21 173]
[32 172]
[33 171]
[34 170]
[35 169]
[36 168]
[38 166]
[40 164]
[41 163]
[44 161]
[45 160]
[46 159]
[47 158]
[50 156]
[51 155]
[52 154]
[53 152]
[54 151]
[56 149]
[57 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
