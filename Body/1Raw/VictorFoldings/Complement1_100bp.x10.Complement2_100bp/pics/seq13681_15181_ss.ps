%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[87.31178284 385.65988159]
[86.10480499 400.71710205]
[80.70332336 414.82385254]
[71.54520416 426.83657837]
[59.37286377 435.78146362]
[45.17305374 440.93334961]
[30.09689140 441.87466431]
[15.36653423 438.52902222]
[2.17610478 431.16769409]
[-8.40510750 420.38739014]
[-15.51933098 407.06207275]
[-18.58984756 392.27191162]
[-17.36774445 377.21591187]
[-11.95209217 363.11459351]
[-2.78191257 351.11105347]
[9.39940834 342.17843628]
[23.60438538 337.04080200]
[38.68148422 336.11465454]
[42.00374603 321.48718262]
[37.27749634 307.36230469]
[47.87915039 295.61859131]
[51.20140839 280.99111938]
[54.52366638 266.36364746]
[49.79741669 252.23878479]
[60.39907074 240.49504089]
[63.72133255 225.86758423]
[55.59093094 213.44050598]
[58.75180054 198.55886841]
[71.84158325 190.11520386]
[75.16384125 175.48774719]
[78.48610687 160.86029053]
[73.75984955 146.73542786]
[84.36150360 134.99168396]
[87.68376923 120.36421967]
[91.00602722 105.73675537]
[92.89931488 90.85671997]
[93.34592438 75.86337280]
[93.79252625 60.87002182]
[94.23913574 45.87667465]
[94.68574524 30.88332367]
[83.87412262 24.60823441]
[76.79744720 14.39113712]
[74.74821472 2.20589280]
[78.05479431 -9.62489414]
[86.03060150 -18.87257004]
[97.11553955 -23.82224464]
[98.00836182 -38.79565048]
[98.90117645 -53.76905823]
[96.28810120 -62.52175140]
[99.92038727 -68.95823669]
[101.03603363 -83.91668701]
[98.76795959 -88.61806488]
[98.55167389 -93.25557709]
[100.01926422 -97.05836487]
[102.55019379 -99.51331329]
[104.33265686 -114.40702820]
[106.11511993 -129.30075073]
[107.89759064 -144.19445801]
[109.68005371 -159.08818054]
[111.24057770 -174.00679016]
[112.57881165 -188.94697571]
[113.91704559 -203.88716125]
[115.25527954 -218.82734680]
[103.01628113 -224.38305664]
[93.10155487 -233.42437744]
[86.46649170 -245.06105042]
[83.74460602 -258.15371704]
[85.18703461 -271.42541504]
[90.63944244 -283.58605957]
[99.55842590 -293.45800781]
[111.06559753 -300.08999634]
[124.03413391 -302.84872437]
[125.81659698 -317.74246216]
[127.59906769 -332.63616943]
[129.38153076 -347.52987671]
[114.69747162 -350.64193726]
[100.35149384 -355.05770874]
[86.45910645 -360.74169922]
[73.13215637 -367.64810181]
[60.47794724 -375.72134399]
[48.59836960 -384.89642334]
[37.58907318 -395.09945679]
[27.53869820 -406.24826050]
[18.52816582 -418.25311279]
[10.63002586 -431.01736450]
[3.90786910 -444.43820190]
[-1.58417916 -458.40756226]
[-5.80189943 -472.81301880]
[-8.71133327 -487.53857422]
[-10.28905392 -502.46563721]
[-10.52235985 -517.47399902]
[-9.40937042 -532.44287109]
[-6.95904922 -547.25177002]
[-3.19112372 -561.78137207]
[1.86406791 -575.91467285]
[8.16582298 -589.53796387]
[15.66340351 -602.54156494]
[24.29644203 -614.82067871]
[33.99542999 -626.27648926]
[44.68227005 -636.81677246]
[56.27092361 -646.35662842]
[68.66807556 -654.81933594]
[81.77392578 -662.13665771]
[95.48293304 -668.24969482]
[109.68472290 -673.10925293]
[124.26495361 -676.67620850]
[139.10623169 -678.92181396]
[154.08905029 -679.82800293]
[169.09278870 -679.38751221]
[183.99664307 -677.60382080]
[198.68060303 -674.49133301]
[213.02644348 -670.07513428]
[226.91867065 -664.39068604]
[240.24540710 -657.48388672]
[252.89936829 -649.41021729]
[264.77865601 -640.23480225]
[275.78765869 -630.03143311]
[285.83767700 -618.88232422]
[294.84783936 -606.87719727]
[302.74560547 -594.11273193]
[309.46734619 -580.69165039]
[314.95895386 -566.72210693]
[319.17623901 -552.31652832]
[322.08523560 -537.59094238]
[323.66250610 -522.66381836]
[323.89535522 -507.65542603]
[322.78189087 -492.68655396]
[320.33111572 -477.87777710]
[316.56274414 -463.34829712]
[311.50714111 -449.21511841]
[305.20495605 -435.59201050]
[297.70697021 -422.58868408]
[289.07357788 -410.30984497]
[279.37423706 -398.85430908]
[268.68707275 -388.31433105]
[257.09811401 -378.77481079]
[244.70071411 -370.31253052]
[231.59465027 -362.99560547]
[217.88545227 -356.88296509]
[203.68351746 -352.02386475]
[189.10316467 -348.45733643]
[174.26182556 -346.21218872]
[159.27897644 -345.30645752]
[144.27525330 -345.74743652]
[142.49278259 -330.85369873]
[140.71031189 -315.95999146]
[138.92785645 -301.06628418]
[153.63342285 -293.25588989]
[164.23449707 -280.36795044]
[169.08296204 -264.36160278]
[167.40798950 -247.68420410]
[159.43844604 -232.89697266]
[146.37203979 -222.28182983]
[130.19546509 -217.48910522]
[128.85722351 -202.54891968]
[127.51899719 -187.60873413]
[126.18076324 -172.66854858]
[128.50129700 -168.49432373]
[128.22422791 -162.81803894]
[124.57376862 -157.30570984]
[122.79130554 -142.41200256]
[121.00884247 -127.51828003]
[119.22637177 -112.62456512]
[117.44390869 -97.73085022]
[115.99449158 -82.80104065]
[114.87883759 -67.84258270]
[113.87458038 -52.87623978]
[112.98176575 -37.90283585]
[112.08895111 -22.92943001]
[126.23946381 -12.36370754]
[131.25903320 4.73175287]
[124.95668793 21.56505203]
[109.67909241 31.32992935]
[109.23248291 46.32328033]
[108.78588104 61.31662750]
[108.33927155 76.30998230]
[107.89266968 91.30332947]
[116.12204742 78.76230621]
[128.69662476 70.58427429]
[143.49734497 68.14738464]
[158.03004456 71.86229706]
[169.84571838 81.10297394]
[176.95318604 94.31220245]
[178.15473938 109.26400757]
[173.24787903 123.43872833]
[163.05950928 134.44769287]
[149.30654907 140.43568420]
[134.30661011 140.39361572]
[120.58744812 134.32859802]
[110.46097565 123.26268005]
[105.63348389 109.05902100]
[102.31122589 123.68647766]
[98.98896790 138.31393433]
[103.47758484 153.48506165]
[93.11356354 164.18254089]
[89.79130554 178.81001282]
[86.46904755 193.43746948]
[94.62721252 206.70706177]
[91.04959106 221.49404907]
[78.34879303 229.18984985]
[75.02653503 243.81730652]
[79.51515198 258.98843384]
[69.15113068 269.68591309]
[65.82886505 284.31338501]
[62.50660706 298.94082642]
[66.99523163 314.11196899]
[56.63120651 324.80944824]
[53.30894470 339.43692017]
[66.50676727 346.78497314]
[77.09880066 357.55462646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 208]
[19 207]
[21 205]
[22 204]
[23 203]
[25 201]
[26 200]
[29 197]
[30 196]
[31 195]
[33 193]
[34 192]
[35 191]
[36 177]
[37 176]
[38 175]
[39 174]
[40 173]
[46 169]
[47 168]
[48 167]
[50 166]
[51 165]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[60 157]
[61 156]
[62 155]
[63 154]
[72 147]
[73 146]
[74 145]
[75 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
