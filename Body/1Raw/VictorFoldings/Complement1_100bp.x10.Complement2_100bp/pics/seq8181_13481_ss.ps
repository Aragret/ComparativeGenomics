%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[119.09891510 120.77285767]
[106.37688446 112.82617188]
[92.41147614 112.14865112]
[85.67643738 99.89585876]
[72.95439911 91.94917297]
[60.23236084 84.00249481]
[47.51032639 76.05580902]
[34.78828812 68.10912323]
[22.06625175 60.16243744]
[9.22731209 52.40604782]
[-3.72568679 44.84166718]
[-16.67868614 37.27729034]
[-29.63168335 29.71291161]
[-42.58468246 22.14853096]
[-50.85314941 34.66840744]
[-59.79875565 46.71378326]
[-69.39433289 58.24806976]
[-79.61074066 69.23624420]
[-90.41694641 79.64493561]
[-101.78013611 89.44252014]
[-113.66579437 98.59926605]
[-126.03784180 107.08734131]
[-138.85868835 114.88098145]
[-152.08940125 121.95652008]
[-165.68978882 128.29244995]
[-179.61856079 133.86955261]
[-193.83341980 138.67086792]
[-208.29119873 142.68183899]
[-222.94796753 145.89027405]
[-237.75921631 148.28640747]
[-252.67999268 149.86300659]
[-267.66494751 150.61523438]
[-282.66857910 150.54084778]
[-297.64535522 149.64004517]
[-312.54974365 147.91557312]
[-327.33651733 145.37266541]
[-341.96075439 142.01905823]
[-356.37802124 137.86491394]
[-370.54458618 132.92286682]
[-384.41735840 127.20792389]
[-397.95425415 120.73742676]
[-411.11416626 113.53103638]
[-423.85708618 105.61064148]
[-436.14434814 97.00029755]
[-447.93862915 87.72614288]
[-459.20410156 77.81634521]
[-469.90655518 67.30101013]
[-480.01348877 56.21206665]
[-489.49423218 44.58319092]
[-498.31994629 32.44970322]
[-506.46383667 19.84844589]
[-513.90118408 6.81769466]
[-520.60943604 -6.60297871]
[-526.56817627 -20.37281609]
[-531.75933838 -34.44999695]
[-536.16705322 -48.79177094]
[-539.77807617 -63.35457993]
[-542.58142090 -78.09420013]
[-544.56848145 -92.96586609]
[-545.73327637 -107.92441559]
[-546.07226562 -122.92441559]
[-545.58441162 -137.92030334]
[-544.27124023 -152.86656189]
[-542.13671875 -167.71777344]
[-539.18725586 -182.42884827]
[-535.43188477 -196.95510864]
[-530.88201904 -211.25244141]
[-525.55145264 -225.27740479]
[-519.45635986 -238.98744202]
[-512.61529541 -252.34088135]
[-505.04898071 -265.29718018]
[-496.78042603 -277.81701660]
[-487.83474731 -289.86230469]
[-478.23907471 -301.39654541]
[-468.02261353 -312.38464355]
[-457.21630859 -322.79324341]
[-445.85305786 -332.59075928]
[-433.96734619 -341.74740601]
[-421.59524536 -350.23541260]
[-408.77432251 -358.02896118]
[-395.54357910 -365.10440063]
[-381.94314575 -371.44024658]
[-368.01431274 -377.01724243]
[-353.79943848 -381.81845093]
[-339.34161377 -385.82931519]
[-324.68484497 -389.03765869]
[-309.87356567 -391.43368530]
[-294.95278931 -393.01016235]
[-279.96780396 -393.76229858]
[-264.96417236 -393.68780518]
[-249.98741150 -392.78689575]
[-235.08303833 -391.06231689]
[-220.29627991 -388.51931763]
[-205.67207336 -385.16561890]
[-191.25482178 -381.01135254]
[-177.08830261 -376.06921387]
[-163.21556091 -370.35415649]
[-149.67871094 -363.88357544]
[-136.51885986 -356.67709351]
[-123.77599335 -348.75662231]
[-111.48879242 -340.14617920]
[-99.69458008 -330.87194824]
[-88.42917633 -320.96206665]
[-77.72679138 -310.44665527]
[-67.61993408 -299.35763550]
[-58.13928986 -287.72869873]
[-49.31365585 -275.59515381]
[-41.16983795 -262.99383545]
[-33.73256302 -249.96302795]
[-27.02442360 -236.54231262]
[-21.06578827 -222.77243042]
[-15.87475491 -208.69522095]
[-11.46708775 -194.35340881]
[-7.85617399 -179.79057312]
[-5.05297852 -165.05093384]
[-3.06601572 -150.17926025]
[-1.90131915 -135.22070312]
[-1.56242633 -120.22069550]
[-2.05036640 -105.22480774]
[-3.36365771 -90.27856445]
[-5.49831152 -75.42736053]
[-8.44784546 -60.71630859]
[-12.20330048 -46.19007492]
[-16.75327301 -31.89278221]
[-22.08394432 -17.86784554]
[-28.17912483 -4.15786171]
[-35.02030182 9.19553280]
[-22.06730461 16.75991249]
[-9.11430645 24.32429123]
[3.83869219 31.88866997]
[16.79169083 39.45304871]
[21.55648613 39.12783051]
[26.57616806 41.79238129]
[30.01293755 47.44040298]
[42.73497391 55.38708878]
[55.45700836 63.33377075]
[68.17904663 71.28045654]
[80.90108490 79.22714233]
[93.62311554 87.17382812]
[107.58852386 87.85134888]
[114.32356262 100.10414124]
[127.04560089 108.05082703]
[136.09120178 96.07273102]
[146.16003418 84.94096375]
[157.17330933 74.74265289]
[169.04481506 65.55761719]
[181.68165588 57.45774078]
[194.98490906 50.50641251]
[208.85047913 44.75804138]
[223.16983032 40.25761795]
[237.83088684 37.04035950]
[252.71893311 35.13145447]
[267.71740723 34.54583359]
[282.70898438 35.28808975]
[297.57626343 37.35240555]
[312.20291138 40.72262573]
[326.47448730 45.37237930]
[340.27923584 51.26527023]
[353.50915527 58.35517502]
[366.06069946 66.58660889]
[377.83563232 75.89514923]
[388.74176025 86.20794678]
[398.69378662 97.44427490]
[407.61376953 109.51620483]
[415.43191528 122.32924652]
[422.08703613 135.78312683]
[427.52706909 149.77253723]
[431.70941162 164.18800354]
[434.60131836 178.91670227]
[436.18017578 193.84335327]
[436.43362427 208.85113525]
[435.35971069 223.82257080]
[432.96676636 238.64051819]
[429.27359009 253.18899536]
[424.30905151 267.35412598]
[418.11199951 281.02505493]
[410.73095703 294.09478760]
[402.22369385 306.46102905]
[392.65676880 318.02700806]
[382.10507202 328.70217896]
[370.65118408 338.40301514]
[358.38476562 347.05358887]
[345.40179443 354.58618164]
[331.80389404 360.94183350]
[317.69747925 366.07086182]
[303.19296265 369.93304443]
[288.40383911 372.49819946]
[273.44592285 373.74624634]
[258.43618774 373.66741943]
[243.49218750 372.26232910]
[228.73085022 369.54196167]
[214.26770020 365.52761841]
[200.21594238 360.25073242]
[186.68554688 353.75256348]
[173.78240967 346.08401489]
[161.60752869 337.30508423]
[150.25616455 327.48446655]
[139.81718445 316.69903564]
[130.37228394 305.03323364]
[121.99537659 292.57830811]
[114.75202942 279.43176270]
[108.69892883 265.69650269]
[103.88345337 251.47999573]
[100.34329224 236.89353943]
[98.10614777 222.05126953]
[97.18952942 207.06936646]
[97.60060883 192.06507874]
[99.33617401 177.15583801]
[102.38264465 162.45832825]
[106.71617126 148.08760071]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[4 139]
[5 138]
[6 137]
[7 136]
[8 135]
[9 134]
[10 131]
[11 130]
[12 129]
[13 128]
[14 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
