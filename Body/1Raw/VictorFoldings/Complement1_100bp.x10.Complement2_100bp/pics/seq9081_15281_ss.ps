%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[38.12764359 279.81546021]
[44.24127960 293.54150391]
[48.33918762 307.99792480]
[50.33793640 322.89041138]
[50.19683838 337.91574097]
[47.91876221 352.76803589]
[43.55008698 367.14495850]
[37.17975998 380.75375366]
[28.93746376 393.31741333]
[18.99100685 404.58013916]
[7.54288244 414.31262207]
[-5.17383718 422.31671143]
[-18.90025711 428.42950439]
[-33.35692596 432.52651978]
[-48.24952316 434.52435303]
[-63.27485275 434.38232422]
[-78.12702179 432.10333252]
[-92.50366211 427.73376465]
[-106.11207581 421.36257935]
[-118.67521667 413.11950684]
[-129.93731689 403.17236328]
[-139.66908264 391.72363281]
[-147.67240906 379.00640869]
[-153.78434753 365.27963257]
[-157.88046265 350.82269287]
[-159.87738037 335.92999268]
[-159.73442078 320.90466309]
[-157.45449829 306.05264282]
[-153.08404541 291.67626953]
[-146.71203613 278.06823730]
[-138.46818542 265.50561523]
[-128.52033997 254.24412537]
[-117.07100677 244.51306152]
[-104.35329437 236.51052856]
[-90.62611389 230.39944458]
[-76.16894531 226.30421448]
[-61.27610016 224.30822754]
[-46.25078583 224.45211792]
[-31.39889717 226.73295593]
[-17.02280045 231.10429382]
[-3.41517591 237.47715759]
[4.81363201 224.93576050]
[13.04243946 212.39434814]
[21.27124786 199.85295105]
[21.19466209 195.07768250]
[24.11705780 190.20361328]
[29.93642807 187.06570435]
[38.53499222 174.77485657]
[47.13355637 162.48402405]
[55.73212051 150.19319153]
[64.33068085 137.90234375]
[72.92924500 125.61151123]
[81.52780914 113.32067108]
[77.40274811 102.83303833]
[78.81114960 91.65166473]
[85.40814972 82.51457977]
[95.57830811 77.65921021]
[106.83123016 78.27452087]
[115.79192352 66.24514771]
[124.75261688 54.21576691]
[133.71331787 42.18638992]
[142.67401123 30.15701103]
[143.02542114 25.82913780]
[144.57943726 22.20290947]
[146.96783447 19.57023239]
[149.76536560 18.07343483]
[152.54356384 17.69964600]
[162.20437622 6.22494555]
[171.86518860 -5.24975491]
[181.52600098 -16.72445488]
[191.18681335 -28.19915581]
[200.84762573 -39.67385483]
[210.50843811 -51.14855576]
[195.57113647 -49.77851105]
[183.17657471 -58.22688675]
[178.99139404 -72.63120270]
[184.92900085 -86.40599060]
[198.27478027 -93.25361633]
[212.92724609 -90.04342651]
[222.18748474 -78.24308014]
[221.82115173 -63.24581146]
[232.62330627 -73.65318298]
[243.42546082 -84.06055450]
[254.22761536 -94.46793365]
[265.02978516 -104.87530518]
[255.34756470 -116.33902740]
[246.43583679 -128.41145325]
[238.33277893 -141.04089355]
[231.07307434 -154.17324829]
[224.68782043 -167.75230408]
[219.20434570 -181.71989441]
[214.64613342 -196.01623535]
[211.03271484 -210.58007812]
[208.37956238 -225.34906006]
[206.69802856 -240.25994873]
[205.99531555 -255.24890137]
[206.27444458 -270.25170898]
[207.53419495 -285.20413208]
[209.76919556 -300.04217529]
[212.96987915 -314.70223999]
[217.12251282 -329.12161255]
[222.20933533 -343.23849487]
[228.20855713 -356.99246216]
[235.09448242 -370.32461548]
[242.83764648 -383.17785645]
[251.40487671 -395.49713135]
[260.75946045 -407.22973633]
[270.86138916 -418.32537842]
[281.66738892 -428.73657227]
[293.13116455 -438.41870117]
[305.20364380 -447.33035278]
[317.83312988 -455.43334961]
[330.96554565 -462.69296265]
[344.54461670 -469.07815552]
[358.51226807 -474.56155396]
[372.80862427 -479.11965942]
[387.37246704 -482.73300171]
[402.14147949 -485.38607788]
[417.05236816 -487.06750488]
[432.04132080 -487.77014160]
[447.04412842 -487.49090576]
[461.99655151 -486.23107910]
[476.83456421 -483.99597168]
[491.49462891 -480.79522705]
[505.91397095 -476.64251709]
[520.03082275 -471.55560303]
[533.78479004 -465.55630493]
[547.11688232 -458.67028809]
[559.97003174 -450.92706299]
[572.28930664 -442.35974121]
[584.02185059 -433.00506592]
[595.11743164 -422.90307617]
[605.52856445 -412.09704590]
[615.21063232 -400.63320923]
[624.12219238 -388.56066895]
[632.22509766 -375.93115234]
[639.48468018 -362.79867554]
[645.86975098 -349.21957397]
[651.35308838 -335.25189209]
[655.91113281 -320.95550537]
[659.52435303 -306.39163208]
[662.17736816 -291.62261963]
[663.85870361 -276.71170044]
[664.56121826 -261.72274780]
[664.28192139 -246.71994019]
[663.02197266 -231.76751709]
[660.78680420 -216.92951965]
[657.58599854 -202.26948547]
[653.43316650 -187.85017395]
[648.34619141 -173.73333740]
[642.34680176 -159.97944641]
[635.46069336 -146.64738464]
[627.71740723 -133.79423523]
[619.15002441 -121.47504425]
[609.79528809 -109.74256897]
[599.69323730 -98.64704132]
[588.88708496 -88.23597717]
[577.42321777 -78.55396271]
[565.35064697 -69.64245605]
[552.72106934 -61.53961945]
[539.58856201 -54.28014755]
[526.00939941 -47.89512634]
[512.04168701 -42.41189957]
[497.74530029 -37.85395050]
[483.18139648 -34.24079132]
[468.41235352 -31.58789444]
[453.50143433 -29.90662575]
[438.51248169 -29.20418167]
[423.50967407 -29.48356819]
[408.55725098 -30.74359131]
[393.71926880 -32.97885513]
[379.05923462 -36.17978668]
[364.63995361 -40.33267975]
[350.52316284 -45.41975021]
[336.76931763 -51.41921616]
[323.43728638 -58.30538559]
[310.58416748 -66.04877472]
[298.26504517 -74.61621094]
[286.53262329 -83.97102356]
[275.43716431 -94.07315063]
[264.63497925 -83.66577148]
[253.83283997 -73.25839996]
[243.03068542 -62.85102844]
[232.22853088 -52.44365311]
[221.98313904 -41.48774338]
[212.32232666 -30.01304436]
[202.66151428 -18.53834534]
[193.00070190 -7.06364441]
[183.33988953 4.41105556]
[173.67907715 15.88575554]
[164.01826477 27.36045647]
[154.70338440 39.11770630]
[145.74269104 51.14708328]
[136.78199768 63.17646408]
[127.82129669 75.20584106]
[118.86060333 87.23521423]
[122.23233795 104.93812561]
[111.68324280 119.54901123]
[93.81864929 121.91923523]
[85.22008514 134.21008301]
[76.62152100 146.50091553]
[68.02295685 158.79174805]
[59.42439270 171.08259583]
[50.82583237 183.37342834]
[42.22726822 195.66426086]
[33.81264877 208.08175659]
[25.58383942 220.62315369]
[17.35503197 233.16456604]
[9.12622452 245.70596313]
[20.38955498 255.65171814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 209]
[42 208]
[43 207]
[44 206]
[47 205]
[48 204]
[49 203]
[50 202]
[51 201]
[52 200]
[53 199]
[58 196]
[59 195]
[60 194]
[61 193]
[62 192]
[67 191]
[68 190]
[69 189]
[70 188]
[71 187]
[72 186]
[73 185]
[81 184]
[82 183]
[83 182]
[84 181]
[85 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
