%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[-0.61591059 738.73602295]
[-14.83998394 743.51043701]
[-29.30938339 747.47973633]
[-43.97858047 750.63153076]
[-58.80142212 752.95581055]
[-73.73126984 754.44531250]
[-88.72115326 755.09539795]
[-103.72389984 754.90393066]
[-118.69230652 753.87158203]
[-133.57928467 752.00152588]
[-148.33798218 749.29968262]
[-162.92196655 745.77459717]
[-177.28536987 741.43731689]
[-191.38296509 736.30151367]
[-205.17042542 730.38330078]
[-218.60435486 723.70135498]
[-231.64248657 716.27667236]
[-244.24378967 708.13256836]
[-256.36865234 699.29473877]
[-267.97888184 689.79101562]
[-279.03796387 679.65118408]
[-289.51110840 668.90722656]
[-299.36535645 657.59295654]
[-308.56967163 645.74395752]
[-317.09518433 633.39746094]
[-324.91497803 620.59240723]
[-332.00448608 607.36901855]
[-338.34140015 593.76892090]
[-343.90576172 579.83489990]
[-348.68008423 565.61083984]
[-352.64938354 551.14141846]
[-355.80108643 536.47222900]
[-358.12533569 521.64935303]
[-359.61480713 506.71951294]
[-360.26480103 491.72961426]
[-360.07327271 476.72686768]
[-359.04086304 461.75848389]
[-357.17077637 446.87149048]
[-354.46890259 432.11282349]
[-350.94375610 417.52883911]
[-346.60641479 403.16546631]
[-341.47055054 389.06787109]
[-335.55230713 375.28042603]
[-328.87026978 361.84652710]
[-321.44552612 348.80844116]
[-313.30142212 336.20715332]
[-304.46356201 324.08233643]
[-294.95974731 312.47213745]
[-284.81988525 301.41308594]
[-274.07589722 290.94000244]
[-262.76159668 281.08578491]
[-250.91253662 271.88150024]
[-238.56604004 263.35604858]
[-225.76094055 255.53630066]
[-212.53753662 248.44683838]
[-198.93742371 242.10998535]
[-185.00338745 236.54565430]
[-170.77926636 231.77137756]
[-156.30984497 227.80215454]
[-141.64062500 224.65049744]
[-126.81776428 222.32629395]
[-111.88790131 220.83688354]
[-96.89801788 220.18695068]
[-81.89527893 220.37850952]
[-66.92687225 221.41099548]
[-52.03991318 223.28114319]
[-37.28123474 225.98306274]
[-22.69727135 229.50827026]
[-8.33390999 233.84565735]
[5.76365423 238.98158264]
[19.55106544 244.89988708]
[26.23126030 231.46951294]
[32.91145325 218.03913879]
[39.59164810 204.60876465]
[38.33203506 189.76750183]
[51.40554810 180.85719299]
[58.08574295 167.42680359]
[64.76593781 153.99642944]
[71.44613647 140.56605530]
[70.18652344 125.72480774]
[83.26003265 116.81449127]
[89.94022369 103.38410950]
[95.80918884 89.57993317]
[100.84610748 75.45090485]
[105.88301849 61.32187653]
[110.91993713 47.19284821]
[108.26592255 31.59583664]
[119.82770538 22.20571136]
[123.36737823 7.62933588]
[125.37139130 -7.23619223]
[127.37540436 -22.10172081]
[129.37942505 -36.96724701]
[115.03031158 -41.46292496]
[101.64745331 -48.31909561]
[89.61589050 -57.33849716]
[79.28180695 -68.26162720]
[70.94252777 -80.77419281]
[64.83798981 -94.51619720]
[61.14382935 -109.09224701]
[59.96634293 -124.08296204]
[61.33940887 -139.05702209]
[65.22351837 -153.58361816]
[71.50691223 -167.24476624]
[80.00881195 -179.64741516]
[90.48460388 -190.43470764]
[102.63286591 -199.29629517]
[116.10408783 -205.97718811]
[130.51065063 -210.28517151]
[145.43806458 -212.09631348]
[160.45684814 -211.35847473]
[175.13485718 -208.09289551]
[189.04978943 -202.39355469]
[201.80128479 -194.42439270]
[213.02246094 -184.41473389]
[222.39044189 -172.65255737]
[229.63571167 -159.47628784]
[234.54981995 -145.26504517]
[236.99134827 -130.42768860]
[236.89006042 -115.39114380]
[234.24888611 -100.58802795]
[229.14379883 -86.44425964]
[221.72167969 -73.36679077]
[212.19609070 -61.73187637]
[200.84111023 -51.87428284]
[187.98341370 -44.07762527]
[173.99296570 -38.56623840]
[159.27229309 -35.49868774]
[144.24494934 -34.96323395]
[142.24093628 -20.09770775]
[140.23692322 -5.23217869]
[138.23291016 9.63334942]
[147.51016235 -2.15361834]
[160.55412292 -9.56002998]
[175.42980957 -11.48718929]
[189.93049622 -7.64921331]
[201.90509033 1.38455784]
[209.57723999 14.27401733]
[211.80882263 29.10709000]
[208.26878357 43.68338013]
[199.48229980 55.84057617]
[186.75274658 63.77523804]
[171.96852112 66.31030273]
[157.32275391 63.06970215]
[144.98806763 54.53416824]
[136.79421997 41.96989441]
[133.95672607 27.24262810]
[136.97102356 41.82903671]
[125.04896545 52.22976303]
[120.01204681 66.35879517]
[114.97513580 80.48782349]
[109.93821716 94.61685181]
[123.03127289 87.29756927]
[137.93914795 88.95748138]
[149.10156250 98.97748566]
[152.35522461 113.62035370]
[146.48660278 127.42466736]
[133.68452454 135.24176025]
[118.72386932 134.15605164]
[107.18458557 124.57247162]
[103.37060547 110.06430817]
[96.69040680 123.49468231]
[97.47220612 139.29655457]
[84.87651062 147.24624634]
[78.19631195 160.67663574]
[71.51612091 174.10700989]
[64.83592224 187.53738403]
[65.61772919 203.33926392]
[53.02202606 211.28895569]
[46.34183121 224.71932983]
[39.66163635 238.14970398]
[32.98144150 251.58007812]
[46.01963043 259.00466919]
[58.62100601 267.14865112]
[70.74591827 275.98638916]
[82.35621643 285.49008179]
[93.41537476 295.62979126]
[103.88859558 306.37365723]
[113.74292755 317.68786621]
[122.94735718 329.53680420]
[131.47293091 341.88320923]
[139.29283142 354.68823242]
[146.38243103 367.91156006]
[152.71943665 381.51162720]
[158.28392029 395.44558716]
[163.05836487 409.66964722]
[167.02774048 424.13903809]
[170.17956543 438.80819702]
[172.50393677 453.63104248]
[173.99349976 468.56088257]
[174.64361572 483.55075073]
[174.45220947 498.55349731]
[173.41989136 513.52191162]
[171.54991150 528.40887451]
[168.84815979 543.16760254]
[165.32312012 557.75164795]
[160.98588562 572.11505127]
[155.85012817 586.21264648]
[149.93197632 600.00012207]
[143.25006104 613.43408203]
[135.82540894 626.47222900]
[127.68138123 639.07360840]
[118.84360504 651.19848633]
[109.33988190 662.80871582]
[99.20011139 673.86785889]
[88.45620728 684.34100342]
[77.14196777 694.19531250]
[65.29298401 703.39971924]
[52.94655609 711.92523193]
[40.14151382 719.74505615]
[26.91815376 726.83465576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 171]
[72 170]
[73 169]
[74 168]
[76 166]
[77 165]
[78 164]
[79 163]
[81 161]
[82 160]
[83 151]
[84 150]
[85 149]
[86 148]
[88 146]
[89 131]
[90 130]
[91 129]
[92 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
