%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[86.01235199 582.83020020]
[71.30116272 585.79919434]
[56.40237427 587.60479736]
[41.40784836 588.23590088]
[26.41003036 587.68859863]
[11.50138950 585.96618652]
[-3.22615719 583.07946777]
[-17.68180847 579.04602051]
[-31.77643776 573.89093018]
[-45.42314911 567.64581299]
[-58.53779984 560.34924316]
[-71.03953552 552.04614258]
[-82.85128021 542.78784180]
[-93.90020752 532.63128662]
[-104.11819458 521.63916016]
[-113.44224548 509.87924194]
[-121.81487274 497.42398071]
[-129.18446350 484.35021973]
[-135.50556946 470.73855591]
[-140.73921204 456.67288208]
[-144.85313416 442.23992920]
[-147.82199097 427.52871704]
[-149.62744141 412.62991333]
[-150.25837708 397.63537598]
[-149.71090698 382.63757324]
[-147.98838806 367.72894287]
[-145.10147095 353.00143433]
[-141.06793213 338.54580688]
[-135.91264343 324.45123291]
[-129.66740417 310.80459595]
[-122.37068939 297.69000244]
[-114.06751251 285.18835449]
[-104.80905151 273.37670898]
[-94.65240479 262.32788086]
[-83.66017151 252.11001587]
[-71.90013885 242.78608704]
[-59.44480515 234.41357422]
[-46.37096405 227.04412842]
[-32.75922394 220.72315979]
[-18.69350243 215.48965454]
[-4.26052332 211.37586975]
[10.45072937 208.40718079]
[25.34955406 206.60188293]
[40.34409332 205.97109985]
[55.34189987 206.51872253]
[70.25050354 208.24137878]
[73.13578033 193.52149963]
[76.02104950 178.80160522]
[78.90632629 164.08171082]
[77.10812378 156.91314697]
[81.94568634 149.16487122]
[85.04979706 134.48956299]
[88.15390778 119.81426239]
[91.25801849 105.13896179]
[89.71247101 97.22796631]
[94.51913452 90.26902771]
[97.84139252 75.64156342]
[101.16365051 61.01410294]
[92.99103546 52.38016510]
[90.03125763 40.98978806]
[92.90766144 29.70173073]
[100.79354858 21.29171562]
[111.64543915 17.76994896]
[115.40173340 3.24788904]
[119.15803528 -11.27416992]
[122.91433716 -25.79623032]
[108.66079712 -30.48615837]
[94.74072266 -36.08888626]
[81.21250916 -42.58090591]
[68.13289642 -49.93499756]
[55.55674744 -58.12030792]
[43.53680420 -67.10250854]
[32.12348938 -76.84392548]
[21.36467361 -87.30368805]
[11.30548096 -98.43794250]
[1.98810518 -110.19997406]
[-6.54837322 -122.54045868]
[-14.26814938 -135.40762329]
[-21.13884354 -148.74749756]
[-27.13163567 -162.50415039]
[-32.22139359 -176.61985779]
[-36.38676453 -191.03543091]
[-39.61027908 -205.69038391]
[-41.87841797 -220.52326965]
[-43.18166733 -235.47186279]
[-43.51456070 -250.47346497]
[-42.87570190 -265.46514893]
[-41.26776886 -280.38406372]
[-38.69750595 -295.16757202]
[-35.17569351 -309.75372314]
[-30.71710777 -324.08132935]
[-25.34044647 -338.09027100]
[-19.06826019 -351.72180176]
[-11.92685986 -364.91873169]
[-3.94619632 -377.62573242]
[4.84025478 -389.78952026]
[14.39564037 -401.35900879]
[24.67988205 -412.28573608]
[35.64984131 -422.52383423]
[47.25951004 -432.03039551]
[59.46018982 -440.76553345]
[72.20070648 -448.69256592]
[85.42761993 -455.77828979]
[99.08545685 -461.99298096]
[113.11692810 -467.31057739]
[127.46318054 -471.70877075]
[142.06404114 -475.16906738]
[156.85826111 -477.67703247]
[171.78381348 -479.22207642]
[186.77806091 -479.79776001]
[201.77812195 -479.40167236]
[216.72109985 -478.03543091]
[231.54428101 -475.70483398]
[246.18553162 -472.41958618]
[260.58343506 -468.19351196]
[274.67755127 -463.04431152]
[288.40884399 -456.99362183]
[301.71966553 -450.06677246]
[314.55416870 -442.29284668]
[326.85858154 -433.70446777]
[338.58123779 -424.33761597]
[349.67300415 -414.23159790]
[360.08737183 -403.42880249]
[369.78060913 -391.97451782]
[378.71206665 -379.91683960]
[386.84432983 -367.30630493]
[394.14321899 -354.19583130]
[400.57818604 -340.64038086]
[406.12222290 -326.69683838]
[410.75204468 -312.42364502]
[414.44827271 -297.88070679]
[417.19537354 -283.12902832]
[418.98181152 -268.23046875]
[419.80014038 -253.24749756]
[419.64691162 -238.24298096]
[418.52276611 -223.27984619]
[416.43240356 -208.42086792]
[413.38458252 -193.72836304]
[409.39212036 -179.26394653]
[404.47177124 -165.08830261]
[398.64413452 -151.26089478]
[391.93365479 -137.83969116]
[384.36849976 -124.88100433]
[375.98040771 -112.43919373]
[366.80453491 -100.56643677]
[356.87939453 -89.31253052]
[346.24661255 -78.72468567]
[334.95074463 -68.84730530]
[323.03921509 -59.72181702]
[310.56198120 -51.38650131]
[297.57138062 -43.87631989]
[284.12185669 -37.22277451]
[270.26989746 -31.45376778]
[256.07351685 -26.59349823]
[241.59233093 -22.66235542]
[226.88703918 -19.67682266]
[212.01933289 -17.64942741]
[197.05157471 -16.58867073]
[182.04655457 -16.49900246]
[167.06718445 -17.38079834]
[152.17631531 -19.23036003]
[137.43640137 -22.03992844]
[133.68009949 -7.51786947]
[129.92379761 7.00418997]
[126.16749573 21.52624893]
[136.39051819 36.71195221]
[132.19512939 54.85889816]
[115.79111481 64.33636475]
[112.46884918 78.96382141]
[109.14659119 93.59128571]
[105.93331909 108.24307251]
[102.82920837 122.91837311]
[99.72509766 137.59367371]
[96.62098694 152.26898193]
[93.62621307 166.96697998]
[90.74094391 181.68687439]
[87.85566711 196.40676880]
[84.97039795 211.12666321]
[99.42613220 215.15975952]
[113.52086639 220.31460571]
[127.16770172 226.55943298]
[140.28250122 233.85574341]
[152.78440857 242.15853882]
[164.59634399 251.41664124]
[175.64547729 261.57293701]
[185.86369324 272.56488037]
[195.18798828 284.32461548]
[203.56086731 296.77969360]
[210.93070984 309.85330200]
[217.25209045 323.46484375]
[222.48603821 337.53042603]
[226.60025024 351.96325684]
[229.56939697 366.67443848]
[231.37516785 381.57321167]
[232.00640869 396.56771851]
[231.45924377 411.56555176]
[229.73703003 426.47421265]
[226.85040283 441.20178223]
[222.81716919 455.65747070]
[217.66217041 469.75213623]
[211.41719055 483.39892578]
[204.12075806 496.51364136]
[195.81784058 509.01547241]
[186.55961609 520.82733154]
[176.40319824 531.87634277]
[165.41116333 542.09442139]
[153.65132141 551.41864014]
[141.19616699 559.79138184]
[128.12248230 567.16107178]
[114.51086426 573.48229980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 178]
[47 177]
[48 176]
[49 175]
[51 174]
[52 173]
[53 172]
[54 171]
[56 170]
[57 169]
[58 168]
[63 165]
[64 164]
[65 163]
[66 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
