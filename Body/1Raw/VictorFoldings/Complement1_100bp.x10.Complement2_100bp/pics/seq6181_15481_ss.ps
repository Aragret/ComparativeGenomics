%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[167.76475525 862.91033936]
[153.21180725 859.26397705]
[138.84729004 854.93444824]
[124.70324707 849.93139648]
[110.81125641 844.26599121]
[97.20231628 837.95086670]
[83.90678406 831.00012207]
[70.95433044 823.42919922]
[58.37386322 815.25512695]
[46.19345093 806.49597168]
[34.44026947 797.17144775]
[23.14054680 787.30230713]
[12.31950092 776.91052246]
[2.00127363 766.01928711]
[-7.79110956 754.65295410]
[-17.03579712 742.83685303]
[-25.71216393 730.59735107]
[-33.80084610 717.96179199]
[-41.28379440 704.95837402]
[-48.14431381 691.61602783]
[-54.36709213 677.96459961]
[-59.93824768 664.03454590]
[-64.84535217 649.85693359]
[-69.07744598 635.46343994]
[-72.62509155 620.88610840]
[-75.48036957 606.15747070]
[-77.63691711 591.31048584]
[-79.08991241 576.37817383]
[-79.83612061 561.39392090]
[-79.87387085 546.39117432]
[-79.20307922 531.40338135]
[-77.82524109 516.46398926]
[-75.74344635 501.60629272]
[-72.96231842 486.86352539]
[-69.48807526 472.26852417]
[-65.32846832 457.85388184]
[-60.49277496 443.65176392]
[-54.99179077 429.69381714]
[-48.83779144 416.01126099]
[-42.04450226 402.63458252]
[-34.62708664 389.59365845]
[-26.60209465 376.91754150]
[-17.98743248 364.63455200]
[-8.80232334 352.77206421]
[0.93273574 341.35659790]
[11.19602394 330.41360474]
[21.96463776 319.96749878]
[33.21455002 310.04156494]
[44.92065811 300.65802002]
[57.05683899 291.83773804]
[69.59601593 283.60040283]
[82.51020050 275.96444702]
[95.77058411 268.94683838]
[109.34757233 262.56329346]
[123.21087646 256.82806396]
[137.32955933 251.75389099]
[132.92855835 237.41403198]
[128.52755737 223.07418823]
[115.05466461 211.82928467]
[119.32682800 193.91754150]
[114.71282196 179.64480591]
[110.09880829 165.37207031]
[105.48480225 151.09934998]
[96.43503571 163.06185913]
[81.44461060 163.59764099]
[71.56390381 152.31173706]
[74.07660675 137.52369690]
[87.13044739 130.13470459]
[101.10149384 135.59045410]
[97.56182098 121.01407623]
[94.02214813 106.43770599]
[91.56304169 104.63706970]
[89.70475769 101.90186310]
[88.79471588 98.45291138]
[89.09387970 94.63626862]
[90.73319244 90.88852692]
[88.06739807 76.12730408]
[85.40160370 61.36608887]
[82.73580933 46.60487366]
[80.07001495 31.84365463]
[77.40422058 17.08243752]
[74.73841858 2.32122087]
[71.96280670 -12.41974163]
[69.07753754 -27.13963318]
[58.83023834 -39.19382095]
[63.97494507 -53.17170715]
[48.91646957 -53.75403595]
[34.39835739 -57.79397202]
[21.20354652 -65.07364655]
[10.04361629 -75.20047760]
[1.52041090 -87.62833405]
[-3.90642595 -101.68700409]
[-5.94423151 -116.61831665]
[-4.48310900 -131.61705017]
[0.39814457 -145.87432861]
[8.43628979 -158.62129211]
[19.19783783 -169.17048645]
[32.10243607 -176.95304871]
[46.45415115 -181.54924011]
[61.47901535 -182.71119690]
[76.36676025 -180.37628174]
[90.31449890 -174.67037964]
[102.57005310 -165.90122986]
[112.47250366 -154.54173279]
[119.48780823 -141.20448303]
[123.23765564 -126.60874939]
[123.51980591 -111.54165649]
[120.31906128 -96.81576538]
[113.80801392 -83.22521973]
[104.33781433 -71.50292969]
[92.41916656 -62.28107834]
[78.69483185 -56.05698013]
[88.73576355 -45.05565643]
[83.79743195 -30.02490616]
[86.68270111 -15.30501461]
[91.05410004 -9.34576607]
[89.49964142 -0.34457466]
[92.16543579 14.41664219]
[94.83123016 29.17786026]
[97.49702454 43.93907547]
[100.16281891 58.70029449]
[102.82861328 73.46150970]
[105.49441528 88.22273254]
[108.59851837 102.89803314]
[112.13819122 117.47440338]
[115.67786407 132.05078125]
[119.75753021 146.48533630]
[124.37154388 160.75807190]
[128.98554993 175.03080750]
[133.59956360 189.30352783]
[144.70680237 195.86036682]
[148.25598145 207.84315491]
[142.86741638 218.67318726]
[147.26840210 233.01304626]
[151.66940308 247.35289001]
[166.20379639 243.63322449]
[180.89762878 240.60409546]
[195.71810913 238.27226257]
[210.63218689 236.64291382]
[225.60656738 235.71969604]
[240.60783386 235.50465393]
[255.60252380 235.99829102]
[270.55715942 237.19949341]
[285.43838501 239.10557556]
[300.21301270 241.71229553]
[314.84805298 245.01382446]
[329.31085205 249.00280762]
[343.56912231 253.67033386]
[357.59106445 259.00601196]
[371.34539795 264.99789429]
[384.80142212 271.63262939]
[397.92910767 278.89541626]
[410.69915771 286.77005005]
[423.08309937 295.23898315]
[435.05325317 304.28326416]
[446.58297729 313.88275146]
[457.64648438 324.01602173]
[468.21911621 334.66043091]
[478.27728271 345.79226685]
[487.79852295 357.38668823]
[496.76159668 369.41778564]
[505.14651489 381.85873413]
[512.93457031 394.68179321]
[520.10833740 407.85830688]
[526.65191650 421.35891724]
[532.55059814 435.15350342]
[537.79119873 449.21121216]
[542.36218262 463.50076294]
[546.25317383 477.99020386]
[549.45562744 492.64724731]
[551.96228027 507.43917847]
[553.76763916 522.33294678]
[554.86761475 537.29541016]
[555.25976562 552.29309082]
[554.94323730 567.29254150]
[553.91870117 582.26031494]
[552.18841553 597.16302490]
[549.75634766 611.96740723]
[546.62786865 626.64038086]
[542.80993652 641.14929199]
[538.31109619 655.46166992]
[533.14141846 669.54565430]
[527.31231689 683.36981201]
[520.83691406 696.90319824]
[513.72967529 710.11572266]
[506.00634766 722.97790527]
[497.68426514 735.46099854]
[488.78195190 747.53710938]
[479.31927490 759.17938232]
[469.31735229 770.36175537]
[458.79852295 781.05932617]
[447.78622437 791.24822998]
[436.30505371 800.90576172]
[424.38064575 810.01025391]
[412.03955078 818.54150391]
[399.30935669 826.48040771]
[386.21844482 833.80926514]
[372.79605103 840.51177979]
[359.07211304 846.57293701]
[345.07723999 851.97918701]
[330.84265137 856.71856689]
[316.40017700 860.78039551]
[301.78195190 864.15570068]
[287.02066040 866.83685303]
[272.14923096 868.81793213]
[257.20083618 870.09448242]
[242.20883179 870.66369629]
[227.20666504 870.52429199]
[212.22782898 869.67657471]
[197.30572510 868.12243652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 135]
[57 134]
[58 133]
[60 130]
[61 129]
[62 128]
[63 127]
[69 126]
[70 125]
[71 124]
[76 123]
[77 122]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 115]
[84 114]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
