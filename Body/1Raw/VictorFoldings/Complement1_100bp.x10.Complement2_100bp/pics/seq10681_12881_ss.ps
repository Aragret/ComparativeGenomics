%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[183.68379211 486.74630737]
[196.45561218 478.38909912]
[187.08731079 466.80963135]
[192.91152954 452.09945679]
[190.90751648 437.23391724]
[188.90350342 422.36840820]
[186.89949036 407.50286865]
[184.78486633 392.65267944]
[182.55975342 377.81863403]
[180.33462524 362.98458862]
[178.10951233 348.15054321]
[175.33390808 333.40957642]
[172.01164246 318.78213501]
[168.68937683 304.15466309]
[165.36712646 289.52719116]
[155.00309753 278.82971191]
[159.49171448 263.65859985]
[156.16946411 249.03112793]
[152.08979797 234.59657288]
[147.26379395 220.39411926]
[142.43778992 206.19166565]
[137.61180115 191.98921204]
[131.74284363 178.18502808]
[124.86342621 164.85560608]
[117.98401642 151.52618408]
[111.10459900 138.19674683]
[104.22518921 124.86731720]
[97.34577942 111.53788757]
[96.50083160 126.51407623]
[90.05838013 140.06010437]
[78.97412109 150.16648865]
[64.89234161 155.33403015]
[49.90198898 154.79615784]
[36.22679138 148.63262939]
[25.89538574 137.75779724]
[20.44037056 123.78486633]
[20.67096901 108.78663635]
[26.55297089 94.98801422]
[37.21381760 84.43593597]
[51.07203293 78.69573975]
[66.07183838 78.61894989]
[79.98809814 84.21696472]
[90.75532532 94.65777588]
[86.78322601 80.19325256]
[73.32946777 72.34250641]
[69.50725555 57.61684036]
[77.07464600 44.83911896]
[73.10254669 30.37459564]
[69.13045502 15.91007233]
[65.15835571 1.44554853]
[61.18626022 -13.01897526]
[56.75848389 -17.92879295]
[55.64246368 -23.50118256]
[57.31811142 -27.97345924]
[53.77843857 -42.54983521]
[50.23876572 -57.12620926]
[46.69909286 -71.70258331]
[43.15942001 -86.27896118]
[40.05234146 -89.31211853]
[38.25303650 -92.82309723]
[37.75113297 -96.34211731]
[38.38475037 -99.45100403]
[39.87046814 -101.82814026]
[27.17076874 -110.84786224]
[24.67755127 -125.85581207]
[33.35474014 -137.90744019]
[30.68894577 -152.66867065]
[28.02314949 -167.42988586]
[25.35735512 -182.19110107]
[22.69155884 -196.95231628]
[20.02576447 -211.71353149]
[11.54526424 -199.34094238]
[-2.86985731 -195.19313049]
[-16.62920189 -201.16644287]
[-23.44218254 -214.52995300]
[-20.19399452 -229.17404175]
[-8.36966896 -238.40362549]
[6.62487507 -237.99906921]
[17.93523598 -228.14372253]
[16.81958580 -243.10217285]
[15.70393848 -258.06060791]
[14.58828926 -273.01907349]
[13.47264099 -287.97753906]
[12.35699177 -302.93597412]
[11.24134350 -317.89443970]
[10.12569427 -332.85287476]
[9.01004601 -347.81134033]
[7.89439726 -362.76980591]
[-0.84788203 -375.95626831]
[5.92137671 -389.22375488]
[-8.96120071 -391.59136963]
[-22.89637566 -397.32788086]
[-35.13264465 -406.12393188]
[-45.01011658 -417.50515747]
[-51.99611664 -430.85778809]
[-55.71389389 -445.46173096]
[-55.96295547 -460.52938843]
[-52.72987366 -475.24822998]
[-46.18899918 -488.82443237]
[-36.69307327 -500.52590942]
[-24.75420189 -509.72155762]
[-11.01623154 -515.91546631]
[3.77996564 -518.77368164]
[18.83644867 -518.14202881]
[33.34123993 -514.05450439]
[46.51211929 -506.73159790]
[57.63879013 -496.56823730]
[66.12120819 -484.11251831]
[71.50193024 -470.03613281]
[73.49078369 -455.09820557]
[71.98049927 -440.10437012]
[67.05253601 -425.86315918]
[58.97264862 -413.14260864]
[48.17657471 -402.62875366]
[35.24653625 -394.88851929]
[20.87982941 -390.33941650]
[29.54231071 -378.22286987]
[22.85284996 -363.88543701]
[23.96850014 -348.92700195]
[25.08414841 -333.96853638]
[26.19979668 -319.01007080]
[27.31544495 -304.05163574]
[28.43109322 -289.09317017]
[29.54674339 -274.13473511]
[30.66239166 -259.17626953]
[31.77803993 -244.21781921]
[32.89368820 -229.25936890]
[34.78697968 -214.37933350]
[37.45277786 -199.61811829]
[40.11857224 -184.85688782]
[42.78436661 -170.09567261]
[45.45016479 -155.33445740]
[48.11595917 -140.57324219]
[60.46046066 -132.31800842]
[63.37423325 -117.38600922]
[54.63168335 -104.49393463]
[57.73579407 -89.81863403]
[61.27546692 -75.24225616]
[64.81513977 -60.66588211]
[68.35481262 -46.08950806]
[71.89448547 -31.51313019]
[75.65078735 -16.99107170]
[79.62287903 -2.52654767]
[83.59497833 11.93797588]
[87.56707764 26.40250015]
[91.53916931 40.86702347]
[104.57093811 47.98801804]
[108.80526733 62.60051727]
[101.24774933 76.22115326]
[105.21984863 90.68567657]
[110.67520905 104.65847778]
[117.55461884 117.98790741]
[124.43402863 131.31733704]
[131.31344604 144.64675903]
[138.19285583 157.97619629]
[145.07226562 171.30561829]
[147.38137817 156.48442078]
[156.71455383 144.74168396]
[170.63212585 139.14694214]
[185.49607849 141.16264343]
[197.42100525 150.26188660]
[203.28974915 164.06614685]
[201.56825256 178.96704102]
[192.70651245 191.06948853]
[179.02093506 197.20996094]
[164.08894348 195.78334045]
[151.81425476 187.16320801]
[156.64025879 201.36567688]
[161.46624756 215.56813049]
[166.29225159 229.77058411]
[172.84355164 216.27687073]
[186.48390198 210.03659058]
[200.97711182 213.90274048]
[209.69706726 226.10775757]
[208.65713501 241.07167053]
[198.33276367 251.95317078]
[183.44410706 253.77740479]
[170.79692078 245.70887756]
[174.11918640 260.33633423]
[184.72084045 272.08007812]
[179.99458313 286.20495605]
[183.31684875 300.83239746]
[186.63909912 315.45986938]
[189.96136475 330.08731079]
[200.04228210 318.97988892]
[215.02073669 319.78363037]
[223.85516357 331.90603638]
[220.03315735 346.41094971]
[206.37214661 352.60586548]
[192.94355774 345.92541504]
[195.16867065 360.75946045]
[197.39378357 375.59350586]
[199.61891174 390.42755127]
[203.98670959 398.45004272]
[201.76501465 405.49887085]
[203.76902771 420.36437988]
[205.77304077 435.22991943]
[207.77705383 450.09545898]
[217.28871155 462.73818970]
[211.32115173 476.38507080]
[225.85009766 481.06188965]
[236.90510559 491.58563232]
[242.29121399 505.86685181]
[240.93899536 521.06994629]
[233.11692810 534.17633057]
[220.37811279 542.58380127]
[205.25181580 544.62298584]
[190.74140930 539.88897705]
[179.72792053 529.32177734]
[174.39810181 515.01947021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[4 198]
[5 197]
[6 196]
[7 195]
[8 193]
[9 192]
[10 191]
[11 190]
[12 184]
[13 183]
[14 182]
[15 181]
[17 179]
[18 178]
[19 170]
[20 169]
[21 168]
[22 167]
[23 156]
[24 155]
[25 154]
[26 153]
[27 152]
[28 151]
[43 150]
[44 149]
[47 146]
[48 145]
[49 144]
[50 143]
[51 142]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[63 136]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[90 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
