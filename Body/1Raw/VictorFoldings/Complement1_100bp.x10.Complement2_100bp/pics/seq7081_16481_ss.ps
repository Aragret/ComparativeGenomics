%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[162.32212830 589.92779541]
[156.16682434 576.23590088]
[151.36174011 562.01385498]
[147.95172119 547.39447021]
[145.96862793 532.51416016]
[145.43095398 517.51196289]
[146.34371948 502.52786255]
[148.69842529 487.70184326]
[152.47308350 473.17230225]
[157.63243103 459.07492065]
[164.12829590 445.54129028]
[171.90003967 432.69778442]
[180.87509155 420.66433716]
[190.96965027 409.55328369]
[202.08947754 399.46838379]
[214.13072205 390.50381470]
[226.98098755 382.74322510]
[220.50149536 369.21490479]
[214.02198792 355.68655396]
[207.54249573 342.15820312]
[201.06300354 328.62985229]
[196.93611145 326.22616577]
[194.27539062 321.20443726]
[194.59872437 314.60089111]
[188.52488708 300.88562012]
[182.45104980 287.17034912]
[176.37721252 273.45507812]
[170.30339050 259.73980713]
[164.22955322 246.02455139]
[152.00138855 237.52035522]
[153.48799133 221.76914978]
[147.10939026 208.19293213]
[140.42919922 194.76255798]
[133.74900818 181.33218384]
[127.06880951 167.90180969]
[120.38861084 154.47143555]
[113.50920105 141.14199829]
[106.43209839 127.91648102]
[91.64595032 127.40276337]
[79.08795929 119.58029938]
[72.10753632 106.53545380]
[72.56648254 91.74750519]
[80.34237671 79.16062927]
[73.26527405 65.93509674]
[66.18816376 52.70957184]
[59.11106110 39.48404312]
[43.24790573 30.13300896]
[44.49778366 12.62858772]
[37.22455215 -0.49010631]
[29.95132446 -13.60879993]
[22.67809486 -26.72749519]
[15.40486431 -39.84618759]
[8.13163567 -52.96488190]
[-4.02940416 -57.26277924]
[-9.81721878 -68.33910370]
[-6.61244345 -80.00341034]
[-13.68954849 -93.22893524]
[-27.02255821 -101.74606323]
[-26.20538330 -116.61823273]
[-33.28248978 -129.84376526]
[-46.61549759 -138.36088562]
[-45.79832458 -153.23306274]
[-52.87542725 -166.45858765]
[-59.95253372 -179.68411255]
[-67.02964020 -192.90963745]
[-74.10674286 -206.13516235]
[-81.18385315 -219.36068726]
[-95.28836823 -214.18298340]
[-109.97623444 -211.01870728]
[-124.96154785 -209.92944336]
[-139.95262146 -210.93643188]
[-154.65763855 -214.02003479]
[-168.79035950 -219.12025452]
[-182.07569885 -226.13778687]
[-194.25505066 -234.93606567]
[-205.09133911 -245.34379578]
[-214.37362671 -257.15841675]
[-221.92123413 -270.14996338]
[-227.58724976 -284.06549072]
[-231.26136780 -298.63418579]
[-232.87210083 -313.57244873]
[-232.38806152 -328.58950806]
[-229.81869507 -343.39303589]
[-225.21400452 -357.69488525]
[-218.66362000 -371.21667480]
[-210.29505920 -383.69519043]
[-200.27120972 -394.88751221]
[-188.78718567 -404.57583618]
[-176.06652832 -412.57153320]
[-162.35684204 -418.71896362]
[-147.92501831 -422.89846802]
[-133.05194092 -425.02871704]
[-118.02714539 -425.06820679]
[-103.14308167 -423.01620483]
[-88.68947601 -418.91262817]
[-74.94766235 -412.83737183]
[-62.18514252 -404.90866089]
[-50.65033722 -395.28088379]
[-40.56777573 -384.14138794]
[-32.13371658 -371.70706177]
[-25.51232910 -358.21990967]
[-20.83250618 -343.94244385]
[-18.18533707 -329.15264893]
[-17.62235260 -314.13833618]
[-19.15451050 -299.19180298]
[-22.75198746 -284.60400391]
[-28.34475517 -270.65884399]
[-35.82395172 -257.62783813]
[-45.04399109 -245.76455688]
[-55.82540131 -235.29998779]
[-67.95832062 -226.43780518]
[-60.88121796 -213.21226501]
[-53.80411148 -199.98674011]
[-46.72700500 -186.76121521]
[-39.64990234 -173.53569031]
[-32.57279587 -160.31016541]
[-19.74598694 -152.73901367]
[-20.05696106 -136.92086792]
[-12.97985554 -123.69533539]
[-0.15304765 -116.12419128]
[-0.46402124 -100.30603790]
[6.61308432 -87.08051300]
[21.99736214 -78.63711548]
[21.25032997 -60.23811340]
[28.52355957 -47.11941910]
[35.79678726 -34.00072479]
[43.07001877 -20.88203049]
[50.34324646 -7.76333570]
[57.61647797 5.35535812]
[69.15438843 8.98896122]
[75.32120514 19.85883713]
[72.33658600 32.40694046]
[79.41369629 45.63246536]
[86.49079895 58.85799408]
[93.56790161 72.08351898]
[108.35404968 72.59723663]
[120.91204071 80.41970062]
[127.89246368 93.46454620]
[127.43351746 108.25249481]
[119.65762329 120.83937073]
[126.73472595 134.06489563]
[132.13998413 137.87210083]
[134.46247864 143.05891418]
[133.81898499 147.79124451]
[140.49919128 161.22161865]
[147.17938232 174.65199280]
[153.85957336 188.08236694]
[160.53976440 201.51274109]
[164.89077759 204.39645386]
[167.44514465 208.27311707]
[168.12548828 212.29209900]
[167.20326233 215.69531250]
[179.86587524 225.18051147]
[177.94482422 239.95071411]
[184.01864624 253.66596985]
[190.09248352 267.38125610]
[196.16632080 281.09649658]
[202.24015808 294.81176758]
[208.31398010 308.52703857]
[214.59135437 322.15036011]
[221.07084656 335.67871094]
[227.55033875 349.20706177]
[234.02983093 362.73538208]
[240.50932312 376.26373291]
[254.61082458 371.11557007]
[269.14334106 367.35247803]
[283.97122192 365.00952148]
[298.95602417 364.10864258]
[313.95779419 364.65820312]
[328.83651733 366.65313721]
[343.45321655 370.07473755]
[357.67144775 374.89111328]
[371.35845947 381.05728149]
[384.38641357 388.51565552]
[396.63372803 397.19662476]
[407.98602295 407.01910400]
[418.33728027 417.89138794]
[427.59088135 429.71197510]
[435.66043091 442.37048340]
[442.47058105 455.74871826]
[447.95770264 469.72180176]
[452.07061768 484.15924072]
[454.77087402 498.92623901]
[456.03332520 513.88488770]
[455.84613037 528.89556885]
[454.21102905 543.81811523]
[451.14334106 558.51318359]
[446.67166138 572.84356689]
[440.83776855 586.67541504]
[433.69613647 599.87969971]
[425.31341553 612.33300781]
[415.76791382 623.91918945]
[405.14871216 634.52996826]
[393.55499268 644.06628418]
[381.09503174 652.43908691]
[367.88510132 659.57025146]
[354.04858398 665.39318848]
[339.71466064 669.85345459]
[325.01718140 672.90948486]
[310.09335327 674.53277588]
[295.08251953 674.70800781]
[280.12484741 673.43371582]
[265.36001587 670.72174072]
[250.92585754 666.59741211]
[236.95713806 661.09918213]
[223.58428955 654.27844238]
[210.93218994 646.19885254]
[199.11894226 636.93585205]
[188.25486755 626.57592773]
[178.44140625 615.21588135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[24 159]
[25 158]
[26 157]
[27 156]
[28 155]
[29 154]
[31 152]
[32 148]
[33 147]
[34 146]
[35 145]
[36 144]
[37 141]
[38 140]
[43 135]
[44 134]
[45 133]
[46 132]
[48 129]
[49 128]
[50 127]
[51 126]
[52 125]
[53 124]
[56 122]
[57 121]
[59 119]
[60 118]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
