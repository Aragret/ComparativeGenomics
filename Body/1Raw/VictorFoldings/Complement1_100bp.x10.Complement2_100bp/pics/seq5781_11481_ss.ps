%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[188.94805908 785.28558350]
[174.62181091 780.83197021]
[160.50978088 775.74011230]
[146.64041138 770.02026367]
[133.04164124 763.68395996]
[119.74082947 756.74389648]
[106.76477814 749.21405029]
[94.13962555 741.10961914]
[81.89077759 732.44696045]
[70.04292297 723.24346924]
[58.61990738 713.51770020]
[47.64474106 703.28918457]
[37.13952255 692.57861328]
[27.12541389 681.40753174]
[17.62257957 669.79840088]
[8.65015602 657.77459717]
[0.22621369 645.36035156]
[-7.63228321 632.58068848]
[-14.90950871 619.46130371]
[-21.59080696 606.02862549]
[-27.66272163 592.30975342]
[-33.11302948 578.33227539]
[-37.93074799 564.12432861]
[-42.10617828 549.71453857]
[-45.63090897 535.13195801]
[-48.49784470 520.40588379]
[-50.70121384 505.56604004]
[-52.23657227 490.64227295]
[-53.10083389 475.66464233]
[-53.29225540 460.66333008]
[-52.81045151 445.66851807]
[-51.65639114 430.71044922]
[-49.83240509 415.81921387]
[-47.34215927 401.02478027]
[-44.19067001 386.35699463]
[-40.38428497 371.84536743]
[-35.93067169 357.51910400]
[-30.83879662 343.40710449]
[-25.11891556 329.53775024]
[-18.78254700 315.93896484]
[-11.84245205 302.63818359]
[-4.31260538 289.66213989]
[3.79182673 277.03701782]
[12.45452404 264.78817749]
[21.65804100 252.94033813]
[31.38384247 241.51734924]
[41.61234283 230.54219055]
[52.32294083 220.03700256]
[63.49406815 210.02291870]
[75.10322571 200.52009583]
[87.12704468 191.54769897]
[99.54129028 183.12377930]
[112.32098389 175.26530457]
[125.44037628 167.98811340]
[118.76017761 154.55772400]
[112.07998657 141.12734985]
[105.39978790 127.69697571]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[74.09272766 65.75769043]
[66.62498474 52.74873734]
[59.15724564 39.73978424]
[45.28130341 45.49187088]
[30.78370476 49.42226410]
[15.90251732 51.46642303]
[0.88210213 51.59077835]
[-14.03089142 49.79329300]
[-28.59157753 46.10348129]
[-42.56085968 40.58192825]
[-55.70934677 33.31931305]
[-67.82112885 24.43488312]
[-78.69731903 14.07453728]
[-88.15932465 2.40839767]
[-96.05176544 -10.37196636]
[-102.24504089 -24.05668831]
[-106.63745880 -38.42105484]
[-109.15688324 -53.22918701]
[-109.76194763 -68.23793030]
[-108.44271088 -83.20081329]
[-105.22084808 -97.87213898]
[-100.14925385 -112.01100159]
[-93.31121063 -125.38520813]
[-84.81900024 -137.77516174]
[-74.81208801 -148.97738647]
[-63.45478439 -158.80795288]
[-50.93358994 -167.10542297]
[-37.45410919 -173.73353577]
[-23.23769569 -178.58348083]
[-8.51779079 -181.57559204]
[6.46389103 -182.66073608]
[21.46133614 -181.82110596]
[36.22827148 -179.07048035]
[50.52221298 -174.45404053]
[64.10844421 -168.04757690]
[76.76385498 -159.95629883]
[88.28064728 -150.31307983]
[98.46969604 -139.27624512]
[107.16368866 -127.02704620]
[114.21986389 -113.76663208]
[119.52234650 -99.71273041]
[122.98407745 -85.09613800]
[124.54820251 -70.15686798]
[124.18904114 -55.14023590]
[121.91248322 -40.29282379]
[117.75592804 -25.85844231]
[111.78761292 -12.07411957]
[104.10555267 0.83379519]
[94.83589172 12.65334225]
[84.13084412 23.19043350]
[72.16619873 32.27204132]
[79.63394165 45.28099442]
[87.10168457 58.28994751]
[89.76923370 59.15152740]
[92.25622559 61.12167358]
[94.13871765 64.13690948]
[95.02354431 67.98159027]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[118.83016968 121.01678467]
[125.51036072 134.44715881]
[132.19055176 147.87753296]
[138.87074280 161.30790710]
[152.58959961 155.23591614]
[166.56706238 149.78553772]
[180.77497864 144.96772766]
[195.18473816 140.79222107]
[209.76731873 137.26741028]
[224.49336243 134.40039062]
[239.33320618 132.19692993]
[254.25695801 130.66148376]
[269.23455811 129.79714966]
[284.23587036 129.60563660]
[299.23068237 130.08735657]
[314.18878174 131.24133301]
[329.08001709 133.06523132]
[343.87445068 135.55538940]
[358.54226685 138.70680237]
[373.05392456 142.51310730]
[387.38018799 146.96662903]
[401.49224854 152.05842590]
[415.36163330 157.77822876]
[428.96041870 164.11451721]
[442.26126099 171.05453491]
[455.23733521 178.58432007]
[467.86251831 186.68867493]
[480.11141968 195.35130310]
[491.95928955 204.55474854]
[503.38235474 214.28048706]
[514.35754395 224.50892639]
[524.86279297 235.21946716]
[534.87695312 246.39053345]
[544.37982178 257.99963379]
[553.35229492 270.02340698]
[561.77630615 282.43759155]
[569.63482666 295.21725464]
[576.91210938 308.33660889]
[583.59344482 321.76922607]
[589.66546631 335.48809814]
[595.11578369 349.46557617]
[599.93359375 363.67349243]
[604.10906982 378.08325195]
[607.63385010 392.66586304]
[610.50085449 407.39190674]
[612.70428467 422.23175049]
[614.23968506 437.15548706]
[615.10400391 452.13311768]
[615.29547119 467.13442993]
[614.81372070 482.12924194]
[613.65972900 497.08731079]
[611.83581543 511.97857666]
[609.34558105 526.77301025]
[606.19415283 541.44079590]
[602.38781738 555.95245361]
[597.93426514 570.27868652]
[592.84246826 584.39074707]
[587.12261963 598.26013184]
[580.78631592 611.85888672]
[573.84625244 625.15972900]
[566.31646729 638.13580322]
[558.21209717 650.76098633]
[549.54943848 663.00982666]
[540.34594727 674.85772705]
[530.62017822 686.28076172]
[520.39172363 697.25592041]
[509.68118286 707.76116943]
[498.51010132 717.77526855]
[486.90097046 727.27813721]
[474.87719727 736.25061035]
[462.46298218 744.67456055]
[449.68331909 752.53308105]
[436.56396484 759.81030273]
[423.13131714 766.49163818]
[409.41241455 772.56359863]
[395.43493652 778.01391602]
[381.22702026 782.83166504]
[366.81723022 787.00714111]
[352.23464966 790.53186035]
[337.50860596 793.39886475]
[322.66873169 795.60223389]
[307.74499512 797.13763428]
[292.76736450 798.00195312]
[277.76605225 798.19335938]
[262.77124023 797.71160889]
[247.81317139 796.55755615]
[232.92192078 794.73358154]
[218.12750244 792.24340820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 126]
[55 125]
[56 124]
[57 123]
[58 122]
[60 120]
[61 119]
[62 114]
[63 113]
[64 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
