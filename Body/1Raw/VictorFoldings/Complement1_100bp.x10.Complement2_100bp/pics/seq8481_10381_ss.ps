%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[157.54737854 707.24481201]
[144.41319275 699.99182129]
[131.69467163 692.03240967]
[119.42979431 683.39031982]
[107.65515900 674.09136963]
[96.40589905 664.16326904]
[85.71559906 653.63568115]
[75.61614990 642.53997803]
[66.13770294 630.90936279]
[57.30853653 618.77844238]
[49.15500641 606.18347168]
[41.70144653 593.16204834]
[34.97010040 579.75305176]
[28.98105621 565.99645996]
[23.75218773 551.93328857]
[19.29910088 537.60559082]
[15.63508415 523.05609131]
[12.77107334 508.32824707]
[10.71561623 493.46594238]
[9.47484589 478.51358032]
[9.05246639 463.51574707]
[9.44973850 448.51724243]
[10.66547585 433.56283569]
[12.69604969 418.69711304]
[15.53540134 403.96444702]
[19.17505455 389.40884399]
[23.60415077 375.07369995]
[28.80946922 361.00183105]
[34.77547455 347.23522949]
[41.48436737 333.81497192]
[48.91611862 320.78106689]
[57.04854965 308.17248535]
[65.85739136 296.02682495]
[75.31636047 284.38034058]
[85.39721680 273.26776123]
[96.06988525 262.72229004]
[107.30250549 252.77537537]
[119.06156158 243.45671082]
[131.31195068 234.79409790]
[144.01712036 226.81341553]
[136.74389648 213.69471741]
[129.47067261 200.57601929]
[122.19744110 187.45732117]
[114.92420959 174.33863831]
[114.94161224 189.33862305]
[109.89277649 203.46339417]
[100.37084198 215.05358887]
[87.49442291 222.74760437]
[72.77622986 225.64155579]
[57.94535065 223.39544678]
[44.74409485 216.27317810]
[34.72333527 205.11143494]
[29.06029892 191.22151184]
[28.42027664 176.23516846]
[32.87845612 161.91299438]
[41.91109085 149.93754578]
[54.45704269 141.71568298]
[69.04241943 138.21328735]
[83.95375824 139.84184265]
[97.43927002 146.41001892]
[107.91558838 157.14747620]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[77.61988068 46.82462311]
[66.50441742 35.56598282]
[70.59524536 21.24416542]
[66.62315369 6.77964211]
[61.29691315 20.80216599]
[49.73571777 30.35929680]
[34.96163177 32.95282364]
[20.83656693 27.90480232]
[11.05277920 16.53477478]
[8.16772842 1.81484056]
[12.93556118 -12.40724659]
[24.10997581 -22.41386795]
[38.77000809 -25.58931541]
[53.08356094 -21.10353470]
[63.30868530 -10.12987995]
[61.52621841 -25.02359772]
[59.74375153 -39.91731262]
[57.96128845 -54.81103134]
[56.17882156 -69.70475006]
[54.39635468 -84.59846497]
[52.61388779 -99.49217987]
[37.65066147 -101.32663727]
[23.56150055 -106.68938446]
[11.16553402 -115.26862335]
[1.18344569 -126.56558990]
[-5.80441809 -139.92347717]
[-9.39179230 -154.56568909]
[-9.37011147 -169.64093018]
[-5.74063683 -184.27275085]
[1.28561938 -197.61048889]
[11.30015945 -208.87869263]
[23.72075272 -217.42224121]
[37.82527924 -222.74444580]
[52.79372025 -224.53584290]
[67.75583649 -222.69232178]
[81.84174347 -217.32104492]
[94.23250580 -208.73428345]
[104.20774078 -197.43127441]
[111.18750763 -184.06915283]
[114.76600647 -169.42477417]
[114.73518372 -154.34954834]
[111.09683990 -139.71992493]
[104.06250000 -126.38644409]
[94.04113007 -115.12431335]
[81.61535645 -106.58829498]
[67.50760651 -101.27465057]
[69.29006958 -86.38093567]
[71.07254028 -71.48721313]
[72.85500336 -56.59349823]
[74.63747406 -41.69977951]
[76.41993713 -26.80606270]
[78.20240021 -11.91234589]
[81.08767700 2.80754566]
[85.05976868 17.27206993]
[95.89112854 27.49611092]
[92.08441162 42.85252762]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[122.38011932 153.17538452]
[128.04290771 167.06539917]
[135.31613159 180.18409729]
[142.58935547 193.30279541]
[149.86259460 206.42149353]
[157.13581848 219.54017639]
[170.63546753 212.99247742]
[184.47253418 207.19174194]
[198.60572815 202.15530396]
[212.99285889 197.89817810]
[227.59101868 194.43307495]
[242.35661316 191.77035522]
[257.24557495 189.91793823]
[272.21350098 188.88134766]
[287.21566772 188.66371155]
[302.20736694 189.26565552]
[317.14379883 190.68537903]
[331.98040771 192.91865540]
[346.67294312 195.95881653]
[361.17752075 199.79679871]
[375.45086670 204.42112732]
[389.45037842 209.81802368]
[403.13427734 215.97137451]
[416.46176147 222.86279297]
[429.39297485 230.47175598]
[441.88940430 238.77551270]
[453.91369629 247.74929810]
[465.43002319 257.36633301]
[476.40396118 267.59793091]
[486.80279541 278.41354370]
[496.59545898 289.78088379]
[505.75277710 301.66601562]
[514.24737549 314.03350830]
[522.05389404 326.84640503]
[529.14910889 340.06652832]
[535.51177979 353.65435791]
[541.12292480 367.56939697]
[545.96582031 381.77005005]
[550.02593994 396.21401978]
[553.29132080 410.85815430]
[555.75207520 425.65875244]
[557.40087891 440.57162476]
[558.23284912 455.55230713]
[558.24554443 470.55606079]
[557.43884277 485.53811646]
[555.81518555 500.45376587]
[553.37939453 515.25848389]
[550.13879395 529.90814209]
[546.10302734 544.35888672]
[541.28411865 558.56774902]
[535.69647217 572.49224854]
[529.35675049 586.09075928]
[522.28387451 599.32287598]
[514.49896240 612.14892578]
[506.02523804 624.53070068]
[496.88800049 636.43127441]
[487.11453247 647.81512451]
[476.73394775 658.64825439]
[465.77728271 668.89837646]
[454.27722168 678.53485107]
[442.26809692 687.52893066]
[429.78570557 695.85375977]
[416.86734009 703.48449707]
[403.55151367 710.39843750]
[389.87802124 716.57489014]
[375.88763428 721.99536133]
[361.62213135 726.64379883]
[347.12405396 730.50622559]
[332.43667603 733.57122803]
[317.60382080 735.82952881]
[302.66979980 737.27447510]
[287.67916870 737.90167236]
[272.67663574 737.70935059]
[257.70700073 736.69805908]
[242.81492615 734.87078857]
[228.04486084 732.23297119]
[213.44087219 728.79254150]
[199.04656982 724.55969238]
[184.90489197 719.54711914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 137]
[41 136]
[42 135]
[43 134]
[44 133]
[61 132]
[62 131]
[63 130]
[64 129]
[66 127]
[67 126]
[68 125]
[69 124]
[71 122]
[72 121]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
