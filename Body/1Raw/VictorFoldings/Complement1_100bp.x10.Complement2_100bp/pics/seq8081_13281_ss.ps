%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[38.19039917 685.13110352]
[28.29618645 696.47998047]
[16.25837326 705.52349854]
[2.60320187 711.86621094]
[-12.07238388 715.23083496]
[-27.12682915 715.47033691]
[-41.90201950 712.57427979]
[-55.75204468 706.66912842]
[-68.07144165 698.01312256]
[-78.32166290 686.98468018]
[-86.05461121 674.06591797]
[-90.93222809 659.82153320]
[-92.74129486 644.87426758]
[-91.40272522 629.87750244]
[-86.97502899 615.48693848]
[-79.65177155 602.33154297]
[-69.75309753 590.98651123]
[-57.71172714 581.94775391]
[-44.05406189 575.61041260]
[-29.37715340 572.25152588]
[-14.32261372 572.01794434]
[-11.43734169 557.29809570]
[-8.55206871 542.57818604]
[-5.66679621 527.85827637]
[-10.81150055 513.88043213]
[-0.56420237 501.82620239]
[-2.21727276 498.71179199]
[-2.44396663 494.64193726]
[-0.81166601 490.29580688]
[2.79258752 486.52001953]
[6.33226013 471.94366455]
[9.87193203 457.36727905]
[13.41160488 442.79089355]
[16.95127678 428.21453857]
[20.49094963 413.63815308]
[23.92201042 399.03582764]
[13.98772240 387.97021484]
[12.45611572 372.99963379]
[20.12305069 359.84396362]
[34.22938538 353.65383911]
[37.55164337 339.02639771]
[40.87390518 324.39892578]
[44.19616318 309.77148438]
[31.59977150 301.73306274]
[22.49655151 289.84774780]
[18.00053024 275.53829956]
[18.67276001 260.52597046]
[24.45138741 246.62355042]
[34.65679550 235.51635742]
[48.07146835 228.55801392]
[63.08522797 226.60548401]
[66.40748596 211.97801208]
[69.72974396 197.35055542]
[73.05200195 182.72309875]
[76.37426758 168.09564209]
[71.64801025 153.97077942]
[82.24966431 142.22703552]
[76.07051849 131.82777405]
[78.71863556 119.61419678]
[89.30743408 112.24941254]
[83.85837555 101.95625305]
[86.69087219 90.65943146]
[96.35169983 84.15484619]
[92.31677246 68.85680389]
[102.99470520 58.47263718]
[106.75100708 43.95057678]
[110.50730133 29.42851830]
[109.11160278 22.96604538]
[110.91793060 17.57770538]
[114.59767914 14.53328323]
[118.78469086 0.12950122]
[122.97170258 -14.27428055]
[127.15871429 -28.67806244]
[130.04399109 -43.39795303]
[131.60450745 -58.31655884]
[125.34489441 -72.84679413]
[134.36428833 -84.70005798]
[135.92480469 -99.61865997]
[137.48533630 -114.53726196]
[139.04585266 -129.45587158]
[140.60638428 -144.37448120]
[142.16690063 -159.29307556]
[135.90728760 -173.82331848]
[144.92668152 -185.67657471]
[146.37609863 -200.60638428]
[147.71434021 -215.54656982]
[141.23907471 -229.98199463]
[150.08099365 -241.96823120]
[150.63920593 -256.95785522]
[150.41587830 -271.95617676]
[150.19255066 -286.95452881]
[149.96922302 -301.95285034]
[135.25395203 -305.20208740]
[121.68492889 -311.75787354]
[109.99390411 -321.26666260]
[100.81137085 -333.21560669]
[94.63251495 -346.96038818]
[91.79057312 -361.75970459]
[92.43879700 -376.81549072]
[96.54222870 -391.31576538]
[103.87957764 -404.47860718]
[114.05514526 -415.59411621]
[126.52018738 -424.06283569]
[140.60247803 -429.42810059]
[155.54255676 -431.40054321]
[170.53474426 -429.87380981]
[184.77053833 -424.93020630]
[197.48219299 -416.83636475]
[207.98420715 -406.02874756]
[215.71020508 -393.09020996]
[220.24354553 -378.71850586]
[221.33975220 -363.68872070]
[218.93969727 -348.81134033]
[213.17282104 -334.88870239]
[204.35011292 -322.67163086]
[192.94738770 -312.81900024]
[179.57955933 -305.86212158]
[164.96755981 -302.17617798]
[165.19088745 -287.17785645]
[165.41421509 -272.17950439]
[165.63754272 -257.18118286]
[176.02189636 -268.00546265]
[190.92041016 -269.74740601]
[203.52168274 -261.61056519]
[208.06459045 -247.31506348]
[202.47218323 -233.39654541]
[189.30120850 -226.21841431]
[174.57328796 -229.06239319]
[165.02117920 -240.63000488]
[171.59216309 -227.26318359]
[162.65452576 -214.20834351]
[161.31628418 -199.26815796]
[163.85050964 -192.32556152]
[159.84529114 -184.11605835]
[166.21652222 -170.65289307]
[157.08551025 -157.73255920]
[155.52497864 -142.81394958]
[153.96446228 -127.89534760]
[152.40393066 -112.97674561]
[150.84341431 -98.05813599]
[149.28289795 -83.13953400]
[155.65412903 -69.67637634]
[146.52311707 -56.75603485]
[144.96258545 -41.83743286]
[154.35903931 -53.52959824]
[167.86048889 -60.06493378]
[182.86004639 -60.18157196]
[196.46150208 -53.85699081]
[206.03863525 -42.31236649]
[209.74226379 -27.77678299]
[206.85726929 -13.05683804]
[197.94068909 -0.99471980]
[184.71418762 6.08056450]
[169.73159790 6.80288935]
[155.88580322 1.03278410]
[145.85023499 -10.11563396]
[141.56250000 -24.49105072]
[137.37548828 -10.08726978]
[133.18847656 4.31651258]
[129.00146484 18.72029495]
[125.02936554 33.18481827]
[121.27306366 47.70687866]
[117.51676178 62.22893524]
[121.82036591 76.48825836]
[110.87375641 87.91114807]
[115.77153015 103.95446014]
[103.88380432 115.78908539]
[109.47634888 133.33345032]
[96.87712860 145.54928589]
[101.36574554 160.72041321]
[91.00172424 171.41789246]
[87.67946625 186.04536438]
[84.35720825 200.67282104]
[81.03494263 215.30027771]
[77.71268463 229.92773438]
[90.41001129 238.17414856]
[99.50279999 250.24449158]
[103.90901184 264.67034912]
[103.11531830 279.70498657]
[97.23677826 293.53482056]
[87.00065613 304.49822998]
[73.65650940 311.28518677]
[58.82362366 313.09371948]
[55.50136566 327.72119141]
[52.17910385 342.34866333]
[48.85684586 356.97610474]
[58.90528107 368.65237427]
[60.13720322 383.82919312]
[52.28907776 396.66940308]
[38.54947281 402.35809326]
[39.70046234 411.41970825]
[35.06732559 417.17782593]
[31.52765274 431.75421143]
[27.98797989 446.33056641]
[24.44830704 460.90695190]
[20.90863609 475.48333740]
[17.36896324 490.05969238]
[14.15568924 504.71148682]
[19.09401894 519.74224854]
[9.05309486 530.74359131]
[6.16782236 545.46343994]
[3.28254986 560.18334961]
[0.39727730 574.90325928]
[14.24962521 580.80291748]
[26.57242775 589.45404053]
[36.82698441 600.47845459]
[44.56501389 613.39422607]
[49.44823837 627.63665771]
[51.26318359 642.58325195]
[49.93051147 657.58050537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 203]
[22 202]
[23 201]
[24 200]
[26 198]
[30 197]
[31 196]
[32 195]
[33 194]
[34 193]
[35 192]
[36 190]
[40 186]
[41 185]
[42 184]
[43 183]
[51 175]
[52 174]
[53 173]
[54 172]
[55 171]
[57 169]
[60 167]
[63 165]
[65 163]
[66 162]
[67 161]
[70 160]
[71 159]
[72 158]
[73 157]
[74 144]
[75 143]
[77 141]
[78 140]
[79 139]
[80 138]
[81 137]
[82 136]
[84 134]
[85 132]
[86 131]
[88 129]
[89 121]
[90 120]
[91 119]
[92 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
