%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[214.60589600 478.30313110]
[220.40917969 464.44543457]
[228.04541016 451.50708008]
[237.37234497 439.72903442]
[248.21624756 429.33078003]
[260.37506104 420.50601196]
[253.29797363 407.28048706]
[246.22087097 394.05496216]
[239.14375305 380.82943726]
[232.06665039 367.60391235]
[217.78135681 363.54608154]
[210.41575623 350.23434448]
[214.76881409 335.27810669]
[207.69171143 322.05258179]
[200.61460876 308.82705688]
[185.72343445 308.48315430]
[172.91857910 300.67984009]
[165.69110107 287.42727661]
[166.06994629 272.23672485]
[174.05348206 259.19024658]
[166.97636414 245.96472168]
[159.89926147 232.73918152]
[152.82215881 219.51365662]
[145.74505615 206.28813171]
[138.66795349 193.06260681]
[131.59083557 179.83708191]
[127.36073303 177.62004089]
[124.47843933 172.72215271]
[124.50658417 166.11073303]
[117.82638550 152.68035889]
[111.14619446 139.24998474]
[104.46599579 125.81961060]
[97.78580475 112.38923645]
[90.80735016 99.11138916]
[77.34901428 90.79371643]
[77.94467163 75.91102600]
[70.67144012 62.79233170]
[63.39821243 49.67363739]
[48.47180557 45.21940613]
[41.28260040 31.81157494]
[45.62101364 17.60898018]
[38.34778595 4.49028540]
[31.07455444 -8.62840843]
[17.61621475 -16.94608116]
[18.21187592 -31.82876968]
[10.93864632 -44.94746399]
[3.66541696 -58.06615829]
[-3.60781264 -71.18485260]
[-13.30888367 -71.04517365]
[-22.34029388 -74.42805481]
[-29.47618866 -80.82929230]
[-33.76446152 -89.33816528]
[-34.65367126 -98.76682281]
[-32.06364441 -107.81606293]
[-26.39071846 -115.25436401]
[-32.87021255 -128.78271484]
[-39.34970856 -142.31106567]
[-45.82920456 -155.83940125]
[-52.30870056 -169.36775208]
[-58.78819656 -182.89608765]
[-65.26769257 -196.42443848]
[-71.74719238 -209.95278931]
[-85.91058350 -204.96826172]
[-100.52988434 -201.54432678]
[-115.43367767 -199.72109985]
[-130.44723511 -199.51997375]
[-145.39451599 -200.94331360]
[-160.10028076 -203.97441101]
[-174.39212036 -208.57775879]
[-188.10244751 -214.69935608]
[-201.07054138 -222.26744080]
[-213.14434814 -231.19326782]
[-224.18229675 -241.37220764]
[-234.05497742 -252.68492126]
[-242.64665222 -264.99874878]
[-249.85658264 -278.16934204]
[-255.60021973 -292.04223633]
[-259.81024170 -306.45483398]
[-262.43728638 -321.23812866]
[-263.45053101 -336.21881104]
[-262.83813477 -351.22122192]
[-260.60723877 -366.06945801]
[-256.78402710 -380.58944702]
[-251.41329956 -394.61096191]
[-244.55804443 -407.96957397]
[-236.29862976 -420.50869751]
[-226.73190308 -432.08129883]
[-215.97001648 -442.55166626]
[-204.13914490 -451.79708862]
[-191.37802124 -459.70916748]
[-177.83622742 -466.19509888]
[-163.67256165 -471.17886353]
[-149.05308533 -474.60202026]
[-134.14918518 -476.42443848]
[-119.13562775 -476.62475586]
[-104.18841553 -475.20059204]
[-89.48281097 -472.16870117]
[-75.19122314 -467.56460571]
[-61.48122025 -461.44226074]
[-48.51353836 -453.87347412]
[-36.44021606 -444.94699097]
[-25.40281296 -434.76745605]
[-15.53073502 -423.45422363]
[-6.93972445 -411.13992310]
[0.26949093 -397.96896362]
[6.01238775 -384.09573364]
[10.22163296 -369.68292236]
[12.84787560 -354.89947510]
[13.86032486 -339.91876221]
[13.24710941 -324.91638184]
[11.01541901 -310.06823730]
[7.19141912 -295.54846191]
[1.81994486 -281.52725220]
[-5.03602648 -268.16900635]
[-13.29611206 -255.63032532]
[-22.86346817 -244.05824280]
[-33.62591934 -233.58843994]
[-45.45728302 -224.34365845]
[-58.21884537 -216.43228149]
[-51.73934937 -202.90393066]
[-45.25985336 -189.37559509]
[-38.78035736 -175.84724426]
[-32.30086136 -162.31889343]
[-25.82136345 -148.79055786]
[-19.34186935 -135.26220703]
[-12.86237240 -121.73386383]
[6.91869783 -116.58596039]
[16.60434341 -98.25338745]
[9.51088142 -78.45808411]
[16.78411102 -65.33938599]
[24.05734062 -52.22069550]
[31.33057022 -39.10200119]
[44.26868057 -31.72266388]
[44.19324875 -15.90163803]
[51.46648026 -2.78294396]
[58.73970795 10.33574963]
[73.08383942 14.18042183]
[80.64681244 27.38103294]
[76.51690674 42.40040970]
[83.79013824 55.51910400]
[91.06336212 68.63779449]
[104.00147247 76.01713562]
[103.92604065 91.83815765]
[107.44519043 93.41549683]
[110.25198364 96.53635406]
[111.67266083 100.84781647]
[111.21617889 105.70903778]
[117.89636993 119.13941956]
[124.57656860 132.56979370]
[131.25675964 146.00016785]
[137.93695068 159.43054199]
[144.81637573 172.75997925]
[151.89347839 185.98550415]
[158.97058105 199.21102905]
[166.04768372 212.43655396]
[173.12478638 225.66207886]
[180.20190430 238.88760376]
[187.27900696 252.11314392]
[202.56272888 252.70909119]
[215.41123962 260.82156372]
[222.42739868 274.18719482]
[221.81558228 289.16989136]
[213.84013367 301.74996948]
[220.91723633 314.97549438]
[227.99435425 328.20101929]
[242.85278320 332.87698364]
[249.84156799 346.39038086]
[245.29217529 360.52679443]
[252.36929321 373.75231934]
[259.44638062 386.97784424]
[266.52349854 400.20336914]
[273.60061646 413.42889404]
[287.68835449 408.20886230]
[302.35571289 404.95581055]
[317.32943726 403.73034668]
[332.33053589 404.55526733]
[347.07958984 407.41522217]
[361.30181885 412.25692749]
[374.73223877 418.99020386]
[387.12069702 427.48959351]
[398.23638916 437.59680176]
[407.87225342 449.12347412]
[415.84872437 461.85488892]
[422.01727295 475.55389404]
[426.26293945 489.96530151]
[428.50662231 504.82058716]
[428.70657349 519.84301758]
[426.85900879 534.75274658]
[422.99838257 549.27203369]
[417.19662476 563.13037109]
[409.56179810 576.06958008]
[400.23611450 587.84863281]
[389.39334106 598.24804688]
[377.23547363 607.07409668]
[363.98898315 614.16247559]
[349.90066528 619.38098145]
[335.23294067 622.63244629]
[320.25912476 623.85626221]
[305.25808716 623.02972412]
[290.50936890 620.16821289]
[276.28765869 615.32495117]
[262.85794067 608.59020996]
[250.47041321 600.08947754]
[239.35580444 589.98107910]
[229.72120667 578.45336914]
[221.74609375 565.72106934]
[215.57904053 552.02136230]
[211.33494568 537.60955811]
[209.09284973 522.75402832]
[208.89454651 507.73153687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 172]
[7 171]
[8 170]
[9 169]
[10 168]
[13 165]
[14 164]
[15 163]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[25 153]
[26 152]
[29 151]
[30 150]
[31 149]
[32 148]
[33 147]
[34 143]
[36 141]
[37 140]
[38 139]
[41 136]
[42 135]
[43 134]
[45 132]
[46 131]
[47 130]
[48 129]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[61 120]
[62 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
