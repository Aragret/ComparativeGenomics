%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[77.34687042 524.94378662]
[65.90207672 514.78137207]
[60.50178909 500.46020508]
[62.38694763 485.27124023]
[71.12436676 472.70477295]
[84.70624542 465.64846802]
[84.70624542 450.64846802]
[84.70624542 435.64846802]
[74.02536774 425.33081055]
[73.81169128 410.11865234]
[84.70624542 398.98553467]
[84.70624542 383.98553467]
[84.70624542 368.98553467]
[84.70624542 353.98553467]
[72.15742493 349.70526123]
[61.51986694 341.75289917]
[53.83717728 330.89102173]
[49.86846542 318.16860962]
[50.01334763 304.81958008]
[54.27176285 292.14312744]
[62.24260712 281.37731934]
[73.16147614 273.57824707]
[85.97394562 269.51626587]
[78.61901093 256.56427002]
[86.76376343 243.00059509]
[87.21037292 228.00724792]
[87.65697479 213.01390076]
[79.59290314 203.99740601]
[79.84226990 191.50253296]
[88.81670380 182.23851013]
[89.48648834 167.25346375]
[90.15627289 152.26843262]
[90.82605743 137.28338623]
[91.49584198 122.29834747]
[92.16562653 107.31330872]
[90.71620941 92.38349915]
[87.17653656 77.80712891]
[83.63686371 63.23075104]
[72.86154175 51.64615250]
[77.37696838 37.45248413]
[73.77271271 33.67671585]
[72.14041138 29.33057976]
[72.36711121 25.26073265]
[74.02017975 22.14629936]
[71.13490295 7.42640734]
[68.24963379 -7.29348373]
[65.36435699 -22.01337433]
[62.47908783 -36.73326492]
[59.59381485 -51.45315933]
[56.70854187 -66.17304993]
[41.08933258 -67.19011688]
[26.27410126 -72.20555115]
[13.26756191 -80.87315369]
[2.95019579 -92.59925079]
[-3.98135042 -106.58335114]
[-7.06130028 -121.87282562]
[-6.08604383 -137.42774963]
[-1.12758517 -152.19166565]
[7.47173691 -165.16334534]
[19.12288094 -175.46466064]
[33.03044510 -182.40005493]
[29.92633629 -197.07536316]
[26.82222748 -211.75065613]
[23.71811676 -226.42596436]
[20.50484276 -241.07774353]
[17.18258286 -255.70521545]
[13.86032391 -270.33267212]
[10.53806400 -284.96014404]
[-4.36675024 -283.15719604]
[-19.37794685 -282.89639282]
[-34.33639526 -284.18045044]
[-49.08353424 -286.99575806]
[-63.46302795 -291.31250000]
[-77.32244873 -297.08486938]
[-90.51488495 -304.25170898]
[-102.90048218 -312.73706055]
[-114.34794617 -322.45095825]
[-124.73593140 -333.29040527]
[-133.95431519 -345.14053345]
[-141.90538025 -357.87570190]
[-148.50483704 -371.36093140]
[-153.68273926 -385.45324707]
[-157.38418579 -400.00326538]
[-159.56993103 -414.85678101]
[-160.21682739 -429.85629272]
[-159.31800842 -444.84283447]
[-156.88299561 -459.65750122]
[-152.93762207 -474.14328003]
[-147.52368164 -488.14660645]
[-140.69857788 -501.51904297]
[-132.53466797 -514.11883545]
[-123.11848450 -525.81237793]
[-112.54984283 -536.47576904]
[-100.94078827 -545.99597168]
[-88.41437531 -554.27203369]
[-75.10338593 -561.21618652]
[-61.14893723 -566.75494385]
[-46.69894409 -570.82946777]
[-31.90658760 -573.39660645]
[-16.92867470 -574.42913818]
[-1.92397928 -573.91613770]
[12.94843960 -571.86303711]
[27.53092575 -568.29162598]
[41.66889954 -563.23968506]
[55.21248627 -556.76086426]
[68.01811981 -548.92382812]
[79.95005035 -539.81152344]
[90.88179016 -529.52075195]
[100.69746399 -518.16040039]
[109.29302216 -505.85104370]
[116.57733154 -492.72311401]
[122.47319031 -478.91577148]
[126.91809845 -464.57537842]
[129.86492920 -449.85394287]
[131.28244019 -434.90756226]
[131.15562439 -419.89462280]
[129.48579407 -404.97433472]
[126.29068756 -390.30477905]
[121.60415649 -376.04153442]
[115.47587585 -362.33575439]
[107.97081757 -349.33276367]
[99.16854095 -337.17034912]
[89.16234589 -325.97750854]
[78.05830383 -315.87283325]
[65.97413635 -306.96347046]
[53.03793335 -299.34384155]
[39.38682556 -293.09472656]
[25.16552353 -288.28237915]
[28.48778343 -273.65493774]
[31.81004333 -259.02746582]
[35.13230133 -244.40000916]
[39.67919540 -238.57356262]
[38.39341736 -229.53007507]
[41.49752808 -214.85476685]
[44.60163879 -200.17947388]
[47.70574951 -185.50416565]
[62.09516144 -184.98490906]
[75.94955444 -181.02851868]
[88.45962524 -173.86135864]
[98.89347076 -163.89753723]
[106.63941193 -151.71492004]
[111.24182892 -138.02160645]
[112.42800140 -123.61482239]
[110.12421417 -109.33446503]
[104.46035767 -96.01416016]
[95.76261139 -84.43258667]
[84.53463745 -75.26795959]
[71.42843628 -69.05831909]
[74.31370544 -54.33843231]
[77.19898224 -39.61853790]
[80.08425140 -24.89864731]
[82.96952820 -10.17875671]
[85.85479736 4.54113483]
[88.74006653 19.26102638]
[91.95334625 33.91281509]
[102.47548676 44.45481110]
[98.21324158 59.69107819]
[101.75291443 74.26745605]
[105.29258728 88.84382629]
[108.86514282 74.27548218]
[116.52150726 61.37664032]
[127.59932709 51.26318741]
[141.14025879 44.81003952]
[155.97288513 42.57545853]
[170.81402588 44.75275421]
[184.37976074 51.15357208]
[195.49655151 61.22417450]
[203.20266724 74.09336090]
[206.83143616 88.64780426]
[206.06896973 103.62841797]
[200.98118591 117.73921204]
[192.00827026 129.75947571]
[179.92643738 138.64932251]
[165.78089905 143.63969421]
[150.79539490 144.29888916]
[136.26631165 140.56985474]
[123.45055389 132.77522278]
[113.45682526 121.58927155]
[107.15066528 107.98309326]
[106.48088074 122.96813202]
[105.81109619 137.95317078]
[105.14131165 152.93821716]
[104.47152710 167.92324829]
[103.80174255 182.90829468]
[112.66453552 199.04930115]
[102.65032959 213.46051025]
[102.20372009 228.45385742]
[101.75711823 243.44720459]
[109.08010101 257.47161865]
[100.96729279 269.96289062]
[116.45973206 276.64392090]
[128.17214966 288.73657227]
[134.32803345 304.36602783]
[134.00933838 321.12432861]
[127.29318237 336.44110107]
[115.23573303 347.97799683]
[99.70624542 353.98553467]
[99.70624542 368.98553467]
[99.70624542 383.98553467]
[99.70624542 398.98553467]
[110.60079956 410.11865234]
[110.38711548 425.33081055]
[99.70624542 435.64846802]
[99.70624542 450.64846802]
[99.70624542 465.64846802]
[113.28812408 472.70477295]
[122.02553558 485.27124023]
[123.91069794 500.46020508]
[118.51040649 514.78137207]
[107.06561279 524.94378662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 205]
[7 204]
[8 203]
[11 200]
[12 199]
[13 198]
[14 197]
[23 190]
[25 188]
[26 187]
[27 186]
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[35 179]
[36 159]
[37 158]
[38 157]
[40 155]
[44 154]
[45 153]
[46 152]
[47 151]
[48 150]
[49 149]
[50 148]
[61 136]
[62 135]
[63 134]
[64 133]
[65 131]
[66 130]
[67 129]
[68 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
