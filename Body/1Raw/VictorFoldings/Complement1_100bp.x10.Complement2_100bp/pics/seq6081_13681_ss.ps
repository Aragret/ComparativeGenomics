%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[112.19330597 611.34991455]
[111.54579926 596.33905029]
[112.99378204 581.38409424]
[116.50907898 566.77630615]
[122.02324677 552.79986572]
[129.42895508 539.72692871]
[138.58206177 527.81195068]
[149.30439758 517.28686523]
[161.38722229 508.35650635]
[174.59538269 501.19473267]
[169.34866333 487.14227295]
[164.10194397 473.08978271]
[158.85522461 459.03732300]
[156.23663330 473.80697632]
[148.23013306 486.49145508]
[136.02346802 495.20910645]
[121.42739105 498.66665649]
[106.60717010 496.35128784]
[93.76129150 488.60638428]
[84.79535675 476.58090210]
[81.03941345 462.05877686]
[83.05062866 447.19421387]
[90.53065491 434.19232178]
[102.36988068 424.98184204]
[116.81201935 420.92910767]
[131.71466064 422.63531494]
[144.86709595 429.84735107]
[154.31735229 441.49365234]
[152.09222412 426.65960693]
[149.86711121 411.82556152]
[147.64199829 396.99151611]
[145.41688538 382.15747070]
[143.19175720 367.32342529]
[140.96664429 352.48937988]
[138.74153137 337.65533447]
[135.96591187 322.91439819]
[132.64366150 308.28692627]
[129.32139587 293.65945435]
[116.03740692 290.48886108]
[105.36421967 281.86264038]
[99.42057800 269.41989136]
[99.41783142 255.56425476]
[105.41352844 242.99971008]
[116.28904724 234.20278931]
[113.18493652 219.52748108]
[110.08082581 204.85218811]
[107.34098053 202.63282776]
[105.53997040 198.97613525]
[105.34165955 194.33781433]
[107.18125153 189.45283508]
[104.73551941 174.65356445]
[102.28979492 159.85429382]
[99.84407043 145.05502319]
[97.39833832 130.25575256]
[94.95261383 115.45648193]
[83.97802734 102.77047729]
[90.05548859 87.13587189]
[87.38969421 72.37465668]
[84.72389221 57.61344147]
[80.59160614 72.03301239]
[73.39447021 85.19361115]
[63.48367310 96.45310211]
[51.34276581 105.26209259]
[37.56414032 111.19079590]
[22.82008362 113.94992065]
[7.82999086 113.40485382]
[-6.67473888 109.58217621]
[-19.98638725 102.66842651]
[-31.45544815 93.00092316]
[-40.52232361 81.05136871]
[-46.74461746 67.40280914]
[-49.81872940 52.72119904]
[-49.59467316 37.72286987]
[-46.08337402 23.13963509]
[-39.45615768 9.68303680]
[-30.03638268 -1.99034464]
[-18.28366089 -11.31094074]
[-4.77143145 -17.82397842]
[9.84101295 -21.21166992]
[24.84070015 -21.30872726]
[39.49575806 -18.11041069]
[53.09114075 -11.77277374]
[64.96349335 -2.60504460]
[74.53353882 8.94546318]
[81.33433533 22.31517410]
[85.03313446 36.84519577]
[88.13724518 22.16989517]
[91.24135590 7.49459267]
[94.34546661 -7.18070936]
[84.53643036 -21.66525841]
[88.16649628 -38.43241501]
[102.51200867 -47.20994186]
[105.39727783 -61.92983246]
[100.45895386 -76.96058655]
[110.49987793 -87.96190643]
[113.16567230 -102.72312164]
[115.61139679 -117.52239227]
[118.05712891 -132.32167053]
[120.50285339 -147.12094116]
[106.69838715 -153.19444275]
[94.83853912 -162.51081848]
[85.66883850 -174.48443604]
[79.76569366 -188.36260986]
[77.50017548 -203.27294922]
[79.01470947 -218.27818298]
[84.21408081 -232.43505859]
[92.77146149 -244.85368347]
[104.14891815 -254.75338745]
[117.63125610 -261.51190186]
[132.37097168 -264.70434570]
[147.44149780 -264.13003540]
[161.89550781 -259.82510376]
[174.82440186 -252.06015015]
[185.41546631 -241.32328796]
[193.00291443 -228.28942871]
[197.10981750 -213.77790833]
[197.47801208 -198.70094299]
[194.08433533 -184.00625610]
[187.14212036 -170.61758423]
[177.08776855 -159.37654114]
[164.55331421 -150.98976135]
[150.32666016 -145.98443604]
[135.30212402 -144.67521667]
[132.85639954 -129.87594604]
[130.41067505 -115.07666779]
[127.96494293 -100.27739716]
[129.96858215 -95.94213867]
[129.27011108 -90.30217743]
[125.21976471 -85.07663727]
[130.36447144 -71.09874725]
[120.11717224 -59.04455948]
[117.23190308 -44.32466888]
[125.84591675 -34.74196243]
[127.39087677 -21.75369072]
[121.08024597 -10.07522869]
[109.02076721 -4.07659960]
[105.91666412 10.59870338]
[102.81255341 25.27400589]
[99.70844269 39.94930649]
[99.48511505 54.94764328]
[102.15090942 69.70886230]
[104.81670380 84.47007751]
[113.96697998 91.67519379]
[115.95141602 103.15139771]
[109.75188446 113.01075745]
[112.19760895 127.81002808]
[114.64334106 142.60929871]
[117.08906555 157.40856934]
[119.53479004 172.20783997]
[121.98052216 187.00711060]
[124.75613403 201.74807739]
[127.86024475 216.42337036]
[130.96435547 231.09867859]
[146.73657227 236.06144714]
[157.79055786 248.23127747]
[161.17938232 264.22293091]
[156.07072449 279.65203857]
[143.94885254 290.33721924]
[147.27111816 304.96466064]
[150.59338379 319.59213257]
[160.67430115 308.48468018]
[175.65275574 309.28842163]
[184.48718262 321.41082764]
[180.66516113 335.91574097]
[167.00416565 342.11065674]
[153.57557678 335.43023682]
[155.80068970 350.26428223]
[158.02580261 365.09832764]
[160.25093079 379.93237305]
[162.47604370 394.76641846]
[164.70115662 409.60046387]
[166.92626953 424.43450928]
[169.15139771 439.26852417]
[172.90769958 453.79058838]
[178.15440369 467.84307861]
[183.40112305 481.89553833]
[188.64784241 495.94799805]
[203.31767273 492.70108032]
[218.29661560 491.52749634]
[233.29310608 492.45004272]
[248.01525879 495.45083618]
[262.17648315 500.47140503]
[275.50109863 507.41403198]
[287.72979736 516.14361572]
[298.62451172 526.49017334]
[307.97314453 538.25231934]
[315.59378052 551.20117188]
[321.33804321 565.08459473]
[325.09414673 579.63238525]
[326.78894043 594.56134033]
[326.38946533 609.58087158]
[323.90347290 624.39862061]
[319.37936401 638.72619629]
[312.90521240 652.28460693]
[304.60705566 664.81005859]
[294.64636230 676.05865479]
[283.21707153 685.81146240]
[270.54162598 693.87866211]
[256.86676025 700.10314941]
[242.45869446 704.36383057]
[227.59785461 706.57781982]
[212.57351685 706.70190430]
[197.67814636 704.73370361]
[183.20166016 700.71154785]
[169.42585754 694.71374512]
[156.61891174 686.85705566]
[145.03007507 677.29431152]
[134.88496399 666.21179199]
[126.38103485 653.82513428]
[119.68382263 640.37548828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 177]
[11 176]
[12 175]
[13 174]
[28 173]
[29 172]
[30 171]
[31 170]
[32 169]
[33 168]
[34 167]
[35 166]
[36 160]
[37 159]
[38 158]
[44 153]
[45 152]
[46 151]
[50 150]
[51 149]
[52 148]
[53 147]
[54 146]
[55 145]
[57 142]
[58 141]
[59 140]
[86 139]
[87 138]
[88 137]
[89 136]
[92 132]
[93 131]
[95 129]
[96 126]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
