%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[128.31256104 964.11425781]
[113.36859131 962.79852295]
[98.48468781 960.92156982]
[83.68192291 958.48614502]
[68.98123932 955.49554443]
[54.40345001 951.95416260]
[39.96918869 947.86694336]
[25.69888306 943.23962402]
[11.61273193 938.07885742]
[-2.26932740 932.39190674]
[-15.92764664 926.18676758]
[-29.34289360 919.47222900]
[-42.49607849 912.25787354]
[-55.36858749 904.55383301]
[-67.94219971 896.37109375]
[-80.19911957 887.72113037]
[-92.12200165 878.61633301]
[-103.69396210 869.06939697]
[-114.89862823 859.09399414]
[-125.72013855 848.70416260]
[-136.14317322 837.91467285]
[-146.15299988 826.74072266]
[-155.73541260 815.19818115]
[-164.87689209 803.30334473]
[-173.56446838 791.07305908]
[-181.78584290 778.52465820]
[-189.52940369 765.67590332]
[-196.78417969 752.54498291]
[-203.53990173 739.15045166]
[-209.78700256 725.51129150]
[-215.51664734 711.64672852]
[-220.72071838 697.57653809]
[-225.39184570 683.32055664]
[-229.52345276 668.89892578]
[-233.10964966 654.33209229]
[-236.14537048 639.64062500]
[-238.62634277 624.84545898]
[-240.54902649 609.96740723]
[-241.91072083 595.02752686]
[-242.70947266 580.04705811]
[-242.94418335 565.04705811]
[-242.61448669 550.04895020]
[-241.72088623 535.07379150]
[-240.26461792 520.14288330]
[-238.24775696 505.27728271]
[-235.67315674 490.49807739]
[-232.54444885 475.82617188]
[-228.86607361 461.28234863]
[-224.64324951 446.88717651]
[-219.88192749 432.66101074]
[-214.58885193 418.62405396]
[-208.77153015 404.79608154]
[-202.43818665 391.19674683]
[-195.59777832 377.84524536]
[-188.26000977 364.76052856]
[-180.43524170 351.96105957]
[-172.13455200 339.46496582]
[-163.36970520 327.28994751]
[-154.15309143 315.45324707]
[-144.49777222 303.97161865]
[-134.41740417 292.86129761]
[-123.92624664 282.13800049]
[-113.03916168 271.81689453]
[-101.77155304 261.91265869]
[-90.13936615 252.43922424]
[-78.15907288 243.41004944]
[-65.84761810 234.83792114]
[-53.22244263 226.73493958]
[-40.30140686 219.11257935]
[-27.10279846 211.98165894]
[-13.64530087 205.35223389]
[0.05203778 199.23371887]
[13.96983147 193.63475037]
[28.08838081 188.56326294]
[42.38770294 184.02644348]
[56.84755707 180.03068542]
[71.44747925 176.58168030]
[86.16680145 173.68428040]
[100.98469543 171.34260559]
[99.20223236 156.44889832]
[90.00735474 144.73123169]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[85.56227875 107.47872162]
[84.26443481 95.90474701]
[91.03981781 86.43186951]
[89.47929382 71.51325989]
[80.34828186 58.59292221]
[86.71952057 45.12976456]
[77.58850098 32.20942688]
[83.95973969 18.74626732]
[82.39921570 3.82766318]
[67.56664276 0.91457593]
[54.25246811 -6.24253607]
[43.64059067 -17.00726700]
[36.67460251 -30.42242622]
[33.97392273 -45.29514313]
[35.77869034 -60.30294800]
[41.92842484 -74.11135864]
[51.87629700 -85.49253845]
[64.73774719 -93.43447876]
[79.36914825 -97.23099518]
[94.46948242 -96.54449463]
[108.69604492 -91.43601990]
[120.78380585 -82.35982513]
[129.65794373 -70.12294769]
[134.52937317 -55.81349182]
[134.96492004 -40.70383453]
[130.92585754 -26.13752365]
[122.77135468 -13.40978146]
[111.22648621 -3.65235233]
[97.31781769 2.26714039]
[98.87834167 17.18574524]
[107.89773560 29.03900528]
[101.63812256 43.56924057]
[110.65751648 55.42250061]
[104.39790344 69.95273590]
[105.95842743 84.87134552]
[116.15846252 98.18807983]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[120.26602936 141.10990906]
[114.09594727 154.66642761]
[115.87841034 169.56015015]
[130.83041382 168.33898926]
[145.81774902 167.68112183]
[160.81924438 167.58746338]
[175.81364441 168.05815125]
[190.77970886 169.09252930]
[205.69628906 170.68911743]
[220.54225159 172.84565735]
[235.29660034 175.55911255]
[249.93843079 178.82562256]
[264.44702148 182.64057922]
[278.80187988 186.99858093]
[292.98260498 191.89344788]
[306.96920776 197.31826782]
[320.74185181 203.26535034]
[334.28103638 209.72628784]
[347.56762695 216.69192505]
[360.58279419 224.15240479]
[373.30810547 232.09718323]
[385.72561646 240.51498413]
[397.81765747 249.39392090]
[409.56716919 258.72140503]
[420.95751953 268.48428345]
[431.97259521 278.66867065]
[442.59677124 289.26019287]
[452.81503296 300.24383545]
[462.61291504 311.60406494]
[471.97653198 323.32479858]
[480.89266968 335.38946533]
[489.34866333 347.78097534]
[497.33258057 360.48178101]
[504.83309937 373.47390747]
[511.83963013 386.73898315]
[518.34222412 400.25823975]
[524.33166504 414.01248169]
[529.79949951 427.98229980]
[534.73803711 442.14791870]
[539.14019775 456.48925781]
[542.99981689 470.98605347]
[546.31140137 485.61776733]
[549.07025146 500.36367798]
[551.27252197 515.20294189]
[552.91503906 530.11450195]
[553.99548340 545.07733154]
[554.51232910 560.07019043]
[554.46490479 575.07189941]
[553.85314941 590.06121826]
[552.67803955 605.01690674]
[550.94122314 619.91778564]
[548.64508057 634.74285889]
[545.79296875 649.47100830]
[542.38885498 664.08142090]
[538.43762207 678.55352783]
[533.94476318 692.86669922]
[528.91668701 707.00079346]
[523.36053467 720.93572998]
[517.28417969 734.65185547]
[510.69616699 748.12963867]
[503.60586548 761.35009766]
[496.02328491 774.29455566]
[487.95913696 786.94458008]
[479.42489624 799.28228760]
[470.43261719 811.29028320]
[460.99499512 822.95153809]
[451.12542725 834.24957275]
[440.83786011 845.16833496]
[430.14688110 855.69244385]
[419.06759644 865.80688477]
[407.61569214 875.49749756]
[395.80737305 884.75042725]
[383.65936279 893.55267334]
[371.18887329 901.89172363]
[358.41351318 909.75579834]
[345.35140991 917.13378906]
[332.02102661 924.01519775]
[318.44119263 930.39031982]
[304.63119507 936.25018311]
[290.61056519 941.58636475]
[276.39913940 946.39141846]
[262.01699829 950.65844727]
[247.48455811 954.38153076]
[232.82234192 957.55535889]
[218.05113220 960.17535400]
[203.19181824 962.23791504]
[188.26542664 963.74011230]
[173.29310608 964.67974854]
[158.29603577 965.05554199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 124]
[80 123]
[82 121]
[83 120]
[86 118]
[87 117]
[89 115]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
