%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[91.83428955 545.68469238]
[85.69556427 531.96850586]
[81.61944580 517.50463867]
[79.69281006 502.60140991]
[79.95671844 487.57650757]
[82.40555573 472.75015259]
[86.98712158 458.43835449]
[93.60375214 444.94619751]
[102.11442566 432.56127930]
[112.33773041 421.54757690]
[124.05576324 412.13983154]
[137.01873779 404.53857422]
[150.95036316 398.90582275]
[147.41069031 384.32946777]
[143.87101746 369.75308228]
[140.33134460 355.17669678]
[136.68325806 340.62707520]
[132.92695618 326.10504150]
[129.17065430 311.58297729]
[117.34062958 308.85794067]
[107.73497009 301.31710815]
[102.21445465 290.34326172]
[101.88157654 277.99139404]
[106.86083221 266.60388184]
[116.26352692 258.36633301]
[112.94126892 243.73889160]
[109.61901093 229.11141968]
[106.29675293 214.48396301]
[102.97449493 199.85650635]
[99.65222931 185.22904968]
[96.32997131 170.60157776]
[91.50332642 184.80381775]
[81.37735748 195.87019348]
[67.65847015 201.93583679]
[52.65852737 201.97857666]
[38.90529633 195.99121094]
[28.71642876 184.98271179]
[23.80893135 170.80821228]
[25.00980568 155.85636902]
[32.11668015 142.64680481]
[43.93191910 133.40559387]
[58.46445465 129.69001770]
[73.26529694 132.12623596]
[85.84024048 140.30369568]
[94.07079315 152.84590149]
[93.62418365 137.85253906]
[93.17758179 122.85919952]
[92.73097229 107.86584473]
[90.28524780 93.06657410]
[85.88424683 78.72673035]
[81.48324585 64.38687897]
[77.08225250 50.04703522]
[72.68125153 35.70718765]
[68.28025818 21.36734009]
[63.24333954 7.23830986]
[57.58055115 -6.65171719]
[51.91776657 -20.54174423]
[46.25497818 -34.43177032]
[40.59219360 -48.32179642]
[25.46098900 -47.80022812]
[11.09128380 -52.47821808]
[-0.78856713 -61.77280426]
[-8.75663662 -74.54699707]
[-11.86760521 -89.24880981]
[-9.76488209 -104.09983826]
[-2.72136354 -117.31036377]
[8.39581203 -127.29503632]
[2.73302555 -141.18505859]
[-9.64155674 -151.04307556]
[-7.28159142 -165.74952698]
[-12.94437790 -179.63955688]
[-18.60716438 -193.52957153]
[-33.21332550 -189.99154663]
[-48.18367386 -188.67005920]
[-63.18376923 -189.59465027]
[-77.87849426 -192.74465942]
[-91.93957520 -198.04971313]
[-105.05287933 -205.39131165]
[-116.92544556 -214.60542297]
[-127.29204559 -225.48620605]
[-135.92106628 -237.79057312]
[-142.61976624 -251.24365234]
[-147.23844910 -265.54489136]
[-149.67398071 -280.37478638]
[-149.87190247 -295.40203857]
[-147.82783508 -310.29092407]
[-143.58741760 -324.70886230]
[-137.24537659 -338.33370972]
[-128.94342041 -350.86108398]
[-118.86701202 -362.01113892]
[-107.24124908 -371.53475952]
[-94.32586670 -379.21917725]
[-80.40939331 -384.89276123]
[-65.80272675 -388.42871094]
[-50.83218765 -389.74804688]
[-35.83222580 -388.82131958]
[-21.13794708 -385.66921997]
[-7.07762194 -380.36215210]
[6.03463459 -373.01870728]
[17.90588951 -363.80288696]
[28.27093506 -352.92065430]
[36.89821243 -340.61505127]
[43.59498215 -327.16101074]
[48.21163940 -312.85913086]
[50.64504623 -298.02886963]
[50.84083939 -283.00158691]
[48.79464340 -268.11297607]
[44.55217361 -253.69566345]
[38.20820236 -240.07173157]
[29.90446281 -227.54553223]
[19.82645988 -216.39691162]
[8.19934177 -206.87495422]
[-4.71713781 -199.19236755]
[0.94564879 -185.30233765]
[6.60843515 -171.41230774]
[18.57797813 -162.54780579]
[16.62305260 -146.84785461]
[22.28583908 -132.95782471]
[37.21511078 -133.59194946]
[51.48729324 -129.07156372]
[63.37400055 -119.92385101]
[71.42880249 -107.23757935]
[74.66325378 -92.53354645]
[72.66812134 -77.58230591]
[65.66506958 -64.19091797]
[54.48221970 -53.98458481]
[60.14500809 -40.09455872]
[65.80779266 -26.20453072]
[71.47058105 -12.31450367]
[77.13336945 1.57552338]
[83.93405151 -11.79424286]
[98.15341187 -16.57020378]
[111.64595032 -10.01647091]
[116.68252563 4.11267948]
[110.37796783 17.72342873]
[96.34380341 23.01892090]
[82.62010193 16.96634102]
[87.02110291 31.30618858]
[91.42209625 45.64603424]
[95.82309723 59.98588181]
[100.22409821 74.32572937]
[104.62509155 88.66558075]
[107.42976379 73.93011475]
[114.59550476 60.75240326]
[125.43933868 50.38845825]
[138.92768860 43.82609940]
[153.77491760 41.69081879]
[168.56591797 44.18612671]
[181.89086914 51.07419586]
[192.47975159 61.69849396]
[199.32327271 75.04637909]
[201.76918030 89.84562683]
[199.58432007 104.68565369]
[192.97695923 118.15200806]
[182.57685852 128.96116638]
[169.37528992 136.08285522]
[154.63053894 138.83830261]
[139.74798584 136.96485901]
[126.14614868 130.64109802]
[115.12145996 120.46975708]
[107.72431946 107.41924286]
[108.17092896 122.41259003]
[108.61753845 137.40594482]
[109.06414032 152.39929199]
[110.95743561 167.27932739]
[114.27969360 181.90678406]
[117.60195160 196.53424072]
[120.92420959 211.16171265]
[124.24646759 225.78916931]
[127.56873322 240.41662598]
[130.89099121 255.04408264]
[147.76158142 261.68795776]
[157.18415833 276.99462891]
[155.54666138 294.73638916]
[143.69271851 307.82666016]
[147.44902039 322.34872437]
[151.20532227 336.87078857]
[156.38403320 344.39532471]
[154.90771484 351.63702393]
[158.44738770 366.21340942]
[161.98706055 380.78979492]
[165.52673340 395.36614990]
[180.49009705 393.98214722]
[195.49552917 394.79165649]
[210.22314453 397.77743530]
[224.35905457 402.87585449]
[237.60195923 409.97824097]
[249.66955566 418.93316650]
[260.30465698 429.54980469]
[269.28051758 441.60180664]
[276.40588379 454.83236694]
[281.52883911 468.95938110]
[284.54022217 483.68179321]
[285.37579346 498.68579102]
[284.01776123 513.65155029]
[280.49511719 528.26007080]
[274.88287354 542.19995117]
[267.30072021 555.17413330]
[257.91021729 566.90594482]
[246.91156006 577.14544678]
[234.53918457 585.67437744]
[221.05679321 592.31085205]
[206.75177002 596.91345215]
[191.92901611 599.38415527]
[176.90451050 599.67016602]
[161.99847412 597.76544189]
[147.52862549 593.71063232]
[133.80342102 587.59210205]
[121.11538696 579.54028320]
[109.73497772 569.72680664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 182]
[14 181]
[15 180]
[16 179]
[17 177]
[18 176]
[19 175]
[25 171]
[26 170]
[27 169]
[28 168]
[29 167]
[30 166]
[31 165]
[45 164]
[46 163]
[47 162]
[48 161]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[54 137]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[67 118]
[68 117]
[70 115]
[71 114]
[72 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
