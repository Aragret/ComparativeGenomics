%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[101.45394135 429.62683105]
[86.92858124 425.78915405]
[73.06110382 420.00930786]
[60.10984421 412.39492798]
[48.31608200 403.08789062]
[37.89952469 392.26159668]
[29.05423164 380.11767578]
[21.94497871 366.88241577]
[16.70421219 352.80233765]
[13.42955971 338.13980103]
[12.18202972 323.16790771]
[12.98486137 308.16558838]
[15.82309914 293.41235352]
[20.64386749 279.18301392]
[27.35735893 265.74267578]
[35.83850479 253.34172058]
[45.92930984 242.21115112]
[57.44178391 232.55834961]
[70.16145325 224.56311035]
[83.85137177 218.37442017]
[98.25649261 214.10754395]
[113.10845947 211.84196472]
[112.88513184 196.84362793]
[112.66180420 181.84529114]
[112.43847656 166.84695435]
[112.21514893 151.84861755]
[108.89289093 137.22116089]
[102.61553192 123.59783936]
[96.33816528 109.97452545]
[89.16280365 96.80204773]
[81.12162781 84.13952637]
[73.08045197 71.47699738]
[65.03928375 58.81447601]
[56.99810791 46.15195084]
[48.95693588 33.48942566]
[35.02738190 25.98755646]
[34.73615265 11.09579754]
[26.69497871 -1.56672716]
[18.65380669 -14.22925186]
[5.48781347 -7.03071833]
[-8.12079811 -0.70869797]
[-22.11375427 4.70973730]
[-36.43113327 9.20138454]
[-51.01162720 12.74701023]
[-65.79280090 15.33143044]
[-80.71134949 16.94357872]
[-95.70339966 17.57655144]
[-110.70475006 17.22764015]
[-125.65116119 15.89833450]
[-140.47863770 13.59432983]
[-155.12365723 10.32549191]
[-169.52354431 6.10581875]
[-183.61662292 0.95337927]
[-197.34252930 -5.10976267]
[-210.64250183 -12.05764389]
[-223.45957947 -19.86051178]
[-235.73887634 -28.48495293]
[-247.42782593 -37.89403534]
[-258.47634888 -48.04747009]
[-268.83715820 -58.90177536]
[-278.46588135 -70.41047668]
[-287.32125854 -82.52428436]
[-295.36541748 -95.19132233]
[-302.56387329 -108.35736084]
[-308.88580322 -121.96601105]
[-314.30416870 -135.95899963]
[-318.79571533 -150.27639771]
[-322.34124756 -164.85691833]
[-324.92559814 -179.63810730]
[-326.53765869 -194.55667114]
[-327.17053223 -209.54872131]
[-326.82153320 -224.55006409]
[-325.49215698 -239.49647522]
[-323.18804932 -254.32392883]
[-319.91912842 -268.96893311]
[-315.69937134 -283.36880493]
[-310.54684448 -297.46182251]
[-304.48361206 -311.18771362]
[-297.53567505 -324.48764038]
[-289.73272705 -337.30465698]
[-281.10821533 -349.58392334]
[-271.69906616 -361.27279663]
[-261.54556274 -372.32128906]
[-250.69119263 -382.68203735]
[-239.18243408 -392.31066895]
[-227.06857300 -401.16598511]
[-214.40148926 -409.21005249]
[-201.23541260 -416.40844727]
[-187.62672424 -422.73028564]
[-173.63369751 -428.14855957]
[-159.31626892 -432.64004517]
[-144.73573303 -436.18548584]
[-129.95452881 -438.76974487]
[-115.03595734 -440.38171387]
[-100.04389954 -441.01452637]
[-85.04255676 -440.66543579]
[-70.09616089 -439.33593750]
[-55.26871490 -437.03176880]
[-40.62372208 -433.76275635]
[-26.22389030 -429.54290771]
[-12.13088226 -424.39028931]
[1.59495497 -418.32699585]
[14.89484310 -411.37896729]
[27.71183014 -403.57595825]
[39.99103165 -394.95135498]
[51.67986298 -385.54214478]
[62.72827530 -375.38858032]
[73.08895111 -364.53414917]
[82.71752930 -353.02532959]
[91.57277679 -340.91140747]
[99.61677551 -328.24429321]
[106.81507874 -315.07815552]
[113.13685608 -301.46945190]
[118.55504608 -287.47637939]
[123.04644012 -273.15893555]
[126.59180450 -258.57836914]
[129.17596436 -243.79714966]
[130.78784180 -228.87857056]
[131.42056274 -213.88650513]
[131.07138062 -198.88516235]
[129.74180603 -183.93878174]
[127.43753815 -169.11135864]
[124.16844177 -154.46638489]
[119.94851685 -140.06657410]
[114.79582977 -125.97359467]
[108.73244476 -112.24778748]
[101.78432465 -98.94794464]
[93.98123169 -86.13100433]
[85.35657501 -73.85185242]
[75.94728088 -62.16307831]
[65.79365540 -51.11472702]
[54.93916321 -40.75411224]
[43.43029404 -31.12560081]
[31.31633186 -22.27042580]
[39.35750580 -9.60789967]
[47.39867783 3.05462480]
[60.75307465 9.65078640]
[61.61946106 25.44825363]
[69.66063690 38.11077881]
[77.70180511 50.77330399]
[85.74298096 63.43582916]
[93.78415680 76.09835052]
[101.82532501 88.76087952]
[103.38772583 73.84246826]
[112.68428802 62.07072449]
[126.83436584 57.09324646]
[141.45339966 60.45236206]
[152.01153564 71.10720825]
[155.23721313 85.75627136]
[150.13092041 99.86037445]
[138.27490234 109.04920959]
[123.34286499 110.47551727]
[109.96148682 103.69716644]
[116.23884583 117.32048035]
[122.51620483 130.94380188]
[122.90985107 115.94896698]
[126.37065887 101.35366058]
[132.75148010 87.77849579]
[141.78099060 75.80068207]
[153.07524109 65.92952728]
[166.15402222 58.58475876]
[180.46119690 54.07867813]
[195.38841248 52.60288620]
[210.30097961 54.22013474]
[224.56478882 58.86166000]
[237.57334900 66.33009338]
[248.77351379 76.30788422]
[257.68905640 88.37076569]
[263.94088745 102.00582123]
[267.26315308 116.63327789]
[267.51461792 131.63116455]
[264.68457031 146.36178589]
[258.89337158 160.19876099]
[250.38722229 172.55374146]
[239.52784729 182.90139771]
[226.77697754 190.80172729]
[212.67678833 195.91882324]
[197.82682800 198.03507996]
[182.85852051 197.06054688]
[168.40832520 193.03662109]
[155.09068298 186.13442993]
[143.47184753 176.64746094]
[134.04586792 164.97908020]
[127.21348572 151.62528992]
[127.43681335 166.62362671]
[127.66014099 181.62196350]
[127.88346863 196.62030029]
[128.10679626 211.61863708]
[143.01963806 213.44100952]
[157.54541016 217.27709961]
[171.41351318 223.05545044]
[184.36560059 230.66842651]
[196.16036987 239.97418213]
[206.57809448 250.79937744]
[215.42469788 262.94232178]
[222.53538513 276.17681885]
[227.77767944 290.25631714]
[231.05392456 304.91851807]
[232.30307007 319.89025879]
[231.50186157 334.89266968]
[228.66522217 349.64620972]
[223.84599304 363.87606812]
[217.13395691 377.31713867]
[208.65415955 389.71902466]
[198.56455994 400.85067749]
[187.05313110 410.50473022]
[174.33432007 418.50134277]
[160.64506531 424.69149780]
[146.24041748 428.95996094]
[131.38868713 431.22714233]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 188]
[23 187]
[24 186]
[25 185]
[26 184]
[27 155]
[28 154]
[29 153]
[30 143]
[31 142]
[32 141]
[33 140]
[34 139]
[35 138]
[37 136]
[38 135]
[39 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
