%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[115.82905579 556.77819824]
[100.84292603 557.90667725]
[85.85598755 556.78887939]
[71.20306396 553.44982910]
[57.21149826 547.96405029]
[44.19387054 540.45410156]
[32.44100189 531.08782959]
[22.21545219 520.07434082]
[13.74566650 507.65985107]
[7.22086096 494.12158203]
[2.78680325 479.76202393]
[0.54255134 464.90197754]
[0.53824300 449.87341309]
[2.77397418 435.01208496]
[7.19979811 420.64999390]
[13.71683979 407.10800171]
[22.17950630 394.68862915]
[32.39873886 383.66931152]
[44.14623642 374.29626465]
[57.15955353 366.77886963]
[71.14797211 361.28506470]
[85.79898071 357.93759155]
[100.78527069 356.81124878]
[101.90092468 341.85278320]
[103.01657104 326.89431763]
[104.13221741 311.93588257]
[105.24787140 296.97741699]
[98.47860718 283.70993042]
[107.22088623 270.52343750]
[108.33654022 255.56500244]
[108.00156403 240.56874084]
[106.21909332 225.67501831]
[104.43663025 210.78131104]
[95.12425232 203.06079102]
[93.51735687 190.66719055]
[101.01826477 180.17436218]
[99.45774841 165.25576782]
[97.89722443 150.33715820]
[96.33670044 135.41854858]
[94.77617645 120.49994659]
[93.21565247 105.58134460]
[91.01915741 103.46830750]
[89.54296112 100.50936127]
[89.10186005 96.96974945]
[89.90824890 93.22728729]
[92.03356934 89.73215485]
[91.36378479 74.74711609]
[77.07090759 72.05697632]
[63.74482727 66.25007629]
[52.05543518 57.62196732]
[42.58953476 46.60995102]
[35.82138062 33.77088165]
[32.08891678 19.75303078]
[31.57690811 5.26333427]
[34.30779648 -8.96824455]
[40.14073181 -22.22549248]
[48.77884293 -33.84199905]
[59.78433990 -43.23463440]
[72.60070038 -49.93284988]
[86.58081055 -53.60222244]
[86.13420105 -68.59557343]
[85.68759918 -83.58892059]
[85.24098969 -98.58227539]
[78.63439941 -85.11553955]
[68.23491669 -74.30578613]
[55.03375626 -67.18333435]
[40.28916931 -64.42704010]
[25.40651321 -66.29962921]
[11.80431080 -72.62261200]
[0.77903622 -82.79331970]
[-6.61845112 -95.84234619]
[-9.68307114 -110.52594757]
[-8.12272167 -125.44457245]
[-2.08612776 -139.17626953]
[7.85134268 -150.41223145]
[20.74251175 -158.08149719]
[35.35867691 -161.45309448]
[50.30672073 -160.20567322]
[64.16188049 -154.45811462]
[75.60358429 -144.75825500]
[83.54127502 -132.03059387]
[87.21849060 -117.48715973]
[90.75816345 -132.06353760]
[94.29783630 -146.63990784]
[97.83750916 -161.21627808]
[101.37717438 -175.79266357]
[104.91684723 -190.36903381]
[108.45652008 -204.94540405]
[111.99619293 -219.52178955]
[114.44192505 -234.32106018]
[115.78015900 -249.26124573]
[117.11839294 -264.20141602]
[118.45662689 -279.14160156]
[111.98136902 -293.57702637]
[120.82328796 -305.56326294]
[122.16152191 -320.50344849]
[107.90181732 -325.39471436]
[95.22740936 -333.55697632]
[84.87516785 -344.51574707]
[77.44695282 -357.63388062]
[73.37464905 -372.14868164]
[72.89499664 -387.21630859]
[76.03588867 -401.96072388]
[82.61471558 -415.52474976]
[92.24900055 -427.11975098]
[104.37860870 -436.07162476]
[118.29834747 -441.85992432]
[133.19894409 -444.14810181]
[148.21408081 -442.80316162]
[162.47080994 -437.90325928]
[175.14027405 -429.73330688]
[185.48587036 -418.76824951]
[192.90612793 -405.64562988]
[196.96963501 -391.12835693]
[197.44015503 -376.06045532]
[194.29032898 -361.31793213]
[187.70327759 -347.75790405]
[178.06196594 -336.16873169]
[165.92692566 -327.22421265]
[152.00367737 -321.44436646]
[137.10169983 -319.16522217]
[135.76347351 -304.22503662]
[142.33444214 -290.85821533]
[133.39680481 -277.80337524]
[132.05857849 -262.86318970]
[130.72033691 -247.92300415]
[129.38211060 -232.98281860]
[139.27670288 -244.25654602]
[153.45050049 -249.16607666]
[168.19850159 -246.42807007]
[179.66560364 -236.75825500]
[184.85433960 -222.68426514]
[182.40838623 -207.88502502]
[172.96711731 -196.22903442]
[158.99844360 -190.76310730]
[144.15374756 -192.91606140]
[132.31341553 -202.12509155]
[126.57257080 -215.98211670]
[123.03289795 -201.40573120]
[119.49322510 -186.82936096]
[115.95355225 -172.25299072]
[112.41387939 -157.67660522]
[108.87420654 -143.10023499]
[105.33453369 -128.52386475]
[101.79486084 -113.94748688]
[100.23434448 -99.02887726]
[100.68094635 -84.03553009]
[101.12755585 -69.04218292]
[101.57415771 -54.04882812]
[116.74307251 -50.89120865]
[130.72671509 -44.19832230]
[142.71391296 -34.35379410]
[152.00820923 -21.92420578]
[158.06829834 -7.62648439]
[160.53958130 7.71344423]
[159.27491760 23.20836639]
[154.34335327 37.96109772]
[146.02636719 51.11642838]
[134.80180359 61.91069412]
[121.31648254 69.71612549]
[106.34882355 74.07733154]
[107.01860809 89.06237030]
[108.13425446 104.02082062]
[109.69477844 118.93942261]
[111.25530243 133.85803223]
[112.81582642 148.77664185]
[114.37635040 163.69523621]
[115.93687439 178.61384583]
[127.09598541 193.26156616]
[119.33034515 208.99884033]
[121.11281586 223.89256287]
[122.89527893 238.78627014]
[129.17326355 225.16323853]
[140.39556885 215.21037292]
[154.67105103 210.60488892]
[169.59405518 212.12289429]
[182.64974976 219.50859070]
[191.63806152 231.51734924]
[195.04429626 246.12547302]
[192.29441833 260.87127686]
[183.85185242 273.26977539]
[171.13931274 281.23165894]
[156.29910278 283.41516113]
[141.83201599 279.45236206]
[130.17605591 270.01104736]
[123.29499054 256.68063354]
[122.17934418 271.63909912]
[128.86880493 285.97653198]
[120.20632172 298.09307861]
[119.09067535 313.05151367]
[117.97502136 328.00997925]
[116.85937500 342.96844482]
[115.74372864 357.92687988]
[130.39712524 361.26388550]
[144.38948059 366.74765015]
[157.40817261 374.25573730]
[169.16236877 383.62036133]
[179.38949585 394.63235474]
[187.86103821 407.04565430]
[194.38777161 420.58300781]
[198.82388306 434.94192505]
[201.07025146 449.80163574]
[201.07669067 464.83020020]
[198.84307861 479.69186401]
[194.41931152 494.05459595]
[187.90419006 507.59750366]
[179.44329834 520.01806641]
[169.22563171 531.03887939]
[157.47946167 540.41357422]
[144.46722412 547.93280029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 193]
[24 192]
[25 191]
[26 190]
[27 189]
[29 187]
[30 186]
[31 172]
[32 171]
[33 170]
[36 168]
[37 167]
[38 166]
[39 165]
[40 164]
[41 163]
[46 162]
[47 161]
[60 149]
[61 148]
[62 147]
[63 146]
[82 145]
[83 144]
[84 143]
[85 142]
[86 141]
[87 140]
[88 139]
[89 138]
[90 127]
[91 126]
[92 125]
[93 124]
[95 122]
[96 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
