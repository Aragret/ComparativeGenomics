%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[100.25878143 858.05773926]
[85.33984375 856.47357178]
[70.51236725 854.18658447]
[55.80943680 851.20190430]
[41.26385880 847.52624512]
[26.90808678 843.16784668]
[12.77415943 838.13629150]
[-1.10638785 832.44287109]
[-14.70258045 826.10034180]
[-27.98408127 819.12280273]
[-40.92125320 811.52581787]
[-53.48522568 803.32641602]
[-65.64797211 794.54278564]
[-77.38233948 785.19458008]
[-88.66215515 775.30267334]
[-99.46224213 764.88909912]
[-109.75850677 753.97711182]
[-119.52796936 742.59106445]
[-128.74882507 730.75634766]
[-137.40051270 718.49945068]
[-145.46372986 705.84759521]
[-152.92045593 692.82910156]
[-159.75408936 679.47296143]
[-165.94935608 665.80902100]
[-171.49243164 651.86779785]
[-176.37095642 637.68029785]
[-180.57405090 623.27832031]
[-184.09231567 608.69384766]
[-186.91790771 593.95953369]
[-189.04454041 579.10821533]
[-190.46745300 564.17303467]
[-191.18347168 549.18731689]
[-191.19099426 534.18450928]
[-190.49000549 519.19805908]
[-189.08207703 504.26147461]
[-186.97033691 489.40802002]
[-184.15951538 474.67086792]
[-180.65588379 460.08291626]
[-176.46723938 445.67666626]
[-171.60295105 431.48431396]
[-166.07385254 417.53750610]
[-159.89228821 403.86737061]
[-153.07206726 390.50439453]
[-145.62840271 377.47842407]
[-137.57788086 364.81851196]
[-128.93849182 352.55288696]
[-119.72949982 340.70895386]
[-109.97145844 329.31314087]
[-99.68614960 318.39083862]
[-88.89650726 307.96643066]
[-77.62661743 298.06320190]
[-65.90163422 288.70324707]
[-53.74770355 279.90744019]
[-41.19195938 271.69540405]
[-28.26241493 264.08544922]
[-14.98791981 257.09460449]
[-1.39809501 250.73841858]
[12.47673512 245.03111267]
[26.60560989 239.98539734]
[40.95700073 235.61254883]
[55.49888611 231.92230225]
[70.19882202 228.92291260]
[85.02399445 226.62107849]
[99.94132996 225.02191162]
[99.04851532 210.04850769]
[98.15570068 195.07510376]
[97.26288605 180.10168457]
[96.37007141 165.12828064]
[95.47724915 150.15487671]
[94.58443451 135.18147278]
[93.69161987 120.20806885]
[81.10083008 109.53849792]
[79.99590302 93.07196045]
[91.04835510 80.81589508]
[89.93270874 65.85744476]
[88.81706238 50.89899063]
[87.70140839 35.94053650]
[76.98336029 20.96706390]
[85.21411896 5.46797895]
[83.87588501 -9.47220612]
[82.53765106 -24.41239166]
[67.53302002 -25.21360397]
[52.79516220 -28.14212799]
[38.62411499 -33.13833618]
[25.30837822 -40.10052109]
[13.11905003 -48.88693237]
[2.30428720 -59.31869507]
[-6.91573572 -71.18342590]
[-14.35331154 -84.23958588]
[-19.85701942 -98.22135925]
[-23.31481171 -112.84409332]
[-24.65629196 -127.81009674]
[-23.85414886 -142.81466675]
[-20.92471504 -157.55235291]
[-15.92762661 -171.72309875]
[-8.96462154 -185.03839111]
[-0.17745478 -197.22718811]
[10.25497627 -208.04130554]
[22.12028122 -217.26058960]
[35.17689896 -224.69735718]
[49.15901184 -230.20019531]
[63.78196335 -233.65708923]
[78.74804688 -234.99763489]
[93.75257111 -234.19456482]
[108.49007416 -231.26422119]
[122.66049957 -226.26625061]
[135.97537231 -219.30242920]
[148.16362000 -210.51451111]
[158.97708130 -200.08140564]
[168.19564819 -188.21553040]
[175.63160706 -175.15844727]
[181.13357544 -161.17599487]
[184.58956909 -146.55282593]
[185.92918396 -131.58666992]
[185.12518311 -116.58219147]
[182.19392395 -101.84487152]
[177.19508362 -87.67475128]
[170.23043823 -74.36030579]
[161.44175720 -62.17261124]
[151.00799561 -51.35978699]
[139.14154053 -42.14196396]
[126.08400726 -34.70681381]
[112.10121155 -29.20570183]
[97.47783661 -25.75062561]
[98.81607056 -10.81044006]
[100.15430450 4.12974501]
[109.23268127 12.12409306]
[110.46985626 24.56005478]
[102.65986633 34.82489014]
[103.77551270 49.78334427]
[104.89115906 64.74179840]
[106.00681305 79.70024872]
[116.52676392 86.77019501]
[121.12232971 98.58266449]
[118.14611816 110.90320587]
[108.66502380 119.31525421]
[109.55784607 134.28865051]
[110.45066071 149.26206970]
[111.34347534 164.23547363]
[112.23628998 179.20887756]
[113.12910461 194.18228149]
[114.02191925 209.15568542]
[114.91474152 224.12908936]
[129.91641235 223.94429016]
[144.91006470 224.46812439]
[159.86227417 225.69944763]
[174.73962402 227.63551331]
[189.50897217 230.27198792]
[204.13731384 233.60301208]
[218.59204102 237.62112427]
[232.84088135 242.31736755]
[246.85206604 247.68125916]
[260.59429932 253.70085144]
[274.03692627 260.36270142]
[287.14993286 267.65191650]
[299.90411377 275.55227661]
[312.27096558 284.04611206]
[324.22286987 293.11450195]
[335.73321533 302.73721313]
[346.77630615 312.89273071]
[357.32748413 323.55844116]
[367.36318970 334.71051025]
[376.86105347 346.32406616]
[385.79986572 358.37319946]
[394.15969849 370.83102417]
[401.92190552 383.66973877]
[409.06912231 396.86071777]
[415.58544922 410.37448120]
[421.45632935 424.18090820]
[426.66864014 438.24914551]
[431.21078491 452.54788208]
[435.07260132 467.04513550]
[438.24548340 481.70858765]
[440.72235107 496.50555420]
[442.49768066 511.40295410]
[443.56750488 526.36755371]
[443.92944336 541.36602783]
[443.58267212 556.36480713]
[442.52801514 571.33050537]
[440.76776123 586.22967529]
[438.30584717 601.02911377]
[435.14779663 615.69580078]
[431.30065918 630.19696045]
[426.77297974 644.50024414]
[421.57489014 658.57379150]
[415.71801758 672.38610840]
[409.21536255 685.90649414]
[402.08148193 699.10467529]
[394.33227539 711.95123291]
[385.98504639 724.41754150]
[377.05841064 736.47570801]
[367.57232666 748.09887695]
[357.54788208 759.26110840]
[347.00750732 769.93743896]
[335.97473145 780.10412598]
[324.47412109 789.73846436]
[312.53137207 798.81896973]
[300.17312622 807.32531738]
[287.42697144 815.23858643]
[274.32131958 822.54107666]
[260.88543701 829.21649170]
[247.14930725 835.25000000]
[233.14356995 840.62805176]
[218.89949036 845.33874512]
[204.44883728 849.37145996]
[189.82385254 852.71728516]
[175.05720520 855.36871338]
[160.18179321 857.31982422]
[145.23086548 858.56628418]
[130.23773193 859.10528564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[70 137]
[71 136]
[74 132]
[75 131]
[76 130]
[77 129]
[79 126]
[80 125]
[81 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
