%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[152.87915039 649.58477783]
[141.39686584 639.92388916]
[130.60064697 629.50183105]
[120.54080963 618.36737061]
[111.26427460 606.57238770]
[102.81428528 594.17175293]
[95.23024750 581.22344971]
[88.54752350 567.78778076]
[82.79726410 553.92730713]
[78.00627899 539.70678711]
[74.19691467 525.19250488]
[71.38692474 510.45205688]
[69.58940887 495.55419922]
[68.81275940 480.56842041]
[69.06058502 465.56457520]
[70.33174133 450.61264038]
[72.62029266 435.78228760]
[75.91557312 421.14266968]
[80.20221710 406.76208496]
[85.46023560 392.70755005]
[91.66512299 379.04461670]
[98.78793335 365.83694458]
[106.79547119 353.14614868]
[115.65039062 341.03140259]
[125.31141663 329.54919434]
[135.73348999 318.75302124]
[146.86802673 308.69326782]
[158.66311646 299.41680908]
[171.06376648 290.96691895]
[184.01214600 283.38296509]
[177.33193970 269.95257568]
[170.65174866 256.52221680]
[158.05604553 248.57252502]
[158.83784485 232.77064514]
[152.15765381 219.34027100]
[145.47746277 205.90989685]
[138.79727173 192.47950745]
[132.11706543 179.04913330]
[116.99100494 170.15144348]
[118.28551483 151.78283691]
[111.40610504 138.45339966]
[104.52668762 125.12397003]
[97.64727783 111.79454041]
[90.57016754 98.56901550]
[83.29694366 85.45032501]
[76.02371216 72.33162689]
[70.56237030 68.60533142]
[68.16291046 63.45367050]
[68.73587036 58.71228409]
[61.85646057 45.38285446]
[48.65173340 36.66816711]
[49.69024277 21.80980873]
[42.81082916 8.48038006]
[35.93141937 -4.84904957]
[22.04436493 0.84648573]
[7.71375418 5.31000042]
[-6.95134735 8.50752354]
[-21.83932877 10.41471958]
[-36.83687973 11.01707363]
[-51.82985687 10.31000042]
[-66.70415497 8.29888248]
[-81.34657288 4.99902630]
[-95.64566040 0.43554458]
[-109.49259949 -5.35683012]
[-122.78200531 -12.33401394]
[-135.41273499 -20.44290543]
[-147.28865051 -29.62178993]
[-158.31938171 -39.80080795]
[-168.42095947 -50.90249252]
[-177.51652527 -62.84234619]
[-185.53683472 -75.52950287]
[-192.42085266 -88.86740875]
[-198.11619568 -102.75453949]
[-202.57951355 -117.08521271]
[-205.77682495 -131.75036621]
[-207.68380737 -146.63836670]
[-208.28594971 -161.63592529]
[-207.57867432 -176.62889099]
[-205.56735229 -191.50317383]
[-202.26728821 -206.14553833]
[-197.70359802 -220.44456482]
[-191.91104126 -234.29142761]
[-184.93367004 -247.58073425]
[-176.82460022 -260.21133423]
[-167.64553833 -272.08712769]
[-157.46636963 -283.11770630]
[-146.36454773 -293.21914673]
[-134.42456055 -302.31454468]
[-121.73728943 -310.33465576]
[-108.39929199 -317.21850586]
[-94.51207733 -322.91363525]
[-80.18134308 -327.37677002]
[-65.51615143 -330.57388306]
[-50.62812042 -332.48065186]
[-35.63055038 -333.08258057]
[-20.63759232 -332.37509155]
[-5.76335049 -330.36355591]
[8.87897205 -327.06329346]
[23.17793465 -322.49938965]
[37.02471161 -316.70663452]
[50.31392288 -309.72909546]
[62.94441986 -301.61984253]
[74.82008362 -292.44061279]
[85.85052490 -282.26129150]
[95.95179749 -271.15933228]
[105.04701996 -259.21920776]
[113.06697083 -246.53182983]
[119.95062256 -233.19374084]
[125.64556885 -219.30644226]
[130.10848999 -204.97564697]
[133.30538940 -190.31040955]
[135.21195984 -175.42234802]
[135.81369019 -160.42477417]
[135.10597229 -145.43182373]
[133.09423828 -130.55761719]
[129.79376221 -115.91533661]
[125.22968292 -101.61643219]
[119.43672180 -87.76973724]
[112.45897675 -74.48062897]
[104.34955597 -61.85024261]
[95.17017365 -49.97471237]
[84.99069214 -38.94441223]
[73.88858032 -28.84329605]
[61.94834137 -19.74823952]
[49.26084900 -11.72846222]
[56.14025879 1.60096705]
[63.01967239 14.93039608]
[75.73233795 22.69167519]
[75.18589020 38.50344086]
[82.06529999 51.83287048]
[89.14240265 65.05839539]
[96.41563416 78.17709351]
[103.68886566 91.29578400]
[108.27302551 93.84518433]
[111.10248566 98.78152466]
[110.97670746 104.91513062]
[117.85611725 118.24456024]
[124.73552704 131.57398987]
[131.61494446 144.90341187]
[143.64262390 149.56149292]
[149.09809875 160.80523682]
[145.54745483 172.36894226]
[152.22764587 185.79931641]
[158.90783691 199.22969055]
[165.58802795 212.66006470]
[172.26821899 226.09045410]
[185.34173584 235.00076294]
[184.08212280 249.84202576]
[190.76231384 263.27239990]
[197.44252014 276.70275879]
[211.30282593 270.95223999]
[225.52323914 266.16094971]
[240.03749084 262.35131836]
[254.77787781 259.54101562]
[269.67568970 257.74319458]
[284.66143799 256.96624756]
[299.66528320 257.21377563]
[314.61727905 258.48461914]
[329.44766235 260.77288818]
[344.08734131 264.06787109]
[358.46801758 268.35421753]
[372.52264404 273.61196899]
[386.18572998 279.81658936]
[399.39352417 286.93911743]
[412.08447266 294.94641113]
[424.19940186 303.80108643]
[435.68182373 313.46188354]
[446.47817993 323.88372803]
[456.53817749 335.01806641]
[465.81484985 346.81295776]
[474.26501465 359.21343994]
[481.84921265 372.16165161]
[488.53213501 385.59725952]
[494.28259277 399.45761108]
[499.07376099 413.67807007]
[502.88330078 428.19235229]
[505.69351196 442.93273926]
[507.49121094 457.83056641]
[508.26806641 472.81634521]
[508.02044678 487.82019043]
[506.74948120 502.77215576]
[504.46112061 517.60253906]
[501.16604614 532.24218750]
[496.87960815 546.62280273]
[491.62176514 560.67742920]
[485.41705322 574.34045410]
[478.29443359 587.54821777]
[470.28704834 600.23913574]
[461.43231201 612.35400391]
[451.77142334 623.83630371]
[441.34948730 634.63262939]
[430.21508789 644.69256592]
[418.42013550 653.96917725]
[406.01959229 662.41918945]
[393.07131958 670.00335693]
[379.63568115 676.68615723]
[365.77529907 682.43652344]
[351.55480957 687.22760010]
[337.04052734 691.03704834]
[322.30007935 693.84716797]
[307.40225220 695.64477539]
[292.41647339 696.42150879]
[277.41262817 696.17376709]
[262.46069336 694.90270996]
[247.63031006 692.61425781]
[232.99069214 689.31909180]
[218.61007690 685.03253174]
[204.55549622 679.77459717]
[190.89251709 673.56982422]
[177.68479919 666.44708252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 150]
[31 149]
[32 148]
[34 146]
[35 145]
[36 144]
[37 143]
[38 142]
[40 139]
[41 138]
[42 137]
[43 136]
[44 133]
[45 132]
[46 131]
[49 130]
[50 129]
[52 127]
[53 126]
[54 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
