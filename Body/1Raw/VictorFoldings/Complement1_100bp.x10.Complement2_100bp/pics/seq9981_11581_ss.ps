%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[19.73204422 840.41235352]
[4.78105402 841.66149902]
[-10.21341801 842.16973877]
[-25.21467781 841.93585205]
[-40.18601227 840.96032715]
[-55.09078598 839.24560547]
[-69.89252472 836.79589844]
[-84.55500793 833.61718750]
[-99.04234314 829.71728516]
[-113.31909180 825.10565186]
[-127.35031128 819.79364014]
[-141.10165405 813.79425049]
[-154.53948975 807.12213135]
[-167.63092041 799.79364014]
[-180.34390259 791.82666016]
[-192.64733887 783.24072266]
[-204.51110840 774.05688477]
[-215.90618896 764.29754639]
[-226.80468750 753.98663330]
[-237.17993164 743.14935303]
[-247.00654602 731.81219482]
[-256.26046753 720.00299072]
[-264.91906738 707.75061035]
[-272.96112061 695.08502197]
[-280.36700439 682.03717041]
[-287.11853027 668.63909912]
[-293.19921875 654.92346191]
[-298.59417725 640.92395020]
[-303.29022217 626.67474365]
[-307.27581787 612.21075439]
[-310.54125977 597.56732178]
[-313.07852173 582.78033447]
[-314.88140869 567.88598633]
[-315.94549561 552.92065430]
[-316.26818848 537.92108154]
[-315.84872437 522.92382812]
[-314.68807983 507.96572876]
[-312.78912354 493.08331299]
[-310.15652466 478.31301880]
[-306.79666138 463.69097900]
[-302.71780396 449.25299072]
[-297.92993164 435.03436279]
[-292.44476318 421.06994629]
[-286.27569580 407.39385986]
[-279.43786621 394.03961182]
[-271.94796753 381.03982544]
[-263.82434082 368.42639160]
[-255.08686829 356.23010254]
[-245.75694275 344.48086548]
[-235.85739136 333.20736694]
[-225.41242981 322.43725586]
[-214.44763184 312.19686890]
[-202.98982239 302.51126099]
[-191.06703186 293.40414429]
[-178.70845032 284.89776611]
[-165.94433594 277.01300049]
[-152.80589294 269.76913452]
[-139.32528687 263.18383789]
[-125.53551483 257.27328491]
[-111.47032166 252.05192566]
[-97.16410828 247.53253174]
[-82.65190887 243.72615051]
[-67.96922302 240.64212036]
[-53.15198898 238.28797913]
[-38.23645782 236.66949463]
[-23.25914192 235.79060364]
[-8.25668526 235.65348816]
[6.73419523 236.25845337]
[21.67681503 237.60404968]
[36.53460693 239.68695068]
[51.27120972 242.50209045]
[54.81088257 227.92572021]
[58.35055542 213.34934998]
[61.89022827 198.77296448]
[65.42990112 184.19659424]
[68.96957397 169.62022400]
[72.50924683 155.04383850]
[60.24869537 163.68553162]
[45.24902725 163.58557129]
[33.10474777 154.78123474]
[28.34537315 140.55630493]
[32.74602890 126.21635437]
[44.66538239 117.10981750]
[59.65781021 116.63320923]
[72.13150787 124.96429443]
[77.43414307 138.99694824]
[82.68086243 124.94448090]
[87.92758179 110.89200592]
[84.72544861 94.42620850]
[97.77988434 83.89254761]
[95.12586975 68.29553223]
[106.68765259 58.90540695]
[111.40778351 44.66741943]
[115.80878448 30.32757187]
[120.20977783 15.98772430]
[124.61077881 1.64787722]
[129.01177979 -12.69196987]
[133.41278076 -27.03181648]
[120.01882172 -33.87091064]
[108.01606750 -42.93208694]
[97.76925659 -53.93999481]
[89.58977509 -66.56010437]
[83.72619629 -80.40892029]
[80.35670471 -95.06557465]
[79.58369446 -110.08468628]
[81.43065643 -125.00982666]
[85.84146118 -139.38743591]
[92.68207550 -152.78062439]
[101.74461365 -164.78234863]
[112.75367737 -175.02790833]
[125.37471771 -183.20596313]
[139.22419739 -189.06796265]
[153.88124084 -192.43579102]
[168.90043640 -193.20710754]
[183.82536316 -191.35845947]
[198.20248413 -186.94601440]
[211.59487915 -180.10388184]
[223.59558105 -171.03997803]
[233.83988953 -160.02975464]
[242.01651001 -147.40779114]
[247.87695312 -133.55764771]
[251.24311829 -118.90022278]
[252.01272583 -103.88094330]
[250.16238403 -88.95622253]
[245.74830627 -74.57960510]
[238.90466309 -61.18797684]
[229.83940125 -49.18830490]
[218.82800293 -38.94524002]
[206.20510864 -30.77005577]
[192.35430908 -24.91118813]
[177.69650269 -21.54668236]
[162.67713928 -20.77877998]
[147.75262451 -22.63081932]
[143.35162354 -8.29097176]
[138.95062256 6.04887533]
[134.54962158 20.38872147]
[130.14863586 34.72856903]
[125.74763489 49.06841660]
[127.06772614 52.33792877]
[126.86978149 56.40927505]
[124.79418945 60.56201172]
[120.81668091 63.94232559]
[123.83097076 78.52873230]
[111.90891266 88.92945862]
[116.25755310 99.73365021]
[112.26515961 110.67449188]
[101.98005676 116.13872528]
[96.73333740 130.19119263]
[91.48661804 144.24366760]
[87.08561707 158.58351135]
[83.54594421 173.15989685]
[80.00627136 187.73626709]
[76.46660614 202.31263733]
[72.92693329 216.88902283]
[69.38726044 231.46539307]
[65.84758759 246.04176331]
[80.23405457 250.29876709]
[94.39239502 255.26202393]
[108.28795624 260.91940308]
[121.88674164 267.25701904]
[135.15545654 274.25942993]
[148.06166077 281.90942383]
[160.57373047 290.18832397]
[172.66108704 299.07589722]
[184.29411316 308.55032349]
[195.44436646 318.58847046]
[206.08454895 329.16577148]
[216.18862915 340.25631714]
[225.73187256 351.83294678]
[234.69093323 363.86740112]
[243.04388428 376.33016968]
[250.77027893 389.19079590]
[257.85119629 402.41775513]
[264.26934814 415.97872925]
[270.00900269 429.84051514]
[275.05612183 443.96917725]
[279.39834595 458.33013916]
[283.02505493 472.88827515]
[285.92733765 487.60797119]
[288.09817505 502.45318604]
[289.53216553 517.38757324]
[290.22586060 532.37463379]
[290.17752075 547.37762451]
[289.38729858 562.35986328]
[287.85711670 577.28472900]
[285.59072876 592.11560059]
[282.59365845 606.81628418]
[278.87322998 621.35076904]
[274.43859863 635.68347168]
[269.30056763 649.77935791]
[263.47174072 663.60388184]
[256.96633911 677.12322998]
[249.80035400 690.30426025]
[241.99127197 703.11486816]
[233.55821228 715.52355957]
[224.52180481 727.50006104]
[214.90419006 739.01495361]
[204.72886658 750.04016113]
[194.02076721 760.54870605]
[182.80607605 770.51483154]
[171.11225891 779.91412354]
[158.96789551 788.72363281]
[146.40275574 796.92175293]
[133.44754028 804.48846436]
[120.13397980 811.40521240]
[106.49465179 817.65515137]
[92.56293488 823.22283936]
[78.37291718 828.09478760]
[63.95932007 832.25903320]
[49.35742950 835.70538330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[86 149]
[87 148]
[88 147]
[90 144]
[92 142]
[93 138]
[94 137]
[95 136]
[96 135]
[97 134]
[98 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
