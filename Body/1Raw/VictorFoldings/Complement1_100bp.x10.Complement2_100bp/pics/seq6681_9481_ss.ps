%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[95.14244843 621.47326660]
[83.54793549 611.94006348]
[72.86837769 601.39196777]
[63.19226456 589.91638184]
[54.59978104 577.60852051]
[47.16212463 564.57025146]
[40.94092941 550.90960693]
[35.98775101 536.73992920]
[32.34362793 522.17846680]
[30.03875923 507.34597778]
[29.09224319 492.36532593]
[29.51192665 477.36068726]
[31.29432869 462.45639038]
[34.42468262 447.77590942]
[38.87704468 433.44094849]
[44.61452103 419.57022095]
[51.58956909 406.27874756]
[59.74439240 393.67657471]
[69.01141357 381.86822510]
[79.31384277 370.95147705]
[90.56630707 361.01684570]
[102.67556763 352.14660645]
[115.54128265 344.41427612]
[129.05682373 337.88394165]
[143.11021423 332.60971069]
[139.13812256 318.14520264]
[135.16603088 303.68066406]
[131.19392395 289.21615601]
[127.22183228 274.75161743]
[117.64694214 286.29812622]
[102.64754486 286.16400146]
[93.28063202 274.44818115]
[96.45114899 259.78707886]
[109.82190704 252.98832703]
[123.53540802 259.06246948]
[120.65013123 244.34259033]
[117.76486206 229.62269592]
[114.87958527 214.90280151]
[111.99431610 200.18292236]
[101.95339203 189.18159485]
[106.89172363 174.15084839]
[104.00644684 159.43095398]
[93.96552277 148.42962646]
[98.90385437 133.39888000]
[96.01858521 118.67898560]
[84.05237579 110.50854492]
[81.26529694 96.28960419]
[89.26152802 84.20628357]
[86.37625122 69.48639679]
[83.49098206 54.76650238]
[80.60570526 40.04661179]
[77.39243317 25.39482307]
[73.85276031 10.81844807]
[70.31308746 -3.75792718]
[66.77341461 -18.33430290]
[63.23374557 -32.91067886]
[58.95411301 -37.95014954]
[58.00449753 -43.55329895]
[59.81255722 -47.97370148]
[56.70844650 -62.64900208]
[46.34362030 -70.32579803]
[44.06032181 -82.61279297]
[50.54636002 -92.82347107]
[47.66108704 -107.54335785]
[44.77581406 -122.26325226]
[41.89054108 -136.98313904]
[38.13423920 -151.50520325]
[33.52022934 -165.77793884]
[28.90622139 -180.05067444]
[24.29221153 -194.32339478]
[9.54190445 -191.49356079]
[-5.44436216 -190.49784851]
[-20.43939781 -191.35136414]
[-35.21588516 -194.04118347]
[-49.54981232 -198.52650452]
[-63.22388077 -204.73934937]
[-76.03079987 -212.58552551]
[-87.77641296 -221.94609070]
[-98.28266907 -232.67912292]
[-107.39028931 -244.62194824]
[-114.96119690 -257.59347534]
[-120.88063812 -271.39709473]
[-125.05886078 -285.82354736]
[-127.43252563 -300.65408325]
[-127.96565247 -315.66394043]
[-126.65016174 -330.62551880]
[-123.50598907 -345.31204224]
[-118.58080292 -359.50085449]
[-111.94927216 -372.97683716]
[-103.71191406 -385.53573608]
[-93.99362183 -396.98712158]
[-82.94171906 -407.15740967]
[-70.72373962 -415.89245605]
[-57.52491379 -423.05978394]
[-43.54533386 -428.55075073]
[-28.99691772 -432.28213501]
[-14.10022354 -434.19738770]
[0.91892099 -434.26742554]
[15.83282948 -432.49121094]
[30.41541100 -428.89566040]
[44.44559860 -423.53530884]
[57.71069717 -416.49139404]
[70.00960541 -407.87069702]
[81.15589142 -397.80389404]
[90.98056030 -386.44363403]
[99.33468628 -373.96212769]
[106.09161377 -360.54858398]
[111.14891815 -346.40631104]
[114.42992401 -331.74975586]
[115.88490295 -316.80108643]
[115.49178314 -301.78692627]
[113.25653839 -286.93487549]
[109.21304321 -272.47012329]
[103.42259979 -258.61187744]
[95.97299957 -245.57029724]
[86.97715759 -233.54306030]
[76.57146454 -222.71249390]
[64.91365814 -213.24279785]
[52.18047714 -205.27751160]
[38.56494522 -198.93740845]
[43.17895508 -184.66467285]
[47.79296494 -170.39193726]
[52.40697479 -156.11921692]
[58.33015060 -169.90020752]
[71.16304016 -177.66661072]
[86.11928558 -176.52174377]
[97.62057495 -166.89260864]
[101.37722015 -152.37065125]
[95.98808289 -138.37217712]
[83.46317291 -130.11828613]
[68.47397614 -130.68746948]
[56.61043167 -139.86840820]
[59.49570465 -125.14852142]
[62.38097763 -110.42863464]
[65.26625061 -95.70874023]
[77.49617004 -83.12319946]
[71.38375092 -65.75311279]
[74.48786163 -51.07781219]
[77.81011963 -36.45035172]
[81.34979248 -21.87397575]
[84.88946533 -7.29759979]
[88.42913818 7.27877569]
[91.96881104 21.85515022]
[94.77352142 23.99195099]
[96.68260956 27.59340286]
[97.01893616 32.22375870]
[95.32559967 37.16133881]
[98.21086884 51.88122940]
[101.09614563 66.60112000]
[103.98141479 81.32101440]
[115.94762421 89.49145508]
[118.73470306 103.71039581]
[110.73847198 115.79371643]
[113.62374878 130.51361084]
[123.87104797 142.56779480]
[118.72634125 156.54568481]
[121.61161041 171.26556396]
[131.85891724 183.31976318]
[126.71421051 197.29763794]
[129.59948730 212.01753235]
[132.48475647 226.73742676]
[135.37002563 241.45732117]
[138.25529480 256.17721558]
[141.68635559 270.77954102]
[145.65844727 285.24404907]
[149.63055420 299.70858765]
[153.60264587 314.17309570]
[157.57473755 328.63763428]
[172.35079956 325.99502563]
[187.30593872 324.70703125]
[202.31625366 324.78430176]
[217.25733948 326.22625732]
[232.00538635 329.02093506]
[246.43820190 333.14514160]
[260.43618774 338.56469727]
[273.88333130 345.23474121]
[286.66821289 353.09997559]
[298.68490601 362.09521484]
[309.83383179 372.14593506]
[320.02255249 383.16885376]
[329.16671753 395.07263184]
[337.19052124 407.75860596]
[344.02743530 421.12167358]
[349.62088013 435.05108643]
[353.92443848 449.43145752]
[356.90249634 464.14358521]
[358.53033447 479.06555176]
[358.79452515 494.07373047]
[357.69281006 509.04373169]
[355.23434448 523.85156250]
[351.43951416 538.37445068]
[346.33978271 552.49206543]
[339.97735596 566.08746338]
[332.40496826 579.04797363]
[323.68539429 591.26617432]
[313.89089966 602.64080811]
[303.10260010 613.07769775]
[291.40991211 622.49023438]
[278.90972900 630.80053711]
[265.70565796 637.93969727]
[251.90707397 643.84851074]
[237.62834167 648.47808838]
[222.98776245 651.79003906]
[208.10668945 653.75689697]
[193.10839844 654.36242676]
[178.11718750 653.60150146]
[163.25729370 651.48052979]
[148.65182495 648.01702881]
[134.42182922 643.23974609]
[120.68522644 637.18823242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[41 157]
[42 156]
[44 154]
[45 153]
[48 150]
[49 149]
[50 148]
[51 147]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[59 138]
[60 137]
[63 135]
[64 134]
[65 133]
[66 132]
[67 123]
[68 122]
[69 121]
[70 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
