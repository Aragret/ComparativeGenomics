%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[203.22370911 486.22256470]
[216.16908264 478.45599365]
[212.19697571 463.99145508]
[208.22488403 449.52694702]
[204.25279236 435.06240845]
[199.63877869 420.78967285]
[187.93847656 411.57272339]
[190.35998535 395.93792725]
[185.11326599 381.88546753]
[173.41294861 372.66851807]
[175.83445740 357.03372192]
[170.58773804 342.98126221]
[165.34101868 328.92877197]
[160.09429932 314.87631226]
[154.84757996 300.82385254]
[149.60087585 286.77136230]
[144.35415649 272.71890259]
[137.15841675 285.88024902]
[122.80315399 290.23074341]
[109.51172638 283.27816772]
[104.89806366 269.00534058]
[111.60507202 255.58833313]
[125.79067993 250.71304321]
[139.32809448 257.17153931]
[135.35598755 242.70701599]
[122.32421875 235.58602905]
[118.08989716 220.97352600]
[125.64740753 207.35289001]
[121.67531586 192.88836670]
[117.70321655 178.42384338]
[113.73112488 163.95932007]
[109.75902557 149.49479675]
[105.14501953 135.22206116]
[99.89830017 121.16958618]
[87.82302856 117.31713104]
[80.11286163 107.25695801]
[79.53169250 94.59536743]
[86.28784180 83.87119293]
[81.25093079 69.74216461]
[76.21401215 55.61313248]
[71.17709351 41.48410416]
[59.25503922 31.08337593]
[62.26932907 16.49696732]
[44.69959641 16.01586914]
[28.69408226 8.83869267]
[16.69635963 -3.90912938]
[10.52671528 -20.25398254]
[11.10600376 -37.67959976]
[18.31831169 -53.51442719]
[31.03288078 -65.34120178]
[25.37009430 -79.23123169]
[19.70730782 -93.12126160]
[14.04452133 -107.01128387]
[8.38173485 -120.90131378]
[-3.99284768 -130.75932312]
[-1.63288212 -145.46577454]
[-7.29566860 -159.35580444]
[-8.58030891 -144.41090393]
[-13.96965218 -130.41252136]
[-23.03867149 -118.46459198]
[-35.07214737 -109.50939941]
[-49.12106705 -104.25318146]
[-64.07747650 -103.11046600]
[-78.76184845 -106.17137909]
[-92.01612091 -113.19451141]
[-102.79499054 -123.62599182]
[-110.24840546 -136.64315796]
[-113.78855133 -151.21942139]
[-113.13623810 -166.20523071]
[-108.34291077 -180.41874695]
[-99.78659058 -192.73902893]
[-88.14206696 -202.19445801]
[-74.32767487 -208.03932190]
[-59.43286896 -209.81268311]
[-44.63232422 -207.37469482]
[-31.09326744 -200.91760254]
[-19.88344765 -190.95065308]
[-11.88549900 -178.25672913]
[-13.22373295 -193.19691467]
[-14.56196785 -208.13710022]
[-25.50176048 -222.94934082]
[-17.50267792 -238.56924438]
[-19.06320000 -253.48785400]
[-20.62372398 -268.40646362]
[-22.18424606 -283.32507324]
[-23.74477005 -298.24365234]
[-31.28608322 -285.27722168]
[-44.25084305 -277.73303223]
[-59.25009537 -277.58309937]
[-72.36306763 -284.86663818]
[-80.16206360 -297.67974854]
[-80.60844421 -312.67309570]
[-73.58551788 -325.92749023]
[-60.92907715 -333.97821045]
[-45.94747543 -334.72088623]
[-32.55686569 -327.96133423]
[-24.25780869 -315.46731567]
[-23.58802414 -330.45236206]
[-22.91823959 -345.43740845]
[-22.24845314 -360.42245483]
[-35.88911819 -367.19387817]
[-45.59129333 -378.93215942]
[-49.67402267 -393.60360718]
[-47.42994690 -408.66629028]
[-39.24786377 -421.51046753]
[-26.54537201 -429.91085815]
[-11.52325249 -432.41201782]
[3.21581984 -428.58062744]
[15.11821270 -419.08047485]
[22.12176514 -405.55752563]
[23.01306725 -390.35470581]
[17.63769722 -376.10601807]
[6.92697048 -365.28012085]
[-7.26341534 -359.75265503]
[-7.93320036 -344.76760864]
[-8.60298538 -329.78259277]
[-9.27277088 -314.79754639]
[-8.82616425 -299.80419922]
[-7.26564169 -284.88558960]
[-5.70511866 -269.96697998]
[-4.14459562 -255.04837036]
[-2.58407259 -240.12977600]
[6.61232376 -232.27146912]
[8.03451633 -219.85530090]
[0.37821746 -209.47532654]
[1.71645164 -194.53514099]
[3.05468583 -179.59495544]
[6.59435844 -165.01858521]
[12.25714493 -151.12855530]
[24.22668648 -142.26406860]
[22.27176094 -126.56410217]
[27.93454933 -112.67407227]
[33.59733582 -98.78404236]
[39.26012039 -84.89402008]
[44.92290878 -71.00399017]
[57.46710587 -72.00363922]
[69.80426025 -69.43429565]
[80.93806458 -63.49318314]
[89.96648407 -54.65022659]
[96.15489197 -43.61090469]
[98.99576569 -31.25996590]
[98.25037384 -18.59052849]
[93.96872711 -6.62422705]
[86.48643494 3.67117572]
[76.39836121 11.46005154]
[87.96014404 20.85017586]
[85.30612183 36.44718933]
[90.34304047 50.57621765]
[95.37995911 64.70524597]
[100.41687012 78.83427429]
[115.48545074 85.56523132]
[121.14282990 101.06884003]
[113.95076752 115.92286682]
[119.19748688 129.97534180]
[126.39322662 116.81398010]
[140.74848938 112.46350098]
[154.03991699 119.41605377]
[158.65357971 133.68888855]
[151.94656372 147.10589600]
[137.76095581 151.98120117]
[124.22354889 145.52268982]
[128.19564819 159.98721313]
[132.16773987 174.45173645]
[136.13983154 188.91625977]
[140.11193848 203.38078308]
[153.56568909 211.23153687]
[157.38790894 225.95719910]
[149.82051086 238.73492432]
[153.79261780 253.19944763]
[158.40661621 267.47216797]
[163.65333557 281.52465820]
[168.90005493 295.57711792]
[174.14677429 309.62957764]
[179.39349365 323.68206787]
[184.64021301 337.73452759]
[189.88693237 351.78701782]
[201.96252441 362.00906372]
[199.16572571 376.63873291]
[204.41244507 390.69122314]
[216.48803711 400.91329956]
[213.69125366 415.54296875]
[220.88699341 402.38159180]
[235.24224854 398.03112793]
[248.53367615 404.98367310]
[253.14733887 419.25653076]
[246.44032288 432.67352295]
[232.25471497 437.54882812]
[218.71731567 431.09033203]
[222.68940735 445.55484009]
[226.66151428 460.01937866]
[230.63360596 474.48388672]
[245.72990417 474.54995728]
[260.24822998 478.68762207]
[273.11126709 486.58984375]
[283.36447144 497.67022705]
[290.24697876 511.10650635]
[293.24807739 525.90161133]
[292.14505005 540.95770264]
[287.01974487 555.15753174]
[278.25250244 567.44726562]
[266.49392700 576.91503906]
[252.61657715 582.85821533]
[237.65022278 584.83581543]
[222.70547485 582.70098877]
[208.89134216 576.61230469]
[197.23292542 567.02148438]
[188.59535217 554.64025879]
[183.61958313 540.38739014]
[182.67485046 525.32055664]
[185.83126831 510.55776978]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[5 188]
[6 181]
[8 179]
[9 178]
[11 176]
[12 175]
[13 174]
[14 173]
[15 172]
[16 171]
[17 170]
[24 169]
[25 168]
[28 165]
[29 164]
[30 163]
[31 162]
[32 161]
[33 154]
[34 153]
[38 150]
[39 149]
[40 148]
[41 147]
[43 145]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[56 129]
[57 128]
[78 127]
[79 126]
[80 125]
[82 122]
[83 121]
[84 120]
[85 119]
[86 118]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
