%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[88.60758209 489.19506836]
[78.86151123 500.64593506]
[67.32031250 510.28485107]
[54.31605148 517.83453369]
[40.22288895 523.07769775]
[25.44631195 525.86352539]
[10.41147518 526.11181641]
[-4.44904232 523.81555176]
[-18.70767403 519.04064941]
[-31.95416832 511.92459106]
[-43.80739975 502.67205811]
[-53.92632294 491.54934692]
[-62.01980209 478.87637329]
[-67.85497284 465.01785278]
[-71.26393127 450.37246704]
[-72.14861298 435.36163330]
[-70.48355865 420.41723633]
[-66.31666565 405.96920776]
[-59.76783752 392.43328857]
[-51.02548599 380.19894409]
[-40.34115219 369.61816406]
[-28.02224350 360.99539185]
[-14.42320061 354.57867432]
[0.06470545 350.55270386]
[15.02462864 349.03323364]
[30.02614212 350.06405640]
[33.56581497 335.48770142]
[37.10548782 320.91131592]
[40.64516068 306.33493042]
[44.18483353 291.75857544]
[47.72450638 277.18218994]
[43.20907593 262.98852539]
[53.98440170 251.40393066]
[57.52407455 236.82754517]
[61.06374741 222.25117493]
[64.60341644 207.67480469]
[68.14308929 193.09841919]
[63.62766266 178.90475464]
[74.40299225 167.32015991]
[66.49645996 159.09501648]
[63.51135635 147.95927429]
[66.30101776 136.64945984]
[74.28471375 128.00299072]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[103.94349670 57.31705093]
[107.91558838 42.85252762]
[104.10887146 27.49611092]
[114.94023132 17.27206993]
[118.91232300 2.80754566]
[115.10560608 -12.54886913]
[125.93696594 -22.77291107]
[113.84009552 -13.90353870]
[98.87532806 -12.87597084]
[85.67967224 -20.00860977]
[78.34192657 -33.09132767]
[79.13578796 -48.07030869]
[87.81526184 -60.30414581]
[101.69091797 -66.00205231]
[116.46323395 -63.39847183]
[127.55484772 -53.30015564]
[131.52890015 -38.83591080]
[137.39785767 -52.64008713]
[135.67691040 -68.36741638]
[147.77709961 -77.05272675]
[153.64605713 -90.85690308]
[159.51501465 -104.66107941]
[165.38398743 -118.46525574]
[151.98384094 -125.21768188]
[139.04890442 -132.82333374]
[126.63339233 -141.25032043]
[114.78940582 -150.46330261]
[103.56661224 -160.42361450]
[93.01208496 -171.08947754]
[83.17009735 -182.41618347]
[74.08192444 -194.35620117]
[65.78569031 -206.85946655]
[58.31619263 -219.87351990]
[51.70476151 -233.34376526]
[45.97912598 -247.21374512]
[41.16330338 -261.42523193]
[37.27748871 -275.91867065]
[34.33798599 -290.63320923]
[32.35712051 -305.50720215]
[31.34320068 -320.47821045]
[31.30048370 -335.48342896]
[32.22914505 -350.45996094]
[34.12528992 -365.34497070]
[36.98096466 -380.07601929]
[40.78419495 -394.59133911]
[45.51902771 -408.83004761]
[51.16559982 -422.73239136]
[57.70022964 -436.24005127]
[65.09550476 -449.29641724]
[73.32041168 -461.84671021]
[82.34045410 -473.83828735]
[92.11779022 -485.22085571]
[102.61141968 -495.94665527]
[113.77732086 -505.97070312]
[125.56866455 -515.25097656]
[137.93598938 -523.74847412]
[150.82742310 -531.42767334]
[164.18888855 -538.25628662]
[177.96435547 -544.20568848]
[192.09603882 -549.25091553]
[206.52467346 -553.37084961]
[221.18971252 -556.54815674]
[236.02967834 -558.76953125]
[250.98229980 -560.02563477]
[265.98489380 -560.31127930]
[280.97448730 -559.62518311]
[295.88824463 -557.97021484]
[310.66357422 -555.35339355]
[325.23855591 -551.78558350]
[339.55203247 -547.28186035]
[353.54394531 -541.86108398]
[367.15563965 -535.54595947]
[380.33001709 -528.36303711]
[393.01181030 -520.34234619]
[405.14782715 -511.51760864]
[416.68716431 -501.92578125]
[427.58142090 -491.60717773]
[437.78488159 -480.60498047]
[447.25479126 -468.96542358]
[455.95141602 -456.73727417]
[463.83828735 -443.97183228]
[470.88229370 -430.72265625]
[477.05389404 -417.04528809]
[482.32723999 -402.99713135]
[486.68017578 -388.63708496]
[490.09445190 -374.02539062]
[492.55575562 -359.22332764]
[494.05377197 -344.29299927]
[494.58218384 -329.29699707]
[494.13882446 -314.29824829]
[492.72549438 -299.35968018]
[490.34817505 -284.54388428]
[487.01681519 -269.91308594]
[482.74536133 -255.52857971]
[477.55178833 -241.45074463]
[471.45782471 -227.73860168]
[464.48907471 -214.44969177]
[456.67474365 -201.63972473]
[448.04760742 -189.36245728]
[438.64382935 -177.66937256]
[428.50289917 -166.60951233]
[417.66735840 -156.22926331]
[406.18258667 -146.57218933]
[394.09683228 -137.67875671]
[381.46072388 -129.58628845]
[368.32730103 -122.32874298]
[354.75164795 -115.93653870]
[340.79067993 -110.43648529]
[326.50299072 -105.85166931]
[311.94845581 -102.20130920]
[297.18820190 -99.50071716]
[282.28405762 -97.76122284]
[267.29858398 -96.99011993]
[252.29463196 -97.19065094]
[237.33512878 -98.36196136]
[222.48280334 -100.49914551]
[207.79998779 -103.59324646]
[193.34822083 -107.63127136]
[179.18815613 -112.59629059]
[173.31919861 -98.79211426]
[167.45024109 -84.98793793]
[161.58128357 -71.18376160]
[163.72203064 -56.44380188]
[151.20204163 -46.77112579]
[145.33308411 -32.96694946]
[140.40148926 -18.80081558]
[144.49230957 -4.47899961]
[133.37684631 6.77964211]
[129.40475464 21.24416542]
[133.49557495 35.56598282]
[122.38011932 46.82462311]
[118.40802002 61.28914642]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[110.02052307 144.31425476]
[105.15773773 162.29386902]
[88.97936249 170.85983276]
[93.24161530 186.09609985]
[82.71946716 196.63809204]
[79.17979431 211.21447754]
[75.64012146 225.79084778]
[72.10044861 240.36721802]
[68.56077576 254.94360352]
[72.82302094 270.17987061]
[62.30088043 280.72186279]
[58.76120758 295.29824829]
[55.22153473 309.87460327]
[51.68186188 324.45098877]
[48.14218903 339.02737427]
[44.60251617 353.60372925]
[58.40605545 359.56784058]
[71.00301361 367.77908325]
[82.03095245 378.00125122]
[91.17257690 389.94021606]
[98.16486359 403.25244141]
[102.80662537 417.55496216]
[104.96431732 432.43624878]
[104.57585907 447.46810913]
[101.65242004 462.21807861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 201]
[27 200]
[28 199]
[29 198]
[30 197]
[31 196]
[33 194]
[34 193]
[35 192]
[36 191]
[37 190]
[39 188]
[44 185]
[45 184]
[47 182]
[48 181]
[49 180]
[50 179]
[52 177]
[53 176]
[55 174]
[65 173]
[66 172]
[68 170]
[69 169]
[70 168]
[71 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
