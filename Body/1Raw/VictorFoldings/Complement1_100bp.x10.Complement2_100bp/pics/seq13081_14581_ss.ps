%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[89.01786041 933.58892822]
[74.05735779 932.46667480]
[59.16226578 930.67443848]
[44.36257935 928.21569824]
[29.68810844 925.09545898]
[15.16840172 921.31994629]
[0.83270258 916.89685059]
[-13.29012012 911.83508301]
[-27.17162323 906.14471436]
[-40.78385544 899.83734131]
[-54.09939575 892.92559814]
[-67.09143829 885.42340088]
[-79.73381042 877.34582520]
[-92.00105286 868.70922852]
[-103.86846924 859.53100586]
[-115.31214905 849.82952881]
[-126.30905151 839.62445068]
[-136.83703613 828.93621826]
[-146.87487793 817.78643799]
[-156.40238953 806.19757080]
[-165.40037537 794.19287109]
[-173.85072327 781.79656982]
[-181.73638916 769.03363037]
[-189.04150391 755.92980957]
[-195.75137329 742.51135254]
[-201.85246277 728.80541992]
[-207.33248901 714.83959961]
[-212.18041992 700.64190674]
[-216.38650513 686.24102783]
[-219.94224548 671.66595459]
[-222.84051514 656.94604492]
[-225.07543945 642.11090088]
[-226.64254761 627.19042969]
[-227.53868103 612.21472168]
[-227.76200867 597.21386719]
[-227.31211853 582.21807861]
[-226.18988037 567.25756836]
[-224.39758301 552.36242676]
[-221.93881226 537.56280518]
[-218.81854248 522.88830566]
[-215.04304504 508.36862183]
[-210.61991882 494.03292847]
[-205.55807495 479.91009521]
[-199.86772156 466.02862549]
[-193.56028748 452.41638184]
[-186.64851379 439.10086060]
[-179.14628601 426.10885620]
[-171.06874084 413.46649170]
[-162.43211365 401.19924927]
[-153.25382996 389.33184814]
[-143.55235291 377.88818359]
[-133.34722900 366.89132690]
[-122.65900421 356.36334229]
[-111.50920868 346.32553101]
[-99.92028809 336.79803467]
[-87.91559601 327.80007935]
[-75.51929474 319.34976196]
[-62.75635147 311.46411133]
[-49.65247345 304.15902710]
[-36.23404694 297.44918823]
[-22.52809525 291.34811401]
[-8.56222248 285.86810303]
[5.63544703 281.02020264]
[20.03632164 276.81414795]
[34.61140060 273.25842285]
[49.33132935 270.36019897]
[64.16646576 268.12530518]
[79.08692932 266.55822754]
[94.06268311 265.66210938]
[93.83935547 250.66377258]
[93.61602783 235.66543579]
[93.39270020 220.66709900]
[85.46676636 208.05644226]
[92.99774170 194.14260864]
[92.77441406 179.14425659]
[82.36381531 171.55157471]
[78.16449738 159.16416931]
[81.92176819 146.43258667]
[92.47884369 138.06820679]
[92.47884369 123.06820679]
[92.47884369 108.06820679]
[80.18817139 116.66701508]
[65.75973511 112.56575775]
[59.82964325 98.78773499]
[66.76933289 85.48958588]
[81.46312714 82.47421265]
[93.07859802 91.96295166]
[94.19424438 77.00449371]
[95.30989838 62.04604340]
[96.42554474 47.08758926]
[93.90354919 40.97603607]
[94.72351074 35.35245132]
[97.80362701 31.70252991]
[99.36415100 16.78392410]
[100.92467499 1.86531949]
[102.37409210 -13.06448936]
[103.71232605 -28.00467491]
[97.23706818 -42.44010544]
[106.07898712 -54.42633438]
[92.15872955 -60.34930038]
[80.75139618 -70.28549957]
[72.97457886 -83.26148987]
[69.59015656 -98.00600433]
[70.92971039 -113.07454681]
[76.86199951 -126.99083710]
[86.80584717 -138.39149475]
[99.78704071 -146.15962219]
[114.53382874 -149.53416443]
[129.60145569 -148.18450928]
[143.51377869 -142.24290466]
[154.90777588 -132.29142761]
[162.66719055 -119.30502319]
[166.03186035 -104.55597687]
[164.67210388 -89.48925018]
[158.72117615 -75.58092499]
[148.76205444 -64.19359589]
[135.77046204 -56.44287491]
[121.01917267 -53.08810043]
[127.59014893 -39.72129440]
[118.65251160 -26.66644096]
[117.31427765 -11.72625542]
[119.84849548 -4.78366709]
[115.84327698 3.42584252]
[114.28275299 18.34444809]
[112.72222900 33.26305389]
[111.38399506 48.20323563]
[110.26834869 63.16168976]
[109.15270233 78.12014008]
[108.03704834 93.07859802]
[107.47884369 108.06820679]
[107.47884369 123.06820679]
[107.47884369 138.06820679]
[120.07298279 150.20932007]
[119.99131012 167.36474609]
[107.77275085 178.92092896]
[107.99607849 193.91928101]
[115.93798828 207.60272217]
[108.39103699 220.44377136]
[108.61436462 235.44210815]
[108.83769226 250.44044495]
[109.06101990 265.43878174]
[124.05680847 265.88861084]
[139.01731873 267.01074219]
[153.91241455 268.80297852]
[168.71211243 271.26165771]
[183.38659668 274.38183594]
[197.90631104 278.15725708]
[212.24203491 282.58029175]
[226.36486816 287.64205933]
[240.24639893 293.33233643]
[253.85865784 299.63967896]
[267.17422485 306.55139160]
[280.16629028 314.05352783]
[292.80868530 322.13101196]
[305.07595825 330.76757812]
[316.94342041 339.94580078]
[328.38714600 349.64721680]
[339.38409424 359.85226440]
[349.91210938 370.54043579]
[359.94998169 381.69018555]
[369.47753906 393.27902222]
[378.47558594 405.28369141]
[386.92596436 417.67993164]
[394.81167603 430.44284058]
[402.11685181 443.54666138]
[408.82675171 456.96505737]
[414.92791748 470.67095947]
[420.40798950 484.63681030]
[425.25598145 498.83444214]
[429.46209717 513.23529053]
[433.01791382 527.81036377]
[435.91622925 542.53027344]
[438.15121460 557.36541748]
[439.71838379 572.28582764]
[440.61456299 587.26159668]
[440.83795166 602.26245117]
[440.38812256 617.25823975]
[439.26593018 632.21875000]
[437.47369385 647.11389160]
[435.01498413 661.91357422]
[431.89477539 676.58801270]
[428.11932373 691.10772705]
[423.69625854 705.44348145]
[418.63446045 719.56628418]
[412.94415283 733.44781494]
[406.63677979 747.06005859]
[399.72506714 760.37561035]
[392.22290039 773.36767578]
[384.14538574 786.01000977]
[375.50881958 798.27728271]
[366.33056641 810.14471436]
[356.62911987 821.58843994]
[346.42404175 832.58532715]
[335.73587036 843.11334229]
[324.58612061 853.15124512]
[312.99722290 862.67877197]
[300.99255371 871.67675781]
[288.59628296 880.12713623]
[275.83337402 888.01281738]
[262.72952271 895.31799316]
[249.31112671 902.02783203]
[235.60520935 908.12896729]
[221.63935852 913.60900879]
[207.44169617 918.45697021]
[193.04084778 922.66308594]
[178.46577454 926.21887207]
[163.74586487 929.11718750]
[148.91073608 931.35211182]
[133.99026489 932.91925049]
[119.01452637 933.81542969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 141]
[70 140]
[71 139]
[72 138]
[74 136]
[75 135]
[79 132]
[80 131]
[81 130]
[87 129]
[88 128]
[89 127]
[90 126]
[93 125]
[94 124]
[95 123]
[96 121]
[97 120]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
