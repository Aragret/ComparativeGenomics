%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[24.08447838 828.94763184]
[9.94080448 833.97058105]
[-4.57789850 837.77600098]
[-19.36701965 840.33642578]
[-34.32000351 841.63336182]
[-49.32910919 841.65759277]
[-64.28619385 840.40881348]
[-79.08349609 837.89605713]
[-93.61438751 834.13751221]
[-107.77417755 829.16009521]
[-121.46084595 822.99987793]
[-134.57577515 815.70104980]
[-147.02447510 807.31628418]
[-158.71723938 797.90606689]
[-169.56982422 787.53808594]
[-179.50404358 776.28704834]
[-188.44830322 764.23406982]
[-196.33818054 751.46600342]
[-203.11682129 738.07482910]
[-208.73536682 724.15698242]
[-213.15336609 709.81286621]
[-216.33894348 695.14569092]
[-218.26919556 680.26116943]
[-218.93017578 665.26660156]
[-218.31713867 650.27001953]
[-216.43450928 635.37945557]
[-213.29583740 620.70214844]
[-208.92373657 606.34393311]
[-203.34971619 592.40820312]
[-196.61393738 578.99542236]
[-188.76492310 566.20214844]
[-179.85923767 554.12066650]
[-169.96104431 542.83795166]
[-159.14167786 532.43530273]
[-147.47904968 522.98773193]
[-135.05723572 514.56323242]
[-121.96571350 507.22250366]
[-108.29881287 501.01849365]
[-94.15501404 495.99588013]
[-79.63620758 492.19085693]
[-64.84702301 489.63082886]
[-49.89400482 488.33422852]
[-34.88489914 488.31042480]
[-19.92784691 489.55960083]
[-5.13061285 492.07269287]
[-1.37431204 477.55065918]
[2.38198876 463.02859497]
[6.03007650 448.47897339]
[9.56974888 433.90258789]
[13.10942078 419.32620239]
[-0.68182516 412.26449585]
[-12.39395428 402.10757446]
[-21.34633636 389.44018555]
[-27.01740074 374.99313354]
[-29.07502747 359.60107422]
[-27.39598846 344.15432739]
[-22.07331848 329.54745483]
[-13.41118050 316.62725830]
[-1.90747416 306.14395142]
[11.77477264 298.70736694]
[26.84562302 294.75158691]
[42.43383026 294.50958252]
[45.75609207 279.88214111]
[49.07835007 265.25466919]
[52.40061188 250.62721252]
[55.72286987 235.99975586]
[50.99662018 221.87489319]
[61.59827423 210.13114929]
[64.92053223 195.50367737]
[63.54244232 193.06257629]
[63.04827499 189.92849731]
[63.70681000 186.43540955]
[65.66109467 183.00827026]
[68.90051270 180.11686707]
[73.08752441 165.71308899]
[77.27453613 151.30931091]
[81.46154785 136.90553284]
[85.64855957 122.50174713]
[89.83557129 108.09796143]
[93.59186554 93.57590485]
[96.91413116 78.94844055]
[100.01824188 64.27313995]
[102.90351105 49.55324936]
[105.78878021 34.83335876]
[108.67405701 20.11346626]
[103.73572540 5.08271646]
[113.77664948 -5.91860628]
[108.83831787 -20.94935608]
[118.87924194 -31.95067978]
[121.76451874 -46.67057037]
[119.98664093 -53.03851318]
[121.46903992 -58.52481461]
[124.96105957 -61.78285980]
[128.28330994 -76.41032410]
[131.60557556 -91.03778076]
[134.92784119 -105.66523743]
[138.25009155 -120.29270172]
[124.47148132 -126.33805847]
[112.08611298 -134.88200378]
[101.54170227 -145.61569214]
[93.21943665 -158.15109253]
[87.42015076 -172.03506470]
[84.35348511 -186.76571655]
[84.13030243 -201.81054688]
[86.75867462 -216.62567139]
[92.14357758 -230.67556763]
[100.09035492 -243.45230103]
[110.31173706 -254.49403381]
[122.43822479 -263.40161133]
[136.03146362 -269.85299683]
[150.60005188 -273.61502075]
[165.61734009 -274.55166626]
[180.54048157 -272.62905884]
[194.83000183 -267.91674805]
[207.96936035 -260.58502197]
[219.48355103 -250.89895630]
[228.95635986 -239.20869446]
[236.04533386 -225.93681335]
[240.49424744 -211.56309509]
[242.14224243 -196.60713196]
[240.92974854 -181.60958862]
[236.90060425 -167.11260986]
[230.20046997 -153.64024353]
[221.07153320 -141.67951965]
[209.84379578 -131.66279602]
[196.92315674 -123.95219421]
[182.77667236 -118.82642365]
[167.91574097 -116.47078705]
[152.87756348 -116.97044373]
[149.55529785 -102.34297943]
[146.23303223 -87.71552277]
[142.91078186 -73.08805847]
[139.58851624 -58.46060181]
[136.48440552 -43.78529739]
[133.59913635 -29.06540680]
[138.74383545 -15.08752155]
[128.49653625 -3.03333378]
[133.64125061 10.94455147]
[123.39395142 22.99873924]
[120.50867462 37.71863174]
[117.62340546 52.43852234]
[114.73812866 67.15841675]
[116.61180115 71.55140686]
[115.74571228 77.16806793]
[111.54158783 82.27070618]
[108.21932983 96.89816284]
[109.61920166 99.60553741]
[110.06491852 102.88209534]
[109.34375763 106.37542725]
[107.37616730 109.65946198]
[104.23934937 112.28497314]
[100.05233765 126.68875885]
[95.86532593 141.09254456]
[91.67831421 155.49632263]
[87.49130249 169.90010071]
[83.30429077 184.30387878]
[79.54799652 198.82594299]
[76.22573090 213.45339966]
[80.71435547 228.62452698]
[70.35032654 239.32200623]
[67.02806854 253.94947815]
[63.70581055 268.57693481]
[60.38355255 283.20440674]
[57.06129074 297.83184814]
[70.13156891 304.21081543]
[81.44422913 313.33923340]
[90.43154907 324.75476074]
[96.64347839 337.88031006]
[99.77014923 352.05328369]
[99.65735626 366.55911255]
[96.31412506 380.66711426]
[89.91210938 393.66751099]
[80.77679443 404.90689087]
[69.37092590 413.82125854]
[56.27108002 419.96429443]
[42.13851547 423.02954102]
[27.68579674 422.86587524]
[24.14612389 437.44226074]
[20.60645103 452.01864624]
[21.62240028 461.09640503]
[16.90404701 466.78488159]
[13.14774704 481.30694580]
[9.39144611 495.82901001]
[23.55136681 500.80599976]
[37.23819351 506.96591187]
[50.35330963 514.26440430]
[62.80221939 522.64880371]
[74.49523163 532.05877686]
[85.34808350 542.42645264]
[95.28259277 553.67724609]
[104.22717285 565.72998047]
[112.11737823 578.49780273]
[118.89636230 591.88885498]
[124.51527405 605.80651855]
[128.93362427 620.15057373]
[132.11959839 634.81762695]
[134.05023193 649.70208740]
[134.71159363 664.69665527]
[134.09895325 679.69323730]
[132.21670532 694.58386230]
[129.07839966 709.26123047]
[124.70667267 723.61956787]
[119.13301849 737.55541992]
[112.39758301 750.96844482]
[104.54890442 763.76184082]
[95.64353180 775.84356689]
[85.74563599 787.12658691]
[74.92652130 797.52947998]
[63.26415253 806.97735596]
[50.84255219 815.40222168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 183]
[46 182]
[47 181]
[48 179]
[49 178]
[50 177]
[62 164]
[63 163]
[64 162]
[65 161]
[66 160]
[68 158]
[69 157]
[74 156]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[80 146]
[81 145]
[82 142]
[83 141]
[84 140]
[85 139]
[87 137]
[89 135]
[90 134]
[93 133]
[94 132]
[95 131]
[96 130]
[97 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
