%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[67.81671906 654.82470703]
[53.79730988 660.19335938]
[39.31917572 664.16204834]
[24.52175713 666.69250488]
[9.54756355 667.76037598]
[-5.45919275 667.35534668]
[-20.35398483 665.48132324]
[-34.99336243 662.15631104]
[-49.23633957 657.41247559]
[-62.94573975 651.29534912]
[-75.98954010 643.86389160]
[-88.24210358 635.18975830]
[-99.58544159 625.35632324]
[-109.91030884 614.45843506]
[-119.11726379 602.60101318]
[-127.11763000 589.89825439]
[-133.83436584 576.47241211]
[-139.20278931 562.45288086]
[-143.17118835 547.97467041]
[-145.70133972 533.17724609]
[-146.76889038 518.20300293]
[-146.36355591 503.19625854]
[-144.48922729 488.30151367]
[-141.16397095 473.66220093]
[-136.41979980 459.41931152]
[-130.30241394 445.71005249]
[-122.87071991 432.66638184]
[-114.19629669 420.41400146]
[-104.36268616 409.07086182]
[-93.46459198 398.74621582]
[-81.60697174 389.53948975]
[-68.90402222 381.53936768]
[-55.47808456 374.82290649]
[-41.45845795 369.45477295]
[-26.98016739 365.48666382]
[-12.18264771 362.95678711]
[2.79158878 361.88955688]
[17.79832840 362.29519653]
[32.69304657 364.16979980]
[36.01530457 349.54235840]
[31.28905487 335.41748047]
[41.89070892 323.67373657]
[35.71155548 313.27447510]
[38.35967255 301.06091309]
[48.94847107 293.69610596]
[52.48814392 279.11975098]
[56.02781677 264.54336548]
[59.56748962 249.96699524]
[63.10716248 235.39062500]
[66.64683533 220.81423950]
[70.07789612 206.21191406]
[73.40015411 191.58445740]
[68.67390442 177.45959473]
[79.27555847 165.71585083]
[82.59781647 151.08839417]
[85.92007446 136.46093750]
[88.80535126 121.74104309]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[95.81168365 77.29065704]
[98.03679657 62.45661545]
[100.26191711 47.62257004]
[89.37287140 36.72601318]
[87.01555634 21.68286133]
[93.88694000 8.29450226]
[107.16538239 1.59966457]
[109.39050293 -13.23437881]
[111.61561584 -28.06842232]
[111.83894348 -43.06676102]
[110.05648041 -57.96047592]
[108.27401733 -72.85419464]
[106.49154663 -87.74790955]
[104.70908356 -102.64163208]
[102.92662048 -117.53534698]
[101.03332520 -132.41537476]
[99.02931213 -147.28091431]
[95.29718018 -152.73826599]
[94.93564606 -158.40980530]
[97.19377136 -162.61811829]
[95.63324738 -177.53672791]
[94.07272339 -192.45532227]
[92.51219940 -207.37393188]
[82.24987030 -196.43388367]
[67.26256561 -195.81686401]
[56.13569641 -205.87632751]
[55.24324036 -220.84976196]
[65.09643555 -232.15969849]
[80.05091858 -233.32728577]
[91.53964996 -223.68453979]
[91.31632233 -238.68287659]
[91.09299469 -253.68121338]
[90.86966705 -268.67953491]
[90.64633942 -283.67788696]
[90.42301178 -298.67620850]
[82.48110962 -312.35968018]
[90.02806091 -325.20071411]
[89.80473328 -340.19906616]
[75.56166840 -345.44305420]
[64.17733765 -355.48107910]
[57.19139099 -368.95553589]
[55.54861069 -384.04412842]
[59.47116852 -398.70623779]
[68.42857361 -410.95898438]
[81.20941925 -419.14520264]
[96.08518219 -422.15786743]
[111.04405212 -419.58944702]
[124.06295776 -411.78738403]
[133.38121033 -399.80676270]
[137.73857117 -385.26794434]
[136.54576111 -370.13711548]
[129.96409607 -356.46063232]
[118.88368225 -346.08813477]
[104.80307007 -340.42239380]
[105.02639771 -325.42404175]
[112.95233154 -312.81338501]
[105.42134857 -298.89953613]
[105.64467621 -283.90121460]
[105.86800385 -268.90286255]
[106.09133148 -253.90454102]
[106.31465912 -238.90620422]
[106.53798676 -223.90786743]
[107.43080139 -208.93444824]
[108.99132538 -194.01585388]
[110.55184937 -179.09724426]
[112.11237335 -164.17863464]
[113.89483643 -149.28492737]
[115.89884949 -134.41940308]
[119.90780640 -128.21052551]
[117.82033539 -119.31781006]
[119.60279846 -104.42409515]
[121.38526917 -89.53038025]
[123.16773224 -74.63665771]
[124.95019531 -59.74294281]
[126.73266602 -44.84922791]
[132.11146545 -58.85166931]
[141.50508118 -70.54611206]
[154.01817322 -78.81791687]
[168.45805359 -82.87866211]
[183.44842529 -82.34130859]
[197.56050110 -77.25707245]
[209.44918823 -68.11054230]
[217.98135376 -55.77352142]
[222.34376526 -41.42188644]
[222.12060547 -26.42354584]
[217.33317566 -12.20804691]
[208.43774414 -0.13031991]
[196.28221130 8.65846348]
[182.02511597 13.32061291]
[167.02540588 13.41176033]
[152.71270752 8.92321968]
[140.45126343 0.28280976]
[131.40971375 -11.68592072]
[126.44966125 -25.84330559]
[124.22454834 -11.00926208]
[121.99942780 3.82478189]
[132.72921753 14.12087250]
[135.37004089 28.93606949]
[128.70281982 42.62553406]
[115.09596252 49.84768677]
[112.87084198 64.68173218]
[110.64572906 79.51577759]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[103.60462189 124.18676758]
[105.27723694 128.19380188]
[105.55937195 132.12889099]
[104.64440155 135.56375122]
[102.84490204 138.17686462]
[100.54753876 139.78318787]
[97.22528076 154.41064453]
[93.90301514 169.03811646]
[98.39163971 184.20922852]
[88.02761841 194.90672302]
[84.70535278 209.53417969]
[85.85634613 218.59580994]
[81.22321320 224.35391235]
[77.68354034 238.93029785]
[74.14386749 253.50666809]
[70.60419464 268.08303833]
[67.06452179 282.65942383]
[63.52484894 297.23577881]
[69.11738586 314.78015137]
[56.51816940 326.99600220]
[61.00679016 342.16711426]
[50.64276505 352.86459351]
[47.32050705 367.49206543]
[61.56367111 372.23538208]
[75.27331543 378.35195923]
[88.31741333 385.78286743]
[100.57032776 394.45654297]
[111.91406250 404.28945923]
[122.23935699 415.18695068]
[131.44679260 427.04400635]
[139.44766235 439.74649048]
[146.16494751 453.17202759]
[151.53392029 467.19131470]
[155.50289917 481.66937256]
[158.03364563 496.46673584]
[159.10179138 511.44091797]
[158.69705200 526.44769287]
[156.82331848 541.34252930]
[153.49865723 555.98193359]
[148.75505066 570.22503662]
[142.63821411 583.93457031]
[135.20704651 596.97851562]
[126.53311157 609.23126221]
[116.69995117 620.57476807]
[105.80226898 630.89984131]
[93.94501495 640.10705566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 187]
[40 186]
[42 184]
[45 182]
[46 181]
[47 180]
[48 179]
[49 178]
[50 177]
[51 175]
[52 174]
[54 172]
[55 171]
[56 170]
[57 165]
[58 164]
[59 162]
[60 161]
[61 160]
[62 159]
[66 155]
[67 154]
[68 153]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[74 129]
[75 127]
[76 126]
[79 125]
[80 124]
[81 123]
[82 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
