%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[172.17964172 462.28173828]
[181.19548035 450.23553467]
[192.32835388 440.11349487]
[205.17578125 432.28149414]
[199.92906189 418.22903442]
[194.68234253 404.17654419]
[189.43562317 390.12408447]
[185.53962708 387.36178589]
[183.33753967 382.12271118]
[184.24871826 375.57434082]
[179.42271423 361.37188721]
[174.59672546 347.16943359]
[169.77072144 332.96694946]
[164.94473267 318.76449585]
[160.11872864 304.56204224]
[155.29273987 290.35958862]
[150.46673584 276.15713501]
[139.04603577 266.59591675]
[141.93197632 251.04014587]
[137.10597229 236.83769226]
[132.27998352 222.63523865]
[127.45398712 208.43278503]
[116.74549866 202.80650330]
[112.60865021 191.01370239]
[117.77579498 179.19578552]
[113.16178894 164.92304993]
[108.54778290 150.65031433]
[103.93376923 136.37757874]
[99.31976318 122.10484314]
[94.70574951 107.83211517]
[90.69757843 104.44855499]
[88.87046814 99.06014252]
[90.17370605 93.06526947]
[85.98669434 78.66148376]
[81.79968262 64.25770569]
[77.61267090 49.85391998]
[73.32556152 64.22822571]
[63.29040146 75.37702179]
[49.44482422 81.14764404]
[34.46220016 80.42588043]
[21.23543549 73.35108948]
[12.31840897 61.28930283]
[9.43286133 46.56946564]
[13.13594627 32.03374481]
[22.71265602 20.48876190]
[36.31387711 14.16367054]
[51.31342697 14.27974796]
[64.81513214 20.81458092]
[74.21257782 32.50754166]
[72.65205383 17.58893776]
[71.09152985 2.67033219]
[67.98741913 -12.00497055]
[63.37340927 -26.27770424]
[58.75940323 -40.55043793]
[54.14539337 -54.82316971]
[49.53138351 -69.09590149]
[44.91737366 -83.36863708]
[39.46201706 -97.34143829]
[33.18465805 -110.96475220]
[26.90729523 -124.58806610]
[20.62993431 -138.21138000]
[14.35257435 -151.83470154]
[8.07521343 -165.45802307]
[-6.17036057 -160.71177673]
[-20.85160637 -157.56149292]
[-35.79030609 -156.04542542]
[-50.80511475 -156.18197632]
[-65.71377563 -157.96946716]
[-80.33529663 -161.38623047]
[-94.49220276 -166.39076233]
[-108.01262665 -172.92231750]
[-120.73245239 -180.90161133]
[-132.49726868 -190.23179626]
[-143.16426086 -200.79959106]
[-152.60394287 -212.47673035]
[-160.70173645 -225.12145996]
[-167.35932922 -238.58027649]
[-172.49589539 -252.68980408]
[-176.04910278 -267.27877808]
[-177.97579956 -282.17007446]
[-178.25262451 -297.18295288]
[-176.87619019 -312.13516235]
[-173.86320496 -326.84518433]
[-169.25025940 -341.13449097]
[-163.09335327 -354.82958984]
[-155.46720886 -367.76422119]
[-146.46440125 -379.78143311]
[-136.19422913 -390.73526001]
[-124.78136444 -400.49279785]
[-112.36433411 -408.93557739]
[-99.09387970 -415.96112061]
[-85.13108826 -421.48413086]
[-70.64545441 -425.43759155]
[-55.81282806 -427.77346802]
[-40.81325912 -428.46343994]
[-25.82882309 -427.49908447]
[-11.04142475 -424.89218140]
[3.36943293 -420.67431641]
[17.22881508 -414.89669800]
[30.36848259 -407.62948608]
[42.62893295 -398.96090698]
[53.86133194 -388.99615479]
[63.92932892 -377.85620117]
[72.71070862 -365.67626953]
[80.09887695 -352.60421753]
[86.00414276 -338.79876709]
[90.35482788 -324.42742920]
[93.09811401 -309.66473389]
[94.20069885 -294.68981934]
[93.64920044 -279.68453979]
[91.45030975 -264.83099365]
[87.63072968 -250.30947876]
[82.23681641 -236.29631042]
[75.33404541 -222.96157837]
[67.00621796 -210.46716309]
[57.35442734 -198.96472168]
[46.49583054 -188.59390259]
[34.56224442 -179.48057556]
[21.69853020 -171.73538208]
[27.97589111 -158.11206055]
[34.25325012 -144.48873901]
[40.53061295 -130.86543274]
[46.80797195 -117.24211121]
[53.08533478 -103.61879730]
[57.32892990 -118.00600433]
[69.14800262 -127.24233246]
[84.13431549 -127.88284302]
[96.69836426 -119.68864441]
[102.15405273 -105.71597290]
[98.46654510 -91.17629242]
[87.01120758 -81.49253845]
[72.06057739 -80.27651978]
[59.19010925 -87.98264313]
[63.80411530 -73.70991516]
[68.41812897 -59.43717957]
[73.03213501 -45.16444778]
[77.64614105 -30.89171219]
[82.26015472 -16.61898041]
[85.53563690 -31.25698471]
[94.10053253 -43.57130814]
[106.68429565 -51.73518753]
[121.42019653 -54.53756714]
[136.12223816 -51.56272507]
[148.60948181 -43.25196457]
[157.02951050 -30.83813667]
[160.13327026 -16.16275787]
[157.46031189 -1.40283418]
[149.40718079 11.25208664]
[137.16850281 19.92472458]
[122.55979919 23.32854271]
[107.74820709 20.95860672]
[94.93092346 13.16648102]
[86.01013184 1.10980904]
[87.57065582 16.02841377]
[89.13117981 30.94701767]
[92.01645660 45.66690826]
[96.20346832 60.07069016]
[100.39048004 74.47447205]
[104.57748413 88.87825775]
[108.97848511 103.21810150]
[113.59249115 117.49083710]
[118.20650482 131.76356506]
[122.82051086 146.03630066]
[127.43452454 160.30903625]
[132.04853821 174.58177185]
[145.99729919 186.60314941]
[141.65643311 203.60678101]
[146.48243713 217.80924988]
[151.30844116 232.01170349]
[156.13442993 246.21415710]
[167.90031433 256.79122925]
[164.66918945 271.33114624]
[169.49519348 285.53359985]
[174.32118225 299.73605347]
[179.14718628 313.93850708]
[183.97317505 328.14096069]
[188.79917908 342.34341431]
[193.62518311 356.54586792]
[198.45117188 370.74832153]
[203.48809814 384.87734985]
[208.73480225 398.92984009]
[213.98152161 412.98229980]
[219.22824097 427.03479004]
[234.06484985 424.53048706]
[249.10728455 424.87957764]
[263.81176758 428.06939697]
[277.64669800 433.98468018]
[290.11203003 442.41156006]
[300.75708008 453.04544067]
[309.19708252 465.50186157]
[315.12692261 479.33059692]
[318.33221436 494.03170776]
[318.69714355 509.07376099]
[316.20846558 523.91302490]
[310.95614624 538.01300049]
[303.13009644 550.86401367]
[293.01318359 562.00158691]
[280.97116089 571.02301025]
[267.43930054 577.60217285]
[252.90681458 581.50128174]
[237.89901733 582.57934570]
[222.95841980 580.79742432]
[208.62513733 576.21990967]
[195.41729736 569.01232910]
[183.81236267 559.43518066]
[174.22984314 547.83465576]
[167.01612854 534.63018799]
[162.43200684 520.29901123]
[160.64318848 505.35922241]
[161.71434021 490.35092163]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 183]
[5 182]
[6 181]
[7 180]
[10 179]
[11 178]
[12 177]
[13 176]
[14 175]
[15 174]
[16 173]
[17 172]
[19 170]
[20 169]
[21 168]
[22 167]
[25 165]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[33 159]
[34 158]
[35 157]
[36 156]
[49 155]
[50 154]
[51 153]
[52 138]
[53 137]
[54 136]
[55 135]
[56 134]
[57 133]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
[63 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
