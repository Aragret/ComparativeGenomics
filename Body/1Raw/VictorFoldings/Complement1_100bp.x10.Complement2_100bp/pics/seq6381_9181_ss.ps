%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[30.95306015 443.50885010]
[24.49052048 457.05392456]
[16.98515892 470.05023193]
[8.48325253 482.41760254]
[-0.96278518 494.07977295]
[-11.29471302 504.96487427]
[-22.44883156 515.00579834]
[-34.35636902 524.14056396]
[-46.94391251 532.31292725]
[-60.13385773 539.47253418]
[-73.84487152 545.57513428]
[-87.99243927 550.58319092]
[-102.48931885 554.46582031]
[-117.24613190 557.19903564]
[-132.17190552 558.76599121]
[-147.17460632 559.15710449]
[-162.16174316 558.36981201]
[-177.04092407 556.40911865]
[-191.72038269 553.28704834]
[-206.10964966 549.02288818]
[-220.11997986 543.64288330]
[-233.66502380 537.18017578]
[-246.66123962 529.67468262]
[-259.02850342 521.17266846]
[-270.69058228 511.72650146]
[-281.57559204 501.39447021]
[-291.61636353 490.24023438]
[-300.75106812 478.33261108]
[-308.92330933 465.74499512]
[-316.08276367 452.55496216]
[-322.18524170 438.84390259]
[-327.19314575 424.69628906]
[-331.07559204 410.19937134]
[-333.80865479 395.44250488]
[-335.37548828 380.51672363]
[-335.76641846 365.51400757]
[-334.97900391 350.52688599]
[-333.01815796 335.64773560]
[-329.89593506 320.96829224]
[-325.63162231 306.57907104]
[-320.25146484 292.56881714]
[-313.78863525 279.02383423]
[-306.28302002 266.02770996]
[-297.78085327 253.66050720]
[-288.33456421 241.99851990]
[-278.00244141 231.11363220]
[-266.84811401 221.07295227]
[-254.94038391 211.93840027]
[-242.35266113 203.76626587]
[-229.16258240 196.60696411]
[-215.45143127 190.50462341]
[-201.30377197 185.49685669]
[-186.80680847 181.61454773]
[-172.04994202 178.88163757]
[-157.12413025 177.31497192]
[-142.12142944 176.92419434]
[-127.13430023 177.71174622]
[-112.25516510 179.67274475]
[-97.57575989 182.79510498]
[-83.18659210 187.05958557]
[-69.17636871 192.43989563]
[-55.63146591 198.90284729]
[-42.63540268 206.40861511]
[-30.26829910 214.91090393]
[-18.60640717 224.35728455]
[-8.27973843 213.47795105]
[2.04692984 202.59861755]
[12.37359810 191.71928406]
[22.70026779 180.83995056]
[33.02693558 169.96061707]
[36.17717743 155.40296936]
[51.28961182 150.72055054]
[61.61627960 139.84121704]
[64.76652527 125.28356934]
[79.87895203 120.60115814]
[88.20089722 108.12136841]
[86.90288544 94.19991302]
[98.08383179 85.80480194]
[104.15766907 72.08953094]
[110.23150635 58.37426758]
[116.30533600 44.65900040]
[119.40944672 29.98369789]
[119.40944672 14.98369694]
[119.40944672 -0.01630275]
[119.40944672 -15.01630306]
[119.40944672 -30.01630211]
[111.67214966 -43.81647491]
[119.40944672 -56.54374695]
[108.86509705 -45.87525940]
[93.94229889 -44.35533905]
[81.46356201 -52.67886734]
[77.13399506 -67.04044342]
[82.93301392 -80.87414551]
[96.20939636 -87.85539246]
[110.89334106 -84.79244995]
[120.27216339 -73.08390808]
[121.83268738 -88.00251007]
[123.39321136 -102.92111969]
[124.95373535 -117.83972168]
[111.04506683 -123.75921631]
[99.50019836 -133.51664734]
[91.34568787 -146.24438477]
[87.30663300 -160.81069946]
[87.74218750 -175.92034912]
[92.61360931 -190.22981262]
[101.48774719 -202.46669006]
[113.57550812 -211.54289246]
[127.80207062 -216.65135193]
[142.90240479 -217.33786011]
[157.53379822 -213.54133606]
[170.39526367 -205.59939575]
[180.34312439 -194.21821594]
[186.49285889 -180.40980530]
[188.29763794 -165.40200806]
[185.59695435 -150.52928162]
[178.63096619 -137.11413574]
[168.01908875 -126.34939575]
[154.70491028 -119.19228363]
[139.87234497 -116.27919769]
[138.31181335 -101.36059570]
[136.75129700 -86.44198608]
[135.19076538 -71.52338409]
[134.40945435 -56.54374695]
[142.14674377 -43.81647491]
[134.40945435 -30.01630211]
[134.40945435 -15.01630306]
[134.40945435 -0.01630275]
[134.40945435 14.98369694]
[134.40945435 29.98369789]
[141.04216003 16.52980995]
[150.29333496 4.72236681]
[161.76960754 -4.93657446]
[174.98300171 -12.03631115]
[189.37167358 -16.27495766]
[204.32382202 -17.47228622]
[219.20364380 -15.57738304]
[233.37846375 -10.67082405]
[246.24557495 -2.96123576]
[257.25784302 7.22356510]
[265.94699097 19.45051575]
[271.94360352 33.19971848]
[274.99270630 47.88655472]
[274.96459961 62.88652802]
[271.86050415 77.56183624]
[265.81240845 91.28847504]
[257.07748413 103.48277283]
[246.02713013 113.62623596]
[233.13122559 121.28755951]
[218.93812561 126.14096832]
[204.05130005 127.98009491]
[189.10374451 126.72675323]
[174.73106384 122.43421173]
[161.54437256 115.28501892]
[150.10437012 105.58313751]
[140.89750671 93.74111176]
[134.31524658 80.26246643]
[130.63748169 65.72031403]
[130.02059937 50.73283386]
[123.94676971 64.44809723]
[117.87293243 78.16336823]
[111.79910278 91.87863159]
[113.09711456 105.80008698]
[101.91616821 114.19519806]
[113.46409607 104.62204742]
[127.00808716 98.17532349]
[141.71992493 95.24924469]
[156.69996643 96.02275848]
[171.03218079 100.44854736]
[183.84014893 108.25597382]
[194.34065247 118.96762085]
[201.89158630 131.92846680]
[206.03121948 146.34593201]
[206.50639343 161.33840942]
[203.28805542 175.98907471]
[196.57299805 189.40206909]
[186.77188110 200.75715637]
[174.48402405 209.35997009]
[160.46083069 214.68444824]
[145.55982971 216.40501404]
[130.69223022 214.41642761]
[116.76718903 208.84030151]
[104.63622284 200.01762390]
[95.04114532 188.48791504]
[88.56869507 174.95619202]
[85.61467743 160.24993896]
[86.35972595 145.26844788]
[90.75828552 130.92782593]
[86.86941528 146.26364136]
[72.49561310 150.16789246]
[62.16894531 161.04722595]
[58.28007126 176.38304138]
[43.90626907 180.28729248]
[33.57960129 191.16662598]
[23.25293350 202.04595947]
[12.92626476 212.92529297]
[2.59959579 223.80462646]
[-7.72707272 234.68395996]
[2.31394434 245.83798218]
[11.44886875 257.74542236]
[19.62137794 270.33288574]
[26.78108788 283.52273560]
[32.88385391 297.23370361]
[37.89205170 311.38122559]
[41.77480316 325.87805176]
[44.50816727 340.63485718]
[46.07529449 355.56060791]
[46.46652222 370.56329346]
[45.67943573 385.55044556]
[43.71889114 400.42965698]
[40.59697342 415.10913086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 197]
[66 196]
[67 195]
[68 194]
[69 193]
[70 192]
[72 190]
[73 189]
[75 187]
[76 163]
[78 161]
[79 160]
[80 159]
[81 158]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[88 123]
[96 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
