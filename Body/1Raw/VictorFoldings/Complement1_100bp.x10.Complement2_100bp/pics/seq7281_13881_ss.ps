%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[0.96265417 443.26940918]
[-0.93981904 458.16384888]
[-4.46928358 472.75857544]
[-9.58289433 486.87643433]
[-16.21857834 500.34606934]
[-24.29578209 513.00396729]
[-33.71645737 524.69641113]
[-44.36624527 535.28155518]
[-56.11586761 544.63085938]
[-68.82269287 552.63085938]
[-82.33247375 559.18438721]
[-96.48121643 564.21197510]
[-111.09716034 567.65246582]
[-126.00289154 569.46423340]
[-141.01745605 569.62524414]
[-155.95860291 568.13348389]
[-170.64495850 565.00708008]
[-184.89823914 560.28399658]
[-198.54541016 554.02160645]
[-211.42083740 546.29589844]
[-223.36820984 537.20062256]
[-234.24249268 526.84625244]
[-243.91168213 515.35845947]
[-252.25840759 502.87664795]
[-259.18133545 489.55236816]
[-264.59646606 475.54739380]
[-268.43801880 461.03167725]
[-270.65939331 446.18148804]
[-271.23361206 431.17703247]
[-270.15368652 416.20050049]
[-267.43273926 401.43365479]
[-263.10382080 387.05575562]
[-257.21945190 373.24136353]
[-249.85107422 360.15817261]
[-241.08815002 347.96496582]
[-231.03701782 336.80978394]
[-219.81971741 326.82803345]
[-207.57240295 318.14089966]
[-194.44374084 310.85379028]
[-180.59312439 305.05523682]
[-166.18865967 300.81555176]
[-151.40522766 298.18624878]
[-136.42227173 297.19924927]
[-121.42167664 297.86648560]
[-106.58552551 300.17993164]
[-92.09393311 304.11145020]
[-78.12279510 309.61331177]
[-64.84172058 316.61874390]
[-56.42710495 304.20126343]
[-55.69261932 289.32476807]
[-41.54588318 282.24096680]
[-33.13126373 269.82348633]
[-24.71664429 257.40597534]
[-23.56668472 250.10533142]
[-16.08316040 244.86752319]
[-7.48459625 232.57669067]
[1.02223074 220.22218323]
[9.43684959 207.80468750]
[17.85146713 195.38719177]
[17.45555687 192.61204529]
[18.13506126 189.51287842]
[20.01890755 186.49848938]
[23.08578110 184.01678467]
[27.15493393 182.50154114]
[36.29373550 170.60691833]
[45.43253708 158.71228027]
[47.05118179 143.90588379]
[61.59447479 137.67666626]
[70.73327637 125.78203583]
[79.87207794 113.88739777]
[89.01088715 101.99276733]
[98.06088257 90.03043365]
[107.02157593 78.00105286]
[115.98227692 65.97167206]
[124.94297028 53.94229889]
[126.98191833 38.25302505]
[140.78993225 32.66838837]
[149.75062561 20.63900948]
[158.71131897 8.60963249]
[165.39151001 -4.82074356]
[169.57852173 -19.22452545]
[173.76553345 -33.62830734]
[177.95254517 -48.03208923]
[182.13955688 -62.43587112]
[186.32656860 -76.83965302]
[190.51358032 -91.24343872]
[192.18511963 -106.15000916]
[183.64013672 -119.46517944]
[190.60618591 -132.63041687]
[189.71336365 -147.60382080]
[188.82055664 -162.57723999]
[187.92773438 -177.55064392]
[187.03491211 -192.52404785]
[184.15907288 -196.88024902]
[183.32514954 -201.44729614]
[184.27153015 -205.41206360]
[186.45178223 -208.18313599]
[186.22845459 -223.18148804]
[186.00512695 -238.17982483]
[172.31968689 -245.03311157]
[163.39614868 -257.46810913]
[161.28504944 -272.62731934]
[166.47152710 -287.02728271]
[177.76374817 -297.35900879]
[192.56684875 -301.24829102]
[207.47918701 -297.80145264]
[219.07402039 -287.81054688]
[224.68693542 -273.57138062]
[223.02812195 -258.35601807]
[214.47877502 -245.66085815]
[201.00346375 -238.40315247]
[201.22679138 -223.40481567]
[201.45011902 -208.40646362]
[202.00833130 -193.41685486]
[202.90113831 -178.44345093]
[203.79396057 -163.47004700]
[204.68676758 -148.49664307]
[205.57958984 -133.52323914]
[214.06071472 -121.27906036]
[207.15852356 -107.04282379]
[213.02984619 -120.84600067]
[222.10877991 -132.78639221]
[233.84014893 -142.13383484]
[247.50660706 -148.31674194]
[262.27239990 -150.95700073]
[277.23461914 -149.89318848]
[291.47833252 -145.19032288]
[304.13250732 -137.13601685]
[314.42333984 -126.22279358]
[321.72155762 -113.11798096]
[325.58087158 -98.62294769]
[325.76522827 -83.62408447]
[322.26342773 -69.03856659]
[315.28958130 -55.75830460]
[305.27014160 -44.59539413]
[292.81777954 -36.23244858]
[278.69396973 -31.18087196]
[263.76242065 -29.74956322]
[248.93617249 -32.02605057]
[235.12187195 -37.87112427]
[223.16424561 -46.92735672]
[213.79452515 -58.64095688]
[207.58567810 -72.29563141]
[204.91735840 -87.05642700]
[200.73034668 -72.65264130]
[196.54335022 -58.24885941]
[192.35633850 -43.84507751]
[188.16932678 -29.44129562]
[183.98231506 -15.03751469]
[179.79530334 -0.63373238]
[189.93865967 -11.68416595]
[202.40449524 -20.02701378]
[216.48777771 -25.19044876]
[231.39204407 -26.88245010]
[246.27438354 -25.00733185]
[260.29312134 -19.67113686]
[272.65542603 -11.17565632]
[282.66217041 -0.00134804]
[289.74740601 13.21982574]
[293.51043701 27.74014282]
[293.73843384 42.73841095]
[290.41851807 57.36640167]
[283.73843384 70.79683685]
[274.07598877 82.27014923]
[261.97763062 91.13748169]
[248.12756348 96.89733887]
[233.30911255 99.22396851]
[218.36029053 97.98578644]
[204.12657166 93.25282288]
[191.41290283 85.29275513]
[180.93832397 74.55575562]
[173.29521179 61.64905167]
[168.91583252 47.30258560]
[168.04786682 32.32772064]
[170.74069214 17.57032776]
[161.77999878 29.59970665]
[152.81930542 41.62908554]
[151.42127991 56.45793533]
[136.97235107 62.90299225]
[128.01165771 74.93237305]
[119.05095673 86.96174622]
[110.09026337 98.99112701]
[108.18328094 106.82285309]
[100.90551758 111.13156891]
[91.76671600 123.02619934]
[82.62791443 134.92083740]
[73.48911285 146.81547546]
[71.21679688 162.47264099]
[57.32717133 167.85108948]
[48.18836975 179.74571228]
[39.04956818 191.64035034]
[30.26896286 203.80180359]
[21.85434532 216.21929932]
[13.43972588 228.63679504]
[11.21627045 237.49647522]
[4.80624151 241.17524719]
[-3.79232240 253.46607971]
[-12.29914951 265.82058716]
[-20.71376801 278.23809814]
[-29.12838554 290.65557861]
[-30.46473885 306.42025757]
[-44.00960922 312.61587524]
[-52.42422867 325.03338623]
[-40.99549484 334.77233887]
[-30.70751762 345.70947266]
[-21.68517876 357.71197510]
[-14.03799915 370.63421631]
[-7.85881233 384.31927490]
[-3.22262573 398.60104370]
[-0.18571927 413.30615234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 203]
[49 202]
[51 200]
[52 199]
[53 198]
[55 197]
[56 196]
[57 194]
[58 193]
[59 192]
[64 191]
[65 190]
[66 189]
[68 187]
[69 186]
[70 185]
[71 184]
[72 182]
[73 181]
[74 180]
[75 179]
[77 177]
[78 176]
[79 175]
[80 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 120]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
