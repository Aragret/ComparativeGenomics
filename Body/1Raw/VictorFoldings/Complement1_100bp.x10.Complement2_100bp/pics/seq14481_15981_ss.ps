%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[115.94802094 839.54388428]
[100.93957520 839.77380371]
[85.97094727 838.65740967]
[71.16265106 836.20367432]
[56.63391876 832.43243408]
[42.50173569 827.37402344]
[28.87988281 821.06915283]
[15.87803650 813.56860352]
[3.60088468 804.93273926]
[-7.85272408 795.23114014]
[-18.39056969 784.54193115]
[-27.92780495 772.95104980]
[-36.38764191 760.55200195]
[-43.70196533 747.44445801]
[-49.81188202 733.73406982]
[-54.66820145 719.53118896]
[-58.23181534 704.95013428]
[-60.47404099 690.10833740]
[-61.37681580 675.12530518]
[-60.93287277 660.12164307]
[-59.14579010 645.21820068]
[-56.02995682 630.53497314]
[-51.61045456 616.19012451]
[-45.92287064 602.29919434]
[-39.01300430 588.97406006]
[-30.93648148 576.32196045]
[-21.75833511 564.44476318]
[-11.55246449 553.43811035]
[-0.40104172 543.39056396]
[11.60614586 534.38317871]
[24.37242317 526.48834229]
[37.79499817 519.76965332]
[51.76580429 514.28125000]
[66.17234802 510.06723022]
[80.89863586 507.16162109]
[95.82610321 505.58776855]
[110.83455658 505.35833740]
[111.95020294 490.39987183]
[113.06584930 475.44143677]
[114.18150330 460.48297119]
[115.29714966 445.52453613]
[101.92943573 438.87368774]
[92.09984589 427.58102417]
[87.32975006 413.34686279]
[88.37555695 398.33041382]
[95.10897064 384.82208252]
[106.53179169 374.89425659]
[120.92379761 370.08322144]
[122.03945160 355.12478638]
[123.15509796 340.16632080]
[124.27074432 325.20788574]
[125.38639069 310.24942017]
[126.50204468 295.29095459]
[127.61769104 280.33251953]
[128.73333740 265.37405396]
[127.50636292 250.42433167]
[123.96669006 235.84794617]
[120.42701721 221.27157593]
[116.88734436 206.69520569]
[113.34767151 192.11882019]
[108.71453857 186.36071777]
[109.86553192 177.29908752]
[106.54326630 162.67163086]
[103.22100830 148.04417419]
[99.89875031 133.41670227]
[96.57649231 118.78924561]
[84.37232208 110.97870636]
[81.16312408 96.84904480]
[88.79605103 84.53301239]
[85.47379303 69.90554810]
[82.15152740 55.27809143]
[78.82926941 40.65063095]
[67.72889709 36.39406586]
[60.13924789 27.39972687]
[57.85738373 15.97663593]
[61.33674622 4.98528767]
[69.60266113 -2.87860656]
[59.35536575 -14.93279457]
[64.50006866 -28.91067886]
[61.61479568 -43.63056946]
[52.36941147 -31.81859207]
[37.49691772 -29.86693382]
[25.51695824 -38.89359283]
[23.29219627 -53.72768784]
[32.09707642 -65.87158203]
[46.88776398 -68.36869049]
[59.19096375 -59.78936386]
[57.63044357 -74.70796967]
[56.06991959 -89.62657166]
[54.50939560 -104.54518127]
[52.94887161 -119.46378326]
[51.38835144 -134.38238525]
[36.55577469 -137.29547119]
[23.24160194 -144.45259094]
[12.62972355 -155.21731567]
[5.66373873 -168.63247681]
[2.96305776 -183.50518799]
[4.76782370 -198.51300049]
[10.91755772 -212.32141113]
[20.86543083 -223.70259094]
[33.72688293 -231.64453125]
[48.35828400 -235.44104004]
[63.45861816 -234.75454712]
[77.68518066 -229.64607239]
[89.77294159 -220.56988525]
[98.64707947 -208.33300781]
[103.51850128 -194.02354431]
[103.95405579 -178.91387939]
[99.91500092 -164.34757996]
[91.76049042 -151.61982727]
[80.21562195 -141.86239624]
[66.30695343 -135.94291687]
[67.86747742 -121.02430725]
[69.42800140 -106.10570526]
[70.98852539 -91.18709564]
[72.54904938 -76.26849365]
[74.10957336 -61.34988785]
[76.33468628 -46.51584244]
[79.21996307 -31.79595184]
[89.26088715 -20.79463005]
[84.32255554 -5.76387930]
[100.10230255 3.51594901]
[104.15740204 21.69475746]
[93.45673370 37.32837296]
[96.77899170 51.95582962]
[100.10124969 66.58329010]
[103.42350769 81.21075439]
[115.62767792 89.02129364]
[118.83687592 103.15095520]
[111.20394897 115.46698761]
[114.52620697 130.09445190]
[117.84847260 144.72190857]
[121.17073059 159.34936523]
[124.49298859 173.97682190]
[127.92404938 188.57914734]
[131.46372986 203.15553284]
[135.00340271 217.73190308]
[138.54306030 232.30827332]
[142.08273315 246.88465881]
[145.50180054 232.27951050]
[152.68605042 219.11187744]
[163.11683655 208.33232117]
[176.04113770 200.71903992]
[190.52597046 196.82162476]
[205.52563477 196.92144775]
[219.95730591 201.01129150]
[232.77914429 208.79592896]
[243.06553650 219.71334839]
[250.07388306 232.97544861]
[253.29826355 247.62478638]
[252.50590515 262.60385132]
[247.75399780 276.83126831]
[239.38558960 289.27993774]
[228.00480652 299.05123901]
[214.43324280 305.43969727]
[199.65061951 307.98416138]
[184.72413635 306.50094604]
[170.73132324 301.09710693]
[158.68235779 292.16278076]
[149.44703674 280.34292603]
[143.69178772 266.48971558]
[142.57614136 281.44815063]
[141.46049500 296.40661621]
[140.34484863 311.36508179]
[139.22920227 326.32351685]
[138.11355591 341.28198242]
[136.99789429 356.24041748]
[135.88224792 371.19888306]
[149.40135193 378.09158325]
[159.22509766 389.60406494]
[163.88017273 403.96179199]
[162.68684387 418.96725464]
[155.85801697 432.33630371]
[144.46200562 442.04589844]
[130.25559998 446.64016724]
[129.13995361 461.59863281]
[128.02430725 476.55706787]
[126.90866089 491.51553345]
[125.79300690 506.47399902]
[140.60137939 508.92724609]
[155.13021851 512.69805908]
[169.26255798 517.75604248]
[182.88461304 524.06048584]
[195.88668823 531.56060791]
[208.16409302 540.19610596]
[219.61799622 549.89733887]
[230.15617371 560.58630371]
[239.69377136 572.17681885]
[248.15397644 584.57562256]
[255.46870422 597.68292236]
[261.57904053 611.39312744]
[266.43579102 625.59588623]
[269.99984741 640.17681885]
[272.24252319 655.01855469]
[273.14575195 670.00158691]
[272.70227051 685.00524902]
[270.91564941 699.90869141]
[267.80026245 714.59204102]
[263.38119507 728.93701172]
[257.69403076 742.82812500]
[250.78457642 756.15350342]
[242.70843506 768.80584717]
[233.53065491 780.68334961]
[223.32511902 791.69030762]
[212.17401123 801.73815918]
[200.16709900 810.74591064]
[187.40106201 818.64117432]
[173.97868347 825.36022949]
[160.00805664 830.84912109]
[145.60163879 835.06353760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 179]
[38 178]
[39 177]
[40 176]
[41 175]
[48 168]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[69 127]
[70 126]
[71 125]
[72 124]
[77 121]
[79 119]
[80 118]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
