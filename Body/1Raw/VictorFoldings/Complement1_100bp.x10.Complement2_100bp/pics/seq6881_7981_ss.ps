%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[27.92348480 460.09967041]
[27.25113487 475.11184692]
[24.40006638 489.86614990]
[19.43105125 504.04806519]
[12.45000267 517.35534668]
[3.60572290 529.50427246]
[-6.91327143 540.23590088]
[-18.88276863 549.32159424]
[-32.04763412 556.56756592]
[-46.12726593 561.81939697]
[-60.82154465 564.96514893]
[-75.81726837 565.93780518]
[-90.79480743 564.71661377]
[-105.43490601 561.32763672]
[-119.42550659 555.84301758]
[-132.46841431 548.37976074]
[-144.28559875 539.09686279]
[-154.62518311 528.19219971]
[-163.26678467 515.89831543]
[-170.02619934 502.47711182]
[-174.75936890 488.21475220]
[-177.36537170 473.41522217]
[-177.78869629 458.39392090]
[-176.02029419 443.47109985]
[-172.09786987 428.96481323]
[-166.10502625 415.18426514]
[-158.16949463 402.42318726]
[-148.46044922 390.95358276]
[-137.18479919 381.01989746]
[-124.58291626 372.83392334]
[-110.92339325 366.57009888]
[-96.49739075 362.36196899]
[-81.61240387 360.29922485]
[-66.58570099 360.42581177]
[-51.73757553 362.73904419]
[-37.38452148 367.18963623]
[-30.90502739 353.66128540]
[-24.42553139 340.13293457]
[-17.94603539 326.60458374]
[-11.56742954 313.02838135]
[-5.29006910 299.40505981]
[0.98729163 285.78176880]
[7.26465225 272.15844727]
[13.54201317 258.53512573]
[11.84107876 243.73796082]
[24.64350128 234.44233704]
[18.53407288 223.09754944]
[20.09769249 210.11151123]
[28.98595619 200.25202942]
[42.12040329 197.26858521]
[48.59989929 183.74024963]
[47.88601685 179.01802063]
[50.13103485 173.79719543]
[55.47900772 169.90995789]
[62.35842133 156.58052063]
[69.23783112 143.25109863]
[76.11724854 129.92166138]
[82.99665833 116.59223938]
[89.87606812 103.26280975]
[95.74503326 89.45863342]
[92.85909271 73.90286255]
[104.27979279 64.34163666]
[109.10578918 50.13918304]
[104.11516571 38.24563599]
[108.42713165 26.51573181]
[119.21819305 21.04951286]
[124.25511169 6.92048407]
[129.29202271 -7.20854568]
[119.46150208 -18.92639351]
[116.83345795 -33.89269638]
[122.01507568 -48.07075119]
[133.52070618 -57.68722534]
[148.19612122 -60.23630905]
[153.23303223 -74.36533356]
[150.57901001 -89.96234894]
[162.14079285 -99.35247040]
[167.17771912 -113.48150635]
[172.21463013 -127.61053467]
[158.52302551 -133.75708008]
[145.36305237 -140.97198486]
[132.81790161 -149.20967102]
[120.96689606 -158.41802979]
[109.88497162 -168.53884888]
[99.64218903 -179.50814819]
[90.30329895 -191.25656128]
[81.92735291 -203.70982361]
[74.56729889 -216.78918457]
[68.26968384 -230.41195679]
[63.07431030 -244.49201965]
[59.01403427 -258.94036865]
[56.11452484 -273.66558838]
[54.39411163 -288.57467651]
[53.86367035 -303.57330322]
[54.52655792 -318.56665039]
[56.37858582 -333.45993042]
[59.40803909 -348.15899658]
[63.59576797 -362.57092285]
[68.91529083 -376.60452271]
[75.33298492 -390.17117310]
[82.80826569 -403.18499756]
[91.29387665 -415.56381226]
[100.73616028 -427.22927856]
[111.07543182 -438.10766602]
[122.24631500 -448.13021851]
[134.17817688 -457.23355103]
[146.79559326 -465.36010742]
[160.01878357 -472.45852661]
[173.76414490 -478.48388672]
[187.94477844 -483.39813232]
[202.47102356 -487.17019653]
[217.25103760 -489.77621460]
[232.19137573 -491.19970703]
[247.19758606 -491.43167114]
[262.17477417 -490.47064209]
[277.02828979 -488.32272339]
[291.66418457 -485.00146484]
[305.98992920 -480.52786255]
[319.91494751 -474.93020630]
[333.35122681 -468.24392700]
[346.21380615 -460.51123047]
[358.42132568 -451.78103638]
[369.89666748 -442.10858154]
[380.56723022 -431.55493164]
[390.36557007 -420.18688965]
[399.22973633 -408.07629395]
[407.10369873 -395.29971313]
[413.93765259 -381.93792725]
[419.68838501 -368.07543945]
[424.31958008 -353.79983521]
[427.80191040 -339.20144653]
[430.11340332 -324.37252808]
[431.23937988 -309.40679932]
[431.17279053 -294.39895630]
[429.91403198 -279.44384766]
[427.47103882 -264.63601685]
[423.85928345 -250.06907654]
[419.10159302 -235.83515930]
[413.22805786 -222.02424622]
[406.27578735 -208.72363281]
[398.28875732 -196.01744080]
[389.31747437 -183.98597717]
[379.41860962 -172.70533752]
[368.65481567 -162.24682617]
[357.09408569 -152.67655945]
[344.80957031 -144.05505371]
[331.87887573 -136.43682861]
[318.38378906 -129.87002563]
[304.40963745 -124.39618683]
[290.04473877 -120.04990387]
[275.37994385 -116.85866547]
[260.50796509 -114.84263611]
[245.52284241 -114.01457214]
[230.51927185 -114.37969971]
[215.59216309 -115.93572235]
[200.83586121 -118.67279816]
[186.34365845 -122.57361603]
[181.30674744 -108.44458771]
[176.26982117 -94.31555939]
[179.28411865 -79.72914886]
[167.36206055 -69.32842255]
[162.32514954 -55.19939041]
[172.07849121 -43.94160080]
[174.90609741 -29.21541214]
[169.95024109 -14.95687675]
[158.44728088 -5.02819061]
[143.42105103 -2.17162919]
[138.38414001 11.95740032]
[133.34722900 26.08642960]
[137.43444824 43.15281677]
[123.30824280 54.96518326]
[118.48224640 69.16764069]
[121.71337128 83.70755005]
[109.94748688 94.28462982]
[122.22299957 85.66419983]
[137.15504456 84.23802948]
[150.84042358 90.37891388]
[159.70181274 102.48162842]
[161.42285156 117.38256836]
[155.55369568 131.18666077]
[143.62849426 140.28553772]
[128.76448059 142.30079651]
[114.84707642 136.70562744]
[105.51425934 124.96260834]
[103.20549774 110.14221954]
[96.32608795 123.47164917]
[89.44667816 136.80107117]
[82.56726074 150.13050842]
[75.68785095 163.45993042]
[68.80844116 176.78936768]
[62.12824249 190.21974182]
[55.64874649 203.74809265]
[61.76272202 220.13829041]
[54.27849579 235.57530212]
[38.26681900 240.71969604]
[39.51875305 256.49130249]
[27.16532898 264.81250000]
[20.88796806 278.43579102]
[14.61060810 292.05911255]
[8.33324718 305.68243408]
[2.05588651 319.30575562]
[1.30674314 328.40942383]
[-4.41768932 333.08410645]
[-10.89718533 346.61242676]
[-17.37668037 360.14077759]
[-23.85617638 373.66912842]
[-11.39176846 382.06295776]
[-0.28240168 392.18225098]
[9.23512554 403.81127930]
[16.95794678 416.70220947]
[22.72144890 430.58023071]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 205]
[37 204]
[38 203]
[39 202]
[40 200]
[41 199]
[42 198]
[43 197]
[44 196]
[46 194]
[50 191]
[51 190]
[54 189]
[55 188]
[56 187]
[57 186]
[58 185]
[59 184]
[60 173]
[62 171]
[63 170]
[66 168]
[67 167]
[68 166]
[73 161]
[74 160]
[76 158]
[77 157]
[78 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
