%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[87.31189728 179.00878906]
[94.78848267 192.04006958]
[100.42094421 205.96807861]
[104.10433960 220.53330994]
[105.77005768 235.46446228]
[105.38706970 250.48335266]
[102.96250153 265.31018066]
[98.54153442 279.66876221]
[92.20651245 293.29159546]
[84.07546997 305.92486572]
[74.29986572 317.33328247]
[63.06182861 327.30422974]
[50.57070923 335.65203857]
[37.05921173 342.22113037]
[22.77904320 346.88919067]
[7.99623919 349.56918335]
[-7.01380825 350.21124268]
[-21.97147179 348.80337524]
[-36.59809494 345.37182617]
[-50.62120056 339.98049927]
[-63.77953720 332.72985840]
[-75.82798004 323.75494385]
[-86.54206848 313.22299194]
[-95.72221375 301.33020020]
[-103.19738770 288.29809570]
[-108.82833862 274.36947632]
[-112.51016235 259.80386353]
[-114.17426300 244.87252808]
[-113.78964233 229.85366821]
[-111.36347961 215.02709961]
[-106.94094849 200.66899109]
[-100.60446167 187.04685974]
[-92.47204590 174.41445923]
[-82.69521332 163.00712585]
[-71.45609283 153.03736877]
[-58.96406937 144.69091797]
[-45.45185852 138.12327576]
[-31.17118835 133.45678711]
[-16.38809395 130.77838135]
[-1.37797606 130.13795471]
[13.57953358 131.54743958]
[28.20578766 134.98057556]
[42.22830582 140.37341309]
[55.38586044 147.62548828]
[64.34655762 135.59611511]
[73.30725098 123.56673431]
[82.26795197 111.53735352]
[91.22864532 99.50798035]
[91.04494476 96.46565247]
[91.96415710 93.28924561]
[94.03807831 90.38712311]
[97.16692352 88.18108368]
[101.09820557 87.05061340]
[110.75901794 75.57591248]
[120.41982269 64.10121155]
[130.08064270 52.62651443]
[139.74143982 41.15181351]
[126.00008392 47.16637039]
[111.25064850 49.89659119]
[96.26686096 49.19926071]
[81.83475494 45.11095428]
[68.71139526 37.84613800]
[57.58522034 27.78590965]
[49.03987885 15.45800972]
[43.52364731 1.50913346]
[41.32588959 -13.32898808]
[42.56189728 -28.27797699]
[47.16683578 -42.55363846]
[54.89913940 -55.40710449]
[65.35317993 -66.16410065]
[77.98056793 -74.26033783]
[92.11888885 -79.27111053]
[107.02648163 -80.93355560]
[121.92131805 -79.16046906]
[136.02204895 -74.04486084]
[148.58897400 -65.85508728]
[158.96286011 -55.02076721]
[166.59951782 -42.11024475]
[171.09832764 -27.80078506]
[172.22331238 -12.84302998]
[169.91543579 1.97836435]
[164.29579163 15.88589859]
[155.65805054 28.15124893]
[168.83052063 20.97588348]
[182.00299072 13.80051613]
[195.17547607 6.62515020]
[208.34794617 -0.55021620]
[201.93441772 -14.11451149]
[196.30572510 -28.02282715]
[191.48022461 -42.22979355]
[187.47364807 -56.68907547]
[184.29907227 -71.35350800]
[181.96685791 -86.17525482]
[180.48460388 -101.10597229]
[179.85714722 -116.09696198]
[180.08651733 -131.09931946]
[181.17199707 -146.06411743]
[183.11003113 -160.94253540]
[185.89430237 -175.68605042]
[189.51571655 -190.24658203]
[193.96246338 -204.57661438]
[199.22006226 -218.62940979]
[205.27133179 -232.35914612]
[212.09655762 -245.72102356]
[219.67346191 -258.67144775]
[227.97732544 -271.16821289]
[236.98109436 -283.17053223]
[246.65536499 -294.63928223]
[256.96859741 -305.53701782]
[267.88714600 -315.82821655]
[279.37542725 -325.47927856]
[291.39590454 -334.45877075]
[303.90942383 -342.73736572]
[316.87515259 -350.28808594]
[330.25082397 -357.08627319]
[343.99273682 -363.10980225]
[358.05615234 -368.33895874]
[372.39514160 -372.75674438]
[386.96295166 -376.34872437]
[401.71206665 -379.10321045]
[416.59436035 -381.01113892]
[431.56130981 -382.06637573]
[446.56411743 -382.26544189]
[461.55380249 -381.60769653]
[476.48150635 -380.09524536]
[491.29849243 -377.73309326]
[505.95648193 -374.52886963]
[520.40765381 -370.49310303]
[534.60479736 -365.63888550]
[548.50170898 -359.98208618]
[562.05303955 -353.54116821]
[575.21453857 -346.33712769]
[587.94329834 -338.39343262]
[600.19781494 -329.73605347]
[611.93811035 -320.39315796]
[623.12585449 -310.39529419]
[633.72460938 -299.77502441]
[643.69976807 -288.56701660]
[653.01879883 -276.80780029]
[661.65130615 -264.53573608]
[669.56915283 -251.79089355]
[676.74645996 -238.61480713]
[683.15991211 -225.05046082]
[688.78845215 -211.14210510]
[693.61389160 -196.93510437]
[697.62030029 -182.47578430]
[700.79479980 -167.81132507]
[703.12689209 -152.98956299]
[704.60900879 -138.05883789]
[705.23638916 -123.06784058]
[705.00683594 -108.06548309]
[703.92126465 -93.10069275]
[701.98309326 -78.22229004]
[699.19873047 -63.47879028]
[695.57720947 -48.91830063]
[691.13037109 -34.58830261]
[685.87261963 -20.53554344]
[679.82128906 -6.80585957]
[672.99591064 6.55596495]
[665.41894531 19.50634766]
[657.11499023 32.00304413]
[648.11108398 44.00529861]
[638.43676758 55.47395325]
[628.12341309 66.37160492]
[617.20477295 76.66271210]
[605.71643066 86.31369781]
[593.69586182 95.29308319]
[581.18231201 103.57158661]
[568.21649170 111.12220764]
[554.84082031 117.92030334]
[541.09881592 123.94370270]
[527.03540039 129.17277527]
[512.69635010 133.59043884]
[498.12854004 137.18231201]
[483.37939453 139.93666077]
[468.49707031 141.84449768]
[453.53009033 142.89961243]
[438.52731323 143.09855652]
[423.53762817 142.44067383]
[408.60995483 140.92813110]
[393.79296875 138.56584167]
[379.13500977 135.36152649]
[364.68386841 131.32562256]
[350.48672485 126.47130585]
[336.58987427 120.81440735]
[323.03860474 114.37337494]
[309.87716675 107.16921997]
[297.14846802 99.22544098]
[284.89401245 90.56794739]
[273.15380859 81.22498322]
[261.96612549 71.22702026]
[251.36747742 60.60666656]
[241.39241028 49.39857101]
[232.07347107 37.63928986]
[223.44105530 25.36717415]
[215.52331543 12.62225914]
[202.35083008 19.79762650]
[189.17835999 26.97299194]
[176.00588989 34.14835739]
[162.83340454 41.32372665]
[151.21614075 50.81262207]
[141.55534363 62.28732300]
[131.89453125 73.76202393]
[122.23371887 85.23672485]
[112.57290649 96.71142578]
[103.25801849 108.46867371]
[94.29732513 120.49805450]
[85.33663177 132.52743530]
[76.37593079 144.55680847]
[67.41523743 156.58618164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 210]
[45 209]
[46 208]
[47 207]
[48 206]
[53 205]
[54 204]
[55 203]
[56 202]
[57 201]
[83 200]
[84 199]
[85 198]
[86 197]
[87 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
