%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[89.31864166 507.05853271]
[74.32279205 506.38827515]
[59.45276260 504.33718872]
[44.83541870 500.92282104]
[30.59547043 496.17431641]
[16.85441399 490.13211060]
[3.72948360 482.84783936]
[-8.66734123 474.38357544]
[-20.23029137 464.81161499]
[-30.86071587 454.21356201]
[-40.46791458 442.67984009]
[-48.96992493 430.30889893]
[-56.29420471 417.20623779]
[-62.37826920 403.48367310]
[-67.17020416 389.25827026]
[-70.62912750 374.65139771]
[-72.72553253 359.78771973]
[-73.44153595 344.79397583]
[-72.77101898 329.79812622]
[-70.71970367 314.92813110]
[-67.30509949 300.31085205]
[-62.55632782 286.07098389]
[-56.51391602 272.33004761]
[-49.22940826 259.20523071]
[-40.76496124 246.80853271]
[-31.19278717 235.24574280]
[-20.59455681 224.61550903]
[-9.06069088 215.00849915]
[3.31040382 206.50668335]
[16.41318130 199.18263245]
[30.13584900 193.09880066]
[44.36132812 188.30709839]
[58.96825027 184.84841919]
[73.83198547 182.75225830]
[88.82572937 182.03649902]
[89.49551392 167.05146790]
[90.16530609 152.06642151]
[90.83509064 137.08139038]
[77.35357666 130.75978088]
[67.31342316 119.76391602]
[62.24032593 105.76472473]
[62.90520096 90.88951111]
[69.20701599 77.39874268]
[80.18813324 67.34246063]
[94.17987061 62.24882507]
[94.84965515 47.26378632]
[95.51944733 32.27874756]
[93.38252258 28.49886322]
[92.63477325 24.62518311]
[93.13509369 21.10593987]
[94.61132050 18.29749489]
[96.70152283 16.42955589]
[98.26204681 1.51095200]
[99.82257080 -13.40765285]
[101.38309479 -28.32625771]
[102.94361877 -43.24486160]
[88.13800049 -45.67881393]
[73.50074005 -48.97748184]
[59.08230591 -53.12948990]
[44.93239594 -58.12052917]
[31.09978294 -63.93338776]
[17.63216019 -70.54803467]
[4.57594681 -77.94167328]
[-8.02384567 -86.08879852]
[-20.12378502 -94.96133423]
[-31.68215752 -104.52870178]
[-42.65912247 -114.75791168]
[-53.01683807 -125.61370850]
[-62.71959686 -137.05865479]
[-71.73395538 -149.05331421]
[-80.02883148 -161.55633545]
[-87.57563782 -174.52461243]
[-94.34835815 -187.91343689]
[-100.32364655 -201.67666626]
[-105.48090363 -215.76684570]
[-109.80234528 -230.13540649]
[-113.27308655 -244.73281860]
[-115.88114929 -259.50875854]
[-117.61755371 -274.41229248]
[-118.47630310 -289.39205933]
[-118.45445251 -304.39639282]
[-117.55206299 -319.37356567]
[-115.77225494 -334.27200317]
[-113.12115479 -349.04028320]
[-109.60791016 -363.62750244]
[-105.24462891 -377.98342896]
[-100.04634857 -392.05853271]
[-94.03099060 -405.80429077]
[-87.21929932 -419.17333984]
[-79.63474274 -432.11956787]
[-71.30348206 -444.59835815]
[-62.25421906 -456.56671143]
[-52.51816177 -467.98336792]
[-42.12886810 -478.80892944]
[-31.12215042 -489.00610352]
[-19.53595543 -498.53976440]
[-7.41022158 -507.37701416]
[5.21325111 -515.48742676]
[18.29094696 -522.84295654]
[31.77778244 -529.41839600]
[45.62726593 -535.19091797]
[59.79166031 -540.14068604]
[74.22212982 -544.25067139]
[88.86893463 -547.50671387]
[103.68157959 -549.89752197]
[118.60900879 -551.41491699]
[133.59976196 -552.05358887]
[148.60214233 -551.81140137]
[163.56446838 -550.68920898]
[178.43515015 -548.69079590]
[193.16290283 -545.82312012]
[207.69699097 -542.09606934]
[221.98727417 -537.52246094]
[235.98452759 -532.11804199]
[249.64047241 -525.90148926]
[262.90805054 -518.89422607]
[275.74151611 -511.12039185]
[288.09664917 -502.60678101]
[299.93081665 -493.38275146]
[311.20324707 -483.48010254]
[321.87512207 -472.93295288]
[331.90957642 -461.77770996]
[341.27206421 -450.05276489]
[349.93032837 -437.79855347]
[357.85446167 -425.05737305]
[365.01721191 -411.87307739]
[371.39382935 -398.29113770]
[376.96240234 -384.35836792]
[381.70367432 -370.12283325]
[385.60131836 -355.63354492]
[388.64190674 -340.94052124]
[390.81494141 -326.09436035]
[392.11294556 -311.14627075]
[392.53146362 -296.14776611]
[392.06900024 -281.15054321]
[390.72720337 -266.20629883]
[388.51068115 -251.36657715]
[385.42703247 -236.68251038]
[381.48696899 -222.20472717]
[376.70401001 -207.98313904]
[371.09463501 -194.06675720]
[364.67825317 -180.50357056]
[357.47689819 -167.34031677]
[349.51544189 -154.62237549]
[340.82131958 -142.39361572]
[331.42453003 -130.69615173]
[321.35742188 -119.57034302]
[310.65469360 -109.05451965]
[299.35330200 -99.18493652]
[287.49215698 -89.99562073]
[275.11212158 -81.51824951]
[262.25595093 -73.78205109]
[248.96789551 -66.81368256]
[235.29377747 -60.63717270]
[221.28076172 -55.27381134]
[206.97712708 -50.74208450]
[192.43218994 -47.05762100]
[177.69609070 -44.23311615]
[162.81962585 -42.27830887]
[147.85408020 -41.19993973]
[132.85102844 -41.00172043]
[117.86222076 -41.68433762]
[116.30169678 -26.76573372]
[114.74118042 -11.84712982]
[113.18065643 3.07147503]
[111.62013245 17.99007988]
[110.50448608 32.94853210]
[109.83469391 47.93357086]
[109.16490936 62.91860962]
[122.64642334 69.24021149]
[132.68658447 80.23608398]
[137.75967407 94.23527527]
[137.09480286 109.11048889]
[130.79298401 122.60125732]
[119.81186676 132.65754700]
[105.82012939 137.75117493]
[105.15034485 152.73620605]
[104.48055267 167.72125244]
[103.81076813 182.70628357]
[118.68087006 184.75686646]
[133.29832458 188.17073059]
[147.53843689 192.91879272]
[161.27969360 198.96052551]
[174.40486145 206.24436951]
[186.80197144 214.70820618]
[198.36523438 224.27980042]
[208.99601746 234.87748718]
[218.60360718 246.41087341]
[227.10601807 258.78155518]
[234.43074036 271.88397217]
[240.51525879 285.60632324]
[245.30767822 299.83157349]
[248.76708984 314.43832397]
[250.86398315 329.30194092]
[251.58047485 344.29565430]
[250.91046143 359.29150391]
[248.85964966 374.16156006]
[245.44552612 388.77899170]
[240.69723511 403.01901245]
[234.65527344 416.76016235]
[227.37120056 429.88522339]
[218.90716553 442.28216553]
[209.33538818 453.84527588]
[198.73750305 464.47589111]
[187.20396423 474.08328247]
[174.83314514 482.58551025]
[161.73062134 489.91000366]
[148.00814819 495.99429321]
[133.78283691 500.78646851]
[119.17602539 504.24563599]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 179]
[36 178]
[37 177]
[38 176]
[45 169]
[46 168]
[47 167]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
