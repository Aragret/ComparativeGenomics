%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[76.91381836 340.76263428]
[76.71550751 355.78509521]
[74.47341919 370.64062500]
[70.22931671 385.05245972]
[64.06226349 398.75213623]
[56.08715057 411.48443604]
[46.45255280 423.01214600]
[35.33795547 433.12054443]
[22.95041084 441.62127686]
[9.52069855 448.35601807]
[-4.70099688 453.19927979]
[-19.44973373 456.06082153]
[-34.45075226 456.88735962]
[-49.42459488 455.66351318]
[-64.09230804 452.41204834]
[-78.18063354 447.19354248]
[-91.42711639 440.10522461]
[-103.58499146 431.27911377]
[-114.42776489 420.87969971]
[-123.75343323 409.10064697]
[-131.38825989 396.16143799]
[-137.19003296 382.30313110]
[-141.05065918 367.78384399]
[-142.89820862 352.87411499]
[-142.69827271 337.85165405]
[-140.45457458 322.99636841]
[-136.20890808 308.58499146]
[-130.04037476 294.88598633]
[-122.06388855 282.15454102]
[-112.42804718 270.62786865]
[-101.31234741 260.52069092]
[-88.92388916 252.02130127]
[-75.49344635 245.28802490]
[-61.27122498 240.44630432]
[-46.52217865 237.58634949]
[-31.52107048 236.76142883]
[-16.54736137 237.98690796]
[-1.88000453 241.23995972]
[12.20775795 246.45999146]
[19.28486252 233.23446655]
[26.36196899 220.00894165]
[33.43907547 206.78341675]
[40.51617813 193.55787659]
[39.69900513 178.68571472]
[53.03201294 170.16857910]
[45.07645798 159.06785583]
[42.66832352 145.55749512]
[46.33368683 132.26411438]
[55.41220093 121.79707336]
[68.17523956 116.23641205]
[82.15484619 116.71955109]
[89.42807007 103.60086060]
[96.60343933 90.42838287]
[103.68054199 77.20285797]
[110.75765228 63.97732544]
[117.83475494 50.75180054]
[124.91186523 37.52627182]
[112.70127869 46.23842621]
[98.77881622 51.82099533]
[83.93186188 53.95825195]
[69.00007629 52.52933121]
[54.82792664 47.61503983]
[42.21692276 39.49330902]
[31.88027000 28.62346077]
[24.40255928 15.62023544]
[20.20669365 1.21903086]
[19.52996635 -13.76569557]
[22.41065025 -28.48648643]
[28.68582916 -42.11080551]
[38.00061417 -53.86813736]
[49.82820129 -63.09354401]
[63.49969101 -69.26528168]
[78.24188995 -72.03431702]
[93.22106171 -71.24404144]
[107.59004974 -66.93914795]
[120.53622437 -59.36309814]
[131.32742310 -48.94435883]
[139.35334778 -36.27216339]
[144.16007996 -22.06317711]
[145.47579956 -7.12099075]
[143.22607422 7.70934105]
[137.53762817 21.59003067]
[148.79371643 11.67537880]
[160.04981995 1.76072800]
[170.04798889 -9.42124653]
[178.64654541 -21.71208382]
[187.24511719 -34.00292206]
[195.84367371 -46.29376221]
[194.37130737 -59.10761642]
[201.78610229 -69.16766357]
[213.67405701 -71.40446472]
[222.45466614 -83.56591797]
[231.23526001 -95.72737122]
[240.01586914 -107.88883209]
[228.73513794 -117.79286957]
[218.44696045 -128.72438049]
[209.24447632 -140.58436584]
[201.21102905 -153.26539612]
[194.41938782 -166.65263367]
[188.93106079 -180.62486267]
[184.79574585 -195.05552673]
[182.05088806 -209.81391907]
[180.72134399 -224.76641846]
[180.81916809 -239.77758789]
[182.34347534 -254.71148682]
[185.28045654 -269.43286133]
[189.60350037 -283.80841064]
[195.27346802 -297.70791626]
[202.23899841 -311.00549316]
[210.43702698 -323.58074951]
[219.79330444 -335.31979370]
[230.22309875 -346.11627197]
[241.63194275 -355.87246704]
[253.91651917 -364.49996948]
[266.96557617 -371.92068481]
[280.66091919 -378.06738281]
[294.87857056 -382.88439941]
[309.48971558 -386.32812500]
[324.36203003 -388.36734009]
[339.36087036 -388.98364258]
[354.35037231 -388.17138672]
[369.19476318 -385.93792725]
[383.75967407 -382.30355835]
[397.91311646 -377.30111694]
[411.52697754 -370.97595215]
[424.47793579 -363.38534546]
[436.64871216 -354.59802246]
[447.92907715 -344.69354248]
[458.21685791 -333.76165771]
[467.41891479 -321.90136719]
[475.45187378 -309.22003174]
[482.24304199 -295.83251953]
[487.73086548 -281.86010742]
[491.86566162 -267.42929077]
[494.60995483 -252.67079163]
[495.93896484 -237.71826172]
[495.84057617 -222.70709229]
[494.31573486 -207.77325439]
[491.37823486 -193.05198669]
[487.05465698 -178.67660522]
[481.38418579 -164.77729797]
[474.41815186 -151.47996521]
[466.21966553 -138.90499878]
[456.86297607 -127.16631317]
[446.43280029 -116.37020111]
[435.02359009 -106.61444092]
[422.73870850 -97.98737335]
[409.68936157 -90.56714630]
[395.99380493 -84.42094421]
[381.77597046 -79.60443878]
[367.16470337 -76.16124725]
[352.29229736 -74.12255859]
[337.29345703 -73.50682068]
[322.30398560 -74.31962585]
[307.45965576 -76.55360413]
[292.89489746 -80.18852997]
[278.74163818 -85.19147491]
[265.12799072 -91.51713562]
[252.17732239 -99.10822296]
[243.39671326 -86.94676971]
[234.61611938 -74.78531647]
[225.83551025 -62.62385941]
[224.99645996 -45.09494019]
[208.13452148 -37.69519806]
[199.53594971 -25.40435791]
[190.93739319 -13.11352062]
[182.33882141 -0.82268268]
[195.81091309 -7.41834688]
[210.71888733 -9.07731152]
[225.31138611 -5.60468435]
[237.87408447 2.59157515]
[246.93112183 14.54857826]
[251.41850281 28.86162758]
[250.80905151 43.84924316]
[245.17436218 57.75069046]
[235.17639160 68.93284607]
[221.98968506 76.08203125]
[207.16342163 78.35838318]
[192.43936157 75.49446869]
[179.54727173 67.82673645]
[170.00170898 56.25598526]
[164.92408752 42.14153671]
[164.91088867 27.14154434]
[169.96446228 13.01682377]
[158.70837402 22.93147469]
[147.45227051 32.84612656]
[138.13739014 44.60337830]
[131.06028748 57.82890320]
[123.98317719 71.05443573]
[116.90607452 84.27996063]
[109.82896423 97.50548553]
[109.10485077 105.53344727]
[102.54676819 110.87408447]
[95.27353668 123.99278259]
[103.93392944 138.07786560]
[104.30730438 154.51428223]
[96.38642883 168.81381226]
[82.41602325 177.11946106]
[66.25754547 177.24569702]
[66.56851196 193.06384277]
[53.74170685 200.63499451]
[46.66460037 213.86051941]
[39.58749771 227.08604431]
[32.51039124 240.31156921]
[25.43328476 253.53709412]
[37.59211731 262.36187744]
[48.43600845 272.76013184]
[57.76295090 284.53814697]
[65.39918518 297.47653198]
[71.20246124 311.33422852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 205]
[40 204]
[41 203]
[42 202]
[43 201]
[45 199]
[51 194]
[52 193]
[53 191]
[54 190]
[55 189]
[56 188]
[57 187]
[82 186]
[83 185]
[84 184]
[85 167]
[86 166]
[87 165]
[88 164]
[91 162]
[92 161]
[93 160]
[94 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
