%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[37.88242722 421.95812988]
[36.80133438 436.94915771]
[33.44442368 451.59948730]
[27.89039230 465.56561279]
[20.26943207 478.52020264]
[10.76019192 490.15957642]
[-0.41441959 500.21087646]
[-12.99245358 508.43847656]
[-26.67906380 514.64953613]
[-41.15341568 518.69842529]
[-56.07620621 520.49023438]
[-71.09763336 519.98303223]
[-85.86556244 517.18865967]
[-100.03381348 512.17254639]
[-113.27027130 505.05239868]
[-125.26464844 495.99505615]
[-135.73577881 485.21286011]
[-144.43820190 472.95855713]
[-151.16792297 459.51937866]
[-155.76719666 445.21038818]
[-158.12818909 430.36700439]
[-158.19557190 415.33715820]
[-155.96775818 400.47320557]
[-151.49697876 386.12356567]
[-144.88803101 372.62457275]
[-136.29583740 360.29272461]
[-125.92180634 349.41708374]
[-114.00912476 340.25256348]
[-100.83704376 333.01400757]
[-86.71433258 327.87109375]
[-71.97205353 324.94436646]
[-56.95578384 324.30249023]
[-42.01752472 325.96044922]
[-27.50745010 329.87939453]
[-29.42850494 315.10919189]
[-16.76589775 305.62399292]
[-10.69206429 291.90872192]
[-4.61823034 278.19345093]
[1.45560372 264.47821045]
[7.52943754 250.76292419]
[7.36362314 243.37413025]
[13.79715633 236.88972473]
[20.07451820 223.26641846]
[26.35187721 209.64309692]
[32.62923813 196.01979065]
[28.73587418 184.56690979]
[33.85415268 173.16572571]
[45.73781586 168.15161133]
[52.21731186 154.62326050]
[58.69680786 141.09492493]
[46.57245255 149.92668152]
[32.25688934 154.40603638]
[17.26087379 154.06028748]
[3.16697335 148.92588806]
[-8.53745174 139.54472351]
[-16.61720467 126.90677643]
[-20.21961021 112.34577942]
[-18.96449661 97.39838409]
[-12.98431969 83.64202118]
[-2.91018295 72.52843475]
[10.19476700 65.23046875]
[24.94753265 62.51829910]
[39.79122162 64.67813873]
[53.15934372 71.48206329]
[63.64112473 82.21202850]
[70.13040161 95.73568726]
[71.94234467 110.62584686]
[68.88566589 125.31129456]
[78.54647827 113.83659363]
[88.20729065 102.36189270]
[97.69618988 90.74462891]
[107.01107025 78.98738098]
[116.32595062 67.23012543]
[125.64083862 55.47287750]
[134.95571899 43.71562576]
[137.83197021 35.04585266]
[144.49786377 31.85403061]
[147.50286865 23.22803879]
[154.21554565 20.13581657]
[163.87635803 8.66111565]
[166.84553528 -6.87897921]
[180.96145630 -11.63184834]
[190.62226868 -23.10654831]
[200.28308105 -34.58124924]
[209.94389343 -46.05595016]
[210.85707092 -51.19532394]
[213.39639282 -55.08185577]
[216.81231689 -57.30593491]
[220.30136108 -57.81478119]
[230.46490479 -68.84665680]
[240.62846375 -79.87853241]
[250.79200745 -90.91041565]
[260.95556641 -101.94229126]
[271.11911011 -112.97416687]
[281.28265381 -124.00604248]
[291.44619751 -135.03791809]
[301.60974121 -146.06979370]
[311.77328491 -157.10166931]
[321.93682861 -168.13356018]
[311.94570923 -179.33821106]
[303.10095215 -191.46821594]
[295.48776245 -204.40676880]
[289.17944336 -218.02925110]
[284.23675537 -232.20446777]
[280.70730591 -246.79588318]
[278.62509155 -261.66299438]
[278.01013184 -276.66262817]
[278.86837769 -291.65029907]
[281.19155884 -306.48165894]
[284.95730591 -321.01391602]
[290.12933350 -335.10705566]
[296.65786743 -348.62539673]
[304.47998047 -361.43872070]
[313.52038574 -373.42361450]
[323.69198608 -384.46469116]
[334.89685059 -394.45556641]
[347.02703857 -403.30007935]
[359.96572876 -410.91302490]
[373.58834839 -417.22106934]
[387.76364136 -422.16345215]
[402.35513306 -425.69262695]
[417.22229004 -427.77456665]
[432.22192383 -428.38922119]
[447.20959473 -427.53067017]
[462.04092407 -425.20718384]
[476.57308960 -421.44116211]
[490.66610718 -416.26882935]
[504.18432617 -409.74005127]
[516.99749756 -401.91766357]
[528.98223877 -392.87704468]
[540.02307129 -382.70520020]
[550.01373291 -371.50015259]
[558.85803223 -359.36978149]
[566.47070312 -346.43093872]
[572.77844238 -332.80819702]
[577.72058105 -318.63278198]
[581.24945068 -304.04122925]
[583.33105469 -289.17401123]
[583.94543457 -274.17437744]
[583.08660889 -259.18673706]
[580.76281738 -244.35545349]
[576.99652100 -229.82336426]
[571.82391357 -215.73042297]
[565.29486084 -202.21235657]
[557.47222900 -189.39935303]
[548.43133545 -177.41481018]
[538.25927734 -166.37414551]
[527.05401611 -156.38369751]
[514.92346191 -147.53967285]
[501.98446655 -139.92726135]
[488.36160278 -133.61976624]
[474.18609619 -128.67791748]
[459.59445190 -125.14934540]
[444.72723389 -123.06800842]
[429.72756958 -122.45395660]
[414.73995972 -123.31310272]
[399.90872192 -125.63717651]
[385.37670898 -129.40379333]
[371.28387451 -134.57666016]
[357.76593018 -141.10600281]
[344.95306396 -148.92889404]
[332.96871948 -157.97000122]
[322.80517578 -146.93812561]
[312.64160156 -135.90625000]
[302.47805786 -124.87437439]
[292.31451416 -113.84249878]
[282.15097046 -102.81062317]
[271.98742676 -91.77873993]
[261.82388306 -80.74686432]
[251.66033936 -69.71498871]
[241.49678040 -58.68311310]
[231.33323669 -47.65123367]
[221.41859436 -36.39513779]
[211.75778198 -24.92043877]
[202.09696960 -13.44573784]
[192.43615723 -1.97103798]
[190.15798950 12.74831009]
[175.35104370 18.32192612]
[165.69024658 29.79662704]
[156.11512756 41.34292984]
[146.71296692 53.03050995]
[137.39808655 64.78775787]
[128.08320618 76.54501343]
[118.76831818 88.30226135]
[109.45343781 100.05951691]
[108.86208344 105.27144623]
[105.39266968 109.78105164]
[99.68199158 112.02270508]
[90.02117920 123.49740601]
[80.36036682 134.97210693]
[72.22515106 147.57441711]
[65.74565887 161.10276794]
[59.26615906 174.63110352]
[61.10699844 192.95303345]
[46.25255585 202.29714966]
[39.97519302 215.92045593]
[33.69783401 229.54377747]
[27.42047310 243.16709900]
[21.24470520 256.83676147]
[15.17087078 270.55203247]
[9.09703636 284.26730347]
[3.02320242 297.98257446]
[-3.05063152 311.69781494]
[-1.56401932 327.44903564]
[-13.79218388 335.95321655]
[-1.13839757 344.06384277]
[10.12893772 354.01107788]
[19.74569893 365.56176758]
[27.48645592 378.44512939]
[33.16975403 392.35919189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 205]
[36 203]
[37 202]
[38 201]
[39 200]
[40 199]
[42 198]
[43 197]
[44 196]
[45 195]
[48 193]
[49 192]
[50 191]
[68 190]
[69 189]
[70 188]
[71 185]
[72 184]
[73 183]
[74 182]
[75 181]
[77 180]
[79 179]
[80 178]
[82 176]
[83 175]
[84 174]
[85 173]
[89 172]
[90 171]
[91 170]
[92 169]
[93 168]
[94 167]
[95 166]
[96 165]
[97 164]
[98 163]
[99 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
