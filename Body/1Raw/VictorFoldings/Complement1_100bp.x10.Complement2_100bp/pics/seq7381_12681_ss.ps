%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[89.43756104 588.78979492]
[75.65737915 594.93548584]
[60.75598526 597.30419922]
[45.74937439 595.73443604]
[31.66072655 590.33331299]
[19.45062447 581.46899414]
[9.95157719 569.74591064]
[3.81124449 555.96337891]
[1.44828403 541.06103516]
[3.02380681 526.05505371]
[8.43039131 511.96850586]
[17.29940605 499.76181030]
[29.02614975 490.26730347]
[42.81106949 484.13229370]
[57.71429062 481.77508545]
[59.27481461 466.85647583]
[60.83533859 451.93786621]
[62.39586258 437.01925659]
[63.95638275 422.10064697]
[65.51690674 407.18206787]
[66.96632385 392.25225830]
[68.30455780 377.31207275]
[61.73358536 363.94525146]
[70.67121887 350.89041138]
[72.00945282 335.95022583]
[65.43848419 322.58340454]
[74.37612152 309.52856445]
[75.71435547 294.58837891]
[69.14337921 281.22155762]
[78.08101654 268.16671753]
[75.54679871 261.22412109]
[79.55201721 253.01460266]
[81.11253357 238.09600830]
[82.67305756 223.17739868]
[84.12247467 208.24758911]
[85.46070862 193.30740356]
[78.88973999 179.94059753]
[87.82737732 166.88574219]
[89.16561127 151.94555664]
[90.28125763 136.98710632]
[91.17407227 122.01370239]
[92.06688690 107.04029846]
[92.40186310 92.04403687]
[84.45996094 78.36058807]
[92.00691223 65.51953125]
[84.06500244 51.83608627]
[91.61195374 38.99502945]
[91.38862610 23.99669075]
[91.16529846 8.99835300]
[87.90847015 0.46425271]
[91.05197144 -6.22455883]
[91.05197144 -21.22455788]
[87.92256165 -29.80620193]
[91.16529846 -36.44747162]
[91.38862610 -51.44580841]
[91.61195374 -66.44414520]
[91.83528137 -81.44248199]
[92.05860901 -96.44081879]
[92.28193665 -111.43915558]
[89.28064728 -120.06644440]
[92.62190247 -126.65869141]
[93.06851196 -141.65203857]
[93.51511383 -156.64540100]
[78.35196686 -165.52864075]
[69.82003784 -180.79025269]
[70.19104004 -198.18180847]
[79.27257538 -212.91404724]
[94.48597717 -220.97573853]
[94.48597717 -235.97573853]
[84.91129303 -251.70491028]
[94.27201843 -266.54888916]
[94.04869080 -281.54721069]
[93.82536316 -296.54556274]
[93.60203552 -311.54391479]
[93.37870789 -326.54223633]
[93.15538025 -341.54058838]
[91.37290955 -356.43429565]
[88.05065155 -371.06173706]
[84.72839355 -385.68920898]
[80.52426147 -390.79183960]
[79.65818024 -396.40850830]
[81.53185272 -400.80151367]
[78.64657593 -415.52139282]
[75.76130676 -430.24127197]
[72.87602997 -444.96118164]
[57.81956482 -445.30297852]
[43.18869400 -448.87393188]
[29.66773605 -455.50701904]
[17.88908577 -464.89196777]
[8.40365505 -476.58987427]
[1.65509462 -490.05355835]
[-2.04095387 -504.65332031]
[-2.51161909 -519.70629883]
[0.26511246 -534.50848389]
[6.15936804 -548.36749268]
[14.89546299 -560.63513184]
[26.06479454 -570.73760986]
[39.14495087 -578.20239258]
[53.52415466 -582.68041992]
[68.52985382 -583.96221924]
[83.46022034 -581.98779297]
[97.61692047 -576.84948730]
[110.33782196 -568.78765869]
[121.02794647 -558.17944336]
[129.18730164 -545.52087402]
[134.43426514 -531.40411377]
[136.52340698 -516.48931885]
[135.35702515 -501.47424316]
[130.98968506 -487.06103516]
[123.62563324 -473.92385864]
[113.60931396 -462.67721558]
[101.40920258 -453.84707642]
[87.59592438 -447.84643555]
[90.48120117 -433.12655640]
[93.36647034 -418.40667725]
[96.25173950 -403.68676758]
[99.35585022 -389.01147461]
[102.67811584 -374.38400269]
[106.00037384 -359.75656128]
[110.56873322 -374.04397583]
[120.19810486 -385.54504395]
[133.46003723 -392.55371094]
[148.38719177 -394.03024292]
[162.76521301 -389.75561523]
[174.46121216 -380.36392212]
[181.74014282 -367.24841309]
[183.52224731 -352.35464478]
[179.54313660 -337.89205933]
[170.39311218 -326.00607300]
[157.42948914 -318.45989990]
[142.57537842 -316.37295532]
[128.03427124 -320.05487061]
[115.96327972 -328.95944214]
[108.15371704 -341.76391602]
[108.37704468 -326.76556396]
[108.60037231 -311.76724243]
[108.82369995 -296.76889038]
[109.04702759 -281.77053833]
[109.27035522 -266.77221680]
[117.72899628 -258.12478638]
[118.03780365 -245.63125610]
[109.48597717 -235.97573853]
[109.48597717 -220.97573853]
[121.04362488 -215.87289429]
[129.84527588 -206.74427795]
[134.55795288 -194.92147827]
[134.44871521 -182.14778137]
[129.49847412 -170.32112122]
[120.41000366 -161.21206665]
[108.50846863 -156.19879150]
[108.06185913 -141.20544434]
[107.61525726 -126.21208954]
[107.28028107 -111.21582794]
[107.05695343 -96.21749115]
[106.83361816 -81.21915436]
[106.61029053 -66.22081757]
[106.38696289 -51.22248077]
[106.16363525 -36.22414398]
[106.05197144 -21.22455788]
[106.05197144 -6.22455883]
[106.16363525 8.77502537]
[106.38696289 23.77336311]
[106.61029053 38.77170181]
[114.53622437 51.38236618]
[107.00524902 65.29620361]
[114.93118286 77.90686798]
[107.40019989 91.82070923]
[119.56148529 83.03986359]
[134.04937744 86.92584991]
[140.18395996 100.61405945]
[133.44302368 114.01405334]
[118.79575348 117.24785614]
[107.04029846 107.93311310]
[106.14747620 122.90651703]
[105.25466156 137.87992859]
[107.86737061 143.95324707]
[107.13122559 149.58842468]
[104.10579681 153.28379822]
[102.76756287 168.22398376]
[109.24281311 182.65940857]
[100.40089417 194.64564514]
[99.06266022 209.58583069]
[101.41397858 218.41244507]
[97.59166718 224.73793030]
[96.03114319 239.65652466]
[94.47061920 254.57513428]
[93.02120209 269.50494385]
[99.49645233 283.94036865]
[90.65454102 295.92660522]
[89.31629944 310.86679077]
[95.79155731 325.30221558]
[86.94963837 337.28845215]
[85.61140442 352.22863770]
[92.08666229 366.66406250]
[83.24474335 378.65029907]
[81.90650940 393.59048462]
[84.25782013 402.41708374]
[80.43550873 408.74258423]
[78.87498474 423.66119385]
[77.31446838 438.57980347]
[75.75394440 453.49838257]
[74.19342041 468.41699219]
[72.63289642 483.33560181]
[86.72571564 488.72586060]
[98.94265747 497.58074951]
[108.45075226 509.29647827]
[114.60173035 523.07427979]
[116.97619629 537.97473145]
[115.41226196 552.98199463]
[110.01655579 567.07269287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[21 196]
[22 195]
[24 193]
[25 192]
[27 190]
[28 189]
[30 187]
[32 186]
[33 185]
[34 184]
[35 182]
[36 181]
[38 179]
[39 178]
[40 175]
[41 174]
[42 173]
[43 167]
[45 165]
[47 163]
[48 162]
[49 161]
[51 160]
[52 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[61 152]
[62 151]
[63 150]
[68 143]
[69 142]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[76 134]
[77 119]
[78 118]
[79 117]
[82 116]
[83 115]
[84 114]
[85 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
