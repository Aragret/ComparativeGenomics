%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[83.37490082 368.32397461]
[79.50399017 382.82983398]
[74.16207123 396.86080933]
[67.40576935 410.26812744]
[59.30669785 422.90969849]
[49.95071793 434.65148926]
[39.43700790 445.36901855]
[27.87701797 454.94873047]
[15.39329052 463.28903198]
[2.11815906 470.30151367]
[-11.80765152 475.91183472]
[-26.23651886 480.06054688]
[-41.01549149 482.70367432]
[-55.98789978 483.81314087]
[-70.99503326 483.37725830]
[-85.87780762 481.40060425]
[-100.47844696 477.90414429]
[-114.64218903 472.92495728]
[-128.21888733 466.51577759]
[-141.06462097 458.74459839]
[-153.04319763 449.69378662]
[-164.02767944 439.45925903]
[-173.90159607 428.14953613]
[-182.56027222 415.88449097]
[-189.91194153 402.79415894]
[-195.87866211 389.01727295]
[-200.39718628 374.69992065]
[-203.41961670 359.99383545]
[-204.91389465 345.05490112]
[-204.86421204 330.04153442]
[-203.27107239 315.11282349]
[-200.15138245 300.42706299]
[-195.53819275 286.13992310]
[-189.48040771 272.40286255]
[-182.04225159 259.36145020]
[-173.30258179 247.15399170]
[-163.35401917 235.90988159]
[-152.30204773 225.74829102]
[-140.26380920 216.77694702]
[-127.36692810 209.09095764]
[-113.74810791 202.77180481]
[-99.55171967 197.88645935]
[-84.92825317 194.48670959]
[-70.03272247 192.60861206]
[-55.02303696 192.27206421]
[-40.05830002 193.48063660]
[-25.29714584 196.22149658]
[-10.89605331 200.46562195]
[2.99231672 206.16801453]
[16.22074127 213.26820374]
[24.63536072 200.85070801]
[33.04998016 188.43321228]
[41.46459579 176.01571655]
[42.19908142 161.13923645]
[56.34581757 154.05543518]
[64.57462311 141.51402283]
[72.61579895 128.85150146]
[80.65697479 116.18898010]
[88.69814301 103.52645111]
[75.33961487 110.34918213]
[60.39329529 111.61706543]
[46.07638168 107.14201355]
[34.51271057 97.58788300]
[27.41767883 84.37196350]
[25.84379196 69.45475769]
[30.02452850 55.04915619]
[39.33969879 43.29213333]
[52.40745544 35.92777634]
[67.28927612 34.04854584]
[81.77751923 37.93321228]
[93.72296143 47.00550842]
[101.35354614 59.91961288]
[103.53733063 74.75979614]
[99.95117188 89.32287598]
[110.43867493 78.59849548]
[120.92617798 67.87411499]
[131.41368103 57.14973450]
[141.90118408 46.42535400]
[143.19409180 41.36813736]
[146.01544189 37.68123245]
[149.58732605 35.71738052]
[153.10455322 35.46944427]
[164.06045532 25.22405434]
[175.01635742 14.97866249]
[179.14688110 6.83147430]
[186.21249390 4.66379166]
[197.31973267 -5.41734695]
[208.42695618 -15.49848557]
[219.53419495 -25.57962418]
[210.24844360 -37.36773300]
[201.80760193 -49.77486801]
[194.25282288 -62.74058914]
[187.62088013 -76.20172119]
[181.94409180 -90.09268188]
[177.25013733 -104.34580231]
[173.56185913 -118.89163971]
[170.89723206 -133.65933228]
[169.26925659 -148.57691956]
[168.68583679 -163.57173157]
[169.14984131 -178.57070923]
[170.65898132 -193.50077820]
[173.20593262 -208.28921509]
[176.77825928 -222.86396790]
[181.35858154 -237.15400696]
[186.92457581 -251.08973694]
[193.44911194 -264.60324097]
[200.90042114 -277.62872314]
[209.24220276 -290.10266113]
[218.43379211 -301.96435547]
[228.43043518 -313.15594482]
[239.18341064 -323.62295532]
[250.64033508 -333.31436157]
[262.74539185 -342.18298340]
[275.43960571 -350.18557739]
[288.66113281 -357.28317261]
[302.34558105 -363.44119263]
[316.42623901 -368.62960815]
[330.83450317 -372.82318115]
[345.50021362 -376.00146484]
[360.35192871 -378.14895630]
[375.31726074 -379.25524902]
[390.32330322 -379.31488037]
[405.29693604 -378.32760620]
[420.16522217 -376.29821777]
[434.85574341 -373.23660278]
[449.29690552 -369.15768433]
[463.41836548 -364.08132935]
[477.15130615 -358.03228760]
[490.42883301 -351.04000854]
[503.18624878 -343.13854980]
[515.36145020 -334.36642456]
[526.89501953 -324.76638794]
[537.73083496 -314.38519287]
[547.81610107 -303.27340698]
[557.10174561 -291.48513794]
[565.54235840 -279.07788086]
[573.09698486 -266.11206055]
[579.72869873 -252.65083313]
[585.40533447 -238.75979614]
[590.09906006 -224.50660706]
[593.78710938 -209.96070862]
[596.45153809 -195.19299316]
[598.07928467 -180.27537537]
[598.66253662 -165.28056335]
[598.19830322 -150.28158569]
[596.68896484 -135.35153198]
[594.14178467 -120.56313324]
[590.56921387 -105.98844147]
[585.98870850 -91.69846344]
[580.42254639 -77.76281738]
[573.89776611 -64.24939728]
[566.44628906 -51.22403717]
[558.10437012 -38.75020218]
[548.91259766 -26.88866043]
[538.91577148 -15.69719982]
[528.16265869 -5.23034668]
[516.70556641 4.46090651]
[504.60040283 13.32934380]
[491.90606689 21.33175850]
[478.68444824 28.42916298]
[464.99990845 34.58697891]
[450.91918945 39.77521133]
[436.51083374 43.96857452]
[421.84506226 47.14664459]
[406.99334717 49.29393387]
[392.02801514 50.39998627]
[377.02197266 50.45940781]
[362.04833984 49.47191238]
[347.18008423 47.44231033]
[332.48959351 44.38048935]
[318.04849243 40.30136871]
[303.92712402 35.22481918]
[290.19424438 29.17557144]
[276.91683960 22.18310165]
[264.15951538 14.28147316]
[251.98448181 5.50918388]
[240.45101929 -4.09102774]
[229.61534119 -14.47239113]
[218.50810242 -4.39125204]
[207.40086365 5.68988657]
[196.29364014 15.77102566]
[185.26174927 25.93457222]
[174.30584717 36.17996216]
[163.34992981 46.42535400]
[152.62556458 56.91285706]
[142.13806152 67.63723755]
[131.65055847 78.36161804]
[121.16305542 89.08599854]
[110.67555237 99.81037903]
[101.36067200 111.56762695]
[93.31949615 124.23014832]
[85.27832794 136.89266968]
[77.23715210 149.55520630]
[76.57732391 156.13366699]
[73.20111847 160.70512390]
[68.76331329 162.47004700]
[67.42696381 178.23471069]
[53.88209152 184.43034363]
[45.46747589 196.84783936]
[37.05285645 209.26533508]
[28.63823700 221.68283081]
[40.13545990 231.33776855]
[50.57899475 242.12371826]
[59.85814285 253.92631531]
[67.87453461 266.62048340]
[74.54319000 280.07159424]
[79.79342651 294.13714600]
[83.56958008 308.66793823]
[85.83161926 323.51004028]
[86.55557251 338.50601196]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 201]
[51 200]
[52 199]
[53 198]
[55 196]
[56 193]
[57 192]
[58 191]
[59 190]
[74 189]
[75 188]
[76 187]
[77 186]
[78 185]
[82 184]
[83 183]
[84 182]
[86 181]
[87 180]
[88 179]
[89 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
