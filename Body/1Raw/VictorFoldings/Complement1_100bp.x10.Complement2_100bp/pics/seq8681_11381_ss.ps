%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[12.20437717 510.31805420]
[1.23892164 520.55963135]
[-10.30868721 530.13995361]
[-22.39864349 539.02612305]
[-34.98926926 547.18737793]
[-48.03715897 554.59570312]
[-61.49733734 561.22546387]
[-75.32340240 567.05389404]
[-89.46769714 572.06085205]
[-103.88145447 576.22906494]
[-118.51499176 579.54418945]
[-133.31787109 581.99475098]
[-148.23904419 583.57238770]
[-163.22709656 584.27160645]
[-178.23034668 584.09002686]
[-193.19706726 583.02819824]
[-208.07569885 581.08990479]
[-222.81491089 578.28167725]
[-237.36392212 574.61334229]
[-251.67256165 570.09747314]
[-265.69152832 564.74963379]
[-279.37246704 558.58825684]
[-292.66821289 551.63458252]
[-305.53295898 543.91265869]
[-317.92236328 535.44897461]
[-329.79367065 526.27282715]
[-341.10601807 516.41577148]
[-351.82034302 505.91177368]
[-361.89978027 494.79711914]
[-371.30953979 483.11007690]
[-380.01718140 470.89093018]
[-387.99270630 458.18182373]
[-395.20861816 445.02655029]
[-401.64004517 431.47048950]
[-407.26480103 417.56033325]
[-412.06350708 403.34402466]
[-416.01962280 388.87063599]
[-419.11950684 374.18997192]
[-421.35247803 359.35272217]
[-422.71081543 344.40997314]
[-423.18988037 329.41329956]
[-422.78799438 314.41430664]
[-421.50653076 299.46478271]
[-419.34991455 284.61624146]
[-416.32562256 269.91986084]
[-412.44400024 255.42626953]
[-407.71850586 241.18548584]
[-402.16537476 227.24656677]
[-395.80380249 213.65757751]
[-388.65567017 200.46536255]
[-380.74560547 187.71539307]
[-372.10095215 175.45161438]
[-362.75143433 163.71632385]
[-352.72933960 152.54994202]
[-342.06918335 141.99099731]
[-330.80770874 132.07586670]
[-318.98373413 122.83874512]
[-306.63806152 114.31146240]
[-293.81320190 106.52341461]
[-280.55340576 99.50145721]
[-266.90432739 93.26979065]
[-252.91308594 87.84989166]
[-238.62786865 83.26045227]
[-224.09791565 79.51729584]
[-209.37335205 76.63331604]
[-194.50489807 74.61846924]
[-179.54382324 73.47968292]
[-164.54170227 73.22089386]
[-149.55026245 73.84298706]
[-134.62115479 75.34382629]
[-119.80587769 77.71823883]
[-105.15547943 80.95803070]
[-90.72046661 85.05204010]
[-76.55059814 89.98614502]
[-62.69473267 95.74334717]
[-49.20062256 102.30380249]
[-36.11479187 109.64488220]
[-23.48234558 117.74128723]
[-11.34683323 126.56510925]
[0.24991156 136.08592224]
[11.26791191 146.27091980]
[21.66918755 157.08499146]
[33.07165146 147.33901978]
[44.47411346 137.59304810]
[49.12176514 123.44213104]
[64.63932800 120.35735321]
[76.04178619 110.61138153]
[87.44425201 100.86541748]
[98.62622833 90.86724854]
[109.58213806 80.62185669]
[120.53804016 70.37646484]
[131.49395752 60.13107300]
[142.21833801 49.64356995]
[152.70584106 38.91918945]
[163.19332886 28.19481087]
[153.39074707 16.82893753]
[144.58737183 4.67268372]
[136.84664917 -8.18635941]
[130.22433472 -21.65554237]
[124.76816559 -35.63781738]
[120.51743317 -50.03243637]
[117.50277710 -64.73569489]
[115.74591827 -79.64163971]
[115.25950623 -94.64288330]
[116.04705048 -109.63133240]
[118.10288239 -124.49899292]
[121.41217804 -139.13874817]
[125.95110321 -153.44511414]
[131.68695068 -167.31500244]
[138.57839966 -180.64848328]
[146.57577515 -193.34950256]
[155.62147522 -205.32652283]
[165.65032959 -216.49327087]
[176.59005737 -226.76927185]
[188.36184692 -236.08049011]
[200.88087463 -244.35983276]
[214.05696106 -251.54765320]
[227.79515076 -257.59216309]
[241.99644470 -262.44979858]
[256.55856323 -266.08560181]
[271.37655640 -268.47329712]
[286.34362793 -269.59576416]
[301.35198975 -269.44485474]
[316.29351807 -268.02169800]
[331.06048584 -265.33651733]
[345.54653931 -261.40869141]
[359.64730835 -256.26647949]
[373.26116943 -249.94697571]
[386.29006958 -242.49568176]
[398.64010620 -233.96629333]
[410.22232056 -224.42027283]
[420.95321655 -213.92639160]
[430.75549316 -202.56025696]
[439.55856323 -190.40377808]
[447.29895020 -177.54454041]
[453.92092896 -164.07518005]
[459.37673950 -150.09277344]
[463.62710571 -135.69804382]
[466.64135742 -120.99470520]
[468.39785767 -106.08871460]
[468.88388062 -91.08745575]
[468.09594727 -76.09902954]
[466.03973389 -61.23141861]
[462.73004150 -46.59175110]
[458.19073486 -32.28550720]
[452.45455933 -18.41576385]
[445.56274414 -5.08245468]
[437.56503296 7.61835051]
[428.51904297 19.59514046]
[418.48989868 30.76162338]
[407.54989624 41.03734207]
[395.77786255 50.34825516]
[383.25863647 58.62727737]
[370.08236694 65.81476593]
[356.34402466 71.85891724]
[342.14257812 76.71619415]
[327.58038330 80.35160065]
[312.76232910 82.73893738]
[297.79522705 83.86100769]
[282.78686523 83.70972443]
[267.84539795 82.28617096]
[253.07847595 79.60061646]
[238.59252930 75.67240906]
[224.49189758 70.52983856]
[210.87817383 64.20997620]
[197.84947205 56.75834274]
[185.49966431 48.22863770]
[173.91770935 38.68231201]
[163.43020630 49.40669250]
[152.94271851 60.13107300]
[152.61630249 63.64188385]
[150.57316589 67.16901398]
[146.82417297 69.90733337]
[141.73934937 71.08698273]
[130.78343201 81.33237457]
[119.82752228 91.57776642]
[108.87162018 101.82315826]
[108.19751740 105.62025452]
[105.85298920 109.10178375]
[102.01649475 111.52838135]
[97.19021606 112.26788330]
[85.78775024 122.01384735]
[74.38529205 131.75981140]
[68.92205811 146.60783386]
[54.22007751 148.99551392]
[42.81761551 158.74148560]
[31.41515350 168.48744202]
[40.47786331 180.44561768]
[48.82315445 192.91503906]
[56.42226028 205.85273743]
[63.24898148 219.21411133]
[69.27978516 232.95310974]
[74.49388885 247.02235413]
[78.87331390 261.37335205]
[82.40295410 275.95663452]
[85.07065582 290.72192383]
[86.86721802 305.61831665]
[87.78643799 320.59448242]
[87.82516479 335.59878540]
[86.98325348 350.57949829]
[85.26361084 365.48498535]
[82.67215729 380.26385498]
[79.21783447 394.86514282]
[74.91255188 409.23855591]
[69.77114105 423.33453369]
[63.81133270 437.10446167]
[57.05366898 450.50091553]
[49.52144623 463.47766113]
[41.24063110 475.98999023]
[32.23976517 487.99478149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 187]
[83 186]
[84 185]
[86 183]
[87 182]
[88 181]
[89 177]
[90 176]
[91 175]
[92 174]
[93 170]
[94 169]
[95 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
