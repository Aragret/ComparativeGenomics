%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[143.15081787 932.90954590]
[128.46298218 929.84985352]
[113.94591522 926.06188965]
[99.63571167 921.55499268]
[85.56794739 916.34039307]
[71.77759552 910.43109131]
[58.29894638 903.84167480]
[45.16550446 896.58862305]
[32.40992355 888.68994141]
[20.06391525 880.16528320]
[8.15817547 871.03582764]
[-3.27769613 861.32421875]
[-14.21526909 851.05468750]
[-24.62735176 840.25274658]
[-34.48805618 828.94519043]
[-43.77286530 817.16015625]
[-52.45870209 804.92700195]
[-60.52396393 792.27612305]
[-67.94860077 779.23889160]
[-74.71416473 765.84783936]
[-80.80381775 752.13610840]
[-86.20243835 738.13793945]
[-90.89659119 723.88806152]
[-94.87461090 709.42193604]
[-98.12660217 694.77551270]
[-100.64448547 679.98516846]
[-102.42200470 665.08770752]
[-103.45473480 650.12011719]
[-103.74010468 635.11975098]
[-103.27741241 620.12371826]
[-102.06780243 605.16943359]
[-100.11428833 590.29400635]
[-97.42172241 575.53448486]
[-93.99680328 560.92749023]
[-89.84803772 546.50939941]
[-84.98574829 532.31604004]
[-79.42201996 518.38262939]
[-73.17068481 504.74392700]
[-66.24728394 491.43374634]
[-58.66903305 478.48522949]
[-50.45476913 465.93057251]
[-41.62491989 453.80093384]
[-32.20143127 442.12652588]
[-22.20773315 430.93637085]
[-11.66867542 420.25823975]
[-0.61045742 410.11874390]
[10.93942833 400.54302979]
[22.95226669 391.55493164]
[35.39819336 383.17681885]
[48.24626160 375.42950439]
[61.46453476 368.33221436]
[75.02014923 361.90264893]
[88.87939453 356.15676880]
[103.00782013 351.10885620]
[117.37030792 346.77145386]
[131.93113708 343.15536499]
[129.04586792 328.43545532]
[126.16059875 313.71557617]
[123.27532196 298.99569702]
[120.39005280 284.27578735]
[117.68354797 282.01589966]
[115.93717957 278.33279419]
[115.80794525 273.69201660]
[117.72006226 268.83499146]
[115.49494934 254.00094604]
[113.26982880 239.16690063]
[111.04471588 224.33285522]
[108.81959534 209.49880981]
[106.59448242 194.66476440]
[104.36936188 179.83071899]
[102.14424896 164.99667358]
[92.60456848 153.55798340]
[98.20913696 138.76272583]
[95.98401642 123.92868042]
[93.75889587 109.09464264]
[82.87976837 119.42152405]
[68.00258636 117.50597382]
[60.09424973 104.76006317]
[64.98449707 90.57959747]
[79.06842041 85.41790009]
[91.96295166 93.07859802]
[90.84729767 78.12014008]
[82.10501862 64.93367004]
[88.87428284 51.66617584]
[87.75862885 36.70772171]
[83.99961853 28.38260078]
[86.73941803 21.51854324]
[85.84660339 6.54513836]
[84.95378876 -8.42826748]
[84.06097412 -23.40167236]
[72.30390167 -14.08655834]
[57.65694046 -17.32174683]
[50.91727448 -30.72237968]
[57.05314255 -44.41000748]
[71.54140472 -48.29462051]
[83.70106506 -39.51407623]
[83.92439270 -54.51241302]
[84.14772034 -69.51074982]
[84.37104797 -84.50908661]
[70.53482056 -90.87137604]
[60.48745346 -102.31560516]
[55.96971130 -116.85897827]
[57.76432037 -131.98178101]
[65.56035614 -145.06390381]
[78.00710297 -153.83877563]
[92.94809723 -156.78608704]
[107.79470825 -153.39523315]
[119.97467804 -144.25366211]
[127.37775421 -130.94523621]
[128.72131348 -115.77569580]
[123.77255249 -101.37327576]
[113.38890839 -90.23327637]
[99.36938477 -84.28575897]
[99.14605713 -69.28742218]
[98.92272949 -54.28908539]
[98.69940186 -39.29074860]
[99.03437805 -24.29448891]
[99.92719269 -9.32108307]
[100.82000732 5.65232229]
[101.71282196 20.62572861]
[102.71708679 35.59207153]
[103.83273315 50.55052567]
[112.49521637 62.66707230]
[105.80575562 77.00449371]
[106.92140198 91.96295166]
[108.59294128 106.86952209]
[110.81806183 121.70356750]
[113.04317474 136.53761292]
[122.74200439 149.03733826]
[116.97828674 162.77156067]
[119.20340729 177.60560608]
[121.42852020 192.43965149]
[123.65364075 207.27369690]
[125.87876129 222.10774231]
[128.10388184 236.94177246]
[130.32899475 251.77581787]
[132.55410767 266.60986328]
[135.10993958 281.39053345]
[137.99520874 296.11041260]
[140.88049316 310.83029175]
[143.76576233 325.55020142]
[146.65103149 340.27008057]
[161.49952698 338.12161255]
[176.43667603 336.71591187]
[191.42530823 336.05654907]
[206.42817688 336.14511108]
[221.40797424 336.98141479]
[236.32748413 338.56335449]
[251.14958191 340.88699341]
[265.83743286 343.94659424]
[280.35452271 347.73449707]
[294.66473389 352.24130249]
[308.73254395 357.45581055]
[322.52291870 363.36508179]
[336.00158691 369.95440674]
[349.13507080 377.20736694]
[361.89068604 385.10598755]
[374.23675537 393.63058472]
[386.14254761 402.76000977]
[397.57846069 412.47152710]
[408.51608276 422.74102783]
[418.92822266 433.54293823]
[428.78900146 444.85043335]
[438.07385254 456.63537598]
[446.75976562 468.86849976]
[454.82507324 481.51934814]
[462.24978638 494.55651855]
[469.01541138 507.94757080]
[475.10516357 521.65924072]
[480.50384521 535.65734863]
[485.19805908 549.90722656]
[489.17614746 564.37335205]
[492.42822266 579.01977539]
[494.94619751 593.81011963]
[496.72378540 608.70758057]
[497.75659180 623.67510986]
[498.04205322 638.67553711]
[497.57943726 653.67150879]
[496.36990356 668.62579346]
[494.41647339 683.50122070]
[491.72396851 698.26080322]
[488.29913330 712.86779785]
[484.15045166 727.28588867]
[479.28823853 741.47930908]
[473.72457886 755.41271973]
[467.47329712 769.05145264]
[460.54998779 782.36169434]
[452.97180176 795.31024170]
[444.75759888 807.86492920]
[435.92779541 819.99462891]
[426.50436401 831.66906738]
[416.51074219 842.85931396]
[405.97174072 853.53747559]
[394.91357422 863.67706299]
[383.36373901 873.25280762]
[371.35095215 882.24096680]
[358.90505981 890.61914062]
[346.05703735 898.36651611]
[332.83880615 905.46386719]
[319.28323364 911.89349365]
[305.42401123 917.63946533]
[291.29559326 922.68743896]
[276.93313599 927.02496338]
[262.37231445 930.64111328]
[247.64935303 933.52697754]
[232.80084229 935.67541504]
[217.86369324 937.08099365]
[202.87506104 937.74029541]
[187.87219238 937.65161133]
[172.89239502 936.81524658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 142]
[57 141]
[58 140]
[59 139]
[60 138]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[73 128]
[74 127]
[75 126]
[81 125]
[82 124]
[84 122]
[85 121]
[87 120]
[88 119]
[89 118]
[90 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
