%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[308.95031738 199.82304382]
[302.05059814 213.13897705]
[294.30340576 225.98039246]
[285.74124146 238.29338074]
[276.40002441 250.02633667]
[266.31890869 261.13003540]
[255.54022217 271.55789185]
[244.10914612 281.26617432]
[232.07362366 290.21417236]
[219.48413086 298.36434937]
[206.39349365 305.68252563]
[192.85659790 312.13796997]
[178.93023682 317.70367432]
[164.67280579 322.35623169]
[150.14411926 326.07617188]
[135.40512085 328.84786987]
[120.51761627 330.65969849]
[105.54405975 331.50405884]
[90.54724121 331.37744141]
[75.59007263 330.28030396]
[60.73529053 328.21734619]
[46.04519272 325.19714355]
[31.58140373 321.23239136]
[17.40458298 316.33969116]
[3.57419443 310.53961182]
[-9.85175133 303.85647583]
[-22.81694221 296.31829834]
[-35.26699829 287.95666504]
[-47.14970016 278.80670166]
[-58.41520691 268.90676880]
[-69.01626587 258.29837036]
[-78.90841675 247.02601624]
[-88.05016327 235.13697815]
[-96.40316772 222.68115234]
[-103.93239594 209.71075439]
[-110.60626221 196.28018188]
[-116.39676666 182.44578552]
[-121.27964020 168.26557922]
[-125.23439026 153.79905701]
[-128.24443054 139.10687256]
[-130.29714966 124.25067139]
[-131.38391113 109.29274750]
[-131.50018311 94.29584503]
[-130.64546204 79.32286835]
[-128.82333374 64.43662262]
[-126.04144287 49.69953918]
[-122.31146240 35.17343521]
[-117.64903259 20.91923141]
[-112.07371521 6.99672079]
[-105.60888672 -6.53570366]
[-98.28166199 -19.62128258]
[-90.12278748 -32.20512772]
[-81.16646576 -44.23446274]
[-71.45027924 -55.65883255]
[-61.01496887 -66.43031311]
[-49.90430832 -76.50373077]
[-38.16490173 -85.83683777]
[-25.84598351 -94.39048004]
[-12.99922562 -102.12878418]
[0.32148772 -109.01928711]
[14.06028652 -115.03310394]
[28.15954399 -120.14499664]
[42.56012726 -124.33352661]
[57.20162964 -127.58112335]
[72.02264404 -129.87417603]
[86.96099854 -131.20306396]
[101.95404816 -131.56219482]
[116.93890381 -130.95008850]
[131.85270691 -129.36929321]
[146.63291931 -126.82645416]
[161.21752930 -123.33222961]
[175.54537964 -118.90126801]
[189.55635071 -113.55216980]
[203.19171143 -107.30735779]
[216.39424133 -100.19303131]
[229.10858154 -92.23902893]
[241.28138733 -83.47871399]
[252.86161804 -73.94882202]
[263.80068970 -63.68933868]
[274.05273438 -52.74328232]
[283.57476807 -41.15657425]
[292.32678223 -28.97780609]
[305.04882812 -36.92449188]
[317.77087402 -44.87117386]
[330.49288940 -52.81785965]
[343.21493530 -60.76454544]
[355.93698120 -68.71122742]
[368.65899658 -76.65791321]
[361.49264526 -89.84053040]
[355.13528442 -103.43178558]
[349.61016846 -117.38209534]
[344.93743896 -131.64054871]
[341.13412476 -146.15513611]
[338.21411133 -160.87286377]
[336.18807983 -175.74006653]
[335.06341553 -190.70245361]
[334.84420776 -205.70545959]
[335.53125000 -220.69432068]
[337.12203979 -235.61436462]
[339.61080933 -250.41113281]
[342.98840332 -265.03063965]
[347.24258423 -279.41952515]
[352.35775757 -293.52529907]
[358.31530762 -307.29650879]
[365.09344482 -320.68286133]
[372.66748047 -333.63555908]
[381.00979614 -346.10729980]
[390.08987427 -358.05258179]
[399.87463379 -369.42782593]
[410.32839966 -380.19155884]
[421.41296387 -390.30444336]
[433.08789062 -399.72961426]
[445.31063843 -408.43264771]
[458.03652954 -416.38183594]
[471.21917725 -423.54815674]
[484.81045532 -429.90542603]
[498.76080322 -435.43048096]
[513.01928711 -440.10314941]
[527.53387451 -443.90640259]
[542.25164795 -446.82632446]
[557.11883545 -448.85229492]
[572.08123779 -449.97689819]
[587.08422852 -450.19604492]
[602.07312012 -449.50894165]
[616.99310303 -447.91806030]
[631.78985596 -445.42926025]
[646.40936279 -442.05157471]
[660.79821777 -437.79733276]
[674.90399170 -432.68209839]
[688.67517090 -426.72448730]
[702.06152344 -419.94625854]
[715.01416016 -412.37216187]
[727.48583984 -404.02981567]
[739.43109131 -394.94967651]
[750.80633545 -385.16485596]
[761.57000732 -374.71105957]
[771.68280029 -363.62643433]
[781.10791016 -351.95144653]
[789.81091309 -339.72866821]
[797.76007080 -327.00274658]
[804.92626953 -313.82006836]
[811.28350830 -300.22872925]
[816.80853271 -286.27838135]
[821.48114014 -272.01986694]
[825.28430176 -257.50527954]
[828.20416260 -242.78750610]
[830.23004150 -227.92028809]
[831.35461426 -212.95788574]
[831.57366943 -197.95487976]
[830.88647461 -182.96601868]
[829.29553223 -168.04600525]
[826.80664062 -153.24925232]
[823.42889404 -138.62979126]
[819.17462158 -124.24093628]
[814.05926514 -110.13520050]
[808.10162354 -96.36405945]
[801.32336426 -82.97776031]
[793.74920654 -70.02513885]
[785.40679932 -57.55347443]
[776.32659912 -45.60826874]
[766.54168701 -34.23310471]
[756.08782959 -23.46949196]
[745.00317383 -13.35670567]
[733.32818604 -3.93164682]
[721.10534668 4.77129269]
[708.37939453 12.72035694]
[695.19665527 19.88654137]
[681.60528564 26.24369621]
[667.65490723 31.76862526]
[653.39642334 36.44116974]
[638.88177490 40.24427795]
[624.16400146 43.16407013]
[609.29675293 45.18989944]
[594.33435059 46.31436920]
[579.33135986 46.53337479]
[564.34252930 45.84611893]
[549.42248535 44.25511169]
[534.62573242 41.76615524]
[520.00628662 38.38833618]
[505.61746216 34.13397217]
[491.51174927 29.01859283]
[477.74063110 23.06086349]
[464.35437012 16.28252029]
[451.40179443 8.70829868]
[438.93017578 0.36583728]
[426.98498535 -8.71442413]
[415.60989380 -18.49935341]
[404.84631348 -28.95324326]
[394.73358154 -40.03795242]
[385.30856323 -51.71302795]
[376.60568237 -63.93587494]
[363.88366699 -55.98919296]
[351.16162109 -48.04250717]
[338.43957520 -40.09582138]
[325.71755981 -32.14913940]
[312.99551392 -24.20245361]
[300.27346802 -16.25576973]
[307.37866211 -3.04832006]
[313.61404419 10.59134865]
[318.95346069 24.60602760]
[323.37451172 38.93693161]
[326.85864258 53.52395630]
[329.39126587 68.30591583]
[330.96176147 83.22081757]
[331.56350708 98.20608521]
[331.19400024 113.19888306]
[329.85476685 128.13632202]
[327.55148315 142.95574951]
[324.29376221 157.59500122]
[320.09524536 171.99267578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 197]
[83 196]
[84 195]
[85 194]
[86 193]
[87 192]
[88 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
