%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[110.71669769 675.24603271]
[104.29185486 661.46960449]
[103.63307190 646.28295898]
[108.84082031 632.00195312]
[119.12094116 620.80426025]
[132.90580750 614.39758301]
[132.23602295 599.41253662]
[131.56623840 584.42749023]
[130.89645386 569.44244385]
[130.22666931 554.45739746]
[129.55688477 539.47235107]
[128.88710022 524.48730469]
[128.10577393 509.50769043]
[127.21295929 494.53427124]
[126.32013702 479.56088257]
[111.73146820 476.25210571]
[98.65305328 468.95922852]
[88.14895630 458.26577759]
[81.07656097 445.03240967]
[78.01656342 430.32754517]
[79.22533417 415.34121704]
[84.61341858 401.28857422]
[93.75214386 389.31155396]
[105.90766907 380.38598633]
[120.09995270 375.24215698]
[119.20713806 360.26873779]
[118.31431580 345.29534912]
[117.42150116 330.32192993]
[116.52868652 315.34854126]
[104.72890472 300.03018188]
[114.02716064 282.14428711]
[112.68892670 267.20410156]
[111.35069275 252.26391602]
[110.01245880 237.32373047]
[108.67422485 222.38354492]
[107.11370087 207.46495056]
[105.33123779 192.57122803]
[96.13636017 180.85356140]
[102.17894745 166.23175049]
[100.17493439 151.36621094]
[97.94982147 136.53216553]
[95.72470093 121.69812775]
[93.49958801 106.86408234]
[90.09673309 102.87227631]
[89.17264557 97.25806427]
[91.43589783 91.55590820]
[89.65343475 76.66218567]
[87.87096405 61.76847076]
[85.14633942 58.38758850]
[83.77699280 54.68766785]
[83.69681549 51.13394165]
[84.69537354 48.12238312]
[86.45304108 45.93863678]
[85.56022644 30.96522903]
[84.66741180 15.99182415]
[83.77459717 1.01841807]
[82.88178253 -13.95498753]
[72.38785553 -29.08637810]
[80.84844971 -44.46120071]
[79.73280334 -59.41965485]
[78.61715698 -74.37810516]
[75.67676544 -78.69101715]
[74.77494049 -83.24514008]
[75.66218567 -87.22356415]
[77.80093384 -90.02678680]
[77.35433197 -105.02014160]
[76.90772247 -120.01348877]
[76.46112061 -135.00683594]
[65.23992157 -145.81065369]
[65.00058746 -161.02239990]
[75.36952972 -171.65351868]
[67.22477722 -185.21720886]
[74.57970428 -198.16920471]
[74.13310242 -213.16255188]
[70.98897552 -218.97857666]
[71.21943665 -224.65695190]
[73.90312195 -228.60749817]
[73.90312195 -243.60749817]
[73.90312195 -258.60751343]
[70.93355560 -264.51455688]
[71.33298492 -270.18353271]
[74.13310242 -274.05242920]
[74.57970428 -289.04580688]
[75.02631378 -304.03915405]
[75.47291565 -319.03250122]
[75.91952515 -334.02584839]
[61.13173294 -336.70520020]
[46.90847778 -341.55871582]
[33.56751633 -348.47799683]
[21.40688324 -357.30844116]
[10.69825554 -367.85275269]
[1.68086743 -379.87542725]
[-5.44383001 -393.10781860]
[-10.51666737 -407.25433350]
[-13.42431736 -421.99893188]
[-14.10181999 -437.01223755]
[-12.53404045 -451.95880127]
[-8.75600338 -466.50473022]
[-2.85211229 -480.32504272]
[5.04573870 -493.11105347]
[14.76110840 -504.57705688]
[26.07695198 -514.46691895]
[38.74046707 -522.55969238]
[52.46875000 -528.67456055]
[66.95510101 -532.67498779]
[81.87590027 -534.47149658]
[96.89779663 -534.02404785]
[111.68520355 -531.34259033]
[125.90776825 -526.48706055]
[139.24774170 -519.56585693]
[151.40711975 -510.73370361]
[162.11424255 -500.18786621]
[171.12992859 -488.16390991]
[178.25273132 -474.93051147]
[183.32356262 -460.78326416]
[186.22911072 -446.03823853]
[186.90446472 -431.02487183]
[185.33456421 -416.07852173]
[181.55445862 -401.53314209]
[175.64859009 -387.71362305]
[167.74891663 -374.92877197]
[158.03192139 -363.46414185]
[146.71467590 -353.57589722]
[134.05000305 -345.48492432]
[120.32084656 -339.37197876]
[105.83392334 -335.37365723]
[90.91287231 -333.57922363]
[90.46627045 -318.58587646]
[90.01966095 -303.59252930]
[89.57305908 -288.59918213]
[89.12644958 -273.60583496]
[88.90312195 -258.60751343]
[88.90312195 -243.60749817]
[88.90312195 -228.60749817]
[89.12644958 -213.60916138]
[89.57305908 -198.61581421]
[97.68586731 -186.12455750]
[90.36287689 -172.10012817]
[101.34620667 -162.10502625]
[102.01271820 -146.90600586]
[91.45446777 -135.45344543]
[91.90107727 -120.46009064]
[92.34767914 -105.46674347]
[92.79428864 -90.47339630]
[93.57560730 -75.49375916]
[94.69125366 -60.53530502]
[95.80690765 -45.57685089]
[104.76525116 -37.44822311]
[105.81713867 -24.99522018]
[97.85518646 -14.84780312]
[98.74800110 0.12560219]
[99.64081573 15.09900761]
[100.53363037 30.07241440]
[101.42645264 45.04581833]
[102.76468658 59.98600388]
[104.54714966 74.87972260]
[106.32961273 89.77343750]
[108.33362579 104.63896942]
[110.55874634 119.47301483]
[112.78386688 134.30705261]
[115.00897980 149.14109802]
[118.82194519 154.54228210]
[119.26789093 160.20780945]
[117.07266998 164.44927979]
[126.39503479 177.23223877]
[120.22495270 190.78875732]
[122.00741577 205.68247986]
[125.65788269 211.19479370]
[125.93493652 216.87109375]
[123.61441040 221.04531860]
[124.95264435 235.98550415]
[126.29087830 250.92568970]
[127.62911224 265.86587524]
[128.96734619 280.80606079]
[137.70317078 287.28634644]
[141.35522461 297.29846191]
[138.94458008 307.45410156]
[131.50209045 314.45571899]
[132.39491272 329.42910767]
[133.28771973 344.40252686]
[134.18054199 359.37594604]
[135.07336426 374.34933472]
[149.77632141 377.77026367]
[162.90635681 385.18811035]
[173.40356445 395.99429321]
[180.42337036 409.30709839]
[183.40441895 424.04360962]
[182.11349487 439.00790405]
[176.66374207 452.98791504]
[167.50479126 464.85382080]
[155.38566589 473.64913940]
[141.29354858 478.66806030]
[142.18635559 493.64147949]
[143.07917786 508.61486816]
[146.71382141 516.99505615]
[143.87213135 523.81756592]
[144.54191589 538.80261230]
[145.21170044 553.78759766]
[145.88148499 568.77264404]
[146.55126953 583.75769043]
[147.22105408 598.74273682]
[147.89083862 613.72778320]
[162.19232178 618.87915039]
[173.43045044 629.11499023]
[179.89152527 642.87445068]
[180.59025574 658.05932617]
[175.42010498 672.35400391]
[165.16946411 683.57867432]
[151.40150452 690.02160645]
[136.21574402 690.70037842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 194]
[14 193]
[15 192]
[25 182]
[26 181]
[27 180]
[28 179]
[29 178]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 167]
[37 166]
[39 164]
[40 161]
[41 160]
[42 159]
[43 158]
[46 157]
[47 156]
[48 155]
[53 154]
[54 153]
[55 152]
[56 151]
[57 150]
[59 147]
[60 146]
[61 145]
[65 144]
[66 143]
[67 142]
[68 141]
[71 138]
[73 136]
[74 135]
[77 134]
[78 133]
[79 132]
[82 131]
[83 130]
[84 129]
[85 128]
[86 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
