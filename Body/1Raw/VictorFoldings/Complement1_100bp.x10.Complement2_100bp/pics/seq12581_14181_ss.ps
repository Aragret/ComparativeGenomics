%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[219.40962219 629.67376709]
[207.72760010 620.25903320]
[196.56320190 610.23590088]
[185.94808960 599.63275146]
[175.91233826 588.47967529]
[166.48440552 576.80828857]
[157.69100952 564.65167236]
[149.55708313 552.04425049]
[142.10566711 539.02185059]
[135.35791016 525.62127686]
[129.33293152 511.88058472]
[124.04779053 497.83871460]
[119.51747894 483.53543091]
[115.75484467 469.01132202]
[112.77055359 454.30755615]
[110.57305908 439.46575928]
[109.16859436 424.52807617]
[108.56113434 409.53680420]
[108.75240326 394.53445435]
[109.74186707 379.56353760]
[111.52671051 364.66650391]
[114.10187531 349.88558960]
[117.46006775 335.26266479]
[121.59176636 320.83920288]
[126.48526001 306.65609741]
[132.12667847 292.75350952]
[138.50001526 279.17089844]
[145.58723450 265.94671631]
[153.36822510 253.11848450]
[161.82092285 240.72256470]
[170.92138672 228.79408264]
[180.64381409 217.36685181]
[190.96064758 206.47326660]
[180.63398743 195.59393311]
[170.30731201 184.71459961]
[159.98063660 173.83526611]
[149.65397644 162.95593262]
[139.32730103 152.07659912]
[129.00064087 141.19726562]
[118.67397308 130.31793213]
[108.34729767 119.43859100]
[98.02062988 108.55925751]
[94.99149323 108.22189331]
[92.01815796 106.77489471]
[89.51184845 104.23680878]
[87.87119293 100.77783966]
[87.42709351 96.71142578]
[77.76628113 85.23672485]
[68.10547638 73.76202393]
[58.44466400 62.28732300]
[46.08168793 70.80274200]
[32.95456314 78.08518982]
[19.18585396 84.06668091]
[4.90412092 88.69135284]
[-9.75728893 91.91603851]
[-24.66148376 93.71061707]
[-39.66930008 94.05833435]
[-54.64061737 92.95595551]
[-69.43563843 90.41376495]
[-83.91623688 86.45549774]
[-97.94719696 81.11811066]
[-111.39751434 74.45143890]
[-124.14160919 66.51773834]
[-136.06048584 57.39107895]
[-147.04284668 47.15667343]
[-156.98617554 35.91008377]
[-165.79762268 23.75631523]
[-173.39489746 10.80885124]
[-179.70709229 -2.81142044]
[-184.67524719 -16.97732735]
[-188.25299072 -31.55660439]
[-190.40690613 -46.41312408]
[-191.11688232 -61.40816879]
[-190.37631226 -76.40173340]
[-188.19207764 -91.25382996]
[-184.58459473 -105.82577515]
[-179.58755493 -119.98151398]
[-173.24758911 -133.58888245]
[-165.62390137 -146.52081299]
[-156.78767395 -158.65657043]
[-146.82142639 -169.88285828]
[-135.81819153 -180.09483337]
[-123.88072205 -189.19715881]
[-111.12046814 -197.10484314]
[-97.65657806 -203.74404907]
[-83.61475372 -209.05279541]
[-69.12611389 -212.98150635]
[-54.32593155 -215.49349976]
[-39.35239792 -216.56533813]
[-24.34532166 -216.18699646]
[-9.44482040 -214.36199951]
[5.20997906 -211.10742188]
[19.48224640 -206.45361328]
[33.23871994 -200.44404602]
[46.35095978 -193.13482666]
[58.69653702 -184.59419250]
[70.16017914 -174.90190125]
[80.63484955 -164.14845276]
[90.02274323 -152.43423462]
[98.23622131 -139.86863708]
[105.19857788 -126.56896973]
[110.84481049 -112.65941620]
[115.12220764 -98.26985931]
[117.99082947 -83.53464508]
[119.42388153 -68.59135437]
[119.40798950 -53.57951736]
[117.94331360 -38.63929749]
[115.04351044 -23.91018677]
[110.73566437 -9.52971554]
[105.05999756 4.36784983]
[98.06950378 17.65274620]
[89.82944489 30.20093536]
[80.41677094 41.89525604]
[69.91936493 52.62651443]
[79.58017731 64.10121155]
[89.24098206 75.57591248]
[98.90179443 87.05061340]
[108.89996338 98.23258972]
[119.22663879 109.11192322]
[129.55329895 119.99125671]
[139.87997437 130.87059021]
[150.20663452 141.74992371]
[160.53330994 152.62925720]
[170.85998535 163.50859070]
[181.18664551 174.38792419]
[191.51332092 185.26725769]
[201.83998108 196.14659119]
[213.25616455 186.41119385]
[225.17430115 177.29719543]
[237.56062317 168.83041382]
[250.38000488 161.03486633]
[263.59613037 153.93263245]
[277.17150879 147.54386902]
[291.06765747 141.88667297]
[305.24520874 136.97706604]
[319.66397095 132.82899475]
[334.28305054 129.45419312]
[349.06106567 126.86224365]
[363.95605469 125.06047821]
[378.92581177 124.05401611]
[393.92794800 123.84571075]
[408.91989136 124.43614197]
[423.85919189 125.82364655]
[438.70343018 128.00428772]
[453.41061401 130.97187805]
[467.93896484 134.71800232]
[482.24737549 139.23207092]
[496.29525757 144.50125122]
[510.04278564 150.51063538]
[523.45098877 157.24316406]
[536.48187256 164.67977905]
[549.09851074 172.79937744]
[561.26513672 181.57896423]
[572.94720459 190.99363708]
[584.11163330 201.01670837]
[594.72686768 211.61978149]
[604.76263428 222.77278137]
[614.19067383 234.44410706]
[622.98413086 246.60067749]
[631.11816406 259.20800781]
[638.56964111 272.23040771]
[645.31750488 285.63092041]
[651.34252930 299.37158203]
[656.62780762 313.41342163]
[661.15820312 327.71667480]
[664.92089844 342.24075317]
[667.90527344 356.94451904]
[670.10290527 371.78628540]
[671.50744629 386.72396851]
[672.11499023 401.71524048]
[671.92382812 416.71759033]
[670.93444824 431.68850708]
[669.14971924 446.58554077]
[666.57464600 461.36648560]
[663.21655273 475.98941040]
[659.08489990 490.41290283]
[654.19152832 504.59606934]
[648.55017090 518.49865723]
[642.17694092 532.08135986]
[635.08978271 545.30554199]
[627.30889893 558.13385010]
[618.85626221 570.52978516]
[609.75585938 582.45837402]
[600.03350830 593.88562012]
[589.71679688 604.77929688]
[578.83483887 615.10839844]
[567.41857910 624.84375000]
[555.50042725 633.95770264]
[543.11401367 642.42437744]
[530.29461670 650.21984863]
[517.07843018 657.32202148]
[503.50302124 663.71069336]
[489.60684204 669.36779785]
[475.42922974 674.27728271]
[461.01046753 678.42529297]
[446.39132690 681.79998779]
[431.61334229 684.39184570]
[416.71832275 686.19348145]
[401.74853516 687.19989014]
[386.74642944 687.40808105]
[371.75445557 686.81756592]
[356.81518555 685.42999268]
[341.97094727 683.24926758]
[327.26382446 680.28155518]
[312.73547363 676.53533936]
[298.42709351 672.02117920]
[284.37924194 666.75189209]
[270.63174438 660.74243164]
[257.22357178 654.00982666]
[244.19273376 646.57312012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 127]
[34 126]
[35 125]
[36 124]
[37 123]
[38 122]
[39 121]
[40 120]
[41 119]
[42 118]
[47 117]
[48 116]
[49 115]
[50 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
