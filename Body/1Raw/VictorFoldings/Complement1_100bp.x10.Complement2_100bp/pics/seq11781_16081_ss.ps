%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[145.74349976 793.66015625]
[133.30892944 785.25720215]
[121.56291962 775.91589355]
[110.57611847 765.69250488]
[100.41459656 754.64837646]
[91.13946533 742.85009766]
[82.80651855 730.36846924]
[75.46586609 717.27868652]
[69.16164398 703.65936279]
[63.93178940 689.59252930]
[59.80773926 675.16265869]
[56.81430435 660.45660400]
[54.96948242 645.56280518]
[54.28437042 630.57086182]
[54.76309204 615.57092285]
[56.40276337 600.65313721]
[59.19352722 585.90728760]
[63.11859512 571.42205811]
[68.15436554 557.28454590]
[74.27054596 543.57977295]
[81.43035889 530.39019775]
[89.59074402 517.79510498]
[98.70262146 505.87023926]
[108.71118164 494.68734741]
[119.55624390 484.31369019]
[131.17257690 474.81161499]
[143.49032593 466.23831177]
[156.43540955 458.64535522]
[169.92996216 452.07833862]
[183.89282227 446.57684326]
[179.49182129 432.23699951]
[175.09082031 417.89715576]
[170.12316895 412.42501831]
[170.73277283 403.31094360]
[159.75039673 393.24929810]
[163.32804871 377.83792114]
[159.14103699 363.43411255]
[154.95402527 349.03033447]
[150.06840515 343.48486328]
[150.81362915 334.38085938]
[146.84152222 319.91635132]
[142.86943054 305.45181274]
[138.89733887 290.98730469]
[135.26332092 287.88842773]
[133.53741455 282.47378540]
[135.02919006 276.03280640]
[131.48951721 261.45645142]
[118.67553711 253.95060730]
[114.87815857 239.21850586]
[122.83786011 225.82893372]
[119.29818726 211.25254822]
[115.75851440 196.67617798]
[112.21884155 182.09979248]
[108.67916870 167.52342224]
[105.13949585 152.94705200]
[101.59982300 138.37066650]
[98.06015015 123.79429626]
[84.49375153 118.15180206]
[76.80097961 105.63356018]
[77.89579010 90.98138428]
[87.36347198 79.74537659]
[83.82379913 65.16899872]
[80.28412628 50.59262466]
[76.74445343 36.01624680]
[73.20478821 21.43987274]
[69.55669403 6.89025211]
[65.80039978 -7.63180733]
[55.10311890 -14.83813000]
[52.27345657 -27.01091766]
[58.29709244 -37.50102615]
[54.75741959 -52.07740021]
[39.02770233 -58.29608917]
[30.19180870 -72.52381897]
[31.56367493 -89.04894257]
[42.40523911 -101.37525177]
[38.64893723 -115.89731598]
[27.70232773 -127.32019806]
[32.00593185 -141.57952881]
[21.05932426 -153.00241089]
[25.36292839 -167.26173401]
[21.60662842 -181.78378296]
[6.58999252 -180.83660889]
[-8.33449364 -182.74873352]
[-22.62731743 -187.45103455]
[-35.77180481 -194.77354431]
[-47.29278946 -204.45152283]
[-56.77379608 -216.13514709]
[-63.87208939 -229.40205383]
[-68.33107758 -243.77264404]
[-69.98955536 -258.72744751]
[-68.78759003 -273.72583008]
[-64.76861572 -288.22564697]
[-58.07793045 -301.70269775]
[-48.95738220 -313.66983032]
[-37.73668671 -323.69442749]
[-24.82145691 -331.41409302]
[-10.67857170 -336.54977417]
[4.18071032 -338.91583252]
[19.21923637 -338.42672729]
[33.89337540 -335.10015869]
[47.67266083 -329.05633545]
[60.05898666 -320.51376343]
[70.60459137 -309.78125000]
[78.92826080 -297.24676514]
[84.72908783 -283.36343384]
[87.79739380 -268.63314819]
[88.02225494 -253.58833313]
[85.39553833 -238.77291870]
[80.01219940 -224.72242737]
[72.06684875 -211.94479370]
[61.84669495 -200.90193176]
[49.72119904 -191.99301147]
[36.12868881 -185.54008484]
[39.88498688 -171.01803589]
[50.56291962 -160.63386536]
[46.52799225 -145.33581543]
[57.20592499 -134.95164490]
[53.17099762 -119.65361786]
[56.92729568 -105.13155365]
[69.74964905 -101.41275787]
[79.13535309 -91.76637268]
[82.55618286 -78.63749695]
[79.01512146 -65.42842865]
[69.33379364 -55.61707306]
[72.87346649 -41.04069901]
[85.65316772 -29.01380157]
[80.32245636 -11.38810825]
[84.07875824 3.13395119]
[88.79711151 8.82244301]
[87.78115845 17.90019989]
[91.32083130 32.47657394]
[94.86050415 47.05295181]
[98.40017700 61.62932587]
[101.93984985 76.20570374]
[115.50624847 81.84819794]
[123.19902039 94.36643982]
[122.10420990 109.01861572]
[112.63652802 120.25462341]
[116.17620087 134.83100891]
[119.71587372 149.40737915]
[123.25554657 163.98374939]
[126.79521179 178.56013489]
[130.33488464 193.13650513]
[133.87455750 207.71287537]
[137.41423035 222.28926086]
[150.62828064 230.53707886]
[154.01036072 245.37002563]
[146.06588745 257.91677856]
[149.60556030 272.49313354]
[153.36186218 287.01519775]
[157.33395386 301.47973633]
[161.30604553 315.94424438]
[165.27815247 330.40878296]
[169.35781860 344.84332275]
[173.54483032 359.24710083]
[177.73184204 373.65090942]
[189.01368713 384.74279785]
[185.13655090 399.12393188]
[189.43067932 413.49615479]
[193.83166504 427.83599854]
[198.23266602 442.17584229]
[212.87780762 438.89736938]
[227.73295593 436.76364136]
[242.70878601 435.78750610]
[257.71520996 435.97482300]
[272.66201782 437.32446289]
[287.45928955 439.82830811]
[302.01800537 443.47131348]
[316.25067139 448.23156738]
[330.07162476 454.08044434]
[343.39779663 460.98275757]
[356.14898682 468.89700317]
[368.24856567 477.77554321]
[379.62371826 487.56506348]
[390.20602417 498.20660400]
[399.93191528 509.63619995]
[408.74279785 521.78515625]
[416.58575439 534.58032227]
[423.41357422 547.94476318]
[429.18524170 561.79815674]
[433.86599731 576.05712891]
[437.42770386 590.63598633]
[439.84893799 605.44702148]
[441.11514282 620.40112305]
[441.21871948 635.40832520]
[440.15902710 650.37847900]
[437.94244385 665.22149658]
[434.58227539 679.84814453]
[430.09875488 694.17034912]
[424.51885986 708.10211182]
[417.87612915 721.55950928]
[410.21054077 734.46173096]
[401.56814575 746.73107910]
[392.00094604 758.29382324]
[381.56649780 769.08044434]
[370.32754517 779.02600098]
[358.35168457 788.07067871]
[345.71090698 796.16015625]
[332.48129272 803.24572754]
[318.74237061 809.28479004]
[304.57678223 814.24102783]
[290.06970215 818.08465576]
[275.30841064 820.79248047]
[260.38165283 822.34832764]
[245.37924194 822.74273682]
[230.39137268 821.97338867]
[215.50817871 820.04486084]
[200.81919861 816.96881104]
[186.41275024 812.76373291]
[172.37548828 807.45495605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 161]
[31 160]
[32 159]
[34 158]
[36 156]
[37 155]
[38 154]
[40 153]
[41 152]
[42 151]
[43 150]
[46 149]
[47 148]
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[57 138]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 128]
[67 127]
[70 125]
[71 124]
[75 119]
[76 118]
[78 116]
[80 114]
[81 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
