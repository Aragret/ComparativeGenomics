%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[8.15377712 227.51539612]
[11.77996063 242.08100891]
[14.08588219 256.91302490]
[15.05297470 271.89205933]
[14.67345238 286.89746094]
[12.95037079 301.80844116]
[9.89760303 316.50491333]
[5.53972960 330.86859131]
[-0.08816306 344.78381348]
[-6.94076061 358.13851929]
[-14.96288967 370.82519531]
[-24.08995819 382.74169922]
[-34.24848175 393.79205322]
[-45.35666275 403.88732910]
[-57.32506943 412.94622803]
[-70.05733490 420.89578247]
[-83.45094299 427.67202759]
[-97.39805603 433.22039795]
[-111.78637695 437.49618530]
[-126.50005341 440.46502686]
[-141.42062378 442.10293579]
[-156.42794800 442.39678955]
[-171.40119934 441.34420776]
[-186.21981812 438.95364380]
[-200.76449585 435.24435425]
[-214.91812134 430.24624634]
[-228.56672668 423.99948120]
[-241.60041809 416.55444336]
[-253.91427612 407.97100830]
[-265.40914917 398.31832886]
[-275.99246216 387.67407227]
[-285.57901001 376.12402344]
[-294.09161377 363.76110840]
[-301.46176147 350.68487549]
[-307.63006592 337.00064087]
[-312.54687500 322.81857300]
[-316.17260742 308.25283813]
[-318.47808838 293.42074585]
[-319.44473267 278.44171143]
[-319.06472778 263.43630981]
[-317.34118652 248.52539062]
[-314.28799438 233.82899475]
[-309.92965698 219.46545410]
[-304.30136108 205.55041504]
[-297.44836426 192.19592285]
[-289.42584229 179.50949097]
[-280.29840088 167.59327698]
[-270.13952637 156.54321289]
[-259.03103638 146.44827271]
[-247.06236267 137.38975525]
[-234.32986450 129.44056702]
[-220.93605042 122.66473389]
[-206.98876953 117.11679840]
[-192.60031128 112.84143829]
[-177.88653564 109.87306976]
[-162.96592712 108.23559570]
[-147.95858765 107.94219971]
[-132.98536682 108.99524689]
[-118.16681671 111.38626099]
[-103.62226105 115.09597778]
[-89.46878815 120.09454346]
[-75.82037354 126.34170532]
[-62.78690338 133.78715515]
[-50.47331238 142.37097168]
[-38.97874832 152.02401733]
[-28.39575768 162.66856384]
[-18.80955124 174.21893311]
[-6.45504284 165.71209717]
[5.89946604 157.20527649]
[18.25397491 148.69845581]
[30.60848427 140.19161987]
[42.89932251 131.59306335]
[55.12580872 122.90323639]
[67.35229492 114.21340942]
[79.57878113 105.52358246]
[91.80526733 96.83376312]
[92.56629181 93.88243103]
[94.41799927 91.14277649]
[97.28406525 89.01931000]
[100.93978882 87.88265991]
[105.02819824 88.01626587]
[117.75023651 80.06958008]
[126.01824188 63.61596298]
[143.56706238 63.69110107]
[156.16937256 55.55588531]
[168.77169800 47.42066956]
[176.16966248 33.43564987]
[191.05883789 33.03356934]
[203.66114807 24.89835358]
[216.26345825 16.76313782]
[228.86576843 8.62792206]
[221.56063843 -4.47909594]
[215.11923218 -18.03148842]
[209.56860352 -31.97241020]
[204.93199158 -46.24338913]
[201.22888184 -60.78456497]
[198.47477722 -75.53495026]
[196.68124390 -90.43267059]
[195.85580444 -105.41524506]
[196.00192261 -120.41983032]
[197.11897278 -135.38348389]
[199.20228577 -150.24346924]
[202.24311829 -164.93740845]
[206.22869873 -179.40371704]
[211.14233398 -193.58169556]
[216.96340942 -207.41188049]
[223.66751099 -220.83625793]
[231.22650146 -233.79853821]
[239.60870361 -246.24432373]
[248.77893066 -258.12142944]
[258.69873047 -269.38006592]
[269.32650757 -279.97296143]
[280.61767578 -289.85568237]
[292.52487183 -298.98681641]
[304.99813843 -307.32806396]
[317.98519897 -314.84442139]
[331.43154907 -321.50433350]
[345.28079224 -327.27990723]
[359.47482300 -332.14691162]
[373.95416260 -336.08493042]
[388.65802002 -339.07745361]
[403.52478027 -341.11190796]
[418.49200439 -342.17977905]
[433.49700928 -342.27655029]
[448.47677612 -341.40188599]
[463.36853027 -339.55938721]
[478.10977173 -336.75680542]
[492.63870239 -333.00592041]
[506.89437866 -328.32241821]
[520.81695557 -322.72598267]
[534.34808350 -316.24008179]
[547.43103027 -308.89187622]
[560.01092529 -300.71224976]
[572.03491211 -291.73550415]
[583.45263672 -281.99923706]
[594.21612549 -271.54434204]
[604.28039551 -260.41461182]
[613.60308838 -248.65679932]
[622.14514160 -236.32017517]
[629.87072754 -223.45649719]
[636.74743652 -210.11972046]
[642.74639893 -196.36578369]
[647.84252930 -182.25238037]
[652.01446533 -167.83868408]
[655.24456787 -153.18518066]
[657.51940918 -138.35333252]
[658.82940674 -123.40532684]
[659.16906738 -108.40387726]
[658.53698730 -93.41189575]
[656.93579102 -78.49227905]
[654.37225342 -63.70759201]
[650.85699463 -49.11985016]
[646.40490723 -34.79024506]
[641.03454590 -20.77887917]
[634.76855469 -7.14451647]
[627.63311768 6.05565119]
[619.65820312 18.76625824]
[610.87719727 30.93399239]
[601.32708740 42.50781631]
[591.04772949 53.43918610]
[580.08239746 63.68224716]
[568.47705078 73.19404602]
[556.28033447 81.93467712]
[543.54339600 89.86747742]
[530.31964111 96.95919037]
[516.66461182 103.18004608]
[502.63558960 108.50397491]
[488.29132080 112.90863037]
[473.69201660 116.37554932]
[458.89892578 118.89017487]
[443.97409058 120.44197845]
[428.98010254 121.02443695]
[413.97985840 120.63511658]
[399.03625488 119.27564240]
[384.21203613 116.95172119]
[369.56930542 113.67309570]
[355.16949463 109.45352173]
[341.07302856 104.31070709]
[327.33901978 98.26620483]
[314.02508545 91.34537506]
[301.18704224 83.57724762]
[288.87875366 74.99440765]
[277.15185547 65.63285065]
[266.05554199 55.53184891]
[255.63630676 44.73376083]
[245.93789673 33.28387833]
[237.00097656 21.23023415]
[224.39866638 29.36544991]
[211.79635620 37.50066376]
[199.19404602 45.63587952]
[192.69747925 59.03901291]
[176.90690613 60.02297974]
[164.30459595 68.15819550]
[151.70228577 76.29341125]
[148.84930420 88.04871368]
[138.41668701 94.92943573]
[125.69692230 92.79161835]
[112.97488403 100.73830414]
[100.49508667 109.06024170]
[88.26860046 117.75006866]
[76.04211426 126.43989563]
[63.81563187 135.12971497]
[51.58914566 143.81954956]
[46.40719223 151.34185791]
[39.11531067 152.54612732]
[26.76080132 161.05296326]
[14.40629292 169.55978394]
[2.05178404 178.06660461]
[-10.30272484 186.57344055]
[-2.93219519 199.64942932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 209]
[68 208]
[69 207]
[70 206]
[71 205]
[72 203]
[73 202]
[74 201]
[75 200]
[76 199]
[81 198]
[82 197]
[84 194]
[85 193]
[86 192]
[88 190]
[89 189]
[90 188]
[91 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
