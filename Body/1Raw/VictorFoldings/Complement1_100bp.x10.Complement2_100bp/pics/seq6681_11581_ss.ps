%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[68.91577911 597.77563477]
[58.21204376 608.34301758]
[45.79331970 616.82922363]
[32.05881882 622.96136475]
[17.45005035 626.54235840]
[2.43662262 627.45709229]
[-12.49884319 625.67620850]
[-26.87623405 621.25689697]
[-40.23337555 614.34118652]
[-52.14088821 605.15148926]
[-62.21600342 593.98315430]
[-70.13483429 581.19519043]
[-75.64283752 567.19866943]
[-78.56295013 552.44360352]
[-78.80129242 537.40423584]
[-76.35021210 522.56402588]
[-71.28849792 508.39999390]
[-63.77886581 495.36752319]
[-54.06271744 483.88552856]
[-42.45238876 474.32312012]
[-29.32110023 466.98764038]
[-15.09097099 462.11495972]
[-0.21943970 459.86166382]
[14.81543541 460.30020142]
[17.91954422 445.62490845]
[21.02365494 430.94958496]
[24.12776566 416.27429199]
[27.23187637 401.59899902]
[30.33598518 386.92367554]
[33.44009399 372.24838257]
[36.54420471 357.57308960]
[34.93768692 354.43438721]
[34.77161407 350.36160278]
[36.46844101 346.04025269]
[40.12850952 342.31857300]
[43.88481140 327.79650879]
[38.01802444 317.21789551]
[41.02861023 305.08856201]
[51.83198929 298.04232788]
[55.80408859 283.57778931]
[59.77618408 269.11328125]
[63.74827957 254.64874268]
[62.48823547 247.36630249]
[67.88868713 239.99928284]
[72.07569885 225.59548950]
[76.26271057 211.19171143]
[79.36682129 196.51641846]
[81.37083435 181.65087891]
[83.37484741 166.78535461]
[85.37886047 151.91983032]
[87.38287354 137.05430603]
[89.38688660 122.18877411]
[91.39089966 107.32324219]
[80.09592438 117.19357300]
[65.16724396 118.65463257]
[52.17290878 111.16149902]
[45.95946884 97.50890350]
[48.84439468 82.78894806]
[59.75167084 72.49179840]
[74.61315918 70.45803833]
[87.88588715 77.44622040]
[94.61964417 90.85106659]
[98.37594604 76.32900238]
[102.13224792 61.80694580]
[105.88854980 47.28488541]
[109.64484406 32.76282883]
[110.76049805 17.80437469]
[109.19997406 2.88576913]
[107.63945007 -12.03283596]
[106.07892609 -26.95144081]
[104.51840210 -41.87004471]
[102.95787811 -56.78865051]
[101.39735413 -71.70725250]
[99.50406647 -86.58728790]
[97.27894592 -101.42133331]
[95.05383301 -116.25537872]
[92.82871246 -131.08941650]
[90.60359955 -145.92346191]
[88.37847900 -160.75750732]
[86.15335846 -175.59155273]
[83.92824554 -190.42559814]
[81.70312500 -205.25964355]
[71.81360626 -213.53974915]
[70.26569366 -225.94087219]
[77.34797668 -235.74737549]
[73.10011292 -243.83399963]
[75.42649841 -250.84896851]
[73.64403534 -265.74267578]
[71.86156464 -280.63641357]
[62.53919983 -293.41937256]
[68.70928192 -306.97589111]
[53.81034851 -309.46554565]
[40.21694565 -316.05310059]
[29.03103065 -326.20455933]
[21.15939522 -339.09698486]
[17.24015999 -353.68518066]
[17.59103775 -368.78665161]
[22.18358421 -383.17709351]
[30.64550209 -395.69000244]
[42.29082489 -405.31097412]
[56.17551422 -411.26010132]
[71.17400360 -413.05508423]
[86.07042694 -410.55047607]
[99.65720367 -403.94924927]
[110.83291626 -393.78656006]
[118.69159698 -380.88626099]
[122.59617615 -366.29409790]
[122.23012543 -351.19302368]
[117.62312317 -336.80718994]
[109.14863586 -324.30279541]
[97.49365997 -314.69351196]
[83.60299683 -308.75836182]
[92.79787445 -297.04067993]
[86.75528717 -282.41885376]
[88.53775024 -267.52514648]
[90.32021332 -252.63142395]
[92.21350861 -237.75138855]
[103.67264557 -224.46022034]
[96.53717041 -207.48475647]
[98.76229095 -192.65071106]
[100.98740387 -177.81666565]
[103.21252441 -162.98262024]
[105.43763733 -148.14857483]
[107.66275787 -133.31454468]
[109.88787842 -118.48049164]
[112.11299133 -103.64645386]
[114.33811188 -88.81240845]
[116.94100189 -86.43390656]
[118.52116394 -82.67649078]
[118.44305420 -78.03459930]
[116.31596375 -73.26777649]
[117.87648773 -58.34917450]
[119.43701172 -43.43056870]
[120.99752808 -28.51196289]
[122.55805206 -13.59335899]
[124.11857605 1.32524621]
[125.67910004 16.24385071]
[130.90013123 2.18181443]
[139.29393005 -10.24976635]
[150.38577271 -20.34782600]
[163.54838562 -27.54126740]
[178.03735352 -31.42327118]
[193.03324890 -31.77428627]
[207.68797302 -28.57446480]
[221.17274475 -22.00477028]
[232.72492981 -12.43675232]
[241.69120789 -0.41152757]
[247.56446838 13.39081955]
[250.01255798 28.18969917]
[248.89704895 43.14816284]
[244.28099060 57.42023468]
[236.42547607 70.19876099]
[225.77474976 80.76105499]
[212.93116760 88.50977325]
[198.62110901 93.00667572]
[183.65386963 93.99745178]
[168.87591553 91.42606354]
[155.12301636 85.43793488]
[143.17295837 76.37172699]
[133.70158386 64.74017334]
[127.24453735 51.20109558]
[124.16690826 36.51912689]
[120.41060638 51.04118729]
[116.65430450 65.56324768]
[112.89800262 80.08530426]
[109.14170074 94.60736847]
[106.25643158 109.32725525]
[104.25241852 124.19278717]
[102.24840546 139.05831909]
[100.24439240 153.92384338]
[98.24037933 168.78936768]
[96.23635864 183.65489197]
[94.23234558 198.52043152]
[104.62048340 187.69976807]
[118.99935913 183.42802429]
[133.61038208 186.82182312]
[144.63427734 196.99403381]
[149.18939209 211.28567505]
[146.08506775 225.96093750]
[136.13273621 237.18373108]
[121.93393707 242.02046204]
[107.20018768 239.20681763]
[95.78285980 229.47827148]
[90.66649628 215.37872314]
[86.47948456 229.78250122]
[82.29247284 244.18629456]
[78.21280670 258.62084961]
[74.24070740 273.08535767]
[70.26860809 287.54989624]
[66.29651642 302.01440430]
[71.36421204 319.71752930]
[58.40687180 331.55282593]
[54.65056992 346.07485962]
[51.21950912 360.67718506]
[48.11539841 375.35250854]
[45.01128769 390.02780151]
[41.90717697 404.70309448]
[38.80306625 419.37841797]
[35.69895935 434.05371094]
[32.59484863 448.72900391]
[29.49073792 463.40429688]
[43.41546631 469.09127808]
[56.10086060 477.17340088]
[67.13912964 487.39083862]
[76.17544556 499.41519165]
[82.91932678 512.85986328]
[87.15397644 527.29272461]
[88.74328613 542.24981689]
[87.63614655 557.25030518]
[83.86816406 571.81195068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 201]
[25 200]
[26 199]
[27 198]
[28 197]
[29 196]
[30 195]
[31 194]
[35 193]
[36 192]
[39 190]
[40 189]
[41 188]
[42 187]
[44 186]
[45 185]
[46 184]
[47 173]
[48 172]
[49 171]
[50 170]
[51 169]
[52 168]
[53 167]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 137]
[68 136]
[69 135]
[70 134]
[71 133]
[72 132]
[73 131]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
[82 119]
[85 117]
[87 116]
[88 115]
[89 114]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
