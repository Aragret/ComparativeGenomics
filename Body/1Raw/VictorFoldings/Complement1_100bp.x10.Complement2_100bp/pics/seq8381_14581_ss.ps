%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[46.26291275 860.94122314]
[31.26081467 860.89239502]
[16.27373314 860.21954346]
[1.32761204 858.92382812]
[-13.55167198 857.00756836]
[-28.33836174 854.47393799]
[-43.00685883 851.32739258]
[-57.53176498 847.57342529]
[-71.88793945 843.21850586]
[-86.05052948 838.27008057]
[-99.99501801 832.73687744]
[-113.69725800 826.62835693]
[-127.13352966 819.95513916]
[-140.28057861 812.72875977]
[-153.11564636 804.96173096]
[-165.61650085 796.66754150]
[-177.76150513 787.86047363]
[-189.52963257 778.55584717]
[-200.90052795 768.76971436]
[-211.85447693 758.51904297]
[-222.37254333 747.82159424]
[-232.43650818 736.69586182]
[-242.02894592 725.16107178]
[-251.13323975 713.23730469]
[-259.73364258 700.94506836]
[-267.81527710 688.30578613]
[-275.36413574 675.34118652]
[-282.36715698 662.07379150]
[-288.81219482 648.52661133]
[-294.68811035 634.72302246]
[-299.98474121 620.68695068]
[-304.69290161 606.44274902]
[-308.80447388 592.01495361]
[-312.31228638 577.42864990]
[-315.21029663 562.70904541]
[-317.49346924 547.88159180]
[-319.15789795 532.97204590]
[-320.20065308 518.00616455]
[-320.61996460 503.00982666]
[-320.41506958 488.00906372]
[-319.58633423 473.02978516]
[-318.13522339 458.09796143]
[-316.06420898 443.23941040]
[-313.37689209 428.47988892]
[-310.07794189 413.84490967]
[-306.17303467 399.35983276]
[-301.66894531 385.04974365]
[-296.57351685 370.93942261]
[-290.89550781 357.05325317]
[-284.64474487 343.41531372]
[-277.83209229 330.04919434]
[-270.46932983 316.97802734]
[-262.56921387 304.22448730]
[-254.14538574 291.81057739]
[-245.21244812 279.75787354]
[-235.78587341 268.08718872]
[-225.88198853 256.81872559]
[-215.51789856 245.97200012]
[-204.71159363 235.56579590]
[-193.48175049 225.61813354]
[-181.84782410 216.14622498]
[-169.82994080 207.16647339]
[-157.44892883 198.69442749]
[-144.72619629 190.74473572]
[-131.68379211 183.33116150]
[-118.34427643 176.46656799]
[-104.73075104 170.16281128]
[-90.86678314 164.43081665]
[-76.77637482 159.28050232]
[-62.48392105 154.72079468]
[-48.01415634 150.75956726]
[-33.39213562 147.40370178]
[-18.64317322 144.65898132]
[-3.79280043 142.53018188]
[11.13327217 141.02098083]
[26.10920525 140.13397217]
[41.10907364 139.87072754]
[56.10691071 140.23167419]
[71.07674408 141.21620178]
[85.99267578 142.82260132]
[88.21778870 127.98854828]
[90.44290924 113.15451050]
[84.09726715 103.38854218]
[85.91062164 91.88406372]
[94.95261383 84.54351807]
[97.39833832 69.74424744]
[99.84407043 54.94497299]
[102.28979492 40.14570236]
[95.42672729 29.22502708]
[97.76845551 16.94903183]
[107.52384949 9.79649448]
[110.18965149 -4.96472216]
[112.85544586 -19.72593880]
[115.52124023 -34.48715591]
[101.40949249 -39.68617249]
[88.41503143 -47.25684738]
[76.93274689 -56.96911621]
[67.31156158 -68.52783203]
[59.84386063 -81.58174133]
[54.75657272 -95.73415375]
[52.20430374 -110.55498505]
[52.26460648 -125.59384918]
[54.93565369 -140.39373779]
[60.13627243 -154.50489807]
[67.70841980 -167.49848938]
[77.42198944 -178.97967529]
[88.98179626 -188.59954834]
[102.03655243 -196.06578064]
[116.18953705 -201.15145874]
[131.01066589 -203.70204163]
[146.04951477 -203.64002991]
[160.84910583 -200.96731567]
[174.95967102 -195.76509094]
[187.95240784 -188.19146729]
[199.43249512 -178.47659302]
[209.05105591 -166.91569519]
[216.51579285 -153.86009216]
[221.59986877 -139.70652771]
[224.14878845 -124.88512421]
[224.08506775 -109.84627533]
[221.41065979 -95.04698944]
[216.20684814 -80.93701935]
[208.63174438 -67.94513702]
[198.91557312 -56.46614838]
[187.35359192 -46.84889984]
[174.29713440 -39.38563919]
[160.14300537 -34.30316925]
[145.32130432 -31.75594139]
[130.28245544 -31.82136154]
[127.61666107 -17.06014442]
[124.95086670 -2.29892683]
[122.28507233 12.46229076]
[129.10023499 28.63388062]
[117.08906555 42.59143066]
[114.64334106 57.39070129]
[112.19760895 72.18997192]
[109.75188446 86.98924255]
[116.06143951 102.53162384]
[105.27695465 115.37962341]
[103.05183411 130.21366882]
[100.82672119 145.04771423]
[115.55751038 147.88835144]
[130.15737915 151.33929443]
[144.60105896 155.39459229]
[158.86354065 160.04722595]
[172.92013550 165.28912354]
[186.74650574 171.11122131]
[200.31872559 177.50341797]
[213.61328125 184.45468140]
[226.60717773 191.95297241]
[239.27789307 199.98527527]
[251.60351562 208.53771973]
[263.56271362 217.59548950]
[275.13476562 227.14291382]
[286.29962158 237.16343689]
[297.03799438 247.63973999]
[307.33126831 258.55368042]
[317.16162109 269.88635254]
[326.51205444 281.61813354]
[335.36636353 293.72872925]
[343.70922852 306.19717407]
[351.52618408 319.00186157]
[358.80374146 332.12066650]
[365.52926636 345.53082275]
[371.69113159 359.20916748]
[377.27865601 373.13198853]
[382.28216553 387.27517700]
[386.69302368 401.61428833]
[390.50357056 416.12445068]
[393.70724487 430.78057861]
[396.29843140 445.55728149]
[398.27270508 460.42898560]
[399.62664795 475.36993408]
[400.35787964 490.35427856]
[400.46514893 505.35607910]
[399.94827271 520.34936523]
[398.80813599 535.30816650]
[397.04672241 550.20654297]
[394.66711426 565.01879883]
[391.67337036 579.71923828]
[388.07070923 594.28240967]
[383.86535645 608.68310547]
[379.06460571 622.89642334]
[373.67672729 636.89770508]
[367.71112061 650.66278076]
[361.17803955 664.16778564]
[354.08883667 677.38928223]
[346.45578003 690.30444336]
[338.29208374 702.89093018]
[329.61184692 715.12689209]
[320.43014526 726.99121094]
[310.76284790 738.46331787]
[300.62670898 749.52331543]
[290.03924561 760.15209961]
[279.01882935 770.33123779]
[267.58450317 780.04321289]
[255.75605774 789.27105713]
[243.55400085 797.99890137]
[230.99943542 806.21154785]
[218.11410522 813.89489746]
[204.92030334 821.03558350]
[191.44088745 827.62121582]
[177.69918823 833.64044189]
[163.71899414 839.08282471]
[149.52450562 843.93890381]
[135.14028931 848.20031738]
[120.59125519 851.85974121]
[105.90259552 854.91070557]
[91.09973145 857.34802246]
[76.20829010 859.16748047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 141]
[81 140]
[82 139]
[85 137]
[86 136]
[87 135]
[88 134]
[91 132]
[92 131]
[93 130]
[94 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
