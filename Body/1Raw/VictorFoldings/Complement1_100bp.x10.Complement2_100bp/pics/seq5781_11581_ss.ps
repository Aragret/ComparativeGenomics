%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[34.62011337 668.98046875]
[20.98892021 675.30883789]
[6.56675386 679.53479004]
[-8.32419014 681.56396484]
[-23.35124207 681.35095215]
[-38.17869186 678.90057373]
[-52.47528839 674.26751709]
[-65.92164612 667.55535889]
[-78.21735382 658.91400146]
[-89.08773804 648.53649902]
[-98.28993988 636.65472412]
[-105.61838531 623.53405762]
[-110.90934753 609.46765137]
[-114.04462433 594.76977539]
[-114.95417786 579.76879883]
[-113.61769104 564.79974365]
[-110.06501007 550.19714355]
[-104.37551117 536.28717041]
[-96.67630005 523.38061523]
[-87.13937378 511.76574707]
[-75.97779846 501.70211792]
[-63.44092560 493.41448975]
[-49.80883408 487.08807373]
[-35.38606262 482.86416626]
[-20.49483109 480.83712769]
[-5.46781015 481.05227661]
[-3.02208257 466.25302124]
[-0.57635510 451.45373535]
[1.86937237 436.65447998]
[4.31509972 421.85519409]
[6.76082706 407.05593872]
[9.20655441 392.25665283]
[11.65228176 377.45739746]
[0.06843133 386.98703003]
[-14.89712524 388.00299072]
[-27.66260529 380.12628174]
[-33.46680069 366.29473877]
[-30.14488792 351.66720581]
[-18.93586159 341.69937134]
[-4.02040863 340.10897827]
[9.03837395 347.48925781]
[15.37003040 361.08865356]
[19.55704117 346.68484497]
[23.74405289 332.28106689]
[27.93106461 317.87728882]
[32.11807632 303.47351074]
[20.02247047 294.69958496]
[11.64281750 282.29351807]
[8.00648022 267.74185181]
[9.57106686 252.79615784]
[16.16693687 239.26232910]
[27.01536369 228.78225708]
[40.82041931 222.63470459]
[55.92377853 221.57926941]
[60.11078644 207.17547607]
[64.29779816 192.77169800]
[68.48480988 178.36791992]
[64.60766602 163.98678589]
[75.88952637 152.89488220]
[80.07653809 138.49110413]
[84.26354980 124.08731842]
[82.89492798 120.83782196]
[83.03222656 116.76398468]
[85.04576111 112.58080292]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[98.76510620 56.27413177]
[110.18579865 46.71290970]
[115.01179504 32.51045609]
[113.99330902 27.39090919]
[114.94524384 22.84699821]
[117.31836700 19.53288651]
[120.38341522 17.78995514]
[125.83876801 3.81715775]
[131.29412842 -10.15563965]
[136.74948120 -24.12843704]
[134.56103516 -39.79755402]
[146.39726257 -48.83927917]
[143.19880676 -66.97354126]
[157.31712341 -77.39659119]
[162.56384277 -91.44906616]
[167.81056213 -105.50153351]
[166.94494629 -110.64913940]
[168.03175354 -115.16268921]
[170.50248718 -118.40467834]
[173.61807251 -120.05558014]
[179.48704529 -133.85975647]
[185.35600281 -147.66392517]
[191.22496033 -161.46810913]
[178.13633728 -168.82687378]
[165.93670654 -177.58084106]
[154.77415466 -187.62377930]
[144.78416443 -198.83374023]
[136.08802795 -211.07467651]
[128.79129028 -224.19796753]
[122.98255157 -238.04432678]
[118.73229980 -252.44566345]
[116.09214020 -267.22717285]
[115.09412384 -282.20938110]
[115.75035858 -297.21047974]
[118.05288696 -312.04830933]
[121.97375488 -326.54281616]
[127.46536255 -340.51797485]
[134.46104431 -353.80419922]
[142.87590027 -366.24017334]
[152.60775757 -377.67495728]
[163.53848267 -387.96972656]
[175.53540039 -396.99951172]
[188.45286560 -404.65472412]
[202.13409424 -410.84240723]
[216.41297913 -415.48745728]
[231.11619568 -418.53350830]
[246.06527710 -419.94354248]
[261.07873535 -419.70050049]
[275.97433472 -417.80728149]
[290.57125854 -414.28686523]
[304.69229126 -409.18203735]
[318.16604614 -402.55471802]
[330.82894897 -394.48538208]
[342.52728271 -385.07196045]
[353.11901855 -374.42874146]
[362.47564697 -362.68493652]
[370.48352051 -349.98309326]
[377.04544067 -336.47738647]
[382.08178711 -322.33175659]
[385.53140259 -307.71795654]
[387.35241699 -292.81335449]
[387.52273560 -277.79888916]
[386.04025269 -262.85681152]
[382.92297363 -248.16853333]
[378.20877075 -233.91232300]
[371.95486450 -220.26126099]
[364.23715210 -207.38104248]
[355.14932251 -195.42802429]
[344.80169678 -184.54730225]
[333.31988525 -174.87098694]
[320.84326172 -166.51651001]
[307.52331543 -159.58528137]
[293.52169800 -154.16146851]
[279.00836182 -150.31089783]
[264.15954590 -148.08030701]
[249.15545654 -147.49678040]
[234.17823792 -148.56739807]
[219.40971375 -151.27915955]
[205.02912903 -155.59915161]
[199.16017151 -141.79496765]
[193.29121399 -127.99079132]
[187.42225647 -114.18661499]
[181.86302185 -100.25481415]
[176.61630249 -86.20234680]
[171.36959839 -72.14987183]
[176.10400391 -61.01829910]
[171.84788513 -49.26801682]
[160.37005615 -43.38392258]
[162.94873047 -28.71423340]
[150.72229004 -18.67308044]
[145.26692200 -4.70028305]
[139.81156921 9.27251530]
[134.35621643 23.24531364]
[129.21424866 37.33645248]
[124.38825226 51.53890991]
[127.61937714 66.07882690]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.66732788 128.27432251]
[94.48031616 142.67811584]
[90.29330444 157.08189392]
[93.87096405 172.49328613]
[82.88859558 182.55493164]
[78.70158386 196.95870972]
[74.51457214 211.36248779]
[70.32756042 225.76628113]
[82.51153564 234.75381470]
[90.86975861 247.34397888]
[94.40952301 262.00653076]
[92.72235870 276.96725464]
[86.03107452 290.42266846]
[75.16055298 300.75738525]
[61.43608856 306.73803711]
[46.52185822 307.66052246]
[42.33484650 322.06430054]
[38.14783478 336.46807861]
[33.96082306 350.87185669]
[29.77381325 365.27566528]
[26.45155334 379.90310669]
[24.00582504 394.70239258]
[21.56009865 409.50164795]
[19.11437035 424.30093384]
[16.66864395 439.10018921]
[14.22291565 453.89947510]
[11.77718830 468.69873047]
[9.33146095 483.49801636]
[23.62871742 488.12899780]
[37.07602692 494.83926392]
[49.37297058 503.47885132]
[60.24483109 513.85479736]
[69.44872284 525.73529053]
[76.77903748 538.85491943]
[82.07200623 552.92053223]
[85.20937347 567.61798096]
[86.12106323 582.61883545]
[84.78670502 597.58807373]
[81.23610687 612.19116211]
[75.54859161 626.10198975]
[67.85121918 639.00964355]
[58.31594849 650.62585449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 196]
[27 195]
[28 194]
[29 193]
[30 192]
[31 191]
[32 190]
[33 189]
[42 188]
[43 187]
[44 186]
[45 185]
[46 184]
[54 176]
[55 175]
[56 174]
[57 173]
[59 171]
[60 170]
[61 169]
[65 168]
[67 166]
[68 165]
[70 163]
[71 162]
[75 161]
[76 160]
[77 159]
[78 158]
[80 156]
[82 153]
[83 152]
[84 151]
[88 150]
[89 149]
[90 148]
[91 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
