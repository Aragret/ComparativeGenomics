%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[82.35108185 580.20788574]
[80.34683990 595.43542480]
[70.98460388 607.61096191]
[56.78277969 613.45935059]
[41.56157684 611.40740967]
[29.41542435 602.00708008]
[23.61157799 587.78698730]
[25.71124077 572.57226562]
[35.14961624 560.45562744]
[49.38782501 554.69641113]
[51.39183807 539.83087158]
[53.39585495 524.96533203]
[55.39986801 510.09982300]
[57.07140732 495.19323730]
[58.40964127 480.25305176]
[59.74787521 465.31286621]
[53.17690277 451.94607544]
[62.11454010 438.89120483]
[63.45277405 423.95101929]
[49.07460785 419.75073242]
[35.78796768 412.82376099]
[24.10437393 403.43463135]
[14.47404575 391.94277954]
[7.26854658 378.78869629]
[2.76645255 364.47698975]
[1.14258230 349.55715942]
[2.46120954 334.60247803]
[6.67351961 320.18780518]
[13.61941719 306.86773682]
[23.03360558 295.15502930]
[34.55572128 285.50103760]
[47.74413300 278.27822876]
[62.09286118 273.76586914]
[77.05098724 272.13912964]
[78.38922119 257.19894409]
[79.72745514 242.25875854]
[81.06568909 227.31857300]
[82.40392303 212.37838745]
[70.14217377 203.92173767]
[63.71692657 190.37284851]
[64.94425964 175.32759094]
[73.59436035 162.83468628]
[87.42646027 156.30627441]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.95688629 72.23586273]
[96.29512024 57.29567719]
[97.18793488 42.32226944]
[97.63453674 27.32892036]
[98.08114624 12.33557129]
[98.52775574 -2.65777874]
[91.20476532 -16.68220139]
[99.31757355 -29.17346191]
[99.76417542 -44.16681290]
[100.21078491 -59.16016388]
[100.65739441 -74.15351105]
[89.80007172 -63.80369949]
[74.83863831 -62.72875977]
[62.61325455 -71.42013550]
[58.71320724 -85.90425110]
[64.92153931 -99.55916595]
[78.39988708 -106.14202881]
[92.98612976 -102.64324951]
[102.01219177 -90.66065216]
[104.01620483 -105.52618408]
[106.02021790 -120.39170837]
[108.02423096 -135.25723267]
[110.02824402 -150.12277222]
[112.03225708 -164.98829651]
[97.04077911 -170.77961731]
[83.86765289 -179.97102356]
[73.26922607 -192.02989197]
[65.85286713 -206.25907898]
[62.04211426 -221.83728027]
[62.05253983 -237.86637878]
[65.87953186 -253.42324829]
[73.29878998 -267.61291504]
[83.87947845 -279.62005615]
[97.00923920 -288.75582886]
[111.92963409 -294.49740601]
[127.77994537 -296.51782227]
[129.34046936 -311.43643188]
[130.90098572 -326.35504150]
[132.46151733 -341.27365112]
[134.02203369 -356.19226074]
[135.58255005 -371.11087036]
[137.14308167 -386.02947998]
[138.70359802 -400.94805908]
[140.26412964 -415.86666870]
[141.82464600 -430.78527832]
[127.42528534 -435.15048218]
[114.11238861 -442.16210938]
[102.36719513 -451.56674194]
[92.61430359 -463.02438354]
[85.20626068 -476.12084961]
[80.41086578 -490.38272095]
[78.40147400 -505.29440308]
[79.25071716 -520.31689453]
[82.92790985 -534.90710449]
[89.30010223 -548.53765869]
[98.13696289 -560.71575928]
[109.11903381 -571.00122070]
[121.84931946 -579.02221680]
[135.86764526 -584.48876953]
[150.66722107 -587.20330811]
[165.71308899 -587.06768799]
[180.46133423 -584.08679199]
[194.37882996 -578.36834717]
[206.96243286 -570.11920166]
[217.75729370 -559.63739014]
[226.37316895 -547.30194092]
[232.49858093 -533.55877686]
[235.91213989 -518.90460205]
[236.49041748 -503.86923218]
[234.21250916 -488.99618530]
[229.16078186 -474.82308960]
[221.51782227 -461.86233521]
[211.55995178 -450.58236694]
[199.64712524 -441.39102173]
[186.20997620 -434.62054443]
[171.73425293 -430.51565552]
[156.74325562 -429.22476196]
[155.18272400 -414.30615234]
[153.62220764 -399.38754272]
[152.06169128 -384.46893311]
[150.50115967 -369.55032349]
[148.94064331 -354.63174438]
[147.38011169 -339.71313477]
[145.81959534 -324.79452515]
[144.25906372 -309.87591553]
[142.69854736 -294.95730591]
[155.97346497 -290.55493164]
[168.04129028 -283.47335815]
[178.36820984 -274.02282715]
[186.49676514 -262.61834717]
[192.06611633 -249.76165771]
[194.82809448 -236.01899719]
[194.65823364 -221.99624634]
[191.56141663 -208.31219482]
[185.67167664 -195.57122803]
[177.24653625 -184.33666992]
[166.65562439 -175.10580444]
[154.36454773 -168.28796387]
[140.91435242 -164.18627930]
[126.89778137 -162.98428345]
[124.89376831 -148.11875916]
[122.88975525 -133.25321960]
[120.88574219 -118.38769531]
[118.88172913 -103.52217102]
[116.87771606 -88.65663910]
[115.65074158 -73.70690918]
[115.20413208 -58.71355820]
[114.75753021 -43.72020721]
[114.31092072 -28.72685623]
[121.66585541 -15.77485847]
[113.52110291 -2.21117282]
[113.07449341 12.78217697]
[112.62789154 27.77552795]
[112.18128204 42.76887894]
[114.00318909 44.89932251]
[115.09097290 47.87981415]
[115.11663818 51.43435287]
[113.85806274 55.17340469]
[111.23530579 58.63391113]
[109.89707184 73.57409668]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[102.36664581 157.64450073]
[114.81833649 166.52723694]
[121.11049652 180.35855103]
[119.64444733 195.38243103]
[110.91358185 207.57374573]
[97.34410858 213.71662903]
[96.00587463 228.65681458]
[94.66764069 243.59700012]
[93.32940674 258.53717041]
[91.99117279 273.47735596]
[106.42208862 277.73654175]
[119.74046326 284.72714233]
[131.43528748 294.17880249]
[141.05828857 305.72680664]
[148.24102783 318.92614746]
[152.70912170 333.26861572]
[154.29260254 348.20242310]
[152.93249512 363.15341187]
[148.68293762 377.54711914]
[141.70903015 390.83090210]
[132.28048706 402.49505615]
[120.76113892 412.09246826]
[107.59490967 419.25570679]
[93.28871155 423.71112061]
[78.39295959 425.28927612]
[77.05472565 440.22946167]
[83.52997589 454.66488647]
[74.68806458 466.65112305]
[73.34983063 481.59130859]
[72.01159668 496.53149414]
[74.20941925 501.26611328]
[74.35663605 505.90631104]
[72.83258820 509.68682861]
[70.26539612 512.10382080]
[68.26138306 526.96936035]
[66.25737000 541.83489990]
[64.25335693 556.70043945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 210]
[11 209]
[12 208]
[13 207]
[14 203]
[15 202]
[16 201]
[18 199]
[19 198]
[34 183]
[35 182]
[36 181]
[37 180]
[38 179]
[43 174]
[44 173]
[45 172]
[46 171]
[48 169]
[49 168]
[50 167]
[51 162]
[52 161]
[53 160]
[54 159]
[56 157]
[57 156]
[58 155]
[59 154]
[67 153]
[68 152]
[69 151]
[70 150]
[71 149]
[72 148]
[84 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[91 127]
[92 126]
[93 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
