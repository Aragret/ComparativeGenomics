%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[50.62195206 890.42132568]
[35.62225342 890.15472412]
[20.64567947 889.28051758]
[5.71683979 887.80004883]
[-9.13973999 885.71582031]
[-23.89965057 883.03125000]
[-38.53863907 879.75067139]
[-53.03265762 875.87957764]
[-67.35788727 871.42425537]
[-81.49079895 866.39208984]
[-95.40816498 860.79125977]
[-109.08712769 854.63110352]
[-122.50520325 847.92156982]
[-135.64035034 840.67382812]
[-148.47097778 832.89971924]
[-160.97602844 824.61206055]
[-173.13493347 815.82440186]
[-184.92773438 806.55120850]
[-196.33503723 796.80773926]
[-207.33810425 786.60992432]
[-217.91886902 775.97467041]
[-228.05993652 764.91931152]
[-237.74465942 753.46209717]
[-246.95710754 741.62176514]
[-255.68214417 729.41784668]
[-263.90545654 716.87036133]
[-271.61349487 703.99993896]
[-278.79364014 690.82769775]
[-285.43408203 677.37530518]
[-291.52389526 663.66485596]
[-297.05307007 649.71893311]
[-302.01254272 635.56030273]
[-306.39413452 621.21234131]
[-310.19070435 606.69866943]
[-313.39593506 592.04296875]
[-316.00463867 577.26947021]
[-318.01248169 562.40234375]
[-319.41616821 547.46612549]
[-320.21340942 532.48522949]
[-320.40289307 517.48437500]
[-319.98428345 502.48815918]
[-318.95831299 487.52120972]
[-317.32662964 472.60815430]
[-315.09191895 457.77343750]
[-312.25787354 443.04150391]
[-308.82910156 428.43652344]
[-304.81130981 413.98248291]
[-300.21102905 399.70315552]
[-295.03585815 385.62194824]
[-289.29431152 371.76208496]
[-282.99575806 358.14627075]
[-276.15063477 344.79687500]
[-268.77011108 331.73587036]
[-260.86636353 318.98468018]
[-252.45234680 306.56427002]
[-243.54191589 294.49505615]
[-234.14967346 282.79684448]
[-224.29107666 271.48889160]
[-213.98231506 260.58975220]
[-203.24032593 250.11730957]
[-192.08276367 240.08882141]
[-180.52795410 230.52072144]
[-168.59489441 221.42875671]
[-156.30316162 212.82785034]
[-143.67297363 204.73214722]
[-130.72508240 197.15493774]
[-117.48076630 190.10867310]
[-103.96176147 183.60491943]
[-90.19029999 177.65438843]
[-76.18900299 172.26684570]
[-61.98087692 167.45112610]
[-47.58926010 163.21516418]
[-33.03779984 159.56591797]
[-18.35040665 156.50936890]
[-3.55121136 154.05053711]
[11.33547211 152.19348145]
[26.28518486 150.94125366]
[41.27336502 150.29588318]
[56.27538300 150.25845337]
[71.26659393 150.82902527]
[86.22237396 152.00665283]
[88.00483704 137.11294556]
[89.78730774 122.21922302]
[91.56977081 107.32550812]
[93.24131012 92.41893005]
[94.80183411 77.50032806]
[96.36235809 62.58172226]
[97.92288208 47.66311646]
[99.48340607 32.74451065]
[91.98249817 22.25169563]
[93.58938599 9.85808182]
[102.90176392 2.13757563]
[104.68422699 -12.75614166]
[106.46669769 -27.64985847]
[108.24916077 -42.54357529]
[110.03162384 -57.43729401]
[111.81409454 -72.33100891]
[97.70634460 -77.64465332]
[85.28057098 -86.18067932]
[75.25920105 -97.44281006]
[68.22486115 -110.77627563]
[64.58651733 -125.40589905]
[64.55569458 -140.48112488]
[68.13419342 -155.12550354]
[75.11396027 -168.48762512]
[85.08919525 -179.79064941]
[97.47995758 -188.37739563]
[111.56586456 -193.74868774]
[126.52797699 -195.59220886]
[141.49641418 -193.80079651]
[155.60095215 -188.47860718]
[168.02154541 -179.93505859]
[178.03608704 -168.66685486]
[185.06233215 -155.32911682]
[188.69181824 -140.69728088]
[188.71348572 -125.62203979]
[185.12611389 -110.97983551]
[178.13825989 -97.62194824]
[168.15617371 -86.32498932]
[155.76019287 -77.74574280]
[141.67103577 -72.38300323]
[126.70780945 -70.54854584]
[124.92534637 -55.65482712]
[123.14287567 -40.76110840]
[121.36041260 -25.86739349]
[119.57794952 -10.97367573]
[117.79547882 3.92004156]
[125.56111908 19.65731430]
[114.40200806 34.30503464]
[112.84148407 49.22364044]
[111.28096008 64.14224243]
[109.72043610 79.06085205]
[108.15991211 93.97945404]
[110.52009583 101.68672943]
[106.46348572 109.10797119]
[104.68102264 124.00168610]
[102.89855194 138.89540100]
[101.11608887 153.78912354]
[115.92738342 156.17399597]
[130.62986755 159.15713501]
[145.19937134 162.73365784]
[159.61196899 166.89767456]
[173.84397888 171.64234924]
[187.87200928 176.95988464]
[201.67301941 182.84155273]
[215.22433472 189.27769470]
[228.50369263 196.25770569]
[241.48927307 203.77014160]
[254.15974426 211.80265808]
[266.49426270 220.34205627]
[278.47262573 229.37431335]
[290.07507324 238.88456726]
[301.28259277 248.85719299]
[312.07675171 259.27584839]
[322.43981934 270.12335205]
[332.35479736 281.38192749]
[341.80535889 293.03308105]
[350.77597046 305.05761719]
[359.25192261 317.43585205]
[367.21926880 330.14739990]
[374.66491699 343.17138672]
[381.57666016 356.48638916]
[387.94314575 370.07058716]
[393.75387573 383.90161133]
[398.99929810 397.95675659]
[403.67083740 412.21295166]
[407.76080322 426.64672852]
[411.26245117 441.23443604]
[414.17007446 455.95202637]
[416.47885132 470.77536011]
[418.18502808 485.68008423]
[419.28576660 500.64172363]
[419.77926636 515.63568115]
[419.66470337 530.63732910]
[418.94232178 545.62194824]
[417.61325073 560.56506348]
[415.67968750 575.44201660]
[413.14483643 590.22833252]
[410.01281738 604.89984131]
[406.28881836 619.43237305]
[401.97894287 633.80200195]
[397.09027100 647.98516846]
[391.63079834 661.95861816]
[385.60955811 675.69927979]
[379.03640747 689.18469238]
[371.92218018 702.39263916]
[364.27850342 715.30139160]
[356.11798096 727.88977051]
[347.45401001 740.13714600]
[338.30081177 752.02331543]
[328.67346191 763.52880859]
[318.58773804 774.63464355]
[308.06024170 785.32269287]
[297.10824585 795.57525635]
[285.74975586 805.37561035]
[274.00341797 814.70758057]
[261.88854980 823.55584717]
[249.42506409 831.90594482]
[236.63342285 839.74401855]
[223.53465271 847.05731201]
[210.15025330 853.83374023]
[196.50224304 860.06219482]
[182.61302185 865.73242188]
[168.50541687 870.83514404]
[154.20262146 875.36199951]
[139.72811890 879.30541992]
[125.10570526 882.65905762]
[110.35939026 885.41735840]
[95.51340485 887.57580566]
[80.59214783 889.13079834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 138]
[82 137]
[83 136]
[84 135]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[92 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
