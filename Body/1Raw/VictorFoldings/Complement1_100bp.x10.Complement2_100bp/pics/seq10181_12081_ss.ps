%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[83.09560394 314.96386719]
[81.80912781 300.00827026]
[81.90808105 284.99777222]
[83.39162445 270.06045532]
[86.24709320 255.32373047]
[90.45012665 240.91334534]
[95.96486664 226.95225525]
[102.74426270 213.55955505]
[110.73047638 200.84951782]
[119.85536957 188.93057251]
[130.04107666 177.90443420]
[141.20072937 167.86515808]
[132.24002075 155.83578491]
[123.27933502 143.80641174]
[109.47132111 138.22177124]
[107.43237305 122.53249359]
[98.47167969 110.50312042]
[88.81086731 99.02841949]
[73.69843292 94.34600830]
[70.54819489 79.78835297]
[55.43576050 75.10594177]
[52.28551865 60.54829407]
[41.95885086 49.66896057]
[30.52901840 59.38861847]
[18.58545685 68.46960449]
[6.16381121 76.88480377]
[-6.69884682 84.60910797]
[-19.96413040 91.61946869]
[-33.59244919 97.89495850]
[-47.54313660 103.41685486]
[-61.77454758 108.16867065]
[-76.24421692 112.13622284]
[-90.90896606 115.30767822]
[-105.72502136 117.67357635]
[-120.64816284 119.22683716]
[-135.63386536 119.96284485]
[-150.63739014 119.87939453]
[-165.61398315 118.97673798]
[-180.51892090 117.25756073]
[-195.30773926 114.72700500]
[-209.93629456 111.39261627]
[-224.36094666 107.26435089]
[-238.53862000 102.35452271]
[-252.42701721 96.67778015]
[-265.98468018 90.25108337]
[-279.17117310 83.09359741]
[-291.94711304 75.22668457]
[-304.27435303 66.67382812]
[-316.11618042 57.46054840]
[-327.43719482 47.61434555]
[-338.20358276 37.16460037]
[-348.38330078 26.14250374]
[-357.94589233 14.58094692]
[-366.86285400 2.51443529]
[-375.10757446 -10.02101994]
[-382.65542603 -22.98800850]
[-389.48388672 -36.34783173]
[-395.57260132 -50.06061554]
[-400.90338135 -64.08544159]
[-405.46032715 -78.38044739]
[-409.22982788 -92.90296936]
[-412.20062256 -107.60967255]
[-414.36389160 -122.45667267]
[-415.71313477 -137.39964294]
[-416.24432373 -152.39399719]
[-415.95590210 -167.39498901]
[-414.84872437 -182.35784912]
[-412.92608643 -197.23789978]
[-410.19369507 -211.99076843]
[-406.65975952 -226.57241821]
[-402.33480835 -240.93930054]
[-397.23175049 -255.04858398]
[-391.36578369 -268.85812378]
[-384.75445557 -282.32672119]
[-377.41748047 -295.41418457]
[-369.37677002 -308.08145142]
[-360.65628052 -320.29071045]
[-351.28210449 -332.00555420]
[-341.28213501 -343.19097900]
[-330.68627930 -353.81362915]
[-319.52612305 -363.84179688]
[-307.83502197 -373.24554443]
[-295.64779663 -381.99682617]
[-283.00088501 -390.06948853]
[-269.93197632 -397.43948364]
[-256.48010254 -404.08480835]
[-242.68542480 -409.98559570]
[-228.58908081 -415.12426758]
[-214.23313904 -419.48547363]
[-199.66047668 -423.05621338]
[-184.91455078 -425.82583618]
[-170.03939819 -427.78604126]
[-155.07937622 -428.93099976]
[-140.07916260 -429.25729370]
[-125.08351898 -428.76394653]
[-110.13718414 -427.45245361]
[-95.28477478 -425.32669067]
[-80.57061768 -422.39303589]
[-66.03862000 -418.66018677]
[-51.73215485 -414.13937378]
[-37.69392014 -408.84402466]
[-23.96580505 -402.78994751]
[-10.58878517 -395.99520874]
[2.39721870 -388.48013306]
[14.95345020 -380.26708984]
[27.04243660 -371.38061523]
[38.62810135 -361.84725952]
[49.67586517 -351.69540405]
[60.15275955 -340.95541382]
[70.02751160 -329.65930176]
[79.27066040 -317.84078979]
[87.85461426 -305.53515625]
[95.75375366 -292.77911377]
[102.94451141 -279.61074829]
[109.40542603 -266.06936646]
[115.11721039 -252.19534302]
[120.06281281 -238.03010559]
[124.22749329 -223.61593628]
[127.59880066 -208.99583435]
[130.16668701 -194.21345520]
[131.92349243 -179.31289673]
[132.86395264 -164.33863831]
[132.98529053 -149.33537292]
[132.28712463 -134.34785461]
[130.77154541 -119.42084503]
[128.44305420 -104.59886169]
[125.30863953 -89.92615509]
[121.37763214 -75.44651031]
[116.66175842 -61.20314789]
[111.17510986 -47.23856735]
[104.93404388 -33.59444427]
[97.95719910 -20.31150436]
[90.26539612 -7.42938566]
[81.88158417 5.01346684]
[72.83078003 16.97991753]
[63.14001083 28.43425369]
[52.83818436 39.34228897]
[63.16485214 50.22162628]
[77.53865051 54.12587357]
[81.42752838 69.46168518]
[95.80133057 73.36593628]
[99.69020081 88.70175171]
[99.07932281 73.71419525]
[107.29834747 61.16637802]
[121.28177643 55.73832703]
[135.81413269 59.45457077]
[145.47521973 70.92903900]
[146.66168213 85.88204193]
[138.93099976 98.73648071]
[125.16652679 104.69795990]
[110.50105286 101.54241943]
[119.46175385 113.57180023]
[133.91069031 120.01686096]
[135.30871582 134.84570312]
[144.26940918 146.87509155]
[153.23010254 158.90446472]
[166.04393005 151.08587646]
[179.52452087 144.48297119]
[193.55683899 139.15206909]
[208.02119446 135.13865662]
[222.79414368 132.47698975]
[237.74966431 131.18977356]
[252.76016235 131.28796387]
[267.69757080 132.77076721]
[282.43441772 135.62550354]
[296.84503174 139.82780457]
[310.80639648 145.34185791]
[324.19943237 152.12059021]
[336.90988159 160.10615540]
[348.82925415 169.23045349]
[359.85592651 179.41561890]
[369.89575195 190.57475281]
[378.86309814 202.61267090]
[386.68148804 215.42662048]
[393.28417969 228.90731812]
[398.61483765 242.93974304]
[402.62799072 257.40414429]
[405.28942871 272.17715454]
[406.57638550 287.13269043]
[406.47793579 302.14318848]
[404.99490356 317.08056641]
[402.13992310 331.81738281]
[397.93737793 346.22790527]
[392.42309570 360.18917847]
[385.64413452 373.58212280]
[377.65835571 386.29241943]
[368.53384399 398.21163940]
[358.34851074 409.23812866]
[347.18920898 419.27777100]
[335.15115356 428.24493408]
[322.33706665 436.06311035]
[308.85626221 442.66555786]
[294.82376099 447.99600220]
[280.35928345 452.00891113]
[265.58624268 454.67010498]
[250.63066101 455.95681763]
[235.62016296 455.85812378]
[220.68281555 454.37481689]
[205.94604492 451.51959229]
[191.53559875 447.31680298]
[177.57440186 441.80230713]
[164.18159485 435.02313232]
[151.47142029 427.03713989]
[139.55233765 417.91244507]
[128.52601624 407.72689819]
[118.48655701 396.56741333]
[109.51959991 384.52923584]
[101.70165253 371.71499634]
[95.09941101 358.23406982]
[89.76921844 344.20150757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 156]
[13 155]
[14 154]
[16 152]
[17 151]
[18 142]
[20 140]
[22 138]
[23 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
