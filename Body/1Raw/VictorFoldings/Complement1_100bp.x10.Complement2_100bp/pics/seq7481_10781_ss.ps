%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[145.87590027 727.99487305]
[133.16061401 720.02337646]
[121.09286499 711.10198975]
[109.74344635 701.28289795]
[99.17897797 690.62390137]
[89.46144867 679.18743896]
[80.64789581 667.04064941]
[72.79003143 654.25488281]
[65.93397522 640.90509033]
[60.11996460 627.06964111]
[55.38211060 612.82971191]
[51.74821854 598.26885986]
[49.23961639 583.47259521]
[47.87102890 568.52770996]
[47.65048218 553.52191162]
[48.57926941 538.54327393]
[50.65194702 523.67962646]
[53.85634613 509.01831055]
[58.17366409 494.64529419]
[63.57856369 480.64495850]
[70.03932953 467.09942627]
[77.51803589 454.08819580]
[85.97080994 441.68768311]
[95.34803772 429.97058105]
[105.59468842 419.00567627]
[116.65063477 408.85733032]
[128.45098877 399.58511353]
[140.92651367 391.24340820]
[154.00398254 383.88116455]
[167.60665894 377.54159546]
[181.65470886 372.26193237]
[177.46769714 357.85815430]
[173.28068542 343.45434570]
[169.09367371 329.05056763]
[164.90666199 314.64678955]
[160.71965027 300.24301147]
[145.10343933 295.18225098]
[135.48448181 281.67532349]
[135.81498718 264.93041992]
[146.16276550 251.55058289]
[141.76177979 237.21073914]
[137.36077881 222.87089539]
[132.53477478 208.66844177]
[127.28806305 194.61596680]
[122.04134369 180.56349182]
[116.79462433 166.51103210]
[111.54790497 152.45855713]
[106.30118561 138.40608215]
[101.05446625 124.35361481]
[95.80775452 110.30113983]
[88.61201477 123.46250153]
[74.25675964 127.81298065]
[60.96533203 120.86042786]
[56.35166168 106.58758545]
[63.05867386 93.17057800]
[77.24428558 88.29528809]
[90.78169250 94.75378418]
[86.80959320 80.28926086]
[82.83749390 65.82473755]
[74.49625397 78.29164124]
[59.81011200 81.34405518]
[47.19196320 73.23342896]
[43.87005234 58.60588837]
[51.74732590 45.84075928]
[66.31131744 42.25048065]
[79.21854401 49.89097595]
[76.55274963 35.12976074]
[73.88695526 20.36854172]
[71.22116089 5.60732555]
[68.55535889 -9.15389156]
[65.88956451 -23.91510963]
[62.78545761 -38.59041214]
[59.24578476 -53.16678619]
[55.70611191 -67.74316406]
[40.77087402 -66.13266754]
[25.75319862 -66.48545837]
[10.91005993 -68.79548645]
[-3.50455904 -73.02322388]
[-17.24400330 -79.09633636]
[-30.07317352 -86.91089630]
[-41.77254868 -96.33319855]
[-52.14192963 -107.20200348]
[-61.00389099 -119.33132935]
[-68.20678711 -132.51364136]
[-73.62737274 -146.52336121]
[-77.17288971 -161.12077332]
[-78.78266907 -176.05609131]
[-78.42916870 -191.07374573]
[-76.11843109 -205.91677856]
[-71.89000702 -220.33119202]
[-65.81623840 -234.07034302]
[-58.00106812 -246.89913940]
[-48.57821274 -258.59808350]
[-37.70891571 -268.96694946]
[-25.57916260 -277.82830811]
[-12.39651108 -285.03057861]
[1.61346877 -290.45050049]
[16.21104622 -293.99533081]
[31.14643669 -295.60440063]
[46.16407776 -295.25018311]
[61.00699615 -292.93875122]
[75.42121124 -288.70962524]
[89.16007996 -282.63519287]
[101.98851013 -274.81942749]
[113.68698120 -265.39602661]
[124.05532837 -254.52621460]
[132.91613770 -242.39604187]
[140.11778259 -229.21304321]
[145.53703308 -215.20281982]
[149.08116150 -200.60507202]
[150.68951416 -185.66960144]
[150.33457947 -170.65197754]
[148.02243042 -155.80915833]
[143.79263306 -141.39515686]
[137.71755981 -127.65657043]
[129.90116882 -114.82852173]
[120.47720337 -103.13049316]
[109.60691833 -92.76265717]
[97.47631836 -83.90243530]
[84.29298401 -76.70141602]
[70.28248596 -71.28283691]
[73.82215881 -56.70645905]
[77.36183167 -42.13008499]
[79.68285370 -40.55814362]
[81.52105713 -37.97210312]
[82.48707581 -34.55125046]
[82.26354980 -30.61239815]
[80.65078735 -26.58090401]
[83.31658173 -11.81968784]
[85.98237610 2.94152975]
[88.64817047 17.70274734]
[91.31396484 32.46396255]
[93.97975922 47.22518158]
[97.30202484 61.85264206]
[101.27411652 76.31716919]
[105.24621582 90.78169250]
[109.86022186 105.05442047]
[115.10694122 119.10689545]
[120.35366058 133.15936279]
[125.60037994 147.21183777]
[130.84709167 161.26431274]
[136.09381104 175.31677246]
[141.34053040 189.36924744]
[146.58724976 203.42172241]
[150.03274536 206.06416321]
[152.23651123 209.33645630]
[153.15303040 212.77090454]
[152.89334106 215.93305969]
[151.70062256 218.46989441]
[156.10162354 232.80973816]
[160.50262451 247.14959717]
[173.83691406 250.64064026]
[183.62731934 260.18875122]
[187.39123535 273.22341919]
[184.24830627 286.31030273]
[175.12344360 296.05599976]
[179.31045532 310.45977783]
[183.49745178 324.86355591]
[187.68446350 339.26733398]
[191.87147522 353.67114258]
[196.05848694 368.07492065]
[210.74772644 365.00100708]
[225.62918091 363.06054688]
[240.61549377 362.26498413]
[255.61874390 362.61892700]
[270.55087280 364.12033081]
[285.32424927 366.76040649]
[299.85220337 370.52359009]
[314.04943848 375.38787842]
[327.83267212 381.32467651]
[341.12097168 388.29916382]
[353.83642578 396.27038574]
[365.90432739 405.19158936]
[377.25393677 415.01040649]
[387.81860352 425.66921997]
[397.53634644 437.10549927]
[406.35012817 449.25210571]
[414.20825195 462.03775024]
[421.06454468 475.38742065]
[426.87884521 489.22277832]
[431.61694336 503.46261597]
[435.25112915 518.02337646]
[437.76000977 532.81958008]
[439.12887573 547.76446533]
[439.34970093 562.77026367]
[438.42120361 577.74890137]
[436.34881592 592.61254883]
[433.14468384 607.27398682]
[428.82763672 621.64703369]
[423.42300415 635.64752197]
[416.96249390 649.19317627]
[409.48403931 662.20452881]
[401.03149414 674.60522461]
[391.65447998 686.32250977]
[381.40805054 697.28759766]
[370.35229492 707.43609619]
[358.55212402 716.70855713]
[346.07675171 725.05053711]
[332.99942017 732.41302490]
[319.39688110 738.75280762]
[305.34890747 744.03277588]
[290.93801880 748.22186279]
[276.24871826 751.29547119]
[261.36721802 753.23565674]
[246.38088989 754.03094482]
[231.37765503 753.67669678]
[216.44554138 752.17498779]
[201.67221069 749.53466797]
[187.14434814 745.77117920]
[172.94720459 740.90667725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 161]
[32 160]
[33 159]
[34 158]
[35 157]
[36 156]
[40 151]
[41 150]
[42 149]
[43 144]
[44 143]
[45 142]
[46 141]
[47 140]
[48 139]
[49 138]
[50 137]
[57 136]
[58 135]
[59 134]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[72 123]
[73 122]
[74 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
