%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[139.66458130 490.40197754]
[134.19400024 476.40844727]
[130.72424316 461.78970337]
[129.32287598 446.83035278]
[130.01716614 431.82156372]
[132.79359436 417.05545044]
[137.59811401 402.81948853]
[144.33720398 389.39077759]
[152.87969971 377.03067017]
[163.05931091 365.97979736]
[174.67787170 356.45327759]
[187.50926208 348.63650513]
[201.30368042 342.68167114]
[197.33158875 328.21713257]
[193.35948181 313.75262451]
[189.38739014 299.28808594]
[183.93203735 285.31530762]
[177.05261230 271.98587036]
[170.17320251 258.65643311]
[165.97657776 256.37667847]
[163.16752625 251.43640137]
[163.29409790 244.82614136]
[156.81460571 231.29780579]
[150.33509827 217.76945496]
[143.85560608 204.24110413]
[137.37611389 190.71276855]
[130.89662170 177.18441772]
[124.41712189 163.65606689]
[117.93762207 150.12773132]
[111.15763092 136.74745178]
[104.08052826 123.52192688]
[89.53339386 121.45651245]
[78.95092010 111.26356506]
[76.34164429 96.80407715]
[82.69394684 83.55518341]
[75.61683655 70.32965088]
[60.75840378 65.65368652]
[53.76961517 52.14030075]
[58.31900787 38.00387192]
[51.24190140 24.77834511]
[44.16479492 11.55281734]
[37.35670853 5.46284246]
[37.08243942 -1.92272222]
[30.20302773 -15.25215149]
[21.78841019 -27.66964722]
[11.95782948 -38.99924088]
[2.12724829 -50.32883453]
[-7.70333242 -61.65842438]
[-19.90015411 -52.90844345]
[-32.85229874 -45.32118225]
[-46.44926453 -38.96137238]
[-60.57504272 -33.88327408]
[-75.10911560 -30.13021469]
[-89.92747498 -27.73421669]
[-104.90370178 -26.71571922]
[-119.91001129 -27.08341217]
[-134.81838989 -28.83415985]
[-149.50161743 -31.95302391]
[-163.83444214 -36.41339493]
[-177.69456482 -42.17721939]
[-190.96372986 -49.19532013]
[-203.52874756 -57.40781784]
[-215.28239441 -66.74465179]
[-226.12438965 -77.12615204]
[-235.96224976 -88.46375275]
[-244.71203613 -100.66072083]
[-252.29907227 -113.61299133]
[-258.65866089 -127.21006012]
[-263.73651123 -141.33592224]
[-267.48934937 -155.87005615]
[-269.88510132 -170.68846130]
[-270.90335083 -185.66470337]
[-270.53540039 -200.67100525]
[-268.78439331 -215.57934570]
[-265.66528320 -230.26252747]
[-261.20468140 -244.59527588]
[-255.44062805 -258.45529175]
[-248.42230225 -271.72436523]
[-240.20959473 -284.28921509]
[-230.87257385 -296.04272461]
[-220.49089050 -306.88455200]
[-209.15312195 -316.72222900]
[-196.95600891 -325.47180176]
[-184.00361633 -333.05862427]
[-170.40643311 -339.41799927]
[-156.28048706 -344.49560547]
[-141.74629211 -348.24819946]
[-126.92784882 -350.64370728]
[-111.95159149 -351.66168213]
[-96.94528961 -351.29348755]
[-82.03697968 -349.54226685]
[-67.35385132 -346.42291260]
[-53.02117920 -341.96206665]
[-39.16125107 -336.19775391]
[-25.89231110 -329.17922974]
[-13.32757473 -320.96630859]
[-1.57423759 -311.62908936]
[9.26742077 -301.24722290]
[19.10490227 -289.90930176]
[27.85427475 -277.71203613]
[35.44089127 -264.75952148]
[41.80002213 -251.16223145]
[46.87741089 -237.03619385]
[50.62974548 -222.50193787]
[53.02500153 -207.68345642]
[54.04275131 -192.70718384]
[53.67430878 -177.70088196]
[51.92281723 -162.79260254]
[48.80321884 -148.10952759]
[44.34212875 -133.77693176]
[38.57761383 -119.91709900]
[31.55884933 -106.64827728]
[23.34572220 -94.08367157]
[14.00830460 -82.33049011]
[3.62626052 -71.48900604]
[13.45684147 -60.15941238]
[23.28742218 -48.82982254]
[33.11800385 -37.50022888]
[29.99686623 -52.17191696]
[32.01342010 -67.03575134]
[38.93075943 -80.34553528]
[49.93624496 -90.53765869]
[63.73696136 -96.41474915]
[78.71161652 -97.28637695]
[93.10099792 -93.05014801]
[105.21466064 -84.20372772]
[113.62950134 -71.78638458]
[117.35695648 -57.25689316]
[115.95912170 -42.32216644]
[109.60021973 -28.73671913]
[99.02728271 -18.09655952]
[85.48241425 -11.65167904]
[70.55684662 -10.15921879]
[56.00402069 -13.79450989]
[43.53245926 -22.13156319]
[50.41186905 -8.80213451]
[57.39032364 4.47571135]
[64.46743011 17.70123863]
[71.54453278 30.92676735]
[85.82983398 34.98457336]
[93.19542694 48.29632568]
[88.84236908 63.25254822]
[95.91947174 76.47807312]
[110.46660614 78.54348755]
[121.04907990 88.73643494]
[123.65835571 103.19592285]
[117.30605316 116.44481659]
[124.38316345 129.67034912]
[128.81809998 132.42323303]
[131.48675537 136.22212219]
[132.28645325 140.21907043]
[131.46597290 143.64822388]
[137.94546509 157.17657471]
[144.42495728 170.70492554]
[150.90446472 184.23326111]
[157.38395691 197.76161194]
[163.86344910 211.28996277]
[170.34294128 224.81829834]
[176.82244873 238.34664917]
[183.50263977 251.77702332]
[190.38204956 265.10644531]
[197.26145935 278.43588257]
[198.10641479 263.45968628]
[204.54885864 249.91368103]
[215.63311768 239.80728149]
[229.71488953 234.63973999]
[244.70524597 235.17761230]
[258.38043213 241.34114075]
[268.71185303 252.21597290]
[274.16687012 266.18890381]
[273.93627930 281.18713379]
[268.05426025 294.98574829]
[257.39343262 305.53784180]
[243.53520203 311.27804565]
[228.53540039 311.35482788]
[214.61914062 305.75680542]
[203.85191345 295.31600952]
[207.82400513 309.78051758]
[211.79611206 324.24505615]
[215.76820374 338.70956421]
[230.66920471 336.78436279]
[245.69311523 336.95181274]
[260.54751587 339.20861816]
[274.94323730 343.51086426]
[288.60006714 349.77481079]
[301.25216675 357.87854004]
[312.65328979 367.66427612]
[322.58148193 378.94155884]
[330.84347534 391.49087524]
[337.27847290 405.06796265]
[341.76123047 419.40850830]
[344.20443726 434.23336792]
[344.56057739 449.25399780]
[342.82272339 464.17800903]
[339.02468872 478.71487427]
[333.24038696 492.58169556]
[325.58242798 505.50845337]
[316.19985962 517.24359131]
[305.27536011 527.55871582]
[293.02151489 536.25292969]
[279.67691040 543.15710449]
[265.50128174 548.13677979]
[250.77052307 551.09509277]
[235.77142334 551.97436523]
[220.79592896 550.75756836]
[206.13554382 547.46832275]
[192.07562256 542.17071533]
[178.88986206 534.96783447]
[166.83491516 525.99981689]
[156.14544678 515.44134521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 180]
[14 179]
[15 178]
[16 177]
[17 162]
[18 161]
[19 160]
[22 159]
[23 158]
[24 157]
[25 156]
[26 155]
[27 154]
[28 153]
[29 152]
[30 148]
[31 147]
[35 143]
[36 142]
[39 139]
[40 138]
[41 137]
[43 136]
[44 135]
[45 118]
[46 117]
[47 116]
[48 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
