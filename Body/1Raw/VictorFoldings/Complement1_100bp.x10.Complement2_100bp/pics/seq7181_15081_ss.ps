%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[105.51498413 577.01995850]
[95.97972107 565.40374756]
[88.28234100 552.49609375]
[82.59482574 538.58526611]
[79.04422760 523.98217773]
[77.70986938 509.01296997]
[78.62155914 494.01208496]
[81.75893402 479.31463623]
[87.05190277 465.24902344]
[94.38220978 452.12939453]
[103.58610535 440.24890137]
[114.45796204 429.87295532]
[126.75490570 421.23336792]
[140.20222473 414.52310181]
[154.49948120 409.89212036]
[152.05374146 395.09283447]
[149.60801697 380.29357910]
[147.16229248 365.49429321]
[144.71656799 350.69503784]
[142.27084351 335.89575195]
[130.05061340 327.45764160]
[127.35947418 312.48391724]
[136.29299927 299.72344971]
[126.58407593 288.42803955]
[131.96774292 273.55099487]
[129.52201843 258.75170898]
[127.07628632 243.95243835]
[124.19101715 229.23254395]
[120.86875153 214.60508728]
[117.43769073 200.00276184]
[113.89801788 185.42639160]
[110.35834503 170.85002136]
[97.57865143 158.82312012]
[102.90936279 141.19741821]
[99.15306091 126.67536926]
[95.39675903 112.15330505]
[91.20974731 97.74952698]
[86.59574127 83.47679138]
[81.98172760 69.20405579]
[77.36772156 54.93132401]
[72.75370789 40.65859222]
[68.13970184 26.38585663]
[63.52569199 12.11312389]
[57.75965881 -1.73436165]
[50.78120804 -15.01220798]
[43.70410156 -28.23773575]
[36.62699509 -41.46326447]
[21.76856232 -46.13923264]
[14.77977371 -59.65261459]
[19.32916451 -73.78904724]
[11.95847416 -86.85322571]
[-1.74154711 -94.76651001]
[-1.58926392 -109.66033173]
[-9.24986172 -122.55666351]
[-16.91045952 -135.45298767]
[-24.57105637 -148.34931946]
[-32.23165512 -161.24563599]
[-39.89225006 -174.14196777]
[-53.53102875 -167.86491394]
[-67.75122833 -163.04791260]
[-82.39705658 -159.74372864]
[-97.30802917 -157.98857117]
[-112.32078552 -157.80168152]
[-127.27082825 -159.18510437]
[-141.99436951 -162.12367249]
[-156.33007812 -166.58520508]
[-170.12088013 -172.52079773]
[-183.21569824 -179.86543274]
[-195.47103882 -188.53862000]
[-206.75262451 -198.44535828]
[-216.93685913 -209.47709656]
[-225.91215515 -221.51293945]
[-233.58016968 -234.42105103]
[-239.85690308 -248.05998230]
[-244.67356873 -262.28030396]
[-247.97738647 -276.92620850]
[-249.73217773 -291.83721924]
[-249.91870117 -306.84997559]
[-248.53491211 -321.79998779]
[-245.59599304 -336.52346802]
[-241.13410950 -350.85903931]
[-235.19818115 -364.64971924]
[-227.85324097 -377.74435425]
[-219.17973328 -389.99948120]
[-209.27273560 -401.28082275]
[-198.24075317 -411.46481323]
[-186.20468140 -420.43978882]
[-173.29638672 -428.10751343]
[-159.65730286 -434.38391113]
[-145.43687439 -439.20022583]
[-130.79089355 -442.50369263]
[-115.87982941 -444.25811768]
[-100.86706543 -444.44427490]
[-85.91708374 -443.06011963]
[-71.19369507 -440.12084961]
[-56.85820007 -435.65863037]
[-43.06768036 -429.72235107]
[-29.97322655 -422.37707520]
[-17.71830750 -413.70330811]
[-6.43719816 -403.79602051]
[3.74650192 -392.76379395]
[12.72121334 -380.72750854]
[20.38860512 -367.81903076]
[26.66466904 -354.17977905]
[31.48063850 -339.95922852]
[34.78375244 -325.31317139]
[36.53781509 -310.40206909]
[36.72360992 -295.38928223]
[35.33909988 -280.43936157]
[32.39945984 -265.71603394]
[27.93688965 -251.38064575]
[22.00028992 -237.59027100]
[14.65470314 -224.49600220]
[5.98061228 -212.24128723]
[-3.92694545 -200.96041870]
[-14.95941639 -190.77699280]
[-26.99592400 -181.80256653]
[-19.33532715 -168.90623474]
[-11.67472935 -156.00991821]
[-4.01413202 -143.11358643]
[3.64646554 -130.21725464]
[11.30706310 -117.32093048]
[24.45914650 -110.33008575]
[24.85480118 -94.51382446]
[28.16301727 -93.29396820]
[31.04474449 -90.41114044]
[32.72481537 -86.08325195]
[32.55469131 -80.86614990]
[46.83999252 -76.80834198]
[54.20558548 -63.49659348]
[49.85252380 -48.54036713]
[56.92963028 -35.31484222]
[64.00673676 -22.08931351]
[69.93419647 -17.67490196]
[71.08908844 -8.61377430]
[72.92353058 -23.50117874]
[81.39035034 -35.88314056]
[94.59803009 -42.99350357]
[109.59593964 -43.24378586]
[123.03351593 -36.57808304]
[131.90876770 -24.48552132]
[134.23892212 -9.66761684]
[129.50344849 4.56527662]
[118.76024628 15.03349304]
[104.40937042 19.39840508]
[89.65685272 16.68488312]
[77.79842377 7.49911451]
[82.41243744 21.77184868]
[87.02644348 36.04458237]
[91.64045715 50.31731415]
[96.25446320 64.59004974]
[100.86846924 78.86278534]
[105.48248291 93.13551331]
[108.06870270 94.74826813]
[110.12527466 97.33767700]
[111.28931427 100.70938873]
[111.27484894 104.53771210]
[109.91881561 108.39700317]
[113.67511749 122.91906738]
[117.43141937 137.44113159]
[128.12869263 144.64744568]
[130.95835876 156.82023621]
[124.93472290 167.31034851]
[128.47439575 181.88671875]
[132.01406860 196.46308899]
[137.08018494 204.06390381]
[135.49621582 211.28282166]
[138.81848145 225.91029358]
[141.88005066 228.98936462]
[143.62687683 232.52674866]
[144.07633972 236.05285645]
[143.39649963 239.15196228]
[141.87556458 241.50671387]
[144.32128906 256.30596924]
[146.76701355 271.10525513]
[156.65086365 283.45919800]
[151.09226990 297.27770996]
[163.65628052 306.48550415]
[165.92576599 321.52893066]
[157.07011414 333.45001221]
[159.51583862 348.24929810]
[161.96156311 363.04855347]
[164.40728760 377.84783936]
[166.85301208 392.64712524]
[169.29875183 407.44638062]
[184.32577515 407.23123169]
[199.21699524 409.25827026]
[213.63977051 413.48217773]
[227.27186584 419.80859375]
[239.80873108 428.09622192]
[250.97030640 438.15985107]
[260.50723267 449.77471924]
[268.20645142 462.68127441]
[273.89593506 476.59124756]
[277.44863892 491.19387817]
[278.78512573 506.16287231]
[277.87554932 521.16387939]
[274.74029541 535.86175537]
[269.44931030 549.92816162]
[262.12088013 563.04882812]
[252.91867065 574.93060303]
[242.04829407 585.30810547]
[229.75257874 593.94946289]
[216.30622864 600.66162109]
[202.00962830 605.29467773]
[187.18217468 607.74505615]
[172.15512085 607.95806885]
[157.26417542 605.92889404]
[142.84201050 601.70294189]
[129.21081543 595.37457275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 185]
[16 184]
[17 183]
[18 182]
[19 181]
[20 180]
[23 177]
[25 175]
[26 174]
[27 173]
[28 168]
[29 167]
[30 165]
[31 164]
[32 163]
[34 160]
[35 159]
[36 158]
[37 153]
[38 152]
[39 151]
[40 150]
[41 149]
[42 148]
[43 147]
[44 135]
[45 133]
[46 132]
[47 131]
[50 128]
[51 124]
[53 122]
[54 121]
[55 120]
[56 119]
[57 118]
[58 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
