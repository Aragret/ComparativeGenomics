%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[130.74740601 582.54504395]
[132.79067993 567.60266113]
[138.48654175 553.63812256]
[147.47695923 541.52929688]
[159.19677734 532.03741455]
[172.90928650 525.75903320]
[170.24349976 510.99780273]
[167.57769775 496.23657227]
[164.91191101 481.47537231]
[162.24610901 466.71414185]
[152.37008667 455.56454468]
[157.53166199 440.60900879]
[154.86585999 425.84777832]
[152.20007324 411.08654785]
[136.81265259 410.88522339]
[121.75373077 407.69384766]
[107.59889221 401.63250732]
[94.88954163 392.93109131]
[84.11215210 381.92050171]
[75.67969513 369.02001953]
[69.91578674 354.72146606]
[67.04225159 339.57028198]
[67.17064667 324.14492798]
[70.29786682 309.03460693]
[76.30622864 294.81686401]
[84.96789551 282.03549194]
[95.95349884 271.17968750]
[108.84468842 262.66546631]
[123.15004730 256.81948853]
[113.10912323 245.81817627]
[118.04745483 230.78742981]
[115.16217804 216.06753540]
[112.27690887 201.34764099]
[97.81890869 197.68272400]
[86.33867645 188.06431580]
[80.14765930 174.35913086]
[80.52262878 159.26344299]
[87.44274139 145.77275085]
[99.58311462 136.58728027]
[96.69783783 121.86738586]
[93.81256866 107.14749908]
[90.23486328 103.31161499]
[89.06100464 97.74426270]
[91.06739044 91.94673157]
[88.62166595 77.14746094]
[86.17593384 62.34819412]
[83.73020935 47.54892349]
[79.24345398 39.59236145]
[81.35994720 32.51124573]
[79.13483429 17.67720032]
[76.90971375 2.84315634]
[67.02019501 -5.43695211]
[65.47228241 -17.83806992]
[72.55456543 -27.64458656]
[70.55055237 -42.51011276]
[68.54653931 -57.37564087]
[64.81441498 -62.83300018]
[64.45287323 -68.50453186]
[66.71099854 -72.71285248]
[65.15047455 -87.63145447]
[61.14525604 -95.84096527]
[63.67947388 -102.78355408]
[62.34123993 -117.72373962]
[61.00300598 -132.66392517]
[59.66477203 -147.60411072]
[44.65645981 -147.50378418]
[29.69112396 -148.64320374]
[14.87099552 -151.01455688]
[0.29731211 -154.60165405]
[-13.93037128 -159.38000488]
[-27.71486282 -165.31694031]
[-40.96200180 -172.37193298]
[-53.58129120 -180.49678040]
[-65.48652649 -189.63597107]
[-76.59638977 -199.72708130]
[-86.83498383 -210.70117188]
[-96.13236237 -222.48329163]
[-104.42502594 -234.99293518]
[-111.65631104 -248.14466858]
[-117.77683258 -261.84863281]
[-122.74477386 -276.01123047]
[-126.52619934 -290.53570557]
[-129.09527588 -305.32284546]
[-130.43446350 -320.27163696]
[-130.53460693 -335.27993774]
[-129.39501953 -350.24526978]
[-127.02348328 -365.06536865]
[-123.43620300 -379.63900757]
[-118.65769196 -393.86663818]
[-112.72058105 -407.65106201]
[-105.66543579 -420.89810181]
[-97.54044342 -433.51730347]
[-88.40110779 -445.42242432]
[-78.30986786 -456.53216553]
[-67.33565521 -466.77062988]
[-55.55342484 -476.06787109]
[-43.04367828 -484.36038208]
[-29.89186096 -491.59152222]
[-16.18781853 -497.71185303]
[-2.02516389 -502.67962646]
[12.49935532 -506.46090698]
[27.28652191 -509.02978516]
[42.23532104 -510.36880493]
[57.24363708 -510.46875000]
[72.20894623 -509.32901001]
[87.02901459 -506.95727539]
[101.60261536 -503.36984253]
[115.83018494 -498.59115601]
[129.61453247 -492.65386963]
[142.86149597 -485.59857178]
[155.48060608 -477.47344971]
[167.38562012 -468.33395386]
[178.49523926 -458.24258423]
[188.73356628 -447.26824951]
[198.03067017 -435.48590088]
[206.32302856 -422.97607422]
[213.55401611 -409.82415771]
[219.67419434 -396.12005615]
[224.64179993 -381.95733643]
[228.42288208 -367.43276978]
[230.99160767 -352.64556885]
[232.33044434 -337.69674683]
[232.43022156 -322.68844604]
[231.29028320 -307.72314453]
[228.91839600 -292.90310669]
[225.33076477 -278.32955933]
[220.55191040 -264.10202026]
[214.61448669 -250.31774902]
[207.55902100 -237.07086182]
[199.43371582 -224.45187378]
[190.29411316 -212.54695129]
[180.20260620 -201.43745422]
[169.22813416 -191.19924927]
[157.44569397 -181.90229797]
[144.93574524 -173.61007690]
[131.78375244 -166.37925720]
[118.07956696 -160.25923157]
[103.91679382 -155.29179382]
[89.39218140 -151.51089478]
[74.60495758 -148.94233704]
[75.94319153 -134.00215149]
[77.28142548 -119.06197357]
[78.61965942 -104.12178802]
[80.06907654 -89.19197845]
[81.62960052 -74.27337646]
[83.41207123 -59.37965775]
[85.41608429 -44.51412582]
[87.42009735 -29.64859962]
[98.87922668 -16.35743141]
[91.74375916 0.61803919]
[93.96887970 15.45208263]
[96.19399261 30.28612709]
[98.52947998 45.10319519]
[100.97520447 59.90246582]
[103.42093658 74.70173645]
[105.86666107 89.50100708]
[108.53245544 104.26222229]
[111.41773224 118.98211670]
[114.30300140 133.70201111]
[129.01269531 137.62454224]
[140.51373291 147.50448608]
[146.55986023 161.34155273]
[146.00094604 176.36981201]
[139.00135803 189.61048889]
[126.99680328 198.46237183]
[129.88208008 213.18226624]
[132.76734924 227.90216064]
[143.01464844 239.95634460]
[137.86993408 253.93423462]
[152.50717163 253.87023926]
[166.90135193 256.50454712]
[180.55949402 261.74539185]
[193.01409912 269.41177368]
[203.83918762 279.23965454]
[212.66482544 290.89117432]
[219.18978882 303.96609497]
[223.19183350 318.01574707]
[224.53527832 332.55819702]
[223.17561340 347.09500122]
[219.16093445 361.12814331]
[212.63029480 374.17718506]
[203.80882263 385.79562378]
[193.00003052 395.58624268]
[180.57533264 403.21466064]
[166.96128845 408.42077637]
[169.62709045 423.18197632]
[172.29287720 437.94320679]
[182.35957336 450.14862061]
[177.00732422 464.04837036]
[179.67312622 478.80957031]
[182.33891296 493.57080078]
[185.00471497 508.33200073]
[187.67051697 523.09320068]
[202.71287537 524.17858887]
[217.01246643 528.97155762]
[229.67041016 537.17077637]
[239.89100647 548.26092529]
[247.03178406 561.54473877]
[250.64385986 576.18725586]
[250.50019836 591.26806641]
[246.60980225 605.83911133]
[239.21723938 618.98449707]
[228.78721619 629.87786865]
[215.97535706 637.83441162]
[201.58705139 642.35406494]
[186.52673340 643.15270996]
[171.74111938 640.18005371]
[158.15965271 633.62304688]
[146.63606262 623.89379883]
[137.89474487 611.60400391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 193]
[7 192]
[8 191]
[9 190]
[10 189]
[12 187]
[13 186]
[14 185]
[29 169]
[31 167]
[32 166]
[33 165]
[39 159]
[40 158]
[41 157]
[44 156]
[45 155]
[46 154]
[47 153]
[49 152]
[50 151]
[51 150]
[54 148]
[55 147]
[56 146]
[59 145]
[60 144]
[62 143]
[63 142]
[64 141]
[65 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
