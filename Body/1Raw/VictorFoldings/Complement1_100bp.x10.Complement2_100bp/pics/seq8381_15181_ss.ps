%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[86.58044434 587.98071289]
[71.60590363 588.96575928]
[56.59950256 588.84222412]
[41.64321136 587.61077881]
[26.81870651 585.27807617]
[12.20696259 581.85693359]
[-2.11221814 577.36602783]
[-16.06062889 571.82989502]
[-29.56208611 565.27868652]
[-42.54285049 557.74829102]
[-54.93202209 549.27978516]
[-66.66194153 539.91943359]
[-77.66853333 529.71832275]
[-87.89169312 518.73223877]
[-97.27557373 507.02114868]
[-105.76892853 494.64898682]
[-113.32537079 481.68338013]
[-119.90363312 468.19509888]
[-125.46778107 454.25781250]
[-129.98742676 439.94769287]
[-133.43788147 425.34283447]
[-135.80029297 410.52304077]
[-137.06178284 395.56924438]
[-137.21543884 380.56314087]
[-136.26043701 365.58663940]
[-134.20198059 350.72158813]
[-131.05131531 336.04916382]
[-126.82565308 321.64947510]
[-121.54807281 307.60116577]
[-115.24739838 293.98101807]
[-107.95803833 280.86337280]
[-99.71981049 268.31991577]
[-90.57770538 256.41909790]
[-80.58165741 245.22596741]
[-69.78626251 234.80163574]
[-58.25048065 225.20303345]
[-46.03731918 216.48260498]
[-33.21347809 208.68797302]
[-19.84900284 201.86170959]
[-6.01688290 196.04107666]
[8.20733356 191.25788879]
[22.74595833 187.53826904]
[37.51958466 184.90251160]
[52.44752502 183.36505127]
[67.44824982 182.93423462]
[82.43981934 183.61245728]
[84.22228241 168.71875000]
[86.00475311 153.82502747]
[87.78721619 138.93130493]
[89.56968689 124.03759003]
[91.35214996 109.14387512]
[92.80156708 94.21406555]
[93.91721344 79.25561523]
[95.03286743 64.29715729]
[96.14851379 49.33870697]
[97.26416016 34.38025284]
[90.57469940 20.04283142]
[99.23718262 7.92628479]
[100.35282898 -7.03216839]
[101.46848297 -21.99062157]
[102.58412933 -36.94907379]
[103.69977570 -51.90752792]
[88.84503174 -54.03110123]
[74.16754150 -57.15267181]
[59.73427582 -61.25799942]
[45.61108780 -66.32835388]
[31.86241722 -72.34059143]
[18.55100060 -79.26728821]
[5.73757553 -87.07684326]
[-6.51939487 -95.73360443]
[-18.16398430 -105.19808960]
[-29.14305878 -115.42711639]
[-39.40652466 -126.37399292]
[-48.90755081 -137.98878479]
[-57.60278702 -150.21850586]
[-65.45256042 -163.00732422]
[-72.42104340 -176.29690552]
[-78.47645569 -190.02662659]
[-83.59115601 -204.13380432]
[-87.74181366 -218.55410767]
[-90.90948486 -233.22172546]
[-93.07971954 -248.06971741]
[-94.24261475 -263.03036499]
[-94.39286804 -278.03536987]
[-93.52978516 -293.01629639]
[-91.65731049 -307.90475464]
[-88.78398132 -322.63287354]
[-84.92292023 -337.13339233]
[-80.09172821 -351.34017944]
[-74.31246948 -365.18838501]
[-67.61149597 -378.61483765]
[-60.01938629 -391.55828857]
[-51.57078934 -403.95965576]
[-42.30424881 -415.76239014]
[-32.26204681 -426.91259766]
[-21.49000359 -437.35940552]
[-10.03727150 -447.05517578]
[2.04389381 -455.95565796]
[14.69836807 -464.02020264]
[27.86841202 -471.21206665]
[41.49393082 -477.49841309]
[55.51275635 -482.85058594]
[69.86092377 -487.24411011]
[84.47296143 -490.65893555]
[99.28220367 -493.07955933]
[114.22107697 -494.49487305]
[129.22140503 -494.89843750]
[144.21476746 -494.28839111]
[159.13273621 -492.66754150]
[173.90725708 -490.04327393]
[188.47088623 -486.42758179]
[202.75721741 -481.83694458]
[216.70101929 -476.29229736]
[230.23870850 -469.81896973]
[243.30848694 -462.44647217]
[255.85073853 -454.20843506]
[267.80822754 -445.14248657]
[279.12637329 -435.28997803]
[289.75357056 -424.69583130]
[299.64132690 -413.40841675]
[308.74447632 -401.47924805]
[317.02154541 -388.96273804]
[324.43475342 -375.91598511]
[330.95022583 -362.39852905]
[336.53829956 -348.47207642]
[341.17343140 -334.20013428]
[344.83450317 -319.64782715]
[347.50479126 -304.88156128]
[349.17211914 -289.96871948]
[349.82885742 -274.97732544]
[349.47204590 -259.97579956]
[348.10330200 -245.03260803]
[345.72885132 -230.21589661]
[342.35952759 -215.59327698]
[338.01074219 -201.23149109]
[332.70230103 -187.19606018]
[326.45843506 -173.55101013]
[319.30764771 -160.35862732]
[311.28256226 -147.67907715]
[302.41976929 -135.57025146]
[292.75973511 -124.08735657]
[282.34655762 -113.28281403]
[271.22769165 -103.20591736]
[259.45388794 -93.90264130]
[247.07890320 -85.41544342]
[234.15917969 -77.78304291]
[220.75366211 -71.04026031]
[206.92352295 -65.21787262]
[192.73185730 -60.34244156]
[178.24343872 -56.43621063]
[163.52436829 -53.51700592]
[148.64179993 -51.59814835]
[133.66363525 -50.68838882]
[118.65823364 -50.79188156]
[117.54257965 -35.83342743]
[116.42693329 -20.87497330]
[115.31128693 -5.91651964]
[114.19563293 9.04193401]
[120.96489716 22.30942726]
[112.22261810 35.49590302]
[111.10696411 50.45435715]
[109.99131775 65.41281128]
[108.87567139 80.37126160]
[107.76001740 95.32971954]
[109.83705139 98.57907104]
[110.47172546 102.72817993]
[109.29432678 107.11232758]
[106.24586487 110.92634583]
[104.46340179 125.82006073]
[102.68093109 140.71377563]
[100.89846802 155.60749817]
[99.11600494 170.50120544]
[97.33353424 185.39492798]
[112.06176758 188.27354431]
[126.53718567 192.23202515]
[140.68072510 197.24874878]
[154.41514587 203.29631042]
[167.66542053 210.34169006]
[180.35919189 218.34638977]
[192.42713928 227.26670837]
[203.80332947 237.05392456]
[214.42562866 247.65457153]
[224.23603821 259.01077271]
[233.18098450 271.06045532]
[241.21157837 283.73788452]
[248.28398132 296.97375488]
[254.35957336 310.69580078]
[259.40515137 324.82907104]
[263.39315796 339.29635620]
[266.30184937 354.01867676]
[268.11529541 368.91561890]
[268.82360840 383.90579224]
[268.42291260 398.90734863]
[266.91540527 413.83834839]
[264.30932617 428.61724854]
[260.61886597 443.16329956]
[255.86425781 457.39709473]
[250.07139587 471.24087524]
[243.27197266 484.61901855]
[235.50308228 497.45846558]
[226.80718994 509.68911743]
[217.23176575 521.24414062]
[206.82913208 532.06042480]
[195.65608215 542.07891846]
[183.77365112 551.24493408]
[171.24673462 559.50830078]
[158.14375305 566.82397461]
[144.53627014 573.15197754]
[130.49859619 578.45776367]
[116.10742950 582.71228027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 173]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[58 158]
[59 157]
[60 156]
[61 155]
[62 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
