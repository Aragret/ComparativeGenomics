%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[140.10821533 783.60186768]
[125.67770386 779.49548340]
[111.47978210 774.64569092]
[97.55271149 769.06542969]
[83.93405914 762.76989746]
[70.66052246 755.77593994]
[57.76789093 748.10247803]
[45.29092026 739.77020264]
[33.26324463 730.80151367]
[21.71729279 721.22064209]
[10.68418694 711.05346680]
[0.19367242 700.32727051]
[-9.72597122 689.07104492]
[-19.04800224 677.31512451]
[-27.74728966 665.09118652]
[-35.80038071 652.43218994]
[-43.18556595 639.37231445]
[-49.88293839 625.94671631]
[-55.87443924 612.19158936]
[-61.14392090 598.14398193]
[-65.67717743 583.84185791]
[-69.46198273 569.32366943]
[-72.48813629 554.62860107]
[-74.74748230 539.79632568]
[-76.23392487 524.86669922]
[-76.94345856 509.88012695]
[-76.87417603 494.87689209]
[-76.02626038 479.89746094]
[-74.40200043 464.98223877]
[-72.00576782 450.17144775]
[-68.84402466 435.50497437]
[-64.92530060 421.02236938]
[-60.26014709 406.76269531]
[-54.86115646 392.76437378]
[-48.74287415 379.06518555]
[-41.92179489 365.70199585]
[-34.41630936 352.71084595]
[-26.24664688 340.12680054]
[-17.43483734 327.98373413]
[-8.00463200 316.31439209]
[2.01854563 305.15026855]
[12.60767460 294.52142334]
[23.73420906 284.45654297]
[35.36815262 274.98269653]
[47.47814560 266.12551880]
[60.03153610 257.90881348]
[72.99448395 250.35473633]
[86.33204651 243.48368835]
[100.00827026 237.31416321]
[113.98627472 231.86280823]
[128.22839355 227.14431763]
[124.25629425 212.67979431]
[120.28419495 198.21527100]
[116.31209564 183.75074768]
[103.17998505 172.10968018]
[107.98354340 154.33308411]
[103.79653168 139.92930603]
[99.60951996 125.52552795]
[95.42251587 111.12174225]
[91.02151489 96.78189850]
[86.40750885 82.50916290]
[71.29284668 82.44113159]
[56.95866394 77.71105194]
[44.80479813 68.79410553]
[36.01407623 56.57370377]
[31.43717957 42.25397491]
[31.51035690 27.24112892]
[36.21385574 13.00535583]
[45.07509613 0.93686396]
[57.21613312 -7.78988981]
[52.60212326 -22.06262398]
[47.98811340 -36.33535767]
[43.37410355 -50.60808945]
[38.76009750 -64.88082123]
[36.49124908 -50.05340576]
[30.51079178 -36.29716492]
[21.21539307 -24.52450371]
[9.22158051 -15.51626015]
[-4.67513990 -9.86991787]
[-19.55304718 -7.95998049]
[-34.42534637 -9.91312504]
[-48.30560684 -15.59980869]
[-60.27320099 -24.64285278]
[-69.53436279 -36.44246292]
[-75.47483826 -50.21601868]
[-77.70060730 -65.04996490]
[-76.06404877 -79.96041870]
[-70.67371368 -93.95842743]
[-61.88710785 -106.11554718]
[-50.28703308 -115.62545013]
[-36.64286804 -121.85736847]
[-21.85958862 -124.39796448]
[-6.91771364 -123.07873535]
[7.19171572 -117.98716736]
[19.53287125 -109.46098328]
[29.28720856 -98.06568146]
[35.80937576 -84.55220032]
[36.03270340 -99.55054474]
[36.25603104 -114.54888153]
[22.41980362 -120.91117096]
[12.37243557 -132.35539246]
[7.85469389 -146.89877319]
[9.64930344 -162.02157593]
[17.44533920 -175.10369873]
[29.89208794 -183.87855530]
[44.83307648 -186.82588196]
[59.67969131 -183.43501282]
[71.85966492 -174.29345703]
[79.26274109 -160.98501587]
[80.60629272 -145.81549072]
[75.65753937 -131.41307068]
[65.27388763 -120.27306366]
[51.25436783 -114.32555389]
[51.03104019 -99.32721710]
[50.80771255 -84.32887268]
[53.03282928 -69.49483490]
[57.64683914 -55.22209930]
[62.26084900 -40.94936752]
[66.87485504 -26.67663193]
[71.48886871 -12.40389919]
[86.44078827 -12.43560505]
[100.68973541 -7.83804655]
[112.83641052 0.95049816]
[121.68386078 13.07953453]
[126.35546875 27.36864471]
[126.38177490 42.42235947]
[121.74760437 56.76644897]
[112.89482880 68.99227905]
[100.68023682 77.89515686]
[105.29425049 92.16788483]
[109.30242157 95.55144501]
[111.12953186 100.93985748]
[109.82629395 106.93473053]
[114.01330566 121.33851624]
[118.20031738 135.74229431]
[122.38732910 150.14607239]
[133.29441833 157.03071594]
[136.48526001 169.11384583]
[130.77662659 179.77865601]
[134.74871826 194.24317932]
[138.72080994 208.70770264]
[142.69291687 223.17222595]
[157.34741211 219.95542908]
[172.14910889 217.50360107]
[187.05812073 215.82334900]
[202.03425598 214.91918945]
[217.03712463 214.79356384]
[232.02629089 215.44682312]
[246.96134949 216.87719727]
[261.80203247 219.08084106]
[276.50833130 222.05178833]
[291.04061890 225.78205872]
[305.35968018 230.26156616]
[319.42694092 235.47827148]
[333.20449829 241.41807556]
[346.65515137 248.06498718]
[359.74270630 255.40107727]
[372.43182373 263.40658569]
[384.68832397 272.05990601]
[396.47915649 281.33773804]
[407.77255249 291.21502686]
[418.53805542 301.66519165]
[428.74664307 312.66006470]
[438.37078857 324.16995239]
[447.38455200 336.16384888]
[455.76364136 348.60946655]
[463.48547363 361.47317505]
[470.52920532 374.72036743]
[476.87585449 388.31527710]
[482.50833130 402.22128296]
[487.41143799 416.40090942]
[491.57196045 430.81591797]
[494.97866821 445.42742920]
[497.62237549 460.19604492]
[499.49600220 475.08200073]
[500.59445190 490.04513550]
[500.91476440 505.04510498]
[500.45611572 520.04150391]
[499.21969604 534.99383545]
[497.20886230 549.86187744]
[494.42901611 564.60552979]
[490.88766479 579.18499756]
[486.59436035 593.56097412]
[481.56069946 607.69476318]
[475.80020142 621.54821777]
[469.32839966 635.08404541]
[462.16278076 648.26568604]
[454.32263184 661.05767822]
[445.82913208 673.42541504]
[436.70510864 685.33569336]
[426.97518921 696.75634766]
[416.66564941 707.65655518]
[405.80419922 718.00695801]
[394.42019653 727.77966309]
[382.54428101 736.94836426]
[370.20846558 745.48828125]
[357.44604492 753.37640381]
[344.29141235 760.59143066]
[330.77999878 767.11401367]
[316.94824219 772.92651367]
[302.83346558 778.01318359]
[288.47369385 782.36047363]
[273.90762329 785.95654297]
[259.17453003 788.79168701]
[244.31416321 790.85833740]
[229.36654663 792.15093994]
[214.37197876 792.66589355]
[199.37091064 792.40191650]
[184.40376282 791.35961914]
[169.51087952 789.54193115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 142]
[52 141]
[53 140]
[54 139]
[56 136]
[57 135]
[58 134]
[59 133]
[60 130]
[61 129]
[70 120]
[71 119]
[72 118]
[73 117]
[74 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
