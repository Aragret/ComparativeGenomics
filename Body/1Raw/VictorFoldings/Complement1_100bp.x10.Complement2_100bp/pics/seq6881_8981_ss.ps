%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[73.94822693 559.43261719]
[65.52136230 571.96911621]
[53.90300751 581.62261963]
[40.03502274 587.61059570]
[25.04161453 589.44757080]
[10.13823795 586.98461914]
[-3.46695995 580.42144775]
[-14.67106628 570.29010010]
[-22.56581497 557.41180420]
[-26.51121330 542.83068848]
[-26.18742561 527.72863770]
[-21.62070084 513.32995605]
[-13.18124199 500.80187988]
[-1.55319786 491.16003418]
[12.32079697 485.18600464]
[27.31604195 483.36410522]
[29.76176834 468.56484985]
[32.20749664 453.76556396]
[34.65322495 438.96630859]
[27.86605072 428.95327759]
[29.78250885 416.60372925]
[39.91417313 408.62173462]
[42.57997131 393.86053467]
[45.24576569 379.09930420]
[47.91156006 364.33810425]
[41.09638596 348.16650391]
[53.10756302 334.20895386]
[55.55329132 319.40966797]
[57.99901962 304.61041260]
[60.44474792 289.81112671]
[51.58908844 277.89001465]
[53.85858154 262.84661865]
[66.42258453 253.63882446]
[68.86830902 238.83955383]
[71.31404114 224.04028320]
[73.75976562 209.24101257]
[76.09525299 194.42393494]
[70.33153534 180.68971252]
[80.03036499 168.18998718]
[82.25547791 153.35594177]
[80.46499634 150.31843567]
[80.05680084 146.26277161]
[81.49340820 141.84808350]
[84.92546844 137.91513062]
[87.81073761 123.19524384]
[90.69601440 108.47534943]
[93.25184631 93.69470215]
[95.47695923 78.86065674]
[97.70207977 64.02661133]
[99.92719269 49.19256592]
[90.26586151 60.66682816]
[76.80858612 67.29266357]
[61.82314682 67.95349884]
[47.83486176 62.53797531]
[37.20100021 51.95870209]
[31.71355629 37.99847412]
[32.29725647 23.00983620]
[38.85374069 9.51863480]
[50.27812195 -0.20162520]
[64.64519501 -4.51290941]
[79.53385925 -2.68869066]
[92.43510437 4.96361876]
[101.17485046 17.15447044]
[104.28029633 31.83114815]
[101.62628174 16.23413658]
[113.18806458 6.84401178]
[118.22498322 -7.28501797]
[123.26189423 -21.41404724]
[119.52493286 -39.44503784]
[133.32666016 -50.28382492]
[138.15264893 -64.48628235]
[142.97865295 -78.68873596]
[147.80464172 -92.89118958]
[152.63064575 -107.09365082]
[157.45664978 -121.29610443]
[162.28263855 -135.49856567]
[167.10864258 -149.70101929]
[171.93463135 -163.90347290]
[176.76063538 -178.10592651]
[181.58662415 -192.30838013]
[167.18293762 -188.12109375]
[154.84115601 -196.64639282]
[153.65921021 -211.59974670]
[164.50837708 -221.95811462]
[179.39105225 -220.08567810]
[187.33609009 -207.36436462]
[193.20506287 -221.16854858]
[199.07402039 -234.97271729]
[198.65240479 -241.57073975]
[201.23806763 -246.63151550]
[205.32870483 -249.09638977]
[211.60607910 -262.71969604]
[217.88343811 -276.34301758]
[223.85499573 -290.10311890]
[229.51777649 -303.99316406]
[235.18057251 -317.88317871]
[240.84335327 -331.77319336]
[246.50614929 -345.66323853]
[252.16893005 -359.55325317]
[239.30758667 -367.33349609]
[227.82176208 -377.03002930]
[217.99430847 -388.40402222]
[210.06724548 -401.17538452]
[204.23576355 -415.02963257]
[200.64349365 -429.62561035]
[199.37887573 -444.60382080]
[200.47306824 -459.59545898]
[203.89910889 -474.23135376]
[209.57264709 -488.15103149]
[217.35395813 -501.01171875]
[227.05142212 -512.49676514]
[238.42622375 -522.32324219]
[251.19824219 -530.24926758]
[265.05297852 -536.07958984]
[279.64923096 -539.67065430]
[294.62756348 -540.93408203]
[309.61911011 -539.83862305]
[324.25469971 -536.41137695]
[338.17391968 -530.73669434]
[351.03396606 -522.95434570]
[362.51818848 -513.25592041]
[372.34378052 -501.88031006]
[380.26873779 -489.10760498]
[386.09793091 -475.25241089]
[389.68780518 -460.65585327]
[390.94995117 -445.67739868]
[389.85327148 -430.68594360]
[386.42480469 -416.05065918]
[380.74899292 -402.13189697]
[372.96554565 -389.27249146]
[363.26620483 -377.78906250]
[351.88977051 -367.96441650]
[339.11642456 -360.04052734]
[325.26074219 -354.21246338]
[310.66387939 -350.62380981]
[295.68533325 -349.36291504]
[280.69396973 -350.46081543]
[266.05895996 -353.89047241]
[260.39617920 -340.00045776]
[254.73338318 -326.11041260]
[249.07060242 -312.22039795]
[243.40780640 -298.33035278]
[237.74502563 -284.44033813]
[238.76815796 -281.06610107]
[238.20777893 -277.02862549]
[235.76997375 -273.07763672]
[231.50674438 -270.06567383]
[225.22938538 -256.44235229]
[218.95202637 -242.81903076]
[212.87818909 -229.10375977]
[207.00923157 -215.29959106]
[201.14027405 -201.49540710]
[195.78909302 -187.48239136]
[190.96308899 -173.27992249]
[186.13708496 -159.07746887]
[181.31109619 -144.87501526]
[176.48509216 -130.67256165]
[171.65910339 -116.47010803]
[166.83309937 -102.26765442]
[162.00709534 -88.06519318]
[157.18110657 -73.86273956]
[152.35510254 -59.66028595]
[147.52911377 -45.45782852]
[152.59284973 -34.47214890]
[148.68846130 -22.60035324]
[137.39093018 -16.37713051]
[132.35400391 -2.24810147]
[127.31709290 11.88092804]
[130.33139038 26.46733665]
[118.40932465 36.86806488]
[114.76123810 51.41768646]
[112.53612518 66.25173187]
[110.31100464 81.08576965]
[108.08588409 95.91981506]
[109.91548920 99.31465912]
[110.23980713 103.49947357]
[108.73959351 107.78390503]
[105.41590118 111.36062622]
[102.53063202 126.08051300]
[99.64535522 140.80041504]
[97.08952332 155.58105469]
[94.86441040 170.41510010]
[100.46897125 185.21035767]
[90.92929840 196.64906311]
[92.75106812 205.59997559]
[88.55903625 211.68673706]
[86.11331177 226.48600769]
[83.66757965 241.28527832]
[81.22185516 256.08453369]
[90.15538025 268.84503174]
[87.46424103 283.81875610]
[75.24401855 292.25686646]
[72.79828644 307.05612183]
[70.35256195 321.85540771]
[67.90683746 336.65466309]
[74.76989746 347.57534790]
[72.42817688 359.85134888]
[62.67277908 367.00387573]
[60.00698090 381.76510620]
[57.34118652 396.52630615]
[54.67539215 411.28753662]
[61.30227661 428.46792603]
[49.45249557 441.41201782]
[47.00676727 456.21130371]
[44.56103897 471.01055908]
[42.11531067 485.80984497]
[55.72709656 492.35934448]
[66.94137573 502.47946167]
[74.84906006 515.34979248]
[78.80910492 529.92700195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 206]
[17 205]
[18 204]
[19 203]
[22 201]
[23 200]
[24 199]
[25 198]
[27 195]
[28 194]
[29 193]
[30 192]
[33 189]
[34 188]
[35 187]
[36 186]
[37 184]
[39 182]
[40 181]
[44 180]
[45 179]
[46 178]
[47 174]
[48 173]
[49 172]
[50 171]
[64 170]
[66 168]
[67 167]
[68 166]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[75 158]
[76 157]
[77 156]
[78 155]
[79 154]
[80 153]
[86 152]
[87 151]
[88 150]
[91 149]
[92 148]
[93 147]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
