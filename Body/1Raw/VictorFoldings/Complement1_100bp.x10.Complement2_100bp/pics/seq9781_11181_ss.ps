%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[139.18084717 929.01519775]
[124.26069641 927.45178223]
[109.41136932 925.31799316]
[94.65467072 922.61706543]
[80.01226044 919.35284424]
[65.50561523 915.53021240]
[51.15603638 911.15466309]
[36.98458099 906.23278809]
[23.01204872 900.77166748]
[9.25894547 894.77935791]
[-4.25454473 888.26470947]
[-17.50858879 881.23718262]
[-30.48373413 873.70721436]
[-43.16093826 865.68572998]
[-55.52159500 857.18457031]
[-67.54756165 848.21624756]
[-79.22119141 838.79382324]
[-90.52535248 828.93121338]
[-101.44345856 818.64282227]
[-111.95947266 807.94384766]
[-122.05796814 796.84985352]
[-131.72412109 785.37725830]
[-140.94375610 773.54284668]
[-149.70332336 761.36395264]
[-157.98999023 748.85852051]
[-165.79158020 736.04479980]
[-173.09663391 722.94171143]
[-179.89445496 709.56842041]
[-186.17504883 695.94451904]
[-191.92919922 682.09008789]
[-197.14846802 668.02545166]
[-201.82519531 653.77117920]
[-205.95249939 639.34826660]
[-209.52435303 624.77783203]
[-212.53549194 610.08129883]
[-214.98150635 595.28021240]
[-216.85879517 580.39630127]
[-218.16461182 565.45141602]
[-218.89704895 550.46746826]
[-219.05500793 535.46643066]
[-218.63829041 520.47039795]
[-217.64747620 505.50128174]
[-216.08403015 490.58111572]
[-213.95024109 475.73181152]
[-211.24926758 460.97509766]
[-207.98503113 446.33270264]
[-204.16235352 431.82604980]
[-199.78684998 417.47647095]
[-194.86491394 403.30502319]
[-189.40379333 389.33251953]
[-183.41148376 375.57940674]
[-176.89680481 362.06591797]
[-169.86929321 348.81188965]
[-162.33926392 335.83676147]
[-154.31779480 323.15957642]
[-145.81661987 310.79891968]
[-136.84825134 298.77294922]
[-127.42583466 287.09933472]
[-117.56320190 275.79519653]
[-107.27481842 264.87710571]
[-96.57579803 254.36109924]
[-85.48183441 244.26261902]
[-74.00921631 234.59646606]
[-62.17477417 225.37686157]
[-49.99588013 216.61729431]
[-37.49040604 208.33064270]
[-24.67670822 200.52908325]
[-11.57359123 193.22402954]
[1.79971397 186.42622375]
[15.42358017 180.14564514]
[29.27801132 174.39151001]
[43.34267426 169.17225647]
[57.59693146 164.49555969]
[72.01985931 160.36825562]
[86.59028625 156.79643250]
[101.28683472 153.78530884]
[98.84111023 138.98603821]
[96.39537811 124.18676758]
[93.94965363 109.38749695]
[91.39382172 94.60684204]
[88.72802734 79.84562683]
[86.06222534 65.08441162]
[83.39643097 50.32319260]
[70.69673157 41.30347061]
[68.20351410 26.29552078]
[76.88070679 14.24388313]
[74.21491241 -0.51733381]
[71.54911804 -15.27855110]
[56.51185226 -16.52077866]
[42.30881119 -21.61352158]
[29.90837860 -30.20954895]
[20.15603638 -41.72277069]
[13.71671772 -55.36819077]
[11.02946377 -70.21545410]
[12.27749634 -85.25223541]
[17.37572289 -99.45330811]
[25.97653770 -111.85041809]
[37.49352264 -121.59831238]
[51.14142990 -128.03236389]
[65.98972321 -130.71388245]
[81.02602386 -129.46005249]
[95.22512817 -124.35633850]
[107.61891937 -115.75074005]
[117.36236572 -104.22998810]
[123.79114532 -90.57959747]
[126.46693420 -75.73027039]
[125.20729065 -60.69445419]
[120.09809875 -46.49732208]
[111.48771667 -34.10685349]
[99.96320343 -24.36785507]
[86.31033325 -17.94434738]
[88.97612762 -3.18312931]
[91.64192200 11.57808781]
[103.98642731 19.83332253]
[106.90019989 34.76531982]
[98.15765381 47.65739441]
[100.82344818 62.41861343]
[103.48924255 77.17983246]
[106.15503693 91.94104767]
[110.57276917 98.68316650]
[108.74892426 106.94177246]
[111.19464874 121.74104309]
[113.64038086 136.54031372]
[116.08610535 151.33958435]
[130.97001648 149.46223450]
[145.91491699 148.15635681]
[160.89888000 147.42387390]
[175.89988708 147.26585388]
[190.89595032 147.68254089]
[205.86503601 148.67329407]
[220.78520203 150.23669434]
[235.63452148 152.37042236]
[250.39123535 155.07135010]
[265.03366089 158.33552551]
[279.54031372 162.15814209]
[293.88989258 166.53361511]
[308.06137085 171.45549011]
[322.03390503 176.91656494]
[335.78701782 182.90881348]
[349.30053711 189.42346191]
[362.55459595 196.45092773]
[375.52975464 203.98089600]
[388.20697021 212.00233459]
[400.56765747 220.50344849]
[412.59365845 229.47178650]
[424.26730347 238.89416504]
[435.57147217 248.75675964]
[446.48959351 259.04510498]
[457.00564575 269.74407959]
[467.10415649 280.83801270]
[476.77035522 292.31060791]
[485.99002075 304.14498901]
[494.74960327 316.32388306]
[503.03631592 328.82931519]
[510.83792114 341.64297485]
[518.14300537 354.74606323]
[524.94085693 368.11935425]
[531.22149658 381.74319458]
[536.97564697 395.59759521]
[542.19494629 409.66226196]
[546.87170410 423.91650391]
[550.99908447 438.33941650]
[554.57098389 452.90982056]
[557.58215332 467.60635376]
[560.02819824 482.40744019]
[561.90551758 497.29135132]
[563.21136475 512.23626709]
[563.94384766 527.22021484]
[564.10180664 542.22125244]
[563.68511963 557.21728516]
[562.69433594 572.18640137]
[561.13092041 587.10656738]
[558.99719238 601.95587158]
[556.29626465 616.71258545]
[553.03204346 631.35498047]
[549.20941162 645.86163330]
[544.83392334 660.21124268]
[539.91204834 674.38269043]
[534.45092773 688.35522461]
[528.45867920 702.10833740]
[521.94403076 715.62182617]
[514.91656494 728.87585449]
[507.38656616 741.85101318]
[499.36511230 754.52825928]
[490.86398315 766.88891602]
[481.89562988 778.91491699]
[472.47323608 790.58856201]
[462.61062622 801.89270020]
[452.32226562 812.81079102]
[441.62329102 823.32684326]
[430.52932739 833.42535400]
[419.05673218 843.09155273]
[407.22232056 852.31115723]
[395.04345703 861.07073975]
[382.53799438 869.35742188]
[369.72430420 877.15905762]
[356.62121582 884.46411133]
[343.24792480 891.26196289]
[329.62408447 897.54254150]
[315.76965332 903.29675293]
[301.70501709 908.51599121]
[287.45077515 913.19274902]
[273.02783203 917.32006836]
[258.45742798 920.89196777]
[243.76087952 923.90307617]
[228.95979309 926.34912109]
[214.07586670 928.22644043]
[199.13096619 929.53228760]
[184.14701843 930.26470947]
[169.14599609 930.42272949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 124]
[77 123]
[78 122]
[79 121]
[80 119]
[81 118]
[82 117]
[83 116]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
