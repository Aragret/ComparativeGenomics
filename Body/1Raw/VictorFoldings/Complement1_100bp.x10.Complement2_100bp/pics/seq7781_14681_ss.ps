%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[135.51116943 847.89373779]
[121.05798340 843.86468506]
[106.86351776 839.00207520]
[92.97579956 833.32232666]
[79.44183350 826.84472656]
[66.30739594 819.59112549]
[53.61695099 811.58605957]
[41.41342545 802.85668945]
[29.73811340 793.43249512]
[18.63052559 783.34539795]
[8.12824249 772.62951660]
[-1.73319626 761.32110596]
[-10.92042446 749.45843506]
[-19.40235329 737.08166504]
[-27.15028572 724.23260498]
[-34.13800049 710.95483398]
[-40.34185791 697.29321289]
[-45.74086380 683.29394531]
[-50.31674957 669.00445557]
[-54.05403137 654.47308350]
[-56.94006348 639.74902344]
[-58.96508026 624.88201904]
[-60.12223434 609.92242432]
[-60.40760040 594.92089844]
[-59.82022095 579.92810059]
[-58.36208344 564.99487305]
[-56.03811646 550.17169189]
[-52.85618973 535.50866699]
[-48.82706451 521.05548096]
[-43.96437454 506.86105347]
[-38.28458023 492.97335815]
[-31.80689049 479.43942261]
[-24.55323219 466.30502319]
[-16.54814720 453.61459351]
[-7.81871986 441.41110229]
[1.60550952 429.73583984]
[11.69265270 418.62829590]
[22.40857887 408.12606812]
[33.71702576 398.26464844]
[45.57973480 389.07748413]
[57.95655823 380.59561157]
[70.80562592 372.84771729]
[84.08345032 365.86007690]
[97.74510956 359.65628052]
[111.74436951 354.25732422]
[126.03387451 349.68148804]
[140.56526184 345.94427490]
[137.67999268 331.22436523]
[134.79472351 316.50448608]
[120.33671570 312.83956909]
[108.85648346 303.22116089]
[102.66546631 289.51596069]
[103.04043579 274.42028809]
[109.96055603 260.92959595]
[122.10092163 251.74412537]
[119.21564484 237.02423096]
[116.33037567 222.30433655]
[106.28945160 211.30300903]
[111.22778320 196.27226257]
[108.34250641 181.55236816]
[105.45723724 166.83247375]
[102.57196045 152.11259460]
[92.53103638 141.11126709]
[97.46936798 126.08051300]
[94.58409882 111.36062622]
[91.37082672 96.70883942]
[80.59549713 85.12423706]
[85.11092377 70.93057251]
[81.57125092 56.35419846]
[70.79592896 44.76959610]
[75.31135559 30.57593155]
[71.77168274 15.99955559]
[68.23200989 1.42318010]
[54.30830002 -1.00106347]
[42.39631653 -8.52627945]
[34.27688599 -19.98840714]
[31.14892578 -33.63781738]
[33.45251465 -47.40636444]
[40.80728912 -59.22072601]
[52.07480621 -67.31463623]
[48.75254440 -81.94209290]
[45.43028641 -96.56955719]
[34.82863235 -108.31330109]
[39.55488205 -122.43816376]
[24.49491310 -122.33153534]
[9.76420784 -125.46528625]
[-3.94824886 -131.69285583]
[-16.00110245 -140.72296143]
[-25.83061600 -152.13325500]
[-32.97705078 -165.39004517]
[-37.10614777 -179.87329102]
[-38.02479172 -194.90559387]
[-35.69000626 -209.78387451]
[-30.21099663 -223.81221008]
[-21.84402657 -236.33451843]
[-10.98043633 -246.76506042]
[1.87166679 -254.61602783]
[16.11116600 -259.52017212]
[31.07205391 -261.24816895]
[46.05458069 -259.71914673]
[60.35799026 -255.00463867]
[73.31328583 -247.32514954]
[84.31452179 -237.03987122]
[92.84715271 -224.62986755]
[98.51209259 -210.67556763]
[101.04438019 -195.82963562]
[100.32556915 -180.78645325]
[96.38929749 -166.24961853]
[89.41965485 -152.89903259]
[79.74263000 -141.35913086]
[67.81083679 -132.16966248]
[54.18234253 -125.76042175]
[64.54636383 -115.06293488]
[60.05774689 -99.89181519]
[63.38000488 -85.26435089]
[66.70226288 -70.63689423]
[82.34308624 -67.36345673]
[95.03675079 -57.56118011]
[102.21093750 -43.15233994]
[102.38392639 -26.99900246]
[95.47034454 -12.33455563]
[82.80838776 -2.11649227]
[86.34806061 12.45988274]
[89.88773346 27.03625870]
[100.40987396 37.57825851]
[96.14762878 52.81452560]
[99.68730164 67.39089966]
[110.20944214 77.93289948]
[105.94719696 93.16916656]
[108.92302704 95.62208557]
[110.80319977 99.37479401]
[111.03145599 103.90854645]
[109.30398560 108.47534943]
[112.18926239 123.19524384]
[122.43656158 135.24943542]
[117.29185486 149.22731018]
[120.17712402 163.94720459]
[123.06240082 178.66709900]
[125.94766998 193.38699341]
[136.19497681 205.44117737]
[131.05026245 219.41906738]
[133.93554688 234.13896179]
[136.82081604 248.85884094]
[151.53050232 252.78138733]
[163.03153992 262.66131592]
[169.07766724 276.49838257]
[168.51875305 291.52664185]
[161.51916504 304.76733398]
[149.51460266 313.61920166]
[152.39988708 328.33911133]
[155.28515625 343.05899048]
[170.15211487 341.03378296]
[185.11167908 339.87646484]
[200.11323547 339.59091187]
[215.10600281 340.17810059]
[230.03927612 341.63604736]
[244.86250305 343.95983887]
[259.52554321 347.14157104]
[273.97875977 351.17053223]
[288.17327881 356.03305054]
[302.06103516 361.71264648]
[315.59506226 368.19018555]
[328.72955322 375.44366455]
[341.42007446 383.44860840]
[353.62365723 392.17788696]
[365.29904175 401.60195923]
[376.40670776 411.68896484]
[386.90908813 422.40475464]
[396.77062988 433.71310425]
[405.95794678 445.57568359]
[414.43997192 457.95239258]
[422.18801880 470.80136108]
[429.17584229 484.07910156]
[435.37982178 497.74069214]
[440.77893066 511.73989868]
[445.35494995 526.02935791]
[449.09234619 540.56066895]
[451.97848511 555.28472900]
[454.00363159 570.15173340]
[455.16091919 585.11126709]
[455.44641113 600.11285400]
[454.85916138 615.10559082]
[453.40112305 630.03887939]
[451.07730103 644.86206055]
[447.89547729 659.52508545]
[443.86648560 673.97833252]
[439.00390625 688.17279053]
[433.32421875 702.06054688]
[426.84664917 715.59454346]
[419.59310913 728.72900391]
[411.58813477 741.41949463]
[402.85879517 753.62304688]
[393.43466187 765.29840088]
[383.34762573 776.40600586]
[372.63177490 786.90832520]
[361.32339478 796.76983643]
[349.46078491 805.95709229]
[337.08401489 814.43908691]
[324.23501587 822.18707275]
[310.95724487 829.17486572]
[297.29565430 835.37878418]
[283.29641724 840.77783203]
[269.00695801 845.35375977]
[254.47560120 849.09112549]
[239.75152588 851.97723389]
[224.88453674 854.00231934]
[209.92497253 855.15948486]
[194.92341614 855.44494629]
[179.93064880 854.85760498]
[164.99739075 853.39953613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 151]
[48 150]
[49 149]
[55 143]
[56 142]
[57 141]
[59 139]
[60 138]
[61 137]
[62 136]
[64 134]
[65 133]
[66 129]
[68 127]
[69 126]
[71 124]
[72 123]
[73 122]
[80 116]
[81 115]
[82 114]
[84 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
