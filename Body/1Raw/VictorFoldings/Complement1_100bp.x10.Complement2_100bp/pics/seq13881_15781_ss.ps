%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[121.97899628 574.18957520]
[110.10171509 565.02069092]
[98.79971313 555.15136719]
[88.11421967 544.61773682]
[78.08423615 533.45806885]
[68.74635315 521.71319580]
[60.13464737 509.42593384]
[52.28054047 496.64114380]
[45.21269226 483.40542603]
[38.95689392 469.76715088]
[33.53597260 455.77600098]
[28.96970558 441.48309326]
[25.27475548 426.94055176]
[22.46460915 412.20144653]
[20.54951477 397.31954956]
[19.53646469 382.34918213]
[19.42915344 367.34497070]
[20.22797203 352.36166382]
[21.93000793 337.45388794]
[24.52904701 322.67611694]
[28.01560974 308.08218384]
[32.37697220 293.72543335]
[37.59721756 279.65820312]
[43.65730286 265.93182373]
[50.53511047 252.59637451]
[58.20554733 239.70054626]
[66.64062500 227.29136658]
[75.80955505 215.41412354]
[85.67889404 204.11216736]
[96.21263123 193.42672729]
[107.37231445 183.39678955]
[119.11723328 174.05895996]
[131.40452576 165.44731140]
[123.55277252 152.66647339]
[115.70101929 139.88563538]
[107.84925842 127.10478973]
[99.99750519 114.32394409]
[87.79519653 107.49787140]
[87.22164917 93.52780914]
[79.36989594 80.74697113]
[71.51814270 67.96612549]
[63.66638565 55.18528366]
[50.36905289 62.13953400]
[36.62362289 68.15981293]
[22.49559402 73.21743011]
[8.05229759 77.28828430]
[-6.63743830 80.35297394]
[-21.50361061 82.39689636]
[-36.47537231 83.41030884]
[-51.48137665 83.38838959]
[-66.45011139 82.33123016]
[-81.31024933 80.24387360]
[-95.99096680 77.13626862]
[-110.42230225 73.02322388]
[-124.53549194 67.92433929]
[-138.26327515 61.86392212]
[-151.54022217 54.87083817]
[-164.30308533 46.97842407]
[-176.49101257 38.22428894]
[-188.04594421 28.65014839]
[-198.91281128 18.30162811]
[-209.03984070 7.22804546]
[-218.37873840 -4.51782894]
[-226.88502502 -16.88002014]
[-234.51815796 -29.79961777]
[-241.24176025 -43.21504974]
[-247.02378845 -57.06238937]
[-251.83668518 -71.27564240]
[-255.65753174 -85.78707886]
[-258.46810913 -100.52754974]
[-260.25503540 -115.42679596]
[-261.00976562 -130.41381836]
[-260.72872925 -145.41720581]
[-259.41323853 -160.36546326]
[-257.06961060 -175.18733215]
[-253.70895386 -189.81221008]
[-249.34733582 -204.17037964]
[-244.00550842 -218.19340515]
[-237.70893860 -231.81449890]
[-230.48764038 -244.96871948]
[-222.37602234 -257.59338379]
[-213.41273499 -269.62832642]
[-203.64048767 -281.01623535]
[-193.10586548 -291.70278931]
[-181.85906982 -301.63705444]
[-169.95368958 -310.77175903]
[-157.44645691 -319.06329346]
[-144.39697266 -326.47219849]
[-130.86744690 -332.96316528]
[-116.92233276 -338.50521851]
[-102.62808990 -343.07196045]
[-88.05283356 -346.64166260]
[-73.26603699 -349.19729614]
[-58.33815384 -350.72665405]
[-43.34032440 -351.22250366]
[-28.34402657 -350.68243408]
[-13.42072010 -349.10900879]
[1.35847688 -346.50979614]
[15.92313385 -342.89712524]
[30.20384216 -338.28820801]
[44.13254929 -332.70504761]
[57.64287567 -326.17419434]
[70.67044067 -318.72683716]
[83.15316010 -310.39843750]
[95.03153992 -301.22866821]
[106.24899292 -291.26123047]
[116.75203705 -280.54364014]
[126.49064636 -269.12698364]
[135.41839600 -257.06564331]
[143.49273682 -244.41709900]
[150.67520142 -231.24163818]
[156.93154907 -217.60203552]
[162.23199463 -203.56329346]
[166.55123901 -189.19233704]
[169.86872864 -174.55761719]
[172.16862488 -159.72888184]
[173.44000244 -144.77682495]
[173.67678833 -129.77267456]
[172.87783813 -114.78793335]
[171.04698181 -99.89402008]
[168.19293213 -85.16191101]
[164.32929993 -70.66180420]
[159.47448730 -56.46281052]
[153.65162659 -42.63259125]
[146.88848877 -29.23704910]
[139.21726990 -16.34002686]
[130.67456055 -4.00298166]
[121.30104828 7.71529245]
[111.14141083 18.75895309]
[100.24406433 29.07537079]
[88.66093445 38.61538315]
[76.44722748 47.33352661]
[84.29898071 60.11436844]
[92.15074158 72.89521027]
[100.00249481 85.67605591]
[112.20480347 92.50212860]
[112.77835083 106.47219086]
[120.63010406 119.25302887]
[128.48185730 132.03387451]
[136.33361816 144.81471252]
[144.18536377 157.59556580]
[157.42097473 150.52752686]
[171.05917358 144.27154541]
[185.05023193 138.85041809]
[199.34307861 134.28395081]
[213.88557434 130.58880615]
[228.62463379 127.77845001]
[243.50650024 125.86315155]
[258.47683716 124.84989166]
[273.48107910 124.74237061]
[288.46441650 125.54098511]
[303.37219238 127.24281311]
[318.15002441 129.84164429]
[332.74395752 133.32800293]
[347.10079956 137.68916321]
[361.16809082 142.90922546]
[374.89456177 148.96911621]
[388.23010254 155.84674072]
[401.12603760 163.51699829]
[413.53533936 171.95188904]
[425.41268921 181.12066650]
[436.71481323 190.98985291]
[447.40039062 201.52342224]
[457.43048096 212.68296814]
[466.76846313 224.42776489]
[475.38027954 236.71493530]
[483.23452759 249.49966431]
[490.30249023 262.73529053]
[496.55841064 276.37353516]
[501.97946167 290.36462402]
[506.54586792 304.65750122]
[510.24093628 319.20001221]
[513.05120850 333.93908691]
[514.96643066 348.82095337]
[515.97967529 363.79129028]
[516.08709717 378.79553223]
[515.28839111 393.77886963]
[513.58654785 408.68661499]
[510.98760986 423.46444702]
[507.50119019 438.05838013]
[503.13995361 452.41519165]
[497.91986084 466.48248291]
[491.85989380 480.20889282]
[484.98220825 493.54440308]
[477.31188965 506.44030762]
[468.87692261 518.84954834]
[459.70809937 530.72686768]
[449.83886719 542.02893066]
[439.30523682 552.71447754]
[428.14566040 562.74450684]
[416.40081787 572.08245850]
[404.11358643 580.69421387]
[391.32882690 588.54840088]
[378.09317017 595.61627197]
[364.45489502 601.87213135]
[350.46380615 607.29315186]
[336.17089844 611.85949707]
[321.62838745 615.55450439]
[306.88928223 618.36468506]
[292.00741577 620.27984619]
[277.03704834 621.29296875]
[262.03283691 621.40039062]
[247.04949951 620.60162354]
[232.14173889 618.89965820]
[217.36392212 616.30065918]
[202.77000427 612.81420898]
[188.41322327 608.45288086]
[174.34596252 603.23272705]
[160.61955261 597.17266846]
[147.28408813 590.29492188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 141]
[34 140]
[35 139]
[36 138]
[37 137]
[39 135]
[40 134]
[41 133]
[42 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
