%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[131.44465637 794.85351562]
[116.92963409 791.05603027]
[102.63728333 786.49133301]
[88.60813904 781.17248535]
[74.88195801 775.11450195]
[61.49765396 768.33459473]
[48.49316025 760.85186768]
[35.90534210 752.68768311]
[23.76988411 743.86511230]
[12.12118244 734.40917969]
[0.99225724 724.34667969]
[-9.58534431 713.70611572]
[-19.58164024 702.51763916]
[-28.96829224 690.81304932]
[-37.71869278 678.62542725]
[-45.80804443 665.98937988]
[-53.21340561 652.94073486]
[-59.91379547 639.51641846]
[-65.89021301 625.75451660]
[-71.12572479 611.69409180]
[-75.60548401 597.37487793]
[-79.31679535 582.83758545]
[-82.24913788 568.12335205]
[-84.39420319 553.27392578]
[-85.74590302 538.33135986]
[-86.30040741 523.33801270]
[-86.05615234 508.33642578]
[-85.01382446 493.36911011]
[-83.17637634 478.47848511]
[-80.54901886 463.70675659]
[-77.13919830 449.09579468]
[-72.95658112 434.68701172]
[-68.01302338 420.52124023]
[-62.32254410 406.63867188]
[-55.90126801 393.07864380]
[-48.76739120 379.87960815]
[-40.94114685 367.07894897]
[-32.44471359 354.71295166]
[-23.30217361 342.81668091]
[-13.53944492 331.42385864]
[-3.18420219 320.56677246]
[7.73420238 310.27621460]
[19.18482018 300.58132935]
[31.13519096 291.50964355]
[43.55144119 283.08682251]
[56.39837646 275.33676147]
[69.63957977 268.28143311]
[83.23751831 261.94082642]
[97.15364075 256.33291626]
[111.34851074 251.47358704]
[125.78188324 247.37664795]
[122.45962524 232.74919128]
[119.13736725 218.12173462]
[115.81510162 203.49426270]
[112.49284363 188.86680603]
[109.17058563 174.23934937]
[105.84832764 159.61189270]
[102.52606964 144.98442078]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[86.41867065 108.94016266]
[83.92377472 97.56401825]
[89.67687988 87.43766022]
[86.57276917 72.76235962]
[83.46865845 58.08705902]
[80.36455536 43.41175461]
[77.26044464 28.73645401]
[62.33946609 30.38910866]
[47.32835007 30.57127571]
[32.37166214 29.28120041]
[17.61344910 26.53130531]
[3.19584131 22.34807777]
[-10.74230576 16.77180290]
[-24.06675720 9.85618496]
[-36.64918900 1.66782725]
[-48.36842346 -7.71440983]
[-59.11159134 -18.20016861]
[-68.77523041 -29.68846130]
[-77.26627350 -42.06864929]
[-84.50293732 -55.22149658]
[-90.41553497 -69.02033234]
[-94.94712067 -83.33227539]
[-98.05405426 -98.01947021]
[-99.70641327 -112.94047546]
[-99.88828278 -127.95159912]
[-98.59790802 -142.90826416]
[-95.84771729 -157.66641235]
[-91.66419983 -172.08393860]
[-86.08764648 -186.02197266]
[-79.17176056 -199.34629822]
[-70.98315430 -211.92855835]
[-61.60068130 -223.64759827]
[-51.11470795 -234.39056396]
[-39.62622070 -244.05397034]
[-27.24586487 -252.54476929]
[-14.09287071 -259.78115845]
[-0.29391342 -265.69348145]
[14.01811314 -270.22479248]
[28.70537186 -273.33142090]
[43.62641525 -274.98348999]
[58.63753891 -275.16506958]
[73.59417725 -273.87438965]
[88.35227966 -271.12390137]
[102.76971436 -266.94009399]
[116.70764160 -261.36325073]
[130.03181458 -254.44711304]
[142.61392212 -246.25825500]
[154.33277893 -236.87554932]
[165.07553101 -226.38935852]
[174.73870850 -214.90068054]
[183.22924805 -202.52015686]
[190.46539307 -189.36701965]
[196.37744141 -175.56793213]
[200.90846252 -161.25581360]
[204.01480103 -146.56849670]
[205.66656494 -131.64743042]
[205.84782410 -116.63629913]
[204.55685425 -101.67968750]
[201.80607605 -86.92163849]
[197.62197876 -72.50428009]
[192.04487610 -58.56646729]
[185.12844849 -45.24243164]
[176.93934631 -32.66049194]
[167.55639648 -20.94182014]
[157.06999207 -10.19928074]
[145.58113098 -0.53633142]
[133.20042419 7.95396662]
[120.04714966 15.18984413]
[106.24795532 21.10161591]
[91.93574524 25.63234329]
[95.03985596 40.30764771]
[98.14396667 54.98294830]
[101.24807739 69.65824890]
[104.35218811 84.33355713]
[115.88227844 96.51686859]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[117.15352631 141.66217041]
[120.47578430 156.28962708]
[123.79804993 170.91708374]
[127.12030792 185.54455566]
[130.44256592 200.17201233]
[133.76483154 214.79946899]
[137.08708191 229.42692566]
[140.40934753 244.05438232]
[155.19639587 241.51464844]
[170.09765625 239.76550293]
[185.07089233 238.81192017]
[200.07366943 238.65660095]
[215.06344604 239.29997253]
[229.99772644 240.74023438]
[244.83418274 242.97328186]
[259.53079224 245.99281311]
[274.04583740 249.79023743]
[288.33819580 254.35479736]
[302.36737061 259.67355347]
[316.09359741 265.73147583]
[329.47796631 272.51132202]
[342.48248291 279.99389648]
[355.07037354 288.15802002]
[367.20587158 296.98052979]
[378.85464478 306.43640137]
[389.98361206 316.49884033]
[400.56130981 327.13934326]
[410.55764771 338.32769775]
[419.94439697 350.03225708]
[428.69485474 362.21981812]
[436.78430176 374.85580444]
[444.18975830 387.90441895]
[450.89022827 401.32870483]
[456.86672974 415.09054565]
[462.10232544 429.15097046]
[466.58218384 443.47012329]
[470.29357910 458.00741577]
[473.22601318 472.72161865]
[475.37118530 487.57104492]
[476.72296143 502.51361084]
[477.27755737 517.50689697]
[477.03341675 532.50848389]
[475.99118042 547.47583008]
[474.15380859 562.36645508]
[471.52655029 577.13824463]
[468.11682129 591.74920654]
[463.93429565 606.15802002]
[458.99084473 620.32379150]
[453.30044556 634.20642090]
[446.87924194 647.76647949]
[439.74545288 660.96557617]
[431.91931152 673.76629639]
[423.42294312 686.13232422]
[414.28048706 698.02868652]
[404.51782227 709.42156982]
[394.16265869 720.27868652]
[383.24429321 730.56933594]
[371.79376221 740.26428223]
[359.84344482 749.33605957]
[347.42724609 757.75897217]
[334.58035278 765.50909424]
[321.33920288 772.56451416]
[307.74130249 778.90521240]
[293.82519531 784.51318359]
[279.63037109 789.37261963]
[265.19702148 793.46966553]
[250.56608582 796.79266357]
[235.77900696 799.33233643]
[220.87773132 801.08135986]
[205.90449524 802.03485107]
[190.90171814 802.19012451]
[175.91195679 801.54663086]
[160.97767639 800.10626221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 145]
[52 144]
[53 143]
[54 142]
[55 141]
[56 140]
[57 139]
[58 138]
[59 137]
[60 136]
[63 134]
[64 133]
[65 132]
[66 131]
[67 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
