%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[187.62672424 621.40679932]
[190.16688538 606.54705811]
[196.19004822 592.72735596]
[205.34602356 580.75103760]
[217.10249329 571.31451416]
[230.77595520 564.96630859]
[227.89068604 550.24639893]
[225.00541687 535.52648926]
[222.12014771 520.80664062]
[219.23486328 506.08673096]
[214.51473999 491.84872437]
[208.03523254 478.32037354]
[201.55574036 464.79205322]
[195.07624817 451.26370239]
[192.79936218 466.08987427]
[183.96763611 478.21426392]
[170.55412292 484.92822266]
[155.55540466 484.73187256]
[142.32225037 477.66903687]
[133.81097412 465.31756592]
[131.92303467 450.43685913]
[137.08016968 436.35125732]
[148.13029480 426.20755005]
[162.60476685 422.27185059]
[177.26994324 425.42343140]
[188.84962463 434.95819092]
[184.66261292 420.55441284]
[180.47560120 406.15063477]
[176.28858948 391.74682617]
[172.10157776 377.34304810]
[167.91456604 362.93927002]
[157.46798706 356.84045410]
[153.86184692 344.87469482]
[159.55154419 333.29928589]
[155.57943726 318.83474731]
[142.44732666 307.19369507]
[147.25088501 289.41708374]
[143.06387329 275.01330566]
[138.87686157 260.60952759]
[134.68984985 246.20574951]
[119.84022522 244.65081787]
[106.68159485 237.50968933]
[97.23397827 225.84318542]
[92.96125031 211.40950012]
[94.54436493 196.39924622]
[101.77304840 183.10304260]
[113.57313538 173.56188965]
[109.38612366 159.15809631]
[105.19911194 144.75431824]
[101.01210022 130.35054016]
[96.82508850 115.94675446]
[86.97487640 109.73268890]
[83.80728149 98.52520752]
[88.94746399 88.07437897]
[84.97536469 73.60985565]
[75.40047455 85.15634918]
[60.40107346 85.02223969]
[51.03416443 73.30639648]
[54.20468140 58.64529800]
[67.57543945 51.84656143]
[81.28893280 57.92070770]
[71.03955078 50.09045029]
[68.93944550 37.77081680]
[75.57678223 27.65784264]
[72.91098785 12.89662552]
[70.24519348 -1.86459136]
[67.57939911 -16.62580872]
[64.91360474 -31.38702583]
[62.24780655 -46.14824295]
[59.58201218 -60.90946198]
[45.22262955 -66.17779541]
[35.49246216 -77.84915924]
[32.92774963 -92.72492981]
[38.11860275 -106.79301453]
[49.57699585 -116.30989075]
[46.91119766 -131.07110596]
[44.24540329 -145.83232117]
[41.57960892 -160.59353638]
[33.86837769 -147.72743225]
[20.11293602 -141.74513245]
[5.44372511 -144.87789917]
[-4.66800213 -155.95730591]
[-6.45082235 -170.85096741]
[0.76021242 -184.00395203]
[14.27556515 -190.51051331]
[29.05434227 -187.94384766]
[39.58495331 -177.26023865]
[38.69213867 -192.23364258]
[37.79932022 -207.20704651]
[36.90650558 -222.18045044]
[35.90224457 -237.14680481]
[34.78659821 -252.10525513]
[33.67094803 -267.06372070]
[18.93168068 -270.41711426]
[5.83650637 -277.96746826]
[-4.45016193 -289.04339600]
[-11.01363945 -302.66000366]
[-13.27030659 -317.60653687]
[-11.01950264 -332.55395508]
[-4.46136665 -346.17315674]
[5.82095575 -357.25308228]
[18.91316795 -364.80856323]
[33.65111923 -368.16778564]
[48.72431946 -367.03198242]
[62.79247284 -361.50219727]
[74.60464478 -352.07012939]
[83.11051178 -339.57446289]
[87.55372620 -325.12631226]
[87.53921509 -310.01037598]
[83.06826019 -295.57080078]
[74.53841400 -283.09149170]
[62.70814896 -273.68209839]
[48.62940216 -268.17935181]
[49.74504852 -253.22090149]
[50.86069870 -238.26245117]
[54.49298477 -231.82597351]
[51.87991333 -223.07327271]
[52.77272797 -208.09986877]
[53.66554260 -193.12646484]
[54.55835724 -178.15306091]
[56.34082413 -163.25933838]
[59.00662231 -148.49812317]
[61.67241669 -133.73690796]
[64.33821106 -118.97568512]
[78.40161133 -114.06790924]
[88.18531799 -102.70414734]
[90.98588562 -87.87097168]
[85.95278168 -73.53343964]
[74.34323120 -63.57525635]
[77.00902557 -48.81403732]
[79.67481995 -34.05282211]
[82.34061432 -19.29160500]
[85.00640869 -4.53038692]
[87.67220306 10.23083019]
[90.33799744 24.99204826]
[102.37918854 37.75828171]
[96.00882721 55.03543472]
[99.43988800 69.63775635]
[103.41198730 84.10227966]
[115.64680481 95.57771301]
[111.22886658 111.75974274]
[115.41587830 126.16352844]
[119.60289001 140.56730652]
[123.78990173 154.97108459]
[127.97691345 169.37487793]
[143.05297852 171.10345459]
[156.28302002 178.45254517]
[165.66609192 190.27503967]
[169.79678345 204.75003052]
[168.07556152 219.66317749]
[160.79566956 232.74555969]
[149.09364319 242.01873779]
[153.28065491 256.42251587]
[157.46766663 270.82629395]
[161.65467834 285.23007202]
[172.56176758 292.11471558]
[175.75260925 304.19784546]
[170.04396057 314.86267090]
[174.01606750 329.32717896]
[187.41413879 341.95941162]
[182.31834412 358.75225830]
[186.50535583 373.15603638]
[190.69236755 387.55981445]
[194.87937927 401.96362305]
[199.06639099 416.36740112]
[203.25340271 430.77117920]
[208.60459900 444.78421021]
[215.08409119 458.31253052]
[221.56358337 471.84088135]
[228.04307556 485.36923218]
[228.76129150 470.38644409]
[234.24423218 456.42443848]
[243.91329956 444.95669556]
[256.74807739 437.19338989]
[271.39407349 433.95385742]
[286.30566406 435.57992554]
[299.90921021 441.90002441]
[310.76910400 452.24716187]
[317.73922729 465.52935791]
[320.08404541 480.34494019]
[317.55612183 495.13040161]
[310.42218018 508.32534790]
[299.43511963 518.53735352]
[285.75442505 524.68865967]
[270.82382202 526.13012695]
[256.21902466 522.70959473]
[243.48129272 514.78808594]
[233.95475769 503.20144653]
[236.84002686 517.92132568]
[239.72531128 532.64123535]
[242.61058044 547.36114502]
[245.49584961 562.08099365]
[260.55407715 562.79748535]
[275.00308228 567.09747314]
[288.00280762 574.73095703]
[298.79748535 585.25421143]
[306.75949097 598.05535889]
[311.42596436 612.39019775]
[312.52560425 627.42529297]
[309.99444580 642.28656006]
[303.97964478 656.10992432]
[294.83093262 668.09179688]
[283.08020020 677.53546143]
[269.41058350 683.89196777]
[254.61683655 686.79168701]
[239.55905151 686.06610107]
[225.11265564 681.75738525]
[212.11756897 674.11596680]
[201.32926941 663.58618164]
[193.37501526 650.78021240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 192]
[7 191]
[8 190]
[9 189]
[10 188]
[11 170]
[12 169]
[13 168]
[14 167]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[31 161]
[34 159]
[35 158]
[37 155]
[38 154]
[39 153]
[40 152]
[47 145]
[48 144]
[49 143]
[50 142]
[51 141]
[54 139]
[55 138]
[61 137]
[64 135]
[65 134]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[75 124]
[76 123]
[77 122]
[78 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
