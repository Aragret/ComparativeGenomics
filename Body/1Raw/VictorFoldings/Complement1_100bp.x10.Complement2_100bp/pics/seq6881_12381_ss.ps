%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[123.64080048 483.69366455]
[126.18096161 468.83395386]
[132.20413208 455.01422119]
[141.36009216 443.03793335]
[153.11657715 433.60137939]
[166.79003906 427.25317383]
[163.90476990 412.53326416]
[161.01948547 397.81338501]
[158.13421631 383.09347534]
[148.09329224 372.09216309]
[153.03163147 357.06140137]
[150.14634705 342.34152222]
[147.26107788 327.62164307]
[144.37580872 312.90173340]
[132.14588928 300.31619263]
[138.25830078 282.94610596]
[135.15419006 268.27081299]
[132.05009460 253.59550476]
[128.94598389 238.92019653]
[124.86631012 224.48565674]
[119.82939148 210.35662842]
[114.79248047 196.22758484]
[109.75556183 182.09855652]
[105.48702240 196.47839355]
[94.66867828 206.86894226]
[80.12841034 210.55412292]
[65.66701508 206.57066345]
[55.06465912 195.95980835]
[51.09278107 181.49522400]
[54.78961945 166.95791626]
[65.18882751 156.14790344]
[79.57207489 151.89088440]
[94.17961884 155.29965210]
[105.19260406 165.48239136]
[95.15167999 154.48107910]
[100.09001160 139.45031738]
[90.04908752 128.44900513]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.52214813 60.02724075]
[81.63687134 45.30735016]
[78.75160217 30.58745766]
[75.86633301 15.86756706]
[72.21823883 1.31794667]
[67.81724548 -13.02190018]
[63.41624451 -27.36174774]
[59.01524734 -41.70159531]
[54.61425018 -56.04144287]
[50.21325302 -70.38128662]
[45.81225204 -84.72113800]
[41.41125488 -99.06098175]
[29.96550751 -109.98368835]
[33.62810516 -124.42095184]
[29.87114525 -109.89906311]
[20.59630203 -98.11019897]
[7.36655045 -91.04099274]
[-7.58866358 -89.88272858]
[-21.74912262 -94.83059692]
[-32.72854233 -105.05078888]
[-38.67669678 -118.82102203]
[-38.59122086 -133.82078552]
[-32.48651123 -147.52233887]
[-21.39132500 -157.61672974]
[-7.17539358 -162.40289307]
[7.76564837 -161.07424927]
[20.91397285 -153.85472107]
[30.05457497 -141.95942688]
[28.49405289 -156.87803650]
[19.36303711 -169.79837036]
[25.73427200 -183.26153564]
[24.17374992 -198.18013000]
[22.61322784 -213.09873962]
[21.05270386 -228.01734924]
[19.49218178 -242.93594360]
[17.93165779 -257.85455322]
[16.37113571 -272.77316284]
[4.37746620 -282.71246338]
[3.00739527 -297.86428833]
[12.55691051 -309.23715210]
[10.99638748 -324.15576172]
[1.86537373 -337.07611084]
[8.23660851 -350.53924561]
[6.67608547 -365.45785522]
[5.11556292 -380.37646484]
[-4.01545143 -393.29681396]
[2.35578346 -406.75994873]
[-12.61015034 -408.44366455]
[-26.86409187 -413.30569458]
[-39.73936081 -421.11859131]
[-50.63375473 -431.51696777]
[-59.03772736 -444.01446533]
[-64.55820465 -458.02655029]
[-66.93698883 -472.89785767]
[-66.06281281 -487.93280029]
[-61.97657394 -502.42822266]
[-54.86938095 -515.70605469]
[-45.07365799 -527.14538574]
[-33.04756927 -536.21112061]
[-19.35359192 -542.47918701]
[-4.63222122 -545.65649414]
[10.42799854 -545.59442139]
[25.12267303 -542.29583740]
[38.76450729 -535.91510010]
[50.71544647 -526.75048828]
[60.41652298 -515.23083496]
[67.41400146 -501.89480591]
[71.38059235 -487.36621094]
[72.13078308 -472.32455444]
[69.62947083 -457.47338867]
[63.99365616 -443.50729370]
[55.48693466 -431.07949829]
[44.50717545 -420.77130127]
[31.56793213 -413.06481934]
[17.27438736 -408.32049561]
[26.29378319 -396.46722412]
[20.03416824 -381.93698120]
[21.59469032 -367.01837158]
[23.15521431 -352.09979248]
[32.17461014 -340.24652100]
[25.91499329 -325.71627808]
[27.47551537 -310.79766846]
[39.17182922 -301.64715576]
[40.96694183 -286.53979492]
[31.28973961 -274.33367920]
[32.85026169 -259.41506958]
[34.41078568 -244.49647522]
[35.97130966 -229.57786560]
[37.53182983 -214.65925598]
[39.09235382 -199.74066162]
[40.65287781 -184.82205200]
[49.67227173 -172.96879578]
[43.41265869 -158.43855286]
[44.97317886 -143.51995850]
[47.96795273 -128.82194519]
[59.09891510 -118.92492676]
[55.75110245 -103.46198273]
[60.15209961 -89.12213135]
[64.55310059 -74.78228760]
[68.95409393 -60.44244003]
[73.35509491 -46.10259247]
[77.75609589 -31.76274490]
[82.15708923 -17.42289925]
[86.55809021 -3.08305144]
[93.50825500 -16.37572861]
[107.32834625 -22.20710564]
[121.70001221 -17.91115570]
[130.05271912 -5.45193052]
[128.56771851 9.47438049]
[117.92393494 20.04367065]
[102.98756409 21.42379951]
[90.58621979 12.98229408]
[93.47149658 27.70218658]
[96.35676575 42.42207718]
[99.24204254 57.14196777]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[119.95460510 122.58716583]
[114.80989838 136.56504822]
[125.05719757 148.61923218]
[119.91249847 162.59712219]
[123.88459015 177.06164551]
[128.92150879 191.19067383]
[133.95841980 205.31970215]
[138.99534607 219.44873047]
[143.82312012 205.24688721]
[155.49604797 195.82653809]
[170.39712524 194.10670471]
[183.90910339 200.62026978]
[191.84513855 213.34895325]
[191.74617004 228.34863281]
[183.64285278 240.97148132]
[170.04611206 247.30618286]
[155.16902161 245.38986206]
[143.62127686 235.81610107]
[146.72538757 250.49139404]
[149.82949829 265.16668701]
[152.93360901 279.84201050]
[163.29843140 287.51879883]
[165.58174133 299.80578613]
[159.09570312 310.01647949]
[161.98097229 324.73635864]
[164.86624146 339.45623779]
[167.75151062 354.17614746]
[177.99880981 366.23031616]
[172.85411072 380.20822144]
[175.73937988 394.92810059]
[178.62464905 409.64801025]
[181.50993347 424.36788940]
[196.56814575 425.08435059]
[211.01715088 429.38433838]
[224.01687622 437.01785278]
[234.81155396 447.54107666]
[242.77357483 460.34225464]
[247.44004822 474.67706299]
[248.53967285 489.71218872]
[246.00851440 504.57342529]
[239.99372864 518.39678955]
[230.84501648 530.37866211]
[219.09426880 539.82232666]
[205.42465210 546.17883301]
[190.63092041 549.07861328]
[175.57312012 548.35296631]
[161.12673950 544.04425049]
[148.13163757 536.40283203]
[137.34335327 525.87310791]
[129.38909912 513.06707764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 192]
[7 191]
[8 190]
[9 189]
[11 187]
[12 186]
[13 185]
[14 184]
[16 181]
[17 180]
[18 179]
[19 178]
[20 168]
[21 167]
[22 166]
[23 165]
[34 164]
[36 162]
[38 160]
[40 158]
[41 157]
[42 156]
[43 155]
[44 154]
[45 153]
[46 145]
[47 144]
[48 143]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[55 136]
[69 135]
[70 134]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[81 123]
[82 122]
[84 120]
[85 119]
[86 118]
[88 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
