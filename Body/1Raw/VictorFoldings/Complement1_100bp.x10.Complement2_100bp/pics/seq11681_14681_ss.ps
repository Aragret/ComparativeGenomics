%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[27.83557892 739.93383789]
[12.87979889 741.22589111]
[-2.13107729 741.09045410]
[-17.06110764 739.52874756]
[-31.77507782 736.55487061]
[-46.13973618 732.19580078]
[-60.02499008 726.49102783]
[-73.30508423 719.49218750]
[-85.85976410 711.26269531]
[-97.57530975 701.87701416]
[-108.34563446 691.42022705]
[-118.07319641 679.98693848]
[-126.66989899 667.68078613]
[-134.05787659 654.61322021]
[-140.17024231 640.90246582]
[-144.95162964 626.67279053]
[-148.35871887 612.05310059]
[-150.36068726 597.17572021]
[-150.93937683 582.17535400]
[-150.08956909 567.18792725]
[-147.81893921 552.34918213]
[-144.14805603 537.79345703]
[-139.11018372 523.65258789]
[-132.75091553 510.05459595]
[-125.12787628 497.12271118]
[-116.31007385 484.97399902]
[-106.37738800 473.71850586]
[-95.41975403 463.45812988]
[-83.53642273 454.28582764]
[-70.83500671 446.28463745]
[-57.43053436 439.52706909]
[-43.44440842 434.07427979]
[-29.00328255 429.97564697]
[-14.23794746 427.26834106]
[0.71787894 425.97680664]
[15.72875023 426.11279297]
[17.28927422 411.19418335]
[18.84979630 396.27557373]
[8.36094475 406.99865723]
[-6.23601627 410.45245361]
[-20.41805840 405.56677246]
[-29.79072380 393.85556030]
[-31.44978905 378.94757080]
[-24.88117409 365.46228027]
[-12.12023640 357.57821655]
[2.87890863 357.73834229]
[15.46861267 365.89306641]
[21.74785805 379.51577759]
[25.28753090 364.93942261]
[28.82720375 350.36303711]
[32.36687469 335.78665161]
[35.90654755 321.21029663]
[39.44622040 306.63391113]
[34.93079376 292.44024658]
[45.70611954 280.85565186]
[49.24578857 266.27926636]
[52.78546143 251.70289612]
[56.32513428 237.12651062]
[59.86480713 222.55014038]
[63.40447998 207.97377014]
[55.22694778 198.01597595]
[54.26348495 184.97167969]
[61.08928680 173.58663940]
[73.40458679 168.13247681]
[77.16088867 153.61042786]
[80.91719055 139.08836365]
[84.67349243 124.56630707]
[83.36869049 122.08525085]
[82.96805573 118.93785095]
[83.73030090 115.46591187]
[85.78575897 112.09847260]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[101.23144531 71.80844116]
[105.84545898 57.53570938]
[105.50749207 48.40753174]
[110.63586426 43.08573151]
[115.46186829 28.88327599]
[120.28786469 14.68082047]
[120.08584595 5.54862452]
[125.29288483 0.30376661]
[130.32980347 -13.82526302]
[135.36671448 -27.95429230]
[140.40362549 -42.08332062]
[144.48329163 -56.51787567]
[147.58740234 -71.19317627]
[141.47499084 -88.56326294]
[153.70491028 -101.14880371]
[156.59017944 -115.86869812]
[159.47544861 -130.58859253]
[149.45185852 -144.92549133]
[152.83187866 -161.74482727]
[167.04512024 -170.73497009]
[169.71090698 -185.49618530]
[172.37670898 -200.25740051]
[175.04249573 -215.01863098]
[177.70829773 -229.77984619]
[163.84811401 -235.68264771]
[151.64924622 -244.52207947]
[141.72357178 -255.85472107]
[134.56896973 -269.11215210]
[130.54431152 -283.62936401]
[129.85145569 -298.67822266]
[132.52517700 -313.50384521]
[138.43135071 -327.36257935]
[147.27372742 -339.55929565]
[158.60877991 -349.48223877]
[171.86793518 -356.63363647]
[186.38613892 -360.65475464]
[201.43515015 -361.34396362]
[216.26011658 -358.66665649]
[230.11743164 -352.75714111]
[242.31201172 -343.91180420]
[252.23219299 -332.57434082]
[259.38037109 -319.31344604]
[263.39801025 -304.79428101]
[264.08355713 -289.74511719]
[261.40264893 -274.92077637]
[255.48976135 -261.06491089]
[246.64147949 -248.87246704]
[235.30162048 -238.95503235]
[222.03900146 -231.81007385]
[207.51885986 -227.79595947]
[192.46951294 -227.11404419]
[189.80371094 -212.35282898]
[187.13792419 -197.59161377]
[184.47212219 -182.83039856]
[181.80633545 -168.06918335]
[190.56205750 -158.61578369]
[192.30023193 -145.65194702]
[186.16416931 -133.88082886]
[174.19534302 -127.70331573]
[171.31007385 -112.98342133]
[168.42480469 -98.26353455]
[174.91084290 -88.05285645]
[172.62753296 -75.76586151]
[162.26271057 -68.08906555]
[159.15859985 -53.41376495]
[170.70610046 -62.98743057]
[185.58317566 -64.90389252]
[199.17997742 -58.56932068]
[207.28341675 -45.94654846]
[207.38252258 -30.94687462]
[199.44660950 -18.21811676]
[185.93470764 -11.70441628]
[171.03361511 -13.42411518]
[159.36059570 -22.84434700]
[154.53265381 -37.04640579]
[149.49574280 -22.91737556]
[144.45883179 -8.78834629]
[139.42190552 5.34068298]
[134.49032593 19.50681877]
[129.66432190 33.70927429]
[124.83832550 47.91172791]
[120.11818695 62.14971924]
[115.50418091 76.42245483]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[99.19554901 128.32260132]
[95.43924713 142.84466553]
[91.68295288 157.36672974]
[87.92665100 171.88877869]
[97.07913208 186.79687500]
[92.70399475 203.38522339]
[77.98085785 211.51344299]
[74.44118500 226.08981323]
[70.90151215 240.66618347]
[67.36183929 255.24256897]
[63.82216644 269.81893921]
[60.28249359 284.39532471]
[64.54473877 299.63159180]
[54.02259445 310.17358398]
[50.48292160 324.74993896]
[46.94325256 339.32632446]
[43.40357971 353.90270996]
[39.86390686 368.47906494]
[36.32423401 383.05545044]
[33.76840210 397.83612061]
[32.20787811 412.75469971]
[30.64735603 427.67330933]
[45.36143494 430.64663696]
[59.72625351 435.00515747]
[73.61170959 440.70944214]
[86.89206696 447.70779419]
[99.44703674 455.93685913]
[111.16293335 465.32208252]
[121.93363953 475.77850342]
[131.66162109 487.21139526]
[140.25875854 499.51724243]
[147.64723206 512.58459473]
[153.76008606 526.29510498]
[158.54199219 540.52453613]
[161.94961548 555.14416504]
[163.95211792 570.02148438]
[164.53135681 585.02178955]
[163.68209839 600.00921631]
[161.41200256 614.84808350]
[157.74166870 629.40399170]
[152.70429993 643.54504395]
[146.34553528 657.14324951]
[138.72296143 670.07537842]
[129.90560913 682.22442627]
[119.97332001 693.48028564]
[109.01606750 703.74108887]
[97.13307190 712.91381836]
[84.43194580 720.91540527]
[71.02771759 727.67352295]
[57.04179001 733.12683105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 182]
[37 181]
[38 180]
[48 179]
[49 178]
[50 177]
[51 176]
[52 175]
[53 174]
[55 172]
[56 171]
[57 170]
[58 169]
[59 168]
[60 167]
[64 164]
[65 163]
[66 162]
[67 161]
[72 160]
[74 158]
[75 157]
[76 156]
[78 155]
[79 154]
[80 153]
[82 152]
[83 151]
[84 150]
[85 149]
[86 139]
[87 138]
[89 135]
[90 134]
[91 133]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
