%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[20.87176704 624.59710693]
[6.54431868 629.35382080]
[-8.53524303 630.06756592]
[-23.24791336 626.68524170]
[-36.50191498 619.45794678]
[-47.31371307 608.92193604]
[-54.88100433 595.85906982]
[-58.64223480 581.23870850]
[-58.31830597 566.14569092]
[-53.93325424 551.70013428]
[-45.81247711 538.97399902]
[-34.55858994 528.91156006]
[-21.00670624 522.25958252]
[-6.16246605 519.51159668]
[-4.82423210 504.57144165]
[-3.48599792 489.63125610]
[-2.14776373 474.69107056]
[-13.60186577 484.37628174]
[-28.60075569 484.55880737]
[-40.28714371 475.15518188]
[-43.31816864 460.46459961]
[-36.30808640 447.20343018]
[-22.46181679 441.43447876]
[-8.10968304 445.79522705]
[0.18715402 458.29382324]
[3.07242656 443.57394409]
[5.95769930 428.85406494]
[8.84297180 414.13415527]
[11.72824478 399.41427612]
[-1.98690248 405.48837280]
[-15.35701847 398.68838501]
[-18.52615166 384.02697754]
[-9.15813351 372.31201172]
[5.84127903 372.17932129]
[15.41467285 383.72512817]
[19.38676834 369.26058960]
[23.35886574 354.79608154]
[17.65022850 344.13128662]
[20.84106827 332.04812622]
[31.74815941 325.16351318]
[35.93517303 310.75970459]
[40.12218094 296.35592651]
[44.09428024 281.89141846]
[47.85057831 267.36935425]
[51.60688019 252.84729004]
[55.36318207 238.32524109]
[59.11948013 223.80317688]
[62.87578201 209.28111267]
[57.00899506 198.70248413]
[60.01958084 186.57318115]
[70.82295990 179.52691650]
[74.79505920 165.06239319]
[70.70423126 150.74058533]
[81.81969452 139.48194885]
[76.47445679 122.76681519]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[103.30757141 57.26306915]
[107.06387329 42.74100876]
[110.82017517 28.21895027]
[114.57647705 13.69689083]
[118.33277893 -0.82516867]
[122.08907318 -15.34722805]
[125.84537506 -29.86928749]
[129.60168457 -44.39134598]
[117.21382141 -35.93314743]
[102.21730804 -36.25642776]
[90.20545959 -45.24060440]
[85.65840149 -59.53480911]
[90.27207184 -73.80764771]
[102.32568359 -82.73571777]
[117.32354736 -82.98905945]
[129.67181396 -74.47318268]
[134.76495361 -60.36313629]
[132.57649231 -76.03224945]
[144.41271973 -85.07397461]
[149.86808777 -99.04677582]
[147.67962646 -114.71588898]
[159.51586914 -123.75761414]
[164.97122192 -137.73040771]
[170.42657471 -151.70321655]
[175.88192749 -165.67601013]
[169.78245544 -180.00898743]
[175.51400757 -194.10166931]
[189.21589661 -199.82826233]
[194.67124939 -213.80107117]
[200.12660217 -227.77386475]
[205.58197021 -241.74665833]
[205.78791809 -250.87876892]
[211.22396851 -255.88589478]
[209.26904297 -271.58584595]
[221.23858643 -280.45034790]
[226.90136719 -294.34036255]
[232.56414795 -308.23040771]
[230.60922241 -323.93035889]
[242.57876587 -332.79486084]
[248.24156189 -346.68487549]
[253.90434265 -360.57492065]
[241.10462952 -368.46270752]
[229.77787781 -378.34979248]
[220.23307800 -389.96643066]
[212.73062134 -402.99575806]
[207.47520447 -417.08230591]
[204.61016846 -431.84173584]
[204.21369934 -446.87145996]
[206.29658508 -461.76144409]
[210.80203247 -476.10546875]
[217.60710144 -489.51220703]
[226.52616882 -501.61593628]
[237.31590271 -512.08642578]
[249.68194580 -520.63812256]
[263.28695679 -527.03759766]
[277.75979614 -531.11035156]
[292.70556641 -532.74523926]
[307.71661377 -531.89770508]
[322.38342285 -528.59082031]
[336.30581665 -522.91485596]
[349.10400391 -515.02459717]
[360.42886353 -505.13531494]
[369.97140503 -493.51684570]
[377.47134399 -480.48605347]
[382.72406006 -466.39852905]
[385.58624268 -451.63851929]
[385.97982788 -436.60870361]
[383.89407349 -421.71914673]
[379.38586426 -407.37597656]
[372.57821655 -393.97055054]
[363.65679932 -381.86856079]
[352.86505127 -371.40011597]
[340.49737549 -362.85086060]
[326.89111328 -356.45397949]
[312.41751099 -352.38403320]
[297.47140503 -350.75201416]
[282.46051025 -351.60244751]
[267.79437256 -354.91213989]
[262.13159180 -341.02209473]
[256.46881104 -327.13208008]
[258.82876587 -312.42562866]
[246.45417786 -302.56762695]
[240.79139709 -288.67758179]
[235.12860107 -274.78756714]
[237.48857117 -260.08111572]
[225.11398315 -250.22309875]
[219.55476379 -236.29130554]
[214.09941101 -222.31851196]
[208.64404297 -208.34570312]
[203.18869019 -194.37290955]
[209.38569641 -180.87725830]
[204.05223083 -166.62913513]
[189.85473633 -160.22065735]
[184.39936829 -146.24784851]
[178.94401550 -132.27505493]
[173.48866272 -118.30226135]
[176.06732178 -103.63256836]
[163.84088135 -93.59141541]
[158.38552856 -79.61862183]
[160.96418762 -64.94892883]
[148.73774719 -54.90777969]
[144.12373352 -40.63504410]
[140.36743164 -26.11298561]
[136.61112976 -11.59092712]
[132.85482788 2.93113208]
[129.09854126 17.45319176]
[125.34223175 31.97525024]
[121.58592987 46.49731064]
[117.82963562 61.01936722]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[110.06642914 125.18223572]
[106.63883209 137.20036316]
[96.28421783 143.45404053]
[100.09093475 158.81045532]
[89.25958252 169.03450012]
[85.28748322 183.49902344]
[90.35518646 201.20211792]
[77.39784241 213.03741455]
[73.64154053 227.55947876]
[69.88523865 242.08154297]
[66.12893677 256.60360718]
[62.37263870 271.12564087]
[58.61633682 285.64770508]
[60.01203918 292.11019897]
[58.20571136 297.49853516]
[54.52596664 300.54293823]
[50.33895493 314.94671631]
[46.15194321 329.35052490]
[50.95550537 347.12710571]
[37.82339096 358.76815796]
[33.85129166 373.23269653]
[29.87919617 387.69720459]
[26.44813538 402.29953003]
[23.56286240 417.01943970]
[20.67759132 431.73931885]
[17.79231834 446.45922852]
[14.90704536 461.17910767]
[12.79242134 476.02929688]
[11.45418739 490.96948242]
[10.11595345 505.90966797]
[8.77771854 520.84985352]
[22.89729309 526.19213867]
[35.05125427 535.14672852]
[44.33769989 547.04901123]
[50.06751251 561.01580811]
[51.81550217 576.01068115]
[49.45195770 590.92095947]
[43.15226746 604.64019775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 203]
[15 202]
[16 201]
[17 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[35 194]
[36 193]
[37 192]
[40 190]
[41 189]
[42 188]
[43 185]
[44 184]
[45 183]
[46 182]
[47 181]
[48 180]
[51 178]
[52 177]
[54 175]
[56 172]
[58 170]
[59 169]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[76 160]
[78 158]
[79 157]
[81 155]
[82 154]
[83 153]
[84 152]
[87 149]
[88 148]
[89 147]
[90 146]
[92 145]
[94 143]
[95 142]
[96 141]
[98 139]
[99 138]
[100 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
