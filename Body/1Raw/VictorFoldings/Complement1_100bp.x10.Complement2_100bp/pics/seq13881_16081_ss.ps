%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[65.48784637 943.42761230]
[50.48556137 943.18353271]
[35.52285004 942.06756592]
[20.65034485 940.08349609]
[5.91836405 937.23797607]
[-8.62324142 933.54071045]
[-22.92526627 929.00421143]
[-36.93931961 923.64373779]
[-50.61797714 917.47753906]
[-63.91495895 910.52636719]
[-76.78527069 902.81384277]
[-89.18536377 894.36602783]
[-101.07328033 885.21148682]
[-112.40879059 875.38122559]
[-123.15354156 864.90844727]
[-133.27117920 853.82867432]
[-142.72746277 842.17938232]
[-151.49040222 829.99993896]
[-159.53033447 817.33154297]
[-166.82006836 804.21710205]
[-173.33493042 790.70104980]
[-179.05288696 776.82904053]
[-183.95455933 762.64801025]
[-188.02340698 748.20593262]
[-191.24562073 733.55175781]
[-193.61032104 718.73498535]
[-195.10949707 703.80578613]
[-195.73808289 688.81469727]
[-195.49395752 673.81243896]
[-194.37792969 658.84973145]
[-192.39378357 643.97723389]
[-189.54823303 629.24523926]
[-185.85090637 614.70367432]
[-181.31431580 600.40167236]
[-175.95381165 586.38763428]
[-169.78752136 572.70898438]
[-162.83633423 559.41204834]
[-155.12374878 546.54174805]
[-146.67587280 534.14172363]
[-137.52128601 522.25384521]
[-127.69096375 510.91836548]
[-117.21817780 500.17364502]
[-106.13835144 490.05606079]
[-94.48899078 480.59982300]
[-82.30950165 471.83694458]
[-69.64110565 463.79705811]
[-56.52666092 456.50738525]
[-43.01054764 449.99258423]
[-29.13849640 444.27468872]
[-14.95744896 439.37304688]
[-0.51538843 435.30429077]
[14.13881779 432.08212280]
[28.95558357 429.71746826]
[43.88477325 428.21835327]
[58.87586975 427.58984375]
[73.87815094 427.83404541]
[74.99379730 412.87557983]
[76.10945129 397.91711426]
[77.22509766 382.95867920]
[78.34074402 368.00021362]
[79.45639801 353.04177856]
[80.57204437 338.08331299]
[81.68769073 323.12484741]
[82.80334473 308.16641235]
[83.91899109 293.20794678]
[68.20232391 287.99990845]
[54.34583282 278.91815186]
[43.28521729 266.56958008]
[35.76902008 251.78192139]
[32.30796432 235.54823303]
[33.14025879 218.96018982]
[38.21519089 203.13471985]
[47.19621277 189.13879395]
[59.48323441 177.91744995]
[74.25272369 170.23001099]
[90.51290131 166.59870911]
[90.95951080 151.60534668]
[91.40611267 136.61199951]
[76.28675079 129.18861389]
[65.92417145 115.91010284]
[62.39707184 99.44008636]
[66.41297913 83.08238220]
[77.16631317 70.11829376]
[92.50000000 63.14835358]
[92.50000000 48.14835358]
[92.50000000 33.14835358]
[92.50000000 18.14835548]
[92.50000000 3.14835501]
[91.60718536 -11.82505035]
[89.82471466 -26.71876717]
[80.50234985 -39.50172806]
[86.67243195 -53.05825043]
[71.82779694 -55.97233582]
[58.61119080 -63.33280945]
[48.31745529 -74.41857147]
[41.95505524 -88.14355469]
[40.14731979 -103.16311646]
[43.07135010 -118.00579834]
[50.44067764 -131.21746826]
[61.53333664 -141.50376892]
[75.26257324 -147.85697937]
[90.28334808 -149.65464783]
[105.12406921 -146.72067261]
[118.33079529 -139.34249878]
[128.60966492 -128.24295044]
[134.95367432 -114.50945282]
[136.74127197 -99.48748016]
[133.79734802 -84.64872742]
[126.41032410 -71.44694519]
[115.30389404 -61.17551422]
[101.56615448 -54.84071732]
[110.76102448 -43.12305832]
[104.71843719 -28.50123405]
[106.50090027 -13.60751629]
[114.96426392 -25.99184036]
[129.05139160 -31.14479065]
[143.50813293 -27.14444542]
[152.94247437 -15.48283291]
[153.83564758 -0.50944871]
[145.85450745 12.19100666]
[131.97584534 17.88157654]
[117.37603760 14.43982124]
[107.50000000 3.14835501]
[107.50000000 18.14835548]
[107.50000000 33.14835358]
[107.50000000 48.14835358]
[107.50000000 63.14835358]
[119.56060028 67.88027954]
[129.29974365 76.42418671]
[135.56156921 87.76608276]
[137.60293579 100.55991364]
[135.18154907 113.28729248]
[128.58480835 124.43772125]
[118.59560394 132.68788147]
[106.39946747 137.05860901]
[105.95285797 152.05195618]
[105.50624847 167.04530334]
[118.58407593 170.44769287]
[130.65449524 176.50840759]
[141.18428040 184.95661926]
[149.70892334 195.41612244]
[155.85310364 207.42201233]
[159.34722900 220.44145203]
[160.03924561 233.89720154]
[157.90127563 247.19335938]
[153.03071594 259.74160767]
[145.64581299 270.98730469]
[136.07585144 280.43408203]
[124.74652863 287.66555786]
[112.16098022 292.36386108]
[98.87744141 294.32360840]
[97.76179504 309.28204346]
[96.64614868 324.24050903]
[95.53049469 339.19897461]
[94.41484833 354.15740967]
[93.29920197 369.11587524]
[92.18354797 384.07431030]
[91.06790161 399.03277588]
[89.95225525 413.99124146]
[88.83660889 428.94967651]
[103.70912933 430.93365479]
[118.44113159 433.77902222]
[132.98277283 437.47616577]
[147.28483582 442.01257324]
[161.29893494 447.37289429]
[174.97764587 453.53900146]
[188.27467346 460.49005127]
[201.14505005 468.20245361]
[213.54521179 476.65020752]
[225.43321228 485.80462646]
[236.76879883 495.63479614]
[247.51364136 506.10745239]
[257.63137817 517.18713379]
[267.08773804 528.83642578]
[275.85079956 541.01580811]
[283.89083862 553.68408203]
[291.18066406 566.79846191]
[297.69564819 580.31445312]
[303.41369629 594.18646240]
[308.31552124 608.36743164]
[312.38446045 622.80944824]
[315.60681152 637.46362305]
[317.97161865 652.28033447]
[319.47094727 667.20953369]
[320.09963989 682.20062256]
[319.85562134 697.20288086]
[318.73971558 712.16558838]
[316.75570679 727.03814697]
[313.91027832 741.77014160]
[310.21307373 756.31170654]
[305.67660522 770.61376953]
[300.31622314 784.62786865]
[294.15005493 798.30651855]
[287.19894409 811.60357666]
[279.48648071 824.47387695]
[271.03869629 836.87402344]
[261.88421631 848.76196289]
[252.05398560 860.09753418]
[241.58128357 870.84234619]
[230.50155640 880.96002197]
[218.85226440 890.41632080]
[206.67285156 899.17932129]
[194.00451660 907.21929932]
[180.89013672 914.50909424]
[167.37408447 921.02404785]
[153.50207520 926.74200439]
[139.32106018 931.64373779]
[124.87904358 935.71264648]
[110.22486115 938.93493652]
[95.40811157 941.29968262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[61 155]
[62 154]
[63 153]
[64 152]
[65 151]
[76 137]
[77 136]
[78 135]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 114]
[90 113]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
