%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[128.51287842 643.07678223]
[115.70019531 635.26776123]
[103.39778137 626.67718506]
[91.65323639 617.33843994]
[80.51200104 607.28759766]
[70.01717377 596.56359863]
[60.20935822 585.20782471]
[51.12650299 573.26428223]
[42.80374908 560.77917480]
[35.27328873 547.80078125]
[28.56426239 534.37933350]
[22.70262337 520.56671143]
[17.71105003 506.41641235]
[13.60885239 491.98318481]
[10.41190338 477.32281494]
[8.13257122 462.49206543]
[6.77967262 447.54830933]
[6.35844326 432.54934692]
[6.87051201 417.55319214]
[8.31389809 402.61788940]
[10.68301678 387.80120850]
[13.96870327 373.16049194]
[18.15824509 358.75238037]
[23.23543358 344.63256836]
[29.18062592 330.85574341]
[35.97082138 317.47515869]
[43.57975006 304.54260254]
[51.97797394 292.10812378]
[61.13300323 280.21981812]
[71.00941467 268.92367554]
[81.56900787 258.26339722]
[92.77091217 248.28021240]
[104.57180786 239.01277161]
[116.92602539 230.49691772]
[129.78578186 222.76559448]
[143.10130310 215.84872437]
[130.87313843 207.34452820]
[132.35975647 191.59332275]
[126.28591919 177.87806702]
[120.21208954 164.16279602]
[114.13825226 150.44752502]
[108.06441498 136.73225403]
[91.22176361 136.56823730]
[76.13999176 129.06877136]
[65.84444427 115.73822021]
[62.40037155 99.25064087]
[66.49864197 82.91337585]
[77.31715393 70.00363159]
[70.83766174 56.47528458]
[64.35816193 42.94693756]
[51.41876221 33.84295654]
[52.89920044 19.02210808]
[46.41970444 5.49376345]
[39.94020844 -8.03458214]
[33.46071243 -21.56292725]
[21.57704926 -26.57704353]
[16.45877075 -37.97822571]
[20.35213470 -49.43109894]
[14.07477474 -63.05441666]
[7.79741383 -76.67773438]
[1.52005315 -90.30104828]
[-4.75730753 -103.92436218]
[-18.98409271 -99.12532806]
[-33.64038849 -95.86573029]
[-48.56013489 -94.18248749]
[-63.57427597 -94.09467316]
[-78.51268768 -95.60329437]
[-93.20610809 -98.69124603]
[-107.48805237 -103.32354736]
[-121.19669342 -109.44770813]
[-134.17669678 -116.99433136]
[-146.28099060 -125.87791443]
[-157.37243652 -135.99780273]
[-167.32534790 -147.23931885]
[-176.02694702 -159.47508240]
[-183.37864685 -172.56648254]
[-189.29714966 -186.36515808]
[-193.71537781 -200.71476746]
[-196.58328247 -215.45272827]
[-197.86837769 -230.41201782]
[-197.55607605 -245.42317200]
[-195.64993286 -260.31607056]
[-192.17155457 -274.92199707]
[-187.16033936 -289.07543945]
[-180.67306519 -302.61602783]
[-172.78324890 -315.39031982]
[-163.58027649 -327.25360107]
[-153.16844177 -338.07144165]
[-141.66571045 -347.72128296]
[-129.20240784 -356.09375000]
[-115.91976929 -363.09399414]
[-101.96828461 -368.64270020]
[-87.50603485 -372.67700195]
[-72.69689941 -375.15118408]
[-57.70866776 -376.03720093]
[-42.71117020 -375.32501221]
[-27.87434196 -373.02270508]
[-13.36629391 -369.15637207]
[0.64858580 -363.76977539]
[14.01149845 -356.92401123]
[26.57103157 -348.69659424]
[38.18487930 -339.18078613]
[48.72143936 -328.48440552]
[58.06133270 -316.72860718]
[66.09873199 -304.04663086]
[72.74256134 -290.58218384]
[77.91754150 -276.48779297]
[81.56504059 -261.92318726]
[83.64372253 -247.05337524]
[84.13004303 -232.04685974]
[83.01848602 -217.07366943]
[80.32164764 -202.30345154]
[76.07008362 -187.90357971]
[70.31196594 -174.03721619]
[63.11254883 -160.86146545]
[54.55339432 -148.52561951]
[44.73149109 -137.16946411]
[33.75812912 -126.92166138]
[21.75764465 -117.89833832]
[8.86600876 -110.20172119]
[15.14336967 -96.57840729]
[21.42073059 -82.95509338]
[27.69809151 -69.33177948]
[33.97545242 -55.70845795]
[48.82989502 -46.36434555]
[46.98905563 -28.04242325]
[53.46855164 -14.51407814]
[59.94804764 -0.98573256]
[66.42754364 12.54261303]
[78.90348816 20.67895508]
[77.88651276 36.46744156]
[84.36600494 49.99578857]
[90.84549713 63.52413177]
[103.76686096 62.58203125]
[116.24117279 66.08071136]
[126.78797150 73.60495758]
[134.15556335 84.26177979]
[137.46954346 96.78642273]
[136.33662415 109.69245148]
[130.89125061 121.44818115]
[121.77968597 130.65843201]
[127.85351562 144.37368774]
[133.92735291 158.08895874]
[140.00119019 171.80422974]
[146.07502747 185.51948547]
[158.73762512 195.00468445]
[156.81657410 209.77488708]
[170.88745117 204.56364441]
[185.25508118 200.23725891]
[199.86389160 196.81248474]
[214.65736389 194.30255127]
[229.57826233 192.71719360]
[244.56884766 192.06251526]
[259.57113647 192.34107971]
[274.52709961 193.55178833]
[289.37887573 195.68997192]
[304.06896973 198.74734497]
[318.54055786 202.71209717]
[332.73770142 207.56886292]
[346.60540771 213.29887390]
[360.09005737 219.87994385]
[373.13949585 227.28663635]
[385.70318604 235.49026489]
[397.73257446 244.45912170]
[409.18112183 254.15849304]
[420.00448608 264.55084229]
[430.16082764 275.59600830]
[439.61083984 287.25119019]
[448.31799316 299.47134399]
[456.24856567 312.20919800]
[463.37188721 325.41543579]
[469.66040039 339.03897095]
[475.08978271 353.02713013]
[479.63900757 367.32577515]
[483.29049683 381.87957764]
[486.03012085 396.63223267]
[487.84725952 411.52667236]
[488.73489380 426.50527954]
[488.68960571 441.51010132]
[487.71154785 456.48306274]
[485.80453491 471.36627197]
[482.97592163 486.10211182]
[479.23663330 500.63363647]
[474.60116577 514.90454102]
[469.08746338 528.85968018]
[462.71682739 542.44500732]
[455.51391602 555.60797119]
[447.50659180 568.29772949]
[438.72583008 580.46508789]
[429.20562744 592.06304932]
[418.98278809 603.04669189]
[408.09689331 613.37353516]
[396.59002686 623.00360107]
[384.50671387 631.89965820]
[371.89370728 640.02728271]
[358.79980469 647.35510254]
[345.27566528 653.85461426]
[331.37359619 659.50085449]
[317.14743042 664.27178955]
[302.65216064 668.14910889]
[287.94387817 671.11773682]
[273.07946777 673.16625977]
[258.11648560 674.28662109]
[243.11277771 674.47467041]
[228.12640381 673.72949219]
[213.21534729 672.05407715]
[198.43730164 669.45489502]
[183.84942627 665.94201660]
[169.50816345 661.52899170]
[155.46900940 656.23284912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 147]
[38 145]
[39 144]
[40 143]
[41 142]
[42 141]
[48 133]
[49 132]
[50 131]
[52 129]
[53 128]
[54 127]
[55 126]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
