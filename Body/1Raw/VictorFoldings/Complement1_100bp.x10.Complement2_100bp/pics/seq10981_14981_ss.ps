%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[158.31909180 375.79568481]
[157.03025818 360.84063721]
[157.10671997 345.83032227]
[158.54783630 330.88916016]
[161.34165955 316.14093018]
[165.46505737 301.70788574]
[170.88385010 287.70959473]
[177.55313110 274.26208496]
[185.41764832 261.47674561]
[194.41221619 249.45956421]
[204.46231079 238.31008911]
[215.48464966 228.12072754]
[206.34585571 216.22608948]
[197.20704651 204.33145142]
[188.06825256 192.43682861]
[177.74157715 181.55749512]
[166.33911133 171.81152344]
[162.81433105 171.72088623]
[159.15832520 169.91848755]
[156.17515564 166.36123657]
[154.65771484 161.36679077]
[143.70181274 151.12139893]
[132.74589539 140.87602234]
[121.78999329 130.63063049]
[110.83408356 120.38523102]
[99.87817383 110.13983917]
[92.30773163 107.37200165]
[88.83685303 99.65941620]
[78.03469849 89.25204468]
[67.23254395 78.84467316]
[54.34571075 78.30397034]
[45.56282425 69.41326141]
[45.20425415 57.32202911]
[36.90899658 53.49756622]
[34.47987366 46.51750946]
[23.99237251 35.79313278]
[13.50487137 25.06875229]
[3.01737022 14.34437180]
[-7.47013092 3.61999202]
[-18.97136497 13.26075840]
[-31.17684746 21.99282074]
[-44.01495361 29.76493454]
[-57.41034698 36.53149033]
[-71.28440857 42.25277710]
[-85.55572510 46.89522171]
[-100.14054108 50.43157959]
[-114.95326996 52.84109497]
[-129.90698242 54.10963440]
[-144.91392517 54.22974396]
[-159.88603210 53.20072937]
[-174.73542786 51.02861786]
[-189.37498474 47.72616577]
[-203.71878052 43.31275177]
[-217.68264771 37.81427002]
[-231.18463135 31.26299667]
[-244.14549255 23.69737053]
[-256.48919678 15.16179466]
[-268.14324951 5.70635748]
[-279.03933716 -4.61345148]
[-289.11343384 -15.73707008]
[-298.30648804 -27.59922028]
[-306.56451416 -40.13029099]
[-313.83908081 -53.25674057]
[-320.08746338 -66.90153503]
[-325.27297974 -80.98461151]
[-329.36526489 -95.42331696]
[-332.34024048 -110.13291168]
[-334.18048096 -125.02707672]
[-334.87515259 -140.01841736]
[-334.42022705 -155.01893616]
[-332.81835938 -169.94062805]
[-330.07891846 -184.69590759]
[-326.21801758 -199.19819641]
[-321.25830078 -213.36236572]
[-315.22888184 -227.10531616]
[-308.16510010 -240.34638977]
[-300.10848999 -253.00788879]
[-291.10626221 -265.01550293]
[-281.21124268 -276.29873657]
[-270.48156738 -286.79144287]
[-258.98016357 -296.43197632]
[-246.77450562 -305.16381836]
[-233.93624878 -312.93569946]
[-220.54072571 -319.70199585]
[-206.66656494 -325.42300415]
[-192.39515686 -330.06518555]
[-177.81027222 -333.60128784]
[-162.99749756 -336.01049805]
[-148.04376221 -337.27874756]
[-133.03681946 -337.39859009]
[-118.06472778 -336.36929321]
[-103.21537018 -334.19689941]
[-88.57587433 -330.89416504]
[-74.23216248 -326.48046875]
[-60.26840591 -320.98175049]
[-46.76654816 -314.43020630]
[-33.80582428 -306.86431885]
[-21.46229553 -298.32852173]
[-9.80840015 -288.87286377]
[1.08747172 -278.55285645]
[11.16137886 -267.42904663]
[20.35420227 -255.56671143]
[28.61199379 -243.03549194]
[35.88629532 -229.90890503]
[42.13441086 -216.26397705]
[47.31968307 -202.18081665]
[51.41167831 -187.74203491]
[54.38637924 -173.03237915]
[56.22633362 -158.13818359]
[56.92074203 -143.14682007]
[56.46552658 -128.14631653]
[54.86336517 -113.22465515]
[52.12365341 -98.46942902]
[48.26247406 -83.96721649]
[43.30248642 -69.80313110]
[37.27279282 -56.06029892]
[30.20878220 -42.81935883]
[22.15190887 -30.15801620]
[13.14945412 -18.15057945]
[3.25424886 -6.86750889]
[13.74174976 3.85687065]
[24.22925186 14.58125019]
[34.71675110 25.30562973]
[45.20425415 36.03001022]
[55.77130127 46.67601776]
[72.95580292 50.23407364]
[77.63991547 68.04251862]
[88.44207001 78.44989014]
[99.24422455 88.85726166]
[110.12356567 99.18392944]
[121.07947540 109.42932129]
[132.03538513 119.67471313]
[142.99128723 129.92010498]
[153.94720459 140.16549683]
[164.90310669 150.41088867]
[176.08508301 160.40905762]
[187.48754883 170.15502930]
[182.61618042 155.96806335]
[183.46801758 140.99227905]
[189.91670227 127.44921875]
[201.00559998 117.34792328]
[215.08975220 112.18685913]
[230.07986450 112.73164368]
[243.75222778 118.90145874]
[254.07862854 129.78105164]
[259.52719116 143.75648499]
[259.28970337 158.75460815]
[253.40135193 172.55052185]
[242.73565674 183.09768677]
[228.87480164 188.83151245]
[213.87495422 188.90139771]
[199.96287537 183.29801941]
[209.10168457 195.19265747]
[218.24049377 207.08728027]
[227.37928772 218.98191833]
[240.06430054 210.95660400]
[253.42655945 204.11807251]
[267.35531616 198.52297974]
[281.73513794 194.21768188]
[296.44689941 191.23786926]
[311.36868286 189.60821533]
[326.37683105 189.34225464]
[341.34698486 190.44216919]
[356.15509033 192.89884949]
[370.67843628 196.69192505]
[384.79669189 201.78999329]
[398.39285278 208.15078735]
[411.35424805 215.72160339]
[423.57348633 224.43971252]
[434.94931030 234.23286438]
[445.38748169 245.01989746]
[454.80145264 256.71145630]
[463.11322021 269.21063232]
[470.25396729 282.41384888]
[476.16445923 296.21173096]
[480.79574585 310.48992920]
[484.10943604 325.13009644]
[486.07809448 340.01092529]
[486.68539429 355.00915527]
[485.92630005 370.00045776]
[483.80709839 384.86059570]
[480.34536743 399.46649170]
[475.56976318 413.69705200]
[469.51989746 427.43438721]
[462.24588013 440.56463623]
[453.80798340 452.97903442]
[444.27615356 464.57470703]
[433.72933960 475.25552368]
[422.25494385 484.93301392]
[409.94808960 493.52697754]
[396.91070557 500.96618652]
[383.25085449 507.18902588]
[369.08169556 512.14392090]
[354.52069092 515.78979492]
[339.68847656 518.09643555]
[324.70797729 519.04473877]
[309.70327759 518.62683105]
[294.79876709 516.84625244]
[280.11791992 513.71765137]
[265.78240967 509.26699829]
[251.91101074 503.53118896]
[238.61866760 496.55770874]
[226.01554871 488.40441895]
[214.20606995 479.13879395]
[203.28810120 468.83767700]
[193.35209656 457.58639526]
[184.48040771 445.47821045]
[176.74655151 432.61343384]
[170.21459961 419.09866333]
[164.93869019 405.04589844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 155]
[13 154]
[14 153]
[15 152]
[16 137]
[17 136]
[21 135]
[22 134]
[23 133]
[24 132]
[25 131]
[26 130]
[28 129]
[29 128]
[30 127]
[33 125]
[35 124]
[36 123]
[37 122]
[38 121]
[39 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
