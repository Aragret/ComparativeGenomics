%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[61.08742142 831.86553955]
[46.08795166 831.57574463]
[31.11429405 830.64965820]
[16.19343567 829.08892822]
[1.35225940 826.89630127]
[-13.38248634 824.07580566]
[-27.98424911 820.63244629]
[-42.42671585 816.57250977]
[-56.68386078 811.90325928]
[-70.72998810 806.63311768]
[-84.53979492 800.77160645]
[-98.08837891 794.32928467]
[-111.35134125 787.31768799]
[-124.30477142 779.74957275]
[-136.92533875 771.63848877]
[-149.19027710 762.99908447]
[-161.07749939 753.84692383]
[-172.56558228 744.19854736]
[-183.63383484 734.07122803]
[-194.26228333 723.48333740]
[-204.43179321 712.45385742]
[-214.12403870 701.00274658]
[-223.32156372 689.15057373]
[-232.00776672 676.91870117]
[-240.16700745 664.32928467]
[-247.78459167 651.40484619]
[-254.84677124 638.16876221]
[-261.34085083 624.64489746]
[-267.25509644 610.85760498]
[-272.57885742 596.83172607]
[-277.30255127 582.59252930]
[-281.41766357 568.16564941]
[-284.91677856 553.57714844]
[-287.79357910 538.85333252]
[-290.04290771 524.02062988]
[-291.66067505 509.10583496]
[-292.64398193 494.13583374]
[-292.99105835 479.13757324]
[-292.70126343 464.13812256]
[-291.77514648 449.16445923]
[-290.21435547 434.24359131]
[-288.02172852 419.40243530]
[-285.20120239 404.66769409]
[-281.75784302 390.06591797]
[-277.69784546 375.62347412]
[-273.02859497 361.36633301]
[-267.75842285 347.32022095]
[-261.89691162 333.51040649]
[-255.45452881 319.96182251]
[-248.44296265 306.69888306]
[-240.87480164 293.74545288]
[-232.76370239 281.12490845]
[-224.12428284 268.85998535]
[-214.97212219 256.97277832]
[-205.32368469 245.48471069]
[-195.19636536 234.41648865]
[-184.60844421 223.78804016]
[-173.57896423 213.61854553]
[-162.12780762 203.92631531]
[-150.27563477 194.72882080]
[-138.04377747 186.04263306]
[-125.45429993 177.88342285]
[-112.52987671 170.26585388]
[-99.29379272 163.20368958]
[-85.76991272 156.70964050]
[-71.98259735 150.79541016]
[-57.95670319 145.47166443]
[-43.71749878 140.74800110]
[-29.29064751 136.63290405]
[-14.70214367 133.13381958]
[0.02172013 130.25703430]
[14.85441208 128.00775146]
[29.76920128 126.39000702]
[44.73921204 125.40673065]
[59.73746490 125.05967712]
[74.73693085 125.34947968]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[89.11119080 57.63361740]
[98.13059235 45.78035736]
[99.69110870 30.86175346]
[101.25163269 15.94314861]
[102.81215668 1.02454352]
[88.21219635 -2.51445794]
[74.21422577 -7.96792746]
[61.06806564 -15.23854160]
[49.00831604 -24.19654846]
[38.25019836 -34.68207932]
[28.98570824 -46.50801086]
[21.38017845 -59.46329498]
[15.56933880 -73.31672668]
[11.65689087 -87.82107544]
[9.71265697 -102.71749878]
[9.77133465 -117.74015045]
[11.83187580 -132.62092590]
[15.85750771 -147.09426880]
[21.77638817 -160.90188599]
[29.48288918 -173.79736328]
[38.83947754 -185.55056763]
[49.67917633 -195.95173645]
[61.80853653 -204.81526184]
[75.01109314 -211.98295593]
[89.05123901 -217.32691956]
[103.67839813 -220.75175476]
[118.63154602 -222.19636536]
[133.64381409 -221.63496399]
[148.44729614 -219.07757568]
[162.77781677 -214.56980896]
[176.37960815 -208.19215393]
[189.00994873 -200.05839539]
[200.44343567 -190.31370544]
[210.47601318 -179.13198853]
[218.92863464 -166.71279907]
[225.65046692 -153.27775574]
[230.52156067 -139.06663513]
[233.45495605 -124.33304596]
[234.39833069 -109.33992767]
[233.33482361 -94.35485840]
[230.28343201 -79.64524841]
[225.29861450 -65.47362518]
[218.46931458 -52.09288788]
[209.91741943 -39.74183273]
[199.79554749 -28.64087868]
[188.28433228 -18.98813820]
[175.58921814 -10.95587254]
[161.93673706 -4.68742895]
[147.57055664 -0.29467398]
[132.74705505 2.14399815]
[117.73076630 2.58506656]
[116.17024231 17.50367165]
[114.60971832 32.42227554]
[113.04919434 47.34088135]
[119.42042542 60.80403900]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[119.47037506 130.02871704]
[134.20512390 132.84918213]
[148.80690002 136.29246521]
[163.24937439 140.35237122]
[177.50654602 145.02157593]
[191.55268860 150.29165649]
[205.36250305 156.15312195]
[218.91111755 162.59542847]
[232.17410278 169.60693359]
[245.12756348 177.17503357]
[257.74813843 185.28607178]
[270.01312256 193.92543030]
[281.90036011 203.07754517]
[293.38848877 212.72592163]
[304.45675659 222.85317993]
[315.08523560 233.44105530]
[325.25479126 244.47048950]
[334.94708252 255.92158508]
[344.14462280 267.77371216]
[352.83087158 280.00552368]
[360.99017334 292.59497070]
[368.60778809 305.51937866]
[375.67001343 318.75540161]
[382.16412354 332.27926636]
[388.07843018 346.06655884]
[393.40222168 360.09240723]
[398.12597656 374.33160400]
[402.24111938 388.75842285]
[405.74029541 403.34692383]
[408.61712646 418.07077026]
[410.86648560 432.90344238]
[412.48431396 447.81823730]
[413.46768188 462.78823853]
[413.81478882 477.78649902]
[413.52505493 492.78594971]
[412.59899902 507.75961304]
[411.03826904 522.68048096]
[408.84567261 537.52166748]
[406.02517700 552.25640869]
[402.58187866 566.85815430]
[398.52194214 581.30065918]
[393.85272217 595.55780029]
[388.58261108 609.60394287]
[382.72109985 623.41375732]
[376.27877808 636.96234131]
[369.26727295 650.22534180]
[361.69915771 663.17877197]
[353.58810425 675.79931641]
[344.94869995 688.06427002]
[335.79656982 699.95153809]
[326.14816284 711.43963623]
[316.02090454 722.50787354]
[305.43301392 733.13635254]
[294.40356445 743.30590820]
[282.95245361 752.99816895]
[271.10031128 762.19567871]
[258.86846924 770.88189697]
[246.27902222 779.04119873]
[233.35461426 786.65881348]
[220.11856079 793.72100830]
[206.59469604 800.21508789]
[192.80740356 806.12933350]
[178.78152466 811.45312500]
[164.54232788 816.17687988]
[150.11549377 820.29199219]
[135.52700806 823.79113770]
[120.80314636 826.66796875]
[105.97046661 828.91729736]
[91.05567932 830.53509521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 141]
[78 140]
[80 138]
[81 137]
[83 135]
[84 134]
[85 133]
[86 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
