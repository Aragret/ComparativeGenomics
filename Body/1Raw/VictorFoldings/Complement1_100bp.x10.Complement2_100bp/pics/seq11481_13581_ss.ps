%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[124.67597961 864.44360352]
[109.82186127 862.33880615]
[95.07624817 859.57440186]
[80.46842194 856.15588379]
[66.02738190 852.08996582]
[51.78179932 847.38482666]
[37.75995255 842.04980469]
[23.98969078 836.09539795]
[10.49834728 829.53350830]
[-2.68729043 822.37707520]
[-15.54104328 814.64044189]
[-28.03739166 806.33886719]
[-40.15152740 797.48883057]
[-51.85939407 788.10797119]
[-63.13774872 778.21484375]
[-73.96420288 767.82916260]
[-84.31725311 756.97143555]
[-94.17635345 745.66333008]
[-103.52192688 733.92730713]
[-112.33541870 721.78656006]
[-120.59932709 709.26525879]
[-128.29724121 696.38824463]
[-135.41389465 683.18115234]
[-141.93513489 669.67010498]
[-147.84803772 655.88195801]
[-153.14083862 641.84411621]
[-157.80305481 627.58441162]
[-161.82540894 613.13122559]
[-165.19993591 598.51312256]
[-167.91990662 583.75927734]
[-169.97994995 568.89886475]
[-171.37596130 553.96148682]
[-172.10517883 538.97668457]
[-172.16613770 523.97430420]
[-171.55873108 508.98413086]
[-170.28416443 494.03588867]
[-168.34495544 479.15924072]
[-165.74496460 464.38375854]
[-162.48934937 449.73873901]
[-158.58457947 435.25332642]
[-154.03840637 420.95620728]
[-148.85986328 406.87582397]
[-143.05920410 393.04006958]
[-136.64797974 379.47647095]
[-129.63890076 366.21194458]
[-122.04588318 353.27282715]
[-113.88400269 340.68478394]
[-105.16947174 328.47283936]
[-95.91958618 316.66119385]
[-86.15270996 305.27334595]
[-75.88823700 294.33187866]
[-65.14654541 283.85855103]
[-53.94895554 273.87408447]
[-42.31771088 264.39837646]
[-30.27589989 255.45021057]
[-17.84742928 247.04734802]
[-5.05697441 239.20648193]
[8.07007027 231.94317627]
[21.50764084 225.27183533]
[35.22906113 219.20573425]
[49.20708466 213.75689697]
[63.41395950 208.93614197]
[77.82147980 204.75305176]
[92.40104675 201.21592712]
[107.12370300 198.33177185]
[104.89859009 183.49772644]
[102.67346954 168.66368103]
[100.44835663 153.82965088]
[98.22323608 138.99560547]
[95.99811554 124.16156006]
[93.77300262 109.32751465]
[84.92788696 121.44213104]
[70.39566040 125.15889740]
[56.82025909 118.77857208]
[50.40818024 105.21813965]
[54.09093857 90.67725372]
[66.18482208 81.80381775]
[81.16067505 82.65463257]
[92.17258453 92.84236908]
[91.50279999 77.85733032]
[90.83301544 62.87229538]
[90.16323090 47.88725662]
[82.88940430 61.00561905]
[70.95791626 70.09625244]
[56.37942886 73.62722015]
[41.61067581 71.00349426]
[29.14045334 62.66721344]
[21.07020760 50.02319717]
[18.75992012 35.20217896]
[22.59891510 20.70176315]
[31.94025421 8.96551991]
[45.20975876 1.97121608]
[60.17127991 0.89751333]
[74.30354309 5.92534971]
[85.22501373 16.20744705]
[91.09555054 30.01271629]
[93.32066345 15.17867279]
[95.54578400 0.34462923]
[81.60249329 -5.38669825]
[69.43638611 -14.28889847]
[59.75477219 -25.84440994]
[53.12053680 -39.38140869]
[49.91938400 -54.11287308]
[50.33742142 -69.18233490]
[54.35034943 -83.71367645]
[61.72486115 -96.86206055]
[72.03221130 -107.86306000]
[84.67313385 -116.07709503]
[98.91271973 -121.02660370]
[113.92308807 -122.42383575]
[128.83155823 -120.18755341]
[142.77137756 -114.44777679]
[154.93208313 -105.53820038]
[164.60668945 -93.97682190]
[171.23271179 -80.43580627]
[174.42494202 -65.70240021]
[173.99775696 -50.63319397]
[169.97602844 -36.10429001]
[162.59355164 -22.96037865]
[152.27952576 -11.96562958]
[139.63362122 -3.75926185]
[125.39104462 1.18161535]
[110.37982941 2.56974649]
[108.15470886 17.40378952]
[105.92959595 32.23783493]
[105.14826965 47.21747208]
[105.81805420 62.20251083]
[106.48783875 77.18754578]
[107.15762329 92.17258453]
[108.60704803 107.10239410]
[110.83216095 121.93643951]
[113.05728149 136.77047729]
[115.28239441 151.60452271]
[117.50751495 166.43856812]
[119.73262787 181.27261353]
[121.95774841 196.10665894]
[136.87866211 194.54425049]
[151.85437012 193.64807129]
[166.85513306 193.41989136]
[181.85118103 193.86018372]
[196.81271362 194.96807861]
[211.71005249 196.74134827]
[226.51359558 199.17648315]
[241.19396973 202.26866150]
[255.72203064 206.01174927]
[270.06890869 210.39828491]
[284.20614624 215.41957092]
[298.10568237 221.06565857]
[311.73989868 227.32530212]
[325.08172607 234.18611145]
[338.10467529 241.63444519]
[350.78289795 249.65550232]
[363.09121704 258.23339844]
[375.00521851 267.35104370]
[386.50122070 276.99038696]
[397.55639648 287.13229370]
[408.14883423 297.75656128]
[418.25744629 308.84216309]
[427.86221313 320.36709595]
[436.94406128 332.30841064]
[445.48492432 344.64245605]
[453.46786499 357.34472656]
[460.87701416 370.39001465]
[467.69772339 383.75238037]
[473.91638184 397.40533447]
[479.52069092 411.32174683]
[484.49948120 425.47402954]
[488.84289551 439.83401489]
[492.54229736 454.37326050]
[495.59036255 469.06286621]
[497.98101807 483.87365723]
[499.70953369 498.77624512]
[500.77246094 513.74102783]
[501.16769409 528.73834229]
[500.89447021 543.73834229]
[499.95330811 558.71130371]
[498.34606934 573.62744141]
[496.07595825 588.45721436]
[493.14749146 603.17114258]
[489.56646729 617.73992920]
[485.33999634 632.13482666]
[480.47647095 646.32708740]
[474.98556519 660.28863525]
[468.87817383 673.99176025]
[462.16638184 687.40917969]
[454.86358643 700.51428223]
[446.98422241 713.28106689]
[438.54397583 725.68414307]
[429.55957031 737.69897461]
[420.04888916 749.30163574]
[410.03076172 760.46911621]
[399.52511597 771.17919922]
[388.55279541 781.41064453]
[377.13555908 791.14318848]
[365.29614258 800.35748291]
[353.05798340 809.03521729]
[340.44543457 817.15911865]
[327.48348999 824.71313477]
[314.19790649 831.68225098]
[300.61505127 838.05261230]
[286.76193237 843.81152344]
[272.66598511 848.94763184]
[258.35525513 853.45074463]
[243.85813904 857.31188965]
[229.20339966 860.52337646]
[214.42015076 863.07885742]
[199.53773499 864.97326660]
[184.58570862 866.20275879]
[169.59375000 866.76507568]
[154.59161377 866.65887451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[79 129]
[80 128]
[81 127]
[82 126]
[96 125]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
