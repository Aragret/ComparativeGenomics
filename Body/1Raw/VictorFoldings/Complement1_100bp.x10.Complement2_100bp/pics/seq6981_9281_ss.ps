%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[83.79567719 602.88818359]
[68.92261505 604.91259766]
[53.92795944 605.59564209]
[38.93244171 604.93176270]
[24.05679893 602.92639160]
[9.42080593 599.59564209]
[-4.85769606 594.96630859]
[-18.66374207 589.07568359]
[-31.88617325 581.97125244]
[-44.41852570 573.71008301]
[-56.15989685 564.35882568]
[-67.01574707 553.99267578]
[-76.89867401 542.69512939]
[-85.72910309 530.55718994]
[-93.43593597 517.67657471]
[-99.95711517 504.15692139]
[-105.24014282 490.10717773]
[-109.24248505 475.64038086]
[-111.93190002 460.87307739]
[-113.28675079 445.92416382]
[-113.29611969 430.91397095]
[-111.95993042 415.96334839]
[-109.28894806 401.19268799]
[-105.30467224 386.72094727]
[-100.03919220 372.66458130]
[-93.53488922 359.13681030]
[-85.84413910 346.24658203]
[-77.02886963 334.09759521]
[-67.16005707 322.78775024]
[-56.31715012 312.40808105]
[-44.58746338 303.04214478]
[-32.06542969 294.76538086]
[-18.85187912 287.64440918]
[-5.05319691 281.73657227]
[9.21951485 277.08941650]
[23.85133934 273.74038696]
[38.72446442 271.71646118]
[53.71914291 271.03387451]
[68.71463776 271.69818115]
[70.71865082 256.83267212]
[72.72266388 241.96713257]
[74.61595917 227.08709717]
[76.39842224 212.19337463]
[78.18089294 197.29966736]
[79.96335602 182.40594482]
[73.79327393 168.84942627]
[83.11563873 156.06645203]
[84.89810944 141.17274475]
[71.67272186 148.25010681]
[57.83387375 142.46336365]
[53.58305359 128.07829285]
[62.05380630 115.69901276]
[77.00180817 114.45108795]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.75795746 57.14196777]
[103.64323425 42.42207718]
[92.62946320 52.60524368]
[78.02182007 56.01356506]
[63.63869858 51.75611496]
[53.23981857 40.94578171]
[49.54342270 26.40835762]
[53.51573563 11.94389439]
[64.11840820 1.33336520]
[78.57992554 -2.64966226]
[93.12008667 1.03596568]
[103.93811798 11.42683506]
[108.20619202 25.80591011]
[113.24311066 11.67687988]
[118.28002167 -2.45214939]
[123.31694031 -16.58117867]
[128.35385132 -30.71020889]
[133.39077759 -44.83923721]
[135.72625732 -59.65630722]
[135.27964783 -74.64965820]
[121.40637207 -80.91809845]
[111.67014313 -92.54104614]
[107.96104431 -107.17876434]
[110.96281433 -121.91478729]
[120.02760315 -133.83699036]
[133.31480408 -140.61311340]
[132.86819458 -155.60646057]
[132.42160034 -170.59980774]
[121.37400055 -160.45333862]
[106.38231659 -160.95274353]
[96.03445435 -171.81192017]
[96.25814056 -186.81025696]
[106.92523956 -197.35600281]
[121.92514801 -197.40811157]
[132.66487122 -186.93756104]
[133.55767822 -201.91098022]
[134.45050049 -216.88438416]
[135.34330750 -231.85778809]
[136.23612976 -246.83119202]
[122.01683044 -251.92904663]
[109.81056213 -260.82757568]
[100.60682678 -272.80538940]
[95.15173340 -286.89151001]
[93.88749695 -301.94403076]
[96.91661835 -316.74270630]
[103.99352264 -330.08789062]
[114.54452515 -340.89776611]
[127.71430206 -348.29595947]
[142.43524170 -351.68280029]
[157.51397705 -350.78372192]
[171.72814941 -345.67156982]
[183.92547607 -336.76080322]
[193.11717224 -324.77374268]
[198.55810547 -310.68215942]
[199.80722046 -295.62835693]
[196.76322937 -280.83273315]
[189.67292786 -267.49465942]
[179.11106873 -256.69540405]
[165.93386841 -249.31042480]
[151.20953369 -245.93836975]
[150.31671143 -230.96496582]
[149.42390442 -215.99156189]
[148.53108215 -201.01815796]
[147.63827515 -186.04475403]
[147.41494751 -171.04641724]
[147.86154175 -156.05307007]
[148.30815125 -141.05970764]
[161.97512817 -135.08648682]
[171.73345947 -123.72495270]
[175.60700989 -109.19372559]
[172.77574158 -94.36119843]
[163.74858093 -82.17934418]
[150.27301025 -75.09626007]
[150.71960449 -60.10291290]
[156.95434570 -73.74578857]
[166.12971497 -85.61223602]
[177.76440430 -95.07975769]
[191.24807739 -101.65171814]
[205.87339783 -104.98335266]
[220.87316895 -104.89990234]
[235.46052551 -101.40573883]
[248.87023926 -94.68415833]
[260.39886475 -85.08776093]
[269.44161987 -73.11995697]
[275.52416992 -59.40855408]
[278.32742310 -44.67282104]
[277.70431519 -29.68577003]
[273.68756104 -15.23358727]
[266.48782349 -2.07440758]
[256.48284912 9.10146523]
[244.19741821 17.70776558]
[230.27603149 23.29302788]
[215.44897461 25.56425667]
[200.49404907 24.40230942]
[186.19575500 19.86813927]
[173.30415344 12.19960117]
[162.49549866 1.79896891]
[154.33680725 -10.78815937]
[149.25607300 -24.90148926]
[147.51980591 -39.80232239]
[142.48287964 -25.67329216]
[137.44596863 -11.54426289]
[132.40905762 2.58476686]
[127.37213898 16.71379662]
[122.33522034 30.84282684]
[118.36312866 45.30735016]
[115.47785187 60.02724075]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.79182434 142.95521545]
[98.00936127 157.84892273]
[104.05194855 172.47074890]
[94.85707092 184.18841553]
[93.07460785 199.08212280]
[91.29214478 213.97584534]
[89.50967407 228.86956787]
[91.59714508 237.76226807]
[87.58819580 243.97114563]
[85.58418274 258.83666992]
[83.58016968 273.70220947]
[98.21626282 277.03250122]
[112.49490356 281.66140747]
[126.30113220 287.55160522]
[139.52377319 294.65567017]
[152.05638123 302.91641235]
[163.79803467 312.26733398]
[174.65420532 322.63314819]
[184.53747559 333.93035889]
[193.36828613 346.06802368]
[201.07550049 358.94845581]
[207.59710693 372.46786499]
[212.88055420 386.51748657]
[216.88333130 400.98413086]
[219.57319641 415.75134277]
[220.92851257 430.70025635]
[220.93833923 445.71044922]
[219.60260010 460.66110229]
[216.93206787 475.43182373]
[212.94824219 489.90371704]
[207.68318176 503.96023560]
[201.17929077 517.48815918]
[193.48895264 530.37866211]
[184.67404175 542.52789307]
[174.80557251 553.83807373]
[163.96298218 564.21807861]
[152.23358154 573.58435059]
[139.71180725 581.86151123]
[126.49847412 588.98291016]
[112.69996643 594.89117432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 181]
[40 180]
[41 179]
[42 177]
[43 176]
[44 175]
[45 174]
[47 172]
[48 171]
[54 170]
[55 169]
[57 167]
[58 166]
[59 165]
[60 164]
[71 163]
[72 162]
[73 161]
[74 160]
[75 159]
[76 158]
[77 132]
[78 131]
[84 125]
[85 124]
[86 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
