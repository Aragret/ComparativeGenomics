%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[48.27640152 681.56188965]
[33.65572739 684.93127441]
[18.87039375 687.48291016]
[3.96610475 689.20892334]
[-11.01107311 690.10394287]
[-26.01484489 690.16528320]
[-40.99883652 689.39263916]
[-55.91672897 687.78845215]
[-70.72241974 685.35772705]
[-85.37013245 682.10791016]
[-99.81460571 678.04907227]
[-114.01118469 673.19372559]
[-127.91598511 667.55694580]
[-141.48603821 661.15612793]
[-154.67938232 654.01104736]
[-167.45526123 646.14373779]
[-179.77416992 637.57861328]
[-191.59803772 628.34210205]
[-202.89030457 618.46276855]
[-213.61607361 607.97106934]
[-223.74220276 596.89959717]
[-233.23738098 585.28240967]
[-242.07225037 573.15551758]
[-250.21952820 560.55633545]
[-257.65402222 547.52386475]
[-264.35272217 534.09838867]
[-270.29498291 520.32135010]
[-275.46237183 506.23535156]
[-279.83895874 491.88397217]
[-283.41122437 477.31152344]
[-286.16809082 462.56307983]
[-288.10104370 447.68420410]
[-289.20413208 432.72091675]
[-289.47393799 417.71945190]
[-288.90960693 402.72616577]
[-287.51290894 387.78741455]
[-285.28814697 372.94940186]
[-282.24218750 358.25793457]
[-278.38446045 343.75845337]
[-273.72689819 329.49575806]
[-268.28390503 315.51397705]
[-262.07226562 301.85626221]
[-255.11120605 288.56491089]
[-247.42222595 275.68093872]
[-239.02912903 263.24420166]
[-229.95780945 251.29310608]
[-220.23634338 239.86463928]
[-209.89476013 228.99409485]
[-198.96502686 218.71508789]
[-187.48094177 209.05938721]
[-175.47798157 200.05683899]
[-162.99325562 191.73526001]
[-150.06535339 184.12039185]
[-136.73423767 177.23574829]
[-123.04111481 171.10261536]
[-109.02830505 165.73995972]
[-94.73912048 161.16435242]
[-80.21773529 157.38993835]
[-65.50902557 154.42839050]
[-50.65846252 152.28883362]
[-35.71194077 150.97792053]
[-20.71566963 150.49967957]
[-5.71599340 150.85559082]
[9.24072075 152.04455566]
[24.10824203 154.06289673]
[38.84061813 156.90438843]
[53.39230728 160.56024170]
[67.71833801 165.01914978]
[72.96505737 150.96667480]
[78.21177673 136.91419983]
[83.45848846 122.86173248]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[83.59399414 79.70570374]
[70.42549133 72.50962067]
[57.80389786 64.39243317]
[45.79354095 55.39551163]
[34.45562363 45.56470108]
[23.84791756 34.95009232]
[14.02448082 23.60578537]
[5.03537083 11.58958054]
[-3.07360530 -1.03728688]
[-10.26112556 -14.21047211]
[-16.49056435 -27.86284828]
[-21.73017693 -41.92484283]
[-25.95326233 -56.32480240]
[-29.13830185 -70.98934174]
[-31.26906395 -85.84374237]
[-32.33469391 -100.81230164]
[-32.32975388 -115.81874084]
[-31.25427818 -130.78659058]
[-29.11374283 -145.63958740]
[-25.91905594 -160.30203247]
[-21.68649483 -174.69920349]
[-16.43763161 -188.75775146]
[-10.19921303 -202.40602112]
[-3.00302649 -215.57447815]
[5.11425591 -228.19599915]
[14.11126995 -240.20629883]
[23.94216919 -251.54412842]
[34.55685425 -262.15176392]
[45.90124130 -271.97509766]
[57.91751480 -280.96414185]
[70.54444122 -289.07299805]
[83.71768188 -296.26043701]
[97.37010956 -302.48974609]
[111.43214417 -307.72927856]
[125.83213043 -311.95223999]
[140.49670410 -315.13717651]
[155.35112000 -317.26782227]
[170.31967163 -318.33334351]
[185.32612610 -318.32827759]
[200.29396057 -317.25268555]
[215.14694214 -315.11203003]
[229.80935669 -311.91723633]
[244.20649719 -307.68457031]
[258.26501465 -302.43560791]
[271.91323853 -296.19708252]
[285.08163452 -289.00079346]
[297.70309448 -280.88339233]
[309.71331787 -271.88629150]
[321.05108643 -262.05529785]
[331.65863037 -251.44053650]
[341.48190308 -240.09608459]
[350.47082520 -228.07974243]
[358.57958984 -215.45274353]
[365.76690674 -202.27944946]
[371.99615479 -188.62698364]
[377.23553467 -174.56491089]
[381.45840454 -160.16488647]
[384.64321899 -145.50028992]
[386.77374268 -130.64585876]
[387.83914185 -115.67729187]
[387.83398438 -100.67085266]
[386.75827026 -85.70301819]
[384.61752319 -70.85005188]
[381.42260742 -56.18766022]
[377.18981934 -41.79055023]
[371.94073486 -27.73208427]
[365.70211792 -14.08390617]
[358.50573730 -0.91556269]
[350.38824463 11.70584202]
[341.39105225 23.71599197]
[331.55999756 35.05368423]
[320.94512939 45.66114426]
[309.60058594 55.48432159]
[297.58419800 64.47315216]
[284.95712280 72.58184052]
[271.78378296 79.76905823]
[258.13125610 85.99818420]
[244.06915283 91.23747253]
[229.66909790 95.46022797]
[215.00447083 98.64492798]
[200.15002441 100.77535248]
[185.18145752 101.84062958]
[170.17500305 101.83535004]
[155.20718384 100.75952911]
[140.35423279 98.61865234]
[125.69187164 95.42362976]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[97.51096344 128.10845947]
[92.26424408 142.16091919]
[87.01752472 156.21339417]
[81.77080536 170.26586914]
[95.51358795 176.28691101]
[108.90051270 183.06239319]
[121.89019775 190.57138062]
[134.44250488 198.79066467]
[146.51861572 207.69485474]
[158.08122253 217.25639343]
[169.09457397 227.44575500]
[179.52462769 238.23143005]
[189.33915710 249.58009338]
[198.50781250 261.45663452]
[207.00225830 273.82440186]
[214.79624939 286.64511108]
[221.86567688 299.87915039]
[228.18869019 313.48565674]
[233.74577332 327.42248535]
[238.51971436 341.64663696]
[242.49577332 356.11413574]
[245.66165161 370.78021240]
[248.00758362 385.59957886]
[249.52630615 400.52639771]
[250.21311951 415.51458740]
[250.06590271 430.51776123]
[249.08511353 445.48956299]
[247.27378845 460.38372803]
[244.63752747 475.15420532]
[241.18446350 489.75534058]
[236.92527771 504.14199829]
[231.87313843 518.26977539]
[226.04367065 532.09484863]
[219.45487976 545.57464600]
[212.12712097 558.66741943]
[204.08306885 571.33276367]
[195.34756470 583.53143311]
[185.94763184 595.22583008]
[175.91230774 606.37969971]
[165.27261353 616.95861816]
[154.06144714 626.92993164]
[142.31344604 636.26275635]
[130.06492615 644.92822266]
[117.35376740 652.89965820]
[104.21923828 660.15228271]
[90.70194244 666.66381836]
[76.84365845 672.41400146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 167]
[69 166]
[70 165]
[71 164]
[72 163]
[74 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
