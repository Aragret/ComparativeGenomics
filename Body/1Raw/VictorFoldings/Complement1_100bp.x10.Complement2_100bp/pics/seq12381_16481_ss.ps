%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[125.55184174 793.48406982]
[111.00472260 789.81030273]
[96.68208313 785.34075928]
[82.62739563 780.08905029]
[68.88336945 774.07104492]
[55.49172592 767.30499268]
[42.49314499 759.81158447]
[29.92710114 751.61346436]
[17.83175468 742.73553467]
[6.24384260 733.20477295]
[-4.80144548 723.05010986]
[-15.27056503 712.30249023]
[-25.13171959 700.99438477]
[-34.35496140 689.16027832]
[-42.91228485 676.83599854]
[-50.77769470 664.05908203]
[-57.92730331 650.86822510]
[-64.33940125 637.30358887]
[-69.99452209 623.40631104]
[-74.87547302 609.21856689]
[-78.96744537 594.78356934]
[-82.25801086 580.14501953]
[-84.73717499 565.34741211]
[-86.39739990 550.43572998]
[-87.23365021 535.45520020]
[-87.24339294 520.45135498]
[-86.42658234 505.46978760]
[-84.78572083 490.55596924]
[-82.32576752 475.75515747]
[-79.05421448 461.11236572]
[-74.98097992 446.67202759]
[-70.11844635 432.47796631]
[-64.48137665 418.57336426]
[-58.08689117 405.00039673]
[-50.95441055 391.80029297]
[-43.10559464 379.01315308]
[-34.56428146 366.67779541]
[-25.35640717 354.83172607]
[-15.50994015 343.51086426]
[-5.05478191 332.74960327]
[5.97731447 322.58062744]
[17.55284500 313.03485107]
[29.63665581 304.14123535]
[42.19204712 295.92678833]
[55.18088913 288.41647339]
[68.56373596 281.63308716]
[82.29994202 275.59725952]
[96.34779358 270.32727051]
[110.66462708 265.83914185]
[125.20696259 262.14651489]
[122.32168579 247.42663574]
[119.43641663 232.70674133]
[116.55113983 217.98684692]
[113.66587067 203.26695251]
[103.62494659 192.26564026]
[108.56327820 177.23487854]
[96.33335114 164.64933777]
[102.44577789 147.27925110]
[99.34166718 132.60395813]
[89.13806152 121.75334167]
[93.85205841 106.65073395]
[90.95057678 104.11030579]
[89.18297577 100.30327606]
[89.08980560 95.76473999]
[90.95247650 91.25138855]
[88.50675201 76.45211792]
[84.01999664 68.49555969]
[86.13648987 61.41444016]
[83.91137695 46.58039856]
[81.68625641 31.74635506]
[69.88421631 17.61152458]
[76.93940735 1.54319394]
[74.49368286 -13.25607681]
[72.04795074 -28.05534744]
[69.60222626 -42.85461807]
[67.15649414 -57.65388870]
[57.27264023 -70.00783539]
[62.83123779 -83.82634735]
[60.38550949 -98.62561798]
[50.50165176 -110.97956085]
[56.06024933 -124.79807281]
[53.61452484 -139.59733582]
[38.57789230 -139.68513489]
[23.77241516 -142.31303406]
[9.62407589 -147.40544128]
[-3.46004868 -154.81581116]
[-15.10350323 -164.33096313]
[-24.97128105 -175.67710876]
[-32.77946854 -188.52778625]
[-38.30340576 -202.51329041]
[-41.38415909 -217.23120117]
[-41.93309021 -232.25807190]
[-39.93440628 -247.16152954]
[-35.44561005 -261.51278687]
[-28.59585762 -274.89892578]
[-19.58222389 -286.93481445]
[-8.66405487 -297.27413940]
[3.84451532 -305.61941528]
[17.58358955 -311.73056030]
[32.15786743 -315.43170166]
[47.14801407 -316.61636353]
[62.12273788 -315.25048828]
[76.65118408 -311.37335205]
[90.31534576 -305.09649658]
[102.72206879 -296.60052490]
[113.51438904 -286.12991333]
[122.38179779 -273.98590088]
[129.06915283 -260.51788330]
[133.38404846 -246.11338806]
[135.20233154 -231.18684387]
[134.47169495 -216.16772461]
[131.21316528 -201.48814392]
[125.52048492 -187.57048035]
[117.55744934 -174.81517029]
[107.55316162 -163.58920288]
[95.79547882 -154.21556091]
[82.62268829 -146.96397400]
[68.41379547 -142.04307556]
[70.85951996 -127.24379730]
[80.56844330 -115.94839478]
[75.18478394 -101.07134247]
[77.63050842 -86.27207184]
[87.33943176 -74.97666931]
[81.95577240 -60.09961700]
[84.40149689 -45.30034637]
[86.84722137 -30.50107574]
[89.29295349 -15.70180416]
[91.73867798 -0.90253347]
[101.38650513 6.39445305]
[103.54519653 18.70395279]
[96.52030182 29.52123642]
[98.74541473 44.35528183]
[100.97053528 59.18932343]
[103.30602264 74.00639343]
[105.75174713 88.80566406]
[108.52735901 103.54662323]
[118.95299530 115.44690704]
[114.01696777 129.49984741]
[117.12107849 144.17514038]
[127.48590851 151.85194397]
[129.76921082 164.13893127]
[123.28316498 174.34960938]
[133.53047180 186.40379333]
[128.38575745 200.38168335]
[131.27102661 215.10157776]
[134.15631104 229.82147217]
[137.04158020 244.54136658]
[139.92684937 259.26126099]
[154.78710938 257.19061279]
[169.73887634 255.94174194]
[184.73672485 255.51843262]
[199.73513794 255.92195129]
[214.68852234 257.15109253]
[229.55151367 259.20211792]
[244.27893066 262.06881714]
[258.82608032 265.74246216]
[273.14874268 270.21188354]
[287.20346069 275.46353149]
[300.94754028 281.48144531]
[314.33923340 288.24734497]
[327.33786011 295.74072266]
[339.90396118 303.93875122]
[351.99938965 312.81658936]
[363.58734131 322.34725952]
[374.63272095 332.50180054]
[385.10189819 343.24942017]
[394.96313477 354.55740356]
[404.18646240 366.39147949]
[412.74386597 378.71566772]
[420.60937500 391.49255371]
[427.75909424 404.68334961]
[434.17126465 418.24795532]
[439.82647705 432.14520264]
[444.70755005 446.33285522]
[448.79962158 460.76788330]
[452.09027100 475.40640259]
[454.56954956 490.20397949]
[456.22988892 505.11566162]
[457.06625366 520.09619141]
[457.07608032 535.09997559]
[456.25939941 550.08160400]
[454.61862183 564.99542236]
[452.15878296 579.79620361]
[448.88732910 594.43908691]
[444.81420898 608.87945557]
[439.95175171 623.07348633]
[434.31478882 636.97814941]
[427.92041016 650.55120850]
[420.78802490 663.75134277]
[412.93927002 676.53851318]
[404.39804077 688.87396240]
[395.19027710 700.72009277]
[385.34387207 712.04101562]
[374.88879395 722.80236816]
[363.85678101 732.97137451]
[352.28131104 742.51727295]
[340.19757080 751.41094971]
[327.64221191 759.62548828]
[314.65344238 767.13586426]
[301.27062988 773.91937256]
[287.53448486 779.95532227]
[273.48666382 785.22540283]
[259.16986084 789.71362305]
[244.62754822 793.40637207]
[229.90390015 796.29235840]
[215.04362488 798.36285400]
[200.09185791 799.61163330]
[185.09399414 800.03485107]
[170.09559631 799.63122559]
[155.14221191 798.40197754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[56 142]
[58 139]
[59 138]
[61 136]
[65 135]
[66 134]
[68 133]
[69 132]
[70 131]
[72 128]
[73 127]
[74 126]
[75 125]
[76 124]
[78 122]
[79 121]
[81 119]
[82 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
