%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[91.70501709 324.49914551]
[92.77616119 339.50744629]
[90.98734283 354.44720459]
[86.40322113 368.77838135]
[79.18951416 381.98287964]
[69.60698700 393.58337402]
[58.00205231 403.16055298]
[44.79421616 410.36813354]
[30.46093369 414.94564819]
[15.52034092 416.72756958]
[0.51253527 415.64947510]
[-14.01996231 411.75036621]
[-27.55181122 405.17120361]
[-39.59384537 396.14978027]
[-49.71074677 385.01223755]
[-57.53680420 372.16119385]
[-62.78910446 358.06121826]
[-65.27777863 343.22195435]
[-64.91287231 328.17993164]
[-61.70756531 313.47882080]
[-55.77773285 299.65008545]
[-47.33773804 287.19363403]
[-36.69267273 276.55978394]
[-24.22735786 268.13290405]
[-10.39240360 262.21762085]
[4.31206751 259.02777100]
[19.35449600 258.67871094]
[34.19110489 261.18298340]
[39.43782425 247.13052368]
[44.68454361 233.07804871]
[49.93126297 219.02557373]
[55.17797852 204.97309875]
[60.42469788 190.92062378]
[65.67141724 176.86816406]
[62.87462997 162.23849487]
[74.95021820 152.01641846]
[79.88181305 137.85028076]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[101.23144531 71.80844116]
[105.84545898 57.53570938]
[95.28715515 68.19039154]
[82.27317047 75.64936066]
[67.74299622 79.37415314]
[52.74557877 79.09587097]
[38.36359406 74.83459473]
[25.63528633 66.89795685]
[15.47952652 55.85891342]
[8.62946606 42.51437378]
[5.57961750 27.82769966]
[6.55015182 12.85913181]
[11.47100544 -1.31073797]
[19.98693848 -13.65897274]
[31.48317719 -23.29414177]
[45.12979889 -29.52067566]
[59.94163895 -31.88907623]
[74.84942627 -30.22836494]
[88.77694702 -24.65842819]
[100.71876526 -15.58136940]
[109.81278229 -3.65246511]
[115.40251160 10.26712513]
[117.08440399 25.17253494]
[114.73672485 39.98884201]
[123.51732635 27.82738686]
[132.29792786 15.66592979]
[141.07853699 3.50447440]
[149.85913086 -8.65698147]
[151.66427612 -24.37487221]
[165.38760376 -30.16447067]
[163.07173157 -45.56818771]
[172.14974976 -57.77655029]
[186.84912109 -59.88945389]
[195.62971497 -72.05091095]
[204.41032410 -84.21236420]
[213.19093323 -96.37381744]
[201.60086060 -105.90376282]
[190.63206482 -116.14265442]
[180.32780457 -127.05007935]
[170.72877502 -138.58299255]
[161.87284851 -150.69587708]
[153.79496765 -163.34092712]
[146.52702332 -176.46824646]
[140.09768677 -190.02601624]
[134.53234863 -203.96073914]
[129.85296631 -218.21742249]
[126.07799530 -232.73977661]
[123.22235107 -247.47052002]
[121.29729462 -262.35150146]
[120.31041718 -277.32400513]
[120.26562500 -292.32891846]
[121.16309357 -307.30703735]
[122.99927521 -322.19924927]
[125.76692963 -336.94677734]
[129.45512390 -351.49142456]
[134.04931641 -365.77575684]
[139.53135681 -379.74346924]
[145.87963867 -393.33938599]
[153.06907654 -406.50985718]
[161.07131958 -419.20291138]
[169.85478210 -431.36843872]
[179.38478088 -442.95846558]
[189.62373352 -453.92721558]
[200.53120422 -464.23141479]
[212.06417847 -473.83038330]
[224.17710876 -482.68624878]
[236.82220459 -490.76406860]
[249.94955444 -498.03195190]
[263.50735474 -504.46121216]
[277.44210815 -510.02645874]
[291.69882202 -514.70574951]
[306.22119141 -518.48065186]
[320.95193481 -521.33624268]
[335.83294678 -523.26123047]
[350.80545044 -524.24804688]
[365.81036377 -524.29272461]
[380.78848267 -523.39520264]
[395.68066406 -521.55889893]
[410.42819214 -518.79119873]
[424.97280884 -515.10290527]
[439.25714111 -510.50866699]
[453.22482300 -505.02655029]
[466.82070923 -498.67819214]
[479.99111938 -491.48867798]
[492.68414307 -483.48638916]
[504.84963989 -474.70285034]
[516.43957520 -465.17279053]
[527.40832520 -454.93377686]
[537.71246338 -444.02624512]
[547.31134033 -432.49322510]
[556.16717529 -420.38024902]
[564.24487305 -407.73513794]
[571.51269531 -394.60772705]
[577.94189453 -381.04989624]
[583.50708008 -367.11511230]
[588.18634033 -352.85839844]
[591.96112061 -338.33599854]
[594.81665039 -323.60522461]
[596.74151611 -308.72421265]
[597.72827148 -293.75170898]
[597.77288818 -278.74679565]
[596.87524414 -263.76867676]
[595.03894043 -248.87649536]
[592.27111816 -234.12899780]
[588.58276367 -219.58438110]
[583.98846436 -205.30007935]
[578.50622559 -191.33244324]
[572.15783691 -177.73658752]
[564.96826172 -164.56619263]
[556.96588135 -151.87321472]
[548.18231201 -139.70776367]
[538.65216064 -128.11785889]
[528.41308594 -117.14921570]
[517.50549316 -106.84513092]
[505.97244263 -97.24628448]
[493.85943604 -88.39054108]
[481.21426392 -80.31285858]
[468.08682251 -73.04512024]
[454.52896118 -66.61600494]
[440.59414673 -61.05088043]
[426.33740234 -56.37171555]
[411.81497192 -52.59697342]
[397.08416748 -49.74155807]
[382.20315552 -47.81673050]
[367.23065186 -46.83009338]
[352.22573853 -46.78553772]
[337.24765015 -47.68323517]
[322.35546875 -49.51965332]
[307.60797119 -52.28753281]
[293.06338501 -55.97595978]
[278.77911377 -60.57037354]
[264.81149292 -66.05264282]
[251.21566772 -72.40113068]
[238.04531860 -79.59077454]
[225.35238647 -87.59321594]
[216.57177734 -75.43176270]
[207.79118347 -63.27030563]
[199.01057434 -51.10884857]
[201.63053894 -36.49134827]
[192.89900208 -24.03281784]
[177.54905701 -21.38386726]
[176.37197876 -6.53584623]
[162.02059937 0.12362178]
[153.23999023 12.28507805]
[144.45938110 24.44653320]
[135.67878723 36.60799026]
[126.89817810 48.76944351]
[120.11818695 62.14971924]
[115.50418091 76.42245483]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[94.15454102 142.46429443]
[95.24914551 147.56809998]
[94.36496735 152.12568665]
[92.04145050 155.47476196]
[89.00268555 157.26313782]
[91.42419434 172.89793396]
[79.72388458 182.11488342]
[74.47716522 196.16734314]
[69.23045349 210.21981812]
[63.98373413 224.27229309]
[58.73701477 238.32476807]
[53.49029541 252.37722778]
[48.24357605 266.42971802]
[61.09100342 274.26168823]
[72.22386169 284.38375854]
[81.23971558 296.42996216]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 207]
[29 206]
[30 205]
[31 204]
[32 203]
[33 202]
[34 201]
[36 199]
[37 195]
[38 194]
[39 193]
[41 191]
[42 190]
[43 189]
[65 188]
[66 187]
[67 186]
[68 185]
[69 184]
[71 182]
[74 179]
[75 178]
[76 177]
[77 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
