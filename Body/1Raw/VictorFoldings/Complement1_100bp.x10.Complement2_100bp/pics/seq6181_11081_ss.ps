%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[-5.83035278 383.15002441]
[1.83561027 396.11331177]
[6.53519154 410.42163086]
[8.04858303 425.40576172]
[6.30500126 440.36483765]
[1.38599563 454.59921265]
[-6.47836256 467.44311523]
[-16.92024231 478.29580688]
[-29.45125961 486.64971924]
[-43.48531342 492.11410522]
[-58.36600876 494.43334961]
[-73.39734650 493.49905396]
[-87.87628174 489.35482788]
[-101.12561798 482.19458008]
[-112.52565002 472.35317993]
[-121.54317474 460.29089355]
[-127.75643921 446.57196045]
[-130.87483215 431.83798218]
[-130.75248718 416.77813721]
[-127.39514160 402.09677124]
[-120.95983124 388.48059082]
[-111.74752808 376.56640625]
[-100.18911743 366.91149902]
[-86.82521057 359.96743774]
[-72.28086090 356.05899048]
[-57.23632812 355.36898804]
[-42.39527512 357.92971802]
[-36.73248672 344.03967285]
[-31.06970215 330.14965820]
[-25.40691566 316.25961304]
[-19.74412727 302.36959839]
[-14.08134174 288.47958374]
[-8.41855526 274.58953857]
[-11.73964310 257.35766602]
[2.89991808 246.18786621]
[8.35527515 232.21505737]
[13.81063175 218.24226379]
[19.26598930 204.26947021]
[24.72134590 190.29667664]
[30.17670250 176.32386780]
[19.03979111 186.37222290]
[5.70591879 193.24301147]
[-8.94052696 196.48054504]
[-23.92810059 195.87008667]
[-38.26272583 191.45211792]
[-50.99364471 183.51966858]
[-61.27645874 172.59887695]
[-68.42914581 159.41406250]
[-71.97729492 144.83975220]
[-71.68556213 129.84259033]
[-67.57331085 115.41728973]
[-59.91328049 102.52062225]
[-49.21353912 92.00798798]
[-36.18375778 84.57664490]
[-21.68816185 80.71949005]
[-6.68818569 80.69235229]
[7.82127333 84.49703217]
[20.87785530 91.88117981]
[31.61556435 102.35503387]
[39.32220459 115.22389984]
[43.48662949 129.63423157]
[43.83261871 144.63023376]
[40.33539963 159.22209167]
[49.99620819 147.74739075]
[59.65702057 136.27268982]
[69.31783295 124.79798889]
[71.59600067 110.07864380]
[86.40293884 104.50502777]
[89.04246521 90.77460480]
[102.12236023 85.83415985]
[111.43724823 74.07691193]
[120.39794159 62.04753113]
[129.35864258 50.01815414]
[138.31933594 37.98877716]
[133.85951233 23.24373817]
[138.87854004 8.86796474]
[151.25376892 0.30538809]
[166.12007141 0.66740245]
[175.08076477 -11.36197567]
[184.04145813 -23.39135361]
[193.00215149 -35.42073059]
[195.04110718 -51.11000443]
[208.84910583 -56.69464111]
[217.80979919 -68.72401428]
[208.94334412 -80.14006042]
[203.34262085 -93.45252228]
[201.38444519 -107.74954224]
[203.19636536 -122.05360413]
[208.64834595 -135.38835144]
[217.36215210 -146.84519958]
[228.73748779 -155.64533997]
[241.99343872 -161.19258118]
[256.22201538 -163.11373901]
[270.45037842 -161.28384399]
[283.70736694 -155.83412170]
[292.84619141 -167.72875977]
[301.98498535 -179.62339783]
[311.12377930 -191.51802063]
[300.23901367 -201.85916138]
[290.49481201 -213.28144836]
[281.99795532 -225.65971375]
[274.84158325 -238.85833740]
[269.10403442 -252.73271179]
[264.84823608 -267.13082886]
[262.12078857 -281.89492798]
[260.95153809 -296.86325073]
[261.35336304 -311.87179565]
[263.32183838 -326.75610352]
[266.83535767 -341.35311890]
[271.85546875 -355.50289917]
[278.32717896 -369.05041504]
[286.17953491 -381.84719849]
[295.32650757 -393.75311279]
[305.66793823 -404.63763428]
[317.09045410 -414.38156128]
[329.46890259 -422.87808228]
[342.66772461 -430.03414917]
[356.54223633 -435.77136230]
[370.94046021 -440.02682495]
[385.70462036 -442.75390625]
[400.67297363 -443.92279053]
[415.68148804 -443.52059937]
[430.56576538 -441.55175781]
[445.16268921 -438.03787231]
[459.31234741 -433.01742554]
[472.85971069 -426.54541016]
[485.65631104 -418.69271851]
[497.56198120 -409.54544067]
[508.44625854 -399.20376587]
[518.18988037 -387.78103638]
[526.68615723 -375.40234375]
[533.84185791 -362.20336914]
[539.57873535 -348.32870483]
[543.83386230 -333.93038940]
[546.56060791 -319.16616821]
[547.72912598 -304.19778442]
[547.32653809 -289.18927002]
[545.35736084 -274.30505371]
[541.84313965 -259.70819092]
[536.82232666 -245.55867004]
[530.34997559 -232.01147461]
[522.49700928 -219.21505737]
[513.34942627 -207.30960083]
[503.00747681 -196.42558289]
[491.58450317 -186.68222046]
[479.20559692 -178.18627930]
[466.00646973 -171.03085327]
[452.13165283 -165.29432678]
[437.73324585 -161.03956604]
[422.96893311 -158.31318665]
[408.00051880 -157.14505005]
[392.99203491 -157.54795837]
[378.10784912 -159.51750183]
[363.51107788 -163.03210449]
[349.36169434 -168.05325317]
[335.81463623 -174.52593994]
[323.01840210 -182.37922668]
[313.87960815 -170.48458862]
[304.74081421 -158.58995056]
[295.60202026 -146.69532776]
[304.90350342 -134.17623901]
[310.30981445 -119.53145599]
[311.37609863 -103.94252014]
[308.00793457 -88.66961670]
[300.46975708 -74.94969940]
[289.36401367 -63.89629364]
[275.58312988 -56.40911865]
[260.23770142 -53.10088348]
[244.56707764 -54.24713516]
[229.83918762 -59.76332092]
[220.87849426 -47.73394394]
[219.48046875 -32.90509415]
[205.03152466 -26.46003532]
[196.07083130 -14.43065643]
[187.11013794 -2.40127921]
[178.14944458 9.62809849]
[182.75215149 23.76857376]
[178.09066772 38.07711792]
[165.75337219 47.00150299]
[150.34870911 46.94947433]
[141.38801575 58.97885132]
[132.42732239 71.00823212]
[123.46662140 83.03760529]
[123.73822021 85.82765198]
[122.92101288 88.89339447]
[120.90444183 91.82066345]
[117.72981262 94.16294098]
[113.59706116 95.49497223]
[110.95753479 109.22539520]
[97.87763977 114.16584015]
[94.90846252 129.70593262]
[80.79252625 134.45880127]
[71.13172150 145.93350220]
[61.47090912 157.40820312]
[51.81009674 168.88290405]
[44.14950180 181.77923584]
[38.69414520 195.75202942]
[33.23878860 209.72482300]
[27.78343010 223.69761658]
[22.32807350 237.67042542]
[16.87271500 251.64321899]
[21.32728767 263.74774170]
[16.49584961 275.27340698]
[5.47147179 280.25231934]
[-0.19131461 294.14236450]
[-5.85410118 308.03237915]
[-11.51688766 321.92242432]
[-17.17967415 335.81243896]
[-22.84246063 349.70245361]
[-28.50524712 363.59249878]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 210]
[28 209]
[29 208]
[30 207]
[31 206]
[32 205]
[33 204]
[35 201]
[36 200]
[37 199]
[38 198]
[39 197]
[40 196]
[63 195]
[64 194]
[65 193]
[66 192]
[68 190]
[70 188]
[71 183]
[72 182]
[73 181]
[74 180]
[78 176]
[79 175]
[80 174]
[81 173]
[83 171]
[84 170]
[95 160]
[96 159]
[97 158]
[98 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
