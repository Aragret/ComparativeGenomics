%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[126.36110687 373.65667725]
[114.89992523 383.37030029]
[102.22277069 391.43280029]
[88.56582642 397.69390869]
[74.18350983 402.03704834]
[59.34375000 404.38122559]
[44.32300568 404.68286133]
[29.40110207 402.93624878]
[14.85602665 399.17401123]
[0.95874548 393.46618652]
[-12.03184319 385.91909790]
[-23.87373352 376.67337036]
[-34.34631729 365.90124512]
[-43.25450134 353.80340576]
[-50.43232346 340.60519409]
[-55.74607086 326.55252075]
[-59.09674835 311.90713501]
[-60.42193985 296.94192505]
[-59.69695282 281.93566895]
[-56.93529892 267.16790771]
[-52.18841934 252.91374207]
[-45.54474640 239.43875122]
[-37.12805557 226.99395752]
[-27.09513474 215.81118774]
[-15.63289642 206.09877014]
[-2.95487428 198.03765869]
[10.70274734 191.77801514]
[25.08553696 187.43646240]
[39.92555237 185.09387207]
[54.94632721 184.79388428]
[69.86804199 186.54208374]
[65.56443787 172.28276062]
[76.51104736 160.85987854]
[80.26734924 146.33781433]
[84.02364349 131.81575012]
[79.72003937 117.55643463]
[90.66664886 106.13354492]
[94.31473541 91.58392334]
[97.85440826 77.00755310]
[88.11781311 88.41801453]
[75.69464874 96.82426453]
[61.48175812 101.61943817]
[46.50518036 102.45738220]
[31.84609032 99.27759552]
[18.56273842 92.30962372]
[7.61406040 82.05651093]
[-0.20954804 69.25841522]
[-4.34329367 54.83925629]
[-4.48875856 39.83996201]
[-0.63544065 25.34334373]
[6.93848515 12.39592552]
[17.68625069 1.93239200]
[30.83196640 -5.29188490]
[45.42662811 -8.75537872]
[60.41664124 -8.20805645]
[74.71985626 -3.68943048]
[87.30371857 4.47429657]
[97.25978088 15.69377804]
[103.86931610 29.15906906]
[106.65516663 43.89810181]
[105.41597748 58.84798431]
[113.26773071 46.06713867]
[121.11949158 33.28629684]
[112.26721191 20.96100044]
[108.81749725 6.22524500]
[111.26570892 -8.66837597]
[119.20803833 -21.45536041]
[131.40776062 -30.20360374]
[145.98767090 -33.60531616]
[160.71893311 -31.17245483]
[168.57069397 -43.95329666]
[176.42245483 -56.73413849]
[184.27420044 -69.51498413]
[192.12596130 -82.29582214]
[199.97772217 -95.07666779]
[187.71635437 -103.72602844]
[176.02824402 -113.13563538]
[164.96047974 -123.26761627]
[154.55760193 -134.08114624]
[144.86149597 -145.53271484]
[135.91123962 -157.57618713]
[127.74283600 -170.16307068]
[120.38919067 -183.24269104]
[113.87992096 -196.76237488]
[108.24122620 -210.66769409]
[103.49581909 -224.90263367]
[99.66280365 -239.40989685]
[96.75761414 -254.13104248]
[94.79194641 -269.00683594]
[93.77372742 -283.97732544]
[93.70704651 -298.98226929]
[94.59217072 -313.96121216]
[96.42554474 -328.85388184]
[99.19978333 -343.60025024]
[102.90370941 -358.14102173]
[107.52241516 -372.41757202]
[113.03730011 -386.37243652]
[119.42615509 -399.94946289]
[126.66326141 -413.09390259]
[134.71946716 -425.75289917]
[143.56234741 -437.87545776]
[153.15628052 -449.41271973]
[163.46264648 -460.31829834]
[174.43992615 -470.54824829]
[186.04393005 -480.06137085]
[198.22795105 -488.81936646]
[210.94288635 -496.78695679]
[224.13757324 -503.93206787]
[237.75886536 -510.22595215]
[251.75192261 -515.64324951]
[266.06039429 -520.16210938]
[280.62664795 -523.76440430]
[295.39205933 -526.43560791]
[310.29718018 -528.16491699]
[325.28195190 -528.94537354]
[340.28604126 -528.77392578]
[355.24905396 -527.65118408]
[370.11074829 -525.58166504]
[384.81124878 -522.57373047]
[399.29138184 -518.63946533]
[413.49282837 -513.79473877]
[427.35842896 -508.05908203]
[440.83230591 -501.45556641]
[453.86026001 -494.01074219]
[466.38980103 -485.75463867]
[478.37045288 -476.72045898]
[489.75402832 -466.94464111]
[500.49465942 -456.46649170]
[510.54907227 -445.32821655]
[519.87683105 -433.57467651]
[528.44036865 -421.25320435]
[536.20513916 -408.41339111]
[543.13995361 -395.10696411]
[549.21685791 -381.38751221]
[554.41137695 -367.31024170]
[558.70257568 -352.93185425]
[562.07318115 -338.31024170]
[564.50970459 -323.50430298]
[566.00225830 -308.57363892]
[566.54479980 -293.57836914]
[566.13519287 -278.57885742]
[564.77508545 -263.63555908]
[562.46997070 -248.80859375]
[559.22912598 -234.15766907]
[555.06555176 -219.74180603]
[549.99603271 -205.61903381]
[544.04101562 -191.84622192]
[537.22448730 -178.47883606]
[529.57385254 -165.57069397]
[521.11987305 -153.17378235]
[511.89672852 -141.33799744]
[501.94143677 -130.11102295]
[491.29415894 -119.53806305]
[479.99771118 -109.66168213]
[468.09759521 -100.52165222]
[455.64175415 -92.15477753]
[442.68035889 -84.59474945]
[429.26553345 -77.87200165]
[415.45132446 -72.01361847]
[401.29339600 -67.04318237]
[386.84872437 -62.98071289]
[372.17544556 -59.84255981]
[357.33270264 -57.64136505]
[342.38021851 -56.38599014]
[327.37823486 -56.08149338]
[312.38714600 -56.72909546]
[297.46728516 -58.32619095]
[282.67877197 -60.86634827]
[268.08114624 -64.33934021]
[253.73316956 -68.73118591]
[239.69264221 -74.02419281]
[226.01608276 -80.19705200]
[212.75856018 -87.22491455]
[204.90679932 -74.44406891]
[197.05505371 -61.66322708]
[189.20329285 -48.88238525]
[181.35153198 -36.10154343]
[173.49978638 -23.32069969]
[182.32846069 -11.27978516]
[185.88418579 3.26333213]
[183.59486389 18.09990311]
[175.77856445 30.96431732]
[163.59977722 39.88006973]
[148.89595032 43.46341705]
[133.90032959 41.13805389]
[126.04857635 53.91889572]
[118.19682312 66.69973755]
[112.43078613 80.54722595]
[108.89111328 95.12359619]
[110.20043182 103.07710266]
[105.18871307 109.88984680]
[109.22364044 125.18788147]
[98.54570770 135.57205200]
[94.78940582 150.09411621]
[91.03310394 164.61618042]
[95.06803131 179.91421509]
[84.39009857 190.29838562]
[98.28800201 196.00471497]
[111.27940369 203.55038452]
[123.12229919 212.79481506]
[133.59605408 223.56581116]
[142.50553894 235.66270447]
[149.68478394 248.86013794]
[155.00006104 262.91223145]
[158.35232544 277.55725098]
[159.67913818 292.52230835]
[158.95576477 307.52865601]
[156.19570923 322.29672241]
[151.45037842 336.55139160]
[144.80816650 350.02709961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 197]
[33 195]
[34 194]
[35 193]
[37 191]
[38 189]
[39 188]
[61 187]
[62 186]
[63 185]
[70 178]
[71 177]
[72 176]
[73 175]
[74 174]
[75 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
