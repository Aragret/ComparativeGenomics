%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[106.74102783 854.66534424]
[91.84638214 852.86773682]
[77.05149841 850.37915039]
[62.38841629 847.20489502]
[47.88890076 843.35186768]
[33.58434677 838.82843018]
[19.50573730 833.64434814]
[5.68356562 827.81085205]
[-7.85223389 821.34063721]
[-21.07234573 814.24761963]
[-33.94813919 806.54724121]
[-46.45172501 798.25616455]
[-58.55602264 789.39233398]
[-70.23482513 779.97491455]
[-81.46282196 770.02435303]
[-92.21571350 759.56219482]
[-102.47020721 748.61102295]
[-112.20408630 737.19470215]
[-121.39627075 725.33782959]
[-130.02685547 713.06610107]
[-138.07716370 700.40612793]
[-145.52972412 687.38537598]
[-152.36843872 674.03192139]
[-158.57846069 660.37481689]
[-164.14634705 646.44354248]
[-169.06005859 632.26831055]
[-173.30894470 617.87976074]
[-176.88378906 603.30920410]
[-179.77687073 588.58807373]
[-181.98190308 573.74822998]
[-183.49412537 558.82196045]
[-184.31024170 543.84143066]
[-184.42852783 528.83917236]
[-183.84867859 513.84765625]
[-182.57197571 498.89932251]
[-180.60118103 484.02661133]
[-177.94056702 469.26168823]
[-174.59588623 454.63653564]
[-170.57438660 440.18286133]
[-165.88478088 425.93191528]
[-160.53723145 411.91458130]
[-154.54328918 398.16122437]
[-147.91596985 384.70162964]
[-140.66961670 371.56497192]
[-132.81993103 358.77966309]
[-124.38388824 346.37341309]
[-115.37978363 334.37307739]
[-105.82710266 322.80465698]
[-95.74655151 311.69323730]
[-85.15994263 301.06280518]
[-74.09021759 290.93646240]
[-62.56134796 281.33609009]
[-50.59830475 272.28250122]
[-38.22699356 263.79531860]
[-25.47420692 255.89289856]
[-12.36756802 248.59236145]
[1.06453717 241.90951538]
[14.79301929 235.85885620]
[28.78814316 230.45346069]
[43.01959991 225.70504761]
[57.45656967 221.62390137]
[72.06777954 218.21885681]
[86.82159424 215.49728394]
[101.68605042 213.46510315]
[100.34781647 198.52491760]
[99.00958252 183.58473206]
[88.06309509 176.78738403]
[82.95407104 164.74661255]
[85.75400543 151.77084351]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.38182068 58.47121811]
[88.26617432 43.51276398]
[81.83322906 57.06330872]
[70.98989868 67.42777252]
[57.16280365 73.24253845]
[42.17113876 73.74256897]
[27.98731804 68.86207581]
[16.47746277 59.24317551]
[9.15589523 46.15139771]
[6.98589182 31.30919266]
[10.25295448 16.66930389]
[18.52724457 4.15786505]
[30.72013855 -4.57903147]
[45.22744751 -8.39189625]
[60.14049149 -6.77908087]
[73.49720001 0.04722035]
[83.54026031 11.18889046]
[88.94879150 25.18239021]
[91.17391205 10.34834671]
[93.39902496 -4.48569727]
[95.62414551 -19.31974030]
[97.84925842 -34.15378571]
[83.81948090 -39.64131165]
[71.36283875 -48.11360550]
[61.10415268 -59.14570236]
[53.55799866 -72.18423462]
[49.10288620 -86.57519531]
[47.96228409 -101.59673309]
[50.19340134 -116.49539185]
[55.68432617 -130.52383423]
[64.15963745 -142.97842407]
[75.19422150 -153.23443604]
[88.23458099 -160.77743530]
[102.62661743 -165.22906494]
[117.64843750 -166.36602783]
[132.54655457 -164.13130188]
[146.57366943 -158.63697815]
[159.02619934 -150.15864563]
[169.27954102 -139.12158203]
[176.81938171 -126.07939148]
[181.26751709 -111.68627167]
[182.40083313 -96.66417694]
[180.16250610 -81.76660919]
[174.66477966 -67.74082184]
[166.18342590 -55.29033661]
[155.14387512 -45.03967667]
[142.09986877 -37.50300217]
[127.70567322 -33.05834961]
[112.68330383 -31.92866707]
[110.45819092 -17.09462357]
[108.23307037 -2.26058030]
[106.00795746 12.57346344]
[103.78283691 27.40750694]
[103.22462463 42.39711761]
[104.34027100 57.35557175]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[124.08045959 152.69956970]
[125.27496338 169.81353760]
[113.94976044 182.24649048]
[115.28799438 197.18667603]
[116.62622833 212.12686157]
[131.61521912 211.48500061]
[146.61784363 211.54119873]
[161.60160828 212.29533386]
[176.53405762 213.74577332]
[191.38284302 215.88938904]
[206.11582947 218.72152710]
[220.70109558 222.23605347]
[235.10705566 226.42536926]
[249.30249023 231.28038025]
[263.25668335 236.79058838]
[276.93939209 242.94404602]
[290.32101440 249.72743225]
[303.37252808 257.12606812]
[316.06567383 265.12390137]
[328.37298584 273.70364380]
[340.26782227 282.84671021]
[351.72436523 292.53326416]
[362.71780396 302.74234009]
[373.22439575 313.45184326]
[383.22134399 324.63858032]
[392.68698120 336.27832031]
[401.60083008 348.34585571]
[409.94360352 360.81500244]
[417.69717407 373.65884399]
[424.84481812 386.84948730]
[431.37100220 400.35839844]
[437.26159668 414.15631104]
[442.50387573 428.21334839]
[447.08648682 442.49905396]
[450.99948120 456.98251343]
[454.23437500 471.63232422]
[456.78417969 486.41680908]
[458.64337158 501.30389404]
[459.80792236 516.26135254]
[460.27532959 531.25677490]
[460.04452515 546.25775146]
[459.11605835 561.23168945]
[457.49194336 576.14624023]
[455.17568970 590.96911621]
[452.17227173 605.66815186]
[448.48825073 620.21148682]
[444.13159180 634.56774902]
[439.11169434 648.70574951]
[433.43948364 662.59484863]
[427.12719727 676.20501709]
[420.18853760 689.50677490]
[412.63851929 702.47131348]
[404.49349976 715.07055664]
[395.77111816 727.27716064]
[386.49026489 739.06475830]
[376.67105103 750.40783691]
[366.33471680 761.28173828]
[355.50366211 771.66296387]
[344.20135498 781.52905273]
[332.45223999 790.85858154]
[320.28179932 799.63140869]
[307.71640015 807.82849121]
[294.78320312 815.43206787]
[281.51028442 822.42572021]
[267.92633057 828.79425049]
[254.06079102 834.52392578]
[239.94371033 839.60223389]
[225.60562134 844.01831055]
[211.07762146 847.76245117]
[196.39114380 850.82666016]
[181.57801819 853.20422363]
[166.67030334 854.89007568]
[151.70030212 855.88043213]
[136.70043945 856.17333984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 141]
[65 140]
[66 139]
[70 136]
[71 135]
[72 134]
[74 132]
[75 131]
[76 130]
[77 129]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
