%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[84.44021606 288.01464844]
[84.93582153 303.02246094]
[83.74794006 317.99139404]
[80.89151001 332.73321533]
[76.40245056 347.06250000]
[70.33721161 360.79904175]
[62.77208328 373.77011108]
[53.80219269 385.81259155]
[43.54035187 396.77502441]
[32.11561584 406.51953125]
[19.67165565 414.92355347]
[6.36497402 421.88143921]
[-7.63708687 427.30569458]
[-22.15843582 431.12805176]
[-37.01644897 433.30047607]
[-52.02427673 433.79562378]
[-66.99317169 432.60729980]
[-81.73489380 429.75042725]
[-96.06404114 425.26092529]
[-109.80041504 419.19528198]
[-122.77126312 411.62976074]
[-134.81346130 402.65951538]
[-145.77557373 392.39733887]
[-155.51974487 380.97232056]
[-163.92341614 368.52810669]
[-170.88090515 355.22122192]
[-176.30471802 341.21899414]
[-180.12664795 326.69754028]
[-182.29861450 311.83944702]
[-182.79333496 296.83160400]
[-181.60455322 281.86276245]
[-178.74723816 267.12112427]
[-174.25732422 252.79209900]
[-168.19126892 239.05590820]
[-160.62535095 226.08528137]
[-151.65475464 214.04335022]
[-141.39225769 203.08154297]
[-129.96693420 193.33772278]
[-117.52246857 184.93443298]
[-104.21537018 177.97734070]
[-90.21298218 172.55393982]
[-75.69140625 168.73245239]
[-60.83326340 166.56091309]
[-45.82540894 166.06665039]
[-30.85658264 167.25587463]
[-16.11503410 170.11363220]
[-1.78615355 174.60397339]
[11.94985676 180.67044067]
[24.92025375 188.23674011]
[33.88095093 176.20736694]
[42.84164429 164.17799377]
[51.80234146 152.14860535]
[60.76303864 140.11923218]
[69.72373199 128.08985901]
[78.68443298 116.06047821]
[87.64512634 104.03109741]
[96.24369049 91.74025726]
[104.47249603 79.19886017]
[112.70130157 66.65746307]
[120.93011475 54.11605835]
[129.15892029 41.57466125]
[117.03057861 32.74329758]
[105.34659576 23.33191109]
[94.13468933 13.36281872]
[83.42145538 2.85966778]
[73.23229218 -8.15262985]
[63.59138489 -19.64795303]
[54.52158737 -31.59903908]
[46.04441833 -43.97753906]
[38.17998505 -56.75408936]
[30.94693565 -69.89839172]
[24.36243057 -83.37926483]
[18.44208908 -97.16473389]
[13.19994926 -111.22209930]
[8.64844704 -125.51802826]
[4.79837894 -140.01860046]
[1.65887558 -154.68942261]
[-0.76261580 -169.49571228]
[-2.46035171 -184.40232849]
[-3.43030548 -199.37393188]
[-3.67017651 -214.37500000]
[-3.17939568 -229.36996460]
[-1.95912707 -244.32324219]
[-0.01226515 -259.19937134]
[2.65657234 -273.96307373]
[6.04105520 -288.57934570]
[10.13315582 -303.01345825]
[14.92316818 -317.23126221]
[20.39973068 -331.19897461]
[26.54985428 -344.88345337]
[33.35895157 -358.25231934]
[40.81086731 -371.27377319]
[48.88793564 -383.91696167]
[57.57099152 -396.15194702]
[66.83943939 -407.94961548]
[76.67130280 -419.28207397]
[87.04325104 -430.12237549]
[97.93068695 -440.44482422]
[109.30779266 -450.22497559]
[121.14757538 -459.43960571]
[133.42195129 -468.06683350]
[146.10182190 -476.08621216]
[159.15708923 -483.47875977]
[172.55680847 -490.22689819]
[186.26918030 -496.31460571]
[200.26168823 -501.72750854]
[214.50114441 -506.45269775]
[228.95376587 -510.47903442]
[243.58529663 -513.79687500]
[258.36099243 -516.39843750]
[273.24584961 -518.27752686]
[288.20452881 -519.42968750]
[303.20156860 -519.85217285]
[318.20138550 -519.54394531]
[333.16842651 -518.50585938]
[348.06713867 -516.74023438]
[362.86224365 -514.25128174]
[377.51861572 -511.04501343]
[392.00149536 -507.12893677]
[406.27655029 -502.51235962]
[420.30990601 -497.20626831]
[434.06826782 -491.22317505]
[447.51901245 -484.57733154]
[460.63021851 -477.28451538]
[473.37081909 -469.36193848]
[485.71057129 -460.82849121]
[497.62023926 -451.70434570]
[509.07153320 -442.01116943]
[520.03729248 -431.77197266]
[530.49151611 -421.01101685]
[540.40948486 -409.75381470]
[549.76751709 -398.02706909]
[558.54357910 -385.85864258]
[566.71673584 -373.27734375]
[574.26763916 -360.31301880]
[581.17840576 -346.99645996]
[587.43261719 -333.35922241]
[593.01544189 -319.43365479]
[597.91363525 -305.25277710]
[602.11560059 -290.85021973]
[605.61132812 -276.26019287]
[608.39263916 -261.51724243]
[610.45275879 -246.65637207]
[611.78692627 -231.71282959]
[612.39196777 -216.72204590]
[612.26635742 -201.71958923]
[611.41052246 -186.74102783]
[609.82641602 -171.82189941]
[607.51782227 -156.99760437]
[604.49017334 -142.30328369]
[600.75073242 -127.77378845]
[596.30828857 -113.44360352]
[591.17340088 -99.34669495]
[585.35827637 -85.51651764]
[578.87664795 -71.98587036]
[571.74395752 -58.78683472]
[563.97711182 -45.95073318]
[555.59454346 -33.50800323]
[546.61602783 -21.48815727]
[537.06298828 -9.91970921]
[526.95806885 1.16990376]
[516.32513428 11.75437832]
[505.18951416 21.80860901]
[493.57757568 31.30874825]
[481.51687622 40.23226166]
[469.03601074 48.55798721]
[456.16461182 56.26617432]
[442.93316650 63.33853912]
[429.37304688 69.75830841]
[415.51647949 75.51025391]
[401.39627075 80.58073425]
[387.04595947 84.95771790]
[372.49957275 88.63082886]
[357.79156494 91.59135437]
[342.95687866 93.83226776]
[328.03070068 95.34826660]
[313.04837036 96.13573456]
[298.04550171 96.19281769]
[283.05764771 95.51937866]
[268.12033081 94.11701965]
[253.26902771 91.98905182]
[238.53892517 89.14053345]
[223.96499634 85.57822418]
[209.58178711 81.31056976]
[195.42341614 76.34768677]
[181.52346802 70.70134735]
[167.91491699 64.38495636]
[154.63002014 57.41348267]
[141.70031738 49.80346680]
[133.47151184 62.34486771]
[125.24270630 74.88626862]
[117.01390076 87.42766571]
[108.78508759 99.96907043]
[109.14955139 102.99507141]
[108.42102814 106.22055817]
[106.52352142 109.24097443]
[103.53153229 111.62933350]
[99.67450714 112.99179840]
[90.71380615 125.02117157]
[81.75311279 137.05055237]
[72.79241180 149.07992554]
[63.83171844 161.10929871]
[54.87102509 173.13868713]
[45.91032791 185.16806030]
[36.94963074 197.19743347]
[47.91235733 207.45895386]
[57.65720367 218.88339233]
[66.06161499 231.32710266]
[73.01990509 244.63357544]
[78.44455719 258.63546753]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 205]
[50 204]
[51 203]
[52 202]
[53 201]
[54 200]
[55 199]
[56 198]
[57 193]
[58 192]
[59 191]
[60 190]
[61 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
