%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[119.84227753 760.12829590]
[105.28947449 756.47625732]
[90.96659851 752.00677490]
[76.91951752 746.73413086]
[63.19324493 740.67517090]
[49.83173752 733.84942627]
[36.87780380 726.27862549]
[24.37293243 717.98712158]
[12.35718632 709.00140381]
[0.86905313 699.35028076]
[-10.05466652 689.06463623]
[-20.37897873 678.17755127]
[-30.07081413 666.72375488]
[-39.09912491 654.73992920]
[-47.43499374 642.26458740]
[-55.05171585 629.33764648]
[-61.92488861 616.00042725]
[-68.03250122 602.29577637]
[-73.35498810 588.26745605]
[-77.87529755 573.96057129]
[-81.57894897 559.42083740]
[-84.45407867 544.69482422]
[-86.49147797 529.82977295]
[-87.68462372 514.87322998]
[-88.02968597 499.87316895]
[-87.52556610 484.87759399]
[-86.17387390 469.93457031]
[-83.97894287 455.09194946]
[-80.94780731 440.39727783]
[-77.09016418 425.89761353]
[-72.41838837 411.63943481]
[-66.94743347 397.66839600]
[-60.69482422 384.02926636]
[-53.68059158 370.76571655]
[-45.92721176 357.92022705]
[-37.45951080 345.53396606]
[-28.30461693 333.64663696]
[-18.49185944 322.29626465]
[-8.05266762 311.51922607]
[2.97951627 301.35003662]
[14.56935310 291.82128906]
[26.67971802 282.96353149]
[39.27181625 274.80508423]
[52.30531311 267.37210083]
[65.73845673 260.68838501]
[79.52821350 254.77537537]
[93.63041687 249.65199280]
[107.99989319 245.33464050]
[122.59059906 241.83717346]
[119.92480469 227.07595825]
[117.25901031 212.31474304]
[114.59321594 197.55352783]
[111.92742157 182.79229736]
[108.82331085 168.11700439]
[105.28363800 153.54061890]
[101.74396515 138.96424866]
[98.20429230 124.38787842]
[94.66461945 109.81150055]
[91.01653290 95.26187897]
[87.26023102 80.73982239]
[83.28813171 66.27529907]
[79.10112762 51.87151337]
[74.91411591 37.46773148]
[70.72710419 23.06394958]
[66.54009247 8.66016769]
[62.35308075 -5.74361467]
[58.16606903 -20.14739609]
[43.38479233 -17.51187706]
[28.40711403 -16.46246910]
[13.40274239 -17.01106071]
[-1.45831013 -19.15143776]
[-16.00765800 -22.85934639]
[-30.08044434 -28.09277534]
[-43.51721573 -34.79242325]
[-56.16572189 -42.88238144]
[-67.88264465 -52.27098083]
[-78.53522491 -62.85184479]
[-88.00275421 -74.50508118]
[-96.17797089 -87.09864807]
[-102.96823120 -100.48986053]
[-108.29660034 -114.52696991]
[-112.10270691 -129.05093384]
[-114.34342194 -143.89720154]
[-114.99335480 -158.89752197]
[-114.04514313 -173.88194275]
[-111.50952911 -188.68067932]
[-107.41524506 -203.12606812]
[-101.80868530 -217.05439758]
[-94.75337219 -230.30787659]
[-86.32925415 -242.73632812]
[-76.63176727 -254.19891357]
[-65.77081299 -264.56576538]
[-53.86943436 -273.71942139]
[-41.06249619 -281.55615234]
[-27.49510765 -287.98718262]
[-13.32099533 -292.93960571]
[1.29923522 -296.35736084]
[16.19992638 -298.20166016]
[31.21224022 -298.45166016]
[46.16608047 -297.10452271]
[60.89200211 -294.17547607]
[75.22315216 -289.69772339]
[88.99714661 -283.72201538]
[102.05792236 -276.31604004]
[114.25747681 -267.56372070]
[125.45759583 -257.56427002]
[135.53135681 -246.43092346]
[144.36463928 -234.28985596]
[151.85733032 -221.27864075]
[157.92454529 -207.54470825]
[162.49752808 -193.24366760]
[165.52447510 -178.53755188]
[166.97108459 -163.59300232]
[166.82096863 -148.57936096]
[165.07582092 -133.66673279]
[161.75543213 -119.02408600]
[156.89739990 -104.81733704]
[150.55677795 -91.20746613]
[142.80541992 -78.34867859]
[133.73114014 -66.38666534]
[123.43677521 -55.45697784]
[112.03895569 -45.68345642]
[99.66682434 -37.17683411]
[86.46057892 -30.03350639]
[72.56984711 -24.33440781]
[76.75685883 -9.93062592]
[80.94387054 4.47315645]
[85.13088226 18.87693787]
[89.31789398 33.28071976]
[93.50490570 47.68450165]
[97.69191742 62.08828354]
[101.37166595 65.13270569]
[103.17799377 70.52104950]
[101.78228760 76.98352051]
[105.53858948 91.50557709]
[110.44554138 97.90045166]
[109.24099731 106.27182770]
[112.78067017 120.84820557]
[116.32034302 135.42457581]
[119.86001587 150.00094604]
[123.39968109 164.57733154]
[126.50676727 167.61048889]
[128.30607605 171.12147522]
[128.80796814 174.64048767]
[128.17434692 177.74937439]
[126.68863678 180.12651062]
[129.35443115 194.88772583]
[132.02023315 209.64894104]
[134.68601990 224.41015625]
[137.35182190 239.17137146]
[152.24420166 237.34436035]
[167.21611023 236.36282349]
[182.21955872 236.22987366]
[197.20649719 236.94598389]
[212.12892151 238.50881958]
[226.93902588 240.91340637]
[241.58937073 244.15200806]
[256.03302002 248.21427917]
[270.22372437 253.08718872]
[284.11599731 258.75515747]
[297.66537476 265.19998169]
[310.82843018 272.40103149]
[323.56298828 280.33529663]
[335.82827759 288.97726440]
[347.58499146 298.29931641]
[358.79547119 308.27160645]
[369.42382812 318.86212158]
[379.43600464 330.03698730]
[388.79992676 341.76040649]
[397.48559570 353.99481201]
[405.46517944 366.70098877]
[412.71310425 379.83828735]
[419.20620728 393.36459351]
[424.92364502 407.23657227]
[429.84713745 421.40982056]
[433.96087646 435.83889771]
[437.25167847 450.47760010]
[439.70904541 465.27902222]
[441.32507324 480.19580078]
[442.09460449 495.18008423]
[442.01516724 510.18392944]
[441.08700562 525.15924072]
[439.31311035 540.05804443]
[436.69912720 554.83264160]
[433.25347900 569.43566895]
[428.98715210 583.82037354]
[423.91387939 597.94067383]
[418.04983521 611.75134277]
[411.41387939 625.20812988]
[404.02722168 638.26788330]
[395.91351318 650.88891602]
[387.09878540 663.03063965]
[377.61123657 674.65423584]
[367.48129272 685.72241211]
[356.74139404 696.19982910]
[345.42593384 706.05279541]
[333.57113647 715.24981689]
[321.21502686 723.76147461]
[308.39715576 731.56036377]
[295.15859985 738.62164307]
[281.54171753 744.92266846]
[267.59020996 750.44317627]
[253.34869385 755.16552734]
[238.86283875 759.07458496]
[224.17901611 762.15789795]
[209.34426880 764.40551758]
[194.40614319 765.81024170]
[179.41246033 766.36755371]
[164.41125488 766.07574463]
[149.45059204 764.93572998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 150]
[50 149]
[51 148]
[52 147]
[53 146]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 135]
[60 134]
[61 131]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
