%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[180.87983704 673.53991699]
[167.74438477 666.29034424]
[154.99296570 658.38476562]
[142.65832520 649.84344482]
[130.77214050 640.68835449]
[119.36489868 630.94299316]
[108.46589661 620.63238525]
[98.10310364 609.78302002]
[88.30313110 598.42266846]
[79.09112549 586.58050537]
[70.49074554 574.28698730]
[62.52405548 561.57366943]
[55.21151352 548.47314453]
[48.57188797 535.01904297]
[42.62222290 521.24597168]
[37.37779617 507.18917847]
[32.85206223 492.88479614]
[29.05664444 478.36956787]
[26.00128174 463.68075562]
[23.69382095 448.85601807]
[22.14018059 433.93344116]
[21.34435463 418.95132446]
[21.30838203 403.94815063]
[22.03235626 388.96237183]
[23.51441765 374.03253174]
[25.75076294 359.19689941]
[28.73565292 344.49359131]
[32.46142197 329.96032715]
[36.91851044 315.63442993]
[42.09547043 301.55267334]
[47.97901917 287.75119019]
[54.55405045 274.26541138]
[61.80368805 261.12997437]
[69.70932007 248.37857056]
[78.25065613 236.04396057]
[87.40576172 224.15779114]
[97.15115356 212.75057983]
[107.46179199 201.85160828]
[118.31122589 191.48884583]
[129.67160034 181.68890381]
[141.51376343 172.47692871]
[132.91519165 160.18609619]
[124.31663513 147.89524841]
[115.71807098 135.60441589]
[107.11950684 123.31358337]
[98.52094269 111.02274323]
[94.85034180 125.56670380]
[82.04193115 133.37339783]
[67.43295288 129.97082520]
[59.39208221 117.30810547]
[62.52550125 102.63903046]
[75.03824615 94.36671448]
[89.76165009 97.22939301]
[82.29391479 84.22044373]
[74.82617188 71.21148682]
[67.35842896 58.20253754]
[59.89068985 45.19358444]
[52.42294693 32.18463135]
[44.95520782 19.17568016]
[37.48746490 6.16672754]
[23.72213554 12.16496944]
[9.38048840 16.61247826]
[-5.36338329 19.45526695]
[-20.33050156 20.65882301]
[-35.33917999 20.20853806]
[-50.20722580 18.10988045]
[-64.75415802 14.38832188]
[-78.80339050 9.08904171]
[-92.18437195 2.27636719]
[-104.73467255 -5.96700191]
[-116.30194092 -15.54099846]
[-126.74576569 -26.32940292]
[-135.93937683 -38.20125580]
[-143.77114868 -51.01243973]
[-150.14602661 -64.60744476]
[-154.98663330 -78.82122803]
[-158.23419189 -93.48126221]
[-159.84927368 -108.40958405]
[-159.81230164 -123.42496490]
[-158.12370300 -138.34515381]
[-154.80398560 -152.98901367]
[-149.89343262 -167.17878723]
[-143.45167542 -180.74221802]
[-135.55690002 -193.51467896]
[-126.30493164 -205.34111023]
[-115.80809784 -216.07794189]
[-104.19380951 -225.59484863]
[-91.60305786 -233.77630615]
[-78.18869019 -240.52299500]
[-64.11353302 -245.75302124]
[-49.54844666 -249.40289307]
[-34.67024231 -251.42828369]
[-19.65952873 -251.80464172]
[-4.69852018 -250.52738953]
[10.03117180 -247.61201477]
[24.35074043 -243.09393311]
[38.08636093 -237.02796936]
[51.07129288 -229.48776245]
[63.14791107 -220.56483459]
[74.16962433 -210.36753845]
[84.00262451 -199.01960754]
[92.52755737 -186.65884399]
[99.64094543 -173.43527222]
[105.25642395 -159.50939941]
[109.30583191 -145.05030823]
[111.74001312 -130.23348999]
[112.52941895 -115.23883057]
[111.66446686 -100.24832916]
[109.15566254 -85.44396973]
[105.03345490 -71.00546265]
[99.34787750 -57.10807037]
[92.16795349 -43.92050171]
[83.58084869 -31.60284233]
[73.69078827 -20.30461311]
[62.61784363 -10.16296768]
[50.49641800 -1.30101371]
[57.96415710 11.70793819]
[65.43190002 24.71689034]
[72.89964294 37.72584152]
[80.36737823 50.73479462]
[87.83512115 63.74374771]
[95.30286407 76.75270081]
[102.77060699 89.76165009]
[110.81177521 102.42417908]
[119.41033936 114.71501923]
[128.00891113 127.00585175]
[136.60746765 139.29669189]
[145.20603943 151.58752441]
[153.80459595 163.87837219]
[166.51786804 155.91157532]
[179.61833191 148.59892273]
[193.07237244 141.95918274]
[206.84542847 136.00941467]
[220.90216064 130.76486206]
[235.20648193 126.23902130]
[249.72167969 122.44348145]
[264.41049194 119.38800049]
[279.23519897 117.08041382]
[294.15777588 115.52665710]
[309.13986206 114.73070526]
[324.14306641 114.69461060]
[339.12881470 115.41845703]
[354.05868530 116.90039825]
[368.89434814 119.13662720]
[383.59768677 122.12139130]
[398.13095093 125.84704590]
[412.45690918 130.30401611]
[426.53869629 135.48086548]
[440.34024048 141.36428833]
[453.82604980 147.93920898]
[466.96157837 155.18875122]
[479.71301270 163.09426880]
[492.04769897 171.63551331]
[503.93395996 180.79051208]
[515.34124756 190.53581238]
[526.24029541 200.84635925]
[536.60314941 211.69570923]
[546.40319824 223.05601501]
[555.61523438 234.89808655]
[564.21569824 247.19155884]
[572.18243408 259.90484619]
[579.49505615 273.00534058]
[586.13476562 286.45938110]
[592.08453369 300.23245239]
[597.32904053 314.28921509]
[601.85485840 328.59353638]
[605.65032959 343.10876465]
[608.70574951 357.79757690]
[611.01330566 372.62228394]
[612.56701660 387.54486084]
[613.36291504 402.52697754]
[613.39898682 417.53015137]
[612.67510986 432.51589966]
[611.19311523 447.44577026]
[608.95684814 462.28140259]
[605.97204590 476.98474121]
[602.24633789 491.51803589]
[597.78936768 505.84396362]
[592.61248779 519.92572021]
[586.72900391 533.72723389]
[580.15405273 547.21307373]
[572.90447998 560.34857178]
[564.99890137 573.09997559]
[556.45764160 585.43463135]
[547.30261230 597.32086182]
[537.55725098 608.72814941]
[527.24670410 619.62713623]
[516.39733887 629.98999023]
[505.03698730 639.78997803]
[493.19488525 649.00201416]
[480.90139771 657.60241699]
[468.18807983 665.56915283]
[455.08758545 672.88171387]
[441.63351440 679.52142334]
[427.86041260 685.47106934]
[413.80364990 690.71557617]
[399.49929810 695.24133301]
[384.98406982 699.03680420]
[370.29525757 702.09222412]
[355.47052002 704.39971924]
[340.54797363 705.95336914]
[325.56585693 706.74926758]
[310.56265259 706.78527832]
[295.57690430 706.06134033]
[280.64703369 704.57928467]
[265.81140137 702.34301758]
[251.10809326 699.35815430]
[236.57481384 695.63244629]
[222.24890137 691.17535400]
[208.16712952 685.99847412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 129]
[42 128]
[43 127]
[44 126]
[45 125]
[46 124]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[58 118]
[59 117]
[60 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
