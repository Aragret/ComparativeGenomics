%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[121.02339935 624.50323486]
[114.13626862 611.13629150]
[109.60739136 596.79766846]
[107.56707001 581.89984131]
[108.07400513 566.87145996]
[111.11362457 552.14501953]
[116.59845734 538.14416504]
[124.37070465 525.27166748]
[134.20674133 513.89801025]
[145.82356262 504.35037231]
[158.88693237 496.90347290]
[173.02098083 491.77154541]
[170.35519409 477.01031494]
[167.68939209 462.24911499]
[165.02360535 447.48788452]
[155.14758301 436.33828735]
[160.30914307 421.38275146]
[157.64335632 406.62152100]
[154.97755432 391.86029053]
[150.69535828 385.83663940]
[152.38366699 376.85958862]
[149.93794250 362.06030273]
[147.49221802 347.26104736]
[145.04649353 332.46176147]
[142.60076904 317.66250610]
[140.15502930 302.86322021]
[123.52823639 292.71118164]
[119.66863251 273.30480957]
[131.50526428 257.06988525]
[128.40115356 242.39457703]
[125.29705048 227.71926880]
[122.19293976 213.04397583]
[119.08882904 198.36866760]
[115.98471832 183.69335938]
[112.88060760 169.01806641]
[102.67700195 158.16744995]
[107.39100647 143.06484985]
[104.28689575 128.38954163]
[99.14493561 114.29840088]
[87.37055206 106.75814056]
[87.62953949 92.77870178]
[74.29653168 84.26158142]
[75.11370850 69.38941193]
[61.78069305 60.87228394]
[62.59786987 46.00011063]
[55.52076340 32.77458572]
[48.44366074 19.54905701]
[41.36655426 6.32352972]
[33.70595551 -6.57279730]
[25.47714806 -19.11419678]
[17.24834061 -31.65559769]
[9.01953316 -44.19699860]
[0.79072499 -56.73839951]
[2.59461570 -41.84725952]
[1.49901378 -26.88732529]
[-2.45512056 -12.41788101]
[-9.11995983 1.02012169]
[-18.24633217 12.92429352]
[-29.49304390 22.84958839]
[-42.43962860 30.42494202]
[-56.60206604 35.36714172]
[-71.45088196 37.49142456]
[-86.43095398 36.71836853]
[-100.98222351 33.07687759]
[-114.56069183 26.70309067]
[-126.65871429 17.83529472]
[-136.82400513 6.80502129]
[-144.67651367 -5.97535610]
[-149.92268372 -20.02803421]
[-152.36636353 -34.82764053]
[-151.91621399 -49.82088470]
[-148.58906555 -64.44723511]
[-142.50927734 -78.15986633]
[-133.90417480 -90.44612885]
[-123.09546661 -100.84668732]
[-110.48722839 -108.97271729]
[-96.55083466 -114.52040863]
[-81.80730438 -117.28236389]
[-66.80784607 -117.15533447]
[-52.11321259 -114.14405060]
[-38.27278137 -108.36110687]
[-25.80398560 -100.02268982]
[-15.17297935 -89.44055176]
[-6.78012085 -77.01566315]
[-8.78413486 -91.88119507]
[-10.78814888 -106.74671936]
[-12.79216194 -121.61225128]
[-14.90678596 -136.46244812]
[-17.13190269 -151.29649353]
[-32.12551498 -152.98588562]
[-46.17062759 -158.49923706]
[-58.30962753 -167.46066284]
[-67.71485138 -179.25914001]
[-73.74504089 -193.09024048]
[-75.98905182 -208.01092529]
[-74.29386902 -223.00389099]
[-68.77508545 -237.04687500]
[-59.80897141 -249.18240356]
[-48.00686264 -258.58306885]
[-34.17343903 -264.60794067]
[-19.25188637 -266.84616089]
[-4.25958538 -265.14520264]
[9.78126717 -259.62100220]
[21.91334343 -250.65020752]
[31.30945587 -238.84446716]
[37.32896042 -225.00871277]
[39.56144333 -210.08630371]
[37.85468674 -195.09465027]
[32.32505798 -181.05593872]
[23.34957886 -168.92732239]
[11.54021263 -159.53576660]
[-2.29785943 -153.52160645]
[-0.07274234 -138.68756104]
[4.02820492 -132.53906250]
[2.07336617 -123.61626434]
[4.07737970 -108.75073242]
[6.08139324 -93.88520813]
[8.08540726 -79.01967621]
[13.33212566 -64.96720886]
[21.56093407 -52.42580414]
[29.78974152 -39.88440704]
[38.01854706 -27.34300613]
[46.24735641 -14.80160522]
[50.34935379 -29.22982788]
[63.38451767 -36.65171814]
[77.88571930 -32.81567764]
[85.54600525 -19.91916847]
[81.97722626 -5.34989357]
[69.22372437 2.54620385]
[54.59208298 -0.75357574]
[61.66918564 12.47195148]
[68.74629211 25.69747925]
[75.82339478 38.92300797]
[88.65020752 46.49415207]
[88.33923340 62.31230164]
[101.16603851 69.88344574]
[100.85506439 85.70159912]
[112.62944794 93.24185944]
[112.37046051 107.22129822]
[112.18097687 92.22248840]
[116.36326599 77.81733704]
[124.55550385 65.25202179]
[136.04898071 55.61356354]
[149.84941101 49.73579788]
[164.76290894 48.12720108]
[179.49931335 50.92693329]
[192.78376770 57.89279556]
[203.46704102 68.42216492]
[210.62492371 81.60415649]
[213.63818359 96.29837799]
[212.24615479 111.23365021]
[206.56924438 125.11790466]
[197.09857178 136.75003052]
[184.65344238 145.12373352]
[170.31048584 149.51458740]
[155.31051636 149.54275513]
[140.95117188 145.20579529]
[128.47467041 136.87889099]
[118.96219635 125.28543091]
[122.06630707 139.96073914]
[132.49194336 151.86102295]
[127.55591583 165.91395569]
[130.66001892 180.58924866]
[133.76412964 195.26455688]
[136.86824036 209.93986511]
[139.97235107 224.61515808]
[143.07646179 239.29046631]
[146.18057251 253.96575928]
[156.29110718 257.37179565]
[164.01673889 264.61206055]
[168.00933838 274.33126831]
[167.61045837 284.75018311]
[162.95906067 293.99139404]
[154.95429993 300.41751099]
[157.40003967 315.21676636]
[159.84576416 330.01605225]
[162.29148865 344.81530762]
[164.73721313 359.61459351]
[167.18293762 374.41384888]
[169.73876953 389.19451904]
[172.40457153 403.95571899]
[175.07037354 418.71694946]
[185.13705444 430.92236328]
[179.78482056 444.82211304]
[182.45060730 459.58331299]
[185.11640930 474.34454346]
[187.78219604 489.10574341]
[202.81848145 488.96966553]
[217.66143799 491.37683105]
[231.88401794 496.25802612]
[245.07702637 503.47277832]
[256.86087036 512.81353760]
[266.89648438 524.01147461]
[274.89511108 536.74450684]
[280.62667847 550.64617920]
[283.92620850 565.31658936]
[284.69882202 580.33361816]
[282.92224121 595.26519775]
[278.64761353 609.68170166]
[271.99792480 623.16833496]
[263.16445923 635.33709717]
[252.40144348 645.83782959]
[240.01850891 654.36840820]
[226.37194824 660.68341064]
[211.85440063 664.60113525]
[196.88354492 666.00885010]
[181.89013672 664.86608887]
[167.30558777 661.20568848]
[153.54948425 655.13299561]
[141.01763916 646.82269287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 187]
[13 186]
[14 185]
[15 184]
[17 182]
[18 181]
[19 180]
[21 179]
[22 178]
[23 177]
[24 176]
[25 175]
[26 174]
[29 168]
[30 167]
[31 166]
[32 165]
[33 164]
[34 163]
[35 162]
[37 160]
[38 159]
[39 139]
[41 137]
[43 135]
[45 133]
[46 132]
[47 131]
[48 130]
[49 123]
[50 122]
[51 121]
[52 120]
[53 119]
[84 118]
[85 117]
[86 116]
[87 115]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
