%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[92.86049652 499.70138550]
[86.32369232 513.25708008]
[77.26766205 525.27679443]
[66.04049683 535.29864502]
[53.07374954 542.93731689]
[38.86581421 547.89929199]
[23.96281433 549.99377441]
[8.93757820 549.14025879]
[-5.63236523 545.37152100]
[-19.18698311 538.83251953]
[-31.20527649 529.77459717]
[-41.22528839 518.54577637]
[-48.86188126 505.57778931]
[-53.82152176 491.36907959]
[-55.91357803 476.46572876]
[-55.05763245 461.44061279]
[-51.28658676 446.87130737]
[-44.74539185 433.31774902]
[-35.68547440 421.30090332]
[-24.45506859 411.28271484]
[-11.48584461 403.64822388]
[2.72369409 398.69088745]
[17.62737274 396.60122681]
[32.65233231 397.45962524]
[36.40863419 382.93756104]
[40.16493225 368.41549683]
[43.92123413 353.89343262]
[47.67753601 339.37136841]
[43.37393188 325.11206055]
[54.32053757 313.68917847]
[56.32455063 298.82363892]
[56.54787827 283.82531738]
[56.77120972 268.82696533]
[49.22425461 255.98590088]
[57.16616058 242.30245972]
[57.38948822 227.30412292]
[57.61281586 212.30578613]
[57.83614349 197.30744934]
[50.98110580 210.64942932]
[41.16952515 221.99548340]
[28.95630074 230.70393372]
[15.03214741 236.28228760]
[0.18454340 238.41503906]
[-14.74680710 236.98158264]
[-28.91746330 232.06300354]
[-41.52600861 223.93745422]
[-51.85936356 213.06446838]
[-59.33312988 200.05897522]
[-63.52463150 185.65649414]
[-64.19681549 170.67156982]
[-61.31166840 155.95164490]
[-55.03235626 142.32923889]
[-45.71401215 130.57472229]
[-33.88362503 121.35290527]
[-20.21026421 115.18531036]
[-5.46722555 112.42075348]
[9.51170158 113.21556854]
[23.87938690 117.52481842]
[36.82326508 125.10478973]
[47.61130142 135.52679443]
[55.63338089 148.20143127]
[60.43581009 162.41186523]
[61.74695587 177.35552979]
[67.20231628 163.38273621]
[53.98754501 154.55192566]
[43.05496979 143.01536560]
[34.94683838 129.34527588]
[30.06531715 114.21966553]
[28.65252113 98.38877106]
[30.77852631 82.63778687]
[36.33788300 67.74796295]
[45.05485153 54.45782852]
[56.49707031 43.42655945]
[70.09701538 35.20130920]
[85.18013763 30.19004059]
[100.99831390 28.64131355]
[116.76697540 30.63194275]
[121.80389404 16.50291443]
[126.84080505 2.37388396]
[131.77239990 -11.79225063]
[136.59840393 -25.99470711]
[141.42439270 -40.19716263]
[136.43377686 -52.09070969]
[140.74574280 -63.82061386]
[151.53680420 -69.28683472]
[156.57371521 -83.41586304]
[161.61064148 -97.54489136]
[166.54223633 -111.71102905]
[163.65629578 -127.26679230]
[175.07699585 -136.82801819]
[179.90298462 -151.03047180]
[166.36859131 -157.54028320]
[153.71757507 -165.63404846]
[142.13441467 -175.19374084]
[131.78804016 -186.07997131]
[122.82932281 -198.13395691]
[115.38891602 -211.17994690]
[109.57531738 -225.02766418]
[105.47329712 -239.47518921]
[103.14269257 -254.31181335]
[102.61747742 -269.32119751]
[103.90531921 -284.28445435]
[106.98743439 -298.98336792]
[111.81887054 -313.20358276]
[118.32917786 -326.73773193]
[126.42342377 -339.38842773]
[135.98355103 -350.97125244]
[146.87016296 -361.31719971]
[158.92449951 -370.27548218]
[171.97074890 -377.71539307]
[185.81869507 -383.52847290]
[200.26637268 -387.62994385]
[215.10308838 -389.95999146]
[230.11248779 -390.48464966]
[245.07568359 -389.19625854]
[259.77447510 -386.11358643]
[273.99450684 -381.28161621]
[287.52841187 -374.77081299]
[300.17883301 -366.67608643]
[311.76129150 -357.11553955]
[322.10684204 -346.22854614]
[331.06466675 -334.17385864]
[338.50408936 -321.12731934]
[344.31665039 -307.27917480]
[348.41760254 -292.83135986]
[350.74710083 -277.99453735]
[351.27117920 -262.98510742]
[349.98220825 -248.02197266]
[346.89901733 -233.32328796]
[342.06649780 -219.10343933]
[335.55517578 -205.56976318]
[327.45999146 -192.91966248]
[317.89898682 -181.33757019]
[307.01162720 -170.99241638]
[294.95660400 -162.03504944]
[281.90979004 -154.59611511]
[268.06143188 -148.78405762]
[253.61344910 -144.68367004]
[238.77655029 -142.35472107]
[223.76710510 -141.83119202]
[208.80400085 -143.12071228]
[194.10543823 -146.20446777]
[189.27944946 -132.00201416]
[192.51057434 -117.46210480]
[180.74468994 -106.88503265]
[181.56903076 -99.54048920]
[175.73966980 -92.50797272]
[170.70274353 -78.37894440]
[165.66583252 -64.24991608]
[169.75305176 -47.18352890]
[155.62684631 -35.37116623]
[150.80085754 -21.16870880]
[145.97485352 -6.96625328]
[146.79920959 0.37828469]
[140.96983337 7.41080046]
[135.93292236 21.53982925]
[130.89601135 35.66885757]
[142.91188049 42.97694016]
[153.26127625 52.49951935]
[161.54225159 63.86677933]
[167.43324280 76.63727570]
[170.70544434 90.31507111]
[171.23181152 104.36897278]
[168.99188232 118.25321198]
[164.07263184 131.42858887]
[156.66513062 143.38342285]
[147.05703735 153.65347290]
[135.62147522 161.83987427]
[122.80254364 167.62472534]
[109.09808350 170.78335571]
[95.04029083 171.19311523]
[81.17510986 168.83808899]
[75.71975708 182.81088257]
[72.83448029 197.53077698]
[72.61115265 212.52911377]
[72.38782501 227.52745056]
[72.16449738 242.52578735]
[79.69548035 256.43963623]
[71.76954651 269.05029297]
[71.54621887 284.04864502]
[71.32289124 299.04696655]
[78.77552795 286.02935791]
[90.18621063 276.29302979]
[104.21441650 270.98175049]
[119.21212006 270.71954346]
[133.41741943 275.53717041]
[145.16148376 284.86868286]
[153.06462097 297.61779785]
[156.19839478 312.28680420]
[154.19465637 327.15237427]
[147.28878784 340.46810913]
[136.29208374 350.66970825]
[122.49642944 356.55868530]
[107.52253723 357.44320679]
[93.12950897 353.21939087]
[81.00822449 344.38339233]
[72.58268738 331.97329712]
[68.84259796 317.44546509]
[72.87752533 332.74349976]
[62.19959259 343.12768555]
[58.44329453 357.64974976]
[54.68699265 372.17178345]
[50.93069077 386.69384766]
[47.17439270 401.21591187]
[60.73112488 407.75051880]
[72.75234985 416.80459595]
[82.77600098 428.03015137]
[90.41678619 440.99566650]
[95.38102722 455.20278931]
[97.47790527 470.10546875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 204]
[25 203]
[26 202]
[27 201]
[28 200]
[30 198]
[31 181]
[32 180]
[33 179]
[35 177]
[36 176]
[37 175]
[38 174]
[63 173]
[64 172]
[77 157]
[78 156]
[79 155]
[80 153]
[81 152]
[82 151]
[85 149]
[86 148]
[87 147]
[88 145]
[90 143]
[91 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
