%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[86.02313232 662.24291992]
[71.25227356 659.60260010]
[56.67634964 656.04003906]
[42.35288239 651.56927490]
[28.33840561 646.20794678]
[14.68822384 639.97717285]
[1.45620942 632.90167236]
[-11.30541611 625.00921631]
[-23.54628754 616.33105469]
[-35.21809769 606.90142822]
[-46.27478027 596.75750732]
[-56.67269897 585.93933105]
[-66.37081909 574.48962402]
[-75.33086395 562.45355225]
[-83.51747894 549.87860107]
[-90.89835358 536.81445312]
[-97.44435120 523.31262207]
[-103.12963867 509.42639160]
[-107.93178558 495.21060181]
[-111.83184052 480.72134399]
[-114.81439972 466.01574707]
[-116.86770630 451.15191650]
[-117.98364258 436.18850708]
[-118.15782166 421.18453979]
[-117.38954163 406.19921875]
[-115.68183899 391.29174805]
[-113.04145813 376.52090454]
[-109.47880554 361.94500732]
[-105.00796509 347.62155151]
[-99.64656067 333.60708618]
[-93.41575623 319.95693970]
[-86.34014893 306.72497559]
[-78.44765472 293.96337891]
[-69.76942444 281.72256470]
[-60.33971024 270.05081177]
[-50.19572830 258.99417114]
[-39.37750626 248.59631348]
[-27.92774200 238.89825439]
[-15.89162350 229.93826294]
[-3.31665182 221.75172424]
[9.74754524 214.37091064]
[23.24940872 207.82498169]
[37.13565063 202.13977051]
[51.35147476 197.33769226]
[65.84076691 193.43772888]
[80.54635620 190.45523071]
[95.41019440 188.40200806]
[94.29454803 173.44355774]
[93.17889404 158.48510742]
[92.06324768 143.52665710]
[82.34158325 154.94984436]
[67.57316589 157.57545471]
[54.50992203 150.20310974]
[49.12417984 136.20333862]
[53.87823868 121.97663116]
[66.59860229 114.02726746]
[81.46968842 115.98958588]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[85.99028778 58.56083679]
[94.10309601 46.06957245]
[94.54969788 31.07622337]
[94.99630737 16.08287430]
[82.12956238 11.61737442]
[71.05496979 3.71866417]
[62.66359329 -6.96609306]
[57.62733459 -19.56604385]
[56.34511185 -33.05762100]
[58.91131210 -46.34769440]
[65.10887909 -58.36213303]
[74.42766571 -68.13262939]
[86.10640717 -74.87471771]
[99.19487762 -78.05079651]
[100.08769226 -93.02420807]
[100.98050690 -107.99761200]
[101.87332153 -122.97101593]
[102.76613617 -137.94442749]
[103.65895844 -152.91783142]
[104.55177307 -167.89123535]
[89.77669525 -170.58465576]
[75.43401337 -175.03941345]
[61.73289108 -181.19055176]
[48.87312317 -188.94836426]
[37.04224396 -198.19973755]
[26.41278458 -208.80972290]
[17.13975334 -220.62362671]
[9.35837746 -233.46914673]
[3.18213415 -247.15898132]
[-1.29890990 -261.49346924]
[-4.01940823 -276.26358032]
[-4.93968678 -291.25393677]
[-4.04632664 -306.24591064]
[-1.35235453 -321.02087402]
[3.10294318 -335.36337280]
[9.25459480 -349.06427002]
[17.01289177 -361.92376709]
[26.26469421 -373.75430298]
[36.87508392 -384.38336182]
[48.68933105 -393.65594482]
[61.53514862 -401.43682861]
[75.22521210 -407.61257935]
[89.55986786 -412.09307861]
[104.33007812 -414.81301880]
[119.32045746 -415.73275757]
[134.31240845 -414.83883667]
[149.08728027 -412.14428711]
[163.42962646 -407.68847656]
[177.13027954 -401.53631592]
[189.98947144 -393.77752686]
[201.81965637 -384.52526855]
[212.44833374 -373.91448975]
[221.72047424 -362.09988403]
[229.50088501 -349.25378418]
[235.67611694 -335.56350708]
[240.15608215 -321.22866821]
[242.87547302 -306.45834351]
[243.79463196 -291.46795654]
[242.90014648 -276.47604370]
[240.20507812 -261.70126343]
[235.74870300 -247.35908508]
[229.59602356 -233.65864563]
[221.83677673 -220.79974365]
[212.58407593 -208.96990967]
[201.97290039 -198.34164429]
[190.15795898 -189.06993103]
[177.31155396 -181.28999329]
[163.62103271 -175.11529541]
[149.28604126 -170.63584900]
[134.51562500 -167.91700745]
[119.52517700 -166.99841309]
[118.63236237 -152.02500916]
[117.73954773 -137.05160522]
[116.84673309 -122.07820129]
[115.95391083 -107.10479736]
[115.06109619 -92.13138580]
[114.16828156 -77.15798187]
[129.39710999 -70.91481018]
[141.58720398 -59.81789398]
[149.25341797 -45.19543076]
[151.45361328 -28.80656433]
[147.90444946 -12.62976170]
[139.01771545 1.37604165]
[125.85263824 11.50865078]
[109.98965454 16.52947998]
[109.54305267 31.52283096]
[109.09644318 46.51618195]
[116.45137787 59.46817780]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[107.02169800 142.41099548]
[108.13735199 157.36946106]
[109.25299835 172.32791138]
[110.36864471 187.28636169]
[125.37261200 187.11195374]
[140.35792542 187.87998962]
[155.26544189 189.58746338]
[170.03633118 192.22761536]
[184.61228943 195.79003906]
[198.93580627 200.26065063]
[212.95033264 205.62184143]
[226.60058594 211.85243225]
[239.83267212 218.92782593]
[252.59437561 226.82012939]
[264.83535767 235.49816895]
[276.50726318 244.92768860]
[287.56402588 255.07150269]
[297.96206665 265.88955688]
[307.66030884 277.33917236]
[316.62048340 289.37515259]
[324.80722046 301.95001221]
[332.18823242 315.01406860]
[338.73437500 328.51583862]
[344.41979980 342.40200806]
[349.22210693 356.61773682]
[353.12231445 371.10696411]
[356.10501099 385.81250000]
[358.15847778 400.67633057]
[359.27456665 415.63973999]
[359.44891357 430.64370728]
[358.68078613 445.62902832]
[356.97323608 460.53652954]
[354.33300781 475.30740356]
[350.77050781 489.88333130]
[346.29983521 504.20681763]
[340.93856812 518.22131348]
[334.70791626 531.87152100]
[327.63244629 545.10357666]
[319.74008179 557.86523438]
[311.06198120 570.10620117]
[301.63238525 581.77801514]
[291.48849487 592.83477783]
[280.67041016 603.23272705]
[269.22073364 612.93090820]
[257.18472290 621.89105225]
[244.60981750 630.07769775]
[231.54570007 637.45867920]
[218.04391479 644.00469971]
[204.15773010 649.69006348]
[189.94195557 654.49230957]
[175.45269775 658.39245605]
[160.74714661 661.37506104]
[145.88333130 663.42846680]
[130.91990662 664.54449463]
[115.91593170 664.71875000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 159]
[48 158]
[49 157]
[50 156]
[58 155]
[59 154]
[61 152]
[62 151]
[64 149]
[65 148]
[66 147]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[81 134]
[82 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
