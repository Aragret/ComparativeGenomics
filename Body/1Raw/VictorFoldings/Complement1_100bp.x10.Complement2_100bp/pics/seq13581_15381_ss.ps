%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[8.34712315 419.16430664]
[0.49079898 431.94845581]
[-8.16846752 444.20294189]
[-17.59509468 455.87747192]
[-27.75034332 466.92404175]
[-38.59248734 477.29724121]
[-50.07696915 486.95449829]
[-62.15660095 495.85607910]
[-74.78173828 503.96542358]
[-87.90051270 511.24920654]
[-101.45899963 517.67749023]
[-115.40149689 523.22387695]
[-129.67071533 527.86560059]
[-144.20799255 531.58349609]
[-158.95362854 534.36236572]
[-173.84700012 536.19079590]
[-188.82691956 537.06121826]
[-203.83183289 536.97003174]
[-218.80007935 535.91772461]
[-233.67013550 533.90856934]
[-248.38092041 530.95074463]
[-262.87197876 527.05651855]
[-277.08374023 522.24188232]
[-290.95785522 516.52648926]
[-304.43725586 509.93399048]
[-317.46658325 502.49139404]
[-329.99227905 494.22927856]
[-341.96289062 485.18161011]
[-353.32922363 475.38558960]
[-364.04455566 464.88143921]
[-374.06484985 453.71231079]
[-383.34896851 441.92416382]
[-391.85876465 429.56536865]
[-399.55920410 416.68676758]
[-406.41870117 403.34124756]
[-412.40902710 389.58364868]
[-417.50561523 375.47052002]
[-421.68750000 361.05981445]
[-424.93746948 346.41082764]
[-427.24221802 331.58367920]
[-428.59225464 316.63937378]
[-428.98199463 301.63922119]
[-428.40988159 286.64495850]
[-426.87826538 271.71813965]
[-424.39343262 256.92013550]
[-420.96557617 242.31172180]
[-416.60879517 227.95295715]
[-411.34100342 213.90283203]
[-405.18383789 200.21908569]
[-398.16259766 186.95794678]
[-390.30612183 174.17390442]
[-381.64672852 161.91950989]
[-372.21997070 150.24508667]
[-362.06460571 139.19863892]
[-351.22235107 128.82554626]
[-339.73773193 119.16843414]
[-327.65802002 110.26698303]
[-315.03277588 102.15777588]
[-301.91394043 94.87413025]
[-288.35537720 88.44598389]
[-274.41281128 82.89974976]
[-260.14355469 78.25821686]
[-245.60623169 74.54045868]
[-230.86056519 71.76174927]
[-215.96717834 69.93350983]
[-200.98724365 69.06325531]
[-185.98233032 69.15456390]
[-171.01409912 70.20704651]
[-156.14405823 72.21639252]
[-141.43330383 75.17434692]
[-126.94229889 79.06874084]
[-112.73057556 83.88357544]
[-98.85654449 89.59907532]
[-85.37721252 96.19174194]
[-72.34796906 103.63449860]
[-59.82236099 111.89674377]
[-47.85185242 120.94454193]
[-36.48563385 130.74070740]
[-25.77041245 141.24496460]
[-15.75022125 152.41418457]
[-6.46623421 164.20245361]
[5.88827467 155.69563293]
[18.24278450 147.18879700]
[30.59729195 138.68197632]
[42.95180130 130.17515564]
[55.30631256 121.66831970]
[61.40093231 108.07770538]
[77.15521240 106.62403107]
[89.50971985 98.11720276]
[101.05602264 88.54208374]
[111.70203400 77.97503662]
[122.34804535 67.40798950]
[132.99404907 56.84093857]
[143.64006042 46.27389145]
[154.28607178 35.70684433]
[158.62982178 20.49361420]
[173.11349487 17.01906013]
[183.75950623 6.45201254]
[188.10325623 -8.76121712]
[202.58692932 -12.23577213]
[193.08877563 -23.86077118]
[184.75695801 -36.34821320]
[177.66925049 -49.58150482]
[171.89186096 -63.43708801]
[167.47869873 -77.78559113]
[164.47099304 -92.49304962]
[162.89682007 -107.42213440]
[162.77088928 -122.43344879]
[164.09434509 -137.38684082]
[166.85485840 -152.14268494]
[171.02665710 -166.56321716]
[176.57077026 -180.51379395]
[183.43544006 -193.86413574]
[191.55656433 -206.48960876]
[200.85833740 -218.27233887]
[211.25389099 -229.10229492]
[222.64616394 -238.87837219]
[234.92880249 -247.50927734]
[247.98710632 -254.91442871]
[261.69915771 -261.02468872]
[275.93692017 -265.78298950]
[290.56747437 -269.14492798]
[305.45419312 -271.07910156]
[320.45806885 -271.56744385]
[335.43905640 -270.60543823]
[350.25726318 -268.20199585]
[364.77432251 -264.37960815]
[378.85467529 -259.17395020]
[392.36688232 -252.63362122]
[405.18478394 -244.81970215]
[417.18865967 -235.80513000]
[428.26644897 -225.67410278]
[438.31472778 -214.52119446]
[447.23968506 -202.45053101]
[454.95797729 -189.57482910]
[461.39752197 -176.01431274]
[466.49822998 -161.89558411]
[470.21243286 -147.35047913]
[472.50549316 -132.51480103]
[473.35595703 -117.52706146]
[472.75592041 -102.52721405]
[470.71099854 -87.65530396]
[467.24023438 -73.05019379]
[462.37603760 -58.84824371]
[456.16387939 -45.18206024]
[448.66171265 -32.17924881]
[439.93963623 -19.96121025]
[430.07901001 -8.64202690]
[419.17196655 1.67261624]
[407.32031250 10.88641071]
[394.63473511 18.91332817]
[381.23364258 25.67842293]
[367.24218750 31.11852646]
[352.79101562 35.18284607]
[338.01501465 37.83343506]
[323.05218506 39.04554367]
[308.04223633 38.80785751]
[293.12527466 37.12258911]
[278.44061279 34.00547791]
[264.12536621 29.48562813]
[250.31318665 23.60524178]
[237.13301086 16.41922379]
[224.70794678 7.99466848]
[213.15397644 -1.58976352]
[209.57170105 12.86764050]
[194.32655334 17.09802055]
[183.68054199 27.66506958]
[180.09826660 42.12247086]
[164.85311890 46.35285187]
[154.20710754 56.91990280]
[143.56109619 67.48694611]
[132.91508484 78.05399323]
[122.26908112 88.62104797]
[111.62306976 99.18809509]
[126.29685974 96.07682037]
[140.88774109 99.55623627]
[152.57843018 108.95451355]
[159.11166382 122.45699310]
[159.22595215 137.45655823]
[152.89924622 151.05702209]
[141.35311890 160.63237000]
[126.81695557 164.33372498]
[112.09746552 161.44642639]
[100.03674316 152.52795410]
[92.96352386 139.30035400]
[92.24354553 124.31764221]
[98.01654816 110.47171021]
[85.66204071 118.97853851]
[78.68374634 133.17762756]
[63.81313705 134.02282715]
[51.45862961 142.52966309]
[39.10411835 151.03648376]
[26.74961090 159.54331970]
[14.39510155 168.05014038]
[2.04059267 176.55696106]
[9.74118805 189.43550110]
[16.60082817 202.78094482]
[22.59132576 216.53846741]
[27.68806267 230.65155029]
[31.87009811 245.06217957]
[35.12024689 259.71115112]
[37.42514801 274.53823853]
[38.77533722 289.48257446]
[39.16526413 304.48269653]
[38.59332275 319.47698975]
[37.06186676 334.40380859]
[34.57718658 349.20184326]
[31.14949799 363.81030273]
[26.79288101 378.16909790]
[21.52523994 392.21929932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 195]
[82 194]
[83 193]
[84 192]
[85 191]
[86 190]
[88 188]
[89 187]
[90 174]
[91 173]
[92 172]
[93 171]
[94 170]
[95 169]
[97 167]
[98 166]
[100 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
