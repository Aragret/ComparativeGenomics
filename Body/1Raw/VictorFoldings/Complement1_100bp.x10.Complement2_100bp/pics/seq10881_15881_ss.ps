%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[-7.91902351 748.66973877]
[-17.08285522 760.56323242]
[-27.45899773 771.41534424]
[-38.92987823 781.10302734]
[-51.36552811 789.51647949]
[-64.62503815 796.56048584]
[-78.55816650 802.15509033]
[-93.00704193 806.23706055]
[-107.80794525 808.76000977]
[-122.79317474 809.69537354]
[-137.79293823 809.03259277]
[-152.63726807 806.77917480]
[-167.15797424 802.96069336]
[-181.19052124 797.62030029]
[-194.57592773 790.81860352]
[-207.16249084 782.63256836]
[-218.80761719 773.15509033]
[-229.37936401 762.49346924]
[-238.75793457 750.76849365]
[-246.83708191 738.11309814]
[-253.52522278 724.67059326]
[-258.74661255 710.59332275]
[-262.44207764 696.04083252]
[-264.56973267 681.17791748]
[-265.10549927 666.17309570]
[-264.04327393 651.19635010]
[-261.39511108 636.41729736]
[-257.19100952 622.00354004]
[-251.47860718 608.11822510]
[-244.32263184 594.91882324]
[-235.80416870 582.55487061]
[-226.01972961 571.16644287]
[-215.08018494 560.88250732]
[-203.10949707 551.81970215]
[-190.24328613 544.08068848]
[-176.62734985 537.75311279]
[-162.41595459 532.90869141]
[-147.77014160 529.60229492]
[-132.85583496 527.87145996]
[-117.84205627 527.73571777]
[-102.89890289 529.19659424]
[-88.19570160 532.23767090]
[-73.89904022 536.82434082]
[-67.82521057 523.10906982]
[-61.75137329 509.39379883]
[-55.67753983 495.67852783]
[-49.60370636 481.96325684]
[-43.52987289 468.24798584]
[-37.45603943 454.53274536]
[-31.38220406 440.81747437]
[-25.30837059 427.10220337]
[-19.23453712 413.38693237]
[-13.16070271 399.67166138]
[-7.08686829 385.95639038]
[-1.01303446 372.24111938]
[5.06079960 358.52587891]
[10.92975998 344.72167969]
[16.59254646 330.83166504]
[22.25533295 316.94165039]
[27.91811943 303.05160522]
[33.26930618 289.03857422]
[38.30622101 274.90954590]
[35.29193115 260.32315063]
[47.21398926 249.92242432]
[52.25090408 235.79339600]
[56.86491394 221.52066040]
[61.05192566 207.11688232]
[65.23893738 192.71308899]
[61.36179352 178.33195496]
[72.64365387 167.24005127]
[76.83066559 152.83627319]
[81.01767731 138.43249512]
[85.20468140 124.02870941]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[99.74419403 71.61167908]
[94.80586243 56.58093262]
[104.84678650 45.57960892]
[107.73206329 30.85971832]
[110.61733246 16.13982582]
[113.50260925 1.41993535]
[114.84084320 -13.52024937]
[114.61751556 -28.51858711]
[114.39418793 -43.51692581]
[114.17086029 -58.51526260]
[113.94753265 -73.51359558]
[101.17401886 -85.46586609]
[101.00026703 -102.62059021]
[113.04541016 -114.35742188]
[112.59880829 -129.35076904]
[112.15219879 -144.34413147]
[102.07787323 -150.65637207]
[96.36002350 -160.94264221]
[96.31802368 -172.59133911]
[101.84661102 -182.70817566]
[111.47080231 -188.83525085]
[111.47080231 -203.83525085]
[111.47080231 -218.83525085]
[111.47080231 -233.83525085]
[98.12967682 -241.44509888]
[90.39470673 -254.71408081]
[90.34656525 -270.07290649]
[97.99819946 -283.39010620]
[111.29135895 -291.08346558]
[126.65025330 -291.08346558]
[139.94340515 -283.39010620]
[147.59504700 -270.07290649]
[147.54690552 -254.71408081]
[139.81193542 -241.44509888]
[126.47080231 -233.83525085]
[126.47080231 -218.83525085]
[126.47080231 -203.83525085]
[126.47080231 -188.83525085]
[140.17089844 -176.69345093]
[140.65354919 -158.07411194]
[127.14555359 -144.79072571]
[127.59215546 -129.79737854]
[128.03875732 -114.80403137]
[138.56124878 -107.36718750]
[142.94453430 -95.04367065]
[139.37724304 -82.25755310]
[128.94586182 -73.73692322]
[129.16918945 -58.73859024]
[129.39251709 -43.74025345]
[129.61584473 -28.74191475]
[129.83917236 -13.74357700]
[137.26528931 -26.77633476]
[149.06626892 -36.03576279]
[163.49150085 -40.14827728]
[178.40107727 -38.50381088]
[191.58328247 -31.34631157]
[201.08258057 -19.73755264]
[205.48982239 -5.39962482]
[204.15122986 9.54052734]
[197.26535034 22.86662102]
[185.85368347 32.60180664]
[171.60906982 37.30193329]
[156.64463806 36.26975632]
[143.18023682 29.65840149]
[133.21325684 18.44861984]
[128.22250366 4.30520821]
[125.33722687 19.02509880]
[122.45195007 33.74499130]
[119.56668091 48.46488190]
[124.71138763 62.44276810]
[114.46408844 74.49695587]
[127.48457336 67.04935455]
[141.99331665 70.85676575]
[149.67904663 83.73812866]
[146.13902283 98.31441498]
[133.40113831 106.23567200]
[118.76222992 102.96423340]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.60846710 128.21572876]
[95.42145538 142.61950684]
[91.23444366 157.02328491]
[87.04743195 171.42706299]
[90.62509155 186.83845520]
[79.64272308 196.90010071]
[75.45571136 211.30389404]
[71.26869965 225.70767212]
[72.45330048 229.88507080]
[72.26583099 233.82580566]
[70.94917297 237.12759399]
[68.85189819 239.50836182]
[66.37993622 240.83030701]
[61.34301758 254.95933533]
[63.99703598 270.55633545]
[52.43525314 279.94647217]
[47.39833450 294.07550049]
[48.34048843 299.20965576]
[47.32101059 303.73889160]
[44.89880753 307.01730347]
[41.80814743 308.71438599]
[36.14535904 322.60443115]
[30.48257446 336.49444580]
[24.81978798 350.38449097]
[25.33958435 356.97549438]
[22.82956314 362.07418823]
[18.77606583 364.59970093]
[12.70223236 378.31497192]
[6.62839842 392.03024292]
[0.55456430 405.74551392]
[-5.51926947 419.46075439]
[-11.59310341 433.17602539]
[-17.66693687 446.89129639]
[-23.74077225 460.60656738]
[-29.81460571 474.32183838]
[-35.88843918 488.03710938]
[-41.96227264 501.75238037]
[-48.03610611 515.46765137]
[-54.10993958 529.18292236]
[-60.18377686 542.89819336]
[-47.17897797 550.40197754]
[-35.04547882 559.24566650]
[-23.92075729 569.32891846]
[-13.93086720 580.53759766]
[-5.18900108 592.74462891]
[2.20578861 605.81176758]
[8.16971397 619.59082031]
[12.63519764 633.92584229]
[15.55164433 648.65423584]
[16.88600731 663.60925293]
[16.62316704 678.62133789]
[14.76610184 693.52044678]
[11.33585453 708.13775635]
[6.37129164 722.30761719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 196]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[49 190]
[50 189]
[51 188]
[52 187]
[53 186]
[54 185]
[55 184]
[56 183]
[57 180]
[58 179]
[59 178]
[60 177]
[61 173]
[62 172]
[64 170]
[65 169]
[66 164]
[67 163]
[68 162]
[70 160]
[71 159]
[72 158]
[73 157]
[74 156]
[76 154]
[77 147]
[79 145]
[80 144]
[81 143]
[82 142]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[90 119]
[91 118]
[92 117]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
