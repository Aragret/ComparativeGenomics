%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[27.29029655 606.81542969]
[17.18258476 617.91314697]
[6.09401464 628.03088379]
[-5.88080740 637.08227539]
[-18.63971519 644.99017334]
[-32.07384872 651.68713379]
[-46.06859589 657.11590576]
[-60.50455475 661.23022461]
[-75.25855255 663.99499512]
[-90.20472717 665.38665771]
[-105.21553802 665.39331055]
[-120.16293335 664.01489258]
[-134.91937256 661.26318359]
[-149.35897827 657.16162109]
[-163.35852051 651.74523926]
[-176.79858398 645.06024170]
[-189.56448364 637.16363525]
[-201.54731750 628.12280273]
[-212.64485168 618.01489258]
[-222.76239014 606.92614746]
[-231.81361389 594.95123291]
[-239.72129822 582.19213867]
[-246.41798401 568.75793457]
[-251.84654236 554.76306152]
[-255.96064758 540.32702637]
[-258.72518921 525.57299805]
[-260.11660767 510.62683105]
[-260.12298584 495.61599731]
[-258.74432373 480.66864014]
[-255.99235535 465.91223145]
[-251.89056396 451.47271729]
[-246.47393799 437.47323608]
[-239.78869629 424.03329468]
[-231.89189148 411.26751709]
[-222.85087585 399.28485107]
[-212.74279785 388.18746948]
[-201.65388489 378.07012939]
[-189.67875671 369.01910400]
[-176.91958618 361.11163330]
[-163.48522949 354.41516113]
[-149.49031067 348.98684692]
[-135.05421448 344.87298584]
[-120.30011749 342.10867310]
[-105.35390472 340.71752930]
[-90.34308624 340.71136475]
[-75.39573669 342.09030151]
[-60.63938522 344.84249878]
[-46.19992447 348.94454956]
[-32.20055771 354.36138916]
[-25.52036285 340.93103027]
[-18.84016800 327.50064087]
[-20.87041092 310.06948853]
[-5.44062471 300.01947021]
[1.03887129 286.49111938]
[-4.13720608 272.57192993]
[2.24120784 258.75994873]
[16.87602806 253.42518616]
[23.35552406 239.89683533]
[29.83502007 226.36849976]
[36.31451797 212.84014893]
[42.79401398 199.31179810]
[41.31357574 184.49095154]
[54.25297546 175.38697815]
[54.30722809 167.99652100]
[60.93097305 161.70654297]
[67.61116791 148.27616882]
[74.29136658 134.84579468]
[80.97155762 121.41541290]
[72.82434845 109.06563568]
[71.92531586 94.29790497]
[78.51425171 81.05101013]
[90.83377075 72.85811615]
[105.59806824 71.90438843]
[112.27825928 58.47401428]
[118.95845795 45.04364014]
[110.63238525 33.80356216]
[107.97413635 20.13791466]
[111.44652557 6.72445917]
[120.31670380 -3.83342910]
[132.80999756 -9.51202202]
[146.46470642 -9.25502396]
[153.34411621 -22.58445358]
[152.79766846 -38.39622116]
[165.51033020 -46.15750122]
[172.38973999 -59.48692703]
[171.84329224 -75.29869843]
[184.55595398 -83.05997467]
[191.43536377 -96.38940430]
[185.89018250 -108.66399384]
[188.39042664 -121.70083618]
[197.80326843 -130.78271484]
[210.53663635 -132.75520325]
[217.61373901 -145.98072815]
[224.69084167 -159.20625305]
[224.37986755 -175.02441406]
[237.20668030 -182.59555054]
[244.28378296 -195.82109070]
[251.36088562 -209.04661560]
[258.43798828 -222.27214050]
[246.25444031 -231.06101990]
[235.35108948 -241.39544678]
[225.92251587 -253.09097290]
[218.13699341 -265.93890381]
[212.13343811 -279.70989990]
[208.01902771 -294.15826416]
[205.86715698 -309.02612305]
[205.71624756 -324.04812622]
[207.56896973 -338.95620728]
[211.39230347 -353.48428345]
[217.11796570 -367.37313843]
[224.64381409 -380.37487793]
[233.83552551 -392.25747681]
[244.52905273 -402.80886841]
[256.53356934 -411.84072876]
[269.63485718 -419.19192505]
[283.59906006 -424.73123169]
[298.17703247 -428.35983276]
[313.10858154 -430.01290894]
[328.12719727 -429.66098022]
[342.96493530 -427.31036377]
[357.35693359 -423.00299072]
[371.04638672 -416.81570435]
[383.78897095 -408.85894775]
[395.35729980 -399.27471924]
[405.54489136 -388.23406982]
[414.16995239 -375.93399048]
[421.07858276 -362.59402466]
[426.14746094 -348.45223999]
[429.28610229 -333.76101685]
[430.43856812 -318.78253174]
[429.58422852 -303.78408813]
[426.73834229 -289.03332520]
[421.95172119 -274.79354858]
[415.30975342 -261.31884766]
[406.93103027 -248.84967041]
[396.96499634 -237.60858154]
[385.58956909 -227.79618835]
[373.00775146 -219.58758545]
[359.44406128 -213.12928772]
[345.14056396 -208.53654480]
[330.35250854 -205.89129639]
[315.34384155 -205.24078369]
[300.38238525 -206.59658813]
[285.73513794 -209.93452454]
[271.66351318 -215.19503784]
[264.58642578 -201.96949768]
[257.50930786 -188.74397278]
[250.43220520 -175.51844788]
[251.24938965 -160.64628601]
[237.91638184 -152.12915039]
[230.83926392 -138.90362549]
[223.76216125 -125.67810059]
[229.31993103 -109.80516815]
[221.52456665 -94.52291870]
[204.76480103 -89.50999451]
[197.88539124 -76.18056488]
[198.92388916 -61.32220459]
[185.71917725 -52.60751724]
[178.83975220 -39.27808762]
[179.87826538 -24.41972923]
[166.67353821 -15.70504093]
[159.79412842 -2.37561154]
[168.85398865 11.00465107]
[169.93609619 27.22146034]
[162.65061951 41.85494232]
[148.90127563 50.86887360]
[132.38882446 51.72383499]
[125.70863342 65.15421295]
[119.02844238 78.58458710]
[127.17565155 90.93436432]
[128.07467651 105.70209503]
[121.48574829 118.94898987]
[109.16622925 127.14188385]
[94.40193176 128.09561157]
[87.72174072 141.52598572]
[81.04154205 154.95635986]
[74.36135101 168.38673401]
[67.78131866 181.86647034]
[68.79830170 197.65495300]
[56.32235718 205.79130554]
[49.84286118 219.31964111]
[43.36336517 232.84799194]
[36.88386917 246.37634277]
[30.40437508 259.90469360]
[35.42092514 274.65161133]
[28.65707779 288.27899170]
[14.56721687 292.97061157]
[8.08772087 306.49896240]
[11.62966156 318.90127563]
[5.95436621 330.03567505]
[-5.40979195 334.18084717]
[-12.08998680 347.61120605]
[-18.77018166 361.04159546]
[-6.00401211 368.93777466]
[5.97912264 377.97817993]
[17.07698441 388.08572388]
[27.19489098 399.17410278]
[36.24651337 411.14877319]
[44.15462875 423.90756226]
[50.85176468 437.34158325]
[56.28078461 451.33624268]
[60.39536667 465.77212524]
[63.16040421 480.52609253]
[64.55230713 495.47222900]
[64.55920410 510.48303223]
[63.18103409 525.43048096]
[60.42955780 540.18695068]
[56.32824326 554.62658691]
[50.91208649 568.62628174]
[44.22729874 582.06640625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 193]
[50 192]
[51 191]
[53 188]
[54 187]
[57 184]
[58 183]
[59 182]
[60 181]
[61 180]
[63 178]
[65 177]
[66 176]
[67 175]
[68 174]
[73 169]
[74 168]
[75 167]
[81 162]
[82 161]
[84 159]
[85 158]
[87 156]
[88 155]
[92 152]
[93 151]
[94 150]
[96 148]
[97 147]
[98 146]
[99 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
