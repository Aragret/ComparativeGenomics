%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[119.17276764 759.57958984]
[105.87928009 752.60766602]
[93.28580475 744.43890381]
[81.49977112 735.14294434]
[70.62174988 724.79919434]
[60.74454117 713.49584961]
[51.95241928 701.32940674]
[44.32039642 688.40356445]
[37.91358948 674.82867432]
[32.78665924 660.72058105]
[28.98334694 646.19958496]
[26.53610229 631.38958740]
[25.46580505 616.41699219]
[25.78158760 601.40948486]
[27.48075294 586.49511719]
[30.54880714 571.80120850]
[34.95957184 557.45306396]
[40.67541504 543.57305908]
[47.64757538 530.27966309]
[55.81655884 517.68634033]
[65.11267853 505.90048218]
[75.45661163 495.02261353]
[86.76010895 485.14559937]
[98.92673492 476.35366821]
[111.85269165 468.72186279]
[125.42768097 462.31530762]
[139.53588867 457.18859863]
[154.05696106 453.38552856]
[151.61122131 438.58627319]
[149.16549683 423.78698730]
[146.71977234 408.98770142]
[144.27404785 394.18844604]
[141.82832336 379.38916016]
[139.38258362 364.58990479]
[136.74456787 362.25042725]
[135.10864258 358.51693726]
[135.11763000 353.87442017]
[137.17352295 349.07644653]
[135.39105225 334.18273926]
[133.60858154 319.28900146]
[122.34860992 305.82870483]
[129.73602295 288.96136475]
[127.73201752 274.09582520]
[125.72800446 259.23028564]
[123.72399139 244.36477661]
[121.71997070 229.49923706]
[119.71595764 214.63371277]
[117.71194458 199.76818848]
[115.70793152 184.90264893]
[112.60382080 170.22735596]
[108.41680908 155.82357788]
[97.43444061 145.76193237]
[101.01210022 130.35054016]
[96.82508850 115.94675446]
[86.97487640 109.73268890]
[83.80728149 98.52520752]
[88.94746399 88.07437897]
[84.97536469 73.60985565]
[81.00326538 59.14533234]
[66.04257202 56.32770920]
[53.83855438 47.33055115]
[46.78002167 33.98149490]
[46.21963882 18.95328903]
[52.21503830 5.22868919]
[63.52797699 -4.49154377]
[59.55588150 -18.95606804]
[55.58378220 -33.42059326]
[51.87743378 -18.88570213]
[43.23020935 -6.62905121]
[30.77980232 1.73679042]
[16.16427231 5.11115170]
[1.30654824 3.05007720]
[-11.83858204 -4.17526293]
[-21.54165077 -15.61425114]
[-26.52605247 -29.76189232]
[-26.13600349 -44.75682068]
[-20.42282104 -58.62619400]
[-10.13817120 -69.54525757]
[3.36482072 -76.07743073]
[18.30960464 -77.36327362]
[32.72993851 -73.23362732]
[44.72858047 -64.23181915]
[52.72778320 -51.53997040]
[52.05799484 -66.52500916]
[51.38821030 -81.51004791]
[50.71842575 -96.49508667]
[36.75335312 -102.55628204]
[26.84515953 -114.03298187]
[22.91853142 -128.61386108]
[25.70057678 -143.39292908]
[34.58685303 -155.44879150]
[47.77169800 -162.42196655]
[47.10191345 -177.40701294]
[46.43212509 -192.39204407]
[38.08633423 -205.83297729]
[45.24761581 -218.89303589]
[44.57782745 -233.87808228]
[30.38744354 -239.40553284]
[19.67671585 -250.23144531]
[14.30134678 -264.48013306]
[15.19264984 -279.68295288]
[22.19620132 -293.20590210]
[34.09859467 -302.70605469]
[48.83766556 -306.53744507]
[63.85978699 -304.03628540]
[76.56227875 -295.63589478]
[84.74436188 -282.79168701]
[86.98843384 -267.72903442]
[82.90570831 -253.05758667]
[73.20352936 -241.31929016]
[59.56286621 -234.54786682]
[60.23265457 -219.56282043]
[68.53054047 -207.19372559]
[61.41716385 -193.06184387]
[62.08695221 -178.07679749]
[62.75673676 -163.09176636]
[76.51112366 -157.32267761]
[86.43753052 -146.10769653]
[90.52700806 -131.63574219]
[87.91687775 -116.76270294]
[79.07209778 -104.44779968]
[65.70346832 -97.16487122]
[66.37325287 -82.17983246]
[67.04303741 -67.19479370]
[67.71282196 -52.20975494]
[70.04830933 -37.39268875]
[74.02040100 -22.92816353]
[77.99250031 -8.46364021]
[92.68304443 -5.88421059]
[104.84685516 2.85369587]
[112.04006958 16.06046295]
[112.78890991 31.14222145]
[106.89134979 45.11024857]
[95.46778870 55.17323303]
[99.43988800 69.63775635]
[103.41198730 84.10227966]
[115.64680481 95.57771301]
[111.22886658 111.75974274]
[115.41587830 126.16352844]
[126.69773865 137.25543213]
[122.82059479 151.63656616]
[127.00760651 166.04034424]
[132.12448120 151.94007874]
[143.54209900 142.21186829]
[158.27593994 139.39866638]
[172.47459412 144.23582458]
[182.42657471 155.45892334]
[185.53047180 170.13427734]
[180.97491455 184.42578125]
[169.95071411 194.59765625]
[155.33958435 197.99101257]
[140.96083069 193.71884155]
[130.57345581 182.89863586]
[132.57746887 197.76417542]
[134.58148193 212.62969971]
[136.58549500 227.49522400]
[138.58952332 242.36074829]
[140.59353638 257.22628784]
[142.59754944 272.09179688]
[144.60156250 286.95733643]
[154.36669922 295.38375854]
[155.72981262 307.80654907]
[148.50230408 317.50653076]
[150.28477478 332.40026855]
[152.06723022 347.29397583]
[154.18185425 362.14416504]
[156.62759399 376.94345093]
[159.07331848 391.74270630]
[161.51904297 406.54199219]
[163.96476746 421.34124756]
[166.41049194 436.14053345]
[168.85623169 450.93978882]
[183.82878113 449.86874390]
[198.83628845 450.18377686]
[213.75071716 451.88220215]
[228.44480896 454.94952393]
[242.79318237 459.35958862]
[256.67346191 465.07473755]
[269.96716309 472.04623413]
[282.56091309 480.21456909]
[294.34725952 489.51010132]
[305.22561646 499.85348511]
[315.10321045 511.15649414]
[323.89575195 523.32269287]
[331.52819824 536.24822998]
[337.93545532 549.82293701]
[343.06286621 563.93090820]
[346.86663818 578.45178223]
[349.31439209 593.26165771]
[350.38519287 608.23425293]
[350.06991577 623.24176025]
[348.37124634 638.15612793]
[345.30368042 652.85015869]
[340.89337158 667.19848633]
[335.17800903 681.07867432]
[328.20629883 694.37225342]
[320.03771973 706.96588135]
[310.74200439 718.75207520]
[300.39843750 729.63024902]
[289.09524536 739.50762939]
[276.92892456 748.29998779]
[264.00323486 755.93218994]
[250.42845154 762.33923340]
[236.32040405 767.46643066]
[221.79946899 771.26995850]
[206.98951721 773.71746826]
[192.01692200 774.78802490]
[177.00942993 774.47247314]
[162.09506226 772.77355957]
[147.40107727 769.70574951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
[38 165]
[39 164]
[40 163]
[42 160]
[43 159]
[44 158]
[45 157]
[46 156]
[47 155]
[48 154]
[49 153]
[50 142]
[51 141]
[53 139]
[54 138]
[57 136]
[58 135]
[59 134]
[65 128]
[66 127]
[67 126]
[83 125]
[84 124]
[85 123]
[86 122]
[92 116]
[93 115]
[94 114]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
