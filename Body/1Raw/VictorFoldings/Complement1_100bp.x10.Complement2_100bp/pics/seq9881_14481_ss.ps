%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[94.59542847 504.57910156]
[83.56552124 514.78314209]
[71.19565582 523.31347656]
[57.73765564 529.99652100]
[43.46552277 534.69622803]
[28.66980743 537.31683350]
[13.65173817 537.80499268]
[-1.28293872 536.15087891]
[-15.83017254 532.38806152]
[-29.69379997 526.59320068]
[-42.59157562 518.88421631]
[-54.26091385 509.41812134]
[-64.46424866 498.38757324]
[-72.99385071 486.01718140]
[-79.67606354 472.55877686]
[-84.37484741 458.28634644]
[-86.99454498 443.49047852]
[-87.48182678 428.47238159]
[-85.82675934 413.53778076]
[-82.06304932 398.99078369]
[-76.26731110 385.12753296]
[-68.55754852 372.23022461]
[-59.09071350 360.56146240]
[-48.05954742 350.35882568]
[-35.68862152 341.82998657]
[-22.22979927 335.14862061]
[-7.95708179 330.45071411]
[6.83895588 327.83190918]
[21.85708618 327.34558105]
[36.79155731 329.00155640]
[40.54785919 314.47949219]
[44.30416107 299.95742798]
[40.00055313 285.69812012]
[50.94716263 274.27523804]
[54.70346451 259.75317383]
[50.39986038 245.49385071]
[61.34646606 234.07096863]
[65.10276794 219.54890442]
[68.85906982 205.02685547]
[72.61537170 190.50479126]
[64.85857391 177.84115601]
[68.46112061 163.06021118]
[81.79650116 155.01002502]
[85.55280304 140.48797607]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[98.84349060 57.15087128]
[91.81859589 46.33358765]
[93.97728729 34.02408600]
[103.62511444 26.72710037]
[106.07084656 11.92782974]
[108.51657104 -2.87144113]
[110.96229553 -17.67071152]
[113.40802765 -32.46998215]
[115.85375214 -47.26925278]
[108.97180939 -64.34907532]
[120.62756348 -77.46816254]
[122.85267639 -92.30220795]
[125.07779694 -107.13625336]
[119.47323608 -121.93150330]
[129.01290894 -133.37020874]
[131.23802185 -148.20425415]
[132.79855347 -163.12284851]
[133.69136047 -178.09625244]
[134.58418274 -193.06965637]
[135.47698975 -208.04307556]
[136.36981201 -223.01647949]
[121.51266479 -225.14361572]
[106.88192749 -228.49040222]
[92.57752991 -233.03395081]
[78.69720459 -238.74324036]
[65.33575439 -245.57926941]
[52.58446503 -253.49533081]
[40.53043747 -262.43737793]
[29.25601006 -272.34426880]
[18.83820534 -283.14840698]
[9.34818745 -294.77590942]
[0.85078275 -307.14739990]
[-6.59596205 -320.17834473]
[-12.94117641 -333.77972412]
[-18.14151764 -347.85864258]
[-22.16145897 -362.31890869]
[-24.97353935 -377.06176758]
[-26.55855179 -391.98651123]
[-26.90566826 -406.99111938]
[-26.01251602 -421.97317505]
[-23.88519669 -436.83029175]
[-20.53824425 -451.46099854]
[-15.99451923 -465.76535034]
[-10.28506184 -479.64559937]
[-3.44887447 -493.00695801]
[4.46734476 -505.75817871]
[13.40951920 -517.81207275]
[23.31656456 -529.08636475]
[34.12080383 -539.50408936]
[45.74842834 -548.99395752]
[58.12001419 -557.49121094]
[71.15104675 -564.93780518]
[84.75251770 -571.28283691]
[98.83149719 -576.48303223]
[113.29182434 -580.50280762]
[128.03471375 -583.31469727]
[142.95944214 -584.89953613]
[157.96408081 -585.24645996]
[172.94612122 -584.35314941]
[187.80322266 -582.22564697]
[202.43388367 -578.87854004]
[216.73817444 -574.33459473]
[230.61836243 -568.62500000]
[243.97964478 -561.78863525]
[256.73074341 -553.87225342]
[268.78457642 -544.92993164]
[280.05874634 -535.02276611]
[290.47628784 -524.21844482]
[299.96603394 -512.59069824]
[308.46313477 -500.21899414]
[315.90957642 -487.18786621]
[322.25448608 -473.58633423]
[327.45446777 -459.50729370]
[331.47406006 -445.04690552]
[334.28579712 -430.30398560]
[335.87045288 -415.37924194]
[336.21722412 -400.37460327]
[335.32369995 -385.39254761]
[333.19604492 -370.53549194]
[329.84872437 -355.90487671]
[325.30465698 -341.60064697]
[319.59487915 -327.72052002]
[312.75836182 -314.35931396]
[304.84185791 -301.60830688]
[295.89938354 -289.55459595]
[285.99206543 -278.28051758]
[275.18759155 -267.86309814]
[263.55972290 -258.37350464]
[251.18794250 -249.87654114]
[238.15673828 -242.43026733]
[224.55511475 -236.08552551]
[210.47601318 -230.88569641]
[196.01559448 -226.86627197]
[181.27264404 -224.05471802]
[166.34786987 -222.47024536]
[151.34321594 -222.12365723]
[150.45040894 -207.15025330]
[149.55758667 -192.17684937]
[148.66476440 -177.20344543]
[147.77195740 -162.23004150]
[159.68070984 -171.35041809]
[174.56806946 -169.51553345]
[183.90585327 -157.77645874]
[182.34497070 -142.85789490]
[170.77957153 -133.30586243]
[155.83482361 -134.59219360]
[146.07206726 -145.97912598]
[143.84695435 -131.14508057]
[149.61067200 -117.41086578]
[139.91183472 -104.91113281]
[137.68672180 -90.07709503]
[135.46160889 -75.24304962]
[142.39710999 -65.33217621]
[140.66473389 -52.95547867]
[130.65303040 -44.82352448]
[128.20729065 -30.02425575]
[125.76156616 -15.22498512]
[123.31584167 -0.42571381]
[120.87011719 14.37355709]
[118.42438507 29.17282867]
[125.47957611 45.24115753]
[113.67753601 59.37598801]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[115.39189148 119.02879333]
[130.37506104 119.73934937]
[141.48100281 129.82189941]
[143.63226318 144.66683960]
[135.84529114 157.48725891]
[121.68019104 162.42182922]
[107.61306000 157.21453857]
[100.07486725 144.24427795]
[96.31856537 158.76632690]
[104.07802582 172.27293396]
[100.06173706 186.94686890]
[87.13742828 194.26109314]
[83.38112640 208.78315735]
[79.62482452 223.30520630]
[75.86853027 237.82727051]
[79.90345764 253.12530518]
[69.22552490 263.50949097]
[65.46922302 278.03152466]
[69.50415039 293.32955933]
[58.82621765 303.71374512]
[55.06991959 318.23580933]
[51.31361771 332.75787354]
[65.17796326 338.55102539]
[78.07669067 346.25839233]
[89.74720001 355.72305298]
[99.95190430 366.75231934]
[108.48303223 379.12167358]
[115.16691589 392.57925415]
[119.86746216 406.85110474]
[122.48899841 421.64663696]
[122.97813416 436.66470337]
[121.32491302 451.59945679]
[117.56300354 466.14694214]
[111.76898193 480.01092529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 198]
[31 197]
[32 196]
[34 194]
[35 193]
[37 191]
[38 190]
[39 189]
[40 188]
[43 185]
[44 184]
[45 176]
[46 175]
[48 173]
[49 172]
[50 171]
[53 169]
[54 168]
[55 167]
[56 166]
[57 165]
[58 164]
[60 161]
[61 160]
[62 159]
[64 157]
[65 156]
[66 149]
[67 148]
[68 147]
[69 146]
[70 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
