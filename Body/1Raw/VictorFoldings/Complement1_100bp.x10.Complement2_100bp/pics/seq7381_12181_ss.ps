%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[135.60845947 976.85986328]
[120.68846130 975.29351807]
[105.84253693 973.13525391]
[91.09415436 970.38842773]
[76.46663666 967.05743408]
[61.98311234 963.14758301]
[47.66648102 958.66497803]
[33.53938293 953.61676025]
[19.62415314 948.01086426]
[5.94279575 941.85614014]
[-7.48305607 935.16241455]
[-20.63217354 927.94018555]
[-33.48376465 920.20092773]
[-46.01750565 911.95684814]
[-58.21358490 903.22094727]
[-70.05271149 894.00714111]
[-81.51617432 884.32989502]
[-92.58583069 874.20458984]
[-103.24419403 863.64715576]
[-113.47440338 852.67437744]
[-123.26028442 841.30352783]
[-132.58636475 829.55261230]
[-141.43788147 817.44018555]
[-149.80087280 804.98547363]
[-157.66207886 792.20812988]
[-165.00909424 779.12829590]
[-171.83030701 765.76678467]
[-178.11489868 752.14459229]
[-183.85295105 738.28332520]
[-189.03540039 724.20495605]
[-193.65403748 709.93157959]
[-197.70156860 695.48596191]
[-201.17158508 680.89080811]
[-204.05860901 666.16918945]
[-206.35807800 651.34448242]
[-208.06634521 636.44006348]
[-209.18070984 621.47955322]
[-209.69941711 606.48651123]
[-209.62164307 591.48474121]
[-208.94750977 576.49792480]
[-207.67808533 561.54968262]
[-205.81536865 546.66381836]
[-203.36231995 531.86376953]
[-200.32281494 517.17291260]
[-196.70166016 502.61450195]
[-192.50456238 488.21157837]
[-187.73817444 473.98690796]
[-182.41003418 459.96298218]
[-176.52856445 446.16195679]
[-170.10305786 432.60568237]
[-163.14369202 419.31558228]
[-155.66145325 406.31268311]
[-147.66818237 393.61749268]
[-139.17651367 381.25015259]
[-130.19987488 369.23019409]
[-120.75245667 357.57659912]
[-110.84920502 346.30783081]
[-100.50577545 335.44168091]
[-89.73851776 324.99536133]
[-78.56446838 314.98535156]
[-67.00128937 305.42749023]
[-55.06726456 296.33691406]
[-42.78126526 287.72796631]
[-30.16271591 279.61428833]
[-17.23157310 272.00866699]
[-4.00827885 264.92318726]
[9.48625565 258.36901855]
[23.23069191 252.35652161]
[37.20329666 246.89520264]
[51.38198090 241.99371338]
[65.74431610 237.65979004]
[80.26760864 233.90028381]
[94.92887115 230.72116089]
[109.70494080 228.12742615]
[107.70092773 213.26188660]
[105.69691467 198.39636230]
[103.69290161 183.53083801]
[101.68888855 168.66529846]
[99.68487549 153.79977417]
[97.68086243 138.93424988]
[95.67684937 124.06871796]
[93.67283630 109.20319366]
[91.55821228 94.35299683]
[89.33309174 79.51895142]
[79.63426208 67.01921844]
[85.39797974 53.28499985]
[83.17286682 38.45095825]
[80.94774628 23.61691284]
[78.72262573 8.78286934]
[63.72901917 7.09347820]
[49.68390274 1.58011544]
[37.54490280 -7.38130808]
[28.13967896 -19.17978859]
[22.10948944 -33.01088333]
[19.86548424 -47.93157196]
[21.56066513 -62.92452621]
[27.07945061 -76.96751404]
[36.04555893 -89.10305023]
[47.84767151 -98.50372314]
[61.68109512 -104.52857208]
[76.60264587 -106.76681519]
[91.59494781 -105.06584167]
[105.63580322 -99.54163361]
[117.76787567 -90.57083893]
[127.16398621 -78.76509857]
[133.18348694 -64.92935181]
[135.41596985 -50.00693893]
[133.70921326 -35.01529312]
[128.17959595 -20.97657585]
[119.20410919 -8.84796524]
[107.39474487 0.54358786]
[93.55667114 6.55775213]
[95.78179169 21.39179611]
[98.00690460 36.22584152]
[100.23202515 51.05988312]
[109.77169800 62.49858475]
[104.16713715 77.29383850]
[106.39225006 92.12787628]
[110.60728455 98.99854279]
[108.53836060 107.19918060]
[110.54237366 122.06470490]
[112.54638672 136.93023682]
[114.55039978 151.79576111]
[116.55441284 166.66128540]
[118.55843353 181.52682495]
[120.56244659 196.39234924]
[122.56645966 211.25787354]
[124.57047272 226.12339783]
[139.50588989 224.71174622]
[154.48564148 223.89498901]
[169.48600769 223.67442322]
[184.48327637 224.05039978]
[199.45375061 225.02230835]
[214.37374878 226.58862305]
[229.21968079 228.74687195]
[243.96806335 231.49363708]
[258.59558105 234.82456970]
[273.07913208 238.73442078]
[287.39578247 243.21697998]
[301.52288818 248.26518250]
[315.43814087 253.87104797]
[329.11950684 260.02569580]
[342.54537964 266.71939087]
[355.69451904 273.94158936]
[368.54611206 281.68081665]
[381.07989502 289.92486572]
[393.27597046 298.66070557]
[405.11514282 307.87451172]
[416.57861328 317.55169678]
[427.64831543 327.67700195]
[438.30670166 338.23437500]
[448.53692627 349.20718384]
[458.32284546 360.57800293]
[467.64895630 372.32888794]
[476.50051880 384.44125366]
[484.86352539 396.89596558]
[492.72479248 409.67330933]
[500.07183838 422.75308228]
[506.89306641 436.11459351]
[513.17767334 449.73675537]
[518.91577148 463.59799194]
[524.09826660 477.67639160]
[528.71697998 491.94970703]
[532.76452637 506.39535522]
[536.23455811 520.99053955]
[539.12164307 535.71209717]
[541.42114258 550.53680420]
[543.12945557 565.44122314]
[544.24383545 580.40173340]
[544.76257324 595.39477539]
[544.68487549 610.39654541]
[544.01074219 625.38336182]
[542.74139404 640.33154297]
[540.87872314 655.21746826]
[538.42572021 670.01757812]
[535.38623047 684.70843506]
[531.76513672 699.26678467]
[527.56805420 713.66973877]
[522.80169678 727.89440918]
[517.47363281 741.91839600]
[511.59216309 755.71942139]
[505.16671753 769.27569580]
[498.20736694 782.56579590]
[490.72515869 795.56872559]
[482.73193359 808.26391602]
[474.24029541 820.63128662]
[465.26367188 832.65130615]
[455.81628418 844.30493164]
[445.91308594 855.57373047]
[435.56967163 866.43988037]
[424.80245972 876.88623047]
[413.62841797 886.89630127]
[402.06527710 896.45416260]
[390.13125610 905.54479980]
[377.84527588 914.15374756]
[365.22674561 922.26745605]
[352.29562378 929.87310791]
[339.07235718 936.95861816]
[325.57785034 943.51281738]
[311.83343506 949.52539062]
[297.86083984 954.98675537]
[283.68215942 959.88824463]
[269.31982422 964.22222900]
[254.79655457 967.98175049]
[240.13529968 971.16094971]
[225.35923767 973.75469971]
[210.49172974 975.75897217]
[195.55630493 977.17059326]
[180.57656860 977.98730469]
[165.57620239 978.20782471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 128]
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[83 118]
[84 117]
[86 115]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
