%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[179.49214172 672.30877686]
[167.21684265 663.68060303]
[155.46397400 654.35333252]
[144.27334595 644.35845947]
[133.68280029 633.72979736]
[123.72816467 622.50335693]
[114.44313812 610.71704102]
[105.85913086 598.41082764]
[98.00519562 585.62634277]
[90.90790558 572.40679932]
[84.59126282 558.79693604]
[79.07666016 544.84283447]
[74.38275146 530.59167480]
[70.52541351 516.09167480]
[67.51770020 501.39196777]
[65.36978912 486.54223633]
[64.08895111 471.59274292]
[63.67951965 456.59405518]
[64.14287567 441.59695435]
[65.47746277 426.65216064]
[67.67874908 411.81024170]
[70.73929596 397.12142944]
[74.64874268 382.63543701]
[79.39386749 368.40124512]
[84.95861053 354.46707153]
[91.32414246 340.88000488]
[98.46891785 327.68606567]
[106.36877441 314.92987061]
[114.99697113 302.65460205]
[124.32431793 290.90179443]
[134.31924438 279.71118164]
[144.94795227 269.12069702]
[156.17445374 259.16610718]
[167.96076965 249.88111877]
[180.26701355 241.29716492]
[172.41525269 228.51632690]
[164.56350708 215.73548889]
[156.71174622 202.95463562]
[148.76506042 190.23260498]
[140.72389221 177.57008362]
[132.68272400 164.90756226]
[124.64154816 152.24502563]
[116.60037231 139.58250427]
[108.55919647 126.91998291]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[64.76610565 74.07608795]
[64.25318909 59.19031906]
[56.02438354 46.64891815]
[47.79557800 34.10751724]
[30.60523224 30.86539459]
[21.26228142 16.47706223]
[25.13855362 0.11205999]
[16.72393608 -12.30543518]
[8.30931664 -24.72293091]
[-0.10530168 -37.14042664]
[-8.51992035 -49.55792236]
[-16.93453979 -61.97541809]
[-30.29178810 -55.10946655]
[-44.37926102 -49.90365601]
[-58.99151993 -46.43389893]
[-73.91548157 -44.75080109]
[-88.93350220 -44.87889862]
[-103.82657623 -46.81632614]
[-118.37752533 -50.53483582]
[-132.37414551 -55.98019409]
[-145.61233521 -63.07299423]
[-157.89903259 -71.70980072]
[-169.05505371 -81.76466370]
[-178.91773987 -93.09095764]
[-187.34323120 -105.52351379]
[-194.20869446 -118.88101959]
[-199.41397095 -132.96868896]
[-202.88317871 -147.58106995]
[-204.56571960 -162.50509644]
[-204.43705750 -177.52311707]
[-202.49908447 -192.41612244]
[-198.78002930 -206.96691895]
[-193.33413696 -220.96334839]
[-186.24084473 -234.20126343]
[-177.60357666 -246.48764038]
[-167.54829407 -257.64328003]
[-156.22163391 -267.50555420]
[-143.78877258 -275.93057251]
[-130.43101501 -282.79553223]
[-116.34314728 -288.00030518]
[-101.73062897 -291.46896362]
[-86.80654144 -293.15093994]
[-71.78852844 -293.02172852]
[-56.89559937 -291.08316040]
[-42.34492874 -287.36358643]
[-28.34871483 -281.91717529]
[-15.11106110 -274.82339478]
[-2.82501030 -266.18566895]
[8.33026886 -256.12994385]
[18.19210052 -244.80291748]
[26.61667061 -232.36973572]
[33.48112106 -219.01171875]
[38.68535233 -204.92366028]
[42.15346909 -190.31101990]
[43.83489609 -175.38687134]
[43.70511246 -160.36886597]
[41.76601410 -145.47601318]
[38.04587173 -130.92547607]
[32.59894562 -116.92946625]
[25.50465965 -103.69207764]
[16.86647415 -91.40634918]
[6.81035662 -80.25144196]
[-4.51704359 -70.39003754]
[3.89757514 -57.97254181]
[12.31219387 -45.55504608]
[20.72681236 -33.13755035]
[29.14143181 -20.72005463]
[37.55604935 -8.30255890]
[50.42553329 -7.66548729]
[60.73212814 0.38784748]
[64.57508850 13.09383583]
[60.33697891 25.87870979]
[68.56578827 38.42011261]
[76.79459381 50.96150970]
[90.24571991 57.35811615]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[120.28964233 111.54716492]
[121.22172546 118.87880707]
[129.26289368 131.54133606]
[137.30407715 144.20385742]
[145.34524536 156.86637878]
[153.38641357 169.52890015]
[161.42758179 182.19143677]
[168.66976929 187.75817871]
[169.49258423 195.10289001]
[177.34434509 207.88372803]
[185.19610596 220.66456604]
[193.04785156 233.44541931]
[206.26731873 226.34796143]
[219.87709045 220.03114319]
[233.83113098 214.51637268]
[248.08222961 209.82228088]
[262.58215332 205.96476746]
[277.28182983 202.95686340]
[292.13153076 200.80877686]
[307.08102417 199.52775574]
[322.07968140 199.11813354]
[337.07681274 199.58131409]
[352.02163696 200.91571045]
[366.86355591 203.11680603]
[381.55239868 206.17716980]
[396.03845215 210.08644104]
[410.27270508 214.83139038]
[424.20697021 220.39595032]
[437.79409790 226.76132202]
[450.98812866 233.90592957]
[463.74441528 241.80563354]
[476.01980591 250.43367004]
[487.77273560 259.76086426]
[498.96343994 269.75567627]
[509.55407715 280.38424683]
[519.50878906 291.61062622]
[528.79394531 303.39682007]
[537.37805176 315.70294189]
[545.23205566 328.48739624]
[552.32946777 341.70690918]
[558.64624023 355.31671143]
[564.16094971 369.27075195]
[568.85498047 383.52188110]
[572.71246338 398.02182007]
[575.72027588 412.72149658]
[577.86828613 427.57122803]
[579.14929199 442.52069092]
[579.55883789 457.51937866]
[579.09558105 472.51651001]
[577.76110840 487.46130371]
[575.55999756 502.30322266]
[572.49957275 516.99206543]
[568.59020996 531.47808838]
[563.84521484 545.71234131]
[558.28057861 559.64654541]
[551.91516113 573.23364258]
[544.77050781 586.42767334]
[536.87072754 599.18395996]
[528.24267578 611.45928955]
[518.91540527 623.21215820]
[508.92056274 634.40283203]
[498.29196167 644.99340820]
[487.06552124 654.94812012]
[475.27929688 664.23321533]
[462.97311401 672.81726074]
[450.18862915 680.67126465]
[436.96911621 687.76855469]
[423.35928345 694.08526611]
[409.40518188 699.59991455]
[395.15405273 704.29388428]
[380.65411377 708.15130615]
[365.95440674 711.15905762]
[351.10467529 713.30706787]
[336.15518188 714.58795166]
[321.15652466 714.99743652]
[306.15939331 714.53411865]
[291.21459961 713.19964600]
[276.37268066 710.99841309]
[261.68386841 707.93792725]
[247.19783020 704.02850342]
[232.96363831 699.28344727]
[219.02941895 693.71875000]
[205.44233704 687.35333252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 139]
[36 138]
[37 137]
[38 136]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[44 129]
[45 127]
[47 125]
[48 124]
[50 122]
[51 121]
[52 120]
[55 116]
[56 115]
[57 114]
[58 113]
[59 112]
[60 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
