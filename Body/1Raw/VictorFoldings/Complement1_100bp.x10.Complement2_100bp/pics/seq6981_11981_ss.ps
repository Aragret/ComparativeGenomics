%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[124.23690033 554.74725342]
[119.25782013 569.00860596]
[110.46143341 581.28869629]
[98.56080627 590.59197998]
[84.52068329 596.16436768]
[69.47923279 597.55413818]
[54.65579605 594.64855957]
[41.25203705 587.68322754]
[30.35454750 577.22277832]
[22.84673309 564.11517334]
[19.33721924 549.42297363]
[20.11050797 534.33728027]
[25.10391045 520.08093262]
[33.91263580 507.80972290]
[45.82259750 498.51834106]
[59.86830902 492.96005249]
[74.91114807 491.58541870]
[77.79642487 476.86553955]
[80.68169403 462.14562988]
[83.56697083 447.42575073]
[86.45223999 432.70587158]
[79.87859344 416.43460083]
[92.09624481 402.65740967]
[94.76204681 387.89620972]
[97.42784119 373.13497925]
[100.09363556 358.37377930]
[102.75942993 343.61254883]
[105.42522430 328.85134888]
[107.09676361 313.94476318]
[99.93548584 300.88470459]
[108.28128052 287.44378662]
[108.95106506 272.45874023]
[109.62084961 257.47369385]
[110.29063416 242.48866272]
[109.62084961 227.50361633]
[107.61683655 212.63809204]
[105.61282349 197.77256775]
[103.60881042 182.90704346]
[101.60479736 168.04150391]
[99.60077667 153.17597961]
[97.59676361 138.31045532]
[95.59275055 123.44492340]
[93.58873749 108.57939911]
[89.61664581 94.11486816]
[83.74768066 80.31069183]
[77.87872314 66.50651550]
[72.00975800 52.70233917]
[66.14080048 38.89816284]
[58.19436646 51.62035751]
[43.31151581 53.49138641]
[32.46333313 43.13199997]
[33.64669037 28.17875099]
[45.98926544 19.65461922]
[60.39133453 23.84217834]
[55.56533813 9.63972282]
[50.73934174 -4.56273317]
[45.91334152 -18.76518822]
[41.08734512 -32.96764374]
[36.26134872 -47.17010117]
[31.43535042 -61.37255478]
[26.60935211 -75.57501221]
[10.35915947 -78.62838745]
[-2.06265998 -89.39843750]
[-7.32777309 -104.87407684]
[-4.08878374 -120.80093384]
[6.67747021 -132.85084534]
[-5.24458694 -143.25157166]
[-2.23029733 -157.83798218]
[-7.26721334 -171.96701050]
[-12.30412960 -186.09603882]
[-17.34104538 -200.22506714]
[-26.03062820 -187.99841309]
[-40.99845886 -187.01654053]
[-51.21080780 -198.00325012]
[-49.13951492 -212.85955811]
[-36.31145477 -220.63392639]
[-22.18416977 -215.59657288]
[-26.15626526 -230.06109619]
[-30.12836075 -244.52561951]
[-34.10045624 -258.99014282]
[-49.09185410 -257.73608398]
[-64.05840302 -259.25830078]
[-78.49034882 -263.50488281]
[-91.89614105 -270.33126831]
[-103.81918335 -279.50491333]
[-113.85338593 -290.71334839]
[-121.65699005 -303.57485962]
[-126.96419525 -317.65136719]
[-129.59425354 -332.46343994]
[-129.45758057 -347.50659180]
[-126.55883026 -362.26843262]
[-120.99673462 -376.24618530]
[-112.96073914 -388.96377563]
[-102.72454071 -399.98806763]
[-90.63678741 -408.94357300]
[-77.10917664 -415.52523804]
[-62.60245514 -419.50891113]
[-47.61071777 -420.75891113]
[-32.64458084 -419.23269653]
[-18.21378326 -414.98220825]
[-4.80983162 -408.15222168]
[7.11074066 -398.97537231]
[17.14192200 -387.76422119]
[24.94205666 -374.90060425]
[30.24547195 -360.82266235]
[32.87153625 -346.00985718]
[32.73080826 -330.96676636]
[29.82807922 -316.20571899]
[24.26221657 -302.22946167]
[16.22278976 -289.51400757]
[5.98362112 -278.49249268]
[-6.10654926 -269.54025269]
[-19.63593292 -262.96224976]
[-15.66383743 -248.49771118]
[-11.69174099 -234.03318787]
[-7.71964502 -219.56866455]
[-3.21201634 -205.26197815]
[1.82489991 -191.13294983]
[6.86181593 -177.00392151]
[11.89873219 -162.87489319]
[23.46051598 -153.48477173]
[20.80649948 -137.88775635]
[34.37313080 -136.31816101]
[45.99575806 -129.02136230]
[53.37587357 -117.37306213]
[55.02508163 -103.61594391]
[50.56492233 -90.42794800]
[40.81180573 -80.40100861]
[45.63780594 -66.19855499]
[50.46380234 -51.99609756]
[55.28979874 -37.79364395]
[60.11579895 -23.59118652]
[64.94179535 -9.38873100]
[69.76779175 4.81372452]
[74.59378815 19.01618004]
[79.94497681 33.02920151]
[85.81393433 46.83338165]
[91.68289948 60.63755798]
[97.55185699 74.44173431]
[103.42082214 88.24591064]
[104.67726898 73.29862213]
[110.43318939 59.44693375]
[120.13996124 48.01108932]
[132.87240601 40.08108521]
[147.41693115 36.41275787]
[162.38726807 37.35574722]
[176.35652161 42.82017899]
[187.99322510 52.28521347]
[196.18826294 64.84870148]
[200.16053772 79.31317902]
[199.53141785 94.29998016]
[194.36087036 108.38066101]
[185.14173889 120.21313477]
[172.75270081 128.66961670]
[158.37463379 132.94407654]
[143.37794495 132.62910461]
[129.19201660 127.75471497]
[117.16897583 118.78552246]
[108.45426941 106.57537842]
[110.45828247 121.44091034]
[112.46229553 136.30644226]
[114.46630859 151.17196655]
[116.47032166 166.03749084]
[118.47433472 180.90303040]
[120.47834778 195.76855469]
[122.48236084 210.63407898]
[124.48637390 225.49960327]
[130.85835266 211.92028809]
[142.43630981 202.38346863]
[156.98472595 198.73056030]
[171.69451904 201.66688538]
[183.72546387 210.62547302]
[190.75457764 223.87657166]
[191.42463684 238.86160278]
[185.60627747 252.68717957]
[174.42292786 262.68380737]
[160.03392029 266.92129517]
[145.21754456 264.58145142]
[132.83459473 256.11605835]
[125.27567291 243.15844727]
[124.60588837 258.14349365]
[123.93610382 273.12850952]
[123.26631927 288.11355591]
[130.37968445 302.24545288]
[122.08180237 314.61453247]
[131.91381836 303.28619385]
[146.27931213 298.96969604]
[160.72702026 303.00256348]
[170.78013611 314.13516235]
[173.32359314 328.91793823]
[167.56929016 342.77029419]
[155.30023193 351.39993286]
[140.31816101 352.13284302]
[127.26539612 344.74194336]
[120.18643951 331.51712036]
[117.52064514 346.27835083]
[114.85485077 361.03955078]
[112.18905640 375.80078125]
[109.52326202 390.56201172]
[106.85746765 405.32321167]
[113.55717468 416.34484863]
[111.03294373 428.58462524]
[101.17213440 435.59112549]
[98.28685760 450.31103516]
[95.40158844 465.03091431]
[92.51631165 479.75079346]
[89.63104248 494.47070312]
[103.04178619 501.42257690]
[113.94978333 511.87210083]
[121.47076416 524.97216797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 185]
[31 183]
[32 182]
[33 181]
[34 180]
[35 167]
[36 166]
[37 165]
[38 164]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[54 135]
[55 134]
[56 133]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[66 122]
[68 120]
[69 119]
[70 118]
[71 117]
[77 116]
[78 115]
[79 114]
[80 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
