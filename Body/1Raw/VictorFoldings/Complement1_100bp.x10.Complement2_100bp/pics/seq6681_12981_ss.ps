%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[5.88422346 447.81359863]
[8.60067654 462.62286377]
[8.17835426 477.67330933]
[4.63571596 492.30694580]
[-1.87236714 505.88406372]
[-11.06139088 517.81115723]
[-22.52964973 527.56683350]
[-35.77580261 534.72454834]
[-50.22077942 538.97143555]
[-65.23311615 540.12188721]
[-80.15653229 538.12554932]
[-94.33863831 533.06970215]
[-107.15946198 525.17541504]
[-118.05851746 514.78771973]
[-126.55936432 502.36074829]
[-132.29035950 488.43777466]
[-135.00099182 473.62744141]
[-134.57273865 458.57717896]
[-131.02435303 443.94491577]
[-124.51092529 430.37036133]
[-115.31721497 418.44686890]
[-103.84511566 408.69573975]
[-90.59614563 401.54321289]
[-76.14949799 397.30200195]
[-61.13671494 396.15747070]
[-46.21408463 398.15966797]
[-41.17716980 384.03063965]
[-36.14025497 369.90161133]
[-31.10333633 355.77258301]
[-44.61785507 362.28088379]
[-59.18454361 358.70153809]
[-68.14371490 346.67102051]
[-67.39934540 331.68951416]
[-57.29176331 320.60635376]
[-42.44201279 318.48858643]
[-29.63919830 326.30447388]
[-24.73661995 340.48251343]
[-18.25712395 326.95416260]
[-11.77762794 313.42584229]
[-13.25806522 298.60498047]
[-0.31866354 289.50100708]
[6.16083241 275.97265625]
[6.21508360 268.58218384]
[12.83882904 262.29220581]
[19.51902390 248.86184692]
[26.19921875 235.43147278]
[32.87941360 222.00109863]
[39.55960846 208.57070923]
[46.13963699 195.09098816]
[52.61913300 181.56263733]
[59.09862900 168.03428650]
[57.61819077 153.21343994]
[70.55759430 144.10946655]
[77.03708649 130.58111572]
[83.51658630 117.05277252]
[89.99607849 103.52442169]
[95.86504364 89.72024536]
[101.11175537 75.66777802]
[94.14726257 64.13909912]
[95.08060455 50.89752579]
[103.34754181 40.76145554]
[115.75629425 37.28982162]
[121.21165466 23.31702614]
[126.66700745 9.34422779]
[132.12236023 -4.62857056]
[137.57772827 -18.60136795]
[142.19172668 -32.87409973]
[145.94802856 -47.39616013]
[144.55233765 -53.85863495]
[146.35865784 -59.24697495]
[150.03840637 -62.29139709]
[154.22541809 -76.69517517]
[158.41242981 -91.09896088]
[162.59944153 -105.50273895]
[148.96643066 -99.24646759]
[134.85522461 -104.33309937]
[128.34936523 -117.84878540]
[133.17570496 -132.05113220]
[146.56948853 -138.80438232]
[160.85816956 -134.23995972]
[167.85643005 -120.97354126]
[173.31178284 -134.94633484]
[178.76713562 -148.91914368]
[178.97309875 -158.05125427]
[184.40913391 -163.05836487]
[190.07191467 -176.94839478]
[195.73471069 -190.83842468]
[195.02275085 -196.00950623]
[196.24345398 -200.48870850]
[198.80963135 -203.65568542]
[201.97297668 -205.21310425]
[208.25033569 -218.83641052]
[214.52769470 -232.45973206]
[201.69410706 -240.25694275]
[189.83299255 -249.46627808]
[179.09901428 -259.96768188]
[169.63209534 -271.62423706]
[161.55564880 -284.28396606]
[154.97499084 -297.78182983]
[149.97590637 -311.94189453]
[146.62355042 -326.57949829]
[144.96165466 -341.50381470]
[145.01185608 -356.52032471]
[146.77352905 -371.43322754]
[150.22369385 -386.04806519]
[155.31736755 -400.17437744]
[161.98814392 -413.62792969]
[170.14906311 -426.23339844]
[179.69372559 -437.82635498]
[190.49769592 -448.25573730]
[202.42012024 -457.38555908]
[215.30557251 -465.09677124]
[228.98605347 -471.28887939]
[243.28323364 -475.88110352]
[258.01068115 -478.81362915]
[272.97644043 -480.04818726]
[287.98535156 -479.56869507]
[302.84179688 -477.38140869]
[317.35205078 -473.51486206]
[331.32696533 -468.01940918]
[344.58432007 -460.96676636]
[356.95129395 -452.44882202]
[368.26669312 -442.57662964]
[378.38293457 -431.47891235]
[387.16818237 -419.30035400]
[394.50787354 -406.19970703]
[400.30633545 -392.34780884]
[404.48797607 -377.92520142]
[406.99826050 -363.11990356]
[407.80447388 -348.12500000]
[406.89608765 -333.13589478]
[404.28500366 -318.34808350]
[400.00518799 -303.95428467]
[394.11248779 -290.14221191]
[386.68368530 -277.09188843]
[377.81567383 -264.97344971]
[367.62405396 -253.94494629]
[356.24166870 -244.15008545]
[343.81692505 -235.71659851]
[330.51181030 -228.75442505]
[316.49978638 -223.35433960]
[301.96353149 -219.58673096]
[287.09252930 -217.50073242]
[272.08068848 -217.12351990]
[257.12371826 -218.46002197]
[242.41656494 -221.49282837]
[228.15101624 -226.18237305]
[221.87365723 -212.55905151]
[215.59629822 -198.93572998]
[209.62474060 -185.17562866]
[203.96194458 -171.28561401]
[198.29916382 -157.39558411]
[192.73992920 -143.46377563]
[187.28457642 -129.49098206]
[181.82922363 -115.51818848]
[177.00321960 -101.31572723]
[172.81620789 -86.91194916]
[168.62919617 -72.50816345]
[164.44218445 -58.10438538]
[160.47009277 -43.63986206]
[156.71379089 -29.11780167]
[169.10163879 -37.57600021]
[184.09815979 -37.25271988]
[196.11001587 -28.26854324]
[200.65707397 -13.97433949]
[196.04339600 0.29850376]
[183.98979187 9.22656918]
[168.99192810 9.47990990]
[156.64364624 0.96403545]
[151.55052185 -13.14601135]
[146.09516907 0.82678670]
[140.63980103 14.79958439]
[135.18444824 28.77238274]
[129.72909546 42.74518204]
[137.13368225 57.84520721]
[131.20956421 73.94551086]
[115.16423035 80.91449738]
[109.91751099 94.96696472]
[123.97808075 89.74199677]
[137.67187500 95.86408997]
[143.15446472 109.82621765]
[137.28517151 123.63025665]
[123.42620087 129.36862183]
[109.51659393 123.75410461]
[103.52442169 110.00392151]
[97.04492950 123.53226471]
[90.56542969 137.06060791]
[84.08593750 150.58895874]
[85.10292053 166.37744141]
[72.62697601 174.51379395]
[66.14747620 188.04212952]
[59.66798019 201.57048035]
[58.78338242 210.66197205]
[52.98998260 215.25091553]
[46.30978775 228.68128967]
[39.62959290 242.11166382]
[32.94940186 255.54203796]
[26.26920509 268.97241211]
[19.68917847 282.45214844]
[13.20968246 295.98049927]
[14.22666264 311.76898193]
[1.75071764 319.90533447]
[-4.72877836 333.43365479]
[-11.20827389 346.96200562]
[-16.97430801 360.80950928]
[-22.01122284 374.93853760]
[-27.04813957 389.06756592]
[-32.08505630 403.19659424]
[-19.26113129 411.08587646]
[-8.35798550 421.46926880]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 208]
[27 207]
[28 206]
[29 205]
[37 204]
[38 203]
[39 202]
[41 200]
[42 199]
[44 198]
[45 197]
[46 196]
[47 195]
[48 194]
[49 192]
[50 191]
[51 190]
[53 188]
[54 187]
[55 186]
[56 185]
[57 178]
[58 177]
[62 174]
[63 173]
[64 172]
[65 171]
[66 170]
[67 161]
[68 160]
[71 159]
[72 158]
[73 157]
[74 156]
[81 155]
[82 154]
[83 153]
[85 152]
[86 151]
[87 150]
[91 149]
[92 148]
[93 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
