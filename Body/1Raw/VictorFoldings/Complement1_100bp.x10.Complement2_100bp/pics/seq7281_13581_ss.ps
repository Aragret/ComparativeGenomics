%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[40.66310883 713.99816895]
[26.33629417 718.46124268]
[11.73830605 721.93621826]
[-3.06279254 724.40692139]
[-17.99799156 725.86175537]
[-32.99765396 726.29400635]
[-47.99184799 725.70159912]
[-62.91065979 724.08734131]
[-77.68453217 721.45874023]
[-92.24457550 717.82806396]
[-106.52291870 713.21228027]
[-120.45297241 707.63281250]
[-133.96980286 701.11572266]
[-147.01036072 693.69146729]
[-159.51388550 685.39453125]
[-171.42204285 676.26367188]
[-182.67933655 666.34149170]
[-193.23326111 655.67413330]
[-203.03460693 644.31152344]
[-212.03770447 632.30645752]
[-220.20054626 619.71496582]
[-227.48507690 606.59582520]
[-233.85734558 593.01013184]
[-239.28764343 579.02130127]
[-243.75062561 564.69445801]
[-247.22550964 550.09643555]
[-249.69609070 535.29528809]
[-251.15083313 520.36010742]
[-251.58297729 505.36044312]
[-250.99049377 490.36624146]
[-249.37614441 475.44744873]
[-246.74745178 460.67358398]
[-243.11668396 446.11355591]
[-238.50077820 431.83526611]
[-232.92121887 417.90524292]
[-226.40406799 404.38845825]
[-218.97967529 391.34793091]
[-210.68267822 378.84448242]
[-201.55174255 366.93637085]
[-191.62945557 355.67913818]
[-180.96208191 345.12530518]
[-169.59934998 335.32400513]
[-157.59423828 326.32101440]
[-145.00273132 318.15826416]
[-131.88352966 310.87380981]
[-118.29779816 304.50161743]
[-104.30888367 299.07144165]
[-89.98200989 294.60855103]
[-75.38397217 291.13375854]
[-60.58284378 288.66326904]
[-45.64762497 287.20861816]
[-30.64795685 286.77658081]
[-15.65377140 287.36917114]
[-0.73498189 288.98361206]
[14.03885460 291.61239624]
[28.59885406 295.24328613]
[33.21286392 280.97055054]
[37.82686996 266.69781494]
[42.44087982 252.42507935]
[47.05488968 238.15234375]
[51.66889954 223.87960815]
[56.28290939 209.60687256]
[54.94453430 205.02235413]
[56.47192001 199.54840088]
[61.25260925 194.98150635]
[66.28952789 180.85247803]
[71.32644653 166.72344971]
[76.04657745 152.48545837]
[80.44757843 138.14561462]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[104.99858856 57.38945007]
[108.97068787 42.92492676]
[112.83499146 28.43123436]
[116.59129333 13.90917397]
[120.34759521 -0.61288488]
[124.10389709 -15.13494396]
[127.86019897 -29.65700340]
[131.61650085 -44.17906189]
[135.37280273 -58.70112228]
[121.28485870 -63.88847351]
[107.78343201 -70.45277405]
[95.00269318 -78.32878113]
[83.06967926 -87.43820953]
[72.10298157 -97.69053650]
[62.21160126 -108.98385620]
[53.49383545 -121.20594025]
[46.03633881 -134.23530579]
[39.91321945 -147.94245911]
[35.18534088 -162.19116211]
[31.89968872 -176.83981323]
[30.08891869 -191.74282837]
[29.77102661 -206.75207520]
[30.94917297 -221.71839905]
[33.61164856 -236.49302673]
[37.73199081 -250.92913818]
[43.26924896 -264.88327026]
[50.16839218 -278.21670532]
[58.36085129 -290.79693604]
[67.76519775 -302.49893188]
[78.28797150 -313.20639038]
[89.82459259 -322.81289673]
[102.26039124 -331.22299194]
[115.47177887 -338.35305786]
[129.32743835 -344.13226318]
[143.68968201 -348.50311279]
[158.41577148 -351.42224121]
[173.35931396 -352.86059570]
[188.37182617 -352.80386353]
[203.30409241 -351.25265503]
[218.00769043 -348.22235107]
[232.33650208 -343.74307251]
[246.14810181 -337.85934448]
[259.30523682 -330.62966919]
[271.67712402 -322.12585449]
[283.14083862 -312.43246460]
[293.58239746 -301.64578247]
[302.89807129 -289.87304688]
[310.99523926 -277.23129272]
[317.79342651 -263.84609985]
[323.22509766 -249.85054016]
[327.23623657 -235.38369751]
[329.78701782 -220.58937073]
[330.85202026 -205.61457825]
[330.42074585 -190.60816956]
[328.49740601 -175.71926880]
[325.10116577 -161.09585571]
[320.26577759 -146.88327026]
[314.03924561 -133.22277832]
[306.48352051 -120.25012970]
[297.67364502 -108.09427643]
[287.69720459 -96.87601471]
[276.65338135 -86.70684052]
[264.65185547 -77.68783569]
[251.81198120 -69.90863037]
[238.26133728 -63.44653320]
[224.13461304 -58.36577606]
[209.57218933 -54.71685410]
[194.71882629 -52.53603363]
[179.72212219 -51.84498978]
[164.73112488 -52.65058517]
[149.89485168 -54.94482040]
[146.13854980 -40.42276382]
[142.38224792 -25.90070343]
[138.62596130 -11.37864304]
[134.86965942 3.14341569]
[131.11335754 17.66547585]
[127.35705566 32.18753433]
[128.72537231 39.45041656]
[123.43521118 46.89702225]
[119.46311188 61.36154556]
[121.00485992 65.88172913]
[119.72342682 71.41841888]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[94.78742218 142.54661560]
[90.38642120 156.88645935]
[91.55689240 161.97341919]
[90.74066925 166.54365540]
[88.46726990 169.92695618]
[85.45547485 171.76037598]
[80.41855621 185.88940430]
[75.38163757 200.01843262]
[70.55564117 214.22088623]
[65.94163513 228.49362183]
[61.32762527 242.76635742]
[56.71361542 257.03909302]
[52.09960556 271.31182861]
[47.48559570 285.58456421]
[42.87158585 299.85726929]
[56.80171585 305.43655396]
[70.31862640 311.95343018]
[83.35929871 319.37756348]
[95.86292267 327.67431641]
[107.77120972 336.80499268]
[119.02863312 346.72705078]
[129.58270264 357.39422607]
[139.38420105 368.75677490]
[148.38745117 380.76168823]
[156.55046082 393.35302734]
[163.83517456 406.47210693]
[170.20762634 420.05770874]
[175.63810730 434.04650879]
[180.10128784 448.37329102]
[183.57637024 462.97125244]
[186.04714966 477.77233887]
[187.50209045 492.70751953]
[187.93443298 507.70718384]
[187.34214783 522.70135498]
[185.72799683 537.62017822]
[183.09950256 552.39410400]
[179.46893311 566.95416260]
[174.85321045 581.23254395]
[169.27384949 595.16259766]
[162.75688171 608.67950439]
[155.33265686 621.72009277]
[147.03582764 634.22369385]
[137.90505981 646.13189697]
[127.98292542 657.38928223]
[117.31568909 667.94323730]
[105.95308685 677.74468994]
[93.94810486 686.74786377]
[81.35670471 694.91076660]
[68.23759460 702.19543457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 176]
[57 175]
[58 174]
[59 173]
[60 172]
[61 171]
[62 170]
[65 169]
[66 168]
[67 167]
[68 163]
[69 162]
[70 161]
[71 160]
[73 158]
[74 157]
[75 154]
[76 153]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 146]
[83 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
