%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[83.77777100 453.58267212]
[77.98374939 439.71868896]
[74.22183990 425.17120361]
[72.56861877 410.23641968]
[73.05775452 395.21838379]
[75.67928314 380.42285156]
[80.37983704 366.15100098]
[87.06372070 352.69342041]
[95.59484863 340.32406616]
[105.79954529 329.29479980]
[117.47006226 319.83013916]
[130.36878967 312.12277222]
[144.23313904 306.32958984]
[133.55520630 295.94543457]
[137.59013367 280.64739990]
[133.83383179 266.12533569]
[130.07752991 251.60327148]
[126.32122803 237.08122253]
[122.56492615 222.55915833]
[111.88699341 212.17498779]
[115.92192078 196.87695312]
[112.16562653 182.35488892]
[108.40932465 167.83282471]
[104.65302277 153.31077576]
[101.06555176 150.15814209]
[99.42045593 144.71841431]
[101.00794983 138.30035400]
[97.68569183 123.67289734]
[94.36342621 109.04543304]
[89.74942017 94.77270508]
[83.88046265 80.96852112]
[78.01149750 67.16434479]
[62.83684540 67.23951721]
[48.82725143 61.51463318]
[38.10577393 50.89090729]
[32.28428268 37.00934219]
[32.22115707 21.99731827]
[37.89488220 8.14256287]
[48.41204834 -2.45547652]
[42.54309082 -16.25965309]
[36.67412949 -30.06382942]
[30.80516815 -43.86800766]
[24.93620682 -57.67218399]
[21.37615585 -60.15814590]
[19.02846718 -63.32877350]
[17.95950890 -66.71886444]
[18.07775116 -69.88945770]
[19.15599632 -72.47702789]
[14.11908054 -86.60605621]
[9.08216476 -100.73508453]
[4.04524851 -114.86411285]
[-0.99166787 -128.99314880]
[-6.02858400 -143.12217712]
[-20.77054405 -147.59216309]
[-29.94645691 -159.74354553]
[-30.20467377 -174.79003906]
[-21.65571404 -186.95776367]
[-26.69262886 -201.08679199]
[-31.72954559 -215.21582031]
[-36.76646042 -229.34484863]
[-41.80337906 -243.47387695]
[-46.84029388 -257.60290527]
[-51.98225403 -271.69406128]
[-57.22897339 -285.74652100]
[-71.76618958 -281.99325562]
[-86.61610413 -279.78015137]
[-101.61599731 -279.13140869]
[-116.60153198 -280.05416870]
[-131.40850830 -282.53833008]
[-145.87471008 -286.55664062]
[-159.84162903 -292.06509399]
[-173.15621948 -299.00332642]
[-185.67262268 -307.29534912]
[-197.25369263 -316.85025024]
[-207.77255249 -327.56341553]
[-217.11392212 -339.31741333]
[-225.17549133 -351.98345947]
[-231.86889648 -365.42279053]
[-237.12081909 -379.48818970]
[-240.87373352 -394.02548218]
[-243.08648682 -408.87545776]
[-243.73484802 -423.87536621]
[-242.81172180 -438.86087036]
[-240.32720947 -453.66781616]
[-236.30854797 -468.13391113]
[-230.79975891 -482.10067749]
[-223.86119080 -495.41510010]
[-215.56887817 -507.93130493]
[-206.01367188 -519.51214600]
[-195.30027771 -530.03076172]
[-183.54605103 -539.37182617]
[-170.87980652 -547.43310547]
[-157.44029236 -554.12615967]
[-143.37478638 -559.37774658]
[-128.83738708 -563.13031006]
[-113.98736572 -565.34271240]
[-98.98744202 -565.99072266]
[-84.00195312 -565.06719971]
[-69.19509125 -562.58233643]
[-54.72909164 -558.56335449]
[-40.76244736 -553.05419922]
[-27.44818306 -546.11529541]
[-14.93218327 -537.82269287]
[-3.35157609 -528.26721191]
[7.16675377 -517.55352783]
[16.50756264 -505.79910278]
[24.56850624 -493.13265991]
[31.26126480 -479.69299316]
[36.51250839 -465.62734985]
[40.26470184 -451.08987427]
[42.47673798 -436.23977661]
[43.12437439 -421.23983765]
[42.20051575 -406.25439453]
[39.71529007 -391.44757080]
[35.69592285 -376.98168945]
[30.18645096 -363.01516724]
[23.24724197 -349.70108032]
[14.95432377 -337.18527222]
[5.39855957 -325.60488892]
[-5.31535292 -315.08682251]
[-17.07002640 -305.74630737]
[-29.73666954 -297.68566895]
[-43.17650223 -290.99322510]
[-37.92978287 -276.94076538]
[-32.64523315 -271.77401733]
[-32.71126556 -262.63983154]
[-27.67434883 -248.51078796]
[-22.63743210 -234.38175964]
[-17.60051537 -220.25273132]
[-12.56359959 -206.12370300]
[-7.52668381 -191.99467468]
[6.79156446 -187.97898865]
[16.10989761 -176.16235352]
[16.69017792 -160.94668579]
[8.10044575 -148.15908813]
[13.13736153 -134.03005981]
[18.17427826 -119.90103149]
[23.21119499 -105.77200317]
[28.24810982 -91.64297485]
[33.28502655 -77.51393890]
[38.74038315 -63.54114532]
[44.60934448 -49.73696899]
[50.47830582 -35.93279266]
[56.34726715 -22.12861443]
[62.21622849 -8.32443714]
[77.14540863 -8.54512691]
[91.05940247 -3.01824999]
[101.82641602 7.44292450]
[107.78404236 21.26661110]
[107.99582672 36.35862350]
[102.39836121 50.41960907]
[91.81567383 61.29538727]
[97.68463898 75.09956360]
[103.55359650 88.90373993]
[106.10221863 74.12184143]
[114.74144745 61.85955429]
[127.80319214 54.48453903]
[142.76542664 53.42078781]
[156.73918152 58.87369919]
[167.02633667 69.79039764]
[171.64060974 84.06304932]
[169.69105530 98.93581390]
[161.55410767 111.53700256]
[148.80087280 119.43352509]
[133.89381409 121.10068512]
[119.71123505 116.21657562]
[108.99089050 105.72317505]
[112.31314850 120.35063934]
[115.63540649 134.97808838]
[119.17507935 149.55447388]
[122.93138123 164.07653809]
[126.68768311 178.59858704]
[130.44398499 193.12065125]
[141.39059448 204.54353333]
[137.08699036 218.80285645]
[140.84329224 233.32492065]
[144.59959412 247.84696960]
[148.35589600 262.36904907]
[152.11218262 276.89108276]
[163.05879211 288.31399536]
[158.75518799 302.57330322]
[173.68966675 300.91729736]
[188.70779419 301.40365601]
[203.50382996 304.02243042]
[217.77655029 308.72033691]
[231.23536682 315.40173340]
[243.60629272 323.93057251]
[254.63746643 334.13320923]
[264.10430908 345.80197144]
[271.81405640 358.69927979]
[277.60980225 372.56253052]
[281.37350464 387.10952759]
[283.02856445 402.04409790]
[282.54129028 417.06219482]
[279.92160034 431.85809326]
[275.22280884 446.13052368]
[268.54058838 459.58892822]
[260.01098633 471.95932007]
[249.80766296 482.98986816]
[238.13832092 492.45596313]
[225.24055481 500.16491699]
[211.37692261 505.95980835]
[196.82969666 509.72262573]
[181.89501953 511.37677002]
[166.87693787 510.88854980]
[152.08122253 508.26794434]
[137.80909729 503.56826782]
[124.35109711 496.88522339]
[111.98123169 488.35485840]
[100.95132446 478.15084839]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 181]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[21 173]
[22 172]
[23 171]
[24 170]
[27 169]
[28 168]
[29 167]
[30 154]
[31 153]
[32 152]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[48 140]
[49 139]
[50 138]
[51 137]
[52 136]
[53 135]
[57 131]
[58 130]
[59 129]
[60 128]
[61 127]
[62 126]
[63 124]
[64 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
