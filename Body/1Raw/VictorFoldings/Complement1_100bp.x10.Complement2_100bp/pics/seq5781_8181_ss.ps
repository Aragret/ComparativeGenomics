%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[18.05346107 549.14880371]
[14.00345612 563.61254883]
[8.17254734 577.45465088]
[0.65269876 590.45678711]
[-8.43749142 602.41387939]
[-18.95465851 613.13732910]
[-30.73293114 622.45800781]
[-43.58654785 630.22900391]
[-57.31278992 636.32763672]
[-71.69517517 640.65777588]
[-86.50687408 643.15112305]
[-101.51427460 643.76843262]
[-116.48070526 642.49981689]
[-131.17010498 639.36541748]
[-145.35081482 634.41461182]
[-158.79919434 627.72546387]
[-171.30311584 619.40350342]
[-182.66539001 609.57995605]
[-192.70681763 598.40972900]
[-201.26902771 586.06909180]
[-208.21697998 572.75256348]
[-213.44110107 558.67028809]
[-216.85899353 544.04425049]
[-218.41674805 529.10510254]
[-218.08981323 514.08856201]
[-215.88333130 499.23144531]
[-211.83210754 484.76800537]
[-206.00003052 470.92642212]
[-198.47909546 457.92492676]
[-189.38789368 445.96859741]
[-178.86982727 435.24603271]
[-167.09077454 425.92633057]
[-154.23649597 418.15646362]
[-140.50975037 412.05895996]
[-126.12699890 407.73001099]
[-111.31508636 405.23788452]
[-96.30763245 404.62188721]
[-81.34130859 405.89172363]
[-66.65216827 409.02740479]
[-52.47187424 413.97940063]
[-45.79167938 400.54904175]
[-47.05129242 385.70779419]
[-33.97777939 376.79745483]
[-27.29758644 363.36709595]
[-20.61739159 349.93670654]
[-14.34003067 336.31338501]
[-8.47107029 322.50921631]
[-2.60210919 308.70504761]
[3.26685166 294.90087891]
[9.13581276 281.09667969]
[15.00477314 267.29251099]
[5.93879795 255.47415161]
[3.99272060 240.60577393]
[9.78847885 226.66749573]
[21.86200714 217.44107056]
[37.03161240 215.48396301]
[42.90057373 201.67977905]
[48.76953506 187.87559509]
[54.63849258 174.07142639]
[60.40452957 160.22393799]
[66.06731415 146.33390808]
[53.00220108 153.70295715]
[38.02136612 152.94496155]
[25.76678085 144.29481506]
[20.03566551 130.43283081]
[22.60386658 115.65432739]
[32.67560196 104.53856659]
[47.13002777 100.52989197]
[61.48829269 104.87042999]
[71.30132294 116.21522522]
[73.52841949 131.04922485]
[80.99615479 118.04026794]
[88.46389771 105.03131866]
[95.63926697 91.85884094]
[102.51867676 78.52941132]
[109.39808655 65.19998169]
[116.27750397 51.87055588]
[123.15691376 38.54112625]
[130.03633118 25.21169662]
[134.11599731 10.77714443]
[135.23164368 -4.18130922]
[136.34729004 -19.13976288]
[133.82530212 -25.25131607]
[134.64526367 -30.87490082]
[137.72537231 -34.52482224]
[131.46575928 -49.05505753]
[140.48515320 -60.90831757]
[142.04566956 -75.82692719]
[142.60388184 -90.81653595]
[142.15728760 -105.80988312]
[141.71067810 -120.80323029]
[141.26406860 -135.79658508]
[133.11932373 -149.36027527]
[140.47424316 -162.31227112]
[140.02764893 -177.30561829]
[139.58103943 -192.29896545]
[125.18102264 -197.03344727]
[113.27063751 -206.40994263]
[105.28812408 -219.29618835]
[102.19741058 -234.13610840]
[104.37171173 -249.13771057]
[111.54847717 -262.48947144]
[122.86106873 -272.57913208]
[136.94345093 -278.18829346]
[152.09507751 -278.63961792]
[166.48634338 -273.87860107]
[178.37942505 -264.48016357]
[186.33818054 -251.57923889]
[189.40155029 -236.73364258]
[187.19960022 -221.73606873]
[179.99824524 -208.39755249]
[168.66706848 -198.32876587]
[154.57438660 -192.74557495]
[155.02099609 -177.75222778]
[155.46760559 -162.75886536]
[163.58041382 -150.26760864]
[156.25741577 -136.24319458]
[156.70402527 -121.24983978]
[157.15063477 -106.25649261]
[157.59724426 -91.26313782]
[166.55944824 -103.29138947]
[180.56411743 -108.66439056]
[195.27175903 -105.71726990]
[206.12503052 -95.36321259]
[209.76094055 -80.81054688]
[205.05285645 -66.56856537]
[193.45964050 -57.05030823]
[178.57356262 -55.20510483]
[165.00724792 -61.60471725]
[156.96427917 -74.26640320]
[155.40376282 -59.34779739]
[161.77499390 -45.88463593]
[152.64398193 -32.96429825]
[151.30574036 -18.02411461]
[150.19009399 -3.06566024]
[149.07444763 11.89279270]
[156.68443298 -1.03346622]
[166.86265564 -12.05180740]
[179.14607239 -20.66096878]
[192.97586060 -26.46929359]
[207.72288513 -29.21253777]
[222.71623230 -28.76590538]
[237.27381897 -25.14971352]
[250.73335266 -18.52847481]
[262.48254395 -9.20341206]
[271.98684692 2.40124607]
[278.81390381 15.75756645]
[282.65310669 30.25792503]
[283.32983398 45.24265289]
[280.81329346 60.03004456]
[275.21792603 73.94737244]
[266.79830933 86.36148834]
[255.93751526 96.70763397]
[243.12959290 104.51513672]
[228.95721436 109.42879486]
[214.06517029 111.22507477]
[199.13090515 109.82225800]
[184.83384705 105.28417206]
[171.82443237 97.81725311]
[160.69447327 87.76120758]
[151.95031738 75.57350922]
[145.98977661 61.80863190]
[143.08401489 47.09276962]
[143.36575317 32.09111023]
[136.48634338 45.42053986]
[129.60693359 58.74996948]
[122.72751617 72.07939911]
[115.84810638 85.40882874]
[108.96869659 98.73825836]
[109.60877991 102.54123688]
[108.56946564 106.60789490]
[105.77057648 110.18185425]
[101.47285461 112.49906158]
[94.00511169 125.50801086]
[86.53736877 138.51696777]
[79.95734406 151.99670410]
[74.29455566 165.88671875]
[73.95265961 175.01475525]
[68.44267273 179.94038391]
[62.57371140 193.74456787]
[56.70475006 207.54873657]
[50.83578873 221.35292053]
[59.95143127 233.63511658]
[61.68399811 248.73130798]
[55.66767883 262.57580566]
[43.61006927 271.49041748]
[28.80895042 273.16146851]
[22.93998909 286.96563721]
[17.07102776 300.76983643]
[11.20206738 314.57400513]
[5.33310699 328.37817383]
[-0.53585386 342.18234253]
[0.14394906 346.47091675]
[-0.51047432 350.36145020]
[-2.21015978 353.48339844]
[-4.57547808 355.59808350]
[-7.18701553 356.61691284]
[-13.86721039 370.04727173]
[-20.54740524 383.47766113]
[-19.76560402 399.27954102]
[-32.36130524 407.22921753]
[-39.04150009 420.65960693]
[-26.53687477 428.98052979]
[-15.17377377 438.80310059]
[-5.13140869 449.97244263]
[3.43183875 462.31237793]
[10.38091373 475.62829590]
[15.60621834 489.71017456]
[19.02534294 504.33593750]
[20.58436394 519.27490234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 202]
[41 201]
[43 199]
[44 198]
[45 197]
[46 192]
[47 191]
[48 190]
[49 189]
[50 188]
[51 187]
[56 182]
[57 181]
[58 180]
[59 179]
[60 177]
[61 176]
[71 175]
[72 174]
[73 173]
[74 169]
[75 168]
[76 167]
[77 166]
[78 165]
[79 164]
[80 136]
[81 135]
[82 134]
[85 133]
[87 131]
[88 130]
[89 120]
[90 119]
[91 118]
[92 117]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
