%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[94.76836395 584.61975098]
[82.91659546 593.92742920]
[69.23754883 600.25042725]
[54.46891785 603.24774170]
[39.40715408 602.75787354]
[24.86452103 598.80706787]
[11.62528706 591.60852051]
[0.40342429 581.55035400]
[-8.19588470 569.17504883]
[-13.70889091 555.14996338]
[-15.83828449 540.23144531]
[-14.46922970 525.22399902]
[-9.67555809 510.93704224]
[-1.71578622 498.14099121]
[8.98082542 487.52593994]
[21.83742142 479.66433716]
[36.16066360 474.98016357]
[51.17811203 473.72604370]
[53.40322876 458.89199829]
[55.62834930 444.05795288]
[57.63236237 429.19241333]
[59.41482544 414.29870605]
[61.19729233 399.40496826]
[62.97975922 384.51126099]
[64.76222229 369.61755371]
[50.57880783 364.80856323]
[37.70026016 357.15258789]
[26.69075584 346.98217773]
[18.03317642 334.74011230]
[12.10793591 320.96011353]
[9.17626476 306.24353027]
[9.36869526 291.23318481]
[12.67924690 276.58517456]
[18.96558571 262.94033813]
[27.95513916 250.89614868]
[39.25691986 240.98046875]
[52.37852097 233.62857056]
[66.74757385 229.16392517]
[81.73672485 227.78401184]
[83.51919556 212.89030457]
[85.30165863 197.99658203]
[87.08412170 183.10285950]
[88.42235565 168.16267395]
[81.45631409 154.99743652]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[94.02081299 57.39873886]
[92.90515900 42.44028473]
[91.78951263 27.48183250]
[90.67386627 12.52337837]
[79.95581818 -2.45009613]
[88.18656921 -17.94918060]
[86.84833527 -32.88936615]
[85.51010132 -47.82955170]
[84.17186737 -62.76973724]
[74.79272461 -71.62380219]
[73.98567963 -84.09506226]
[81.63910675 -93.46264648]
[80.52345276 -108.42110443]
[79.40780640 -123.37955475]
[78.29216003 -138.33801270]
[66.59973907 -148.62998962]
[65.68139648 -163.81588745]
[75.56529236 -174.89939880]
[74.44964600 -189.85784912]
[73.33399963 -204.81629944]
[62.61594772 -219.78977966]
[70.84670258 -235.28886414]
[69.50846863 -250.22904968]
[68.17023468 -265.16921997]
[66.83200073 -280.10940552]
[51.81991196 -280.45187378]
[36.94056702 -282.47302246]
[22.38108253 -286.14746094]
[8.32456303 -291.42895508]
[-5.05221796 -298.25109863]
[-17.58103180 -306.52810669]
[-29.10431671 -316.15588379]
[-39.47715378 -327.01333618]
[-48.56909180 -338.96392822]
[-56.26579666 -351.85736084]
[-62.47046661 -365.53149414]
[-67.10507965 -379.81436157]
[-70.11133575 -394.52633667]
[-71.45144653 -409.48242188]
[-71.10855103 -424.49450684]
[-69.08695221 -439.37377930]
[-65.41208649 -453.93316650]
[-60.13016891 -467.98953247]
[-53.30761719 -481.36608887]
[-45.03023529 -493.89465332]
[-35.40212250 -505.41766357]
[-24.54435921 -515.79016113]
[-12.59349632 -524.88177490]
[0.30017358 -532.57806396]
[13.97449780 -538.78234863]
[28.25750732 -543.41650391]
[42.96957779 -546.42236328]
[57.92569351 -547.76202393]
[72.93775940 -547.41864014]
[87.81698608 -545.39660645]
[102.37625122 -541.72131348]
[116.43244934 -536.43896484]
[129.80882263 -529.61602783]
[142.33714294 -521.33825684]
[153.85984802 -511.70980835]
[164.23204041 -500.85174561]
[173.32327271 -488.90060425]
[181.01919556 -476.00671387]
[187.22305298 -462.33218384]
[191.85681152 -448.04904175]
[194.86218262 -433.33688354]
[196.20140076 -418.38073730]
[195.85760498 -403.36868286]
[193.83511353 -388.48950195]
[190.15937805 -373.93035889]
[184.87661743 -359.87429810]
[178.05326843 -346.49813843]
[169.77514648 -333.97006226]
[160.14633179 -322.44763184]
[149.28794861 -312.07577515]
[137.33654785 -302.98492432]
[124.44242096 -295.28936768]
[110.76772308 -289.08593750]
[96.48443604 -284.45260620]
[81.77218628 -281.44766235]
[83.11042023 -266.50747681]
[84.44865417 -251.56729126]
[85.78688812 -236.62710571]
[94.86526489 -228.63275146]
[96.10243988 -216.19679260]
[88.29244995 -205.93196106]
[89.40809631 -190.97349548]
[90.52375031 -176.01504517]
[101.94242859 -166.52035522]
[103.28694916 -151.36624146]
[93.25061035 -139.45365906]
[94.36626434 -124.49520111]
[95.48191071 -109.53675079]
[96.59755707 -94.57829285]
[107.24526978 -80.62863159]
[99.11205292 -64.10797119]
[100.45028687 -49.16778564]
[101.78852081 -34.22760010]
[103.12675476 -19.28741455]
[112.20513153 -11.29306698]
[113.44231415 1.14289582]
[105.63231659 11.40773010]
[106.74797058 26.36618423]
[107.86361694 41.32463837]
[108.97926331 56.28308868]
[117.39544678 43.86665344]
[131.14624023 37.87366867]
[145.97079468 40.16112137]
[157.27557373 50.02022552]
[161.55766296 64.39602661]
[157.49021912 78.83403015]
[146.33357239 88.86045837]
[131.54473877 91.36851501]
[117.70619965 85.58105469]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[111.87688446 156.81132507]
[103.39576721 169.05549622]
[105.47617340 172.86677551]
[106.16616821 176.75115967]
[105.61350250 180.26255798]
[104.09562683 183.04872131]
[101.97784424 184.88533020]
[100.19537354 199.77905273]
[98.41291046 214.67276001]
[96.63044739 229.56648254]
[110.87065125 234.44453430]
[123.78034210 242.17385864]
[134.79647827 252.41455078]
[143.43919373 264.71716309]
[149.33270264 278.54257202]
[152.22161865 293.28549194]
[151.98207092 308.30102539]
[148.62693787 322.93286133]
[142.30528259 336.54202271]
[133.29559326 348.53463745]
[121.99365997 358.38793945]
[108.89508820 365.67309570]
[94.57361603 370.07382202]
[79.65594482 371.40002441]
[77.87347412 386.29373169]
[76.09101105 401.18743896]
[74.30854797 416.08117676]
[72.52607727 430.97488403]
[74.77265930 437.19296265]
[73.70241547 442.77432251]
[70.46239471 446.28305054]
[68.23727417 461.11709595]
[66.01215363 475.95114136]
[80.00072479 481.55621338]
[92.31925964 490.23666382]
[102.30344391 501.52441406]
[109.41484070 514.81066895]
[113.26994324 529.37896729]
[113.66085052 544.44360352]
[110.56648254 559.19219971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 203]
[19 202]
[20 201]
[21 198]
[22 197]
[23 196]
[24 195]
[25 194]
[39 180]
[40 179]
[41 178]
[42 177]
[43 172]
[45 170]
[46 169]
[47 168]
[49 166]
[50 165]
[51 155]
[52 154]
[53 153]
[54 152]
[56 149]
[57 148]
[58 147]
[59 146]
[62 144]
[63 143]
[64 142]
[65 141]
[68 138]
[69 137]
[70 136]
[72 133]
[73 132]
[74 131]
[75 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
