%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[151.41853333 890.98681641]
[136.56150818 888.90588379]
[121.80032349 886.22845459]
[107.15892029 882.95880127]
[92.66104889 879.10229492]
[78.33022308 874.66510010]
[64.18968201 869.65447998]
[50.26236725 864.07855225]
[36.57086945 857.94635010]
[23.13739586 851.26776123]
[9.98373508 844.05371094]
[-2.86877799 836.31591797]
[-15.39929581 828.06683350]
[-27.58749390 819.31988525]
[-39.41360474 810.08923340]
[-50.85844421 800.38995361]
[-61.90344620 790.23760986]
[-72.53070068 779.64886475]
[-82.72296906 768.64068604]
[-92.46371460 757.23107910]
[-101.73714447 745.43853760]
[-110.52821350 733.28210449]
[-118.82266998 720.78161621]
[-126.60704803 707.95721436]
[-133.86872864 694.82977295]
[-140.59591675 681.42059326]
[-146.77774048 667.75146484]
[-152.40412903 653.84442139]
[-157.46598816 639.72216797]
[-161.95507812 625.40747070]
[-165.86415100 610.92370605]
[-169.18684387 596.29425049]
[-171.91777039 581.54284668]
[-174.05250549 566.69348145]
[-175.58758545 551.77020264]
[-176.52050781 536.79718018]
[-176.84977722 521.79876709]
[-176.57485962 506.79922485]
[-175.69619751 491.82293701]
[-174.21520996 476.89419556]
[-172.13429260 462.03717041]
[-169.45683289 447.27597046]
[-166.18717957 432.63458252]
[-162.33062744 418.13671875]
[-157.89343262 403.80590820]
[-152.88278198 389.66537476]
[-147.30682373 375.73806763]
[-141.17457581 362.04656982]
[-134.49601746 348.61309814]
[-127.28195190 335.45944214]
[-119.54409790 322.60696411]
[-111.29500580 310.07644653]
[-102.54804230 297.88824463]
[-93.31740570 286.06216431]
[-83.61806488 274.61734009]
[-73.46575165 263.57235718]
[-62.87694168 252.94509888]
[-51.86879730 242.75285339]
[-40.45918274 233.01211548]
[-28.66659927 223.73870850]
[-16.51017570 214.94764709]
[-4.00963306 206.65321350]
[8.81475639 198.86886597]
[21.94219017 191.60719299]
[35.35137558 184.88002014]
[49.02056122 178.69822693]
[62.92757797 173.07185364]
[77.04986572 168.01000977]
[91.36452484 163.52093506]
[105.84832764 159.61189270]
[102.52606964 144.98442078]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[86.41867065 108.94016266]
[83.92377472 97.56401825]
[89.67687988 87.43766022]
[86.57276917 72.76235962]
[79.24803162 85.85236359]
[65.67680359 92.24155426]
[50.92082214 89.54692841]
[40.48370361 78.77351379]
[38.25823212 63.93952179]
[45.07445908 50.57767105]
[58.39009476 43.67159653]
[73.23873901 45.79710007]
[84.08277130 56.16244125]
[82.74453735 41.22225571]
[81.40630341 26.28207207]
[80.06806946 11.34188652]
[65.13957214 9.32005787]
[51.03544998 4.02653074]
[38.46315384 -4.27317524]
[28.05330849 -15.16274929]
[20.32806396 -28.09597588]
[15.67491722 -42.42412949]
[14.32726765 -57.42851257]
[16.35271263 -72.35652161]
[21.64965820 -86.45935822]
[29.95240974 -99.02964020]
[40.84450531 -109.43685150]
[53.77960205 -117.15895844]
[68.10887909 -121.80863953]
[83.11359406 -123.15264893]
[98.04110718 -121.12358856]
[112.14266205 -115.82322693]
[124.71093750 -107.51743317]
[135.11550903 -96.62281036]
[142.83448792 -83.68584442]
[147.48068237 -69.35543823]
[148.82106018 -54.35040283]
[146.78837585 -39.42338181]
[141.48460388 -25.32310867]
[133.17576599 -12.75684834]
[122.27862549 -2.35491991]
[109.33978271 5.36092138]
[95.00825500 10.00365257]
[96.34648895 24.94383621]
[97.68472290 39.88402176]
[99.02295685 54.82420731]
[101.24807739 69.65824890]
[104.35218811 84.33355713]
[115.88227844 96.51686859]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[117.15352631 141.66217041]
[120.47578430 156.28962708]
[135.22715759 153.55863953]
[150.07652283 151.42384338]
[164.99981689 149.88870239]
[179.97282410 148.95571899]
[194.97123718 148.62637329]
[209.97076416 148.90124512]
[224.94705200 149.77984619]
[239.87582397 151.26077271]
[254.73284912 153.34162903]
[269.49404907 156.01901245]
[284.13546753 159.28862000]
[298.63333130 163.14511108]
[312.96417236 167.58224487]
[327.10473633 172.59283447]
[341.03207397 178.16874695]
[354.72357178 184.30091858]
[368.15707397 190.97943115]
[381.31076050 198.19343567]
[394.16326904 205.93124390]
[406.69381714 214.18028259]
[418.88204956 222.92720032]
[430.70819092 232.15779114]
[442.15304565 241.85708618]
[453.19808960 252.00933838]
[463.82534790 262.59811401]
[474.01766968 273.60623169]
[483.75845337 285.01580811]
[493.03189087 296.80834961]
[501.82299805 308.96472168]
[510.11749268 321.46524048]
[517.90191650 334.28958130]
[525.16363525 347.41699219]
[531.89086914 360.82614136]
[538.07269287 374.49530029]
[543.69915771 388.40231323]
[548.76104736 402.52456665]
[553.25018311 416.83920288]
[557.15924072 431.32299805]
[560.48199463 445.95245361]
[563.21295166 460.70382690]
[565.34771729 475.55319214]
[566.88287354 490.47647095]
[567.81585693 505.44949341]
[568.14514160 520.44793701]
[567.87030029 535.44744873]
[566.99163818 550.42370605]
[565.51068115 565.35247803]
[563.42980957 580.20953369]
[560.75238037 594.97070312]
[557.48278809 609.61212158]
[553.62628174 624.10998535]
[549.18908691 638.44079590]
[544.17852783 652.58135986]
[538.60260010 666.50866699]
[532.47039795 680.20019531]
[525.79187012 693.63366699]
[518.57781982 706.78735352]
[510.84002686 719.63989258]
[502.59094238 732.17041016]
[493.84402466 744.35864258]
[484.61340332 756.18475342]
[474.91412354 767.62957764]
[464.76184082 778.67462158]
[454.17303467 789.30187988]
[443.16491699 799.49414062]
[431.75534058 809.23492432]
[419.96276855 818.50836182]
[407.80639648 827.29943848]
[395.30587769 835.59393311]
[382.48150635 843.37829590]
[369.35409546 850.64001465]
[355.94491577 857.36724854]
[342.27575684 863.54907227]
[328.36874390 869.17547607]
[314.24645996 874.23736572]
[299.93182373 878.72644043]
[285.44802856 882.63555908]
[270.81857300 885.95825195]
[256.06719971 888.68920898]
[241.21783447 890.82397461]
[226.29454041 892.35906982]
[211.32153320 893.29199219]
[196.32310486 893.62133789]
[181.32357788 893.34643555]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 126]
[71 125]
[72 124]
[73 123]
[76 121]
[77 120]
[86 119]
[87 118]
[88 117]
[89 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
