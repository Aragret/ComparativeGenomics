%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[83.90434265 563.66052246]
[70.23548126 569.87414551]
[55.97492981 574.57348633]
[41.28987503 577.70343018]
[26.35249710 579.22723389]
[11.33793163 579.12707520]
[-3.57778692 577.40411377]
[-18.21977806 574.07855225]
[-32.41637039 569.18939209]
[-46.00111771 562.79394531]
[-58.81474686 554.96716309]
[-70.70702362 545.80090332]
[-81.53852081 535.40252686]
[-91.18223572 523.89398193]
[-99.52510834 511.41024780]
[-106.46931458 498.09765625]
[-111.93344879 484.11230469]
[-115.85343933 469.61813354]
[-118.18332672 454.78509521]
[-118.89579773 439.78710938]
[-117.98249817 424.80001831]
[-115.45413208 409.99951172]
[-111.34034729 395.55914307]
[-105.68936920 381.64822388]
[-98.56746674 368.42984009]
[-90.05812836 356.05899048]
[-80.26112366 344.68066406]
[-69.29131317 334.42831421]
[-57.27732468 325.42214966]
[-44.36000824 317.76773071]
[-30.69081116 311.55480957]
[-16.43000221 306.85623169]
[-1.74478006 303.72711182]
[13.19267845 302.20410156]
[28.20723915 302.30505371]
[43.12286377 304.02883911]
[46.44512558 289.40136719]
[49.76738358 274.77389526]
[53.08964539 260.14645386]
[56.41190338 245.51898193]
[59.73416138 230.89152527]
[63.05642319 216.26406860]
[66.37868500 201.63659668]
[64.63663483 197.18977356]
[65.66957092 191.60137939]
[70.02375793 186.62619019]
[73.78005219 172.10412598]
[77.53635406 157.58206177]
[81.29265594 143.06001282]
[76.98905182 128.80068970]
[87.93566132 117.37779999]
[91.69196320 102.85574341]
[90.37331390 100.10789490]
[90.02535248 96.81951141]
[90.85020447 93.34919739]
[92.91469574 90.12520599]
[96.12829590 87.59425354]
[100.74230957 73.32151794]
[99.64771271 68.21770477]
[100.53188324 63.66012192]
[102.85540009 60.31104660]
[105.89416504 58.52267456]
[111.14088440 44.47020340]
[116.38760376 30.41773033]
[115.51698303 26.16379356]
[115.99703217 22.24791908]
[117.55561829 19.05320168]
[119.82415009 16.83501244]
[122.38758850 15.70058823]
[128.46142578 1.98532176]
[134.53526306 -11.72994518]
[140.60910034 -25.44521141]
[127.31556702 -32.40541840]
[114.50572968 -40.22016144]
[102.23442841 -48.85597992]
[90.55420685 -58.27589417]
[79.51509094 -68.43956757]
[69.16435242 -79.30346680]
[59.54631042 -90.82108307]
[50.70214844 -102.94309235]
[42.66974640 -115.61759186]
[35.48349762 -128.79028320]
[29.17417526 -142.40480042]
[23.76879311 -156.40280151]
[19.29050255 -170.72436523]
[15.75847912 -185.30815125]
[13.18784809 -200.09173584]
[11.58961582 -215.01177979]
[10.97062683 -230.00440979]
[11.33353329 -245.00543213]
[12.67677879 -259.95059204]
[14.99461269 -274.77590942]
[18.27710915 -289.41787720]
[22.51021385 -303.81384277]
[27.67579651 -317.90209961]
[33.75173950 -331.62234497]
[40.71202469 -344.91580200]
[48.52684402 -357.72561646]
[57.16273499 -369.99685669]
[66.58271790 -381.67703247]
[76.74645233 -392.71609497]
[87.61042023 -403.06674194]
[99.12808990 -412.68472290]
[111.25015259 -421.52880859]
[123.92469025 -429.56115723]
[137.09744263 -436.74731445]
[150.71197510 -443.05654907]
[164.71000671 -448.46185303]
[179.03160095 -452.94006348]
[193.61541748 -456.47201538]
[208.39900208 -459.04254150]
[223.31907654 -460.64068604]
[238.31170654 -461.25958252]
[253.31272888 -460.89660645]
[268.25787354 -459.55325317]
[283.08319092 -457.23535156]
[297.72512817 -453.95275879]
[312.12106323 -449.71957397]
[326.20928955 -444.55389404]
[339.92950439 -438.47787476]
[353.22293091 -431.51751709]
[366.03268433 -423.70263672]
[378.30389404 -415.06665039]
[389.98397827 -405.64660645]
[401.02297974 -395.48281860]
[411.37359619 -384.61877441]
[420.99151611 -373.10104370]
[429.83551025 -360.97894287]
[437.86776733 -348.30435181]
[445.05386353 -335.13156128]
[451.36303711 -321.51699829]
[456.76824951 -307.51892090]
[461.24636841 -293.19729614]
[464.77822876 -278.61346436]
[467.34866333 -263.82986450]
[468.94671631 -248.90979004]
[469.56555176 -233.91714478]
[469.20245361 -218.91613770]
[467.85903931 -203.97097778]
[465.54101562 -189.14570618]
[462.25836182 -174.50375366]
[458.02508545 -160.10786438]
[452.85934448 -146.01966858]
[446.78323364 -132.29949951]
[439.82278442 -119.00609589]
[432.00781250 -106.19639587]
[423.37179565 -93.92524719]
[413.95166016 -82.24519348]
[403.78781128 -71.20626068]
[392.92370605 -60.85570908]
[381.40591431 -51.23787308]
[369.28375244 -42.39392853]
[356.60913086 -34.36174774]
[343.43627930 -27.17573357]
[329.82168579 -20.86664963]
[315.82357788 -15.46151733]
[301.50192261 -10.98347950]
[286.91809082 -7.45171452]
[272.13446045 -4.88134432]
[257.21438599 -3.28337622]
[242.22174072 -2.66465306]
[227.22071838 -3.02782416]
[212.27557373 -4.37133455]
[197.45030212 -6.68943119]
[182.80839539 -9.97218704]
[168.41252136 -14.20554543]
[154.32435608 -19.37137794]
[148.25051880 -5.65611124]
[142.17669678 8.05915546]
[136.10285950 21.77442169]
[130.44007874 35.66444778]
[125.19335175 49.71691895]
[119.94663239 63.76939011]
[115.01504517 77.93552399]
[110.40103149 92.20825958]
[106.21401978 106.61204529]
[102.45771790 121.13410187]
[106.49265289 136.43214417]
[95.81472015 146.81631470]
[92.05841827 161.33836365]
[88.30211639 175.86042786]
[84.54581451 190.38249207]
[81.00614166 204.95886230]
[77.68388367 219.58631897]
[74.36162567 234.21377563]
[71.03936005 248.84124756]
[67.71710205 263.46868896]
[64.39484406 278.09616089]
[61.07258606 292.72363281]
[57.75032425 307.35107422]
[71.94718170 312.23950195]
[85.53227234 318.63421631]
[98.34632111 326.46029663]
[110.23909760 335.62594604]
[121.07114410 346.02371216]
[130.71548462 357.53170776]
[139.05902100 370.01501465]
[146.00395203 383.32723999]
[151.46884155 397.31231689]
[155.38960266 411.80627441]
[157.72029114 426.63916016]
[158.43357849 441.63711548]
[157.52107239 456.62426758]
[154.99351501 471.42489624]
[150.88049316 485.86547852]
[145.23027039 499.77670288]
[138.10908508 512.99548340]
[129.60040283 525.36682129]
[119.80400848 536.74560547]
[108.83475494 546.99859619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 190]
[37 189]
[38 188]
[39 187]
[40 186]
[41 185]
[42 184]
[43 183]
[46 182]
[47 181]
[48 180]
[49 179]
[51 177]
[52 176]
[57 175]
[58 174]
[62 173]
[63 172]
[64 171]
[69 170]
[70 169]
[71 168]
[72 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
