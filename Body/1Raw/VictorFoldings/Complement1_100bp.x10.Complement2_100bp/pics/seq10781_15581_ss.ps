%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[87.61811829 777.89660645]
[72.67745209 776.52410889]
[57.83100891 774.35839844]
[43.12087250 771.40557861]
[28.58874321 767.67401123]
[14.27581024 763.17431641]
[0.22264640 757.91925049]
[-13.53091335 751.92370605]
[-26.94588089 745.20465088]
[-39.98423386 737.78112793]
[-52.60900879 729.67419434]
[-64.78442383 720.90686035]
[-76.47595978 711.50390625]
[-87.65048218 701.49206543]
[-98.27631378 690.89965820]
[-108.32333374 679.75671387]
[-117.76306152 668.09490967]
[-126.56874084 655.94714355]
[-134.71540833 643.34802246]
[-142.17997742 630.33312988]
[-148.94128418 616.93939209]
[-154.98014832 603.20477295]
[-160.27947998 589.16821289]
[-164.82424927 574.86956787]
[-168.60156250 560.34924316]
[-171.60072327 545.64849854]
[-173.81321716 530.80895996]
[-175.23278809 515.87268066]
[-175.85539246 500.88204956]
[-175.67929077 485.87951660]
[-174.70497131 470.90759277]
[-172.93518066 456.00875854]
[-170.37495422 441.22525024]
[-167.03155518 426.59893799]
[-162.91444397 412.17132568]
[-158.03527832 397.98324585]
[-152.40792847 384.07498169]
[-146.04832458 370.48593140]
[-138.97447205 357.25460815]
[-131.20646667 344.41851807]
[-122.76629639 332.01403809]
[-113.67789459 320.07635498]
[-103.96701813 308.63931274]
[-93.66120911 297.73529053]
[-82.78966522 287.39526367]
[-71.38320923 277.64846802]
[-59.47417068 268.52255249]
[-47.09630966 260.04342651]
[-34.28471756 252.23507690]
[-21.07570076 245.11965942]
[-7.50670910 238.71734619]
[6.38379717 233.04627991]
[20.55644417 228.12252808]
[34.97105789 223.96005249]
[49.58677673 220.57066345]
[64.36216736 217.96395874]
[79.25535583 216.14733887]
[94.22412109 215.12593079]
[94.00079346 200.12759399]
[93.77746582 185.12925720]
[82.94416809 174.97174072]
[82.50402069 159.76448059]
[93.23161316 148.47038269]
[93.00828552 133.47204590]
[85.08235168 120.86138153]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[83.94817352 82.06910706]
[84.25698090 69.57556915]
[92.71562195 60.92814636]
[92.93894958 45.92980957]
[93.16227722 30.93147087]
[93.38560486 15.93313313]
[84.04616547 0.06315070]
[93.62686157 -14.63981628]
[93.62686157 -29.63981628]
[93.62686157 -44.63981628]
[93.62686157 -59.63981628]
[93.62686157 -74.63981628]
[93.62686157 -89.63981628]
[93.62686157 -104.63981628]
[78.73337555 -106.59919739]
[64.22307587 -110.48586273]
[50.34424591 -116.23330688]
[37.33437347 -123.74318695]
[25.41607475 -132.88699341]
[14.79328632 -143.50825500]
[5.64777994 -155.42526245]
[-1.86395490 -168.43405151]
[-7.61338139 -182.31205750]
[-11.50212002 -196.82180786]
[-13.46362877 -211.71501160]
[-13.46434402 -226.73683167]
[-11.50425243 -241.63021851]
[-7.61689568 -256.14035034]
[-1.86879027 -270.01889038]
[5.64170599 -283.02841187]
[14.78607845 -294.94625854]
[25.40785408 -305.56854248]
[37.32528305 -314.71350098]
[50.33443832 -322.22460938]
[64.21272278 -327.97335815]
[78.72265625 -331.86141968]
[93.61595154 -333.82223511]
[108.63776398 -333.82223511]
[123.53106689 -331.86141968]
[138.04100037 -327.97335815]
[151.91928101 -322.22460938]
[164.92843628 -314.71350098]
[176.84585571 -305.56854248]
[187.46763611 -294.94625854]
[196.61201477 -283.02841187]
[204.12251282 -270.01889038]
[209.87060547 -256.14035034]
[213.75796509 -241.63021851]
[215.71806335 -226.73683167]
[215.71734619 -211.71501160]
[213.75582886 -196.82180786]
[209.86709595 -182.31205750]
[204.11767578 -168.43405151]
[196.60594177 -155.42526245]
[187.46043396 -143.50825500]
[176.83764648 -132.88699341]
[164.91934204 -123.74318695]
[151.90946960 -116.23330688]
[138.03063965 -110.48586273]
[123.52033997 -106.59919739]
[108.62686157 -104.63981628]
[108.62686157 -89.63981628]
[108.62686157 -74.63981628]
[108.62686157 -59.63981628]
[108.62686157 -44.63981628]
[108.62686157 -29.63981628]
[108.62686157 -14.63981628]
[116.95581818 -5.86741400]
[117.07857513 6.62933302]
[108.38394165 16.15646172]
[108.16061401 31.15479851]
[107.93728638 46.15313721]
[107.71395874 61.15147400]
[117.07468414 75.99545288]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[115.55357361 120.40765381]
[108.00662231 133.24871826]
[108.22994995 148.24705505]
[119.28904724 159.21673584]
[119.30187988 174.43037415]
[108.77580261 184.90592957]
[108.99913025 199.90426636]
[109.22245789 214.90260315]
[124.21500397 215.47787476]
[139.15567017 216.85028076]
[154.00213623 219.01591492]
[168.71228027 221.96862793]
[183.24444580 225.70007324]
[197.55740356 230.19966125]
[211.61059570 235.45465088]
[225.36419678 241.45013428]
[238.77920532 248.16911316]
[251.81761169 255.59254456]
[264.44244385 263.69937134]
[276.61788940 272.46667480]
[288.30950928 281.86950684]
[299.48406982 291.88131714]
[310.10998535 302.47363281]
[320.15707397 313.61648560]
[329.59686279 325.27828979]
[338.40261841 337.42596436]
[346.54937744 350.02505493]
[354.01403809 363.03991699]
[360.77542114 376.43359375]
[366.81439209 390.16815186]
[372.11380005 404.20465088]
[376.65866089 418.50329590]
[380.43606567 433.02359009]
[383.43530273 447.72433472]
[385.64788818 462.56384277]
[387.06756592 477.50012207]
[387.69027710 492.49075317]
[387.51425171 507.49328613]
[386.54003906 522.46520996]
[384.77035522 537.36401367]
[382.21020508 552.14758301]
[378.86688232 566.77392578]
[374.74987793 581.20153809]
[369.87081909 595.38964844]
[364.24353027 609.29797363]
[357.88403320 622.88708496]
[350.81027222 636.11840820]
[343.04232788 648.95458984]
[334.60223389 661.35906982]
[325.51391602 673.29681396]
[315.80310059 684.73394775]
[305.49737549 695.63800049]
[294.62588501 705.97814941]
[283.21948242 715.72497559]
[271.31051636 724.85095215]
[258.93270874 733.33020020]
[246.12117004 741.13861084]
[232.91220093 748.25408936]
[219.34324646 754.65649414]
[205.45277405 760.32769775]
[191.28016663 765.25152588]
[176.86557007 769.41406250]
[162.24987793 772.80352783]
[147.47450256 775.41033936]
[132.58131409 777.22705078]
[117.61256409 778.24859619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 152]
[59 151]
[60 150]
[63 147]
[64 146]
[66 144]
[68 143]
[71 141]
[72 140]
[73 139]
[74 138]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
