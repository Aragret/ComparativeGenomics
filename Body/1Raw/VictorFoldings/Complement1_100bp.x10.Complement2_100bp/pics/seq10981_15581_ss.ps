%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[192.26376343 466.10180664]
[190.96627808 451.14779663]
[191.01449585 436.13766479]
[192.40802002 421.19229126]
[195.13565063 406.43200684]
[199.17541504 391.97561646]
[204.49479675 377.93957520]
[211.05094910 364.43688965]
[218.79109192 351.57623291]
[227.65289307 339.46118164]
[237.56503296 328.18927002]
[248.44767761 317.85125732]
[239.13279724 306.09402466]
[229.81791687 294.33676147]
[220.50303650 282.57949829]
[211.18814087 270.82226562]
[201.87326050 259.06500244]
[197.31648254 257.63504028]
[193.60961914 253.32734680]
[192.46234131 246.81619263]
[183.50163269 234.78680420]
[174.54093933 222.75743103]
[165.58024597 210.72805786]
[156.61955261 198.69866943]
[147.65885925 186.66929626]
[142.93899536 200.90737915]
[128.91798401 206.23759460]
[115.93158722 198.73071289]
[113.55288696 183.92051697]
[123.53537750 172.72454834]
[138.51887512 173.39526367]
[130.47770691 160.73274231]
[122.43653870 148.07022095]
[114.30132294 135.46791077]
[106.07250977 122.92650604]
[97.84370422 110.38510132]
[88.97280884 98.28935242]
[79.48390961 86.67208862]
[69.99501038 75.05482483]
[60.50611496 63.43756104]
[45.78380203 57.64411163]
[43.72503281 42.89247513]
[37.68839264 40.19608307]
[34.41157532 35.55286407]
[34.13277817 30.78512764]
[24.99397659 18.89049530]
[15.85517502 6.99586248]
[6.71637249 -4.89877033]
[-10.45917320 -11.53820896]
[-12.08009338 -29.01217651]
[-21.39497566 -40.76942825]
[-30.70985985 -52.52667999]
[-43.34643936 -44.42140579]
[-56.72725677 -37.61462021]
[-70.71932983 -32.17398071]
[-85.18358612 -28.15355682]
[-99.97628021 -25.59330559]
[-114.95038605 -24.51867294]
[-129.95707703 -24.94033813]
[-144.84721375 -26.85411453]
[-159.47279358 -30.24097633]
[-173.68847656 -35.06726837]
[-187.35296631 -41.28501511]
[-200.33044434 -48.83242798]
[-212.49195862 -57.63449478]
[-223.71661377 -67.60372925]
[-233.89286804 -78.64105225]
[-242.91957092 -90.63677216]
[-250.70701599 -103.47165680]
[-257.17779541 -117.01815796]
[-262.26760864 -131.14163208]
[-265.92587280 -145.70170593]
[-268.11621094 -160.55366516]
[-268.81689453 -175.54992676]
[-268.02090454 -190.54142761]
[-265.73617554 -205.37916565]
[-261.98544312 -219.91569519]
[-256.80593872 -234.00651550]
[-250.24917603 -247.51161194]
[-242.38029480 -260.29672241]
[-233.27751160 -272.23483276]
[-223.03131104 -283.20724487]
[-211.74349976 -293.10491943]
[-199.52629089 -301.82949829]
[-186.50108337 -309.29425049]
[-172.79734802 -315.42501831]
[-158.55126953 -320.16082764]
[-143.90444946 -323.45465088]
[-129.00245667 -325.27374268]
[-113.99338531 -325.59997559]
[-99.02641296 -324.43017578]
[-84.25029755 -321.77593994]
[-69.81188965 -317.66366577]
[-55.85468674 -312.13418579]
[-42.51740646 -305.24246216]
[-29.93260956 -297.05703735]
[-18.22536659 -287.65921021]
[-7.51203442 -277.14239502]
[2.10090947 -265.61114502]
[10.51792526 -253.18003845]
[17.65535927 -239.97262573]
[23.44227409 -226.12017822]
[27.82115364 -211.76037598]
[30.74848175 -197.03593445]
[32.19515991 -182.09318542]
[32.14681244 -167.08064270]
[30.60391808 -152.14752197]
[27.58181381 -137.44223022]
[23.11053467 -123.11093140]
[17.23451805 -109.29604340]
[10.01216412 -96.13488007]
[1.51525557 -83.75824738]
[-8.17176056 -72.28914642]
[-18.95260811 -61.84156036]
[-9.63772488 -50.08431244]
[-0.32284200 -38.32706070]
[11.65312672 -36.62332153]
[19.50973129 -26.90439415]
[18.61100578 -14.03757286]
[27.74980736 -2.14294004]
[36.88861084 9.75169277]
[46.02741241 21.64632607]
[55.34229660 33.40357590]
[69.38589478 38.36608505]
[72.12337494 53.94866562]
[81.61227417 65.56592560]
[91.10117340 77.18318939]
[100.59007263 88.80045319]
[102.00769806 73.86759186]
[112.60367584 63.25037766]
[127.53366089 61.80285645]
[139.97187805 70.18681335]
[144.23173523 84.56922150]
[138.36567688 98.37463379]
[125.05560303 105.29140472]
[110.38510132 102.15629578]
[118.61391449 114.69770050]
[126.84272003 127.23909760]
[134.16697693 132.69740295]
[135.09906006 140.02903748]
[143.14022827 152.69157410]
[151.18141174 165.35409546]
[159.68823242 177.70860291]
[168.64892578 189.73797607]
[177.60961914 201.76736450]
[186.57032776 213.79673767]
[195.53102112 225.82611084]
[204.49171448 237.85548401]
[213.63050842 249.75012207]
[222.94540405 261.50738525]
[232.26028442 273.26461792]
[241.57516479 285.02188110]
[250.89004517 296.77914429]
[260.20492554 308.53637695]
[272.75811768 300.30694580]
[285.99847412 293.23590088]
[299.81933594 287.38018799]
[314.10949707 282.78698730]
[328.75387573 279.49322510]
[343.63452148 277.52542114]
[358.63168335 276.89947510]
[373.62457275 277.62039185]
[388.49246216 279.68237305]
[403.11566162 283.06881714]
[417.37646484 287.75244141]
[431.15997314 293.69555664]
[444.35528564 300.85031128]
[456.85610962 309.15908813]
[468.56179810 318.55499268]
[479.37811279 328.96237183]
[489.21795654 340.29742432]
[498.00213623 352.46887207]
[505.65988159 365.37875366]
[512.12957764 378.92312622]
[517.35906982 392.99288940]
[521.30633545 407.47479248]
[523.93951416 422.25222778]
[525.23748779 437.20620728]
[525.18969727 452.21633911]
[523.79663086 467.16174316]
[521.06945801 481.92211914]
[517.03015137 496.37860107]
[511.71118164 510.41482544]
[505.15545654 523.91772461]
[497.41571045 536.77862549]
[488.55426025 548.89392090]
[478.64245605 560.16613770]
[467.76013184 570.50445557]
[455.99487305 579.82568359]
[443.44143677 588.05474854]
[430.20089722 595.12536621]
[416.37982178 600.98065186]
[402.08953857 605.57348633]
[387.44506836 608.86676025]
[372.56433105 610.83410645]
[357.56716919 611.45959473]
[342.57431030 610.73822021]
[327.70648193 608.67578125]
[313.08337402 605.28887939]
[298.82272339 600.60485840]
[285.03939819 594.66131592]
[271.84429932 587.50616455]
[259.34375000 579.19702148]
[247.63833618 569.80072021]
[236.82232666 559.39306641]
[226.98281860 548.05767822]
[218.19902039 535.88592529]
[210.54165649 522.97583008]
[204.07240295 509.43127441]
[198.84330750 495.36135864]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 154]
[13 153]
[14 152]
[15 151]
[16 150]
[17 149]
[20 148]
[21 147]
[22 146]
[23 145]
[24 144]
[25 143]
[31 142]
[32 141]
[33 140]
[34 138]
[35 137]
[36 136]
[37 128]
[38 127]
[39 126]
[40 125]
[42 123]
[45 122]
[46 121]
[47 120]
[48 119]
[50 116]
[51 115]
[52 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
