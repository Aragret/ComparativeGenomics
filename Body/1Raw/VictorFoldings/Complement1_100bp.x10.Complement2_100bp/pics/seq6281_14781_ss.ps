%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[52.92301178 568.80065918]
[37.89902496 568.12915039]
[23.21993637 564.85876465]
[9.33182812 559.08886719]
[-3.34325671 550.99487305]
[-14.42013645 540.82263184]
[-23.56219864 528.88134766]
[-30.49162292 515.53393555]
[-34.99783707 501.18594360]
[-36.94389725 486.27337646]
[-36.27066803 471.24948120]
[-32.99860382 456.57077026]
[-27.22714615 442.68328857]
[-19.13167763 430.00912476]
[-8.95821190 418.93341064]
[2.98409057 409.79269409]
[16.33231735 402.86477661]
[30.68083000 398.36019897]
[45.59359360 396.41583252]
[46.26338196 381.43078613]
[46.93316650 366.44577026]
[47.60295105 351.46072388]
[48.27273560 336.47567749]
[38.89140320 348.17996216]
[24.95096397 353.71749878]
[10.09542084 351.64077759]
[-1.79202449 342.49261475]
[-7.60402298 328.66436768]
[-5.82133198 313.77066040]
[3.09005761 301.70471191]
[16.80072975 295.62051392]
[31.72674751 297.10845947]
[43.96648788 305.77963257]
[50.32035065 319.36648560]
[53.20562363 304.64657593]
[56.09089279 289.92669678]
[58.97616577 275.20678711]
[50.47937012 263.02731323]
[53.19575500 248.05815125]
[66.02833557 239.22850037]
[68.91361237 224.50860596]
[71.79888153 209.78872681]
[74.68415833 195.06883240]
[77.56942749 180.34893799]
[67.59914398 166.80522156]
[70.56761932 149.90838623]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[88.10115814 83.62374115]
[75.48280334 91.73404694]
[60.93056488 95.37167358]
[45.98017502 94.15272522]
[32.20938492 88.20585632]
[21.07145691 78.15863800]
[13.74180603 65.07138062]
[10.99394703 50.32521820]
[13.11786747 35.47634888]
[19.88942528 22.09180450]
[30.59400177 11.58409214]
[44.10191727 5.06211233]
[58.98764801 3.21414709]
[73.68027496 6.23521614]
[86.62923431 13.80649853]
[96.46800995 25.12897873]
[102.15827942 39.00777054]
[103.09951782 53.97840118]
[109.37687683 40.35508347]
[108.12494659 24.58348846]
[120.47837067 16.26229858]
[126.75572968 2.63898325]
[133.03309631 -10.98433304]
[139.31045532 -24.60764885]
[134.07489014 -39.27825546]
[140.63510132 -53.00481415]
[154.65354919 -57.90570450]
[160.93090820 -71.52902222]
[167.20826721 -85.15233612]
[172.03427124 -99.35478973]
[175.35652161 -113.98225403]
[178.67878723 -128.60971069]
[182.00105286 -143.23716736]
[167.81298828 -148.15267944]
[154.25180054 -154.59919739]
[141.48211670 -162.49844360]
[129.65892029 -171.75454712]
[118.92576599 -182.25514221]
[109.41292572 -193.87275696]
[101.23587799 -206.46636963]
[94.49388123 -219.88310242]
[89.26879120 -233.96008301]
[85.62402344 -248.52644348]
[83.60382080 -263.40536499]
[83.23271942 -278.41619873]
[84.51521301 -293.37677002]
[87.43573761 -308.10543823]
[91.95883942 -322.42343140]
[98.02961731 -336.15692139]
[105.57437134 -349.13922119]
[114.50151062 -361.21270752]
[124.70268250 -372.23083496]
[136.05403137 -382.05987549]
[148.41778564 -390.58047485]
[161.64385986 -397.68923950]
[175.57168579 -403.29983521]
[190.03219604 -407.34417725]
[204.84986877 -409.77319336]
[219.84480286 -410.55734253]
[234.83499146 -409.68713379]
[249.63847351 -407.17315674]
[264.07553101 -403.04589844]
[277.97094727 -397.35543823]
[291.15600586 -390.17092896]
[303.47064209 -381.57949829]
[314.76541138 -371.68548584]
[324.90319824 -360.60897827]
[333.76089478 -348.48446655]
[341.23101807 -335.45907593]
[347.22290039 -321.69097900]
[351.66375732 -307.34725952]
[354.49969482 -292.60208130]
[355.69631958 -277.63439941]
[355.23907471 -262.62594604]
[353.13354492 -247.75886536]
[349.40524292 -233.21366882]
[344.09945679 -219.16688538]
[337.28057861 -205.78906250]
[329.03137207 -193.24258423]
[319.45202637 -181.67976379]
[308.65878296 -171.24093628]
[296.78268433 -162.05282593]
[283.96786499 -154.22698975]
[270.36990356 -147.85841370]
[256.15386963 -143.02439880]
[241.49234009 -139.78364563]
[226.56327820 -138.17546082]
[211.54791260 -138.21940613]
[196.62850952 -139.91491699]
[193.30624390 -125.28745270]
[189.98399353 -110.65998840]
[186.66172791 -96.03253174]
[196.95356750 -106.94482422]
[210.60629272 -113.15797424]
[225.59458923 -113.75030518]
[239.69503784 -108.63394165]
[250.81593323 -98.56787872]
[257.30755615 -85.04534149]
[258.20687866 -70.07232666]
[253.38053894 -55.86998749]
[243.54446411 -44.54516220]
[230.15779114 -37.77781677]
[215.20635986 -36.57184601]
[200.90809631 -41.10615158]
[189.38409424 -50.70809555]
[182.34385681 -63.95328522]
[180.83158875 -78.87497711]
[174.55422974 -65.25165558]
[168.27687073 -51.62834167]
[173.65960693 -37.78776169]
[167.48753357 -23.88235855]
[152.93376160 -18.33028793]
[146.65640259 -4.70697212]
[140.37904358 8.91634369]
[134.10168457 22.53965950]
[135.80261230 37.33682632]
[123.00019836 46.63244247]
[116.72283173 60.25576019]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[108.78271484 152.97198486]
[110.21752167 166.16865540]
[103.88356781 177.61256409]
[92.28932190 183.23420715]
[89.40404510 197.95410156]
[86.51877594 212.67399597]
[83.63349915 227.39389038]
[80.74822998 242.11376953]
[89.29786682 255.13458252]
[86.16210175 270.02154541]
[73.69606018 278.09207153]
[70.81078339 292.81195068]
[67.92551422 307.53186035]
[65.04023743 322.25173950]
[63.25777435 337.14547729]
[62.58798981 352.13049316]
[61.91820526 367.11553955]
[61.24842072 382.10058594]
[60.57863235 397.08563232]
[75.25846100 400.35269165]
[89.14788055 406.11941528]
[101.82479858 414.21057129]
[112.90399170 424.38027954]
[122.04875946 436.31945801]
[128.98121643 449.66534424]
[133.49067688 464.01232910]
[135.44012451 478.92440796]
[134.77029419 493.94848633]
[131.50157166 508.62792969]
[125.73325348 522.51672363]
[117.64066315 535.19268799]
[107.46971130 546.27075195]
[95.52947998 555.41418457]
[82.18282318 562.34509277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 195]
[20 194]
[21 193]
[22 192]
[23 191]
[34 190]
[35 189]
[36 188]
[37 187]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[47 176]
[48 175]
[49 174]
[51 172]
[52 171]
[70 170]
[71 169]
[73 167]
[74 166]
[75 165]
[76 164]
[79 161]
[80 160]
[81 159]
[82 144]
[83 143]
[84 142]
[85 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
