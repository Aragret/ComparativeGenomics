%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[126.99885559 164.86051941]
[133.40483093 151.28623962]
[140.98545837 138.33123779]
[128.75897217 129.64141846]
[116.53248596 120.95159912]
[104.30599976 112.26177216]
[91.82620239 103.93982697]
[79.10417175 95.99314117]
[66.38213348 88.04645538]
[53.54319382 80.29006958]
[40.59019470 72.72568512]
[27.63719559 65.16130829]
[14.68419647 57.59693146]
[1.73119819 50.03255081]
[-11.22179985 42.46817398]
[-24.17479897 34.90379333]
[-37.12779617 27.33941460]
[-50.08079529 19.77503586]
[-58.40158463 32.26092529]
[-67.44743347 44.23195648]
[-77.18656921 55.64608002]
[-87.58477783 66.46320343]
[-98.60554504 76.64533234]
[-110.21015167 86.15670013]
[-122.35783386 94.96389008]
[-135.00593567 103.03598022]
[-148.11001587 110.34461212]
[-161.62405396 116.86410522]
[-175.50056458 122.57157135]
[-189.69082642 127.44695282]
[-204.14498901 131.47312927]
[-218.81228638 134.63597107]
[-233.64118958 136.92434692]
[-248.57960510 138.33021545]
[-263.57507324 138.84866333]
[-278.57492065 138.47785950]
[-293.52645874 137.21910095]
[-308.37716675 135.07681274]
[-323.07489014 132.05851746]
[-337.56799316 128.17481995]
[-351.80557251 123.43936157]
[-365.73757935 117.86877441]
[-379.31515503 111.48262787]
[-392.49053955 104.30334473]
[-405.21749878 96.35615540]
[-417.45129395 87.66896820]
[-429.14895630 78.27230072]
[-440.26940918 68.19915771]
[-450.77362061 57.48491669]
[-460.62463379 46.16721725]
[-469.78787231 34.28581238]
[-478.23117065 21.88243675]
[-485.92486572 9.00065804]
[-492.84191895 -4.31427670]
[-498.95800781 -18.01559830]
[-504.25170898 -32.05517960]
[-508.70437622 -46.38370514]
[-512.30041504 -60.95084763]
[-515.02709961 -75.70543671]
[-516.87500000 -90.59564209]
[-517.83752441 -105.56916809]
[-517.91131592 -120.57341766]
[-517.09613037 -135.55569458]
[-515.39477539 -150.46334839]
[-512.81329346 -165.24404907]
[-509.36068726 -179.84585571]
[-505.04916382 -194.21746826]
[-499.89382935 -208.30844116]
[-493.91275024 -222.06925964]
[-487.12701416 -235.45156860]
[-479.56039429 -248.40840149]
[-471.23950195 -260.89422607]
[-462.19354248 -272.86517334]
[-452.45431519 -284.27920532]
[-442.05599976 -295.09625244]
[-431.03515625 -305.27825928]
[-419.43045044 -314.78952026]
[-407.28271484 -323.59661865]
[-394.63452148 -331.66860962]
[-381.53039551 -338.97711182]
[-368.01629639 -345.49649048]
[-354.13973999 -351.20382690]
[-339.94943237 -356.07910156]
[-325.49520874 -360.10516357]
[-310.82791138 -363.26785278]
[-295.99899292 -365.55609131]
[-281.06054688 -366.96185303]
[-266.06506348 -367.48016357]
[-251.06521606 -367.10922241]
[-236.11369324 -365.85034180]
[-221.26300049 -363.70791626]
[-206.56532288 -360.68948364]
[-192.07225037 -356.80566406]
[-177.83473206 -352.07009888]
[-163.90274048 -346.49938965]
[-150.32524109 -340.11309814]
[-137.14991760 -332.93371582]
[-124.42303467 -324.98641968]
[-112.18931580 -316.29913330]
[-100.49172211 -306.90234375]
[-89.37135315 -296.82910156]
[-78.86725616 -286.11477661]
[-69.01632690 -274.79699707]
[-59.85317993 -262.91549683]
[-51.40999603 -250.51205444]
[-43.71642685 -237.63020325]
[-36.79949951 -224.31521606]
[-30.68351555 -210.61383057]
[-25.38994980 -196.57420349]
[-20.93740082 -182.24565125]
[-17.34150696 -167.67846680]
[-14.61490059 -152.92385864]
[-12.76715660 -138.03363037]
[-11.80476665 -123.06009674]
[-11.73111153 -108.05584717]
[-12.54644871 -93.07358551]
[-14.24791622 -78.16593933]
[-16.82953453 -63.38526535]
[-20.28223991 -48.78349304]
[-24.59390068 -34.41190338]
[-29.74937248 -20.32098389]
[-35.73054886 -6.56022453]
[-42.51641846 6.82203770]
[-29.56341934 14.38641644]
[-16.61042023 21.95079613]
[-3.65742135 29.51517487]
[9.29557705 37.07955170]
[22.24857521 44.64393234]
[35.20157242 52.20831299]
[48.15457153 59.77268982]
[61.10757065 67.33706665]
[65.87236786 67.01185608]
[70.89205170 69.67639923]
[74.32881927 75.32442474]
[87.05084991 83.27111053]
[99.77288818 91.21778870]
[102.78999329 90.78584290]
[106.03095245 91.44215393]
[109.09298706 93.27174377]
[111.54756927 96.20964813]
[112.99582672 100.03528595]
[125.22231293 108.72511292]
[137.44879150 117.41493225]
[149.67527771 126.10475922]
[159.41778564 114.68630219]
[170.13134766 104.17358398]
[181.73210144 94.64888000]
[194.12927246 86.18672943]
[207.22581482 78.85337067]
[220.91923523 72.70619202]
[235.10237122 67.79330444]
[249.66419983 64.15316010]
[264.49078369 61.81425095]
[279.46603394 60.79487991]
[294.47277832 61.10302734]
[309.39358521 62.73627853]
[324.11163330 65.68184662]
[338.51177979 69.91669464]
[352.48126221 75.40766144]
[365.91079712 82.11177826]
[378.69528198 89.97657013]
[390.73461914 98.94049072]
[401.93460083 108.93338776]
[412.20758057 119.87703705]
[421.47314453 131.68580627]
[429.65878296 144.26725769]
[436.70043945 157.52291870]
[442.54296875 171.34907532]
[447.14068604 185.63748169]
[450.45758057 200.27632141]
[452.46771240 215.15104675]
[453.15533447 230.14520264]
[452.51504517 245.14144897]
[450.55187988 260.02243042]
[447.28121948 274.67169189]
[442.72866821 288.97454834]
[436.92977905 302.81906128]
[429.93002319 316.09689331]
[421.78414917 328.70413208]
[412.55590820 340.54208374]
[402.31753540 351.51812744]
[391.14913940 361.54632568]
[379.13818359 370.54821777]
[366.37860107 378.45333862]
[352.97030640 385.19979858]
[339.01818848 390.73486328]
[324.63150024 395.01513672]
[309.92282104 398.00717163]
[295.00726318 399.68750000]
[280.00155640 400.04302979]
[265.02316284 399.07095337]
[250.18927002 396.77883911]
[235.61601257 393.18469238]
[221.41744995 388.31661987]
[207.70468140 382.21270752]
[194.58505249 374.92071533]
[182.16123962 366.49777222]
[170.53047180 357.00973511]
[159.78376770 346.53088379]
[150.00526428 335.14324951]
[141.27146912 322.93594360]
[133.65074158 310.00448608]
[127.20272827 296.45013428]
[121.97789764 282.37890625]
[118.01714325 267.90100098]
[115.35145569 253.12968445]
[114.00170135 238.18058777]
[113.97844696 223.17068481]
[115.28187561 208.21746826]
[117.90177917 193.43795776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 144]
[4 143]
[5 142]
[6 141]
[7 136]
[8 135]
[9 134]
[10 131]
[11 130]
[12 129]
[13 128]
[14 127]
[15 126]
[16 125]
[17 124]
[18 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
