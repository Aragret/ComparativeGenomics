%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[51.61935806 691.78594971]
[39.13367462 700.11041260]
[26.09189034 707.53338623]
[12.55897903 714.01788330]
[-1.39763522 719.53167725]
[-15.70842266 724.04724121]
[-30.30208588 727.54211426]
[-45.10591888 729.99877930]
[-60.04617310 731.40515137]
[-75.04840851 731.75408936]
[-90.03789520 731.04394531]
[-104.93994141 729.27819824]
[-119.68032074 726.46569824]
[-134.18557739 722.62042236]
[-148.38346863 717.76147461]
[-162.20324707 711.91320801]
[-175.57606506 705.10461426]
[-188.43530273 697.36968994]
[-200.71688843 688.74694824]
[-212.35963440 679.27935791]
[-223.30554199 669.01409912]
[-233.50007629 658.00225830]
[-242.89245605 646.29876709]
[-251.43588257 633.96185303]
[-259.08779907 621.05303955]
[-265.81005859 607.63665771]
[-271.56918335 593.77947998]
[-276.33651733 579.55053711]
[-280.08825684 565.02081299]
[-282.80572510 550.26263428]
[-284.47540283 535.34954834]
[-285.08898926 520.35577393]
[-284.64337158 505.35607910]
[-283.14077759 490.42520142]
[-280.58874512 475.63751221]
[-276.99993896 461.06668091]
[-272.39227295 446.78527832]
[-266.78866577 432.86447144]
[-260.21707153 419.37362671]
[-252.71018982 406.37994385]
[-244.30546570 393.94815063]
[-235.04473877 382.14019775]
[-224.97415161 371.01489258]
[-214.14387512 360.62768555]
[-202.60787964 351.03030396]
[-190.42362976 342.27056885]
[-177.65182495 334.39215088]
[-164.35609436 327.43423462]
[-150.60267639 321.43154907]
[-136.46008301 316.41394043]
[-121.99879456 312.40646362]
[-107.29084015 309.42904663]
[-92.40949249 307.49655151]
[-77.42890167 306.61859131]
[-62.42369843 306.79949951]
[-47.46863556 308.03845215]
[-32.63821793 310.32922363]
[-18.00633240 313.66043091]
[-3.64587545 318.01544189]
[10.37160969 323.37258911]
[23.97628784 329.70516968]
[31.24951744 316.58648682]
[38.52274704 303.46780396]
[45.79597473 290.34909058]
[53.06920624 277.23040771]
[60.34243393 264.11169434]
[65.58915710 250.05923462]
[68.69326019 235.38394165]
[62.36260223 219.01660156]
[74.78401947 205.42285156]
[77.66929626 190.70297241]
[80.55456543 175.98307800]
[83.43984222 161.26318359]
[86.32511139 146.54328918]
[89.21038055 131.82339478]
[91.21439362 116.95787048]
[81.83895111 105.91037750]
[82.91663361 91.46098328]
[93.82714844 81.92647552]
[94.94279480 66.96802521]
[96.05844879 52.00957108]
[97.17409515 37.05111694]
[98.28974152 22.09266472]
[91.60028076 7.75524235]
[100.26276398 -4.36130428]
[97.78029633 -13.15193367]
[101.50801086 -19.53362274]
[102.84624481 -34.47380829]
[104.18447876 -49.41399384]
[94.32661438 -61.47468567]
[95.89660645 -76.60709381]
[107.45538330 -85.93073273]
[108.79361725 -100.87091827]
[110.13185120 -115.81110382]
[111.47008514 -130.75128174]
[112.80831909 -145.69146729]
[113.92396545 -160.64993286]
[114.81678772 -175.62333679]
[115.70960236 -190.59674072]
[116.60241699 -205.57014465]
[102.91446686 -212.18138123]
[92.80220032 -223.53085327]
[87.80765533 -237.88784790]
[88.69247437 -253.06300354]
[95.32171631 -266.74224854]
[106.68447876 -276.83956909]
[121.04801941 -281.81521606]
[136.22200012 -280.91046143]
[149.89250183 -274.26321411]
[159.97488403 -262.88717651]
[164.93164062 -248.51710510]
[164.00689697 -233.34432983]
[157.34169006 -219.68257141]
[145.95240784 -209.61517334]
[131.57582092 -204.67732239]
[130.68299866 -189.70391846]
[129.79019165 -174.73051453]
[128.89736938 -159.75711060]
[131.34115601 -155.65382385]
[131.23323059 -149.97180176]
[127.74850464 -144.35324097]
[126.41027069 -129.41305542]
[125.07203674 -114.47286987]
[123.73380280 -99.53268433]
[122.39556885 -84.59249878]
[132.11335754 -73.36306000]
[130.96902466 -58.19252396]
[119.12466431 -48.07575989]
[117.78643036 -33.13557434]
[116.44819641 -18.19538879]
[115.22121429 -3.24565554]
[121.99047852 10.02183819]
[113.24819946 23.20831299]
[112.13254547 38.16676712]
[111.01689911 53.12522125]
[109.90125275 68.08367157]
[108.78560638 83.04212952]
[118.16104889 94.08962250]
[117.08336639 108.53901672]
[106.17285156 118.07352448]
[116.86031342 107.54840088]
[131.67555237 105.20135498]
[145.09284973 111.90777588]
[152.10789490 125.16632843]
[150.10423279 140.03190613]
[139.82919312 150.96000671]
[125.11510468 153.87474060]
[111.44995880 147.68894958]
[103.93027496 134.70867920]
[101.04500580 149.42855835]
[98.15972900 164.14845276]
[95.27445984 178.86834717]
[92.38918304 193.58824158]
[89.50391388 208.30813599]
[96.03878784 219.42829895]
[93.33259583 231.62913513]
[83.36856842 238.48805237]
[80.26445770 253.16334534]
[89.71162415 241.51213074]
[102.02584076 232.94708252]
[116.23596191 228.14367676]
[131.22129822 227.48074341]
[145.80006409 231.01057434]
[158.82250977 238.45475769]
[169.26162720 249.22624207]
[176.29415894 262.47552490]
[179.36546326 277.15771484]
[178.23335266 292.11492920]
[172.98709106 306.16757202]
[164.04042053 318.20739746]
[152.09892273 327.28488159]
[138.10435486 332.68414307]
[123.16038513 333.97937012]
[108.44554901 331.06842041]
[95.12032318 324.18087769]
[84.23559570 313.85989380]
[76.64978027 300.91943359]
[72.96112061 286.38003540]
[73.46112823 271.38494873]
[66.18789673 284.50363159]
[58.91466904 297.62231445]
[51.64144135 310.74102783]
[44.36820984 323.85971069]
[37.09498215 336.97839355]
[49.67334747 345.16213989]
[61.64310455 354.21276855]
[72.94461823 364.08520508]
[83.52159119 374.73022461]
[93.32131958 386.09481812]
[102.29499054 398.12237549]
[110.39788818 410.75299072]
[117.58965302 423.92367554]
[123.83444977 437.56887817]
[129.10116577 451.62060547]
[133.36357117 466.00881958]
[136.60041809 480.66186523]
[138.79557800 495.50674438]
[139.93814087 510.46948242]
[140.02238464 525.47552490]
[139.04789734 540.45013428]
[137.01954651 555.31872559]
[133.94743347 570.00720215]
[129.84684753 584.44238281]
[124.73824310 598.55230713]
[118.64704895 612.26678467]
[111.60362244 625.51739502]
[103.64304352 638.23822021]
[94.80499268 650.36572266]
[85.13347626 661.83966064]
[74.67669678 672.60278320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 184]
[62 183]
[63 182]
[64 181]
[65 180]
[66 179]
[67 158]
[68 157]
[70 154]
[71 153]
[72 152]
[73 151]
[74 150]
[75 149]
[76 140]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[85 131]
[87 130]
[88 129]
[89 128]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
