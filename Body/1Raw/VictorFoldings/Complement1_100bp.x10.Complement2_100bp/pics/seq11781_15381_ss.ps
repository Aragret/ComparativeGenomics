%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[45.08868408 689.99279785]
[30.69266129 694.22412109]
[16.05936050 697.54315186]
[1.24653077 699.93682861]
[-13.68736744 701.39562988]
[-28.68339729 701.91387939]
[-43.68237686 701.48944092]
[-58.62511063 700.12408447]
[-73.45262146 697.82312012]
[-88.10639954 694.59570312]
[-102.52861023 690.45452881]
[-116.66233063 685.41595459]
[-130.45178223 679.49981689]
[-143.84255981 672.72955322]
[-156.78178406 665.13177490]
[-169.21841431 656.73657227]
[-181.10336304 647.57702637]
[-192.38972473 637.68927002]
[-203.03295898 627.11236572]
[-212.99105835 615.88806152]
[-222.22471619 604.06054688]
[-230.69750977 591.67663574]
[-238.37597656 578.78515625]
[-245.22984314 565.43695068]
[-251.23202515 551.68475342]
[-256.35885620 537.58282471]
[-260.59008789 523.18676758]
[-263.90905762 508.55346680]
[-266.30264282 493.74060059]
[-267.76135254 478.80670166]
[-268.27951050 463.81066895]
[-267.85504150 448.81170654]
[-266.48959351 433.86895752]
[-264.18856812 419.04147339]
[-260.96105957 404.38769531]
[-256.81982422 389.96551514]
[-251.78114319 375.83181763]
[-245.86495972 362.04238892]
[-239.09460449 348.65167236]
[-231.49679565 335.71246338]
[-223.10151672 323.27587891]
[-213.94189453 311.39099121]
[-204.05409241 300.10467529]
[-193.47712708 289.46148682]
[-182.25273132 279.50344849]
[-170.42521667 270.26986694]
[-158.04125977 261.79714966]
[-145.14971924 254.11872864]
[-131.80149841 247.26495361]
[-118.04926300 241.26283264]
[-103.94728088 236.13607788]
[-89.55121613 231.90490723]
[-74.91788483 228.58602905]
[-60.10503006 226.19253540]
[-45.17111588 224.73387146]
[-30.17507935 224.21578979]
[-15.17610550 224.64036560]
[-0.23338705 226.00588989]
[14.59410286 228.30697632]
[29.24784660 231.53456116]
[43.67001343 235.67588806]
[48.70692825 221.54685974]
[53.74384308 207.41783142]
[58.78076172 193.28880310]
[63.81767654 179.15975952]
[68.85459137 165.03073120]
[73.89151001 150.90170288]
[78.92842865 136.77267456]
[70.18244171 130.11900330]
[63.44113159 121.44038391]
[59.15771866 111.32030487]
[57.62018967 100.43914032]
[58.93191147 89.52845764]
[63.00469208 79.32179260]
[69.56472015 70.50534058]
[78.17094421 63.67186356]
[88.24477386 59.28076935]
[99.10891724 57.62728500]
[110.03296661 58.82257080]
[116.10680389 45.10730362]
[122.18064117 31.39203835]
[128.25447083 17.67677116]
[134.32830811 3.96150446]
[140.40214539 -9.75376225]
[127.25979614 -17.00414658]
[114.79937744 -25.37238312]
[103.11572266 -34.79478073]
[92.29775238 -45.19963074]
[82.42779541 -56.50774002]
[73.58097839 -68.63304901]
[65.82462311 -81.48327637]
[59.21776962 -94.96062469]
[53.81069183 -108.96250916]
[49.64454651 -123.38237762]
[46.75104141 -138.11048889]
[45.15219498 -153.03472900]
[44.86017990 -168.04153442]
[45.87721634 -183.01667786]
[48.19556427 -197.84619141]
[51.79758072 -212.41722107]
[56.65584946 -226.61886597]
[62.73339462 -240.34303284]
[69.98396301 -253.48527527]
[78.35237122 -265.94558716]
[87.77493286 -277.62908936]
[98.17993927 -288.44692993]
[109.48818970 -298.31671143]
[121.61362457 -307.16336060]
[134.46395874 -314.91952515]
[147.94139099 -321.52621460]
[161.94335938 -326.93307495]
[176.36328125 -331.09902954]
[191.09143066 -333.99234009]
[206.01570129 -335.59097290]
[221.02250671 -335.88278198]
[235.99763489 -334.86550903]
[250.82711792 -332.54696655]
[265.39810181 -328.94476318]
[279.59967041 -324.08627319]
[293.32376099 -318.00854492]
[306.46588135 -310.75778198]
[318.92608643 -302.38919067]
[330.60946655 -292.96649170]
[341.42715454 -282.56134033]
[351.29678345 -271.25292969]
[360.14324951 -259.12738037]
[367.89926147 -246.27693176]
[374.50573730 -232.79940796]
[379.91241455 -218.79736328]
[384.07815552 -204.37738037]
[386.97125244 -189.64920044]
[388.56967163 -174.72489929]
[388.86126709 -159.71809387]
[387.84381104 -144.74298096]
[385.52505493 -129.91352844]
[381.92263794 -115.34259796]
[377.06396484 -101.14109802]
[370.98602295 -87.41709900]
[363.73507690 -74.27505493]
[355.36633301 -61.81499100]
[345.94345093 -50.13173294]
[335.53814697 -39.31420135]
[324.22961426 -29.44472122]
[312.10394287 -20.59841347]
[299.25338745 -12.84259987]
[285.77575684 -6.23631048]
[271.77365112 -0.82982272]
[257.35360718 3.33571553]
[242.62536621 6.22860193]
[227.70106506 7.82681894]
[212.69424438 8.11820316]
[197.71914673 7.10053635]
[182.88972473 4.78156471]
[168.31884766 1.17893708]
[154.11740112 -3.67992830]
[148.04357910 10.03533840]
[141.96974182 23.75060463]
[135.89590454 37.46587372]
[129.82206726 51.18113708]
[123.74823761 64.89640808]
[136.69306946 78.79010773]
[142.27160645 96.94180298]
[139.36390686 115.70743561]
[128.55372620 131.31973267]
[112.01124573 140.64443970]
[93.05745697 141.80960083]
[88.02053833 155.93862915]
[82.98361969 170.06765747]
[77.94670868 184.19668579]
[72.90979004 198.32571411]
[67.87287140 212.45474243]
[62.83595657 226.58377075]
[57.79904175 240.71279907]
[71.58856201 246.62876892]
[84.97940063 253.39892578]
[97.91870880 260.99652100]
[110.35543060 269.39160156]
[122.24047089 278.55105591]
[133.52693176 288.43869019]
[144.17027283 299.01547241]
[154.12849426 310.23971558]
[163.36227417 322.06707764]
[171.83518982 334.45089722]
[179.51380920 347.34231567]
[186.36779785 360.69042969]
[192.37013245 374.44259644]
[197.49711609 388.54449463]
[201.72850037 402.94049072]
[205.04760742 417.57376099]
[207.44134521 432.38656616]
[208.90023804 447.32046509]
[209.41853333 462.31649780]
[208.99421692 477.31549072]
[207.62892151 492.25820923]
[205.32806396 507.08575439]
[202.10070801 521.73956299]
[197.95960999 536.16174316]
[192.92109680 550.29553223]
[187.00505066 564.08502197]
[180.23483276 577.47583008]
[172.63714600 590.41510010]
[164.24200439 602.85174561]
[155.08250427 614.73675537]
[145.19482422 626.02319336]
[134.61796570 636.66644287]
[123.39367676 646.62463379]
[111.56626129 655.85833740]
[99.18238831 664.33117676]
[86.29093933 672.00970459]
[72.94278717 678.86364746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 173]
[62 172]
[63 171]
[64 170]
[65 169]
[66 168]
[67 167]
[68 166]
[79 160]
[80 159]
[81 158]
[82 157]
[83 156]
[84 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
