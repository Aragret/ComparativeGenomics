%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[319.69619751 404.74130249]
[328.51522827 392.58718872]
[338.66223145 381.51760864]
[328.83166504 370.18801880]
[319.00106812 358.85839844]
[304.81594849 354.31622314]
[301.61572266 338.82208252]
[291.78515625 327.49246216]
[281.95455933 316.16287231]
[265.65371704 318.10183716]
[251.26504517 309.85998535]
[244.55763245 294.51361084]
[248.35636902 278.03131104]
[238.35820007 266.84933472]
[228.36003113 255.66737366]
[216.30387878 254.67947388]
[207.88272095 245.44540405]
[208.01400757 232.54791260]
[198.18342590 221.21832275]
[181.31115723 216.39199829]
[177.96455383 198.28448486]
[167.96638489 187.10250854]
[157.96821594 175.92053223]
[147.97004700 164.73855591]
[137.97186279 153.55659485]
[127.97369385 142.37461853]
[117.97552490 131.19264221]
[107.97734833 120.01066589]
[97.97917938 108.82868958]
[94.19808197 108.06996155]
[90.76977539 105.64826965]
[88.42946625 101.75854492]
[87.79792786 96.91695404]
[78.30902863 85.29969025]
[68.82012939 73.68242645]
[59.33123016 62.06516266]
[49.84233093 50.44789886]
[53.22190857 65.06222534]
[53.42527771 80.06084442]
[50.44318008 94.76142883]
[44.41128922 108.49519348]
[35.60400772 120.63734436]
[24.42201614 130.63549805]
[11.37401581 138.03480530]
[-2.94639492 142.49862671]
[-17.88773346 143.82392883]
[-32.77026749 141.95039368]
[-46.91694260 136.96324158]
[-59.68418121 129.08938599]
[-70.49114990 118.68701172]
[-78.84622192 106.22937012]
[-84.36927795 92.28319550]
[-86.80906677 77.48294067]
[-86.05458832 62.50193024]
[-82.14016724 48.02169037]
[-75.24388885 34.70097733]
[-65.67948914 23.14579964]
[-53.88207245 13.88183498]
[-40.38835526 7.33053398]
[-25.81220245 3.78993773]
[-10.81673813 3.42111921]
[3.91584730 6.24085712]
[17.71531868 12.12087250]
[29.95389366 20.79366302]
[40.07736206 31.86816597]
[35.89035034 17.46438408]
[33.12684631 32.20762253]
[26.53773499 45.68291855]
[16.59869003 56.91748047]
[4.02722025 65.10027313]
[-10.26912975 69.64057922]
[-25.25829506 70.21063232]
[-39.85819244 66.76926422]
[-53.01484299 59.56492615]
[-63.77846146 49.11769867]
[-71.37200928 36.18177795]
[-75.24729919 21.69101906]
[-75.12457275 6.69152069]
[-71.01269531 -7.73388863]
[-63.20849609 -20.54382706]
[-52.27537537 -30.81353378]
[-39.00260162 -37.80162811]
[-24.34834862 -41.00363922]
[-9.37051868 -40.18840408]
[4.84962559 -35.41477585]
[17.28551865 -27.02737427]
[27.03940582 -15.63168621]
[33.40748978 -2.04926753]
[33.85409546 -17.04261780]
[26.53110695 -31.06703949]
[34.64391708 -43.55830002]
[35.09052277 -58.55165100]
[35.53712845 -73.54499817]
[24.97887993 -84.99755859]
[25.64538765 -100.19658661]
[36.62871933 -110.19168854]
[37.07532501 -125.18503571]
[37.52193069 -140.17839050]
[37.96854019 -155.17173767]
[24.08981895 -161.37251282]
[13.64411640 -172.41586304]
[8.22432613 -186.61778259]
[8.65692711 -201.81256104]
[14.87594986 -215.68310547]
[25.93303871 -226.11427307]
[40.14207077 -231.51538086]
[55.33626556 -231.06278992]
[69.19862366 -224.82553101]
[79.61523438 -213.75473022]
[84.99764252 -199.53860474]
[84.52507019 -184.34501648]
[78.26956940 -170.49087524]
[67.18508148 -160.08883667]
[52.96188736 -154.72512817]
[52.51528168 -139.73178101]
[52.06867599 -124.73843384]
[51.62207031 -109.74507904]
[61.99101257 -99.11396027]
[61.75167465 -83.90221405]
[50.53047943 -73.09839630]
[50.08387375 -58.10504532]
[49.63726807 -43.11169434]
[56.99219894 -30.15969849]
[48.84744644 -16.59601212]
[48.40084076 -1.60266161]
[50.29413223 13.27737331]
[54.48114395 27.68115616]
[61.45959473 40.95900345]
[70.94849396 52.57626343]
[80.43739319 64.19352722]
[89.92629242 75.81079102]
[99.41519165 87.42805481]
[109.16115570 98.83052063]
[119.15932465 110.01248932]
[129.15750122 121.19446564]
[139.15567017 132.37643433]
[149.15383911 143.55841064]
[159.15200806 154.74038696]
[169.15019226 165.92236328]
[179.14836121 177.10433960]
[189.14653015 188.28631592]
[201.95745850 189.78399658]
[210.05474854 199.30331421]
[209.51303101 211.38774109]
[219.34361267 222.71733093]
[236.88388062 228.32269287]
[239.54200745 245.66918945]
[249.54017639 256.85116577]
[259.53836060 268.03314209]
[273.10980225 265.62350464]
[285.99743652 270.19812012]
[294.87081909 280.46130371]
[297.49307251 293.66235352]
[293.28414917 306.33230591]
[303.11474609 317.66189575]
[312.94531250 328.99148560]
[327.83358765 334.34402466]
[330.33065796 349.02783203]
[340.16125488 360.35742188]
[349.99182129 371.68701172]
[362.38134766 363.20187378]
[375.65734863 356.18435669]
[389.64675903 350.72595215]
[404.16720581 346.89785767]
[419.02938843 344.74996948]
[434.03952026 344.31024170]
[449.00195312 345.58444214]
[463.72158813 348.55599976]
[478.00653076 353.18609619]
[491.67056274 359.41439819]
[504.53555298 367.15972900]
[516.43371582 376.32110596]
[527.21002197 386.77908325]
[536.72393799 398.39730835]
[544.85144043 411.02435303]
[551.48657227 424.49554443]
[556.54278564 438.63528442]
[559.95422363 453.25921631]
[561.67633057 468.17672729]
[561.68676758 483.19332886]
[559.98535156 498.11318970]
[556.59417725 512.74188232]
[551.55761719 526.88861084]
[544.94122314 540.36901855]
[536.83123779 553.00732422]
[527.33349609 564.63873291]
[516.57171631 575.11163330]
[504.68624878 584.28955078]
[491.83203125 592.05267334]
[478.17666626 598.29998779]
[463.89813232 602.94989014]
[449.18264771 605.94189453]
[434.22198486 607.23687744]
[419.21124268 606.81799316]
[404.34609985 604.69067383]
[389.82037354 600.88275146]
[375.82339478 595.44378662]
[362.53765869 588.44470215]
[350.13638306 579.97674561]
[338.78121948 570.15032959]
[328.62026978 559.09356689]
[319.78591919 546.95056152]
[312.39337158 533.87969971]
[306.53903198 520.05126953]
[302.29919434 505.64569092]
[299.72915649 490.85067749]
[298.86239624 475.85913086]
[299.71023560 460.86648560]
[302.26162720 446.06823730]
[306.48327637 431.65728760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 160]
[4 159]
[5 158]
[7 156]
[8 155]
[9 154]
[13 149]
[14 148]
[15 147]
[18 145]
[19 144]
[21 141]
[22 140]
[23 139]
[24 138]
[25 137]
[26 136]
[27 135]
[28 134]
[29 133]
[33 132]
[34 131]
[35 130]
[36 129]
[37 128]
[65 127]
[66 126]
[88 125]
[89 124]
[91 122]
[92 121]
[93 120]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
