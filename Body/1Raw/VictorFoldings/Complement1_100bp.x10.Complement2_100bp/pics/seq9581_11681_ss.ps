%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[108.23636627 693.75903320]
[98.97865295 705.76196289]
[86.17234039 713.87213135]
[71.36385345 717.11010742]
[56.34138870 715.08489990]
[42.91897964 708.04113770]
[32.71744919 696.82934570]
[26.96867943 682.80340576]
[26.36686516 667.65698242]
[30.98467636 653.21911621]
[40.26449203 641.23327637]
[53.08572769 633.14672852]
[67.90015411 629.93603516]
[61.93259430 616.28918457]
[71.44424438 603.64642334]
[73.44825745 588.78088379]
[75.45227051 573.91540527]
[63.06093979 567.32794189]
[53.64238739 556.88433838]
[48.34312439 543.82531738]
[47.81859589 529.71197510]
[52.15218735 516.23876953]
[60.84274673 505.03042603]
[72.86248016 497.44573975]
[86.77844238 494.41308594]
[89.00355530 479.57904053]
[91.22867584 464.74499512]
[93.45378876 449.91094971]
[95.67890930 435.07690430]
[97.90402222 420.24285889]
[100.12914276 405.40881348]
[102.35426331 390.57476807]
[104.57937622 375.74072266]
[105.91761017 360.80053711]
[106.36421967 345.80718994]
[106.81082153 330.81384277]
[107.25743103 315.82049561]
[107.70403290 300.82714844]
[98.56535339 285.84542847]
[108.37316132 270.26055908]
[108.59648895 255.26222229]
[108.81981659 240.26388550]
[108.03849030 225.28425598]
[98.84362030 213.56658936]
[104.88620758 198.94476318]
[103.10374451 184.05104065]
[101.32128143 169.15733337]
[99.53881073 154.26361084]
[97.64552307 139.38357544]
[95.64150238 124.51805115]
[93.63748932 109.65251923]
[86.91045380 123.05949402]
[74.77746582 131.87939453]
[59.94906998 134.14183044]
[45.73796463 129.34136963]
[35.31894684 118.55044556]
[31.01965141 104.17977142]
[33.80055618 89.43981171]
[43.04039383 77.62348938]
[56.67496872 71.37062073]
[71.65827179 72.07809448]
[84.64300537 79.58786774]
[92.72834778 92.22226715]
[93.17495728 77.22891235]
[93.62155914 62.23556519]
[91.14582062 57.64015198]
[90.72267914 53.01692581]
[92.01899719 49.15239334]
[94.43778229 46.58688354]
[95.55342865 31.62843132]
[96.66907501 16.66997719]
[97.78472137 1.71152413]
[98.90037537 -13.24692917]
[100.01602173 -28.20538330]
[93.32656097 -42.54280472]
[101.98904419 -54.65935135]
[102.77036285 -69.63899231]
[103.21697235 -84.63233948]
[92.65872192 -96.08489990]
[93.32523346 -111.28392792]
[104.30856323 -121.27902222]
[104.75517273 -136.27236938]
[105.20177460 -151.26573181]
[105.64838409 -166.25907898]
[96.54625702 -182.26634216]
[106.34479523 -196.82504272]
[106.56812286 -211.82337952]
[92.86384583 -224.90417480]
[93.06923676 -243.52864075]
[106.58703613 -255.87306213]
[106.36370850 -270.87139893]
[106.14038086 -285.86975098]
[105.91705322 -300.86807251]
[102.85987091 -306.73025513]
[103.17485046 -312.40457153]
[105.91705322 -316.31472778]
[98.38607025 -330.22857666]
[106.31200409 -342.83923340]
[106.53533173 -357.83758545]
[92.69910431 -364.19985962]
[82.65174103 -375.64410400]
[78.13399506 -390.18746948]
[79.92860413 -405.31027222]
[87.72463989 -418.39239502]
[100.17139435 -427.16726685]
[115.11238098 -430.11459351]
[129.95899963 -426.72372437]
[142.13896179 -417.58215332]
[149.54203796 -404.27371216]
[150.88558960 -389.10418701]
[145.93684387 -374.70175171]
[135.55319214 -363.56176758]
[121.53366852 -357.61425781]
[121.31034088 -342.61590576]
[128.85729980 -329.77484131]
[120.91539001 -316.09140015]
[120.91539001 -301.09140015]
[121.13871765 -286.09307861]
[121.36204529 -271.09472656]
[121.58537292 -256.09640503]
[131.29971313 -250.11328125]
[136.97831726 -240.07987976]
[137.10975647 -228.43185425]
[131.54568481 -218.06159973]
[121.56645966 -211.60005188]
[121.34313202 -196.60171509]
[129.54055786 -187.70628357]
[129.47724915 -175.20909119]
[120.64173126 -165.81246948]
[120.19512177 -150.81912231]
[119.74851990 -135.82577515]
[119.30191040 -120.83242035]
[129.67085266 -110.20130157]
[129.43151855 -94.98954773]
[118.21031952 -84.18572998]
[117.76371765 -69.19238281]
[119.90246582 -66.38916016]
[120.78971100 -62.41073608]
[119.88788605 -57.85661316]
[116.94749451 -53.54370499]
[123.71675873 -40.27621078]
[114.97447205 -27.08973312]
[113.85882568 -12.13128090]
[112.74317932 2.82717276]
[111.62753296 17.78562546]
[110.51187897 32.74407959]
[109.39623260 47.70253372]
[108.61491394 62.68217087]
[108.16830444 77.67552185]
[107.72169495 92.66886902]
[108.50302124 107.64850616]
[110.50703430 122.51403809]
[112.51104736 137.37956238]
[116.75891876 145.46618652]
[114.43252563 152.48114014]
[116.21499634 167.37486267]
[117.99745941 182.26858521]
[119.77993011 197.16229248]
[129.10229492 209.94525146]
[122.93221283 223.50178528]
[130.78558350 210.72192383]
[144.25505066 204.12091064]
[159.16696167 205.74414062]
[170.90069580 215.08862305]
[175.82043457 229.25888062]
[172.40173340 243.86410522]
[161.70391846 254.37869263]
[147.04182434 257.54461670]
[132.95866394 252.38084412]
[123.81815338 240.48721313]
[123.59482574 255.48554993]
[123.37149811 270.48388672]
[131.77861023 280.26565552]
[131.28382874 292.75320435]
[122.69738770 301.27374268]
[122.25077820 316.26708984]
[121.80417633 331.26043701]
[121.35756683 346.25378418]
[120.91096497 361.24713135]
[131.11779785 350.25531006]
[145.81346130 347.24905396]
[159.51683044 353.34967041]
[167.11689758 366.28176880]
[165.77902222 381.22198486]
[156.00219727 392.59799194]
[141.43292236 396.16683960]
[127.50520325 390.59741211]
[119.41342163 377.96585083]
[117.18830109 392.79989624]
[114.96318817 407.63394165]
[112.73806763 422.46798706]
[110.51295471 437.30200195]
[108.28783417 452.13604736]
[106.06272125 466.97009277]
[103.83760071 481.80413818]
[101.61248016 496.63818359]
[115.44277191 504.83767700]
[125.04457092 517.68585205]
[128.97129822 533.19769287]
[126.65035248 548.99060059]
[118.46639252 562.65069580]
[105.69795227 572.10137939]
[90.31780243 575.91937256]
[88.31378937 590.78491211]
[86.30977631 605.65045166]
[92.13399506 620.36059570]
[82.76568604 631.94006348]
[96.20104980 638.95910645]
[106.42322540 650.15209961]
[112.19783783 664.16741943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 207]
[15 205]
[16 204]
[17 203]
[25 196]
[26 195]
[27 194]
[28 193]
[29 192]
[30 191]
[31 190]
[32 189]
[33 188]
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[40 172]
[41 171]
[42 170]
[43 160]
[45 158]
[46 157]
[47 156]
[48 155]
[49 153]
[50 152]
[51 151]
[63 150]
[64 149]
[65 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[76 140]
[77 136]
[78 135]
[81 132]
[82 131]
[83 130]
[84 129]
[86 126]
[87 125]
[90 120]
[91 119]
[92 118]
[93 117]
[96 116]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
