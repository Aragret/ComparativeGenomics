%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[184.60493469 572.61602783]
[179.02178955 558.68310547]
[174.69190979 544.31127930]
[171.64916992 529.61297607]
[169.91737366 514.70330811]
[169.51010132 499.69891357]
[170.43051147 484.71725464]
[172.67141724 469.87554932]
[176.21527100 455.29000854]
[181.03436279 441.07470703]
[187.09092712 427.34097290]
[194.33761597 414.19628906]
[202.71768188 401.74346924]
[212.16552734 390.08004761]
[222.60723877 379.29727173]
[233.96109009 369.47952271]
[246.13819885 360.70367432]
[238.47760010 347.80737305]
[230.81700134 334.91104126]
[223.15640259 322.01470947]
[215.49580383 309.11837769]
[201.31881714 313.94625854]
[186.44200134 315.72155762]
[171.51539612 314.36425781]
[157.19161987 309.93127441]
[144.09753418 302.61404419]
[132.80667114 292.73028564]
[123.81414795 280.71020508]
[117.51498413 267.07772827]
[114.18673706 252.42773438]
[113.97725677 237.40005493]
[116.89813232 222.65151978]
[122.82406616 208.82725525]
[131.49827576 196.53250122]
[142.54359436 186.30607605]
[134.88299561 173.40975952]
[127.22240448 160.51342773]
[119.56180573 147.61709595]
[106.40972137 140.62625122]
[106.01406860 124.80999756]
[98.35346985 111.91366577]
[90.50171661 99.13282776]
[82.46054077 86.47029877]
[74.41937256 73.80777740]
[66.37819672 61.14525223]
[60.70474625 57.75062561]
[58.00290298 52.75091934]
[58.29264069 47.98383331]
[50.63204193 35.08750916]
[37.28380203 33.28775787]
[27.55136299 24.26057053]
[24.83542061 11.46581650]
[29.90835571 -0.37879568]
[22.44061470 -13.38774776]
[14.97287369 -26.39669991]
[7.50513220 -39.40565109]
[0.03739092 -52.41460419]
[-11.82332802 -53.22698975]
[-21.71789169 -59.59868240]
[-27.25086594 -69.84954071]
[-27.14949226 -81.37800598]
[-21.55462456 -91.32102966]
[-28.63172913 -104.54655457]
[-35.70883560 -117.77207947]
[-42.78594208 -130.99760437]
[-49.86304474 -144.22314453]
[-63.93466568 -138.96263123]
[-78.58190918 -135.62469482]
[-93.54336548 -134.26887512]
[-108.55204010 -134.91940308]
[-123.34008026 -137.56463623]
[-137.64356995 -142.15739441]
[-151.20727539 -148.61569214]
[-163.78909302 -156.82429504]
[-175.16452026 -166.63668823]
[-185.13053894 -177.87777710]
[-193.50929260 -190.34693909]
[-200.15124512 -203.82165527]
[-204.93786621 -218.06144714]
[-207.78375244 -232.81217957]
[-208.63807678 -247.81063843]
[-207.48564148 -262.78912354]
[-204.34696960 -277.48034668]
[-199.27809143 -291.62213135]
[-192.36947632 -304.96209717]
[-183.74441528 -317.26217651]
[-173.55680847 -328.30282593]
[-161.98849487 -337.88705444]
[-149.24591064 -345.84381104]
[-135.55645752 -352.03109741]
[-121.16445160 -356.33847046]
[-106.32672882 -358.68908691]
[-91.30809021 -359.04101562]
[-76.37654877 -357.38793945]
[-61.79859161 -353.75933838]
[-47.83436966 -348.22003174]
[-34.73309708 -340.86883545]
[-22.72857475 -331.83697510]
[-12.03503990 -321.28558350]
[-2.84333301 -309.40298462]
[4.68251038 -296.40124512]
[10.40818310 -282.51239014]
[14.23150253 -267.98431396]
[16.08423805 -253.07621765]
[15.93332672 -238.05421448]
[13.78145885 -223.18637085]
[9.66703892 -208.73800659]
[3.66349316 -194.96699524]
[-4.12203836 -182.11907959]
[-13.55061340 -170.42355347]
[-24.45396805 -160.08912659]
[-36.63751984 -151.30024719]
[-29.56041336 -138.07472229]
[-22.48330879 -124.84918976]
[-15.40620232 -111.62365723]
[-8.32909679 -98.39813232]
[9.47888279 -94.15648651]
[18.68917656 -77.96749878]
[13.04634285 -59.88234711]
[20.51408386 -46.87339401]
[27.98182487 -33.86444092]
[35.44956589 -20.85548973]
[42.91730881 -7.84653664]
[59.32409668 -4.15113449]
[68.15570068 10.55660725]
[63.52836990 27.42691040]
[71.18896484 40.32323837]
[79.04071808 53.10408020]
[87.08189392 65.76660156]
[95.12306976 78.42913055]
[103.16423798 91.09165192]
[107.89201355 93.36367798]
[111.01027679 98.12285614]
[111.24980164 104.25307465]
[118.91039276 117.14939880]
[132.61041260 125.06267548]
[132.45812988 139.95651245]
[140.11872864 152.85282898]
[147.77932739 165.74916077]
[155.43992615 178.64549255]
[169.70402527 173.83776855]
[184.65022278 172.10166931]
[199.62492371 173.51065063]
[213.97380066 178.00071716]
[227.07037354 185.37329102]
[238.34338379 195.30397034]
[247.30169678 207.35687256]
[253.55567932 221.00369263]
[256.83416748 235.64691162]
[256.99624634 250.64593506]
[254.03726196 265.34512329]
[248.08892822 279.10241699]
[239.41348267 291.31750488]
[228.39213562 301.45779419]
[236.05273438 314.35409546]
[243.71333313 327.25042725]
[251.37393188 340.14675903]
[259.03451538 353.04309082]
[272.56619263 346.54757690]
[286.61898804 341.27340698]
[301.08291626 337.26190186]
[315.84478760 334.54440308]
[330.78906250 333.14221191]
[345.79879761 333.06631470]
[360.75646973 334.31726074]
[375.54507446 336.88531494]
[390.04885864 340.75033569]
[404.15426636 345.88208008]
[417.75094604 352.24041748]
[430.73245239 359.77554321]
[442.99719238 368.42849731]
[454.44918823 378.13156128]
[464.99877930 388.80880737]
[474.56344604 400.37661743]
[483.06832886 412.74453735]
[490.44680786 425.81570435]
[496.64117432 439.48782349]
[501.60296631 453.65393066]
[505.29330444 468.20312500]
[507.68334961 483.02154541]
[508.75436401 497.99319458]
[508.49798584 513.00091553]
[506.91622925 527.92724609]
[504.02142334 542.65539551]
[499.83630371 557.07006836]
[494.39355469 571.05841064]
[487.73580933 584.51098633]
[479.91513062 597.32250977]
[470.99279785 609.39270020]
[461.03860474 620.62707520]
[450.13046265 630.93774414]
[438.35372925 640.24401855]
[425.80056763 648.47296143]
[412.56927490 655.56030273]
[398.76336670 661.45050049]
[384.49090576 666.09747314]
[369.86358643 669.46484375]
[354.99588013 671.52630615]
[340.00418091 672.26562500]
[325.00582886 671.67706299]
[310.11816406 669.76525879]
[295.45770264 666.54516602]
[281.13925171 662.04193115]
[267.27478027 656.29083252]
[253.97288513 649.33691406]
[241.33763123 641.23461914]
[229.46792603 632.04724121]
[218.45663452 621.84680176]
[208.38996887 610.71307373]
[199.34671021 598.73321533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 158]
[18 157]
[19 156]
[20 155]
[21 154]
[35 140]
[36 139]
[37 138]
[38 137]
[40 135]
[41 134]
[42 131]
[43 130]
[44 129]
[45 128]
[48 127]
[49 126]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
