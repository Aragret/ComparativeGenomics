%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[222.23939514 522.92095947]
[213.62281799 510.63735962]
[205.74906921 497.86483765]
[198.64579773 484.64831543]
[192.33796692 471.03421021]
[186.84771729 457.07031250]
[182.19435120 442.80572510]
[178.39419556 428.29049683]
[175.46060181 413.57562256]
[173.40388489 398.71282959]
[172.23127747 383.75427246]
[171.94686890 368.75256348]
[172.55168152 353.76031494]
[174.04357910 338.83023071]
[176.41732788 324.01477051]
[179.66459656 309.36593628]
[183.77397156 294.93521118]
[188.73100281 280.77325439]
[194.51829529 266.92984009]
[201.11552429 253.45358276]
[208.49951172 240.39181519]
[216.64431763 227.79042053]
[225.52133179 215.69366455]
[213.97503662 206.11854553]
[202.42874146 196.54342651]
[190.88243103 186.96830750]
[179.33613586 177.39318848]
[167.26683044 178.20463562]
[157.56904602 170.32194519]
[155.78565979 157.54766846]
[144.38319397 147.80169678]
[132.98072815 138.05572510]
[121.57826996 128.30976868]
[110.17580414 118.56379700]
[93.75637054 120.22816467]
[81.13147736 109.59897614]
[79.97381592 93.13606262]
[68.42751312 83.56094360]
[52.86574554 80.70753479]
[48.00792313 66.62738037]
[37.46936798 77.31476593]
[26.05107880 87.05664062]
[13.83759308 95.78087616]
[0.91933668 103.42286682]
[-12.60804558 109.92604828]
[-26.64440155 115.24227142]
[-41.08580780 119.33216095]
[-55.82534027 122.16545868]
[-70.75387573 123.72116852]
[-85.76088715 123.98777771]
[-100.73526764 122.96332550]
[-115.56613922 120.65537262]
[-130.14370728 117.08102417]
[-144.36003113 112.26674652]
[-158.10987854 106.24816895]
[-171.29142761 99.06985474]
[-183.80709839 90.78496552]
[-195.56422424 81.45481873]
[-206.47575378 71.14851379]
[-216.46089172 59.94234085]
[-225.44573975 47.91927338]
[-233.36373901 35.16832733]
[-240.15629578 21.78391075]
[-245.77310181 7.86511469]
[-250.17259216 -6.48500729]
[-253.32217407 -21.16021156]
[-255.19853210 -36.05184174]
[-255.78776550 -51.04965210]
[-255.08554077 -66.04259491]
[-253.09703064 -80.91966248]
[-249.83697510 -95.57072449]
[-245.32949829 -109.88729095]
[-239.60797119 -123.76336670]
[-232.71475220 -137.09622192]
[-224.70089722 -149.78715515]
[-215.62573242 -161.74217224]
[-205.55642700 -172.87280273]
[-194.56756592 -183.09660339]
[-182.74047852 -192.33789062]
[-170.16273499 -200.52824402]
[-156.92747498 -207.60704041]
[-143.13267517 -213.52183533]
[-128.88046265 -218.22886658]
[-114.27638245 -221.69328308]
[-99.42853546 -223.88941956]
[-84.44686890 -224.80102539]
[-69.44229126 -224.42134094]
[-54.52590179 -222.75318909]
[-39.80813599 -219.80892944]
[-25.39795494 -215.61033630]
[-11.40205383 -210.18850708]
[2.07594562 -203.58358765]
[14.93625546 -195.84448242]
[27.08366013 -187.02847290]
[38.42822647 -177.20083618]
[48.88595581 -166.43434143]
[58.37942505 -154.80871582]
[66.83834839 -142.40998840]
[74.20009613 -129.33000183]
[80.41015625 -115.66558075]
[85.42256165 -101.51788330]
[89.20020294 -86.99167633]
[91.71510315 -72.19448853]
[92.94864655 -57.23588181]
[92.89169312 -42.22661209]
[91.54467773 -27.27779961]
[88.91755676 -12.50012398]
[85.02980042 1.99700522]
[79.91017914 16.10625458]
[73.59660339 29.72316170]
[66.13581085 42.74691010]
[57.58304214 55.08107758]
[72.31894684 57.24960709]
[78.00263214 72.01464081]
[89.54893494 81.58975983]
[101.93932343 78.91918945]
[113.63451385 83.80550385]
[120.44210815 94.49710083]
[119.92176819 107.16133881]
[131.32423401 116.90730286]
[142.72669983 126.65326691]
[154.12915039 136.39923096]
[165.53161621 146.14520264]
[183.70935059 149.08659363]
[188.91125488 165.84687805]
[200.45755005 175.42199707]
[212.00386047 184.99711609]
[223.55015564 194.57223511]
[235.09646606 204.14735413]
[245.34170532 193.18524170]
[256.21835327 182.84931946]
[267.68823242 173.17588806]
[279.71099854 164.19894409]
[292.24447632 155.94998169]
[305.24459839 148.45802307]
[318.66571045 141.74934387]
[332.46069336 135.84751892]
[346.58108521 130.77330017]
[360.97726440 126.54449463]
[375.59869385 123.17594910]
[390.39398193 120.67951202]
[405.31118774 119.06393433]
[420.29788208 118.33490753]
[435.30148315 118.49498749]
[450.26922607 119.54360962]
[465.14855957 121.47708893]
[479.88720703 124.28863525]
[494.43344116 127.96837616]
[508.73611450 132.50338745]
[522.74499512 137.87773132]
[536.41094971 144.07252502]
[549.68585205 151.06604004]
[562.52319336 158.83367920]
[574.87780762 167.34815979]
[586.70629883 176.57958984]
[597.96716309 186.49554443]
[608.62078857 197.06118774]
[618.62982178 208.23939514]
[627.95910645 219.99092102]
[636.57574463 232.27447510]
[644.44964600 245.04690552]
[651.55303955 258.26336670]
[657.86096191 271.87744141]
[663.35131836 285.84127808]
[668.00482178 300.10583496]
[671.80511475 314.62103271]
[674.73883057 329.33587646]
[676.79565430 344.19863892]
[677.96844482 359.15719604]
[678.25292969 374.15890503]
[677.64825439 389.15115356]
[676.15649414 404.08123779]
[673.78289795 418.89672852]
[670.53576660 433.54559326]
[666.42651367 447.97637939]
[661.46960449 462.13836670]
[655.68243408 475.98184204]
[649.08532715 489.45812988]
[641.70141602 502.51998901]
[633.55676270 515.12145996]
[624.67980957 527.21826172]
[615.10186768 538.76800537]
[604.85656738 549.72998047]
[593.97979736 560.06585693]
[582.50982666 569.73913574]
[570.48699951 578.71600342]
[557.95343018 586.96484375]
[544.95324707 594.45672607]
[531.53210449 601.16528320]
[517.73706055 607.06695557]
[503.61660767 612.14105225]
[489.22039795 616.36975098]
[474.59893799 619.73815918]
[459.80361938 622.23449707]
[444.88641357 623.84991455]
[429.89968872 624.57879639]
[414.89611816 624.41857910]
[399.92837524 623.36987305]
[385.04907227 621.43621826]
[370.31042480 618.62457275]
[355.76425171 614.94470215]
[341.46160889 610.40954590]
[327.45272827 605.03509521]
[313.78686523 598.84014893]
[300.51199341 591.84655762]
[287.67474365 584.07879639]
[275.32022095 575.56420898]
[263.49179077 566.33264160]
[252.23101807 556.41662598]
[241.57746887 545.85089111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 129]
[24 128]
[25 127]
[26 126]
[27 125]
[30 123]
[31 122]
[32 121]
[33 120]
[34 119]
[37 115]
[38 114]
[40 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
