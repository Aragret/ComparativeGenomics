%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[141.43190002 889.94647217]
[126.74110413 886.90032959]
[112.22499847 883.10803223]
[97.92147064 878.57946777]
[83.86783600 873.32647705]
[70.10074615 867.36273193]
[56.65613174 860.70385742]
[43.56906128 853.36718750]
[30.87368011 845.37176514]
[18.60310745 836.73858643]
[6.78935814 827.49017334]
[-4.53674889 817.65057373]
[-15.34566402 807.24548340]
[-25.60918808 796.30200195]
[-35.30054474 784.84881592]
[-44.39445114 772.91571045]
[-52.86718369 760.53375244]
[-60.69663239 747.73541260]
[-67.86237335 734.55395508]
[-74.34571838 721.02380371]
[-80.12973785 707.18023682]
[-85.19936371 693.05944824]
[-89.54135132 678.69818115]
[-93.14437866 664.13397217]
[-95.99904633 649.40472412]
[-98.09790802 634.54901123]
[-99.43548584 619.60546875]
[-100.00829315 604.61309814]
[-99.81483459 589.61108398]
[-98.85561371 574.63848877]
[-97.13312531 559.73437500]
[-94.65187836 544.93768311]
[-91.41834259 530.28698730]
[-87.44094086 515.82049561]
[-82.73006439 501.57598877]
[-77.29799652 487.59060669]
[-71.15891266 473.90081787]
[-64.32882690 460.54235840]
[-56.82556152 447.55007935]
[-48.66868210 434.95785522]
[-39.87947845 422.79855347]
[-30.48087883 411.10388184]
[-20.49740219 399.90438843]
[-9.95509243 389.22927856]
[1.11854410 379.10635376]
[12.69461823 369.56210327]
[24.74292946 360.62133789]
[37.23204422 352.30746460]
[50.12937927 344.64212036]
[63.40128708 337.64535522]
[77.01314545 331.33535767]
[90.92943573 325.72863770]
[105.11386108 320.83978271]
[119.52941132 316.68157959]
[134.13847351 313.26489258]
[131.47268677 298.50366211]
[128.80688477 283.74246216]
[126.14109039 268.98123169]
[123.36547852 254.24028015]
[120.48020935 239.52038574]
[108.88596344 233.89874268]
[102.55200195 222.45481873]
[103.98680878 209.25816345]
[112.88931274 199.15074158]
[110.22351837 184.38952637]
[107.55772400 169.62831116]
[104.89192200 154.86709595]
[101.78781891 140.19178772]
[98.24814606 125.61540985]
[94.70847321 111.03903961]
[91.03170013 125.58143616]
[83.09430695 138.30926514]
[71.65283203 148.00941467]
[57.79780579 153.75729370]
[42.84979248 155.00506592]
[28.23354912 151.63380432]
[15.34219933 143.96482849]
[5.40446615 132.72911072]
[-0.63244897 118.99755096]
[-2.19314623 104.07896423]
[0.87113011 89.39529419]
[8.26831245 76.34609222]
[19.29335022 66.17512512]
[32.89540482 59.85182190]
[47.77801514 57.97888947]
[62.52266693 60.73483276]
[75.72399139 67.85697937]
[86.12372589 78.66648865]
[92.73097229 92.13415527]
[93.17758179 77.14080048]
[85.85459137 63.11638260]
[93.96739960 50.62512207]
[94.41400909 35.63177109]
[94.86061096 20.63842010]
[95.19558716 5.64216137]
[95.30725098 -9.35742283]
[95.30725098 -24.35742378]
[95.30725098 -39.35742188]
[81.25006866 -45.14222336]
[70.48019409 -55.86967850]
[64.63996124 -69.90393066]
[64.61996460 -85.10485077]
[70.42325592 -99.15441895]
[81.16487122 -109.91016388]
[95.20678711 -115.73193359]
[110.40772247 -115.73193359]
[124.44963837 -109.91016388]
[135.19125366 -99.15441895]
[140.99453735 -85.10485077]
[140.97454834 -69.90393066]
[135.13430786 -55.86967850]
[124.36444092 -45.14222336]
[110.30725098 -39.35742188]
[110.30725098 -24.35742378]
[110.30725098 -9.35742283]
[113.45075226 -2.66861176]
[110.19392395 5.86548901]
[113.23748779 12.60036087]
[109.85395813 21.08502579]
[109.40735626 36.07837677]
[108.96074677 51.07172775]
[116.31568146 64.02372742]
[108.17092896 77.58740997]
[107.72431946 92.58075714]
[109.28484344 107.49936676]
[112.82451630 122.07573700]
[116.36418915 136.65211487]
[119.47126770 139.68527222]
[121.27057648 143.19625854]
[121.77247620 146.71527100]
[121.13886261 149.82415771]
[119.65314484 152.20129395]
[122.31893921 166.96250916]
[124.98473358 181.72372437]
[127.65052795 196.48493958]
[142.20190430 206.19456482]
[145.17037964 223.09140015]
[135.20010376 236.63511658]
[138.08537292 251.35501099]
[142.80703735 259.17443848]
[140.90231323 266.31542969]
[143.56809998 281.07666016]
[146.23390198 295.83789062]
[148.89968872 310.59909058]
[163.78102112 308.69000244]
[178.74041748 307.54324341]
[193.73886108 307.16180420]
[208.73721313 307.54669189]
[223.69633484 308.69692993]
[238.57722473 310.60946655]
[253.34104919 313.27935791]
[267.94927979 316.69961548]
[282.36383057 320.86129761]
[296.54705811 325.75357056]
[310.46197510 331.36367798]
[324.07232666 337.67697144]
[337.34252930 344.67700195]
[350.23800659 352.34545898]
[362.72509766 360.66238403]
[374.77124023 369.60604858]
[386.34500122 379.15310669]
[397.41616821 389.27871704]
[407.95590210 399.95639038]
[417.93664551 411.15832520]
[427.33239746 422.85525513]
[436.11865234 435.01669312]
[444.27249146 447.61087036]
[451.77258301 460.60501099]
[458.59942627 473.96511841]
[464.73519897 487.65640259]
[470.16387939 501.64309692]
[474.87127686 515.88879395]
[478.84518433 530.35620117]
[482.07516479 545.00769043]
[484.55282593 559.80499268]
[486.27166748 574.70947266]
[487.22726440 589.68231201]
[487.41708374 604.68438721]
[486.84063721 619.67657471]
[485.49945068 634.61981201]
[483.39697266 649.47503662]
[480.53872681 664.20355225]
[476.93215942 678.76690674]
[472.58670044 693.12713623]
[467.51364136 707.24670410]
[461.72625732 721.08886719]
[455.23962402 734.61743164]
[448.07067871 747.79718018]
[440.23812866 760.59362793]
[431.76239014 772.97344971]
[422.66558838 784.90441895]
[412.97146606 796.35522461]
[402.70526123 807.29620361]
[391.89382935 817.69866943]
[380.56533813 827.53552246]
[368.74935913 836.78112793]
[356.47668457 845.41131592]
[343.77935791 853.40362549]
[330.69049072 860.73712158]
[317.24426270 867.39276123]
[303.47573853 873.35314941]
[289.42083740 878.60272217]
[275.11621094 883.12780762]
[260.59918213 886.91656494]
[245.90763855 889.95910645]
[231.07991028 892.24755859]
[216.15466309 893.77593994]
[201.17085266 894.54016113]
[186.16757202 894.53833008]
[171.18394470 893.77044678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 144]
[56 143]
[57 142]
[58 141]
[59 139]
[60 138]
[64 135]
[65 134]
[66 133]
[67 132]
[68 127]
[69 126]
[70 125]
[89 124]
[90 123]
[92 121]
[93 120]
[94 119]
[95 117]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
