%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[114.94644928 895.08740234]
[100.17228699 892.47509766]
[85.55218506 889.10565186]
[71.12492371 884.98809814]
[56.92876434 880.13323975]
[43.00134277 874.55407715]
[29.37960052 868.26531982]
[16.09965515 861.28369141]
[3.19672608 853.62768555]
[-9.29497147 845.31756592]
[-21.34231186 836.37542725]
[-32.91334915 826.82495117]
[-43.97739410 816.69152832]
[-54.50511169 806.00189209]
[-64.46858215 794.78454590]
[-73.84138489 783.06915283]
[-82.59866333 770.88671875]
[-90.71720123 758.26971436]
[-98.17546082 745.25146484]
[-104.95365906 731.86651611]
[-111.03383636 718.15045166]
[-116.39986420 704.13952637]
[-121.03750610 689.87091064]
[-124.93447113 675.38250732]
[-128.08042908 660.71270752]
[-130.46702576 645.90039062]
[-132.08793640 630.98486328]
[-132.93885803 616.00567627]
[-133.01754761 601.00256348]
[-132.32379150 586.01525879]
[-130.85942078 571.08355713]
[-128.62832642 556.24700928]
[-125.63641357 541.54504395]
[-121.89163971 527.01654053]
[-117.40391541 512.70007324]
[-112.18514252 498.63366699]
[-106.24917603 484.85452271]
[-99.61174011 471.39923096]
[-92.29044342 458.30346680]
[-84.30469513 445.60198975]
[-75.67568207 433.32839966]
[-66.42627716 421.51531982]
[-56.58102036 410.19406128]
[-46.16600418 399.39462280]
[-35.20885849 389.14566040]
[-23.73863602 379.47436523]
[-11.78575325 370.40634155]
[0.61809188 361.96566772]
[13.44000626 354.17474365]
[26.64598846 347.05419922]
[40.20101929 340.62289429]
[54.06914902 334.89794922]
[68.21360779 329.89450073]
[82.59688568 325.62582397]
[97.18083954 322.10324097]
[111.92678833 319.33609009]
[109.92277527 304.47055054]
[107.91876221 289.60501099]
[105.91474915 274.73950195]
[103.91073608 259.87396240]
[101.76584625 258.06909180]
[100.20664978 255.30584717]
[99.60176849 251.80305481]
[100.23385620 247.90882874]
[102.25728607 244.06700134]
[101.14163971 229.10853577]
[100.02599335 214.15008545]
[91.36351013 202.03353882]
[98.05297089 187.69612122]
[96.93732452 172.73767090]
[93.30503845 166.30117798]
[95.91811371 157.54849243]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[89.66713715 58.34140396]
[88.10662079 43.42280197]
[86.54609680 28.50419617]
[84.98557281 13.58559132]
[83.42504883 -1.33301353]
[81.75350952 -16.23958778]
[79.86021423 -31.11962318]
[77.85620117 -45.98514938]
[75.85218811 -60.85067749]
[60.84275818 -62.08805847]
[46.45037460 -66.52352905]
[33.34819412 -73.94962311]
[22.14903259 -84.01902771]
[13.37668991 -96.26075745]
[7.44146729 -110.10226440]
[4.62096548 -124.89614105]
[5.04710436 -139.95045471]
[8.69995308 -154.56109619]
[15.40866089 -168.04469299]
[24.85944939 -179.77058411]
[36.61028671 -189.19035339]
[50.11156845 -195.86338806]
[64.73181152 -199.47760010]
[79.78720093 -199.86395264]
[94.57357788 -197.00434875]
[108.39933777 -191.03256226]
[120.61784363 -182.22789001]
[130.65760803 -171.00213623]
[138.04904175 -157.88037109]
[142.44644165 -143.47631836]
[143.64414978 -128.46366882]
[141.58612061 -113.54460144]
[136.36862183 -99.41690826]
[128.23570251 -86.74135590]
[117.56772614 -76.11081696]
[104.86367035 -68.02249146]
[90.71772003 -62.85469437]
[92.72173309 -47.98916626]
[94.72574615 -33.12363815]
[98.73469543 -26.91476250]
[96.64722443 -18.02205276]
[100.56329346 -11.75418091]
[98.34365082 -2.89353657]
[99.90417480 12.02506828]
[101.46469879 26.94367218]
[103.02522278 41.86227798]
[104.58574677 56.78088379]
[107.07984161 59.27323914]
[108.49064636 63.09746170]
[108.20533752 67.73123932]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[110.89151764 156.65567017]
[111.89577484 171.62200928]
[113.01142120 186.58047485]
[121.75370026 199.76695251]
[114.98444366 213.03443909]
[116.10009003 227.99288940]
[117.21574402 242.95133972]
[118.77626801 257.86996460]
[120.78028107 272.73547363]
[122.78429413 287.60101318]
[124.78830719 302.46652222]
[126.79232025 317.33206177]
[141.74462891 316.09561157]
[156.74075317 315.63052368]
[171.74095154 315.93801880]
[186.70541382 317.01733398]
[201.59448242 318.86553955]
[216.36866760 321.47778320]
[230.98878479 324.84710693]
[245.41607666 328.96459961]
[259.61227417 333.81933594]
[273.53970337 339.39843750]
[287.16149902 345.68710327]
[300.44146729 352.66867065]
[313.34445190 360.32461548]
[325.83618164 368.63464355]
[337.88357544 377.57672119]
[349.45468140 387.12710571]
[360.51876831 397.26052856]
[371.04656982 407.95004272]
[381.01010132 419.16735840]
[390.38296509 430.88272095]
[399.14031982 443.06506348]
[407.25891113 455.68203735]
[414.71725464 468.70025635]
[421.49554443 482.08514404]
[427.57580566 495.80120850]
[432.94189453 509.81210327]
[437.57962036 524.08068848]
[441.47668457 538.56903076]
[444.62271118 553.23883057]
[447.00939941 568.05114746]
[448.63037109 582.96661377]
[449.48138428 597.94580078]
[449.56018066 612.94897461]
[448.86648560 627.93627930]
[447.40222168 642.86798096]
[445.17120361 657.70452881]
[442.17938232 672.40655518]
[438.43469238 686.93505859]
[433.94705200 701.25152588]
[428.72836304 715.31799316]
[422.79244995 729.09716797]
[416.15512085 742.55249023]
[408.83389282 755.64825439]
[400.84820557 768.34979248]
[392.21926880 780.62341309]
[382.96994019 792.43658447]
[373.12472534 803.75787354]
[362.70977783 814.55737305]
[351.75268555 824.80639648]
[340.28253174 834.47778320]
[328.32971191 843.54583740]
[315.92590332 851.98657227]
[303.10403442 859.77758789]
[289.89810181 866.89825439]
[276.34310913 873.32958984]
[262.47500610 879.05462646]
[248.33056641 884.05816650]
[233.94731140 888.32696533]
[219.36338806 891.84960938]
[204.61744690 894.61682129]
[189.74861145 896.62127686]
[174.79629517 897.85766602]
[159.80015564 898.32269287]
[144.79997253 898.01507568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 146]
[57 145]
[58 144]
[59 143]
[60 142]
[65 141]
[66 140]
[67 139]
[69 137]
[70 136]
[72 135]
[73 134]
[74 133]
[75 132]
[77 130]
[78 129]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
[84 119]
[85 117]
[86 116]
[87 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
