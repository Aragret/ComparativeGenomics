%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[177.97811890 677.39575195]
[164.94953918 669.95532227]
[152.32821655 661.84326172]
[140.14874268 653.08172607]
[128.44450378 643.69482422]
[117.24757385 633.70819092]
[106.58865356 623.14923096]
[96.49695587 612.04693604]
[87.00014496 600.43170166]
[78.12423706 588.33532715]
[69.89356995 575.79101562]
[62.33070755 562.83312988]
[55.45637131 549.49719238]
[49.28940582 535.81976318]
[43.84671402 521.83831787]
[39.14321899 507.59118652]
[35.19180298 493.11743164]
[32.00330734 478.45669556]
[29.58646393 463.64916992]
[27.94790077 448.73547363]
[27.09210587 433.75643921]
[27.02142906 418.75314331]
[27.73606110 403.76672363]
[29.23404503 388.83822632]
[31.51127434 374.00860596]
[34.56150436 359.31848145]
[38.37638092 344.80813599]
[42.94544220 330.51730347]
[48.25616837 316.48522949]
[54.29399872 302.75027466]
[61.04238510 289.35018921]
[68.48283386 276.32162476]
[76.59494781 263.70031738]
[85.35649872 251.52087402]
[94.74346161 239.81666565]
[104.73011017 228.61976624]
[115.28907776 217.96087646]
[126.39141846 207.86921692]
[138.00669861 198.37243652]
[150.10308838 189.49656677]
[141.87428284 176.95516968]
[133.64547729 164.41375732]
[125.41666412 151.87236023]
[117.18785858 139.33096313]
[108.95904541 126.78956604]
[100.63710785 114.30976868]
[88.14216614 108.03536987]
[86.94539642 94.10485077]
[78.53078461 81.68735504]
[70.11616516 69.26985931]
[61.70154190 56.85236359]
[53.28692627 44.43486786]
[44.87230682 32.01737213]
[36.45768738 19.59987640]
[32.57096100 34.08757401]
[19.64774132 41.70271301]
[5.09103489 38.08300400]
[-2.76041436 25.30197144]
[0.59105963 10.68117714]
[13.22558022 2.59607458]
[27.90473366 5.67764473]
[20.63150406 -7.44104910]
[13.35827446 -20.55974388]
[6.08504534 -33.67843628]
[-7.85998678 -28.09817696]
[-22.39446449 -24.30974388]
[-37.28915405 -22.37288666]
[-52.30915070 -22.31815147]
[-67.21755981 -24.14640427]
[-81.77925873 -27.82880783]
[-95.76459503 -33.30728912]
[-108.95298767 -40.49543762]
[-121.13644409 -49.27989578]
[-132.12280273 -59.52210999]
[-141.73881531 -71.06055450]
[-149.83280945 -83.71324158]
[-156.27711487 -97.28063202]
[-160.97012329 -111.54873657]
[-163.83781433 -126.29254150]
[-164.83494568 -141.27949524]
[-163.94580078 -156.27325439]
[-161.18440247 -171.03732300]
[-156.59429932 -185.33886719]
[-150.24789429 -198.95233154]
[-142.24526978 -211.66300964]
[-132.71263123 -223.27041626]
[-121.80033112 -233.59152222]
[-109.68048096 -242.46351624]
[-96.54421234 -249.74649048]
[-82.59870911 -255.32557678]
[-68.06391144 -259.11279297]
[-53.16905594 -261.04840088]
[-38.14905930 -261.10186768]
[-23.24080086 -259.27233887]
[-8.67940998 -255.58871460]
[5.30546045 -250.10906982]
[18.49324799 -242.91979980]
[30.67596436 -234.13432312]
[41.66146851 -223.89117432]
[51.27650452 -212.35192871]
[59.36942673 -199.69856262]
[65.81259918 -186.13063049]
[70.50440979 -171.86212158]
[73.37085724 -157.11808777]
[74.36672974 -142.13104248]
[73.47631836 -127.13735962]
[70.71368408 -112.37351990]
[66.12237549 -98.07235718]
[59.77481842 -84.45943451]
[51.77112198 -71.74943542]
[42.23750687 -60.14281845]
[31.32434273 -49.82264328]
[19.20373917 -40.95166779]
[26.47696877 -27.83297348]
[33.75019836 -14.71427822]
[41.02342606 -1.59558463]
[48.87518311 11.18525791]
[57.28980255 23.60275269]
[65.70442200 36.02024841]
[74.11904144 48.43774414]
[82.53366089 60.85523987]
[90.94827271 73.27273560]
[99.36289215 85.69023132]
[111.85783386 91.96463013]
[113.05460358 105.89514923]
[120.45931244 111.24379730]
[121.50045013 118.56075287]
[129.72926331 131.10215759]
[137.95806885 143.64355469]
[146.18687439 156.18495178]
[154.41567993 168.72634888]
[162.64448547 181.26776123]
[175.60229492 173.70477295]
[188.93817139 166.83032227]
[202.61555481 160.66322327]
[216.59693909 155.22041321]
[230.84403992 150.51678467]
[245.31776428 146.56524658]
[259.97848511 143.37661743]
[274.78598022 140.95964050]
[289.69967651 139.32093811]
[304.67868042 138.46501160]
[319.68197632 138.39419556]
[334.66839600 139.10868835]
[349.59689331 140.60653687]
[364.42654419 142.88363647]
[379.11669922 145.93373108]
[393.62707520 149.74847412]
[407.91793823 154.31741333]
[421.95010376 159.62800598]
[435.68505859 165.66571045]
[449.08523560 172.41398621]
[462.11386108 179.85430908]
[474.73522949 187.96630859]
[486.91476440 196.72775269]
[498.61907959 206.11460876]
[509.81604004 216.10115051]
[520.47503662 226.66003418]
[530.56677246 237.76228333]
[540.06365967 249.37747192]
[548.93963623 261.47378540]
[557.17041016 274.01803589]
[564.73333740 286.97589111]
[571.60778809 300.31176758]
[577.77478027 313.98916626]
[583.21759033 327.97058105]
[587.92114258 342.21768188]
[591.87268066 356.69143677]
[595.06127930 371.35214233]
[597.47821045 386.15963745]
[599.11682129 401.07333374]
[599.97271729 416.05236816]
[600.04351807 431.05566406]
[599.32891846 446.04208374]
[597.83105469 460.97058105]
[595.55389404 475.80023193]
[592.50378418 490.49035645]
[588.68896484 505.00073242]
[584.11999512 519.29156494]
[578.80938721 533.32373047]
[572.77160645 547.05865479]
[566.02331543 560.45880127]
[558.58294678 573.48742676]
[550.47088623 586.10876465]
[541.70941162 598.28826904]
[532.32250977 609.99255371]
[522.33593750 621.18951416]
[511.77703857 631.84844971]
[500.67477417 641.94018555]
[489.05953979 651.43701172]
[476.96322632 660.31298828]
[464.41891479 668.54370117]
[451.46105957 676.10656738]
[438.12515259 682.98095703]
[424.44772339 689.14794922]
[410.46630859 694.59069824]
[396.21920776 699.29425049]
[381.74542236 703.24566650]
[367.08471680 706.43426514]
[352.27719116 708.85113525]
[337.36349487 710.48974609]
[322.38446045 711.34558105]
[307.38119507 711.41632080]
[292.39474487 710.70172119]
[277.46627808 709.20379639]
[262.63662720 706.92657471]
[247.94650269 703.87640381]
[233.43614197 700.06158447]
[219.14530945 695.49255371]
[205.11318970 690.18188477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 132]
[41 131]
[42 130]
[43 129]
[44 128]
[45 127]
[46 125]
[48 123]
[49 122]
[50 121]
[51 120]
[52 119]
[53 118]
[54 117]
[61 116]
[62 115]
[63 114]
[64 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
