%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[173.45567322 737.82489014]
[164.35023499 725.88885498]
[156.47850037 713.10546875]
[149.91871643 699.60186768]
[144.73608398 685.51220703]
[140.98210144 670.97650146]
[138.69407654 656.13928223]
[137.89474487 641.14794922]
[138.59207153 626.15155029]
[140.77909851 611.29907227]
[144.43411255 596.73815918]
[149.52078247 582.61358643]
[155.98854065 569.06567383]
[163.77311707 556.22900391]
[172.79714966 544.23126221]
[182.97094727 533.19171143]
[194.19337463 523.21997070]
[206.35292053 514.41516113]
[219.32872009 506.86486816]
[232.99182129 500.64407349]
[228.16583252 486.44161987]
[223.33982849 472.23916626]
[218.51382446 458.03671265]
[213.68783569 443.83425903]
[208.86183167 429.63180542]
[198.15335083 424.00552368]
[194.01649475 412.21270752]
[199.18365479 400.39480591]
[194.56964111 386.12207031]
[179.68029785 385.00994873]
[166.31488037 378.26376343]
[156.52409363 366.88372803]
[151.82351685 352.58364868]
[152.95901489 337.53292847]
[159.78862000 324.02740479]
[171.29939270 314.13912964]
[166.68539429 299.86639404]
[162.07138062 285.59365845]
[157.45736694 271.32092285]
[146.18029785 261.59072876]
[149.29751587 246.07965088]
[130.19699097 245.44796753]
[112.76062775 237.54742432]
[99.64868164 223.55670166]
[92.87181854 205.58567810]
[93.48282623 186.35722351]
[101.41314697 168.79475403]
[115.47958374 155.57762146]
[109.61062622 141.77345276]
[103.74166107 127.96927643]
[97.87270355 114.16510010]
[86.81798553 105.60444641]
[88.32312012 91.70386505]
[82.45416260 77.89968872]
[69.93418121 68.22701263]
[72.07492828 53.48704910]
[57.69290924 47.50412369]
[51.93759537 33.42111969]
[57.73003387 19.74693680]
[51.86107254 5.94275999]
[47.88715744 20.40678406]
[36.79563522 30.50520897]
[22.02334404 33.10892868]
[8.14763260 27.41115379]
[-0.53195602 15.17740059]
[-1.32595778 0.19842975]
[6.01165771 -12.88436031]
[19.20725060 -20.01712608]
[34.17202377 -18.98970032]
[46.26913452 -10.12023926]
[42.29703522 -24.58476257]
[38.32493973 -39.04928589]
[34.35284424 -53.51381302]
[31.42417908 -38.80249023]
[24.83544159 -25.32701302]
[15.02363682 -13.98115540]
[2.63954711 -5.51744843]
[-11.49543476 -0.49725977]
[-26.44378662 0.74643970]
[-41.21403503 -1.86884022]
[-54.82653046 -8.16963768]
[-66.37839508 -17.73804283]
[-75.10343933 -29.93941689]
[-80.42296600 -43.96448898]
[-81.98414612 -58.88302612]
[-79.68343353 -73.70553589]
[-73.67343140 -87.44889069]
[-64.35274506 -99.20154572]
[-52.33959961 -108.18398285]
[-38.43077469 -113.80044556]
[-23.54879761 -115.67839813]
[-8.68073273 -113.69329834]
[5.18727350 -107.97679138]
[17.13540649 -98.90804291]
[26.37118721 -87.08855438]
[32.28343964 -73.29732513]
[33.17625427 -88.27073669]
[34.06907272 -103.24414062]
[34.96188736 -118.21754456]
[35.85470200 -133.19094849]
[22.16675568 -139.80220032]
[12.05448723 -151.15165710]
[7.05994368 -165.50865173]
[7.94475794 -180.68380737]
[14.57400227 -194.36305237]
[25.93676376 -204.46037292]
[40.30030441 -209.43603516]
[55.47428894 -208.53125000]
[69.14479828 -201.88401794]
[79.22717285 -190.50799561]
[84.18392181 -176.13790894]
[83.25918579 -160.96513367]
[76.59397888 -147.30337524]
[65.20468903 -137.23597717]
[50.82810974 -132.29814148]
[49.93529129 -117.32472992]
[49.04247665 -102.35132599]
[48.14966202 -87.37791443]
[47.25684357 -72.40451050]
[48.81736755 -57.48590851]
[52.78946304 -43.02138519]
[56.76156235 -28.55685997]
[60.73365784 -14.09233570]
[65.66525269 0.07379935]
[71.53421021 13.87797642]
[85.40052795 19.19407463]
[91.54913330 33.10986710]
[85.87910461 47.61808777]
[97.97929382 56.30339813]
[96.25833893 72.03072357]
[102.12729645 85.83489990]
[113.18201447 94.39555359]
[111.67687988 108.29613495]
[117.54583740 122.10031128]
[123.41480255 135.90449524]
[129.28376770 149.70866394]
[140.30601501 148.22698975]
[151.37115479 149.24113464]
[161.92169189 152.69560242]
[171.42700195 158.41201782]
[179.41006470 166.09837341]
[185.47142029 175.36395264]
[189.30912781 185.73916626]
[190.73381042 196.69932556]
[189.67799377 207.69123840]
[186.19929504 218.16108704]
[180.47729492 227.58236694]
[172.80426025 235.48229980]
[163.57025146 241.46563721]
[175.17735291 252.21672058]
[171.73010254 266.70690918]
[176.34411621 280.97964478]
[180.95812988 295.25238037]
[185.57212830 309.52511597]
[200.69297791 310.80404663]
[214.13595581 317.75598145]
[223.86688232 329.29388428]
[228.42671204 343.63946533]
[227.15026855 358.59725952]
[220.26310730 371.89056396]
[208.84237671 381.50805664]
[213.45637512 395.78079224]
[227.40515137 407.80215454]
[223.06428528 424.80578613]
[227.89028931 439.00827026]
[232.71627808 453.21072388]
[237.54228210 467.41317749]
[242.36828613 481.61563110]
[247.19427490 495.81808472]
[261.81881714 492.42672729]
[276.70837402 490.50839233]
[291.71493530 490.08212280]
[306.68936157 491.15216064]
[321.48284912 493.70785522]
[335.94833374 497.72384644]
[349.94207764 503.16018677]
[363.32498169 509.96286011]
[375.96405029 518.06427002]
[387.73364258 527.38385010]
[398.51684570 537.82904053]
[408.20642090 549.29595947]
[416.70608521 561.67071533]
[423.93136597 574.83026123]
[429.81045532 588.64385986]
[434.28494263 602.97418213]
[437.31033325 617.67877197]
[438.85653687 632.61157227]
[438.90823364 647.62408447]
[437.46490479 662.56713867]
[434.54086304 677.29223633]
[430.16516113 691.65301514]
[424.38134766 705.50677490]
[417.24685669 718.71575928]
[408.83261108 731.14874268]
[399.22225952 742.68212891]
[388.51126099 753.20135498]
[376.80612183 762.60174561]
[364.22314453 770.79003906]
[350.88739014 777.68469238]
[336.93142700 783.21728516]
[322.49392700 787.33282471]
[307.71841431 789.99035645]
[292.75170898 791.16345215]
[277.74255371 790.84057617]
[262.84014893 789.02478027]
[248.19261169 785.73425293]
[233.94548035 781.00158691]
[220.24037170 774.87390137]
[207.21350098 767.41204834]
[194.99433899 758.69018555]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 169]
[21 168]
[22 167]
[23 166]
[24 165]
[25 164]
[28 162]
[29 161]
[36 154]
[37 153]
[38 152]
[39 151]
[41 149]
[48 136]
[49 135]
[50 134]
[51 133]
[53 131]
[54 130]
[56 128]
[59 125]
[60 124]
[70 123]
[71 122]
[72 121]
[73 120]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
