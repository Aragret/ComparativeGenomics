%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[61.58676529 970.64886475]
[46.59364319 970.10986328]
[31.64270020 968.86340332]
[16.76730156 966.91229248]
[2.00064111 964.26086426]
[-12.62433243 960.91503906]
[-27.07498550 956.88232422]
[-41.31907272 952.17169189]
[-55.32480621 946.79357910]
[-69.06093597 940.76007080]
[-82.49681854 934.08465576]
[-95.60246277 926.78216553]
[-108.34862518 918.86889648]
[-120.70687103 910.36254883]
[-132.64962769 901.28210449]
[-144.15022278 891.64776611]
[-155.18302917 881.48107910]
[-165.72338867 870.80468750]
[-175.74781799 859.64245605]
[-185.23391724 848.01928711]
[-194.16055298 835.96112061]
[-202.50778198 823.49481201]
[-210.25697327 810.64825439]
[-217.39085388 797.45007324]
[-223.89350891 783.92974854]
[-229.75039673 770.11737061]
[-234.94848633 756.04382324]
[-239.47615051 741.74053955]
[-243.32330322 727.23937988]
[-246.48135376 712.57269287]
[-248.94325256 697.77325439]
[-250.70350647 682.87408447]
[-251.75819397 667.90838623]
[-252.10494995 652.90960693]
[-251.74301147 637.91113281]
[-250.67318726 622.94653320]
[-248.89785767 608.04913330]
[-246.42098999 593.25219727]
[-243.24809265 578.58874512]
[-239.38627625 564.09149170]
[-234.84414673 549.79278564]
[-229.63182068 535.72448730]
[-223.76095581 521.91809082]
[-217.24462891 508.40429688]
[-210.09739685 495.21334839]
[-202.33520508 482.37463379]
[-193.97537231 469.91680908]
[-185.03654480 457.86767578]
[-175.53868103 446.25408936]
[-165.50297546 435.10202026]
[-154.95181274 424.43634033]
[-143.90872192 414.28079224]
[-132.39837646 404.65811157]
[-120.44644928 395.58972168]
[-108.07960510 387.09585571]
[-95.32543945 379.19552612]
[-82.21241760 371.90628052]
[-68.76979065 365.24444580]
[-55.02755737 359.22485352]
[-41.01638794 353.86096191]
[-26.76754379 349.16470337]
[-12.31281853 345.14660645]
[2.31553292 341.81558228]
[17.08486938 339.17910767]
[31.96223259 337.24304199]
[46.91442871 336.01171875]
[61.90808868 335.48788452]
[76.90975952 335.67269897]
[77.80257416 320.69927979]
[78.69539642 305.72589111]
[79.58821106 290.75247192]
[80.48102570 275.77905273]
[81.37384033 260.80566406]
[82.26665497 245.83226013]
[83.15946960 230.85885620]
[84.05229187 215.88543701]
[76.26023865 206.63284302]
[76.88151550 194.15095520]
[86.12779999 185.15821838]
[87.24344635 170.19976807]
[80.47418976 156.93228149]
[89.21646881 143.74580383]
[90.33211517 128.78735352]
[91.44776917 113.82889557]
[84.39334106 104.56194305]
[85.34600830 92.95446014]
[93.81699371 84.96173096]
[95.15522766 70.02154541]
[85.29736328 57.96085358]
[86.86735535 42.82844543]
[98.42613220 33.50480652]
[99.76436615 18.56462288]
[100.99134064 3.61488938]
[102.10699463 -11.34356403]
[93.72870636 -27.74130440]
[104.16754913 -41.84794998]
[105.06036377 -56.82135773]
[105.95317841 -71.79476166]
[91.86273956 -77.30064392]
[80.16463470 -86.89279938]
[72.00492096 -99.63148499]
[68.18299866 -114.26870728]
[69.07331085 -129.37043762]
[74.58863831 -143.45718384]
[84.18862915 -155.14886475]
[96.93278503 -163.30004883]
[111.57255554 -167.11215210]
[126.67369843 -166.21173096]
[140.75674438 -160.68696594]
[152.44198608 -151.07914734]
[160.58462524 -138.32952881]
[164.38691711 -123.68720245]
[163.47636414 -108.58666992]
[157.94218445 -94.50732422]
[148.32652283 -82.82852173]
[135.57145691 -74.69443512]
[120.92658997 -70.90194702]
[120.03377533 -55.92853928]
[119.14095306 -40.95513535]
[126.93300629 -31.70253754]
[126.31172943 -19.22063828]
[117.06544495 -10.22791576]
[115.94979858 4.73053789]
[118.58709717 11.63462543]
[114.70455170 19.90285683]
[113.36631775 34.84304047]
[123.08409882 46.07247925]
[121.93976593 61.24301529]
[110.09541321 71.35977936]
[108.75717926 86.29996490]
[116.20524597 101.33001709]
[106.40621948 114.94454193]
[105.29057312 129.90299988]
[104.17491913 144.86145020]
[110.86437988 159.19886780]
[102.20190430 171.31541443]
[101.08625031 186.27388000]
[109.46453857 202.67161560]
[99.02569580 216.77825928]
[98.13288116 231.75166321]
[97.24006653 246.72506714]
[96.34724426 261.69848633]
[95.45442963 276.67187500]
[94.56161499 291.64529419]
[93.66880035 306.61868286]
[92.77598572 321.59210205]
[91.88317108 336.56552124]
[106.80050659 338.16467285]
[121.62567902 340.46652222]
[136.32560730 343.46591187]
[150.86749268 347.15612793]
[165.21888733 351.52899170]
[179.34776306 356.57470703]
[193.22259521 362.28201294]
[206.81242371 368.63818359]
[220.08691406 375.62905884]
[233.01646423 383.23898315]
[245.57220459 391.45101929]
[257.72613525 400.24685669]
[269.45111084 409.60681152]
[280.72100830 419.51004028]
[291.51065063 429.93441772]
[301.79595947 440.85671997]
[311.55398560 452.25256348]
[320.76300049 464.09649658]
[329.40237427 476.36212158]
[337.45288086 489.02203369]
[344.89657593 502.04800415]
[351.71679688 515.41094971]
[357.89834595 529.08111572]
[363.42745972 543.02789307]
[368.29174805 557.22027588]
[372.48037720 571.62652588]
[375.98400879 586.21447754]
[378.79483032 600.95159912]
[380.90658569 615.80505371]
[382.31451416 630.74163818]
[383.01550293 645.72808838]
[383.00796509 660.73089600]
[382.29196167 675.71661377]
[380.86904907 690.65179443]
[378.74240112 705.50311279]
[375.91680908 720.23742676]
[372.39852905 734.82189941]
[368.19546509 749.22393799]
[363.31692505 763.41137695]
[357.77386475 777.35266113]
[351.57858276 791.01654053]
[344.74496460 804.37268066]
[337.28823853 817.39117432]
[329.22500610 830.04302979]
[320.57333374 842.29998779]
[311.35247803 854.13464355]
[301.58300781 865.52069092]
[291.28674316 876.43267822]
[280.48666382 886.84625244]
[269.20684814 896.73815918]
[257.47247314 906.08636475]
[245.30972290 914.86999512]
[232.74575806 923.06945801]
[219.80857849 930.66638184]
[206.52708435 937.64392090]
[192.93089294 943.98651123]
[179.05033875 949.67987061]
[164.91641235 954.71142578]
[150.56063843 959.06988525]
[136.01506042 962.74554443]
[121.31213379 965.73016357]
[106.48465729 968.01715088]
[91.56571960 969.60131836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[79 137]
[80 136]
[82 134]
[83 133]
[84 132]
[87 130]
[88 129]
[91 126]
[92 125]
[93 123]
[94 122]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
