%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[82.49757385 475.42648315]
[80.49245453 490.40884399]
[74.15878296 504.13385010]
[64.05973816 515.38110352]
[51.09332657 523.15051270]
[36.41250610 526.75115967]
[21.32269287 525.86297607]
[7.16565609 520.56488037]
[-4.79976702 511.32803345]
[-13.50961971 498.97366333]
[-18.18942642 484.60040283]
[-18.42306519 469.48629761]
[-14.18975735 454.97525024]
[-5.86592817 442.35757446]
[5.80827427 432.75527954]
[19.79478645 427.02212524]
[34.84994125 425.66796875]
[37.95405197 410.99264526]
[41.05815887 396.31735229]
[44.16226959 381.64205933]
[39.22624588 367.58911133]
[49.65187836 355.68884277]
[52.75598907 341.01351929]
[55.64126205 326.29364014]
[58.30705643 311.53240967]
[60.97285080 296.77120972]
[63.41857910 281.97192383]
[65.64369965 267.13787842]
[67.86881256 252.30384827]
[70.09393311 237.46980286]
[72.31904602 222.63575745]
[65.38354492 212.72488403]
[67.11592865 200.34819031]
[77.12763214 192.21623230]
[79.57335663 177.41696167]
[82.01908112 162.61769104]
[76.46048737 148.79917908]
[86.34434509 136.44523621]
[88.79006958 121.64596558]
[91.23580170 106.84669495]
[78.44282532 114.67866516]
[63.82715225 111.30492401]
[55.76130295 98.65810394]
[58.86576462 83.98287201]
[71.36215973 75.68587494]
[86.09197998 78.52000427]
[94.61711884 90.86081696]
[98.37342072 76.33876038]
[94.33849335 61.04072571]
[105.01642609 50.65655136]
[91.57572937 57.31595993]
[77.31932831 52.65172195]
[70.41394043 39.33573151]
[74.81528473 24.99599075]
[88.00206757 17.84695244]
[102.42030334 21.98391342]
[109.81045532 35.03609085]
[114.84736633 20.90706062]
[108.32384491 6.76204681]
[113.63327026 -7.49504519]
[127.15857697 -13.62705612]
[132.19549561 -27.75608635]
[129.54147339 -43.35309601]
[141.10325623 -52.74322128]
[146.14018250 -66.87225342]
[151.17709351 -81.00128174]
[156.21400452 -95.13031006]
[153.55999756 -110.72732544]
[165.12178040 -120.11744690]
[170.15869141 -134.24647522]
[175.19561768 -148.37550354]
[160.73117065 -144.40312195]
[148.51770020 -153.11123657]
[147.55851746 -168.08053589]
[158.56069946 -178.27621460]
[173.41383362 -176.18240356]
[181.16859436 -163.34422302]
[187.24243164 -177.05949402]
[193.31626892 -190.77474976]
[180.09951782 -197.88392639]
[167.46575928 -205.98399353]
[155.48913574 -215.02738953]
[144.23991394 -224.96105957]
[133.78411865 -235.72669983]
[124.18312073 -247.26115417]
[115.49324799 -259.49670410]
[107.76549530 -272.36157227]
[101.04522705 -285.78024292]
[95.37187195 -299.67398071]
[90.77871704 -313.96124268]
[87.29273224 -328.55816650]
[84.93436432 -343.37911987]
[83.71746063 -358.33712769]
[83.64915466 -373.34439087]
[84.72985840 -388.31286621]
[86.95321655 -403.15466309]
[90.30618286 -417.78274536]
[94.76909637 -432.11120605]
[100.31574249 -446.05603027]
[106.91359711 -459.53530884]
[114.52391815 -472.46997070]
[123.10205841 -484.78411865]
[132.59767151 -496.40548706]
[142.95503235 -507.26586914]
[154.11335754 -517.30151367]
[166.00717163 -526.45355225]
[178.56668091 -534.66827393]
[191.71817017 -541.89746094]
[205.38446045 -548.09869385]
[219.48535156 -553.23559570]
[233.93809509 -557.27801514]
[248.65786743 -560.20214844]
[263.55828857 -561.99096680]
[278.55194092 -562.63391113]
[293.55081177 -562.12719727]
[308.46688843 -560.47381592]
[323.21261597 -557.68347168]
[337.70147705 -553.77252197]
[351.84844971 -548.76391602]
[365.57049561 -542.68707275]
[378.78710938 -535.57769775]
[391.42071533 -527.47735596]
[403.39718628 -518.43377686]
[414.64620972 -508.49987793]
[425.10180664 -497.73400879]
[434.70257568 -486.19940186]
[443.39221191 -473.96365356]
[451.11972046 -461.09866333]
[457.83975220 -447.67987061]
[463.51284790 -433.78601074]
[468.10571289 -419.49868774]
[471.59143066 -404.90167236]
[473.94952393 -390.08065796]
[475.16613770 -375.12265015]
[475.23416138 -360.11538696]
[474.15316772 -345.14694214]
[471.92953491 -330.30514526]
[468.57629395 -315.67715454]
[464.11309814 -301.34875488]
[458.56619263 -287.40408325]
[451.96807861 -273.92492676]
[444.35751343 -260.99038696]
[435.77914429 -248.67639160]
[426.28332520 -237.05522156]
[415.92575073 -226.19503784]
[404.76721191 -216.15959167]
[392.87322998 -207.00776672]
[380.31356812 -198.79328918]
[367.16195679 -191.56434631]
[353.49554443 -185.36337280]
[339.39456177 -180.22674561]
[324.94174194 -176.18463135]
[310.22189331 -173.26072693]
[295.32144165 -171.47219849]
[280.32778931 -170.82954407]
[265.32891846 -171.33654785]
[250.41288757 -172.99020386]
[235.66720581 -175.78083801]
[221.17840576 -179.69206238]
[207.03153992 -184.70092773]
[200.95770264 -170.98565674]
[194.88386536 -157.27038574]
[189.32464600 -143.33859253]
[184.28771973 -129.20956421]
[179.25080872 -115.08052826]
[182.26509094 -100.49412537]
[170.34304810 -90.09339142]
[165.30612183 -75.96436310]
[160.26921082 -61.83533478]
[155.23229980 -47.70630646]
[158.24658203 -33.11989594]
[146.32452393 -22.71916962]
[141.28761292 -8.59014034]
[147.88368225 4.71502542]
[142.97680664 19.11562347]
[128.97639465 25.94397736]
[123.93948364 40.07300568]
[119.53848267 54.41285324]
[123.84208679 68.67217255]
[112.89547729 80.09506226]
[109.13918304 94.61711884]
[106.03507233 109.29241943]
[103.58934021 124.09169006]
[101.14361572 138.89096069]
[106.52727509 153.76802063]
[96.81835175 165.06341553]
[94.37262726 179.86268616]
[91.92690277 194.66195679]
[98.80883789 211.74179077]
[87.15309143 224.86087036]
[84.92797089 239.69491577]
[82.70285797 254.52896118]
[80.47773743 269.36300659]
[78.25262451 284.19705200]
[80.31307220 290.47924805]
[79.07712555 296.02627563]
[75.73406982 299.43701172]
[73.06827545 314.19821167]
[70.40248108 328.95944214]
[72.27497101 335.30020142]
[70.87441254 340.80795288]
[67.43128967 344.11764526]
[64.32717896 358.79293823]
[69.04117584 373.89553833]
[58.83757401 384.74615479]
[55.73346329 399.42144775]
[52.62935257 414.09677124]
[49.52524185 428.77206421]
[62.74260330 436.10641479]
[73.20970917 447.01196289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 208]
[18 207]
[19 206]
[20 205]
[22 203]
[23 202]
[24 199]
[25 198]
[26 197]
[27 194]
[28 193]
[29 192]
[30 191]
[31 190]
[34 188]
[35 187]
[36 186]
[38 184]
[39 183]
[40 182]
[47 181]
[48 180]
[50 178]
[57 177]
[58 176]
[61 173]
[62 172]
[64 170]
[65 169]
[66 168]
[67 167]
[69 165]
[70 164]
[71 163]
[77 162]
[78 161]
[79 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
