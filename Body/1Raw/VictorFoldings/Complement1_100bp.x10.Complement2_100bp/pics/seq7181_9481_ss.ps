%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[108.02410889 608.11621094]
[93.27933502 605.13183594]
[79.33409882 599.48870850]
[66.66335297 591.37902832]
[55.69865799 581.07904053]
[46.81347275 568.93951416]
[40.31042480 555.37390137]
[36.41100311 540.84436035]
[35.24802017 525.84558105]
[36.86108780 510.88858032]
[41.19526672 496.48269653]
[48.10293198 483.11859131]
[57.34881210 471.25149536]
[68.61800385 461.28555298]
[81.52666473 453.56021118]
[95.63515472 448.33856201]
[110.46292114 445.79852295]
[110.68624878 430.80020142]
[110.90957642 415.80184937]
[111.13290405 400.80352783]
[111.35623169 385.80517578]
[111.57955933 370.80685425]
[111.80288696 355.80850220]
[104.25593567 342.96743774]
[112.19784546 329.28399658]
[112.42117310 314.28567505]
[112.64450073 299.28732300]
[112.42117310 284.28900146]
[111.75138855 269.30395508]
[111.08160400 254.31890869]
[110.41181946 239.33386230]
[109.74203491 224.34883118]
[109.07224274 209.36378479]
[108.40245819 194.37875366]
[106.73091888 179.47218323]
[104.06512451 164.71096802]
[94.18910980 153.56137085]
[99.35067749 138.60580444]
[96.68488312 123.84458923]
[87.13924408 120.35080719]
[79.88648987 113.22879791]
[76.21965790 103.74829102]
[76.79249573 93.59952545]
[81.50287628 84.59186554]
[89.51100159 78.33123779]
[87.50698853 63.46570969]
[85.50297546 48.60018158]
[83.49896240 33.73465347]
[81.49494934 18.86912537]
[79.49093628 4.00359631]
[67.90065002 -10.30538177]
[75.19429016 -26.26688957]
[72.96916962 -41.10093307]
[63.27034378 -53.60066605]
[69.03406525 -67.33488464]
[66.80894470 -82.16893005]
[64.47345734 -96.98600006]
[62.02772903 -111.78527069]
[46.99686050 -112.72275543]
[32.55846786 -116.97965240]
[19.43576241 -124.33937073]
[8.28530979 -134.43000793]
[-0.33582398 -146.74310303]
[-5.99790239 -160.65928650]
[-8.41993618 -175.47940063]
[-7.48362827 -190.45967102]
[-3.23914695 -204.84898376]
[4.09755230 -217.92662048]
[14.15571117 -229.03823853]
[26.42850304 -237.62875366]
[40.29857254 -243.26995850]
[37.85284424 -258.06921387]
[35.40711594 -272.86849976]
[32.96138763 -287.66775513]
[23.07753181 -300.02169800]
[28.63612938 -313.84020996]
[26.19040298 -328.63949585]
[23.74467468 -343.43875122]
[21.29894829 -358.23803711]
[18.85321999 -373.03729248]
[3.82409215 -372.87683105]
[-11.05338097 -375.01254272]
[-25.43044853 -379.39434814]
[-38.97009277 -385.91958618]
[-51.35492706 -394.43521118]
[-62.29462814 -404.74169922]
[-71.53276062 -416.59738159]
[-78.85276031 -429.72439575]
[-84.08304596 -443.81497192]
[-87.10100555 -458.53884888]
[-87.83589172 -473.55084229]
[-86.27048492 -488.49908447]
[-82.44147491 -503.03314209]
[-76.43862152 -516.81237793]
[-68.40264130 -529.51367188]
[-58.52191162 -540.83935547]
[-47.02804184 -550.52398682]
[-34.19047165 -558.34045410]
[-20.31013107 -564.10552979]
[-5.71239424 -567.68414307]
[9.26054668 -568.99243164]
[24.25770378 -567.99957275]
[38.92752457 -564.72900391]
[52.92612457 -559.25726318]
[65.92535400 -551.71270752]
[77.62049866 -542.27215576]
[87.73741150 -531.15692139]
[96.03892517 -518.62756348]
[102.33044434 -504.97772217]
[106.46448517 -490.52746582]
[108.34415436 -475.61547852]
[107.92536926 -460.59133911]
[105.21795654 -445.80722046]
[100.28538513 -431.60968018]
[93.24327850 -418.33151245]
[84.25670624 -406.28402710]
[73.53633881 -395.74960327]
[61.33346939 -386.97518921]
[47.93415451 -380.16647339]
[33.65249252 -375.48303223]
[36.09821701 -360.68374634]
[38.54394531 -345.88449097]
[40.98967361 -331.08520508]
[43.43540192 -316.28594971]
[53.14432144 -304.99053955]
[47.76066208 -290.11349487]
[50.20638657 -275.31420898]
[52.65211487 -260.51495361]
[55.09784317 -245.71568298]
[70.04540253 -244.83688354]
[84.42951202 -240.65168762]
[97.52786255 -233.36691284]
[108.68197632 -223.34507751]
[117.33029938 -211.08641052]
[123.03647614 -197.20388794]
[125.51134491 -182.39250183]
[124.62760925 -167.39456177]
[120.42639160 -152.96244812]
[113.11529541 -139.82084656]
[103.05818939 -128.63043213]
[90.75706482 -119.95456696]
[76.82700348 -114.23099518]
[79.27272797 -99.43172455]
[83.46475983 -93.34496307]
[81.64299011 -84.39404297]
[83.86810303 -69.56000519]
[93.40778351 -58.12129974]
[87.80321503 -43.32604980]
[90.02833557 -28.49200630]
[99.56645203 -21.05218697]
[101.54163361 -8.71191120]
[94.35646057 1.99958265]
[96.36047363 16.86511040]
[98.36448669 31.73063850]
[100.36849976 46.59616852]
[102.37251282 61.46169662]
[104.37653351 76.32722473]
[120.30824280 87.07213593]
[123.30022430 106.05423737]
[111.44609833 121.17879486]
[114.11189270 135.94000244]
[124.17858887 148.14543152]
[118.82633972 162.04516602]
[121.49213409 176.80638123]
[128.57090759 163.58174133]
[141.62359619 156.19071960]
[156.60568237 156.92349243]
[168.87481689 165.55300903]
[174.62925720 179.40530396]
[172.08593750 194.18812561]
[162.03292847 205.32083130]
[147.58526611 209.35383606]
[133.21972656 205.03746033]
[123.38749695 193.70896912]
[124.05728149 208.69400024]
[124.72707367 223.67904663]
[125.39685822 238.66407776]
[126.06664276 253.64912415]
[126.73642731 268.63415527]
[127.40621185 283.61920166]
[129.87184143 287.19335938]
[130.96220398 290.98489380]
[130.77784729 294.53472900]
[129.55805969 297.46368408]
[127.64283752 299.51065063]
[127.41950989 314.50900269]
[127.19618225 329.50732422]
[134.72715759 343.42117310]
[126.80122375 356.03182983]
[126.57789612 371.03018188]
[126.35456848 386.02850342]
[126.13124084 401.02685547]
[125.90791321 416.02517700]
[125.68458557 431.02352905]
[125.46125793 446.02185059]
[140.20683289 449.00225830]
[154.15359497 454.64163208]
[166.82652283 462.74789429]
[177.79399109 473.04492188]
[186.68244934 485.18206787]
[193.18914795 498.74591064]
[197.09249878 513.27441406]
[198.25952148 528.27288818]
[196.65048218 543.23034668]
[192.32019043 557.63739014]
[185.41612244 571.00335693]
[176.17344666 582.87292480]
[164.90693665 592.84191895]
[152.00035095 600.57073975]
[137.89328003 605.79614258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 195]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[25 187]
[26 186]
[27 185]
[28 180]
[29 179]
[30 178]
[31 177]
[32 176]
[33 175]
[34 174]
[35 164]
[36 163]
[38 161]
[39 160]
[45 157]
[46 156]
[47 155]
[48 154]
[49 153]
[50 152]
[52 149]
[53 148]
[55 146]
[56 145]
[57 143]
[58 142]
[71 129]
[72 128]
[73 127]
[74 126]
[76 124]
[77 123]
[78 122]
[79 121]
[80 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
