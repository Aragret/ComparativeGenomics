%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[152.40625000 470.20492554]
[140.40908813 479.35534668]
[126.45203400 485.08801270]
[111.48672485 487.01199341]
[96.53350067 484.99615479]
[82.61190796 479.17794800]
[70.67114258 469.95401001]
[61.52534866 457.95330811]
[55.79809570 443.99404907]
[53.87987900 429.02801514]
[55.90148926 414.07556152]
[61.72508621 400.15621948]
[70.95360565 388.21902466]
[82.95783997 379.07785034]
[96.91931152 373.35598755]
[111.88610840 371.44354248]
[113.89012146 356.57803345]
[115.89413452 341.71249390]
[117.89814758 326.84698486]
[119.90216064 311.98144531]
[120.46037292 296.99182129]
[111.97924805 284.74765015]
[118.88143158 270.51141357]
[117.98861694 255.53800964]
[117.09580231 240.56460571]
[116.20298767 225.59120178]
[107.72186279 213.34703064]
[114.62404633 199.11079407]
[112.39892578 184.27674866]
[108.85925293 169.70037842]
[105.31958008 155.12399292]
[101.77990723 140.54762268]
[98.24023438 125.97124481]
[94.70056152 111.39486694]
[91.28149414 126.00000763]
[84.09725189 139.16764832]
[73.66647339 149.94718933]
[60.74216080 157.56048584]
[46.25733566 161.45790100]
[31.25766754 161.35807800]
[16.82599640 157.26821899]
[4.00415754 149.48359680]
[-6.28223038 138.56616211]
[-13.29058361 125.30407715]
[-16.51496315 110.65473175]
[-15.72259808 95.67567444]
[-10.97068977 81.44825745]
[-2.60228372 68.99957275]
[8.77849865 59.22829819]
[22.35006905 52.83983231]
[37.13268280 50.29536438]
[52.05916977 51.77858353]
[66.05197906 57.18240738]
[78.10095215 66.11673737]
[87.33626556 77.93659210]
[93.09150696 91.78981781]
[94.20716095 76.83135986]
[95.32280731 61.87290955]
[96.43845367 46.91445541]
[97.55410767 31.95600128]
[95.28603363 27.25462723]
[95.06974792 22.61711502]
[96.53733826 18.81432152]
[99.06826019 16.35937500]
[100.85072327 1.46565807]
[102.63319397 -13.42805958]
[104.41565704 -28.32177734]
[105.75389099 -43.26196289]
[106.64670563 -58.23536682]
[107.53952026 -73.20877075]
[108.43234253 -88.18218231]
[109.32515717 -103.15558624]
[110.21797180 -118.12899017]
[111.11078644 -133.10240173]
[112.00360107 -148.07580566]
[104.04164886 -158.22322083]
[105.09353638 -170.67622375]
[114.05187988 -178.80485535]
[115.16753387 -193.76330566]
[116.28318024 -208.72175598]
[117.39882660 -223.68020630]
[118.51448059 -238.63865662]
[119.63012695 -253.59712219]
[118.96034241 -268.58215332]
[116.51461029 -283.38143921]
[114.06888580 -298.18069458]
[111.62316132 -312.97998047]
[96.58869934 -314.01037598]
[82.19730377 -318.48077393]
[69.22509003 -326.15008545]
[58.37162018 -336.60470581]
[50.22221756 -349.28082275]
[45.21636581 -363.49484253]
[43.62402344 -378.48019409]
[45.53106689 -393.42877197]
[50.83464813 -407.53439331]
[59.24875259 -420.03637695]
[70.31961823 -430.26049805]
[83.45021057 -437.65539551]
[97.93241119 -441.82223511]
[112.98521423 -442.53634644]
[127.79682922 -439.75918579]
[141.56851196 -433.64056396]
[153.55754089 -424.51037598]
[163.11738586 -412.86108398]
[169.73248291 -399.32089233]
[173.04609680 -384.61996460]
[172.87951660 -369.55117798]
[169.24174500 -354.92709351]
[162.32894897 -341.53643799]
[152.51393127 -330.10131836]
[140.32598877 -321.23840332]
[126.42243195 -315.42568970]
[128.86816406 -300.62643433]
[131.31388855 -285.82714844]
[133.75961304 -271.02789307]
[138.78013611 -285.16275024]
[148.27882385 -296.77200317]
[161.13980103 -304.49179077]
[175.85215759 -307.41522217]
[190.68751526 -305.19885254]
[203.90301514 -298.10305786]
[213.94612122 -286.96142578]
[219.63697815 -273.08285522]
[220.30703735 -258.09783936]
[215.87756348 -243.76675415]
[206.86894226 -231.77322388]
[194.33949280 -223.52622986]
[179.76116943 -219.99462891]
[164.84660339 -221.59329224]
[151.34794617 -228.13442993]
[140.85101318 -238.84957886]
[134.58857727 -252.48146057]
[133.47293091 -237.52301025]
[132.35728455 -222.56455994]
[131.24163818 -207.60610962]
[130.12599182 -192.64765930]
[129.01033020 -177.68919373]
[137.47093201 -162.31437683]
[126.97700500 -147.18298340]
[126.08419037 -132.20957947]
[125.19137573 -117.23617554]
[124.29856110 -102.26277161]
[123.40574646 -87.28936005]
[122.51293182 -72.31595612]
[121.62011719 -57.34255219]
[120.72729492 -42.36914444]
[122.48496246 -40.18539810]
[123.48352814 -37.17383957]
[123.40335083 -33.62011337]
[122.03400421 -29.92019081]
[119.30937195 -26.53931046]
[117.52690887 -11.64559364]
[115.74444580 3.24812388]
[113.96197510 18.14184189]
[112.51255798 33.07165146]
[111.39691162 48.03010178]
[110.28125763 62.98855591]
[109.16561127 77.94700623]
[108.04996490 92.90546417]
[109.27693939 107.85519409]
[112.81661224 122.43157196]
[116.35628510 137.00794983]
[119.89595795 151.58432007]
[123.43563080 166.16070557]
[126.97530365 180.73707581]
[131.89997864 166.56852722]
[142.42295837 155.87895203]
[156.51239014 150.73233032]
[171.44784546 152.12237549]
[184.34550476 159.78071594]
[192.71505737 172.22863770]
[194.94044495 187.06263733]
[190.59201050 201.41851807]
[180.50933838 212.52435303]
[166.63925171 218.23580933]
[151.65985107 217.45008850]
[138.46340942 210.31889343]
[129.59744263 198.21797180]
[138.14242554 211.53314209]
[131.17639160 224.69837952]
[132.06921387 239.67179871]
[132.96202087 254.64520264]
[133.85484314 269.61859131]
[142.39982605 282.93377686]
[135.43377686 296.09902954]
[142.51148987 282.87380981]
[154.30630493 273.60653687]
[168.83061218 269.85891724]
[183.63677979 272.26248169]
[196.22975159 280.41217041]
[204.48735046 292.93463135]
[207.01803589 307.71960449]
[203.39535522 322.27557373]
[194.22979736 334.14959717]
[181.06588745 341.34066772]
[166.12200928 342.63702393]
[151.91645813 337.82012939]
[140.84312439 327.70178223]
[134.76768494 313.98544312]
[132.76367188 328.85098267]
[130.75965881 343.71652222]
[128.75564575 358.58203125]
[126.75164032 373.44757080]
[140.67771912 379.25503540]
[152.62559509 388.46972656]
[161.78065491 400.46334839]
[167.51869202 414.41818237]
[169.44847107 429.38278198]
[167.43840027 444.33676147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 204]
[17 203]
[18 202]
[19 201]
[20 200]
[21 186]
[23 184]
[24 183]
[25 182]
[26 181]
[28 179]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[34 161]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[64 155]
[65 154]
[66 153]
[67 152]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[84 116]
[85 115]
[86 114]
[87 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
