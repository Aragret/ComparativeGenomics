%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[93.05915833 642.00671387]
[83.87992096 653.88562012]
[73.58053589 664.80761719]
[62.26018906 674.66748047]
[50.02790833 683.37023926]
[37.00149918 690.83209229]
[23.30641937 696.98120117]
[9.07456017 701.75830078]
[-5.55701399 705.11749268]
[-20.44738770 707.02630615]
[-35.45315933 707.46636963]
[-50.42980576 706.43347168]
[-65.23309326 703.93756104]
[-79.72045135 700.00274658]
[-93.75236511 694.66674805]
[-107.19367981 687.98114014]
[-119.91495514 680.01019287]
[-131.79368591 670.83074951]
[-142.71543884 660.53112793]
[-152.57505798 649.21057129]
[-161.27758789 636.97808838]
[-168.73919678 623.95153809]
[-174.88803101 610.25634766]
[-179.66487122 596.02441406]
[-183.02372742 581.39276123]
[-184.93223572 566.50231934]
[-185.37200928 551.49658203]
[-184.33883667 536.51995850]
[-181.84265137 521.71673584]
[-177.90748596 507.22943115]
[-172.57125854 493.19763184]
[-165.88536072 479.75643921]
[-157.91415405 467.03530884]
[-148.73445129 455.15676880]
[-138.43461609 444.23522949]
[-127.11388397 434.37582397]
[-114.88125610 425.67355347]
[-101.85455322 418.21221924]
[-88.15922546 412.06365967]
[-73.92716980 407.28707886]
[-59.29546356 403.92852783]
[-44.40501404 402.02032471]
[-29.39922714 401.58084106]
[-14.42262077 402.61431885]
[0.38056692 405.11080933]
[14.86777020 409.04623413]
[28.89946556 414.38275146]
[35.57965851 400.95239258]
[42.25985336 387.52200317]
[48.94004822 374.09161377]
[54.08200836 360.00048828]
[57.62168121 345.42410278]
[61.16135406 330.84774780]
[64.70102692 316.27136230]
[68.24069977 301.69497681]
[71.78037262 287.11862183]
[74.66564178 272.39871216]
[76.89076233 257.56466675]
[79.11587524 242.73062134]
[81.34099579 227.89659119]
[83.01253510 212.99000549]
[84.12818146 198.03155518]
[77.35892487 184.76406860]
[86.10120392 171.57759094]
[87.21685028 156.61914062]
[88.33250427 141.66067505]
[85.95008087 137.52146912]
[86.14260101 131.84167480]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[82.90494537 78.65249634]
[77.63088989 66.03493500]
[79.26702118 52.56672668]
[87.27981567 41.75288391]
[99.49038696 36.35434341]
[101.27285004 21.46062660]
[103.05531311 6.56690979]
[104.83778381 -8.32680798]
[98.79519653 -22.94863129]
[107.99006653 -34.66629028]
[101.94747925 -49.28811264]
[111.14234924 -61.00577545]
[112.92481995 -75.89949036]
[114.70728302 -90.79321289]
[116.48974609 -105.68692780]
[118.27221680 -120.58064270]
[118.94200134 -135.56568909]
[110.79724884 -149.12936401]
[118.15217590 -162.08135986]
[117.70557404 -177.07472229]
[117.25896454 -192.06806946]
[116.81236267 -207.06141663]
[116.36575317 -222.05476379]
[112.98222351 -230.53942871]
[116.02579498 -237.27430725]
[115.80246735 -252.27264404]
[101.78294373 -258.22015381]
[91.39929199 -269.36016846]
[86.45053864 -283.76257324]
[87.79409027 -298.93212891]
[95.19716644 -312.24053955]
[107.37713623 -321.38211060]
[122.22375488 -324.77297974]
[137.16474915 -321.82565308]
[149.61149597 -313.05078125]
[157.40753174 -299.96865845]
[159.20213318 -284.84585571]
[154.68440247 -270.30249023]
[144.63702393 -258.85824585]
[130.80079651 -252.49597168]
[131.02412415 -237.49763489]
[131.35910034 -222.50137329]
[131.80570984 -207.50802612]
[132.25231934 -192.51467896]
[132.69892883 -177.52131653]
[133.14552307 -162.52796936]
[141.25833130 -150.03671265]
[133.93534851 -136.01228333]
[142.42018127 -148.38191223]
[155.91014099 -154.94094849]
[170.87899780 -153.97486877]
[183.41392517 -145.73620605]
[190.23832703 -132.37852478]
[189.56831360 -117.39350128]
[181.57902527 -104.69817352]
[168.35885620 -97.61106873]
[153.36351013 -97.98474884]
[140.51274109 -105.72153473]
[133.16593933 -118.79817963]
[131.38346863 -103.90446472]
[129.60099792 -89.01074219]
[127.81853485 -74.11702728]
[126.03607178 -59.22330856]
[132.20614624 -45.66678619]
[122.88378143 -32.88382721]
[129.05386353 -19.32730103]
[119.73149872 -6.54434204]
[117.94903564 8.34937572]
[116.16656494 23.24309349]
[114.38410187 38.13681030]
[126.77527618 48.90417862]
[130.34262085 65.09787750]
[123.48677063 80.37854004]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.29095459 142.77633667]
[102.17530823 157.73478699]
[101.05966187 172.69323730]
[107.74911499 187.03065491]
[99.08663940 199.14720154]
[97.97098541 214.10566711]
[110.86716461 206.44480896]
[124.95059967 211.60784912]
[129.83950806 225.78877258]
[121.92996979 238.53393555]
[107.05259705 240.44807434]
[96.17504120 230.12170410]
[93.94992065 244.95574951]
[91.72480774 259.78979492]
[89.49968719 274.62384033]
[102.17463684 266.60226440]
[116.83892059 269.75802612]
[125.09216309 282.28335571]
[122.20654297 297.00317383]
[109.83506012 305.48532104]
[95.06467438 302.87078857]
[86.35674286 290.65829468]
[82.81707764 305.23464966]
[79.27740479 319.81103516]
[75.73773193 334.38742065]
[72.19805908 348.96377563]
[68.65838623 363.54016113]
[78.94758606 352.62536621]
[92.45330048 346.09884644]
[107.39862061 344.81924438]
[121.81723022 348.95489502]
[133.81211853 357.96170044]
[141.80514526 370.65469360]
[144.74468994 385.36383057]
[142.24400330 400.15390015]
[134.63211060 413.07904053]
[122.91046906 422.43869019]
[108.62126160 427.00143433]
[93.64449310 426.16699219]
[79.95060730 420.04510498]
[69.34126282 409.44125366]
[63.21231461 395.75051880]
[62.37042618 380.77182007]
[55.69023132 394.20220947]
[49.01003647 407.63256836]
[42.32984161 421.06295776]
[55.05143738 429.03338623]
[66.93052673 438.21237183]
[77.85269928 448.51153564]
[87.71277618 459.83169556]
[96.41578674 472.06381226]
[103.87791443 485.09005737]
[110.02729797 498.78500366]
[114.80471039 513.01678467]
[118.16414642 527.64831543]
[120.07324982 542.53863525]
[120.51363373 557.54437256]
[119.48104858 572.52105713]
[116.98545837 587.32440186]
[113.05088043 601.81182861]
[107.71520996 615.84387207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 195]
[48 194]
[49 193]
[50 192]
[51 176]
[52 175]
[53 174]
[54 173]
[55 172]
[56 171]
[57 164]
[58 163]
[59 162]
[60 161]
[61 155]
[62 154]
[64 152]
[65 151]
[66 150]
[69 149]
[70 148]
[72 146]
[77 142]
[78 141]
[79 140]
[80 139]
[82 137]
[84 135]
[85 134]
[86 133]
[87 132]
[88 131]
[89 120]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
