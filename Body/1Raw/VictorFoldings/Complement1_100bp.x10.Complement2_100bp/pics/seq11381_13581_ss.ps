%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[78.85952759 744.25842285]
[64.49783325 739.89190674]
[50.60030365 734.21887207]
[37.28549957 727.28771973]
[24.66703033 719.15765381]
[12.85255146 709.89788818]
[1.94286096 699.58752441]
[-7.96896076 688.31457520]
[-16.79834747 676.17510986]
[-24.46996880 663.27270508]
[-30.91837120 649.71752930]
[-36.08853912 635.62518311]
[-39.93635941 621.11596680]
[-42.42900467 606.31353760]
[-43.54520798 591.34429932]
[-43.27544785 576.33587646]
[-41.62202072 561.41638184]
[-38.59904099 546.71313477]
[-34.23229218 532.35150146]
[-28.55903625 518.45404053]
[-21.62767410 505.13937378]
[-13.49734306 492.52105713]
[-4.23741055 480.70672607]
[6.07312059 469.79721069]
[17.34628105 459.88555908]
[29.48589134 451.05639648]
[42.38837814 443.38497925]
[55.94366074 436.93679810]
[70.03608704 431.76687622]
[84.54541779 427.91928101]
[99.34786987 425.42687988]
[98.23222351 410.46844482]
[97.11657715 395.50997925]
[96.00092316 380.55154419]
[87.04257965 372.42291260]
[85.99069214 359.96990967]
[93.95264435 349.82247925]
[85.47151947 337.57830811]
[92.37370300 323.34207153]
[91.48088837 308.36865234]
[90.58807373 293.39526367]
[89.69525909 278.42184448]
[88.80244446 263.44845581]
[86.42212677 260.84719849]
[85.18348694 256.96380615]
[85.67541504 252.34739685]
[88.21929932 247.78935242]
[87.99597168 232.79101562]
[86.08074951 230.74404907]
[84.86096954 227.81509399]
[84.67661285 224.26524353]
[85.76697540 220.47372437]
[88.23259735 216.89956665]
[88.90238190 201.91452026]
[89.57216644 186.92948914]
[90.24195099 171.94444275]
[90.80016327 156.95483398]
[91.24677277 141.96148682]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[78.35678864 83.51055145]
[65.25017548 76.09240723]
[54.30655289 65.75914764]
[46.15907288 53.11458969]
[41.27769470 38.89609528]
[39.94205856 23.93157578]
[42.22547150 9.09128284]
[47.99091339 -4.76280069]
[56.89924240 -16.82702637]
[68.42913818 -26.40269470]
[81.90760040 -32.93652725]
[96.54926300 -36.05263138]
[96.99587250 -51.04598236]
[94.12335968 -59.71699524]
[97.56239319 -66.25877380]
[98.23217773 -81.24381256]
[98.90196228 -96.22885132]
[99.57174683 -111.21389008]
[100.24153137 -126.19892883]
[100.91131592 -141.18395996]
[93.79794312 -155.31585693]
[102.09583282 -167.68495178]
[91.08562469 -157.49794006]
[76.10984039 -156.64585876]
[64.01521301 -165.51829529]
[60.33124542 -180.05886841]
[66.74218750 -193.61984253]
[80.31705475 -200.00129700]
[94.84959412 -196.28575134]
[103.69624329 -184.17008972]
[105.92136383 -199.00413513]
[108.14647675 -213.83818054]
[110.37159729 -228.67222595]
[112.59671021 -243.50627136]
[110.77494049 -252.45718384]
[114.96697235 -258.54394531]
[117.41269684 -273.34320068]
[103.60823059 -279.41671753]
[91.74839020 -288.73309326]
[82.57868195 -300.70672607]
[76.67553711 -314.58489990]
[74.41002655 -329.49523926]
[75.92455292 -344.50045776]
[81.12393188 -358.65734863]
[89.68130493 -371.07595825]
[101.05876160 -380.97567749]
[114.54109955 -387.73416138]
[129.28082275 -390.92660522]
[144.35134888 -390.35232544]
[158.80535889 -386.04739380]
[171.73425293 -378.28244019]
[182.32530212 -367.54556274]
[189.91276550 -354.51171875]
[194.01966858 -340.00018311]
[194.38784790 -324.92321777]
[190.99417114 -310.22851562]
[184.05197144 -296.83984375]
[173.99761963 -285.59881592]
[161.46316528 -277.21203613]
[147.23651123 -272.20672607]
[132.21197510 -270.89749146]
[129.76625061 -256.09820557]
[127.43075562 -241.28114319]
[125.20564270 -226.44711304]
[122.98052216 -211.61306763]
[120.75540161 -196.77902222]
[118.53028870 -181.94497681]
[117.08087158 -167.01516724]
[124.24214935 -153.95509338]
[115.89635468 -140.51417542]
[115.22657013 -125.52914429]
[114.55678558 -110.54410553]
[113.88700104 -95.55906677]
[113.21721649 -80.57402802]
[112.54743195 -65.58898926]
[111.98921967 -50.59937668]
[111.54261780 -35.60602570]
[125.97284698 -31.62396049]
[139.03851318 -24.29945755]
[149.97801208 -14.05449486]
[158.15246582 -1.48142588]
[163.08308411 12.69126034]
[164.47914124 27.64115524]
[162.25515747 42.49964523]
[156.53613281 56.40238190]
[147.65048218 68.53957367]
[136.11122131 78.20314026]
[122.58630371 84.82801819]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[106.24011993 142.40809631]
[105.79351044 157.40144348]
[108.66603088 166.07244873]
[105.22698975 172.61422729]
[104.55720520 187.59927368]
[103.88742065 202.58430481]
[103.21763611 217.56935120]
[102.99430847 232.56768799]
[103.21763611 247.56602478]
[103.77584839 262.55563354]
[104.66866302 277.52905273]
[105.56147766 292.50244141]
[106.45429230 307.47586060]
[107.34710693 322.44924927]
[115.89209747 335.76443481]
[108.92604828 348.92965698]
[119.41998291 364.06106567]
[110.95938110 379.43588257]
[112.07502747 394.39434814]
[113.19067383 409.35278320]
[114.30632782 424.31124878]
[129.31472778 424.58026123]
[144.23429871 426.23294067]
[158.93771362 429.25518799]
[173.29956055 433.62121582]
[187.19728088 439.29376221]
[200.51231384 446.22445679]
[213.13105774 454.35415649]
[224.94584656 463.61352539]
[235.85588074 473.92349243]
[245.76806641 485.19616699]
[254.59785461 497.33532715]
[262.26992798 510.23742676]
[268.71878052 523.79241943]
[273.88940430 537.88458252]
[277.73770142 552.39367676]
[280.23083496 567.19604492]
[281.34756470 582.16522217]
[281.07827759 597.17364502]
[279.42535400 612.09320068]
[276.40286255 626.79656982]
[272.03659058 641.15832520]
[266.36380005 655.05596924]
[259.43289185 668.37084961]
[251.30297852 680.98950195]
[242.04344177 692.80413818]
[231.73327637 703.71398926]
[220.46043396 713.62597656]
[208.32112122 722.45556641]
[195.41888428 730.12738037]
[181.86383057 736.57604980]
[167.77157593 741.74645996]
[153.26235962 745.59448242]
[138.45999146 748.08740234]
[123.49075317 749.20385742]
[108.48236084 748.93432617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 175]
[32 174]
[33 173]
[34 172]
[37 170]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[47 163]
[48 162]
[53 161]
[54 160]
[55 159]
[56 158]
[57 156]
[58 155]
[59 154]
[60 153]
[62 151]
[74 139]
[75 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[84 130]
[92 129]
[93 128]
[94 127]
[95 126]
[96 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
