%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[157.40417480 603.68212891]
[145.46038818 594.60113525]
[134.04458618 584.86468506]
[123.19266510 574.50347900]
[112.93877411 563.55004883]
[103.31517792 552.03894043]
[94.35215759 540.00634766]
[86.07791138 527.49011230]
[78.51847076 514.52966309]
[71.69763184 501.16571045]
[65.63684082 487.44033813]
[60.35517502 473.39672852]
[55.86925507 459.07907104]
[52.19318771 444.53237915]
[49.33854675 429.80249023]
[47.31431198 414.93569946]
[46.12685013 399.97879028]
[45.77989578 384.97885132]
[46.27454758 369.98303223]
[47.60924530 355.03854370]
[49.77978516 340.19241333]
[52.77934647 325.49133301]
[56.59848404 310.98156738]
[61.22518539 296.70877075]
[66.64488983 282.71783447]
[72.84054565 269.05282593]
[79.79266357 255.75669861]
[87.47937012 242.87129211]
[95.87647247 230.43714905]
[104.95755005 218.49340820]
[114.69403839 207.07763672]
[125.05529785 196.22575378]
[136.00872803 185.97190857]
[147.51986694 176.34835815]
[138.55917358 164.31896973]
[129.59846497 152.28959656]
[120.63777161 140.26022339]
[107.20665741 144.66394043]
[93.07210541 144.70802307]
[79.61378479 140.38818359]
[68.14534760 132.12606812]
[59.78623199 120.72814178]
[55.35236359 107.30695343]
[55.27653122 93.17253113]
[59.56613541 79.70454407]
[67.80247498 68.21758270]
[59.02186966 56.05612564]
[50.24126434 43.89466858]
[41.46066284 31.73321342]
[32.68006134 19.57175827]
[18.32868195 12.91229057]
[17.15159607 -1.93573117]
[8.37099171 -14.09718704]
[-4.60282230 -6.54424477]
[-18.25448990 -0.29934525]
[-32.45253372 4.57736826]
[-47.06021500 8.03892899]
[-61.93685532 10.05199909]
[-76.93917084 10.59719276]
[-91.92268372 9.66925716]
[-106.74309540 7.27713013]
[-121.25766754 3.44384956]
[-135.32661438 -1.79366696]
[-148.81443787 -8.38497829]
[-161.59124756 -16.26660347]
[-173.53398132 -25.36263847]
[-184.52761841 -35.58547974]
[-194.46630859 -46.83667374]
[-203.25430298 -59.00786209]
[-210.80699158 -71.98182678]
[-217.05162048 -85.63362122]
[-221.92805481 -99.83176422]
[-225.38931274 -114.43951416]
[-227.40208435 -129.31619263]
[-227.94699097 -144.31852722]
[-227.01875305 -159.30201721]
[-224.62632751 -174.12237549]
[-220.79275513 -188.63687134]
[-215.55496216 -202.70571899]
[-208.96337891 -216.19340515]
[-201.08149719 -228.97004700]
[-191.98521423 -240.91261292]
[-181.76216125 -251.90605164]
[-170.51077271 -261.84451294]
[-158.33940125 -270.63226318]
[-145.36528015 -278.18469238]
[-131.71336365 -284.42904663]
[-117.51512909 -289.30517578]
[-102.90731049 -292.76617432]
[-88.03059387 -294.77865601]
[-73.02825165 -295.32324219]
[-58.04477310 -294.39471436]
[-43.22446060 -292.00198364]
[-28.71004295 -288.16812134]
[-14.64130688 -282.93005371]
[-1.15374577 -276.33819580]
[11.62274456 -268.45605469]
[23.56511688 -259.35952759]
[34.55835724 -249.13626099]
[44.49658966 -237.88467407]
[53.28410339 -225.71311951]
[60.83626938 -212.73886108]
[67.08034515 -199.08682251]
[71.95620728 -184.88847351]
[75.41689301 -170.28059387]
[77.42906952 -155.40383911]
[77.97336578 -140.40148926]
[77.04453278 -125.41802216]
[74.65151215 -110.59775543]
[70.81735992 -96.08341980]
[65.57900238 -82.01478577]
[58.98688126 -68.52735901]
[51.10448837 -55.75102234]
[42.00774002 -43.80883408]
[31.78423882 -32.81579971]
[20.53244781 -22.87779045]
[29.31305122 -10.71633434]
[43.03638077 -4.92673492]
[44.84151459 10.79115486]
[53.62211990 22.95261002]
[62.40272141 35.11406708]
[71.18332672 47.27552414]
[79.96392822 59.43697739]
[95.05172729 55.02981567]
[110.73681641 56.05089569]
[125.12589264 62.37696838]
[136.48208618 73.24443054]
[143.43460083 87.34149170]
[145.14424133 102.96652985]
[141.40461731 118.23348999]
[132.66714478 131.29953003]
[141.62785339 143.32890320]
[150.58854675 155.35827637]
[159.54924011 167.38764954]
[172.06536865 159.11326599]
[185.02577209 151.55368042]
[198.38963318 144.73269653]
[212.11494446 138.67175293]
[226.15849304 133.38993835]
[240.47612000 128.90385437]
[255.02273560 125.22762299]
[269.75262451 122.37281799]
[284.61938477 120.34841919]
[299.57626343 119.16078949]
[314.57623291 118.81367493]
[329.57205200 119.30815125]
[344.51654053 120.64268494]
[359.36270142 122.81306458]
[374.06381226 125.81245422]
[388.57360840 129.63143921]
[402.84646606 134.25798035]
[416.83746338 139.67752075]
[430.50253296 145.87303162]
[443.79873657 152.82499695]
[456.68423462 160.51156616]
[469.11846924 168.90852356]
[481.06231689 177.98947144]
[492.47817993 187.72583008]
[503.33020020 198.08697510]
[513.58416748 209.04028320]
[523.20782471 220.55131531]
[532.17095947 232.58384705]
[540.44531250 245.10000610]
[548.00482178 258.06042480]
[554.82574463 271.42431641]
[560.88665771 285.14965820]
[566.16845703 299.19323730]
[570.65447998 313.51086426]
[574.33062744 328.05749512]
[577.18536377 342.78738403]
[579.20971680 357.65414429]
[580.39727783 372.61105347]
[580.74438477 387.61099243]
[580.24981689 402.60681152]
[578.91522217 417.55133057]
[576.74481201 432.39746094]
[573.74536133 447.09857178]
[569.92633057 461.60836792]
[565.29974365 475.88119507]
[559.88012695 489.87216187]
[553.68457031 503.53723145]
[546.73254395 516.83337402]
[539.04595947 529.71887207]
[530.64892578 542.15307617]
[521.56793213 554.09686279]
[511.83154297 565.51269531]
[501.47036743 576.36468506]
[490.51699829 586.61859131]
[479.00595093 596.24224854]
[466.97338867 605.20532227]
[454.45718384 613.47961426]
[441.49673462 621.03906250]
[428.13281250 627.85998535]
[414.40747070 633.92083740]
[400.36389160 639.20251465]
[386.04623413 643.68853760]
[371.49957275 647.36462402]
[356.76968384 650.21936035]
[341.90289307 652.24365234]
[326.94598389 653.43115234]
[311.94604492 653.77813721]
[296.95022583 653.28356934]
[282.00573730 651.94891357]
[267.15960693 649.77844238]
[252.45849609 646.77893066]
[237.94873047 642.95983887]
[223.67591858 638.33319092]
[209.68496704 632.91351318]
[196.01992798 626.71795654]
[182.72377014 619.76586914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 134]
[35 133]
[36 132]
[37 131]
[46 123]
[47 122]
[48 121]
[49 120]
[50 119]
[52 117]
[53 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
