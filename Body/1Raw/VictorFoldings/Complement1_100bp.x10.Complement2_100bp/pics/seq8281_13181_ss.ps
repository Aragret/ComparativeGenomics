%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[192.10592651 306.91061401]
[193.69790649 291.98684692]
[196.50102234 277.24252319]
[200.49662781 262.77572632]
[205.65811157 248.68276978]
[211.95115662 235.05740356]
[219.33384705 221.99032593]
[227.75706482 209.56848145]
[216.06948853 200.16633606]
[204.38191223 190.76417542]
[192.69432068 181.36203003]
[181.00674438 171.95986938]
[166.24018860 170.01098633]
[160.33729553 155.33221436]
[148.51103210 146.10510254]
[136.54869080 137.05511475]
[124.58635712 128.00511169]
[112.62402344 118.95510864]
[101.99013519 122.68703461]
[90.86891937 120.86349487]
[81.98366547 113.93103790]
[77.51013947 103.58723450]
[78.54378510 92.36501312]
[66.85620880 82.96286011]
[51.25368118 80.34146118]
[46.18676376 66.33518982]
[34.49918365 56.93304062]
[22.81160164 47.53088760]
[7.30816555 49.04126740]
[-4.41076660 39.33965302]
[-5.75513792 24.55018997]
[-17.44271851 15.14803791]
[-29.13030052 5.74588680]
[-39.36493301 16.72107315]
[-50.37340164 26.91989708]
[-62.09697342 36.28794098]
[-74.47309875 44.77522278]
[-87.43573761 52.33646011]
[-100.91574097 58.93130875]
[-114.84117126 64.52458191]
[-129.13774109 69.08644104]
[-143.72917175 72.59253693]
[-158.53759766 75.02416992]
[-173.48402405 76.36836243]
[-188.48869324 76.61794281]
[-203.47154236 75.77158356]
[-218.35266113 73.83380127]
[-233.05261230 70.81492615]
[-247.49299622 66.73107910]
[-261.59674072 61.60403442]
[-275.28863525 55.46115494]
[-288.49557495 48.33521652]
[-301.14712524 40.26423645]
[-313.17578125 31.29128075]
[-324.51733398 21.46422195]
[-335.11132812 10.83549213]
[-344.90121460 -0.53819728]
[-353.83471680 -12.59616280]
[-361.86422729 -25.27407074]
[-368.94689941 -38.50427628]
[-375.04492188 -52.21619034]
[-380.12576294 -66.33665466]
[-384.16229248 -80.79032898]
[-387.13302612 -95.50009155]
[-389.02209473 -110.38746643]
[-389.81936646 -125.37301636]
[-389.52066040 -140.37678528]
[-388.12753296 -155.31872559]
[-385.64743042 -170.11912537]
[-382.09359741 -184.69898987]
[-377.48495483 -198.98054504]
[-371.84609985 -212.88758850]
[-365.20715332 -226.34591675]
[-357.60351562 -239.28373718]
[-349.07577515 -251.63200378]
[-339.66937256 -263.32482910]
[-329.43457031 -274.29986572]
[-318.42593384 -284.49850464]
[-306.70220947 -293.86636353]
[-294.32595825 -302.35342407]
[-281.36318970 -309.91445923]
[-267.88308716 -316.50909424]
[-253.95755005 -322.10214233]
[-239.66090393 -326.66375732]
[-225.06942749 -330.16961670]
[-210.26095581 -332.60101318]
[-195.31451416 -333.94494629]
[-180.30982971 -334.19427490]
[-165.32698059 -333.34768677]
[-150.44590759 -331.40963745]
[-135.74600220 -328.39053345]
[-121.30568695 -324.30645752]
[-107.20201874 -319.17916870]
[-93.51024628 -313.03607178]
[-80.30342102 -305.90991211]
[-67.65200043 -297.83871460]
[-55.62349701 -288.86557007]
[-44.28208160 -279.03833008]
[-33.68827438 -268.40942383]
[-23.89858818 -257.03558350]
[-14.96526051 -244.97746277]
[-6.93595600 -232.29942322]
[0.14648592 -219.06909180]
[6.24427748 -205.35708618]
[11.32488346 -191.23654175]
[15.36119652 -176.78279114]
[18.33168030 -162.07298279]
[20.22048759 -147.18557739]
[21.01753998 -132.20001221]
[20.71858215 -117.19625092]
[19.32521439 -102.25432587]
[16.84486580 -87.45397949]
[13.29077339 -72.87417603]
[8.68189907 -58.59269333]
[3.04283309 -44.68574142]
[-3.59633684 -31.22751427]
[-11.20018768 -18.28982353]
[-19.72814941 -5.94169426]
[-8.04056740 3.46045685]
[3.64701343 12.86260796]
[18.38114166 11.00759697]
[30.36794853 20.37622070]
[32.21375275 35.84330750]
[43.90133286 45.24546051]
[55.58891296 54.64760971]
[70.35546875 56.59650421]
[76.25836182 71.27527618]
[87.94593811 80.67742920]
[105.76206207 77.96682739]
[119.97025299 89.05235291]
[121.67401886 106.99277496]
[133.63635254 116.04277039]
[145.59869385 125.09277344]
[157.56103516 134.14277649]
[164.06347656 135.33850098]
[168.34344482 139.07733154]
[169.73945618 143.64462280]
[185.34197998 146.26602173]
[190.40888977 160.27229309]
[202.09648132 169.67443848]
[213.78405762 179.07659912]
[225.47163391 188.47874451]
[237.15922546 197.88090515]
[247.48828125 186.99223328]
[258.67053223 176.98170471]
[270.63150024 167.91596985]
[283.29162598 159.85531616]
[296.56665039 152.85342407]
[310.36822510 146.95687866]
[324.60449219 142.20491028]
[339.18075562 138.62915039]
[353.99993896 136.25340271]
[368.96347046 135.09346008]
[383.97177124 135.15705872]
[398.92492676 136.44377136]
[413.72344971 138.94503784]
[428.26885986 142.64419556]
[442.46435547 147.51664734]
[456.21548462 153.52996826]
[469.43066406 160.64411926]
[482.02203369 168.81176758]
[493.90576172 177.97856140]
[505.00274658 188.08349609]
[515.23913574 199.05931091]
[524.54687500 210.83297729]
[532.86395264 223.32614136]
[540.13500977 236.45565796]
[546.31170654 250.13415527]
[551.35296631 264.27059937]
[555.22509766 278.77090454]
[557.90252686 293.53857422]
[559.36724854 308.47537231]
[559.60961914 323.48181152]
[558.62805176 338.45812988]
[556.42901611 353.30456543]
[553.02716064 367.92236328]
[548.44512939 382.21423340]
[542.71343994 396.08508301]
[535.87017822 409.44259644]
[527.96093750 422.19784546]
[519.03833008 434.26596069]
[509.16171265 445.56668091]
[498.39685059 456.02471924]
[486.81539917 465.57052612]
[474.49438477 474.14056396]
[461.51583862 481.67782593]
[447.96612549 488.13211060]
[433.93539429 493.46047974]
[419.51702881 497.62747192]
[404.80700684 500.60537720]
[389.90319824 502.37435913]
[374.90478516 502.92263794]
[359.91162109 502.24655151]
[345.02340698 500.35064697]
[330.33929443 497.24752808]
[315.95697021 492.95782471]
[301.97216797 487.51007080]
[288.47793579 480.94058228]
[275.56408691 473.29299927]
[263.31652832 464.61828613]
[251.81683350 454.97415161]
[241.14149475 444.42474365]
[231.36155701 433.04031372]
[222.54209900 420.89657593]
[214.74182129 408.07440186]
[208.01263428 394.65905762]
[202.39932251 380.73989868]
[197.93923950 366.40948486]
[194.66206360 351.76321411]
[192.58961487 336.89859009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 143]
[9 142]
[10 141]
[11 140]
[12 139]
[14 137]
[15 134]
[16 133]
[17 132]
[18 131]
[23 128]
[24 127]
[26 125]
[27 124]
[28 123]
[31 120]
[32 119]
[33 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
