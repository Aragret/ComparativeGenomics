%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[39.06197357 659.62457275]
[26.48535347 667.82409668]
[13.13229465 674.68701172]
[-0.85565323 680.14062500]
[-15.33020973 684.12695312]
[-30.13793755 686.60394287]
[-45.12186432 687.54516602]
[-60.12315369 686.94073486]
[-74.98278809 684.79705811]
[-89.54323578 681.13677979]
[-103.65015411 675.99884033]
[-117.15400696 669.43756104]
[-129.91163635 661.52258301]
[-141.78781128 652.33782959]
[-152.65663147 641.98052979]
[-162.40289307 630.56060791]
[-170.92326355 618.19909668]
[-178.12744141 605.02703857]
[-183.93904114 591.18402100]
[-188.29646301 576.81677246]
[-191.15351868 562.07769775]
[-192.47991943 547.12292480]
[-192.26159668 532.11102295]
[-190.50088501 517.20117188]
[-187.21643066 502.55139160]
[-182.44305420 488.31695557]
[-176.23136902 474.64880371]
[-168.64720154 461.69177246]
[-159.77095032 449.58325195]
[-149.69673157 438.45156860]
[-138.53132629 428.41476440]
[-126.39307404 419.57922363]
[-113.41067505 412.03857422]
[-99.72174072 405.87277222]
[-85.47137451 401.14718628]
[-70.81063843 397.91192627]
[-55.89495850 396.20123291]
[-40.88243484 396.03329468]
[-25.93221474 397.40988159]
[-11.20277882 400.31637573]
[-6.80178070 385.97653198]
[-2.40078235 371.63668823]
[2.00021553 357.29684448]
[-1.66238463 342.85958862]
[9.78336430 331.93685913]
[4.93816805 315.07000732]
[18.52282906 302.63867188]
[22.70984077 288.23486328]
[26.89685249 273.83108521]
[23.01970863 259.44995117]
[34.30156708 248.35806274]
[38.48857880 233.95428467]
[42.67558670 219.55049133]
[46.86259842 205.14671326]
[51.04961014 190.74293518]
[55.23662186 176.33915710]
[59.42363358 161.93536377]
[48.65732193 172.37982178]
[34.87365341 178.29678345]
[19.88610268 178.90777588]
[5.66654062 174.13241577]
[-5.91420507 164.59898376]
[-13.33248711 151.56176758]
[-15.61230469 136.73603821]
[-12.45370674 122.07236481]
[-4.27226210 109.50001526]
[7.85561943 100.67309570]
[22.33430672 96.75293732]
[37.25888062 98.25531769]
[50.66575241 104.98255157]
[60.79102325 116.04956818]
[66.30253601 130.00032043]
[66.47475433 145.00166321]
[73.74798584 131.88296509]
[81.02120972 118.76427460]
[88.29444122 105.64558411]
[95.17385864 92.31615448]
[101.65335083 78.78781128]
[108.13285065 65.25946045]
[107.11586761 49.47097397]
[119.59181213 41.33463287]
[120.47640991 32.24313736]
[126.26980591 27.65420151]
[132.94999695 14.22382450]
[131.38215637 -4.12347412]
[146.37406921 -13.24539089]
[152.85356140 -26.77373695]
[159.33306885 -40.30208206]
[165.81256104 -53.83042908]
[172.29205322 -67.35877228]
[171.27507019 -83.14726257]
[183.75102234 -91.28359985]
[190.23051453 -104.81195068]
[196.71000671 -118.34029388]
[203.18951416 -131.86863708]
[209.66900635 -145.39698792]
[216.14849854 -158.92532349]
[215.13151550 -174.71382141]
[227.60746765 -182.85015869]
[215.11634827 -191.20196533]
[203.94100952 -201.24650574]
[194.30897522 -212.77926636]
[186.41633606 -225.56547546]
[180.42378235 -239.34480286]
[176.45329285 -253.83673096]
[174.58572388 -268.74621582]
[174.85910034 -283.76974487]
[177.26783752 -298.60140991]
[181.76290894 -312.93930054]
[188.25280762 -326.49151611]
[196.60537720 -338.98211670]
[206.65060425 -350.15682983]
[218.18397522 -359.78814697]
[230.97065735 -367.67999268]
[244.75036621 -373.67169189]
[259.24255371 -377.64129639]
[274.15216064 -379.50793457]
[289.17565918 -379.23361206]
[304.00717163 -376.82397461]
[318.34478760 -372.32800293]
[331.89657593 -365.83728027]
[344.38668823 -357.48391724]
[355.56076050 -347.43801880]
[365.19137573 -335.90405273]
[373.08242798 -323.11688232]
[379.07327271 -309.33679199]
[383.04196167 -294.84439087]
[384.90768433 -279.93466187]
[384.63244629 -264.91116333]
[382.22189331 -250.07978821]
[377.72503662 -235.74246216]
[371.23345947 -222.19105530]
[362.87933350 -209.70149231]
[352.83273315 -198.52801514]
[341.29818726 -188.89813232]
[328.51049805 -181.00785828]
[314.73007202 -175.01785278]
[300.23739624 -171.05006409]
[285.32757568 -169.18527222]
[270.30410767 -169.46144104]
[255.47286987 -171.87292480]
[241.13580322 -176.37066650]
[242.61624146 -161.54981995]
[229.67684937 -152.44583130]
[223.19734192 -138.91749573]
[216.71784973 -125.38914490]
[210.23835754 -111.86079407]
[203.75886536 -98.33245087]
[197.27937317 -84.80410767]
[198.75981140 -69.98325348]
[185.82040405 -60.87927628]
[179.34091187 -47.35093307]
[172.86140442 -33.82258606]
[166.38191223 -20.29424095]
[159.90242004 -6.76589537]
[163.62483215 4.74367332]
[158.33737183 16.06739044]
[146.38038635 20.90402031]
[139.70018005 34.33439636]
[133.12016296 47.81412888]
[134.60060120 62.63497925]
[121.66119385 71.73896027]
[115.18169403 85.26730347]
[108.70220184 98.79564667]
[109.46767426 101.74582672]
[109.17660522 105.03973389]
[107.69963837 108.28658295]
[105.05355835 111.05326080]
[101.41313934 112.91881561]
[94.13990784 126.03750610]
[86.86667633 139.15620422]
[79.59344482 152.27490234]
[73.82741547 166.12237549]
[69.64040375 180.52616882]
[65.45339203 194.92994690]
[61.26638031 209.33372498]
[57.07936859 223.73750305]
[52.89236069 238.14129639]
[48.70534897 252.54507446]
[52.28300858 267.95645142]
[41.30063248 278.01809692]
[37.11362457 292.42187500]
[32.92661285 306.82568359]
[38.44333267 318.48452759]
[34.65943146 330.39526367]
[24.12321091 336.33786011]
[27.47102356 351.80081177]
[16.34006310 361.69784546]
[11.93906498 376.03768921]
[7.53806686 390.37753296]
[3.13706851 404.71737671]
[16.96105385 410.57412720]
[30.10956383 417.82122803]
[42.44321823 426.38189697]
[53.83126831 436.16537476]
[64.15299988 447.06793213]
[73.29898834 458.97402954]
[81.17229462 471.75741577]
[87.68944550 485.28262329]
[92.78136444 499.40621948]
[96.39406586 513.97851562]
[98.48925781 528.84509277]
[99.04472351 543.84826660]
[98.05458832 558.82904053]
[95.52933502 573.62860107]
[91.49574280 588.09008789]
[85.99655914 602.06018066]
[79.09008789 615.39074707]
[70.84954071 627.94055176]
[61.36226273 639.57653809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 191]
[41 190]
[42 189]
[43 188]
[45 186]
[47 183]
[48 182]
[49 181]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[56 174]
[57 173]
[73 172]
[74 171]
[75 170]
[76 169]
[77 164]
[78 163]
[79 162]
[81 160]
[83 159]
[84 158]
[86 155]
[87 154]
[88 153]
[89 152]
[90 151]
[92 149]
[93 148]
[94 147]
[95 146]
[96 145]
[97 144]
[99 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
