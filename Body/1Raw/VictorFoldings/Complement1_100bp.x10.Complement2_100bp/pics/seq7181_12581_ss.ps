%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[109.67973328 824.38110352]
[94.90817261 821.74029541]
[80.34859467 818.10827637]
[66.06743622 813.50158691]
[52.12984467 807.94134521]
[38.59943008 801.45281982]
[25.53792381 794.06567383]
[13.00492096 785.81359863]
[1.05760956 776.73425293]
[-10.24949741 766.86901855]
[-20.86480904 756.26300049]
[-30.73988724 744.96453857]
[-39.82967758 733.02514648]
[-48.09270096 720.49932861]
[-55.49125671 707.44427490]
[-61.99158478 693.91955566]
[-67.56403351 679.98681641]
[-72.18316650 665.70971680]
[-75.82791138 651.15332031]
[-78.48163605 636.38403320]
[-80.13224030 621.46936035]
[-80.77217865 606.47723389]
[-80.39854431 591.47613525]
[-79.01303864 576.53448486]
[-76.62197876 561.72039795]
[-73.23628235 547.10162354]
[-68.87138367 532.74468994]
[-63.54721451 518.71520996]
[-57.28806305 505.07717896]
[-50.12248230 491.89282227]
[-42.08317566 479.22229004]
[-33.20682144 467.12338257]
[-23.53392220 455.65133667]
[-13.10861111 444.85848999]
[-1.97845805 434.79406738]
[9.80575180 425.50399780]
[22.19025040 417.03067017]
[35.11853027 409.41275024]
[48.53159714 402.68502808]
[62.36825562 396.87814331]
[76.56536865 392.01861572]
[91.05815887 388.12863159]
[105.78050232 385.22595215]
[120.66521454 383.32376099]
[119.77239990 368.35037231]
[118.87958527 353.37695312]
[117.98676300 338.40356445]
[117.09394836 323.43014526]
[101.28313446 317.47378540]
[89.62834930 305.16528320]
[84.50953674 288.94766235]
[87.00269318 272.06915283]
[96.65409851 257.93261719]
[111.56197357 249.40940857]
[110.22373962 234.46922302]
[108.88550568 219.52903748]
[107.10303497 204.63533020]
[104.87792206 189.80128479]
[102.65280151 174.96723938]
[98.55185699 168.81874084]
[100.50669098 159.89593506]
[98.50267792 145.03041077]
[96.49866486 130.16488647]
[94.49465179 115.29935455]
[85.67522430 107.69284821]
[84.20520782 96.13948059]
[90.83880615 86.56677246]
[81.51643372 73.78381348]
[87.68651581 60.22729111]
[85.90405273 45.33357239]
[84.12158966 30.43985558]
[82.33911896 15.54613876]
[80.55665588 0.65242165]
[66.46769714 -0.56438178]
[52.89604568 -4.51959229]
[40.36840820 -11.05760384]
[29.37054253 -19.92261505]
[20.32845497 -30.76863670]
[13.59187603 -43.17300034]
[9.42074776 -56.65282440]
[7.97518349 -70.68381500]
[9.30932903 -84.72064209]
[13.36933517 -98.21817780]
[19.99552917 -110.65260315]
[28.92868996 -121.54180145]
[39.82019806 -130.46398926]
[52.24562454 -137.07412720]
[65.72129059 -141.11717224]
[64.38305664 -156.05735779]
[63.04482269 -170.99754333]
[61.70658493 -185.93772888]
[52.76894760 -198.99258423]
[59.33992386 -212.35939026]
[58.00168991 -227.29957581]
[43.34540176 -231.16856384]
[30.89803696 -239.81950378]
[22.16267395 -252.20777893]
[18.19415283 -266.83743286]
[19.47168922 -281.94186401]
[25.84101677 -295.69711304]
[36.53300858 -306.44223022]
[50.25654984 -312.87963867]
[65.35446167 -314.23199463]
[80.00359344 -310.33599854]
[92.43499756 -301.66213989]
[101.14751434 -289.25778198]
[105.08906555 -274.62084961]
[103.78369904 -259.51879883]
[97.38903046 -245.77528381]
[86.67726135 -235.04991150]
[72.94187164 -228.63780212]
[74.28011322 -213.69763184]
[83.12202454 -201.71139526]
[76.64677429 -187.27595520]
[77.98500824 -172.33578491]
[79.32324219 -157.39559937]
[80.66147614 -142.45541382]
[96.43644714 -140.46243286]
[111.38519287 -135.02453613]
[124.76493835 -126.40870667]
[135.91018677 -115.03997803]
[144.26576233 -101.48036194]
[149.41455078 -86.40111542]
[151.09823608 -70.54951477]
[149.23031616 -54.71178055]
[143.90051270 -39.67412949]
[135.37048340 -26.18371773]
[124.06094360 -14.91153145]
[110.53099060 -6.41899920]
[95.45037079 -1.13004422]
[97.23284149 13.76367283]
[99.01530457 28.65739059]
[100.79776764 43.55110931]
[102.58023834 58.44482422]
[111.77510834 70.16248322]
[105.73252106 84.78430939]
[116.12969971 97.94770813]
[109.36018372 113.29534149]
[111.36419678 128.16087341]
[113.36820984 143.02639771]
[115.37222290 157.89192200]
[117.48684692 172.74212646]
[119.71196747 187.57617188]
[121.93708038 202.41020203]
[124.76116180 205.70846558]
[126.24005890 209.36598206]
[126.42601013 212.91574097]
[125.51755524 215.95570374]
[123.82569122 218.19081116]
[125.16392517 233.13099670]
[126.50215912 248.07118225]
[139.17247009 251.82145691]
[149.78857422 259.63537598]
[157.09973145 270.56533813]
[160.25376892 283.29840088]
[158.89636230 296.31375122]
[153.21064758 308.06451416]
[143.89289856 317.16143799]
[132.06735229 322.53732300]
[132.96017456 337.51074219]
[133.85298157 352.48413086]
[134.74580383 367.45755005]
[135.63862610 382.43093872]
[150.64390564 382.55087280]
[165.60685730 383.68353271]
[180.45921326 385.82376099]
[195.13319397 388.96179199]
[209.56184387 393.08331299]
[223.67935181 398.16949463]
[237.42126465 404.19714355]
[250.72489929 411.13876343]
[263.52957153 418.96267700]
[275.77682495 427.63317871]
[287.41079712 437.11071777]
[298.37838745 447.35202026]
[308.62957764 458.31042480]
[318.11758423 469.93585205]
[326.79910278 482.17532349]
[334.63452148 494.97293091]
[341.58810425 508.27032471]
[347.62811279 522.00683594]
[352.72698975 536.11975098]
[356.86148071 550.54467773]
[360.01269531 565.21582031]
[362.16629028 580.06622314]
[363.31240845 595.02819824]
[363.44583130 610.03332520]
[362.56594849 625.01330566]
[360.67678833 639.89965820]
[357.78695679 654.62451172]
[353.90963745 669.12072754]
[349.06253052 683.32208252]
[343.26773071 697.16381836]
[336.55169678 710.58270264]
[328.94509888 723.51763916]
[320.48260498 735.90954590]
[311.20281982 747.70190430]
[301.14813232 758.84082031]
[290.36437988 769.27557373]
[278.90078735 778.95849609]
[266.80963135 787.84539795]
[254.14613342 795.89575195]
[240.96803284 803.07287598]
[227.33547974 809.34393311]
[213.31065369 814.68035889]
[198.95758057 819.05780029]
[184.34172058 822.45623779]
[169.52976990 824.86022949]
[154.58932495 826.25878906]
[139.58854675 826.64556885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 163]
[45 162]
[46 161]
[47 160]
[48 159]
[54 151]
[55 150]
[56 149]
[57 144]
[58 143]
[59 142]
[61 141]
[62 140]
[63 139]
[64 138]
[67 136]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[88 117]
[89 116]
[90 115]
[91 114]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
