%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[130.90548706 657.79125977]
[117.89894867 650.30969238]
[105.37765503 642.04162598]
[93.38909912 633.01843262]
[81.97875977 623.27429199]
[71.18992615 612.84619141]
[61.06351852 601.77374268]
[51.63794708 590.09887695]
[42.94897461 577.86590576]
[35.02955246 565.12127686]
[27.90972900 551.91326904]
[21.61650848 538.29199219]
[16.17376518 524.30914307]
[11.60214520 510.01773071]
[7.91899014 495.47201538]
[5.13827085 480.72714233]
[3.27053642 465.83905029]
[2.32287145 450.86422729]
[2.29887104 435.85946655]
[3.19862628 420.88165283]
[5.01872396 405.98767090]
[7.75225973 391.23397827]
[11.38886452 376.67654419]
[15.91474247 362.37060547]
[21.31272697 348.37042236]
[27.56233978 334.72909546]
[34.63987350 321.49835205]
[42.51848221 308.72842407]
[51.16828156 296.46774292]
[60.55645370 284.76278687]
[70.64739227 273.65798950]
[81.40280914 263.19543457]
[92.78191376 253.41487122]
[104.74154663 244.35336304]
[117.23632050 236.04528809]
[130.21885681 228.52215576]
[143.63989258 221.81251526]
[137.77093506 208.00834656]
[125.67074585 199.32302856]
[127.39170074 183.59570312]
[121.52274323 169.79153442]
[115.65378571 155.98735046]
[109.78482056 142.18318176]
[103.91586304 128.37899780]
[89.23450470 126.54817963]
[77.42447662 117.63653564]
[71.63569641 104.02095032]
[73.41212463 89.33291626]
[82.27996063 77.48995972]
[76.41100311 63.68578339]
[70.54203796 49.88160706]
[64.16343689 36.30540085]
[50.95870972 27.59071159]
[51.99721909 12.73235416]
[45.11780930 -0.59707487]
[38.23839569 -13.92650414]
[31.35898209 -27.25593376]
[24.47957039 -40.58536148]
[17.60015678 -53.91479111]
[10.72074509 -67.24422455]
[3.84133220 -80.57364655]
[-3.03808022 -93.90307617]
[-9.91749287 -107.23250580]
[-23.97120857 -101.94010162]
[-38.54431915 -98.31504822]
[-53.43973541 -96.40637207]
[-68.45602417 -96.23989868]
[-83.39009094 -97.81787109]
[-98.03998566 -101.11894989]
[-112.20758057 -106.09849548]
[-125.70127106 -112.68915558]
[-138.33857727 -120.80181122]
[-149.94857788 -130.32673645]
[-160.37428284 -141.13513184]
[-169.47468567 -153.08081055]
[-177.12670898 -166.00222778]
[-183.22686768 -179.72462463]
[-187.69268799 -194.06245422]
[-190.46374512 -208.82177734]
[-191.50257874 -223.80300903]
[-190.79512024 -238.80354309]
[-188.35096741 -253.62051392]
[-184.20315552 -268.05352783]
[-178.40779114 -281.90744019]
[-171.04324341 -294.99481201]
[-162.20909119 -307.13873291]
[-152.02484131 -318.17492676]
[-140.62820435 -327.95413208]
[-128.17329407 -336.34411621]
[-114.82858276 -343.23144531]
[-100.77451324 -348.52291870]
[-86.20115662 -352.14697266]
[-71.30561066 -354.05465698]
[-56.28931808 -354.22012329]
[-41.35535049 -352.64117432]
[-26.70567703 -349.33911133]
[-12.53841686 -344.35861206]
[0.95483387 -337.76705933]
[13.59159374 -329.65356445]
[25.20096588 -320.12786865]
[35.62594604 -309.31878662]
[44.72554779 -297.37249756]
[52.37671280 -284.45056152]
[58.47596359 -270.72775269]
[62.94081497 -256.38961792]
[65.71089172 -241.63011169]
[66.74871826 -226.64880371]
[66.04027557 -211.64833069]
[63.59513092 -196.83151245]
[59.44635773 -182.39877319]
[53.65006256 -168.54527283]
[46.28463364 -155.45835876]
[37.44968414 -143.31504822]
[27.26469040 -132.27954102]
[15.86739635 -122.50108337]
[3.41193628 -114.11192322]
[10.29134846 -100.78249359]
[17.17076111 -87.45306396]
[24.05017471 -74.12363434]
[30.92958641 -60.79420471]
[37.80899811 -47.46477509]
[44.68841171 -34.13534546]
[51.56782532 -20.80591583]
[58.44723511 -7.47648764]
[65.32665253 5.85294199]
[78.03931427 13.61422062]
[77.49286652 29.42598724]
[84.47105408 16.14800453]
[99.17352295 13.17522049]
[110.76215363 22.69906425]
[110.69424438 37.69890976]
[99.01985168 47.11743164]
[84.34621429 44.01264572]
[90.21517944 57.81682205]
[96.08413696 71.62100220]
[110.76549530 73.45182037]
[122.57552338 82.36346436]
[128.36430359 95.97904968]
[126.58787537 110.66708374]
[117.72003937 122.51004028]
[123.58899689 136.31420898]
[129.45796204 150.11839294]
[135.32691956 163.92257690]
[141.19587708 177.72674561]
[153.71586609 187.39941406]
[151.57511902 202.13938904]
[157.44407654 215.94355774]
[171.58782959 210.93379211]
[186.01316833 206.80422974]
[200.66537476 203.57054138]
[215.48884583 201.24499512]
[230.42736816 199.83641052]
[245.42428589 199.35012817]
[260.42266846 199.78799438]
[275.36566162 201.14834595]
[290.19656372 203.42602539]
[304.85913086 206.61238098]
[319.29772949 210.69534302]
[333.45758057 215.65942383]
[347.28500366 221.48577881]
[360.72750854 228.15232849]
[373.73410034 235.63375854]
[386.25549316 243.90168762]
[398.24414062 252.92477417]
[409.65457153 262.66879272]
[420.44351196 273.09674072]
[430.57000732 284.16912842]
[439.99569702 295.84387207]
[448.68478394 308.07675171]
[456.60433960 320.82135010]
[463.72430420 334.02929688]
[470.01763916 347.65051270]
[475.46054077 361.63330078]
[480.03228760 375.92465210]
[483.71560669 390.47033691]
[486.49645996 405.21517944]
[488.36434937 420.10324097]
[489.31213379 435.07806396]
[489.33630371 450.08285522]
[488.43667603 465.06063843]
[486.61672974 479.95465088]
[483.88336182 494.70837402]
[480.24688721 509.26583862]
[475.72116089 523.57183838]
[470.32330322 537.57208252]
[464.07382202 551.21343994]
[456.99642944 564.44427490]
[449.11791992 577.21429443]
[440.46826172 589.47503662]
[431.08020020 601.18011475]
[420.98937988 612.28497314]
[410.23406982 622.74761963]
[398.85504150 632.52832031]
[386.89550781 641.58996582]
[374.40081787 649.89813232]
[361.41833496 657.42138672]
[347.99737549 664.13116455]
[334.18878174 670.00201416]
[320.04498291 675.01159668]
[305.61959839 679.14105225]
[290.96737671 682.37457275]
[276.14385986 684.70001221]
[261.20532227 686.10839844]
[246.20841980 686.59454346]
[231.21003723 686.15655518]
[216.26704407 684.79608154]
[201.43615723 682.51824951]
[186.77363586 679.33172607]
[172.33508301 675.24859619]
[158.17526245 670.28442383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 147]
[38 146]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[49 135]
[50 134]
[51 133]
[52 127]
[54 125]
[55 124]
[56 123]
[57 122]
[58 121]
[59 120]
[60 119]
[61 118]
[62 117]
[63 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
