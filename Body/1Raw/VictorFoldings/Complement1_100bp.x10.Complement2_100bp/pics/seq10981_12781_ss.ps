%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[162.10725403 161.48472595]
[168.56536865 147.93632507]
[155.61238098 140.37193298]
[142.65937805 132.80755615]
[129.65042114 125.33982086]
[116.58624268 117.96913147]
[103.52205658 110.59844208]
[90.40335846 103.32521057]
[74.58333588 103.51841736]
[67.10788727 90.63560486]
[53.93541336 83.46023560]
[40.76293564 76.28486633]
[27.53740883 69.20776367]
[14.25956154 62.22931290]
[0.98171550 55.25085831]
[-12.29613113 48.27240753]
[-25.57397652 41.29395294]
[-33.33623123 54.13462830]
[-41.85252380 66.48810577]
[-51.09236145 78.31015778]
[-61.02267075 89.55846405]
[-71.60790253 100.19276428]
[-82.81016541 110.17498779]
[-94.58935547 119.46940613]
[-106.90331268 128.04273987]
[-119.70795441 135.86428833]
[-132.95742798 142.90608215]
[-146.60432434 149.14288330]
[-160.59979248 154.55238342]
[-174.89370728 159.11520386]
[-189.43492126 162.81503296]
[-204.17137146 165.63861084]
[-219.05030823 167.57582092]
[-234.01846313 168.61975098]
[-249.02226257 168.76663208]
[-264.00799561 168.01597595]
[-278.92199707 166.37045288]
[-293.71090698 163.83593750]
[-308.32177734 160.42153931]
[-322.70230103 156.13945007]
[-336.80096436 151.00500488]
[-350.56735229 145.03659058]
[-363.95217896 138.25555420]
[-376.90750122 130.68620300]
[-389.38696289 122.35561371]
[-401.34585571 113.29360962]
[-412.74142456 103.53262329]
[-423.53283691 93.10761261]
[-433.68148804 82.05588531]
[-443.15100098 70.41700745]
[-451.90753174 58.23263931]
[-459.91970825 45.54640579]
[-467.15884399 32.40371323]
[-473.59906006 18.85161591]
[-479.21725464 4.93862152]
[-483.99331665 -9.28546238]
[-487.91018677 -23.76971626]
[-490.95382690 -38.46229172]
[-493.11334229 -53.31059265]
[-494.38101196 -68.26146698]
[-494.75225830 -83.26139069]
[-494.22579956 -98.25666809]
[-492.80349731 -113.19361877]
[-490.49044800 -128.01878357]
[-487.29492188 -142.67906189]
[-483.22836304 -157.12200928]
[-478.30532837 -171.29591370]
[-472.54345703 -185.15002441]
[-465.96337891 -198.63475037]
[-458.58859253 -211.70181274]
[-450.44558716 -224.30445862]
[-441.56341553 -236.39755249]
[-431.97396851 -247.93782043]
[-421.71148682 -258.88394165]
[-410.81277466 -269.19671631]
[-399.31680298 -278.83923340]
[-387.26477051 -287.77700806]
[-374.69976807 -295.97799683]
[-361.66680908 -303.41287231]
[-348.21255493 -310.05502319]
[-334.38513184 -315.88067627]
[-320.23406982 -320.86892700]
[-305.80999756 -325.00198364]
[-291.16458130 -328.26501465]
[-276.35025024 -330.64633179]
[-261.41998291 -332.13745117]
[-246.42730713 -332.73297119]
[-231.42582703 -332.43081665]
[-216.46926880 -331.23205566]
[-201.61119080 -329.14096069]
[-186.90473938 -326.16503906]
[-172.40260315 -322.31494141]
[-158.15666199 -317.60443115]
[-144.21794128 -312.05041504]
[-130.63630676 -305.67269897]
[-117.46041107 -298.49417114]
[-104.73739624 -290.54052734]
[-92.51282501 -281.84024048]
[-80.83044434 -272.42440796]
[-69.73208618 -262.32681274]
[-59.25746536 -251.58352661]
[-49.44409180 -240.23306274]
[-40.32708740 -228.31602478]
[-31.93909454 -215.87507629]
[-24.31013680 -202.95475769]
[-17.46752548 -189.60133362]
[-11.43575382 -175.86257935]
[-6.23641491 -161.78768921]
[-1.88812125 -147.42706299]
[1.59356141 -132.83207703]
[4.19616938 -118.05500031]
[5.91038561 -103.14872742]
[6.73007441 -88.16661835]
[6.65230131 -73.16230774]
[5.67734385 -58.18949509]
[3.80869317 -43.30179596]
[1.05303800 -28.55249405]
[-2.57975674 -13.99439240]
[-7.07668686 0.32039493]
[-12.42165375 14.34062481]
[-18.59552383 28.01610756]
[-5.31767845 34.99456024]
[7.96016788 41.97301102]
[21.23801422 48.95146561]
[34.51586151 55.92991638]
[41.89917755 56.25915909]
[47.93830109 63.11239243]
[61.11077881 70.28775787]
[74.28325653 77.46312714]
[89.16109467 76.75669098]
[97.57872772 90.15273285]
[105.60108185 90.93659210]
[110.89274597 97.53425598]
[123.95693207 104.90494537]
[137.02111816 112.27563477]
[146.03298950 113.76692963]
[150.22375488 119.85456085]
[163.17675781 127.41893768]
[176.12976074 134.98332214]
[184.75628662 122.70124054]
[194.38032532 111.18409729]
[204.93432617 100.51267242]
[216.34429932 90.76181030]
[228.53018188 81.99992371]
[241.40650940 74.28845978]
[254.88296509 67.68151093]
[268.86502075 62.22542953]
[283.25457764 57.95847702]
[297.95074463 54.91058731]
[312.85040283 53.10313797]
[327.84902954 52.54881287]
[342.84146118 53.25149155]
[357.72250366 55.20624924]
[372.38778687 58.39937592]
[386.73443604 62.80847168]
[400.66183472 68.40261078]
[414.07226562 75.14255524]
[426.87167358 82.98102570]
[438.97027588 91.86303711]
[450.28323364 101.72629547]
[460.73114014 112.50160980]
[470.24078369 124.11339569]
[478.74539185 136.48020935]
[486.18533325 149.51530457]
[492.50842285 163.12725830]
[497.67031860 177.22056580]
[501.63479614 191.69638062]
[504.37405396 206.45318604]
[505.86889648 221.38743591]
[506.10879517 236.39440918]
[505.09210205 251.36880493]
[502.82595825 266.20562744]
[499.32620239 280.80078125]
[494.61746216 295.05187988]
[488.73269653 308.85897827]
[481.71322632 322.12524414]
[473.60824585 334.75759888]
[464.47467041 346.66741943]
[454.37649536 357.77120972]
[443.38461304 367.99102783]
[431.57611084 377.25524902]
[419.03378296 385.49884033]
[405.84567261 392.66400146]
[392.10421753 398.70046997]
[377.90582275 403.56588745]
[363.35009766 407.22616577]
[348.53915405 409.65560913]
[333.57684326 410.83715820]
[318.56814575 410.76254272]
[303.61831665 409.43228149]
[288.83227539 406.85571289]
[274.31365967 403.05090332]
[260.16433716 398.04455566]
[246.48359680 391.87176514]
[233.36734009 384.57583618]
[220.90760803 376.20794678]
[209.19178772 366.82678223]
[198.30206299 356.49816895]
[188.31480408 345.29452515]
[179.30007935 333.29449463]
[171.32110596 320.58218384]
[164.43388367 307.24679565]
[158.68669128 293.38186646]
[154.11984253 279.08462524]
[150.76539612 264.45541382]
[148.64686584 249.59680176]
[147.77909851 234.61302185]
[148.16819763 219.60919189]
[149.81144714 204.69053650]
[152.69728088 189.96170044]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 139]
[3 138]
[4 137]
[5 135]
[6 134]
[7 133]
[8 131]
[10 129]
[11 128]
[12 127]
[13 125]
[14 124]
[15 123]
[16 122]
[17 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
