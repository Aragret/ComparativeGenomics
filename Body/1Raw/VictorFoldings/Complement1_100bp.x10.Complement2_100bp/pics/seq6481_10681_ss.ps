%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[149.18309021 592.97912598]
[141.25660706 580.23052979]
[134.59756470 566.77642822]
[129.26812744 552.74243164]
[125.31807709 538.25964355]
[122.78426361 523.46313477]
[121.69036865 508.49121094]
[122.04660034 493.48361206]
[123.84962463 478.58041382]
[127.08261871 463.92083740]
[131.71537781 449.64172363]
[137.70468140 435.87643433]
[144.99456787 422.75341797]
[153.51698303 410.39526367]
[163.19236755 398.91735840]
[173.93038940 388.42684937]
[185.63075256 379.02169800]
[198.18423462 370.78973389]
[211.47363281 363.80776978]
[199.50408936 354.94326782]
[201.45901489 339.24331665]
[195.79621887 325.35330200]
[190.13343811 311.46325684]
[184.47065735 297.57324219]
[178.80786133 283.68319702]
[173.37182617 278.67608643]
[173.16586304 269.54397583]
[167.71051025 255.57118225]
[162.25515747 241.59838867]
[156.69592285 227.66658020]
[150.41856384 214.04327393]
[143.53915405 200.71383667]
[136.65974426 187.38441467]
[129.78033447 174.05497742]
[122.90091705 160.72555542]
[116.02150726 147.39611816]
[102.02179718 149.98992920]
[87.85834503 148.53515625]
[74.67822266 143.14961243]
[63.54886627 134.26945496]
[55.37161255 122.61389160]
[50.80872726 109.12686920]
[50.22974396 94.90068054]
[53.68156052 81.08747864]
[60.88461685 68.80596161]
[71.25555420 59.05078506]
[64.57536316 45.62041092]
[57.89516449 32.19003296]
[51.21496964 18.75965881]
[38.14145660 9.84933662]
[39.40106964 -4.99191141]
[32.72087479 -18.42228699]
[26.04068184 -31.85266304]
[19.06222916 -45.13050842]
[11.78899956 -58.24920273]
[4.51577044 -71.36789703]
[-2.75745916 -84.48659515]
[-10.03068829 -97.60528564]
[-17.30391884 -110.72397614]
[-16.58728409 -95.74111176]
[-19.29850388 -80.98816681]
[-25.29535294 -67.23906708]
[-34.26324844 -55.21505356]
[-45.73175049 -45.54688644]
[-59.09924698 -38.74173737]
[-73.66450500 -35.15659332]
[-88.66345978 -34.97951889]
[-103.30929565 -38.21980667]
[-116.83372498 -44.70747757]
[-128.52728271 -54.10219955]
[-137.77653503 -65.91114807]
[-144.09629822 -79.51483917]
[-147.15505981 -94.19966888]
[-146.79234314 -109.19528198]
[-143.02717590 -123.71504211]
[-136.05708313 -136.99728394]
[-126.24770355 -148.34523010]
[-114.11360931 -157.16360474]
[-100.29132843 -162.98980713]
[-85.50595856 -165.51820374]
[-70.53310394 -164.61616516]
[-56.15821838 -160.33100891]
[-43.13536835 -152.88752747]
[-32.14771652 -142.67619324]
[-23.77088737 -130.23118591]
[-33.28253937 -142.87393188]
[-27.31497765 -156.52081299]
[-29.31899071 -171.38633728]
[-31.32300377 -186.25187683]
[-33.32701874 -201.11740112]
[-48.27915192 -203.19976807]
[-62.11454773 -209.24000549]
[-73.80651855 -218.78988647]
[-82.48744965 -231.14076233]
[-87.51316071 -245.37609863]
[-88.51070404 -260.43954468]
[-85.40605164 -275.21328735]
[-78.42960358 -288.60104370]
[-68.09904480 -299.60931396]
[-55.18098068 -307.42123413]
[-40.63401031 -311.45712280]
[-25.53761864 -311.41744995]
[-11.01206017 -307.30517578]
[1.86477506 -299.42547607]
[12.13733959 -288.36306763]
[19.04334068 -274.93884277]
[22.07030678 -260.14898682]
[20.99361801 -245.09098816]
[15.89317131 -230.88224792]
[7.14745331 -218.57717896]
[-4.59454536 -209.08886719]
[-18.46149063 -203.12141418]
[-16.45747566 -188.25588989]
[-14.45346260 -173.39036560]
[-12.44944859 -158.52482605]
[-3.08113670 -146.94535828]
[-8.90535831 -132.23519897]
[-4.18522406 -117.99720764]
[3.08800554 -104.87851715]
[10.36123466 -91.75981903]
[17.63446426 -78.64112854]
[24.90769386 -65.52243042]
[32.18092346 -52.40373993]
[35.45135117 -51.08592606]
[38.24597168 -48.11857605]
[39.79644012 -43.74258041]
[39.47105789 -38.53285980]
[46.15125275 -25.10248184]
[52.83144760 -11.67210579]
[65.42714691 -3.72241449]
[64.64534760 12.07946396]
[71.32553864 25.50984001]
[78.00573730 38.94021606]
[84.68592834 52.37059021]
[100.14441681 49.96940613]
[115.58877563 52.45979309]
[129.50900269 59.59826660]
[140.54408264 70.68688202]
[147.61509705 84.64149475]
[150.03070068 100.09773254]
[147.55473328 115.54441071]
[140.42924500 129.47129822]
[129.35093689 140.51670837]
[136.23034668 153.84614563]
[143.10975647 167.17556763]
[149.98916626 180.50500488]
[156.86857605 193.83442688]
[163.74800110 207.16386414]
[169.32876587 193.24067688]
[183.06533813 187.21517944]
[197.08877563 192.53903198]
[203.36579895 206.16249084]
[198.30067444 220.28143311]
[184.79490662 226.80787659]
[170.58595276 222.00379944]
[176.72352600 228.76901245]
[176.22795105 236.14303589]
[181.68330383 250.11582947]
[187.13867188 264.08862305]
[192.69789124 278.02041626]
[198.36067200 291.91046143]
[204.02346802 305.80047607]
[209.68624878 319.69049072]
[215.34902954 333.58053589]
[227.72361755 343.43853760]
[225.36364746 358.14498901]
[239.74656677 353.84530640]
[254.47731018 350.95385742]
[269.41836548 349.49761963]
[284.43020630 349.49023438]
[299.37268066 350.93176270]
[314.10626221 353.80874634]
[328.49340820 358.09429932]
[342.39974976 363.74841309]
[355.69546509 370.71832275]
[368.25640869 378.93890381]
[379.96530151 388.33343506]
[390.71282959 398.81420898]
[400.39862061 410.28332520]
[408.93225098 422.63375854]
[416.23403931 435.75012207]
[422.23580933 449.51000977]
[426.88150024 463.78491211]
[430.12780762 478.44155884]
[431.94433594 493.34307861]
[432.31417847 508.35037231]
[431.23385620 523.32330322]
[428.71347046 538.12207031]
[424.77655029 552.60845947]
[419.45983887 566.64727783]
[412.81298828 580.10742188]
[404.89810181 592.86315918]
[395.78900146 604.79547119]
[385.57080078 615.79290771]
[374.33886719 625.75280762]
[362.19808960 634.58215332]
[349.26184082 642.19848633]
[335.65087891 648.53076172]
[321.49230957 653.51977539]
[306.91833496 657.11901855]
[292.06500244 659.29479980]
[277.07101440 660.02691650]
[262.07638550 659.30841064]
[247.22106934 657.14605713]
[232.64382935 653.56005859]
[218.48074341 648.58386230]
[204.86404419 642.26397705]
[191.92089844 634.65936279]
[179.77212524 625.84106445]
[168.53117371 615.89135742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 166]
[21 164]
[22 163]
[23 162]
[24 161]
[25 160]
[27 159]
[28 158]
[29 157]
[30 155]
[31 148]
[32 147]
[33 146]
[34 145]
[35 144]
[36 143]
[46 134]
[47 133]
[48 132]
[49 131]
[51 129]
[52 128]
[53 127]
[54 123]
[55 122]
[56 121]
[57 120]
[58 119]
[59 118]
[85 117]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
