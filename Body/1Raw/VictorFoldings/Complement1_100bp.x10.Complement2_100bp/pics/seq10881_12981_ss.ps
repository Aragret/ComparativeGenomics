%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[42.98487473 904.22656250]
[27.98324203 904.40106201]
[12.98938370 903.88757324]
[-1.96516502 902.68719482]
[-16.84895515 900.80242920]
[-31.63068771 898.23730469]
[-46.27927399 894.99719238]
[-60.76390839 891.08892822]
[-75.05413055 886.52062988]
[-89.11988831 881.30206299]
[-102.93159485 875.44403076]
[-116.46021271 868.95898438]
[-129.67729187 861.86053467]
[-142.55502319 854.16351318]
[-155.06632996 845.88427734]
[-167.18492126 837.04010010]
[-178.88528442 827.64959717]
[-190.14280701 817.73260498]
[-200.93385315 807.30987549]
[-211.23568726 796.40338135]
[-221.02667236 785.03607178]
[-230.28620911 773.23181152]
[-238.99482727 761.01544189]
[-247.13420105 748.41265869]
[-254.68722534 735.45001221]
[-261.63803101 722.15466309]
[-267.97195435 708.55462646]
[-273.67568970 694.67852783]
[-278.73727417 680.55548096]
[-283.14605713 666.21527100]
[-286.89273071 651.68798828]
[-289.96945190 637.00421143]
[-292.36972046 622.19482422]
[-294.08850098 607.29095459]
[-295.12219238 592.32391357]
[-295.46862793 577.32531738]
[-295.12704468 562.32653809]
[-294.09817505 547.35919189]
[-292.38418579 532.45477295]
[-289.98867798 517.64459229]
[-286.91671753 502.95986938]
[-283.17471313 488.43136597]
[-278.77056885 474.08972168]
[-273.71353149 459.96505737]
[-268.01425171 446.08709717]
[-261.68469238 432.48504639]
[-254.73820496 419.18746948]
[-247.18936157 406.22235107]
[-239.05404663 393.61694336]
[-230.34938049 381.39776611]
[-221.09364319 369.59054565]
[-211.30632019 358.22006226]
[-201.00799561 347.31024170]
[-190.22032166 336.88406372]
[-178.96598816 326.96340942]
[-167.26864624 317.56915283]
[-155.15292358 308.72106934]
[-142.64427185 300.43777466]
[-129.76902771 292.73663330]
[-116.55423737 285.63391113]
[-103.02770996 279.14447021]
[-89.21789551 273.28204346]
[-75.15381622 268.05889893]
[-60.86507034 263.48602295]
[-46.38169861 259.57305908]
[-31.73415565 256.32821655]
[-16.95325089 253.75833130]
[-2.07006860 251.86880493]
[12.88409233 250.66360474]
[27.87778282 250.14527893]
[42.87947083 250.31489563]
[57.85760880 251.17211914]
[72.78070068 252.71513367]
[75.00581360 237.88110352]
[77.23093414 223.04705811]
[79.45604706 208.21301270]
[81.68116760 193.37896729]
[83.90628052 178.54492188]
[85.79957581 163.66488647]
[87.36009979 148.74627686]
[88.92062378 133.82768250]
[90.48114777 118.90907288]
[79.79850006 106.32937622]
[81.39320374 89.90303040]
[94.29608917 79.61306763]
[95.63432312 64.67288208]
[96.97255707 49.73269653]
[98.31079102 34.79251099]
[99.64902496 19.85232735]
[100.98725891 4.91214180]
[98.63594818 -3.91447377]
[102.45825958 -10.23995590]
[104.01878357 -25.15855980]
[97.75916290 -39.68879700]
[106.77855682 -51.54205704]
[108.33908081 -66.46066284]
[109.89960480 -81.37926483]
[111.46012878 -96.29787445]
[97.42166138 -101.84980011]
[85.40236664 -110.98430634]
[76.29415131 -123.02353668]
[70.77291870 -137.07411194]
[69.24837494 -152.09336853]
[71.83365631 -166.96679688]
[78.33690643 -180.59069824]
[88.27554321 -191.95405579]
[100.91206360 -200.21365356]
[115.30874634 -204.75657654]
[130.39726257 -205.24569702]
[145.05793762 -201.64472961]
[158.20286560 -194.22088623]
[168.85661316 -183.52507019]
[176.22857666 -170.35098267]
[179.77171326 -155.67620850]
[179.22309875 -140.58975220]
[174.62345886 -126.21108246]
[166.31411743 -113.60722351]
[154.91165161 -103.71346283]
[141.26223755 -97.26396942]
[126.37873077 -94.73735046]
[124.81820679 -79.81874084]
[123.25769043 -64.90013885]
[121.69716644 -49.98153305]
[128.06840515 -36.51837540]
[118.93738556 -23.59803772]
[117.37686157 -8.67943287]
[115.92744446 6.25037622]
[114.58921051 21.19056129]
[113.25097656 36.13074493]
[111.91274261 51.07093048]
[110.57450867 66.01111603]
[109.23627472 80.95130157]
[118.46270752 89.64189911]
[121.07076263 102.04559326]
[116.12554169 113.71600342]
[105.39974976 120.46959686]
[103.83922577 135.38819885]
[102.27870178 150.30680847]
[100.71817780 165.22540283]
[102.84526825 169.99223328]
[102.92338562 174.63412476]
[101.34322357 178.39154053]
[98.74032593 180.77003479]
[96.51521301 195.60408020]
[94.29009247 210.43812561]
[92.06497192 225.27217102]
[89.83985901 240.10621643]
[87.61473846 254.94026184]
[102.33377838 257.84356689]
[116.90423584 261.41867065]
[131.29547119 265.65798950]
[145.47720337 270.55267334]
[159.41963196 276.09237671]
[173.09341431 282.26547241]
[186.46980286 289.05895996]
[199.52066040 296.45858765]
[212.21855164 304.44876099]
[224.53677368 313.01269531]
[236.44941711 322.13235474]
[247.93142700 331.78860474]
[258.95864868 341.96109009]
[269.50790405 352.62847900]
[279.55700684 363.76824951]
[289.08480835 375.35705566]
[298.07131958 387.37048340]
[306.49755859 399.78329468]
[314.34588623 412.56933594]
[321.59976196 425.70178223]
[328.24389648 439.15298462]
[334.26440430 452.89462280]
[339.64852905 466.89785767]
[344.38500977 481.13320923]
[348.46386719 495.57073975]
[351.87652588 510.18011475]
[354.61578369 524.93054199]
[356.67593384 539.79107666]
[358.05258179 554.73040771]
[358.74288940 569.71716309]
[358.74536133 584.71984863]
[358.06002808 599.70684814]
[356.68829346 614.64660645]
[354.63308716 629.50781250]
[351.89868164 644.25921631]
[348.49084473 658.86968994]
[344.41677856 673.30853271]
[339.68499756 687.54547119]
[334.30548096 701.55047607]
[328.28955078 715.29412842]
[321.64981079 728.74749756]
[314.40029907 741.88232422]
[306.55621338 754.67102051]
[298.13406372 767.08660889]
[289.15155029 779.10296631]
[279.62756348 790.69494629]
[269.58212280 801.83807373]
[259.03640747 812.50891113]
[248.01254272 822.68505859]
[236.53372192 832.34509277]
[224.62409973 841.46868896]
[212.30871582 850.03668213]
[199.61344910 858.03106689]
[186.56503296 865.43499756]
[173.19088745 872.23291016]
[159.51914978 878.41052246]
[145.57856750 883.95483398]
[131.39843750 888.85418701]
[117.00861359 893.09826660]
[102.43933868 896.67816162]
[87.72126007 899.58636475]
[72.88532257 901.81671143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 148]
[74 147]
[75 146]
[76 145]
[77 144]
[78 143]
[79 139]
[80 138]
[81 137]
[82 136]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[92 126]
[93 125]
[95 123]
[96 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
