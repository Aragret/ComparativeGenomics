%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[116.94856262 446.18405151]
[100.56576538 445.45181274]
[93.24969482 430.77505493]
[102.52648163 417.25198364]
[103.19627380 402.26693726]
[103.86605835 387.28192139]
[104.53584290 372.29687500]
[92.66677094 360.38201904]
[93.09590912 343.23178101]
[106.04595947 331.47100830]
[106.49256897 316.47766113]
[106.93917084 301.48431396]
[107.38578033 286.49096680]
[107.83238220 271.49758911]
[107.16259766 256.51257324]
[105.38013458 241.61885071]
[103.59767151 226.72512817]
[93.31358337 221.78511047]
[86.62197113 212.39692688]
[85.27944946 200.82577515]
[89.73445129 189.93293762]
[98.98731232 182.46827698]
[97.64907837 167.52809143]
[96.31083679 152.58790588]
[94.97260284 137.64772034]
[91.94717407 133.95234680]
[91.21103668 128.31716919]
[93.82373810 122.24385071]
[92.93092346 107.27043915]
[89.34566498 100.05112457]
[92.13796234 92.06777191]
[83.79217529 78.62685394]
[90.95345306 65.56678772]
[90.28366852 50.58174896]
[89.61388397 35.59671021]
[88.27565002 20.65652466]
[86.27163696 5.79099703]
[84.26762390 -9.07453156]
[82.26361084 -23.94005966]
[80.25959778 -38.80558777]
[78.25557709 -53.67111588]
[76.25156403 -68.53664398]
[71.33372498 -73.72786713]
[69.69728088 -79.99544525]
[71.14756775 -85.61948395]
[64.66806793 -99.14782715]
[58.18857193 -112.67617035]
[51.70907593 -126.20452118]
[45.22957993 -139.73286438]
[38.75008392 -153.26121521]
[30.89832878 -166.04205322]
[21.75952721 -177.93669128]
[12.62072468 -189.83131409]
[3.48192239 -201.72595215]
[-9.31430817 -193.87266541]
[-22.86134338 -187.39997864]
[-37.01075363 -182.37882996]
[-51.60750961 -178.86422729]
[-66.49168396 -176.89468384]
[-81.50019073 -176.49177551]
[-96.46859741 -177.65991211]
[-111.23289490 -180.38629150]
[-125.63132477 -184.64105225]
[-139.50611877 -190.37757874]
[-152.70527649 -197.53300476]
[-165.08415222 -206.02894592]
[-176.50714111 -215.77230835]
[-186.84907532 -226.65634155]
[-195.99664307 -238.56178284]
[-203.84962463 -251.35820007]
[-210.32197571 -264.90539551]
[-215.34278870 -279.05493164]
[-218.85702515 -293.65176392]
[-220.82621765 -308.53598022]
[-221.22875977 -323.54449463]
[-220.06025696 -338.51287842]
[-217.33351135 -353.27713013]
[-213.07839966 -367.67544556]
[-207.34155273 -381.55010986]
[-200.18579102 -394.74908447]
[-191.68955994 -407.12774658]
[-181.94592285 -418.55050659]
[-171.06164551 -428.89218140]
[-159.15597534 -438.03945923]
[-146.35935974 -445.89212036]
[-132.81201172 -452.36413574]
[-118.66236115 -457.38461304]
[-104.06542969 -460.89849854]
[-89.18115997 -462.86730957]
[-74.17263031 -463.26950073]
[-59.20428467 -462.10064697]
[-44.44011688 -459.37353516]
[-30.04189682 -455.11807251]
[-16.16737556 -449.38088989]
[-2.96857452 -442.22482300]
[9.40989590 -433.72827148]
[20.83241081 -423.98434448]
[31.17381668 -413.09982300]
[40.32080841 -401.19393921]
[48.17316818 -388.39712524]
[54.64485931 -374.84963989]
[59.66497421 -360.69985962]
[63.17850876 -346.10284424]
[65.14697266 -331.21853638]
[65.54878998 -316.20999146]
[64.37956238 -301.24166870]
[61.65210342 -286.47756958]
[57.39629364 -272.07943726]
[51.65876007 -258.20507812]
[44.50236893 -245.00643921]
[36.00553131 -232.62817383]
[26.26133728 -221.20588684]
[15.37655544 -210.86474609]
[24.51535797 -198.97012329]
[33.65415955 -187.07548523]
[42.79296112 -175.18084717]
[40.96289444 -190.06880188]
[44.89539337 -204.54414368]
[54.00709534 -216.45954895]
[66.94633484 -224.04743958]
[81.79365540 -226.18218994]
[96.34653473 -222.54713440]
[108.44615173 -213.68151855]
[116.29759216 -200.90048218]
[118.73614502 -186.10002136]
[115.40007019 -171.47570801]
[106.78424072 -159.19696045]
[94.16677856 -151.08526611]
[79.41940308 -148.34394836]
[64.72979736 -151.37965393]
[52.27843094 -159.74070740]
[58.75792694 -146.21235657]
[65.23741913 -132.68402100]
[71.71691895 -119.15567017]
[78.19641113 -105.62731934]
[84.67591095 -92.09897614]
[84.94890594 -107.09648895]
[88.87113190 -121.57462311]
[96.20573425 -134.65910339]
[106.50981903 -145.55982971]
[119.16117096 -153.61856079]
[133.39584351 -158.34867859]
[148.35427856 -159.46453857]
[163.13322449 -156.89878845]
[176.84022522 -150.80633545]
[188.64761353 -141.55508423]
[197.84237671 -129.70365906]
[203.86932373 -115.96772766]
[206.36448669 -101.17670441]
[205.17720032 -86.22377014]
[200.37918091 -72.01184082]
[192.26013184 -59.39910507]
[181.31033325 -49.14718628]
[168.19097900 -41.87514114]
[153.69429016 -38.02209091]
[138.69564819 -37.82070160]
[124.10072327 -41.28313828]
[110.79085541 -48.20032120]
[99.56974792 -58.15455246]
[91.11709595 -70.54065704]
[93.12110901 -55.67512894]
[95.12512207 -40.80960083]
[97.12913513 -25.94407272]
[99.13314819 -11.07854462]
[101.13716125 3.78698325]
[103.14117432 18.65251160]
[113.07323456 7.41177034]
[128.03552246 6.34879780]
[139.45697021 16.07251358]
[140.79484558 31.01272964]
[131.28276062 42.61101532]
[116.36965942 44.22334290]
[104.59892273 34.92692566]
[105.26870728 49.91196442]
[105.93849182 64.89700317]
[114.23637390 77.26609039]
[107.12300110 91.39798737]
[107.90432739 106.37762451]
[108.79714203 121.35102844]
[109.91278839 136.30947876]
[111.25102234 151.24966431]
[112.58925629 166.18984985]
[113.92749023 181.13003540]
[128.91825867 192.71412659]
[130.65158081 211.25891113]
[118.49138641 224.94265747]
[120.27384949 239.83638000]
[122.05632019 254.73010254]
[129.40374756 241.65281677]
[142.25474548 233.91642761]
[157.25010681 233.54319763]
[170.47006226 240.63069153]
[178.45895386 253.32626343]
[179.12852478 268.31130981]
[172.30371094 281.66879272]
[159.76853943 289.90707397]
[144.79965210 290.87271118]
[131.30989075 284.31326294]
[122.82573700 271.94421387]
[122.37912750 286.93756104]
[121.93252563 301.93090820]
[121.48591614 316.92425537]
[121.03931427 331.91760254]
[131.34266663 340.59259033]
[134.71920776 353.43041992]
[130.15292358 365.68728638]
[119.52088165 372.96664429]
[118.85109711 387.95169067]
[118.18131256 402.93673706]
[117.51152039 417.92178345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[6 208]
[7 207]
[10 203]
[11 202]
[12 201]
[13 200]
[14 199]
[15 188]
[16 187]
[17 186]
[22 183]
[23 182]
[24 181]
[25 180]
[28 179]
[29 178]
[31 177]
[33 175]
[34 174]
[35 173]
[36 166]
[37 165]
[38 164]
[39 163]
[40 162]
[41 161]
[42 160]
[45 136]
[46 135]
[47 134]
[48 133]
[49 132]
[50 131]
[51 116]
[52 115]
[53 114]
[54 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
