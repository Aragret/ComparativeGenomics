%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[179.34336853 502.15142822]
[180.04272461 487.15332031]
[182.33233643 472.31454468]
[186.18626404 457.80319214]
[191.56085205 443.78369141]
[198.39518738 430.41494751]
[206.61184692 417.84835815]
[216.11772156 406.22637939]
[226.80509949 395.68066406]
[238.55288696 386.33071899]
[230.51171875 373.66821289]
[222.47055054 361.00567627]
[214.42938232 348.34313965]
[206.38819885 335.68063354]
[198.34703064 323.01809692]
[184.99263000 316.42193604]
[184.12625122 300.62448120]
[176.08506775 287.96194458]
[162.73068237 281.36578369]
[161.86428833 265.56832886]
[153.82312012 252.90579224]
[145.78193665 240.24327087]
[146.50325012 255.22592163]
[141.83268738 269.48025513]
[132.38476562 281.13085938]
[119.40249634 288.64489746]
[104.59394836 291.03378296]
[89.90742493 287.98321533]
[77.27519226 279.89453125]
[68.35923767 267.83197021]
[64.33261108 253.38252258]
[65.72508240 238.44729614]
[72.35344696 224.99127197]
[83.34563446 214.78480530]
[97.25543213 209.17076111]
[112.25276184 208.88772583]
[126.36447144 213.97297668]
[137.73541260 223.75927734]
[132.69848633 209.63024902]
[127.66157532 195.50122070]
[116.09979248 186.11109924]
[118.75380707 170.51408386]
[113.71689606 156.38505554]
[108.67997742 142.25602722]
[103.64305878 128.12699890]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[82.12706757 78.16336823]
[76.05323029 64.44809723]
[69.97939301 50.73283386]
[53.54771423 44.73123550]
[46.67578888 29.01209259]
[53.16847610 13.49810696]
[46.89111710 -0.12520918]
[40.61375427 -13.74852562]
[34.33639526 -27.37184143]
[28.05903435 -40.99515915]
[21.78167343 -54.61847305]
[8.97924995 -63.91409302]
[10.68018436 -78.71125793]
[7.13867617 -64.13533020]
[-3.64725804 -53.71114349]
[-18.33547974 -50.66875076]
[-32.37468338 -55.95087051]
[-41.41466904 -67.92077637]
[-42.65429688 -82.86946869]
[-35.70945740 -96.16492462]
[-22.73208618 -103.68740845]
[-7.74335766 -103.10599518]
[4.61246729 -94.60064697]
[0.21146931 -108.94049072]
[-4.18952894 -123.28033447]
[-8.59052658 -137.62017822]
[-11.87263298 -140.46302795]
[-13.87772655 -143.86068726]
[-14.58819580 -147.34359741]
[-14.14074421 -150.48468018]
[-12.79915142 -152.94602966]
[-16.33882332 -167.52241516]
[-27.11414909 -179.10700989]
[-22.59872055 -193.30067444]
[-26.13839340 -207.87704468]
[-29.67806625 -222.45343018]
[-44.74131775 -222.23837280]
[-59.47464371 -225.38111877]
[-73.13903046 -231.72399902]
[-85.04907990 -240.94889832]
[-94.60738373 -252.59306335]
[-101.33450317 -266.07241821]
[-104.89300537 -280.71090698]
[-105.10440826 -295.77420044]
[-101.95809937 -310.50677490]
[-95.61190033 -324.16961670]
[-86.38412476 -336.07742310]
[-74.73764801 -345.63290405]
[-61.25664139 -352.35675049]
[-46.61730957 -355.91171265]
[-31.55395699 -356.11947632]
[-16.82215500 -352.96960449]
[-3.16084385 -346.62008667]
[8.74473095 -337.38943481]
[18.29739189 -325.74063110]
[25.01797867 -312.25799561]
[28.56939125 -297.61779785]
[28.77349281 -282.55441284]
[25.62004471 -267.82336426]
[19.26722336 -254.16358948]
[10.03368187 -242.26025391]
[-1.61742783 -232.71041870]
[-15.10169029 -225.99310303]
[-11.56201839 -211.41671753]
[-8.02234554 -196.84034729]
[2.49979854 -186.29835510]
[-1.76244831 -171.06208801]
[1.77722406 -156.48570251]
[5.74932051 -142.02117920]
[10.15031815 -127.68133545]
[14.55131626 -113.34149170]
[18.95231438 -99.00164032]
[24.30350113 -84.98861694]
[36.65692520 -76.66742706]
[35.40499115 -60.89583588]
[41.68235016 -47.27251816]
[47.95970917 -33.64920044]
[54.23707199 -20.02588654]
[60.51443100 -6.40256977]
[66.79179382 7.22074604]
[79.38518524 9.94764233]
[88.24077606 19.57368279]
[89.96060944 32.73622894]
[83.69466400 44.65900040]
[89.76849365 58.37426758]
[95.84233093 72.08953094]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[119.55523682 95.28227234]
[134.40858459 93.18986511]
[145.40980530 103.38658905]
[144.44920349 118.35580444]
[132.23490906 127.06275177]
[117.77208710 123.09008026]
[122.80900574 137.21911621]
[127.84592438 151.34814453]
[132.88284302 165.47717285]
[144.80490112 175.87789917]
[141.79060364 190.46430969]
[146.82752991 204.59333801]
[151.86444092 218.72236633]
[158.44447327 232.20210266]
[166.48564148 244.86462402]
[174.52680969 257.52716064]
[188.45637512 265.02902222]
[188.74760437 279.92077637]
[196.78877258 292.58331299]
[210.71832275 300.08517456]
[211.00955200 314.97692871]
[219.05072021 327.63946533]
[227.09190369 340.30197144]
[235.13307190 352.96450806]
[243.17424011 365.62704468]
[251.21542358 378.28955078]
[264.67352295 371.63284302]
[278.76293945 366.44436646]
[293.32403564 362.78292847]
[308.19186401 360.69000244]
[323.19790649 360.18930054]
[338.17214966 361.28652954]
[352.94494629 363.96920776]
[367.34887695 368.20697021]
[381.22076416 373.95181274]
[394.40338135 381.13861084]
[406.74743652 389.68594360]
[418.11297607 399.49694824]
[428.37127686 410.46051025]
[437.40609741 422.45233154]
[445.11505127 435.33660889]
[451.41079712 448.96728516]
[456.22201538 463.18997192]
[459.49414062 477.84347534]
[461.19015503 492.76177979]
[461.29080200 507.77581787]
[459.79498291 522.71551514]
[456.71960449 537.41156006]
[452.09951782 551.69750977]
[445.98709106 565.41137695]
[438.45156860 578.39782715]
[429.57833862 590.50970459]
[419.46795654 601.60980225]
[408.23495483 611.57232666]
[396.00662231 620.28436279]
[382.92153931 627.64727783]
[369.12792969 633.57757568]
[354.78210449 638.00811768]
[340.04660034 640.88861084]
[325.08840942 642.18652344]
[310.07699585 641.88702393]
[295.18246460 639.99365234]
[280.57357788 636.52777100]
[266.41586304 631.52862549]
[252.86972046 625.05297852]
[240.08866882 617.17407227]
[228.21751404 607.98126221]
[217.39077759 597.57867432]
[207.73110962 586.08422852]
[199.34797668 573.62805176]
[192.33636475 560.35144043]
[186.77572632 546.40472412]
[182.72904968 531.94592285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 163]
[11 162]
[12 161]
[13 160]
[14 159]
[15 158]
[17 156]
[18 155]
[20 153]
[21 152]
[22 151]
[38 150]
[39 149]
[40 148]
[42 146]
[43 145]
[44 144]
[45 143]
[46 137]
[48 135]
[49 134]
[50 133]
[51 132]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[61 121]
[71 120]
[72 119]
[73 118]
[74 117]
[79 116]
[80 115]
[82 113]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
