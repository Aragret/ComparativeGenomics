%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[39.12307358 338.85058594]
[46.78903580 351.81390381]
[51.48861694 366.12222290]
[53.00201035 381.10632324]
[51.25842667 396.06539917]
[46.33942032 410.29977417]
[38.47506332 423.14367676]
[28.03318405 433.99639893]
[15.50216675 442.35028076]
[1.46811152 447.81466675]
[-13.41258335 450.13394165]
[-28.44392204 449.19961548]
[-42.92285919 445.05541992]
[-56.17219162 437.89514160]
[-67.57221985 428.05374146]
[-76.58975220 415.99148560]
[-82.80300903 402.27252197]
[-85.92140198 387.53857422]
[-85.79906464 372.47869873]
[-82.44171906 357.79736328]
[-76.00640106 344.18115234]
[-66.79410553 332.26696777]
[-55.23569489 322.61206055]
[-41.87178802 315.66799927]
[-27.32743454 311.75958252]
[-12.28290176 311.06958008]
[2.55815125 313.63027954]
[8.22093773 299.74026489]
[13.88372421 285.85021973]
[19.54651070 271.96020508]
[25.20929718 258.07015991]
[30.87208366 244.18014526]
[24.26217651 233.11946106]
[25.24438095 220.07655334]
[33.68352890 209.83003235]
[46.67165756 206.26309204]
[52.54061890 192.45890808]
[58.40958023 178.65472412]
[64.27854156 164.85055542]
[70.14749908 151.04637146]
[76.01646423 137.24220276]
[66.52461243 129.01017761]
[59.72591400 118.44422913]
[56.16732788 106.39441681]
[56.13515472 93.83016205]
[59.63197708 81.76228333]
[66.37647247 71.16165924]
[75.82603455 62.88112259]
[87.22042847 57.58686066]
[99.64296722 55.70480728]
[112.09422302 57.38637161]
[111.07723999 41.59788513]
[123.55318451 33.46154022]
[130.03268433 19.93319702]
[136.51217651 6.40485048]
[142.99166870 -7.12349510]
[149.47117615 -20.65184021]
[136.27435303 -27.78871536]
[123.44361877 -35.56452942]
[111.00988007 -43.96055603]
[99.00309753 -52.95656204]
[87.45218658 -62.53087997]
[76.38497925 -72.66043854]
[65.82814026 -83.32084656]
[55.80709839 -94.48640442]
[46.34599686 -106.13022614]
[37.46762848 -118.22425842]
[29.19338226 -130.73936462]
[21.54319000 -143.64540100]
[14.53548145 -156.91125488]
[8.18714046 -170.50498962]
[2.51346087 -184.39384460]
[-2.47188950 -198.54437256]
[-6.75690031 -212.92247009]
[-10.33124924 -227.49351501]
[-13.18632412 -242.22238159]
[-15.31524754 -257.07360840]
[-16.71289062 -272.01138306]
[-17.37588692 -286.99975586]
[-17.30263710 -302.00262451]
[-16.49332047 -316.98382568]
[-14.94988441 -331.90725708]
[-12.67604923 -346.73696899]
[-9.67729092 -361.43725586]
[-5.96083498 -375.97268677]
[-1.53563440 -390.30828857]
[3.58765030 -404.40945435]
[9.39667606 -418.24224854]
[15.87744904 -431.77334595]
[23.01435661 -444.97015381]
[30.79020500 -457.80084229]
[39.18626022 -470.23455811]
[48.18229675 -482.24133301]
[57.75664139 -493.79223633]
[67.88623047 -504.85940552]
[78.54666138 -515.41619873]
[89.71224976 -525.43725586]
[101.35609436 -534.89831543]
[113.45014954 -543.77661133]
[125.96527863 -552.05084229]
[138.87132263 -559.70098877]
[152.13720703 -566.70867920]
[165.73095703 -573.05700684]
[179.61982727 -578.73065186]
[193.77035522 -583.71594238]
[208.14846802 -588.00091553]
[222.71951294 -591.57525635]
[237.44839478 -594.43029785]
[252.29962158 -596.55914307]
[267.23742676 -597.95678711]
[282.22579956 -598.61975098]
[297.22863770 -598.54644775]
[312.20983887 -597.73712158]
[327.13327026 -596.19360352]
[341.96298218 -593.91973877]
[356.66326904 -590.92095947]
[371.19869995 -587.20446777]
[385.53427124 -582.77923584]
[399.63540649 -577.65588379]
[413.46820068 -571.84686279]
[426.99926758 -565.36602783]
[440.19607544 -558.22912598]
[453.02676392 -550.45324707]
[465.46044922 -542.05712891]
[477.46719360 -533.06109619]
[489.01806641 -523.48669434]
[500.08520508 -513.35705566]
[510.64199829 -502.69662476]
[520.66296387 -491.53100586]
[530.12402344 -479.88714600]
[539.00231934 -467.79306030]
[547.27655029 -455.27792358]
[554.92663574 -442.37185669]
[561.93426514 -429.10595703]
[568.28259277 -415.51217651]
[573.95617676 -401.62329102]
[578.94146729 -387.47274780]
[583.22637939 -373.09463501]
[586.80065918 -358.52359009]
[589.65570068 -343.79470825]
[591.78454590 -328.94345093]
[593.18206787 -314.00567627]
[593.84503174 -299.01727295]
[593.77166748 -284.01443481]
[592.96228027 -269.03323364]
[591.41876221 -254.10981750]
[589.14489746 -239.28010559]
[586.14605713 -224.57983398]
[582.42950439 -210.04440308]
[578.00427246 -195.70886230]
[572.88092041 -181.60771179]
[567.07177734 -167.77494812]
[560.59094238 -154.24388123]
[553.45397949 -141.04710388]
[545.67810059 -128.21643066]
[537.28198242 -115.78276062]
[528.28588867 -103.77603912]
[518.71148682 -92.22520447]
[508.58181763 -81.15807343]
[497.92132568 -70.60131836]
[486.75570679 -60.58035660]
[475.11181641 -51.11934280]
[463.01770020 -42.24106216]
[450.50253296 -33.96690750]
[437.59646606 -26.31681252]
[424.33053589 -19.30920410]
[410.73675537 -12.96096420]
[396.84786987 -7.28738785]
[382.69729614 -2.30214262]
[368.31915283 1.98276126]
[353.74810791 5.55700111]
[339.01919556 8.41196632]
[324.16796875 10.54077911]
[309.23016357 11.93831158]
[294.24179077 12.60119534]
[279.23892212 12.52783489]
[264.25775146 11.71840572]
[249.33433533 10.17485905]
[234.50462341 7.90091324]
[219.80435181 4.90204573]
[205.26893616 1.18548155]
[190.93339539 -3.23982596]
[176.83227539 -8.36321545]
[162.99951172 -14.17234516]
[156.52001953 -0.64399916]
[150.04052734 12.88434601]
[143.56103516 26.41269112]
[137.08152771 39.94103622]
[138.56196594 54.76188660]
[125.62256622 63.86586761]
[137.52624512 76.46336365]
[143.68496704 92.66412354]
[143.15591431 109.98793030]
[136.02006531 125.78268433]
[123.36985779 137.63032532]
[107.14192963 143.71710205]
[89.82064056 143.11116028]
[83.95167542 156.91534424]
[78.08271790 170.71951294]
[72.21375275 184.52369690]
[66.34479523 198.32786560]
[60.47583389 212.13204956]
[67.31556702 228.23289490]
[60.52811050 243.98869324]
[44.76211166 249.84292603]
[39.09932327 263.73297119]
[33.43653870 277.62298584]
[27.77375221 291.51300049]
[22.11096573 305.40304565]
[16.44817734 319.29306030]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 210]
[28 209]
[29 208]
[30 207]
[31 206]
[32 205]
[36 202]
[37 201]
[38 200]
[39 199]
[40 198]
[41 197]
[51 190]
[53 188]
[54 187]
[55 186]
[56 185]
[57 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
