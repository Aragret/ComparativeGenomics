%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[-32.16810989 322.41726685]
[-25.46833420 335.85711670]
[-20.37416649 349.98391724]
[-16.95450020 364.60656738]
[-15.25557995 379.52737427]
[-15.30038452 394.54449463]
[-17.08830643 409.45489502]
[-20.59516525 424.05691528]
[-25.77353668 438.15304565]
[-32.55338669 451.55267334]
[-40.84302902 464.07458496]
[-50.53035355 475.54943848]
[-61.48435211 485.82205200]
[-73.55687714 494.75347900]
[-86.58467102 502.22296143]
[-100.39154816 508.12945557]
[-114.79077148 512.39312744]
[-129.58763123 514.95623779]
[-144.58198547 515.78424072]
[-159.57109070 514.86578369]
[-174.35220337 512.21343994]
[-188.72544861 507.86297607]
[-202.49642944 501.87326050]
[-215.47891235 494.32531738]
[-227.49734497 485.32119751]
[-238.38916016 474.98269653]
[-248.00706482 463.44958496]
[-256.22100830 450.87789917]
[-262.91989136 437.43759155]
[-268.01309204 423.31048584]
[-271.43179321 408.68756104]
[-273.12973022 393.76666260]
[-273.08392334 378.74951172]
[-271.29498291 363.83926392]
[-267.78717041 349.23748779]
[-262.60784912 335.14169312]
[-255.82710266 321.74252319]
[-247.53662109 309.22116089]
[-237.84854126 297.74694824]
[-226.89385986 287.47506714]
[-214.82072449 278.54443359]
[-201.79243469 271.07583618]
[-187.98516846 265.17025757]
[-173.58566284 260.90756226]
[-158.78863525 258.34539795]
[-143.79420471 257.51843262]
[-128.80517578 258.43786621]
[-114.02423859 261.09121704]
[-99.65128326 265.44262695]
[-85.88069916 271.43325806]
[-72.89871979 278.98208618]
[-60.88090134 287.98699951]
[-50.55422974 277.10766602]
[-40.22756195 266.22833252]
[-29.90089417 255.34898376]
[-26.75065231 240.79133606]
[-11.63821888 236.10893250]
[-1.31155062 225.22959900]
[9.01511765 214.35026550]
[19.34178734 203.47093201]
[28.74393845 191.78334045]
[37.15855789 179.36584473]
[45.57317352 166.94834900]
[53.98779297 154.53085327]
[62.40241241 142.11335754]
[63.13689423 127.23687744]
[77.28363037 120.15306854]
[85.69824982 107.73557281]
[84.19375610 96.18664551]
[90.79874420 86.59417725]
[102.12449646 83.87965393]
[103.69541168 68.13662720]
[117.33102417 62.14335251]
[125.92958832 49.85251236]
[134.52815247 37.56167603]
[143.12670898 25.27083778]
[151.72528076 12.98000050]
[153.29620361 -2.76302338]
[166.93180847 -8.75630093]
[175.53036499 -21.04713821]
[170.53480530 -41.47299194]
[182.07511902 -58.69844437]
[202.28440857 -61.76049042]
[210.13616943 -74.54133606]
[217.98791504 -87.32217407]
[225.83967590 -100.10301971]
[233.69143677 -112.88386536]
[241.54318237 -125.66470337]
[249.39494324 -138.44554138]
[257.24670410 -151.22639465]
[265.09844971 -164.00723267]
[272.95022583 -176.78807068]
[280.80197144 -189.56892395]
[281.43304443 -205.37753296]
[294.68777466 -212.17178345]
[302.53952026 -224.95263672]
[290.68731689 -234.17155457]
[279.92123413 -244.63839722]
[270.37194824 -256.22607422]
[262.15539551 -268.79394531]
[255.37130737 -282.18945312]
[250.10202026 -296.24993896]
[246.41152954 -310.80477905]
[244.34461975 -325.67727661]
[243.92637634 -340.68688965]
[245.16188049 -355.65139771]
[248.03613281 -370.38916016]
[252.51425171 -384.72128296]
[258.54187012 -398.47378540]
[266.04580688 -411.47970581]
[274.93499756 -423.58117676]
[285.10150146 -434.63131714]
[296.42193604 -444.49594116]
[308.75888062 -453.05532837]
[321.96255493 -460.20559692]
[335.87268066 -465.85989380]
[350.32043457 -469.94964600]
[365.13040161 -472.42517090]
[380.12280273 -473.25640869]
[395.11566162 -472.43328857]
[409.92694092 -469.96578979]
[424.37689209 -465.88391113]
[438.29010010 -460.23712158]
[451.49765015 -453.09402466]
[463.83923340 -444.54132080]
[475.16500854 -434.68283081]
[485.33752441 -423.63824463]
[494.23327637 -411.54159546]
[501.74426270 -398.53973389]
[507.77932739 -384.79049683]
[512.26519775 -370.46081543]
[515.14746094 -355.72460938]
[516.39111328 -340.76077271]
[515.98095703 -325.75094604]
[513.92211914 -310.87731934]
[510.23953247 -296.32049561]
[504.97787476 -282.25711060]
[498.20104980 -268.85794067]
[489.99130249 -256.28561401]
[480.44830322 -244.69276428]
[469.68789673 -234.22009277]
[457.84069824 -224.99475098]
[445.05053711 -217.12869263]
[431.47265625 -210.71745300]
[417.27188110 -205.83880615]
[402.62057495 -202.55201721]
[387.69665527 -200.89697266]
[372.68121338 -200.89375305]
[357.75656128 -202.54240417]
[343.10388184 -205.82290649]
[328.90100098 -210.69544983]
[315.32037354 -217.10087585]
[307.46859741 -204.32003784]
[307.39913940 -189.42559814]
[293.58279419 -181.71716309]
[285.73104858 -168.93632507]
[277.87930298 -156.15547180]
[270.02755737 -143.37463379]
[262.17578125 -130.59379578]
[254.32403564 -117.81295013]
[246.47227478 -105.03210449]
[238.62051392 -92.25126648]
[230.76876831 -79.47042084]
[222.91700745 -66.68958282]
[215.06524658 -53.90873718]
[219.93354797 -45.92061234]
[221.56808472 -36.65102386]
[219.70278931 -27.36603928]
[214.55258179 -19.34946632]
[206.78944397 -13.72534561]
[197.45510864 -11.30040741]
[187.82121277 -12.44857502]
[179.22264099 -0.15773703]
[178.26675415 14.70616341]
[164.01611328 21.57856369]
[155.41755676 33.86940384]
[146.81898499 46.16024017]
[138.22042847 58.45107651]
[129.62185669 70.74191284]
[128.66596985 85.60581970]
[114.41533661 92.47821808]
[113.39207458 109.22125244]
[98.11574554 116.15019226]
[89.70112610 128.56768799]
[88.36477661 144.33235168]
[74.81990814 150.52798462]
[66.40528870 162.94548035]
[57.99066925 175.36297607]
[49.57605362 187.78047180]
[41.16143417 200.19796753]
[55.11255264 194.68740845]
[70.03612518 196.19966125]
[82.59819031 204.39688110]
[89.99235535 217.44779968]
[90.56672668 232.43679810]
[84.19300842 246.01530457]
[72.29509735 255.14982605]
[57.53101349 257.79971313]
[43.19909668 253.37295532]
[32.50113297 242.85852051]
[27.82707024 228.60533142]
[30.22112083 213.79759216]
[19.89445305 224.67692566]
[9.56778336 235.55625916]
[-0.75888485 246.43559265]
[-4.64775991 261.77142334]
[-19.02156067 265.67565918]
[-29.34822845 276.55499268]
[-39.67489624 287.43432617]
[-50.00156403 298.31365967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 210]
[53 209]
[54 208]
[55 207]
[57 205]
[58 204]
[59 203]
[60 202]
[61 190]
[62 189]
[63 188]
[64 187]
[65 186]
[67 184]
[68 183]
[71 181]
[73 179]
[74 178]
[75 177]
[76 176]
[77 175]
[79 173]
[80 172]
[83 165]
[84 164]
[85 163]
[86 162]
[87 161]
[88 160]
[89 159]
[90 158]
[91 157]
[92 156]
[93 155]
[95 153]
[96 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
