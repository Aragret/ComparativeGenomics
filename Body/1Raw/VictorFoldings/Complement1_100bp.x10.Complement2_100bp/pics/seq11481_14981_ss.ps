%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[132.62063599 317.73391724]
[143.52919006 307.34396362]
[156.47650146 299.64233398]
[151.86248779 285.36959839]
[147.24847412 271.09686279]
[133.91172791 264.56484985]
[129.02915955 250.15600586]
[135.97093201 236.21150208]
[131.35691833 221.93876648]
[126.74291229 207.66603088]
[115.46583557 197.93583679]
[118.58305359 182.42475891]
[113.96904755 168.15202332]
[109.35503387 153.87928772]
[104.74102783 139.60655212]
[100.12702179 125.33382416]
[95.51300812 111.06108856]
[92.45937347 125.74697876]
[84.36806488 138.37751770]
[72.30362701 147.29095459]
[57.85334778 151.31457520]
[42.91841125 149.91899109]
[29.46376419 143.28781128]
[19.25959587 132.29350281]
[13.64844036 118.38253784]
[13.36854267 103.38514709]
[18.45672607 89.27449799]
[28.24355507 77.90708923]
[41.44140244 70.77849579]
[56.31386566 68.82661438]
[70.90421295 72.30823517]
[83.29283905 80.76530457]
[91.85078430 93.08731079]
[90.51255035 78.14712524]
[89.17431641 63.20693970]
[85.29177094 54.93870544]
[87.92906952 48.03461838]
[86.81342316 33.07616425]
[81.19409180 46.98382950]
[72.55773926 59.24814224]
[61.35739899 69.22573853]
[48.18063354 76.39321899]
[33.71865845 80.37459564]
[18.73012543 80.96099854]
[4.00130129 78.12168121]
[-9.69516945 72.00557709]
[-21.64079666 62.93353271]
[-31.20893669 51.38144684]
[-37.89766312 37.95531845]
[-41.35610199 23.35945320]
[-41.40282822 8.35952663]
[-38.03538895 -6.25759888]
[-31.43043709 -19.72513771]
[-21.93445206 -31.33660889]
[-10.04557610 -40.48289871]
[3.61252522 -46.68421173]
[18.32337379 -49.61523819]
[33.31526947 -49.12222290]
[47.80176926 -45.23102951]
[61.02293396 -38.14577866]
[72.28520966 -28.23815155]
[80.99781036 -16.02788162]
[86.70367432 -2.15549636]
[89.10356903 12.65294552]
[93.50457001 -1.68690205]
[97.90556335 -16.02674866]
[102.30656433 -30.36659622]
[92.25435638 -37.16590118]
[84.31043243 -46.32134628]
[79.00897980 -57.20591736]
[76.70355988 -69.07670593]
[77.54352570 -81.12565613]
[81.46437073 -92.53450775]
[88.19261932 -102.53041840]
[97.26489258 -110.43830109]
[108.05982208 -115.72640228]
[119.84056854 -118.04205322]
[131.80517578 -117.23521423]
[137.05189514 -131.28768921]
[142.29861450 -145.34016418]
[147.54533386 -159.39263916]
[152.79205322 -173.44509888]
[158.03877258 -187.49757385]
[144.50378418 -193.98683167]
[131.60499573 -201.66325378]
[119.44623566 -210.46501160]
[108.12542725 -220.32124329]
[97.73370361 -231.15261841]
[88.35474396 -242.87188721]
[80.06405640 -255.38470459]
[72.92839813 -268.59033203]
[67.00521851 -282.38244629]
[62.34221649 -296.64999390]
[58.97692871 -311.27807617]
[56.93645477 -326.14892578]
[56.23722458 -341.14285278]
[56.88486099 -356.13906860]
[58.87415695 -371.01687622]
[62.18909454 -385.65646362]
[66.80297852 -399.93997192]
[72.67866516 -413.75234985]
[79.76884460 -426.98245239]
[88.01643372 -439.52374268]
[97.35501099 -451.27520752]
[107.70940399 -462.14227295]
[118.99623871 -472.03741455]
[131.12463379 -480.88095093]
[143.99693298 -488.60168457]
[157.50950623 -495.13748169]
[171.55355835 -500.43569946]
[186.01599121 -504.45367432]
[200.78038025 -507.15905762]
[215.72784424 -508.53005981]
[230.73803711 -508.55563354]
[245.69007874 -507.23562622]
[260.46359253 -504.58059692]
[274.93966675 -500.61196899]
[289.00170898 -495.36169434]
[302.53646851 -488.87200928]
[315.43502808 -481.19522095]
[327.59353638 -472.39306641]
[338.91403198 -462.53649902]
[349.30541992 -451.70480347]
[358.68402100 -439.98526001]
[366.97433472 -427.47216797]
[374.10958862 -414.26632690]
[380.03234863 -400.47406006]
[384.69491577 -386.20635986]
[388.05975342 -371.57815552]
[390.09976196 -356.70724487]
[390.79855347 -341.71331787]
[390.15045166 -326.71710205]
[388.16070557 -311.83935547]
[384.84530640 -297.19989014]
[380.23098755 -282.91653442]
[374.35488892 -269.10430908]
[367.26431274 -255.87440491]
[359.01632690 -243.33338928]
[349.67739868 -231.58219910]
[339.32266235 -220.71546936]
[328.03552246 -210.82067871]
[315.90686035 -201.97750854]
[303.03433228 -194.25714111]
[289.52154541 -187.72177124]
[275.47735596 -182.42398071]
[261.01480103 -178.40644836]
[246.25032043 -175.70152283]
[231.30281067 -174.33097839]
[216.29263306 -174.30583191]
[201.34062195 -175.62632751]
[186.56716919 -178.28178406]
[172.09123230 -182.25085449]
[166.84451294 -168.19837952]
[161.59779358 -154.14591980]
[156.35108948 -140.09344482]
[151.10437012 -126.04096985]
[145.85765076 -111.98850250]
[159.47207642 -100.20666504]
[167.53909302 -84.07247925]
[168.80050659 -66.04405212]
[163.03721619 -48.87929916]
[151.10675049 -35.21404266]
[134.81573486 -27.15725327]
[116.64640808 -25.96559906]
[112.24541473 -11.62575150]
[107.84441376 2.71409607]
[103.44342041 17.05394363]
[101.77187347 31.96051788]
[102.88752747 46.91897202]
[104.11450195 61.86870575]
[105.45273590 76.80889130]
[106.79096985 91.74907684]
[109.78574371 106.44707489]
[114.39974976 120.71981049]
[119.01376343 134.99253845]
[123.62776947 149.26527405]
[128.24177551 163.53800964]
[132.85578918 177.81074524]
[144.46289062 188.56182861]
[141.01564026 203.05201721]
[145.62965393 217.32475281]
[150.24366760 231.59748840]
[164.03456116 238.83966064]
[168.51049805 253.37997437]
[161.52120972 266.48284912]
[166.13522339 280.75558472]
[170.74922180 295.02832031]
[185.75476074 293.69351196]
[200.68103027 295.73171997]
[214.77932739 301.04074097]
[227.34249878 309.35424805]
[237.74038696 320.25524902]
[245.45141602 333.19692993]
[250.08883667 347.53021240]
[251.41999817 362.53604126]
[249.37817383 377.46182251]
[244.06573486 391.55883789]
[235.74919128 404.11999512]
[224.84567261 414.51522827]
[211.90209961 422.22314453]
[197.56771851 426.85708618]
[182.56155396 428.18460083]
[167.63627625 426.13916016]
[153.54054260 420.82333374]
[140.98139954 412.50372314]
[130.58880615 401.59768677]
[122.88403320 388.65225220]
[118.25357056 374.31674194]
[116.92967224 359.31024170]
[118.97874451 344.38546753]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 187]
[4 186]
[5 185]
[8 182]
[9 181]
[10 180]
[12 178]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[33 172]
[34 171]
[35 170]
[37 169]
[38 168]
[64 167]
[65 166]
[66 165]
[67 164]
[78 157]
[79 156]
[80 155]
[81 154]
[82 153]
[83 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
