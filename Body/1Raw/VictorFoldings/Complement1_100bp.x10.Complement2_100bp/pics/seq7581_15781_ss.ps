%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[130.06973267 503.06744385]
[122.32363129 490.21362305]
[115.58420563 476.80456543]
[109.89102173 462.91894531]
[105.27748108 448.63824463]
[101.77066040 434.04629517]
[99.39113617 419.22872925]
[98.15287781 404.27246094]
[98.06314850 389.26531982]
[99.12247467 374.29531860]
[101.32464600 359.45034790]
[104.65673065 344.81750488]
[109.09917450 330.48269653]
[114.62591553 316.52996826]
[121.20451355 303.04129028]
[128.79637146 290.09576416]
[137.35691833 277.76937866]
[146.83592224 266.13446045]
[157.17778015 255.25932312]
[168.32176208 245.20774841]
[180.20249939 236.03872681]
[171.97369385 223.49732971]
[163.74488831 210.95593262]
[155.51608276 198.41453552]
[147.28727722 185.87313843]
[131.21105957 178.83592224]
[130.31362915 160.44363403]
[121.89901733 148.02613831]
[117.46121216 146.26121521]
[114.08500671 141.68975830]
[113.42517853 135.11129761]
[105.38401031 122.44877625]
[97.34283447 109.78624725]
[90.70672607 105.21080780]
[89.27783203 96.87479401]
[81.42607880 84.09395599]
[73.57431793 71.31311035]
[65.72256470 58.53226852]
[57.87081146 45.75142288]
[50.01905441 32.97058105]
[42.16729736 20.18973923]
[34.31554413 7.40889692]
[26.46378708 -5.37194538]
[18.61203194 -18.15278816]
[4.79571247 -25.86121750]
[4.72623205 -40.75566101]
[-3.12552357 -53.53650284]
[-10.97727871 -66.31734467]
[-24.79359818 -74.02577209]
[-24.86307907 -88.92021942]
[-32.71483612 -101.70105743]
[-46.53115463 -109.40949249]
[-46.60063553 -124.30393219]
[-54.45238876 -137.08477783]
[-62.30414581 -149.86561584]
[-70.15589905 -162.64645386]
[-83.66609955 -156.10023499]
[-97.76097107 -150.93173218]
[-112.30041504 -147.19233704]
[-127.13993835 -144.91920471]
[-142.13204956 -144.13491821]
[-157.12776184 -144.84729004]
[-171.97801208 -147.04924011]
[-186.53523254 -150.71885681]
[-200.65472412 -155.81970215]
[-214.19616699 -162.30105591]
[-227.02496338 -170.09851074]
[-239.01362610 -179.13458252]
[-250.04301453 -189.31944275]
[-260.00347900 -200.55187988]
[-268.79605103 -212.72026062]
[-276.33334351 -225.70362854]
[-282.54040527 -239.37297058]
[-287.35559082 -253.59240723]
[-290.73104858 -268.22064209]
[-292.63320923 -283.11224365]
[-293.04315186 -298.11926270]
[-291.95684814 -313.09252930]
[-289.38504028 -327.88320923]
[-285.35333252 -342.34432983]
[-279.90176392 -356.33215332]
[-273.08453369 -369.70767212]
[-264.96939087 -382.33792114]
[-255.63700867 -394.09738159]
[-245.18011475 -404.86920166]
[-233.70263672 -414.54629517]
[-221.31866455 -423.03250122]
[-208.15126038 -430.24346924]
[-194.33129883 -436.10754395]
[-179.99613953 -440.56643677]
[-165.28823853 -443.57580566]
[-150.35379028 -445.10580444]
[-135.34121704 -445.14117432]
[-120.39972687 -443.68157959]
[-105.67781830 -440.74151611]
[-91.32180023 -436.35021973]
[-77.47436523 -430.55133057]
[-64.27313232 -423.40249634]
[-51.84930038 -414.97473145]
[-40.32635880 -405.35183716]
[-29.81882095 -394.62939453]
[-20.43112183 -382.91403198]
[-12.25656128 -370.32217407]
[-5.37638617 -356.97894287]
[0.14102489 -343.01696777]
[4.24083519 -328.57501221]
[6.88229847 -313.79660034]
[8.03916168 -298.82864380]
[7.69992733 -283.81985474]
[5.86796665 -268.91943359]
[2.56148696 -254.27545166]
[-2.18664932 -240.03349304]
[-8.32925224 -226.33505249]
[-15.80527115 -213.31631470]
[-24.54040527 -201.10664368]
[-34.44783783 -189.82739258]
[-45.42910385 -179.59066772]
[-57.37505722 -170.49821472]
[-49.52330399 -157.71737671]
[-41.67154694 -144.93653870]
[-33.81979370 -132.15568542]
[-20.56508255 -125.36142731]
[-19.93399239 -109.55281830]
[-12.08223724 -96.77197266]
[1.17247283 -89.97771454]
[1.80356359 -74.16909790]
[9.65531921 -61.38825989]
[17.50707436 -48.60741425]
[30.76178360 -41.81315994]
[31.39287567 -26.00454330]
[39.24462891 -13.22370052]
[47.09638596 -0.44285834]
[54.94814301 12.33798409]
[62.79989624 25.11882591]
[70.65164948 37.89966965]
[78.50341034 50.68051147]
[86.35516357 63.46135330]
[94.20691681 76.24219513]
[102.05867767 89.02304077]
[110.00535583 101.74507904]
[118.04653168 114.40760040]
[126.08770752 127.07012177]
[134.31651306 139.61152649]
[142.73112488 152.02902222]
[155.22711182 155.22482300]
[161.98002625 165.74061584]
[159.82867432 177.64431763]
[168.05747986 190.18572998]
[176.28628540 202.72712708]
[184.51509094 215.26852417]
[192.74391174 227.80992126]
[205.88478088 220.56146240]
[219.54196167 214.34020996]
[233.63531494 209.18266296]
[248.08212280 205.11909485]
[262.79760742 202.17333984]
[277.69540405 200.36270142]
[292.68807983 199.69778442]
[307.68768311 200.18251038]
[322.60614014 201.81404114]
[337.35595703 204.58277893]
[351.85052490 208.47248840]
[366.00482178 213.46034241]
[379.73577881 219.51705933]
[392.96279907 226.60711670]
[405.60824585 234.68888855]
[417.59796143 243.71495056]
[428.86154175 253.63233948]
[439.33288574 264.38284302]
[448.95056152 275.90338135]
[457.65814209 288.12637329]
[465.40447998 300.98004150]
[472.14416504 314.38897705]
[477.83761597 328.27447510]
[482.45141602 342.55508423]
[485.95852661 357.14694214]
[488.33831787 371.96447754]
[489.57687378 386.92071533]
[489.66687012 401.92785645]
[488.60781860 416.89788818]
[486.40594482 431.74288940]
[483.07412720 446.37579346]
[478.63195801 460.71072388]
[473.10549927 474.66351318]
[466.52713013 488.15234375]
[458.93554688 501.09799194]
[450.37521362 513.42456055]
[440.89642334 525.05963135]
[430.55477905 535.93499756]
[419.41098022 545.98675537]
[407.53042603 555.15600586]
[394.98281860 563.38891602]
[381.84179688 570.63708496]
[368.18450928 576.85809326]
[354.09106445 582.01538086]
[339.64416504 586.07867432]
[324.92864990 589.02416992]
[310.03082275 590.83453369]
[295.03811646 591.49914551]
[280.03851318 591.01409912]
[265.12008667 589.38232422]
[250.37033081 586.61328125]
[235.87582397 582.72332764]
[221.72161865 577.73516846]
[207.99078369 571.67822266]
[194.76390076 564.58789062]
[182.11859131 556.50592041]
[170.12907410 547.47961426]
[158.86567688 537.56201172]
[148.39453125 526.81127930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 151]
[22 150]
[23 149]
[24 148]
[25 147]
[27 144]
[28 143]
[31 142]
[32 141]
[33 140]
[35 139]
[36 138]
[37 137]
[38 136]
[39 135]
[40 134]
[41 133]
[42 132]
[43 131]
[44 130]
[46 128]
[47 127]
[48 126]
[50 124]
[51 123]
[53 121]
[54 120]
[55 119]
[56 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
