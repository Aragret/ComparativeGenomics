%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[100.00827026 339.11849976]
[98.26436615 354.06655884]
[93.63746643 368.38711548]
[86.30539703 381.52966309]
[76.54999542 392.98910522]
[64.74623108 402.32492065]
[51.34780502 409.17825317]
[36.86972427 413.28573608]
[21.86847878 414.48944092]
[6.92068338 412.74313354]
[-7.39911175 408.11389160]
[-20.54049110 400.77972412]
[-31.99833488 391.02246094]
[-41.33223343 379.21719360]
[-48.18341827 365.81765747]
[-52.28854752 351.33889771]
[-53.48983002 336.33746338]
[-51.74109268 321.38995361]
[-47.10955048 307.07089233]
[-39.77323151 293.93072510]
[-30.01412010 282.47445679]
[-18.20733261 273.14245605]
[-4.80669117 266.29342651]
[9.67272091 262.19064331]
[24.67435455 260.99179077]
[39.62158203 262.74295044]
[44.23559189 248.47023010]
[48.84960175 234.19749451]
[53.46361160 219.92475891]
[58.07762146 205.65202332]
[62.69163132 191.37928772]
[59.24438477 176.88909912]
[70.85148621 166.13801575]
[63.86219788 153.03514099]
[68.33813477 138.49482727]
[82.12902832 131.25265503]
[86.74304199 116.97992706]
[91.35704803 102.70719147]
[90.10545349 99.05946350]
[90.46780396 94.87776947]
[92.64650726 90.89527893]
[96.50890350 87.90834808]
[101.75562286 73.85587311]
[107.00234222 59.80340576]
[112.24906158 45.75093460]
[117.49578094 31.69846344]
[105.23902893 40.34555435]
[90.38006592 42.39764786]
[76.23840332 37.39629745]
[65.97334290 26.45882034]
[61.87810898 12.02867508]
[64.86759186 -2.67040515]
[74.27394104 -14.35460949]
[87.99574280 -20.41365814]
[102.96752167 -19.49394035]
[115.84454346 -11.80092812]
[123.75003815 0.94674355]
[124.91790009 15.90123272]
[132.38565063 2.89228010]
[139.85337830 -10.11667252]
[147.32112122 -23.12562370]
[154.78886414 -36.13457870]
[162.25660706 -49.14352798]
[148.07119751 -44.26765823]
[133.69563293 -48.55056763]
[124.49166107 -60.39484024]
[123.89212036 -75.38285828]
[132.12063599 -87.92445374]
[146.10815430 -93.34192657]
[160.63771057 -89.61469269]
[170.29011536 -78.13291931]
[171.46499634 -63.17788315]
[180.42568970 -75.20726013]
[189.38638306 -87.23664093]
[198.34707642 -99.26601410]
[207.30776978 -111.29539490]
[216.26846313 -123.32477570]
[218.30741882 -139.01403809]
[232.11543274 -144.59867859]
[241.07612610 -156.62806702]
[229.66094971 -166.36764526]
[218.91442871 -176.84036255]
[208.88354492 -188.00044250]
[199.61218262 -199.79907227]
[191.14086914 -212.18464661]
[183.50665283 -225.10302734]
[176.74291992 -238.49771118]
[170.87922668 -252.31011963]
[165.94123840 -266.47988892]
[161.95054626 -280.94500732]
[158.92457581 -295.64227295]
[156.87657166 -310.50735474]
[155.81550598 -325.47534180]
[155.74600220 -340.48068237]
[156.66836548 -355.45782471]
[158.57856750 -370.34127808]
[161.46824646 -385.06591797]
[165.32476807 -399.56741333]
[170.13128662 -413.78231812]
[175.86676025 -427.64843750]
[182.50611877 -441.10522461]
[190.02033997 -454.09375000]
[198.37654114 -466.55728149]
[207.53820801 -478.44128418]
[217.46527100 -489.69381714]
[228.11430359 -500.26565552]
[239.43876648 -510.11056519]
[251.38912964 -519.18548584]
[263.91311646 -527.45080566]
[276.95599365 -534.87030029]
[290.46072388 -541.41156006]
[304.36825562 -547.04602051]
[318.61773682 -551.74896240]
[333.14688110 -555.49981689]
[347.89218140 -558.28228760]
[362.78912354 -560.08416748]
[377.77261353 -560.89752197]
[392.77706909 -560.71881104]
[407.73690796 -559.54882812]
[422.58670044 -557.39276123]
[437.26156616 -554.25988770]
[451.69726562 -550.16406250]
[465.83071899 -545.12304688]
[479.60009766 -539.15905762]
[492.94519043 -532.29797363]
[505.80767822 -524.57000732]
[518.13128662 -516.00878906]
[529.86212158 -506.65179443]
[540.94891357 -496.53997803]
[551.34320068 -485.71752930]
[560.99945068 -474.23178101]
[569.87548828 -462.13296509]
[577.93249512 -449.47396851]
[585.13525391 -436.31015015]
[591.45227051 -422.69909668]
[596.85589600 -408.70028687]
[601.32250977 -394.37493896]
[604.83258057 -379.78573608]
[607.37072754 -364.99642944]
[608.92596436 -350.07171631]
[609.49139404 -335.07687378]
[609.06451416 -320.07742310]
[607.64727783 -305.13897705]
[605.24584961 -290.32684326]
[601.87072754 -275.70584106]
[597.53668213 -261.33984375]
[592.26263428 -247.29170227]
[586.07165527 -233.62284851]
[578.99084473 -220.39305115]
[571.05114746 -207.66015625]
[562.28723145 -195.47982788]
[552.73748779 -183.90534973]
[542.44372559 -172.98733521]
[531.45080566 -162.77351379]
[519.80694580 -153.30854797]
[507.56295776 -144.63383484]
[494.77243042 -136.78730774]
[481.49127197 -129.80326843]
[467.77758789 -123.71225739]
[453.69131470 -118.54091644]
[439.29406738 -114.31185150]
[424.64880371 -111.04356384]
[409.81954956 -108.75033569]
[394.87115479 -107.44220734]
[379.86898804 -107.12488556]
[364.87863159 -107.79975891]
[349.96566772 -109.46389008]
[335.19531250 -112.10998535]
[320.63211060 -115.72648621]
[306.33978271 -120.29756927]
[292.38079834 -125.80326080]
[278.81622314 -132.21946716]
[265.70532227 -139.51814270]
[253.10549927 -147.66735840]
[244.14480591 -135.63798523]
[242.74678040 -120.80913544]
[228.29785156 -114.36407471]
[219.33715820 -102.33470154]
[210.37644958 -90.30532074]
[201.41575623 -78.27594757]
[192.45506287 -66.24656677]
[183.49436951 -54.21718979]
[175.26556396 -41.67578888]
[167.79782104 -28.66683578]
[160.33007812 -15.65788364]
[152.86233521 -2.64893103]
[145.39459229 10.36002159]
[137.92684937 23.36897278]
[131.54824829 36.94517899]
[126.30152893 50.99765015]
[121.05480957 65.05012512]
[115.80809784 79.10259247]
[110.56137848 93.15506744]
[105.62978363 107.32119751]
[101.01576996 121.59393311]
[96.40176392 135.86666870]
[103.34354401 149.81118774]
[98.46096039 164.22003174]
[85.12422180 170.75202942]
[88.24143982 186.26310730]
[76.96436310 195.99330139]
[72.35035706 210.26603699]
[67.73634338 224.53877258]
[63.12233734 238.81150818]
[58.50832748 253.08422852]
[53.89431763 267.35696411]
[67.03807068 274.68692017]
[78.49906921 284.44046021]
[87.83679199 296.24270630]
[94.69231415 309.64001465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 206]
[27 205]
[28 204]
[29 203]
[30 202]
[31 201]
[33 199]
[36 196]
[37 195]
[38 194]
[42 193]
[43 192]
[44 191]
[45 190]
[46 189]
[58 188]
[59 187]
[60 186]
[61 185]
[62 184]
[63 183]
[72 182]
[73 181]
[74 180]
[75 179]
[76 178]
[77 177]
[79 175]
[80 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
