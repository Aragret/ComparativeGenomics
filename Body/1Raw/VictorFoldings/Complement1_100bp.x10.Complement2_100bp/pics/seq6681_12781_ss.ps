%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[102.45436096 707.71936035]
[89.41800690 715.19158936]
[75.45090485 720.73242188]
[60.83740616 724.22900391]
[45.87501907 725.61029053]
[30.86836624 724.84796143]
[16.12295723 721.95770264]
[1.93899190 716.99829102]
[-11.39476204 710.07067871]
[-23.60684586 701.31591797]
[-34.44863892 690.91223145]
[-43.69941330 679.07147217]
[-51.17084122 666.03466797]
[-56.71080780 652.06719971]
[-60.20652771 637.45349121]
[-61.58683395 622.49102783]
[-60.82362366 607.48443604]
[-57.93243790 592.73919678]
[-52.97213364 578.55554199]
[-46.04369736 565.22222900]
[-37.28818512 553.01068115]
[-26.88384819 542.16949463]
[-15.04250336 532.91949463]
[-2.00522518 525.44885254]
[11.96256351 519.90972900]
[26.57649612 516.41491699]
[41.53905106 515.03558350]
[56.54561234 515.79968262]
[59.43088531 501.07980347]
[62.31615829 486.35992432]
[65.20143127 471.64001465]
[68.08670044 456.92013550]
[70.97197723 442.20022583]
[73.19709015 427.36618042]
[74.75761414 412.44760132]
[76.31813812 397.52899170]
[77.87866211 382.61038208]
[79.32807922 367.68057251]
[79.88629150 352.69094849]
[79.66296387 337.69262695]
[79.43963623 322.69427490]
[79.21630859 307.69595337]
[75.97357178 301.05468750]
[79.10298157 292.47305298]
[79.10298157 277.47305298]
[76.41929626 273.52249146]
[76.18883514 267.84411621]
[79.33295441 262.02810669]
[79.77956390 247.03474426]
[80.22616577 232.04139709]
[80.67277527 217.04804993]
[81.11937714 202.05468750]
[81.56598663 187.06134033]
[70.70866394 197.41116333]
[55.74723053 198.48609924]
[43.52185059 189.79472351]
[39.62179947 175.31060791]
[45.83013153 161.65570068]
[59.30847931 155.07283020]
[73.89472961 158.57160950]
[82.92078400 170.55419922]
[84.92479706 155.68867493]
[86.92881012 140.82315063]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[97.98411560 57.14464951]
[99.54463959 42.22604370]
[93.28501892 27.69580841]
[102.30441284 15.84254837]
[103.86493683 0.92394346]
[105.42546082 -13.99466133]
[95.74826050 -26.20078659]
[97.54337311 -41.30814362]
[109.23968506 -50.45865631]
[110.80020905 -65.37725830]
[112.36073303 -80.29586792]
[113.92125702 -95.21446991]
[114.70257568 -110.19410706]
[106.15075684 -119.84963226]
[106.45955658 -132.34317017]
[114.91819763 -140.99058533]
[115.14152527 -155.98892212]
[115.36485291 -170.98725891]
[115.58818054 -185.98559570]
[115.81150818 -200.98393250]
[116.03483582 -215.98226929]
[102.12944031 -222.05809021]
[91.63788605 -232.96545410]
[86.13647461 -247.02062988]
[86.43453979 -262.07049561]
[92.45552826 -275.82232666]
[103.25340271 -286.19302368]
[117.16117096 -291.62472534]
[117.38449860 -306.62304688]
[117.60782623 -321.62139893]
[117.83115387 -336.61972046]
[103.99492645 -342.98202515]
[93.94755554 -354.42623901]
[89.42981720 -368.96963501]
[91.22442627 -384.09243774]
[99.02046204 -397.17453003]
[111.46720886 -405.94940186]
[126.40819550 -408.89672852]
[141.25480652 -405.50585938]
[153.43478394 -396.36428833]
[160.83786011 -383.05587769]
[162.18141174 -367.88632202]
[157.23266602 -353.48391724]
[146.84901428 -342.34390259]
[132.82948303 -336.39639282]
[132.60615540 -321.39807129]
[132.38282776 -306.39971924]
[132.15950012 -291.40139771]
[145.89938354 -285.55801392]
[156.38369751 -274.87042236]
[161.99256897 -260.94543457]
[161.84240723 -245.89335632]
[155.92497253 -232.00820923]
[145.11331177 -221.41806030]
[131.03317261 -215.75894165]
[130.80984497 -200.76060486]
[130.58651733 -185.76226807]
[130.36318970 -170.76393127]
[130.13986206 -155.76559448]
[129.91653442 -140.76725769]
[139.27726746 -125.92327881]
[129.70257568 -110.19410706]
[140.24693298 -120.86259460]
[155.16972351 -122.38251495]
[167.64846802 -114.05899048]
[171.97802734 -99.69741058]
[166.17900085 -85.86370850]
[152.90263367 -78.88246155]
[138.21867371 -81.94540405]
[128.83985901 -93.65394592]
[127.27933502 -78.73534393]
[125.71881104 -63.81673813]
[124.15829468 -48.89813232]
[133.70780945 -37.52525330]
[132.33773804 -22.37343788]
[120.34407043 -12.43413830]
[118.78354645 2.48446655]
[117.22302246 17.40307045]
[123.59425354 30.86623001]
[114.46324158 43.78656769]
[112.90271759 58.70517349]
[115.16084290 62.91348648]
[114.79930115 68.58502197]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[101.79433441 142.82716370]
[99.79032135 157.69268799]
[97.78630829 172.55821228]
[96.55933380 187.50794983]
[96.11273193 202.50129700]
[95.66612244 217.49464417]
[95.21952057 232.48800659]
[94.77291107 247.48135376]
[94.32630920 262.47470093]
[94.10298157 277.47305298]
[94.10298157 292.47305298]
[94.21464539 307.47262573]
[94.43797302 322.47094727]
[94.66130066 337.46929932]
[94.88462830 352.46762085]
[105.26897430 341.64334106]
[120.16748810 339.90139771]
[132.76876831 348.03823853]
[137.31167603 362.33374023]
[131.71925354 376.25225830]
[118.54829407 383.43038940]
[103.82036591 380.58642578]
[94.26826477 369.01879883]
[96.61957550 377.84542847]
[92.79726410 384.17089844]
[91.23674011 399.08950806]
[89.67621613 414.00811768]
[88.11569977 428.92672729]
[100.41982269 420.34716797]
[115.21039581 422.84500122]
[124.01469421 434.98931885]
[121.78921509 449.82330322]
[109.80882263 458.84939575]
[94.93642426 456.89703369]
[85.69186401 445.08551025]
[82.80659485 459.80538940]
[79.92131805 474.52529907]
[77.03604889 489.24517822]
[74.15077209 503.96508789]
[71.26550293 518.68499756]
[85.45008087 523.64263916]
[98.78469086 530.56860352]
[110.99786377 539.32183838]
[121.84094238 549.72418213]
[131.09318542 561.56378174]
[138.56622314 574.59967041]
[144.10791016 588.56646729]
[147.60543823 603.17974854]
[148.98760986 618.14202881]
[148.22625732 633.14874268]
[145.33688354 647.89434814]
[140.37834167 662.07861328]
[133.45155334 675.41278076]
[124.69755554 687.62542725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 196]
[29 195]
[30 194]
[31 193]
[32 192]
[33 191]
[34 184]
[35 183]
[36 182]
[37 181]
[38 179]
[39 171]
[40 170]
[41 169]
[42 168]
[44 167]
[45 166]
[48 165]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[61 159]
[62 158]
[63 157]
[64 156]
[65 155]
[67 153]
[68 152]
[69 149]
[70 148]
[72 146]
[73 145]
[74 144]
[77 141]
[78 140]
[79 139]
[80 138]
[81 130]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
