%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[49.55519867 865.83483887]
[34.55351257 865.70971680]
[19.57022476 864.95654297]
[4.63161850 863.57659912]
[-10.23609734 861.57226562]
[-25.00683975 858.94714355]
[-39.65469742 855.70574951]
[-54.15396881 851.85382080]
[-68.47921753 847.39813232]
[-82.60532379 842.34643555]
[-96.50748444 836.70764160]
[-110.16133118 830.49163818]
[-123.54290009 823.70928955]
[-136.62870789 816.37255859]
[-149.39581299 808.49432373]
[-161.82182312 800.08831787]
[-173.88490295 791.16931152]
[-185.56393433 781.75305176]
[-196.83839417 771.85589600]
[-207.68852234 761.49536133]
[-218.09527588 750.68957520]
[-228.04039001 739.45739746]
[-237.50643921 727.81866455]
[-246.47680664 715.79376221]
[-254.93574524 703.40374756]
[-262.86843872 690.67034912]
[-270.26092529 677.61596680]
[-277.10028076 664.26348877]
[-283.37451172 650.63629150]
[-289.07257080 636.75830078]
[-294.18447876 622.65386963]
[-298.70126343 608.34777832]
[-302.61502075 593.86505127]
[-305.91888428 579.23120117]
[-308.60702515 564.47174072]
[-310.67474365 549.61273193]
[-312.11843872 534.68017578]
[-312.93554688 519.70019531]
[-313.12463379 504.69921875]
[-312.68539429 489.70343018]
[-311.61856079 474.73919678]
[-309.92602539 459.83276367]
[-307.61077881 445.01028442]
[-304.67684937 430.29779053]
[-301.12939453 415.72100830]
[-296.97463989 401.30560303]
[-292.21987915 387.07681274]
[-286.87344360 373.05960083]
[-280.94473267 359.27859497]
[-274.44412231 345.75793457]
[-267.38302612 332.52136230]
[-259.77383423 319.59207153]
[-251.62988281 306.99276733]
[-242.96546936 294.74554443]
[-233.79580688 282.87191772]
[-224.13697815 271.39266968]
[-214.00590515 260.32794189]
[-203.42037964 249.69720459]
[-192.39897156 239.51904297]
[-180.96101379 229.81135559]
[-169.12657166 220.59114075]
[-156.91641235 211.87458801]
[-144.35195923 203.67700195]
[-131.45523071 196.01275635]
[-118.24887085 188.89527893]
[-104.75605774 182.33708191]
[-91.00044250 176.34963989]
[-77.00616455 170.94349670]
[-62.79777908 166.12811279]
[-48.40020752 161.91192627]
[-33.83871078 158.30235291]
[-19.13883018 155.30572510]
[-4.32636118 152.92727661]
[10.57271385 151.17121887]
[25.53225708 150.04058838]
[40.52602386 149.53741455]
[55.52770996 149.66253662]
[70.51099396 150.41575623]
[85.44960022 151.79576111]
[87.45361328 136.93023682]
[89.45762634 122.06470490]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[93.28752899 73.49707794]
[92.82995605 69.57850647]
[93.59064484 66.10622406]
[95.27166748 63.41535568]
[97.49501038 61.70805359]
[100.16081238 46.94683838]
[102.82660675 32.18561935]
[105.49240112 17.42440224]
[108.15819550 2.66318488]
[110.82398987 -12.09803200]
[96.71224976 -17.29705048]
[83.71778870 -24.86772537]
[72.23549652 -34.57999420]
[62.61431503 -46.13871002]
[55.14661026 -59.19261932]
[50.05932617 -73.34503174]
[47.50705719 -88.16586304]
[47.56735992 -103.20472717]
[50.23840714 -118.00460815]
[55.43902206 -132.11576843]
[63.01117325 -145.10937500]
[72.72473907 -156.59056091]
[84.28455353 -166.21043396]
[97.33930969 -173.67665100]
[111.49229431 -178.76232910]
[126.31341553 -181.31291199]
[141.35226440 -181.25091553]
[156.15185547 -178.57818604]
[170.26242065 -173.37596130]
[183.25515747 -165.80235291]
[194.73524475 -156.08747864]
[204.35380554 -144.52658081]
[211.81855774 -131.47097778]
[216.90261841 -117.31740570]
[219.45153809 -102.49600220]
[219.38781738 -87.45714569]
[216.71342468 -72.65786743]
[211.50959778 -58.54789352]
[203.93450928 -45.55600739]
[194.21832275 -34.07702637]
[182.65634155 -24.45977402]
[169.59988403 -16.99651337]
[155.44575500 -11.91404438]
[140.62405396 -9.36681652]
[125.58520508 -9.43223667]
[122.91941071 5.32898045]
[120.25361633 20.09019661]
[117.58782196 34.85141373]
[114.92202759 49.61263275]
[112.25623322 64.37384796]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[104.32315063 124.06871796]
[102.31913757 138.93424988]
[100.31512451 153.79977417]
[115.08587646 156.42488098]
[129.73374939 159.66621399]
[144.23303223 163.51809692]
[158.55828857 167.97375488]
[172.68440247 173.02540588]
[186.58659363 178.66415405]
[200.24044800 184.88012695]
[213.62203979 191.66239929]
[226.70788574 198.99909973]
[239.47500610 206.87733459]
[251.90103149 215.28329468]
[263.96414185 224.20222473]
[275.64318848 233.61848450]
[286.91769409 243.51556396]
[297.76785278 253.87608337]
[308.17465210 264.68185425]
[318.11981201 275.91397095]
[327.58587646 287.55267334]
[336.55627441 299.57757568]
[345.01525879 311.96755981]
[352.94796753 324.70089722]
[360.34051514 337.75527954]
[367.17993164 351.10775757]
[373.45419312 364.73492432]
[379.15228271 378.61291504]
[384.26425171 392.71731567]
[388.78106689 407.02340698]
[392.69488525 421.50610352]
[395.99877930 436.13998413]
[398.68698120 450.89938354]
[400.75476074 465.75839233]
[402.19848633 480.69097900]
[403.01562500 495.67089844]
[403.20477295 510.67193604]
[402.76556396 525.66772461]
[401.69879150 540.63195801]
[400.00631714 555.53839111]
[397.69110107 570.36083984]
[394.75720215 585.07336426]
[391.20980835 599.65014648]
[387.05508423 614.06555176]
[382.30038452 628.29437256]
[376.95397949 642.31158447]
[371.02529907 656.09265137]
[364.52471924 669.61328125]
[357.46368408 682.84991455]
[349.85452271 695.77923584]
[341.71063232 708.37854004]
[333.04626465 720.62579346]
[323.87661743 732.49945068]
[314.21783447 743.97875977]
[304.08679199 755.04345703]
[293.50131226 765.67425537]
[282.47991943 775.85247803]
[271.04199219 785.56018066]
[259.20758057 794.78045654]
[246.99745178 803.49700928]
[234.43301392 811.69464111]
[221.53631592 819.35894775]
[208.32997131 826.47644043]
[194.83717346 833.03466797]
[181.08157349 839.02215576]
[167.08732605 844.42834473]
[152.87895203 849.24377441]
[138.48138428 853.46002197]
[123.91990662 857.06964111]
[109.22003937 860.06628418]
[94.40757751 862.44482422]
[79.50850677 864.20092773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 141]
[80 140]
[81 139]
[82 138]
[83 136]
[84 135]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
