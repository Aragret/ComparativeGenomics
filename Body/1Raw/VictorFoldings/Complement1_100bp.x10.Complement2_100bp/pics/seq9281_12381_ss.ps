%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[49.86697388 939.17846680]
[34.86872101 938.83905029]
[19.89678955 937.88824463]
[4.97610140 936.32751465]
[-9.86850834 934.15942383]
[-24.61233330 931.38769531]
[-39.23083496 928.01690674]
[-53.69967651 924.05267334]
[-67.99478149 919.50152588]
[-82.09236145 914.37115479]
[-95.96894073 908.66998291]
[-109.60143280 902.40753174]
[-122.96714020 895.59423828]
[-136.04382324 888.24151611]
[-148.80972290 880.36145020]
[-161.24357605 871.96728516]
[-173.32469177 863.07293701]
[-185.03295898 853.69323730]
[-196.34890747 843.84375000]
[-207.25369263 833.54089355]
[-217.72915649 822.80187988]
[-227.75788879 811.64447021]
[-237.32316589 800.08728027]
[-246.40907288 788.14959717]
[-255.00051880 775.85119629]
[-263.08316040 763.21264648]
[-270.64358521 750.25488281]
[-277.66915894 736.99957275]
[-284.14825439 723.46868896]
[-290.07003784 709.68481445]
[-295.42465210 695.67083740]
[-300.20321655 681.45013428]
[-304.39776611 667.04638672]
[-308.00131226 652.48352051]
[-311.00784302 637.78576660]
[-313.41238403 622.97766113]
[-315.21093750 608.08374023]
[-316.40048218 593.12890625]
[-316.97903442 578.13793945]
[-316.94564819 563.13586426]
[-316.30038452 548.14770508]
[-315.04431152 533.19824219]
[-313.17950439 518.31250000]
[-310.70910645 503.51522827]
[-307.63717651 488.83102417]
[-303.96887207 474.28433228]
[-299.71026611 459.89935303]
[-294.86846924 445.70007324]
[-289.45153809 431.71008301]
[-283.46847534 417.95269775]
[-276.92922974 404.45080566]
[-269.84472656 391.22686768]
[-262.22671509 378.30288696]
[-254.08792114 365.70040894]
[-245.44183350 353.44039917]
[-236.30288696 341.54321289]
[-226.68627930 330.02874756]
[-216.60800171 318.91607666]
[-206.08485413 308.22372437]
[-195.13432312 297.96951294]
[-183.77465820 288.17050171]
[-172.02476501 278.84298706]
[-159.90417480 270.00247192]
[-147.43310547 261.66372681]
[-134.63226318 253.84057617]
[-121.52299500 246.54608154]
[-108.12709808 239.79235840]
[-94.46687317 233.59065247]
[-80.56505585 227.95129395]
[-66.44479370 222.88366699]
[-52.12957382 218.39619446]
[-37.64323044 214.49636841]
[-23.00987625 211.19065857]
[-8.25386238 208.48457336]
[6.60024834 206.38261414]
[21.52773285 204.88829041]
[36.50374603 204.00407410]
[51.50336456 203.73144531]
[66.50161743 204.07086182]
[81.47354889 205.02174377]
[83.03406525 190.10314941]
[84.59458923 175.18453979]
[86.15511322 160.26593018]
[79.78388214 146.80278015]
[88.91489410 133.88243103]
[75.26887512 125.67626953]
[66.55692291 112.34746552]
[64.51714325 96.55524445]
[69.55649567 81.45027924]
[80.66957092 70.04614258]
[95.63923645 64.61804199]
[96.97747040 49.67785645]
[98.31570435 34.73767090]
[91.84044647 20.30224228]
[100.68236542 8.31601048]
[102.02059937 -6.62417507]
[103.35883331 -21.56435966]
[104.69706726 -36.50454330]
[106.03530121 -51.44472885]
[92.11503601 -57.36769485]
[80.70771027 -67.30389404]
[72.93089294 -80.27988434]
[69.54647064 -95.02439880]
[70.88602448 -110.09294128]
[76.81831360 -124.00923157]
[86.76216125 -135.40989685]
[99.74335480 -143.17802429]
[114.49013519 -146.55255127]
[129.55776978 -145.20291138]
[143.47009277 -139.26129150]
[154.86408997 -129.30981445]
[162.62350464 -116.32341766]
[165.98815918 -101.57437134]
[164.62841797 -86.50764465]
[158.67749023 -72.59931946]
[148.71836853 -61.21198654]
[135.72677612 -53.46126938]
[120.97548676 -50.10649490]
[119.63725281 -35.16630936]
[118.29901886 -20.22612572]
[116.96078491 -5.28594065]
[115.62255096 9.65424442]
[122.19352722 23.02105141]
[113.25588989 36.07590485]
[111.91765594 51.01609039]
[110.57942200 65.95627594]
[122.73804474 72.54311371]
[131.47552490 83.26110077]
[135.47720337 96.49760437]
[134.14102173 110.26108551]
[127.66799927 122.48068237]
[117.03206635 131.31785583]
[103.83349609 135.44296265]
[110.09311676 149.97320557]
[101.07371521 161.82646179]
[99.51319885 176.74505615]
[97.95267487 191.66366577]
[96.39215088 206.58227539]
[111.23676300 208.75025940]
[125.98059845 211.52194214]
[140.59910583 214.89270020]
[155.06796265 218.85691833]
[169.36308289 223.40800476]
[183.46067810 228.53837585]
[197.33728027 234.23951721]
[210.96978760 240.50190735]
[224.33551025 247.31512451]
[237.41221619 254.66786194]
[250.17813110 262.54785156]
[262.61199951 270.94198608]
[274.69314575 279.83630371]
[286.40145874 289.21597290]
[297.71743774 299.06542969]
[308.62222290 309.36822510]
[319.09774780 320.10726929]
[329.12649536 331.26464844]
[338.69180298 342.82177734]
[347.77774048 354.75946045]
[356.36923218 367.05783081]
[364.45190430 379.69638062]
[372.01235962 392.65408325]
[379.03799438 405.90939331]
[385.51708984 419.44024658]
[391.43893433 433.22412109]
[396.79360962 447.23803711]
[401.57220459 461.45874023]
[405.76678467 475.86248779]
[409.37036133 490.42535400]
[412.37695312 505.12307739]
[414.78152466 519.93121338]
[416.58010864 534.82513428]
[417.76971436 549.77996826]
[418.34829712 564.77087402]
[418.31497192 579.77294922]
[417.66973877 594.76116943]
[416.41369629 609.71057129]
[414.54895020 624.59631348]
[412.07858276 639.39361572]
[409.00671387 654.07788086]
[405.33843994 668.62457275]
[401.07986450 683.00952148]
[396.23812866 697.20886230]
[390.82122803 711.19885254]
[384.83819580 724.95623779]
[378.29901123 738.45812988]
[371.21453857 751.68212891]
[363.59655762 764.60607910]
[355.45779419 777.20861816]
[346.81173706 789.46868896]
[337.67282104 801.36584473]
[328.05624390 812.88037109]
[317.97799683 823.99304199]
[307.45489502 834.68542480]
[296.50439453 844.93963623]
[285.14474487 854.73870850]
[273.39489746 864.06628418]
[261.27432251 872.90679932]
[248.80326843 881.24560547]
[236.00245667 889.06878662]
[222.89320374 896.36334229]
[209.49732971 903.11706543]
[195.83712769 909.31884766]
[181.93533325 914.95819092]
[167.81507874 920.02587891]
[153.49986267 924.51342773]
[139.01353455 928.41326904]
[124.38019562 931.71905518]
[109.62418365 934.42517090]
[94.77008057 936.52716064]
[79.84259796 938.02154541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 138]
[81 137]
[82 136]
[83 135]
[85 133]
[91 126]
[92 125]
[93 124]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
