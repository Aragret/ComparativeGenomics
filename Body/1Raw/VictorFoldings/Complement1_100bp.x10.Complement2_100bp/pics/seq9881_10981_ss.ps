%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[126.38697815 866.48095703]
[112.00891113 862.18634033]
[97.95356750 856.93078613]
[84.28510284 850.73840332]
[71.06585693 843.63739014]
[58.35617065 835.66009521]
[46.21402359 826.84301758]
[34.69481659 817.22631836]
[23.85111618 806.85388184]
[13.73239517 795.77307129]
[4.38482571 784.03442383]
[-4.14894152 771.69152832]
[-11.82996845 758.80059814]
[-18.62320900 745.42059326]
[-24.49766541 731.61248779]
[-29.42653465 717.43933105]
[-33.38732910 702.96569824]
[-36.36197281 688.25775146]
[-38.33689499 673.38250732]
[-39.30308151 658.40789795]
[-39.25612640 643.40222168]
[-38.19624710 628.43389893]
[-36.12827682 613.57135010]
[-33.06164932 598.88226318]
[-29.01035690 584.43371582]
[-23.99288750 570.29168701]
[-18.03213501 556.52056885]
[-11.15529633 543.18334961]
[-3.39374804 530.34082031]
[5.21709394 518.05151367]
[14.63794136 506.37158203]
[24.82580757 495.35430908]
[35.73420715 485.04995728]
[47.31336594 475.50555420]
[59.51045609 466.76458740]
[72.26982117 458.86703491]
[85.53323364 451.84887695]
[99.24018860 445.74212646]
[113.32814026 440.57467651]
[127.73281097 436.37008667]
[142.38845825 433.14755249]
[132.84878540 421.70883179]
[138.45335388 406.91360474]
[136.22824097 392.07955933]
[134.00311279 377.24551392]
[131.77799988 362.41146851]
[129.55288696 347.57742310]
[120.01320648 336.13873291]
[125.61777496 321.34347534]
[123.39265442 306.50942993]
[121.16754150 291.67538452]
[106.23471832 290.57412720]
[91.91452026 286.17526245]
[78.92607880 278.69625854]
[67.92240906 268.50946045]
[59.45755386 256.12341309]
[53.95870209 242.15745544]
[51.70462799 227.31086731]
[52.81156158 212.32774353]
[57.22718811 197.95977783]
[64.73313141 184.92849731]
[74.95573425 173.88905334]
[87.38466644 165.39729309]
[101.39839935 159.88175964]
[99.17327881 145.04771423]
[96.94816589 130.21366882]
[94.72304535 115.37962341]
[83.93856049 102.53162384]
[90.24811554 86.98924255]
[87.80239105 72.18997192]
[85.35665894 57.39070129]
[82.91093445 42.59143066]
[80.46520996 27.79215813]
[78.01947784 12.99288750]
[70.74459839 26.11066628]
[57.58331299 33.30653763]
[42.61379242 32.35078812]
[30.47450638 23.53956223]
[24.92694092 9.60311604]
[27.69007301 -5.14019108]
[37.90771484 -16.12198448]
[52.41381836 -19.93943787]
[66.71350861 -15.40966892]
[76.37598419 -3.93604231]
[75.92937469 -18.92939186]
[73.18450165 -23.36929703]
[72.48693085 -27.95914268]
[73.55093384 -31.89398003]
[75.81272125 -34.59891129]
[76.03604889 -49.59724808]
[76.25937653 -64.59558868]
[76.48270416 -79.59392548]
[68.07558441 -89.37570190]
[68.57036591 -101.86325073]
[77.15681458 -110.38378143]
[77.60342407 -125.37712860]
[78.05002594 -140.37048340]
[78.49663544 -155.36383057]
[64.40394592 -160.94702148]
[53.07278061 -171.01580811]
[45.87142563 -184.35432434]
[43.66947937 -199.35189819]
[46.73283768 -214.19749451]
[54.69158936 -227.09843445]
[66.58467102 -236.49685669]
[80.97594452 -241.25787354]
[96.12757874 -240.80654907]
[110.20995331 -235.19738770]
[121.52254486 -225.10774231]
[128.69931030 -211.75596619]
[130.87361145 -196.75436401]
[127.78289795 -181.91444397]
[119.80038452 -169.02819824]
[107.88999939 -159.65170288]
[93.48998260 -154.91722107]
[93.04338074 -139.92387390]
[92.59677124 -124.93052673]
[92.15016937 -109.93717194]
[101.28884888 -94.95547485]
[91.48104095 -79.37059784]
[91.25771332 -64.37226105]
[91.03438568 -49.37392044]
[90.81105804 -34.37558365]
[90.92272186 -19.37599754]
[91.36933136 -4.38264847]
[92.81874847 10.54716015]
[95.26448059 25.34643173]
[97.71020508 40.14570236]
[100.15592957 54.94497299]
[102.60166168 69.74424744]
[105.04738617 84.54351807]
[114.08937836 91.88406372]
[115.90273285 103.38854218]
[109.55709076 113.15451050]
[111.78221130 127.98854828]
[114.00732422 142.82260132]
[116.23244476 157.65663147]
[131.24769592 158.81781006]
[145.62110901 163.28919983]
[158.63278198 170.84349060]
[169.63175964 181.09901428]
[178.06861877 193.53910828]
[183.52287292 207.53804016]
[185.72398376 222.39256287]
[184.56475830 237.35723877]
[180.10650635 251.68176270]
[172.57591248 264.64871216]
[162.35343933 275.60937500]
[149.95410156 284.01620483]
[136.00158691 289.45025635]
[138.22669983 304.28430176]
[140.45181274 319.11834717]
[150.15065002 331.61807251]
[144.38693237 345.35229492]
[146.61204529 360.18634033]
[148.83715820 375.02038574]
[151.06228638 389.85443115]
[153.28739929 404.68847656]
[162.98622131 417.18820190]
[157.22250366 430.92242432]
[172.17864990 429.70318604]
[187.18299866 429.49639893]
[202.16706848 430.30300903]
[217.06248474 432.11938477]
[231.80131531 434.93719482]
[246.31628418 438.74359131]
[260.54116821 443.52120972]
[274.41104126 449.24826050]
[287.86267090 455.89859009]
[300.83462524 463.44189453]
[313.26776123 471.84368896]
[325.10531616 481.06570435]
[336.29327393 491.06582642]
[346.78060913 501.79843140]
[356.51943970 513.21453857]
[365.46539307 525.26208496]
[373.57757568 537.88610840]
[380.81900024 551.02893066]
[387.15664673 564.63067627]
[392.56158447 578.62921143]
[397.00912476 592.96075439]
[400.47900391 607.55981445]
[402.95541382 622.35980225]
[404.42700195 637.29327393]
[404.88705444 652.29199219]
[404.33352661 667.28753662]
[402.76889038 682.21148682]
[400.20031738 696.99578857]
[396.63952637 711.57293701]
[392.10275269 725.87646484]
[386.61068726 739.84106445]
[380.18838501 753.40301514]
[372.86520386 766.50048828]
[364.67449951 779.07373047]
[355.65365601 791.06524658]
[345.84384155 802.42047119]
[335.28982544 813.08752441]
[324.03976440 823.01770020]
[312.14495850 832.16577148]
[299.65972900 840.48992920]
[286.64102173 847.95220947]
[273.14822388 854.51861572]
[259.24288940 860.15911865]
[244.98851013 864.84796143]
[230.45010376 868.56384277]
[215.69401550 871.28973389]
[200.78755188 873.01324463]
[185.79875183 873.72650146]
[170.79598999 873.42620850]
[155.84773254 872.11376953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 160]
[43 158]
[44 157]
[45 156]
[46 155]
[47 154]
[49 152]
[50 151]
[51 150]
[64 137]
[65 136]
[66 135]
[67 134]
[69 131]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[84 125]
[85 124]
[89 123]
[90 122]
[91 121]
[92 120]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
