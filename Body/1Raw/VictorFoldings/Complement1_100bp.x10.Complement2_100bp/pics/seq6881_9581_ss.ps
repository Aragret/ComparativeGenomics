%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[189.88650513 508.46804810]
[195.24732971 494.41921997]
[202.90547180 481.47854614]
[212.64056396 470.01834106]
[224.17250061 460.36837769]
[237.16952515 452.80624390]
[231.92280579 438.75378418]
[226.67608643 424.70129395]
[212.55776978 414.27825928]
[215.75622559 396.14398193]
[210.30087280 382.17120361]
[204.84552002 368.19839478]
[190.57357788 357.98669434]
[193.50169373 339.80682373]
[181.53215027 330.94232178]
[183.48707581 315.24237061]
[177.82429504 301.35232544]
[172.16149902 287.46231079]
[166.49871826 273.57229614]
[155.47433472 268.59335327]
[150.64289856 257.06768799]
[155.09747314 244.96316528]
[149.64212036 230.99037170]
[144.18675232 217.01757812]
[138.73139954 203.04476929]
[132.86244202 189.24060059]
[126.58508301 175.61727905]
[120.30771637 161.99395752]
[107.95429230 153.67277527]
[109.20623016 137.90118408]
[102.92887115 124.27786255]
[96.65151215 110.65454865]
[90.27290344 97.07833862]
[83.79341125 83.54999542]
[77.31391144 70.02165222]
[60.63779068 67.19269562]
[49.04886246 55.10145187]
[46.97131348 38.65014267]
[55.02737808 24.34709167]
[41.95386505 15.43676949]
[43.21348190 0.59552169]
[36.53328705 -12.83485413]
[29.75329399 -26.21512794]
[22.87388229 -39.54455566]
[6.11411142 -44.55748367]
[-1.68125296 -59.83973312]
[3.87651682 -75.71266174]
[-3.20058870 -88.93819427]
[-10.27769375 -102.16371918]
[-17.35479927 -115.38924408]
[-24.43190575 -128.61477661]
[-24.02951241 -113.62017059]
[-27.47001076 -99.02007294]
[-34.52520370 -85.78284454]
[-44.72714615 -74.78646088]
[-57.39918137 -66.76028442]
[-71.70081329 -62.23665237]
[-86.68347168 -61.51560593]
[-101.35341644 -64.64496613]
[-114.73762512 -71.41717529]
[-125.94838715 -81.38306427]
[-134.24212646 -93.88161469]
[-139.06875610 -108.08386230]
[-140.10812378 -123.04780579]
[-137.29132080 -137.78094482]
[-130.80514526 -151.30610657]
[-121.07982635 -162.72618103]
[-108.76039886 -171.28372192]
[-94.66396332 -176.41116333]
[-79.72549438 -177.76838684]
[-64.93579865 -175.26541138]
[-51.27582550 -169.06820679]
[-39.65159607 -159.58784485]
[-30.83164597 -147.44860840]
[-33.27737427 -162.24787903]
[-35.72310257 -177.04714966]
[-38.16882706 -191.84642029]
[-41.48226929 -195.87980652]
[-42.78680038 -200.33531189]
[-42.25802994 -204.37702942]
[-40.37789917 -207.35987854]
[-42.16036606 -222.25360107]
[-43.94282913 -237.14730835]
[-45.72529602 -252.04103088]
[-47.95041275 -266.87506104]
[-50.61621094 -281.63629150]
[-65.66555023 -282.31820679]
[-80.18569946 -286.33230591]
[-93.44832611 -293.47726440]
[-104.78817749 -303.39471436]
[-113.63646698 -315.58715820]
[-119.54935455 -329.44302368]
[-122.23025513 -344.26736450]
[-121.54469299 -359.31652832]
[-117.52706909 -373.83569336]
[-110.37889099 -387.09658813]
[-100.45870972 -398.43405151]
[-88.26412964 -407.27938843]
[-74.40681458 -413.18890381]
[-59.58184052 -415.86621094]
[-44.53282928 -415.17700195]
[-30.01463127 -411.15588379]
[-16.75547028 -404.00448608]
[-5.42042065 -394.08154297]
[3.42195415 -381.88482666]
[9.32812595 -368.02609253]
[12.00184250 -353.20046997]
[11.30899239 -338.15161133]
[7.28432751 -323.63439941]
[0.12972477 -310.37695312]
[-9.79594517 -299.04431152]
[-21.99481392 -290.20489502]
[-35.85499191 -284.30209351]
[-33.18919754 -269.54086304]
[-30.96585274 -267.83355713]
[-29.28483009 -265.14270020]
[-28.52414131 -261.67041016]
[-28.98171043 -257.75186157]
[-30.83157921 -253.82350159]
[-29.04911232 -238.92977905]
[-27.26664734 -224.03605652]
[-25.48418045 -209.14234924]
[-23.36955643 -194.29214478]
[-20.92383003 -179.49287415]
[-18.47810173 -164.69360352]
[-16.03237534 -149.89433289]
[-11.20637703 -135.69187927]
[-4.12927198 -122.46635437]
[2.94783330 -109.24082184]
[10.02493858 -96.01529694]
[17.10204506 -82.78977203]
[29.83541679 -80.81728363]
[39.24825668 -71.73539734]
[41.74849319 -58.69855881]
[36.20331192 -46.42396927]
[43.08272171 -33.09453964]
[48.94380188 -28.59236717]
[49.96366119 -19.51504898]
[56.64385605 -6.08467293]
[69.23955536 1.86501873]
[68.45775604 17.66689682]
[81.77211761 18.65173149]
[92.95088196 26.14701843]
[99.01456451 38.28379440]
[98.28365326 51.93972015]
[90.84225464 63.54215622]
[97.32175446 77.07050323]
[103.80124664 90.59884644]
[109.84662628 95.93044281]
[110.27482605 104.37718964]
[116.55218506 118.00050354]
[122.82954407 131.62382507]
[135.63197327 140.91943359]
[133.93103027 155.71659851]
[140.20838928 169.33992004]
[146.48576355 182.96324158]
[150.11824036 185.34210205]
[152.55929565 188.44142151]
[153.72871399 191.79818726]
[153.70492554 194.97088623]
[152.70419312 197.58941650]
[158.15956116 211.56221008]
[163.61491394 225.53501892]
[169.07026672 239.50781250]
[183.70983887 250.67762756]
[180.38874817 267.90948486]
[186.05152893 281.79953003]
[191.71430969 295.68954468]
[197.37710571 309.57958984]
[209.75167847 319.43759155]
[207.39172363 334.14404297]
[218.95587158 339.85659790]
[223.38645935 351.54220581]
[218.81831360 362.74304199]
[224.27366638 376.71582031]
[229.72903442 390.68862915]
[241.20684814 396.57272339]
[245.46296692 408.32299805]
[240.72856140 419.45458984]
[245.97528076 433.50704956]
[251.22200012 447.55953979]
[265.99472046 444.75335693]
[281.02920532 444.48434448]
[295.89285278 446.76019287]
[310.15805054 451.51544189]
[323.41433716 458.61325073]
[335.28030396 467.84942627]
[345.41452026 478.95825195]
[353.52542114 491.62002563]
[359.37966919 505.47052002]
[362.80877686 520.11120605]
[363.71414185 535.12078857]
[362.06964111 550.06750488]
[357.92263794 564.52124023]
[351.39245605 578.06616211]
[342.66696167 590.31250000]
[331.99719238 600.90795898]
[319.69015503 609.54772949]
[306.09997559 615.98315430]
[291.61761475 620.02905273]
[276.65979004 621.56909180]
[261.65689087 620.55895996]
[247.04052734 617.02758789]
[233.23127747 611.07678223]
[220.62644958 602.87762451]
[209.58871460 592.66601562]
[200.43565369 580.73583984]
[193.43060303 567.43029785]
[188.77513123 553.13226318]
[186.60316467 538.25305176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 181]
[7 180]
[8 179]
[10 176]
[11 175]
[12 174]
[14 171]
[16 169]
[17 168]
[18 167]
[19 166]
[22 164]
[23 163]
[24 162]
[25 161]
[26 156]
[27 155]
[28 154]
[30 152]
[31 151]
[32 150]
[33 148]
[34 147]
[35 146]
[39 141]
[41 139]
[42 138]
[43 136]
[44 135]
[47 131]
[48 130]
[49 129]
[50 128]
[51 127]
[74 126]
[75 125]
[76 124]
[77 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 114]
[86 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
