%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[107.53281403 490.53601074]
[94.59439087 498.15686035]
[80.88404846 504.28112793]
[66.57421112 508.83178711]
[51.84482574 511.75158691]
[36.88114166 513.00384521]
[21.87133789 512.57281494]
[7.00417948 510.46383667]
[-7.53336239 506.70355225]
[-21.55846214 501.33917236]
[-34.89474106 494.43817139]
[-47.37448120 486.08734131]
[-58.84073639 476.39172363]
[-69.14930725 465.47323608]
[-78.17054749 453.46920776]
[-85.79100800 440.53054810]
[-91.91485596 426.82003784]
[-96.46508026 412.51004028]
[-99.38445282 397.78057861]
[-100.63625336 382.81686401]
[-100.20475006 367.80706787]
[-98.09536743 352.93997192]
[-94.33462524 338.40252686]
[-88.96982574 324.37759399]
[-82.06843567 311.04153442]
[-73.71724701 298.56204224]
[-64.02128601 287.09606934]
[-53.10248947 276.78784180]
[-41.09816742 267.76693726]
[-28.15929413 260.14688110]
[-14.44858742 254.02343750]
[-0.13847250 249.47363281]
[14.59108448 246.55470276]
[29.55484581 245.30334473]
[44.56462097 245.73530579]
[59.43165588 247.84513855]
[63.18795395 233.32307434]
[66.94425201 218.80101013]
[70.70055389 204.27896118]
[74.45685577 189.75689697]
[77.67012787 175.10510254]
[80.33592987 160.34388733]
[83.00172424 145.58267212]
[85.66751862 130.82145691]
[83.96826172 127.73197937]
[83.68099976 123.66596222]
[85.24841309 119.29600525]
[88.79605103 115.46698761]
[81.16312408 103.15095520]
[84.37232208 89.02129364]
[96.57649231 81.21075439]
[99.89875031 66.58329010]
[103.22100830 51.95582962]
[106.54326630 37.32837296]
[102.05464935 22.15725136]
[112.41867065 11.45976257]
[107.93005371 -3.71135712]
[118.29407501 -14.40884686]
[121.61633301 -29.03630638]
[124.93859863 -43.66376877]
[120.44997406 -58.83488464]
[130.81399536 -69.53237915]
[134.13626099 -84.15983582]
[137.45851135 -98.78730011]
[123.06629944 -103.03188324]
[108.97226715 -108.18074036]
[95.23316956 -114.21313477]
[81.90433502 -121.10476685]
[69.03942871 -128.82789612]
[56.69025803 -137.35142517]
[44.90654755 -146.64103699]
[33.73574829 -156.65930176]
[23.22283936 -167.36590576]
[13.41015244 -178.71771240]
[4.33720160 -190.66903687]
[-3.95948005 -203.17173767]
[-11.44648457 -216.17547607]
[-18.09366417 -229.62789917]
[-23.87425232 -243.47482300]
[-28.76497459 -257.66049194]
[-32.74613571 -272.12780762]
[-35.80170441 -286.81848145]
[-37.91937637 -301.67337036]
[-39.09062576 -316.63269043]
[-39.31073761 -331.63613892]
[-38.57882309 -346.62338257]
[-36.89783478 -361.53399658]
[-34.27453232 -376.30798340]
[-30.71948624 -390.88586426]
[-26.24700737 -405.20889282]
[-20.87510872 -419.21942139]
[-14.62541771 -432.86105347]
[-7.52310133 -446.07882690]
[0.40324166 -458.81954956]
[9.12169456 -471.03189087]
[18.59715080 -482.66665649]
[28.79145622 -493.67706299]
[39.66356277 -504.01870728]
[51.16968918 -513.64996338]
[63.26350403 -522.53210449]
[75.89631653 -530.62933350]
[89.01724243 -537.90899658]
[102.57347107 -544.34179688]
[116.51039124 -549.90191650]
[130.77191162 -554.56689453]
[145.30056763 -558.31793213]
[160.03790283 -561.13995361]
[174.92453003 -563.02154541]
[189.90054321 -563.95526123]
[204.90560913 -563.93719482]
[219.87933350 -562.96752930]
[234.76139832 -561.05010986]
[249.49189758 -558.19262695]
[264.01150513 -554.40667725]
[278.26174927 -549.70739746]
[292.18527222 -544.11383057]
[305.72598267 -537.64843750]
[318.82937622 -530.33721924]
[331.44265747 -522.20965576]
[343.51510620 -513.29846191]
[354.99801636 -503.63955688]
[365.84521484 -493.27178955]
[376.01303101 -482.23690796]
[385.46047974 -470.57937622]
[394.14953613 -458.34609985]
[402.04522705 -445.58636475]
[409.11572266 -432.35156250]
[415.33258057 -418.69494629]
[420.67077637 -404.67150879]
[425.10879517 -390.33776855]
[428.62878418 -375.75140381]
[431.21655273 -360.97113037]
[432.86169434 -346.05651855]
[433.55755615 -331.06756592]
[433.30136108 -316.06466675]
[432.09414673 -301.10824585]
[429.94073486 -286.25848389]
[426.84985352 -271.57519531]
[422.83392334 -257.11749268]
[417.90908813 -242.94363403]
[412.09524536 -229.11064148]
[405.41571045 -215.67425537]
[397.89746094 -202.68855286]
[389.57073975 -190.20584106]
[380.46908569 -178.27636719]
[370.62911987 -166.94818115]
[360.09048462 -156.26689148]
[348.89562988 -146.27551270]
[337.08963013 -137.01428223]
[324.72000122 -128.52047729]
[311.83654785 -120.82830048]
[298.49118042 -113.96873474]
[284.73760986 -107.96939850]
[270.63122559 -102.85445404]
[256.22885132 -98.64448547]
[241.58845520 -95.35646057]
[226.76898193 -93.00360107]
[211.83012390 -91.59539795]
[196.83203125 -91.13750458]
[181.83508301 -91.63178253]
[166.89968872 -93.07623291]
[152.08598328 -95.46503448]
[148.76371765 -80.83757782]
[145.44145203 -66.21011353]
[150.16770935 -52.08525085]
[139.56605530 -40.34150696]
[136.24378967 -25.71404648]
[132.92153931 -11.08658695]
[137.64778137 3.03827834]
[127.04613495 14.78202152]
[131.77238464 28.90688705]
[121.17073059 40.65063095]
[117.84847260 55.27809143]
[114.52620697 69.90554810]
[111.20394897 84.53301239]
[118.83687592 96.84904480]
[115.62767792 110.97870636]
[103.42350769 118.78924561]
[100.42873383 133.48725891]
[97.76293945 148.24847412]
[95.09714508 163.00968933]
[92.43135071 177.77090454]
[106.05454254 171.49327087]
[119.52441406 178.09346008]
[122.91148376 192.70605469]
[113.71892548 204.55918884]
[98.72315216 204.91517639]
[88.97891998 193.51319885]
[85.22261810 208.03526306]
[81.46631622 222.55731201]
[77.71001434 237.07937622]
[73.95371246 251.60144043]
[87.97913361 256.96496582]
[101.31582642 263.86517334]
[113.79606628 272.21524048]
[125.26290131 281.91015625]
[135.57212830 292.82803345]
[144.59408569 304.83154297]
[152.21531677 317.76974487]
[158.33998108 331.47988892]
[162.89106750 345.78961182]
[165.81130981 360.51889038]
[167.06401062 375.48254395]
[166.63340759 390.49237061]
[164.52491760 405.35958862]
[160.76504517 419.89724731]
[155.40107727 433.92251587]
[148.50048828 447.25900269]
[140.15005493 459.73898315]
[130.45477295 471.20553589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 192]
[37 191]
[38 190]
[39 189]
[40 188]
[41 182]
[42 181]
[43 180]
[44 179]
[48 178]
[51 175]
[52 174]
[53 173]
[54 172]
[56 170]
[58 168]
[59 167]
[60 166]
[62 164]
[63 163]
[64 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
