%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[77.39745331 531.07867432]
[63.99435043 524.32305908]
[51.22161484 516.44024658]
[39.17381668 507.48858643]
[27.94014931 497.53439331]
[17.60378647 486.65130615]
[8.24125671 474.91998291]
[-0.07812376 462.42718506]
[-7.29275846 449.26550293]
[-13.34923267 435.53228760]
[-18.20270538 421.32931519]
[-21.81724167 406.76165771]
[-24.16608238 391.93719482]
[-25.23183632 376.96569824]
[-25.00661087 361.95800781]
[-23.49207687 347.02523804]
[-20.69944382 332.27795410]
[-16.64939117 317.82531738]
[-11.37190437 303.77435303]
[-4.90605450 290.22909546]
[2.70028543 277.28979492]
[11.39079952 265.05230713]
[21.10114670 253.60719299]
[31.75943184 243.03919983]
[43.28674316 233.42657471]
[55.59773636 224.84049988]
[68.60126495 217.34451294]
[82.20104980 210.99414062]
[96.29640198 205.83638000]
[110.78296661 201.90943909]
[108.11717224 187.14822388]
[105.45137787 172.38699341]
[102.78558350 157.62577820]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[77.93704987 86.13134003]
[67.59789276 78.47126007]
[60.94802856 67.50977325]
[58.94513702 54.89360428]
[61.85186005 42.50252533]
[69.20198822 32.16925812]
[79.87480927 25.40839958]
[77.64968872 10.57435608]
[75.42457581 -4.25968742]
[60.48200607 -2.90034986]
[45.48568344 -2.41214728]
[30.48634529 -2.79673147]
[15.53474426 -4.05280113]
[0.68147391 -6.17610645]
[-14.02320766 -9.15946293]
[-28.52954292 -12.99277496]
[-42.78844833 -17.66307259]
[-56.75167465 -23.15455246]
[-70.37197876 -29.44863319]
[-83.60326385 -36.52401733]
[-96.40077209 -44.35676193]
[-108.72119141 -52.92036819]
[-120.52283478 -62.18585587]
[-131.76577759 -72.12187195]
[-142.41195679 -82.69480133]
[-152.42536926 -93.86886597]
[-161.77212524 -105.60625458]
[-170.42059326 -117.86724854]
[-178.34150696 -130.61036682]
[-185.50808716 -143.79248047]
[-191.89605713 -157.36900330]
[-197.48382568 -171.29397583]
[-202.25245667 -185.52029419]
[-206.18583679 -199.99981689]
[-209.27066040 -214.68354797]
[-211.49647522 -229.52180481]
[-212.85574341 -244.46438599]
[-213.34388733 -259.46069336]
[-212.95924377 -274.46005249]
[-211.70310974 -289.41165161]
[-209.57974243 -304.26489258]
[-206.59632874 -318.96957397]
[-202.76295471 -333.47589111]
[-198.09259033 -347.73477173]
[-192.60105896 -361.69796753]
[-186.30691528 -375.31826782]
[-179.23147583 -388.54953003]
[-171.39868164 -401.34698486]
[-162.83502197 -413.66735840]
[-153.56948853 -425.46896362]
[-143.63342285 -436.71188354]
[-133.06045532 -447.35800171]
[-121.88634491 -457.37136841]
[-110.14891815 -466.71807861]
[-97.88788605 -475.36651611]
[-85.14473724 -483.28738403]
[-71.96259308 -490.45388794]
[-58.38604355 -496.84179688]
[-44.46104431 -502.42950439]
[-30.23470497 -507.19808960]
[-15.75516701 -511.13140869]
[-1.07142270 -514.21618652]
[13.76684189 -516.44189453]
[28.70941925 -517.80114746]
[43.70574570 -518.28918457]
[58.70508194 -517.90447998]
[73.65666962 -516.64831543]
[88.50992584 -514.52490234]
[103.21458435 -511.54141235]
[117.72088623 -507.70797729]
[131.97975159 -503.03756714]
[145.94293213 -497.54595947]
[159.56318665 -491.25177002]
[172.79441833 -484.17626953]
[185.59185791 -476.34341431]
[197.91220093 -467.77972412]
[209.71377563 -458.51412964]
[220.95661926 -448.57800293]
[231.60272217 -438.00500488]
[241.61604309 -426.83084106]
[250.96269226 -415.09338379]
[259.61105347 -402.83233643]
[267.53189087 -390.08914185]
[274.69833374 -376.90695190]
[281.08621216 -363.33038330]
[286.67385864 -349.40536499]
[291.44238281 -335.17901611]
[295.37564087 -320.69946289]
[298.46032715 -306.01568604]
[300.68600464 -291.17742920]
[302.04516602 -276.23483276]
[302.53317261 -261.23849487]
[302.14840698 -246.23918152]
[300.89215088 -231.28759766]
[298.76867676 -216.43434143]
[295.78512573 -201.72970581]
[291.95162964 -187.22341919]
[287.28115845 -172.96456909]
[281.78952026 -159.00140381]
[275.49526978 -145.38117981]
[268.41970825 -132.14997864]
[260.58682251 -119.35257721]
[252.02305603 -107.03226471]
[242.75741577 -95.23073578]
[232.82125854 -83.98792267]
[222.24819946 -73.34186554]
[211.07400513 -63.32859802]
[199.33650208 -53.98198700]
[187.07540894 -45.33367157]
[174.33218384 -37.41290665]
[161.14997864 -30.24649620]
[147.57337952 -23.85869217]
[133.64833069 -18.27110291]
[119.42195892 -13.50264072]
[104.94238281 -9.56943893]
[90.25861359 -6.48480463]
[92.48373413 8.34923935]
[94.70884705 23.18328285]
[110.94981384 28.89899635]
[122.11627197 42.12107849]
[125.06305695 59.26519012]
[118.88945007 75.62358856]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[117.54679871 154.95999146]
[120.21259308 169.72120667]
[122.87838745 184.48242188]
[125.54418182 199.24363708]
[140.48922729 197.85539246]
[155.49827576 197.75704956]
[170.46023560 198.94934082]
[185.26429749 201.42341614]
[199.80087280 205.16098022]
[213.96234131 210.13435364]
[227.64382935 216.30670166]
[240.74407959 223.63235474]
[253.16607666 232.05705261]
[264.81784058 241.51841736]
[275.61312866 251.94641113]
[285.47201538 263.26382446]
[294.32150269 275.38687134]
[302.09603882 288.22579956]
[308.73809814 301.68551636]
[314.19851685 315.66641235]
[318.43682861 330.06497192]
[321.42169189 344.77456665]
[323.13095093 359.68630981]
[323.55203247 374.68975830]
[322.68173218 389.67388916]
[320.52655029 404.52774048]
[317.10244751 419.14132690]
[312.43472290 433.40646362]
[306.55798340 447.21749878]
[299.51571655 460.47225952]
[291.36007690 473.07254028]
[282.15145874 484.92504883]
[271.95800781 495.94207764]
[260.85519409 506.04202271]
[248.92523193 515.15014648]
[236.25645447 523.19897461]
[222.94265747 530.12890625]
[209.08241272 535.88867188]
[194.77833557 540.43566895]
[180.13632202 543.73608398]
[165.26478577 545.76562500]
[150.27384949 546.50921631]
[135.27447510 545.96130371]
[120.37771606 544.12603760]
[105.69388580 541.01696777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 169]
[31 168]
[32 167]
[33 166]
[34 165]
[35 164]
[36 163]
[38 161]
[45 156]
[46 155]
[47 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
