%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[52.72646713 712.10839844]
[37.93575668 714.63763428]
[23.01129150 716.19415283]
[8.01698303 716.77117920]
[-6.98296118 716.36627197]
[-21.92430878 714.98120117]
[-36.74307632 712.62188721]
[-51.37580872 709.29846191]
[-65.75984955 705.02508545]
[-79.83359528 699.82006836]
[-93.53678894 693.70581055]
[-106.81073761 686.70831299]
[-119.59861755 678.85766602]
[-131.84565735 670.18750000]
[-143.49940491 660.73486328]
[-154.50997925 650.54028320]
[-164.83021545 639.64739990]
[-174.41592407 628.10284424]
[-183.22605896 615.95605469]
[-191.22288513 603.25909424]
[-198.37216187 590.06628418]
[-204.64328003 576.43414307]
[-210.00938416 562.42108154]
[-214.44750977 548.08697510]
[-217.93861389 533.49334717]
[-220.46778870 518.70263672]
[-222.02416992 503.77816772]
[-222.60110474 488.78384399]
[-222.19613647 473.78390503]
[-220.81098938 458.84255981]
[-218.45159912 444.02380371]
[-215.12805176 429.39108276]
[-210.85459900 415.00708008]
[-205.64952087 400.93338013]
[-199.53512573 387.23022461]
[-192.53759766 373.95629883]
[-184.68688965 361.16845703]
[-176.01661682 348.92147827]
[-166.56391907 337.26779175]
[-156.36926270 326.25726318]
[-145.47631836 315.93710327]
[-133.93171692 306.35147095]
[-121.78490448 297.54141235]
[-109.08788300 289.54464722]
[-95.89504242 282.39544678]
[-82.26286316 276.12438965]
[-68.24972534 270.75839233]
[-53.91563416 266.32034302]
[-39.32197189 262.82931519]
[-24.53122902 260.30026245]
[-9.60674667 258.74395752]
[5.38756847 258.16708374]
[20.38750839 258.57214355]
[35.32883835 259.95739746]
[50.14757919 262.31686401]
[53.46983719 247.68942261]
[56.79209900 233.06196594]
[60.11435699 218.43449402]
[63.43661880 203.80703735]
[66.75888062 189.17958069]
[65.38079071 186.73846436]
[64.88661957 183.60440063]
[65.54515076 180.11129761]
[67.49943542 176.68415833]
[70.73885345 173.79277039]
[74.92586517 159.38899231]
[79.11287689 144.98519897]
[75.23573303 130.60406494]
[86.51759338 119.51216888]
[90.70460510 105.10838318]
[94.24427795 90.53201294]
[97.12954712 75.81211853]
[100.01482391 61.09222794]
[98.59454346 52.06888962]
[103.05418396 46.17538452]
[106.15829468 31.50008392]
[109.26240540 16.82478142]
[112.36651611 2.14947891]
[115.47062683 -12.52582359]
[118.57473755 -27.20112610]
[113.86074066 -42.30373383]
[124.06433868 -53.15434265]
[127.16844940 -67.82964325]
[112.88455200 -72.45435333]
[99.16232300 -78.54682922]
[86.15212250 -86.04030609]
[73.99648285 -94.85269165]
[62.82859421 -104.88742828]
[52.77081680 -116.03457642]
[43.93335342 -128.17199707]
[36.41303253 -141.16670227]
[30.29224205 -154.87632751]
[25.63805389 -169.15065002]
[22.50145721 -183.83326721]
[20.91682053 -198.76332092]
[20.90150452 -213.77723694]
[22.45567703 -228.71049500]
[25.56230927 -243.39949036]
[30.18736649 -257.68328857]
[36.28017044 -271.40536499]
[43.77396393 -284.41537476]
[52.58664703 -296.57080078]
[62.62165833 -307.73846436]
[73.76905060 -317.79595947]
[85.90668488 -326.63311768]
[98.90157318 -334.15313721]
[112.61134338 -340.27359009]
[126.88577271 -344.92742920]
[141.56848145 -348.06365967]
[156.49856567 -349.64794922]
[171.51248169 -349.66290283]
[186.44570923 -348.10836792]
[201.13462830 -345.00137329]
[215.41830444 -340.37597656]
[229.14022827 -334.28283691]
[242.15007019 -326.78872681]
[254.30528259 -317.97573853]
[265.47268677 -307.94046021]
[275.52990723 -296.79281616]
[284.36679077 -284.65496826]
[291.88647461 -271.65991211]
[298.00659180 -257.94998169]
[302.66009521 -243.67543030]
[305.79598999 -228.99266052]
[307.37988281 -214.06253052]
[307.39447021 -199.04861450]
[305.83956909 -184.11543274]
[302.73223877 -169.42658997]
[298.10647583 -155.14302063]
[292.01303101 -141.42124939]
[284.51858521 -128.41157532]
[275.70532227 -116.25658417]
[265.66976929 -105.08943176]
[254.52188110 -95.03247070]
[242.38381958 -86.19588470]
[229.38856506 -78.67651367]
[215.67849731 -72.55672455]
[201.40383911 -67.90357208]
[186.72099304 -64.76804352]
[171.79081726 -63.18449783]
[156.77690125 -63.17027664]
[141.84375000 -64.72553253]
[138.73963928 -50.05023193]
[143.67567444 -35.99729919]
[133.25003052 -24.09701538]
[130.14591980 -9.42171383]
[127.04181671 5.25358915]
[123.93770599 19.92889214]
[120.83359528 34.60419464]
[117.72948456 49.27949524]
[114.73471069 63.97750092]
[111.84944153 78.69739532]
[108.96416473 93.41728210]
[121.98465729 85.96968079]
[136.49340820 89.77709198]
[144.17912292 102.65845490]
[140.63911438 117.23474884]
[127.90122223 125.15599823]
[113.26231384 121.88456726]
[105.10838318 109.29539490]
[100.92137146 123.69918060]
[104.49903107 139.11056519]
[93.51666260 149.17221069]
[89.32965088 163.57598877]
[85.14263916 177.97978210]
[81.38633728 192.50183105]
[78.06407928 207.12930298]
[74.74182129 221.75675964]
[71.41955566 236.38421631]
[68.09729767 251.01167297]
[64.77503967 265.63912964]
[79.15912628 269.91235352]
[93.23294067 275.11715698]
[106.93620300 281.23132324]
[120.21023560 288.22860718]
[132.99819946 296.07910156]
[145.24534607 304.74914551]
[156.89921570 314.20162964]
[167.90989685 324.39608765]
[178.23027039 335.28884888]
[187.81611633 346.83328247]
[196.62638855 358.97994995]
[204.62336731 371.67681885]
[211.77279663 384.86953735]
[218.04408264 398.50161743]
[223.41035461 412.51464844]
[227.84863281 426.84866333]
[231.33992004 441.44226074]
[233.86926270 456.23297119]
[235.42582703 471.15740967]
[236.00294495 486.15173340]
[235.59814453 501.15167236]
[234.21318054 516.09301758]
[231.85395813 530.91180420]
[228.53057861 545.54455566]
[224.25729370 559.92864990]
[219.05238342 574.00238037]
[212.93815613 587.70562744]
[205.94078064 600.97961426]
[198.09022522 613.76757812]
[189.42008972 626.01464844]
[179.96752930 637.66845703]
[169.77301025 648.67907715]
[158.88018799 658.99938965]
[147.33569336 668.58514404]
[135.18898010 677.39538574]
[122.49206543 685.39227295]
[109.29930878 692.54162598]
[95.66720581 698.81280518]
[81.65412903 704.17901611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[60 166]
[65 165]
[66 164]
[67 163]
[69 161]
[70 160]
[71 153]
[72 152]
[73 151]
[75 150]
[76 149]
[77 148]
[78 147]
[79 146]
[80 145]
[82 143]
[83 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
