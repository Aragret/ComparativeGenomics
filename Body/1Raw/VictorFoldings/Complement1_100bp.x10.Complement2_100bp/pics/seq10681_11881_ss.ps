%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[201.63378906 251.46020508]
[205.82217407 237.04757690]
[211.20188904 223.03596497]
[217.73521423 209.52366638]
[225.37631226 196.60545349]
[213.14982605 187.91563416]
[200.92333984 179.22581482]
[188.69685364 170.53598022]
[172.24935913 174.04583740]
[158.07325745 164.38389587]
[155.21583557 147.12542725]
[142.86132812 138.61860657]
[130.50682068 130.11178589]
[118.15231323 121.60494995]
[105.79780579 113.09812164]
[91.87657928 111.79768372]
[85.69537354 99.25638580]
[71.84049988 105.73634338]
[56.70233154 104.42004395]
[44.33773041 95.76077271]
[38.00992966 82.16610718]
[39.32757568 67.32935333]
[26.97306442 58.82252502]
[14.61855602 50.31569672]
[14.73051834 65.31527710]
[3.16990566 74.87311554]
[-11.54122925 71.94352722]
[-18.55838585 58.68609238]
[-12.70877552 44.87370300]
[1.69385386 40.68807220]
[-9.99372768 31.28592110]
[-21.68130875 21.88376999]
[-33.36888885 12.48161888]
[-45.05646896 3.07946825]
[-55.31039047 14.03708553]
[-66.35450745 24.19778061]
[-78.12705231 33.50473404]
[-90.56219482 41.90589142]
[-103.59038544 49.35427475]
[-117.13877106 55.80822754]
[-131.13157654 61.23165512]
[-145.49055481 65.59423065]
[-160.13539124 68.87155151]
[-174.98419189 71.04528809]
[-189.95393372 72.10329437]
[-204.96086121 72.03964233]
[-219.92108154 70.85469055]
[-234.75091553 68.55506897]
[-249.36743164 65.15364075]
[-263.68887329 60.66942215]
[-277.63519287 55.12749100]
[-291.12832642 48.55884552]
[-304.09286499 41.00021362]
[-316.45629883 32.49387360]
[-328.14947510 23.08739090]
[-339.10699463 12.83337593]
[-349.26760864 1.78917229]
[-358.57446289 -9.98345661]
[-366.97549438 -22.41867065]
[-374.42376709 -35.44692993]
[-380.87759399 -48.99536896]
[-386.30090332 -62.98822403]
[-390.66336060 -77.34723663]
[-393.94055176 -91.99211121]
[-396.11416626 -106.84093475]
[-397.17202759 -121.81067657]
[-397.10824585 -136.81761169]
[-395.92315674 -151.77781677]
[-393.62341309 -166.60763550]
[-390.22183228 -181.22412109]
[-385.73748779 -195.54553223]
[-380.19543457 -209.49177551]
[-373.62667847 -222.98486328]
[-366.06793213 -235.94934082]
[-357.56149292 -248.31269836]
[-348.15490723 -260.00579834]
[-337.90078735 -270.96322632]
[-326.85650635 -281.12371826]
[-315.08377075 -290.43048096]
[-302.64849854 -298.83142090]
[-289.62017822 -306.27957153]
[-276.07168579 -312.73327637]
[-262.07876587 -318.15646362]
[-247.71972656 -322.51876831]
[-233.07481384 -325.79583740]
[-218.22598267 -327.96932983]
[-203.25622559 -329.02706909]
[-188.24928284 -328.96313477]
[-173.28909302 -327.77792358]
[-158.45930481 -325.47805786]
[-143.84284973 -322.07635498]
[-129.52146912 -317.59188843]
[-115.57527161 -312.04971313]
[-102.08223724 -305.48083496]
[-89.11783600 -297.92196655]
[-76.75455475 -289.41540527]
[-65.06154633 -280.00872803]
[-54.10419846 -269.75451660]
[-43.94379425 -258.71011353]
[-34.63715363 -246.93733215]
[-26.23632431 -234.50196838]
[-18.78828621 -221.47358704]
[-12.33469105 -207.92503357]
[-6.91163349 -193.93208313]
[-2.54944015 -179.57298279]
[0.72749329 -164.92805481]
[2.90084076 -150.07919312]
[3.95844769 -135.10943604]
[3.89439964 -120.10250092]
[2.70905471 -105.14231110]
[0.40904179 -90.31253815]
[-2.99277616 -75.69612122]
[-7.47737455 -61.37478638]
[-13.01967335 -47.42863464]
[-19.58867836 -33.93565750]
[-27.14765167 -20.97131729]
[-35.65431976 -8.60811329]
[-23.96673775 0.79403818]
[-12.27915764 10.19618893]
[-0.59157616 19.59834099]
[11.09600544 29.00049210]
[23.12538338 37.96118927]
[35.47989273 46.46801376]
[47.83440018 54.97484207]
[61.22486115 48.45094681]
[76.18243408 49.51254654]
[88.68295288 57.97441864]
[95.31311798 71.64693451]
[94.20219421 86.90187836]
[108.12342072 88.20231628]
[114.30462646 100.74361420]
[126.65914154 109.25044250]
[139.01364136 117.75727081]
[151.36816406 126.26409912]
[163.72267151 134.77091980]
[176.59899902 130.81938171]
[189.21600342 134.94512939]
[197.03715515 145.42900085]
[197.38667297 158.30949402]
[209.61315918 166.99932861]
[221.83964539 175.68914795]
[234.06613159 184.37896729]
[243.75402832 172.91549683]
[254.36718750 162.30288696]
[265.83117676 152.61560059]
[278.06555176 143.92156982]
[290.98455811 136.28178406]
[304.49752808 129.74984741]
[318.50967407 124.37155914]
[332.92272949 120.18464661]
[347.63558960 117.21848297]
[362.54507446 115.49387360]
[377.54656982 115.02291870]
[392.53485107 115.80891418]
[407.40478516 117.84635162]
[422.05209351 121.12093353]
[436.37402344 125.60970306]
[450.27011108 131.28115845]
[463.64288330 138.09553528]
[476.39852905 146.00502014]
[488.44760132 154.95413208]
[499.70553589 164.88011169]
[510.09341431 175.71333313]
[519.53833008 187.37779236]
[527.97412109 199.79168701]
[535.34149170 212.86793518]
[541.58880615 226.51481628]
[546.67230225 240.63659668]
[550.55627441 255.13423157]
[553.21350098 269.90600586]
[554.62530518 284.84835815]
[554.78179932 299.85641479]
[553.68188477 314.82495117]
[551.33331299 329.64892578]
[547.75250244 344.22439575]
[542.96459961 358.44912720]
[537.00317383 372.22329712]
[529.91009521 385.45034790]
[521.73504639 398.03744507]
[512.53540039 409.89633179]
[502.37570190 420.94381714]
[491.32717896 431.10238647]
[479.46734619 440.30084229]
[466.87942505 448.47457886]
[453.65164185 455.56634521]
[439.87686157 461.52633667]
[425.65167236 466.31280518]
[411.07583618 469.89212036]
[396.25158691 472.23919678]
[381.28295898 473.33755493]
[366.27490234 473.17953491]
[351.33270264 471.76620483]
[336.56118774 469.10751343]
[322.06396484 465.22204590]
[307.94268799 460.13714600]
[294.29644775 453.88839722]
[281.22094727 446.51968384]
[268.80792236 438.08267212]
[257.14440918 428.63653564]
[246.31227112 418.24755859]
[236.38743591 406.98861694]
[227.43954468 394.93862915]
[219.53135681 382.18218994]
[212.71835327 368.80871582]
[207.04830933 354.91204834]
[202.56098938 340.58969116]
[199.28790283 325.94204712]
[197.25198364 311.07186890]
[196.46751404 296.08352661]
[196.94000244 281.08206177]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 142]
[6 141]
[7 140]
[8 139]
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[17 129]
[22 124]
[23 123]
[24 122]
[30 121]
[31 120]
[32 119]
[33 118]
[34 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
