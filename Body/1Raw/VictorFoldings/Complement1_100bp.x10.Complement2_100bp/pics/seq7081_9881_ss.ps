%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[83.47654724 568.63922119]
[72.67031097 579.09271240]
[60.29078674 587.62481689]
[46.67569351 594.00286865]
[32.19646835 598.05279541]
[17.24810600 599.66406250]
[2.23841476 598.79284668]
[-12.42313194 595.46289062]
[-26.33655548 589.76495361]
[-39.12229156 581.85449219]
[-50.43153000 571.94738770]
[-59.95574951 560.31384277]
[-67.43511963 547.27130127]
[-72.66560364 533.17547607]
[-75.50450134 518.41094971]
[-75.87438202 503.38055420]
[-73.76513672 488.49429321]
[-69.23431396 474.15826416]
[-62.40551376 460.76358032]
[-53.46504211 448.67565918]
[-42.65679169 438.22427368]
[-30.27562523 429.69451904]
[-16.65930557 423.31912231]
[-2.17929721 419.27200317]
[12.76937389 417.66357422]
[27.77889633 418.53768921]
[31.10115623 403.91021729]
[22.97075462 391.48315430]
[26.13162422 376.60150146]
[39.22140884 368.15783691]
[42.54367065 353.53036499]
[45.86592865 338.90292358]
[49.18818665 324.27545166]
[44.46193695 310.15060425]
[55.06359100 298.40686035]
[53.47962952 291.18792725]
[58.54573822 283.58709717]
[62.08541107 269.01074219]
[65.62508392 254.43435669]
[68.61985779 239.73635864]
[71.06558228 224.93708801]
[73.51131439 210.13781738]
[75.95703888 195.33854675]
[78.40276337 180.53927612]
[80.84849548 165.74000549]
[83.29421997 150.94073486]
[81.28338623 143.82888794]
[85.88810730 135.94000244]
[88.55390167 121.17879486]
[76.69977570 106.05423737]
[79.69175720 87.07213593]
[95.62346649 76.32722473]
[97.62748718 61.46169662]
[99.63150024 46.59616852]
[101.63551331 31.73063850]
[103.63952637 16.86511040]
[105.64353943 1.99958265]
[99.81931305 -12.71058464]
[109.18762970 -24.29004860]
[107.39645386 -28.24550819]
[106.99727631 -32.17045212]
[107.80957794 -35.63102341]
[109.53047943 -38.29656601]
[111.77899170 -39.97057724]
[114.66426849 -54.69047165]
[109.72593689 -69.72122192]
[119.76686096 -80.72254181]
[122.65213013 -95.44243622]
[125.53740692 -110.16232300]
[128.42268372 -124.88221741]
[131.30795288 -139.60211182]
[126.36962128 -154.63285828]
[136.41053772 -165.63418579]
[122.69539642 -159.56007385]
[109.32527924 -166.36007690]
[106.15615082 -181.02146912]
[115.52416229 -192.73643494]
[130.52357483 -192.86912537]
[140.09696960 -181.32333374]
[144.06906128 -195.78785706]
[148.04116821 -210.25238037]
[152.01325989 -224.71690369]
[155.98535156 -239.18142700]
[141.96820068 -244.55599976]
[128.54534912 -251.27862549]
[115.84606934 -259.28457642]
[103.99267578 -268.49673462]
[93.09931946 -278.82638550]
[83.27091980 -290.17404175]
[74.60211945 -302.43041992]
[67.17641449 -315.47747803]
[61.06532288 -329.18954468]
[56.32769394 -343.43460083]
[53.00915527 -358.07543945]
[51.14166641 -372.97106934]
[50.74321365 -387.97799683]
[51.81763840 -402.95172119]
[54.35458755 -417.74801636]
[58.32963181 -432.22442627]
[63.70448303 -446.24145508]
[70.42738342 -459.66418457]
[78.43358612 -472.36331177]
[87.64598083 -484.21652222]
[97.97584534 -495.10964966]
[109.32369995 -504.93783569]
[121.58024597 -513.60638428]
[134.62745667 -521.03179932]
[148.33966064 -527.14263916]
[162.58480835 -531.88000488]
[177.22572327 -535.19824219]
[192.12136841 -537.06542969]
[207.12831116 -537.46356201]
[222.10200500 -536.38885498]
[236.89826965 -533.85162354]
[251.37457275 -529.87628174]
[265.39151001 -524.50115967]
[278.81411743 -517.77795410]
[291.51306152 -509.77151489]
[303.36608887 -500.55889893]
[314.25903320 -490.22882080]
[324.08697510 -478.88076782]
[332.75527954 -466.62402344]
[340.18045044 -453.57669067]
[346.29101562 -439.86434937]
[351.02807617 -425.61911011]
[354.34600830 -410.97814941]
[356.21292114 -396.08245850]
[356.61077881 -381.07550049]
[355.53573608 -366.10180664]
[352.99819946 -351.30560303]
[349.02258301 -336.82937622]
[343.64715576 -322.81256104]
[336.92373657 -309.39010620]
[328.91702271 -296.69131470]
[319.70416260 -284.83847046]
[309.37384033 -273.94573975]
[298.02560425 -264.11801147]
[285.76870728 -255.44993591]
[272.72119141 -248.02502441]
[259.00875854 -241.91474915]
[244.76341248 -237.17797852]
[230.12237549 -233.86032104]
[215.22665405 -231.99371338]
[200.21969604 -231.59617615]
[185.24603271 -232.67149353]
[170.44987488 -235.20932007]
[166.47778320 -220.74479675]
[162.50569153 -206.28027344]
[158.53359985 -191.81575012]
[154.56149292 -177.35122681]
[151.13043213 -162.74891663]
[156.27514648 -148.77102661]
[146.02784729 -136.71684265]
[143.14256287 -121.99694824]
[140.25729370 -107.27705383]
[137.37202454 -92.55715942]
[134.48675537 -77.83727264]
[139.63145447 -63.85938644]
[129.38415527 -51.80519867]
[126.49888611 -37.08530426]
[124.05315399 -22.28603554]
[130.02072144 -8.63914967]
[120.50906372 4.00359631]
[118.50505066 18.86912537]
[116.50103760 33.73465347]
[114.49702454 48.60018158]
[112.49301147 63.46570969]
[110.48899841 78.33123779]
[118.49712372 84.59186554]
[123.20750427 93.59952545]
[123.78034210 103.74829102]
[120.11351013 113.22879791]
[112.86075592 120.35080719]
[103.31511688 123.84458923]
[100.64932251 138.60580444]
[98.09349060 153.38645935]
[95.64776611 168.18572998]
[93.20203400 182.98500061]
[90.75630951 197.78427124]
[88.31058502 212.58354187]
[85.86485291 227.38281250]
[83.41912842 242.18208313]
[96.94734192 235.70231628]
[110.51399231 242.10122681]
[114.11824799 256.66177368]
[105.10317993 268.65045166]
[90.11437225 269.22967529]
[80.20145416 257.97402954]
[76.66178894 272.55041504]
[73.12211609 287.12677002]
[69.69105530 301.72909546]
[74.17967224 316.90023804]
[63.81564713 327.59771729]
[60.49338913 342.22518921]
[57.17113113 356.85263062]
[53.84886932 371.48010254]
[62.00703812 384.74969482]
[58.42942047 399.53668213]
[45.72861481 407.23248291]
[42.40635681 421.85992432]
[56.32087708 427.55517578]
[69.10813904 435.46316528]
[80.41928101 445.36810303]
[89.94574738 456.99978638]
[97.42762756 470.04092407]
[102.66082764 484.13574219]
[105.50257111 498.89968872]
[105.87534332 513.92999268]
[103.76896667 528.81671143]
[99.24090576 543.15356445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 200]
[27 199]
[30 196]
[31 195]
[32 194]
[33 193]
[35 191]
[37 190]
[38 189]
[39 188]
[40 182]
[41 181]
[42 180]
[43 179]
[44 178]
[45 177]
[46 176]
[48 175]
[49 174]
[52 168]
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[59 161]
[64 160]
[65 159]
[67 157]
[68 156]
[69 155]
[70 154]
[71 153]
[73 151]
[79 150]
[80 149]
[81 148]
[82 147]
[83 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
