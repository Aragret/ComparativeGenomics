%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[193.43634033 620.18170166]
[183.64707947 608.80895996]
[174.63931274 596.80773926]
[166.45324707 584.23168945]
[159.12545776 571.13690186]
[152.68867493 557.58197021]
[147.17163086 543.62731934]
[142.59898376 529.33532715]
[138.99114990 514.76989746]
[136.36424255 499.99597168]
[134.72999573 485.07958984]
[134.09570312 470.08737183]
[134.46420288 455.08624268]
[135.83386230 440.14324951]
[138.19853210 425.32510376]
[141.54766846 410.69796753]
[145.86631775 396.32720947]
[151.13519287 382.27700806]
[157.33074951 368.61010742]
[164.42532349 355.38754272]
[172.38722229 342.66836548]
[181.18089294 330.50939941]
[190.76705933 318.96493530]
[201.10292053 308.08654785]
[212.14228821 297.92279053]
[223.83586121 288.51910400]
[215.23730469 276.22827148]
[206.63873291 263.93743896]
[190.36012268 257.38198853]
[188.91549683 239.02458191]
[180.13488770 226.86312866]
[171.35429382 214.70167542]
[159.46633911 212.46487427]
[152.05154419 202.40483093]
[153.52391052 189.59097290]
[144.92533875 177.30012512]
[136.32678223 165.00929260]
[127.72821808 152.71846008]
[119.12965393 140.42761230]
[105.49404144 134.43434143]
[103.92312622 118.69131470]
[89.67341614 116.06604767]
[81.36747742 104.19348907]
[83.78603363 89.90724945]
[75.18747711 77.61640930]
[69.36810303 74.47850037]
[66.44570923 69.60442352]
[66.52229309 64.82915497]
[58.29348373 52.28775787]
[53.63062668 49.94151306]
[50.63369751 46.39585114]
[49.48059845 42.48619843]
[49.99187469 38.99750900]
[42.33127594 26.10118294]
[34.67067719 13.20485592]
[27.01008224 0.30852917]
[13.31006050 -7.60475016]
[13.46234322 -22.49857712]
[5.80174589 -35.39490509]
[-1.85885155 -48.29122925]
[-9.51944923 -61.18755722]
[-17.18004608 -74.08388519]
[-24.84064293 -86.98020935]
[-38.61334991 -80.98722839]
[-53.02858734 -76.76773071]
[-67.85900879 -74.38825989]
[-82.87071228 -73.88635254]
[-97.82695007 -75.26991272]
[-112.49182892 -78.51712799]
[-126.63407898 -83.57678223]
[-140.03063965 -90.36907959]
[-152.47024536 -98.78689575]
[-163.75668335 -108.69746399]
[-173.71197510 -119.94448853]
[-182.17909241 -132.35058594]
[-189.02450562 -145.72007751]
[-194.14024353 -159.84213257]
[-197.44563293 -174.49401855]
[-198.88854980 -189.44464111]
[-198.44621277 -204.45822144]
[-196.12562561 -219.29797363]
[-191.96336365 -233.72984314]
[-186.02510071 -247.52622986]
[-178.40446472 -260.46951294]
[-169.22164917 -272.35562134]
[-158.62149048 -282.99703979]
[-146.77114868 -292.22595215]
[-133.85754395 -299.89682007]
[-120.08434296 -305.88864136]
[-105.66874695 -310.10693359]
[-90.83812714 -312.48513794]
[-75.82637787 -312.98577881]
[-60.87026215 -311.60098267]
[-46.20565033 -308.35250854]
[-32.06383133 -303.29168701]
[-18.66783714 -296.49826050]
[-6.22894621 -288.07937622]
[5.05666399 -278.16787720]
[15.01100349 -266.92001343]
[23.47707748 -254.51319885]
[30.32136345 -241.14312744]
[35.43591690 -227.02064514]
[38.74007416 -212.36848450]
[40.18172836 -197.41772461]
[39.73813248 -182.40419006]
[37.41629410 -167.56463623]
[33.25282288 -153.13311768]
[27.31338882 -139.33723450]
[19.69166183 -126.39457703]
[10.50784779 -114.50925446]
[-0.09320940 -103.86872864]
[-11.94431686 -94.64080811]
[-4.28371954 -81.74448395]
[3.37687778 -68.84815216]
[11.03747559 -55.95182800]
[18.69807243 -43.05550003]
[26.35866928 -30.15917397]
[39.51075363 -23.16832733]
[39.90640640 -7.35206842]
[47.56700516 5.54425859]
[55.22760391 18.44058609]
[62.88819885 31.33691216]
[70.83488464 44.05894852]
[79.06369019 56.60034943]
[87.47830963 69.01784515]
[96.07687378 81.30868530]
[110.32658386 83.93395233]
[118.63252258 95.80651093]
[116.21396637 110.09275055]
[130.46459961 116.96515656]
[131.42048645 131.82905579]
[140.01905823 144.11988831]
[148.61761475 156.41073608]
[157.21618652 168.70156860]
[165.81474304 180.99240112]
[182.67669678 188.39215088]
[183.51574707 205.92106628]
[192.29634094 218.08251953]
[201.07695007 230.24397278]
[213.66255188 233.06631470]
[220.72557068 243.37638855]
[218.92958069 255.33886719]
[227.52813721 267.62969971]
[236.12670898 279.92053223]
[248.96914673 272.15905762]
[262.30133057 265.27267456]
[276.06369019 259.29214478]
[290.19479370 254.24421692]
[304.63146973 250.15142822]
[319.30932617 247.03202820]
[334.16271973 244.89999390]
[349.12536621 243.76480103]
[364.13040161 243.63154602]
[379.11083984 244.50082397]
[393.99978638 246.36874390]
[408.73068237 249.22697449]
[423.23779297 253.06274414]
[437.45629883 257.85891724]
[451.32272339 263.59405518]
[464.77508545 270.24258423]
[477.75335693 277.77478027]
[490.19952393 286.15701294]
[502.05804443 295.35186768]
[513.27593994 305.31820679]
[523.80310059 316.01159668]
[533.59246826 327.38424683]
[542.60040283 339.38534546]
[550.78662109 351.96133423]
[558.11456299 365.05599976]
[564.55151367 378.61087036]
[570.06872559 392.56542969]
[574.64154053 406.85733032]
[578.24957275 421.42276001]
[580.87664795 436.19665527]
[582.51110840 451.11300659]
[583.14556885 466.10522461]
[582.77728271 481.10635376]
[581.40783691 496.04937744]
[579.04333496 510.86755371]
[575.69439697 525.49468994]
[571.37591553 539.86553955]
[566.10717773 553.91577148]
[559.91180420 567.58276367]
[552.81744385 580.80541992]
[544.85565186 593.52471924]
[536.06213379 605.68377686]
[526.47613525 617.22833252]
[516.14044189 628.10687256]
[505.10116577 638.27075195]
[493.40771484 647.67462158]
[481.11224365 656.27642822]
[468.26971436 664.03771973]
[454.93743896 670.92395020]
[441.17498779 676.90429688]
[427.04385376 681.95202637]
[412.60708618 686.04467773]
[397.92922974 689.16387939]
[383.07580566 691.29571533]
[368.11312866 692.43072510]
[353.10809326 692.56378174]
[338.12765503 691.69433594]
[323.23873901 689.82623291]
[308.50787354 686.96777344]
[294.00082397 683.13183594]
[279.78237915 678.33551025]
[265.91601562 672.60015869]
[252.46374512 665.95147705]
[239.48558044 658.41912842]
[227.03950500 650.03674316]
[215.18110657 640.84173584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 144]
[27 143]
[28 142]
[30 139]
[31 138]
[32 137]
[35 135]
[36 134]
[37 133]
[38 132]
[39 131]
[41 129]
[44 126]
[45 125]
[48 124]
[49 123]
[53 122]
[54 121]
[55 120]
[56 119]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
