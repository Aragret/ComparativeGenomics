%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCU\
) } def
/len { sequence length } bind def

/coor [
[128.15541077 788.81195068]
[115.32868195 781.01257324]
[103.31459045 772.01159668]
[92.22531128 761.89312744]
[82.16439056 750.75164795]
[73.22576141 738.69110107]
[65.49288940 725.82415771]
[59.03796768 712.27093506]
[53.92126846 698.15802002]
[50.19057083 683.61712646]
[47.88070679 668.78405762]
[47.01323700 653.79730225]
[47.59626770 638.79675293]
[49.62435532 623.92254639]
[53.07855988 609.31347656]
[57.92662811 595.10601807]
[64.12329865 581.43286133]
[71.61071777 568.42150879]
[80.31896210 556.19360352]
[90.16673279 544.86328125]
[101.06208038 534.53625488]
[112.90327454 525.30902100]
[125.57975006 517.26776123]
[138.97315979 510.48745728]
[152.95843506 505.03149414]
[167.40499878 500.95080566]
[164.73921204 486.18957520]
[162.07341003 471.42837524]
[159.40762329 456.66714478]
[156.74182129 441.90591431]
[153.85655212 427.18603516]
[150.75244141 412.51074219]
[147.64833069 397.83541870]
[135.23239136 385.43338013]
[141.08551025 367.97421265]
[137.76325989 353.34674072]
[125.06245422 345.65093994]
[121.48483276 330.86395264]
[129.64300537 317.59436035]
[126.32073975 302.96691895]
[122.99848175 288.33944702]
[119.67622375 273.71197510]
[117.37886047 272.10565186]
[115.57936096 269.49255371]
[114.66439056 266.05767822]
[114.94652557 262.12258911]
[116.61914062 258.11557007]
[114.17341614 243.31628418]
[111.72768402 228.51701355]
[107.53565216 222.43026733]
[109.35742188 213.47933960]
[107.13230896 198.64529419]
[104.90718842 183.81124878]
[102.68207550 168.97720337]
[100.45695496 154.14317322]
[98.23184204 139.30912781]
[96.00672150 124.47508240]
[93.78160858 109.64103699]
[86.82679749 122.93128204]
[74.21183014 131.04685974]
[59.23423767 131.86639404]
[45.80911636 125.17564392]
[37.44576645 112.72356415]
[36.33034134 97.76509094]
[42.75441742 84.21034241]
[55.03875351 75.60249329]
[69.97225189 74.19161224]
[83.65133667 80.34650421]
[92.50000000 92.45746613]
[92.50000000 77.45746613]
[92.50000000 62.45746613]
[84.76270294 48.65729141]
[92.50000000 35.93001938]
[92.50000000 20.93001938]
[92.50000000 5.93002033]
[92.50000000 -9.06997967]
[92.50000000 -24.06998062]
[89.88853455 -28.58964157]
[89.32792664 -33.19822311]
[90.50861359 -37.09963608]
[92.84993744 -39.73602295]
[93.51972198 -54.72106171]
[86.40634918 -68.85295868]
[94.70423126 -81.22204590]
[95.37402344 -96.20708466]
[96.04380798 -111.19212341]
[96.71359253 -126.17716217]
[84.67413330 -138.86853027]
[85.52175903 -156.00318909]
[98.24414062 -167.00227356]
[98.69075012 -181.99562073]
[99.02572632 -196.99188232]
[99.24905396 -211.99021912]
[88.52146149 -223.28431702]
[88.96160126 -238.49157715]
[99.79490662 -248.64909363]
[100.01823425 -263.64743042]
[100.24156189 -278.64578247]
[86.16094208 -284.31152344]
[75.08053589 -294.68402100]
[68.49887085 -308.36050415]
[67.30606079 -323.49133301]
[71.66342926 -338.03015137]
[80.98167419 -350.01074219]
[94.00057983 -357.81283569]
[108.95944977 -360.38122559]
[123.83521271 -357.36859131]
[136.61605835 -349.18234253]
[145.57345581 -336.92962646]
[149.49601746 -322.26748657]
[147.85324097 -307.17889404]
[140.86729431 -293.70443726]
[129.48297119 -283.66644287]
[115.23989868 -278.42245483]
[115.01657104 -263.42410278]
[114.79324341 -248.42576599]
[125.31932068 -237.95021057]
[125.30648804 -222.73657227]
[114.24739075 -211.76689148]
[114.02406311 -196.76855469]
[117.06762695 -190.03367615]
[113.68409729 -181.54901123]
[113.23748779 -166.55566406]
[123.29867554 -158.50569153]
[126.94068146 -145.94313049]
[122.61865997 -133.39201355]
[111.69863129 -125.50737762]
[111.02884674 -110.52233887]
[110.35906219 -95.53730011]
[109.68927002 -80.55226135]
[116.85055542 -67.49219513]
[108.50476074 -54.05127716]
[107.83497620 -39.06623840]
[107.50000000 -24.06998062]
[107.50000000 -9.06997967]
[107.50000000 5.93002033]
[107.50000000 20.93001938]
[107.50000000 35.93001938]
[115.23729706 48.65729141]
[107.50000000 62.45746613]
[107.50000000 77.45746613]
[107.50000000 92.45746613]
[108.61564636 107.41591644]
[110.84076691 122.24996185]
[113.06587982 137.08399963]
[115.29100037 151.91804504]
[117.51612091 166.75209045]
[119.74123383 181.58613586]
[121.96635437 196.42018127]
[124.19146729 211.25422668]
[126.52695465 226.07128906]
[128.97268677 240.87055969]
[131.41841125 255.66983032]
[134.30368042 270.38973999]
[137.62594604 285.01718140]
[140.94819641 299.64465332]
[144.27046204 314.27209473]
[157.36024475 322.71575928]
[160.52111816 337.59741211]
[152.39071655 350.02447510]
[155.71298218 364.65194702]
[166.19094849 372.17358398]
[168.65693665 384.42520142]
[162.32363892 394.73132324]
[165.42774963 409.40661621]
[168.53186035 424.08193970]
[172.65954590 429.24658203]
[173.44190979 434.87551880]
[171.50303650 439.24014282]
[174.16883850 454.00134277]
[176.83462524 468.76257324]
[179.50042725 483.52377319]
[182.16622925 498.28500366]
[197.12757874 497.05477905]
[212.13781738 497.27432251]
[227.05679321 498.94152832]
[241.74520874 502.04086304]
[256.06591797 506.54339600]
[269.88522339 512.40704346]
[283.07406616 519.57714844]
[295.50930786 527.98663330]
[307.07485962 537.55712891]
[317.66275024 548.19909668]
[327.17407227 559.81335449]
[335.52005005 572.29132080]
[342.62274170 585.51660156]
[348.41583252 599.36560059]
[352.84524536 613.70910645]
[355.86962891 628.41314697]
[357.46072388 643.34045410]
[357.60369873 658.35156250]
[356.29718018 673.30645752]
[353.55337524 688.06542969]
[349.39794922 702.49072266]
[343.86965942 716.44750977]
[337.02011108 729.80566406]
[328.91329956 742.44030762]
[319.62490845 754.23358154]
[309.24163818 765.07531738]
[297.86044312 774.86431885]
[285.58758545 783.50915527]
[272.53768921 790.92907715]
[258.83258057 797.05487061]
[244.60021973 801.82934570]
[229.97349548 805.20782471]
[215.08897400 807.15887451]
[200.08563232 807.66424561]
[185.10357666 806.71917725]
[170.28265381 804.33258057]
[155.76127625 800.52667236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 173]
[27 172]
[28 171]
[29 170]
[30 169]
[31 166]
[32 165]
[33 164]
[35 161]
[36 160]
[39 157]
[40 156]
[41 155]
[42 154]
[47 153]
[48 152]
[49 151]
[51 150]
[52 149]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[58 143]
[69 142]
[70 141]
[71 140]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[81 133]
[82 132]
[84 130]
[85 129]
[86 128]
[87 127]
[90 123]
[91 122]
[92 120]
[93 119]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
