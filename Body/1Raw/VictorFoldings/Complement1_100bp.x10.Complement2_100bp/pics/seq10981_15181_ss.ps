%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[47.31826019 659.92761230]
[33.23320389 665.10070801]
[18.85112000 669.37915039]
[4.22877073 672.74609375]
[-10.57613850 675.18823242]
[-25.50517845 676.69598389]
[-40.49943161 677.26330566]
[-55.49971771 676.88806152]
[-70.44684601 675.57165527]
[-85.28181458 673.31927490]
[-99.94608307 670.13989258]
[-114.38178253 666.04595947]
[-128.53193665 661.05371094]
[-142.34069824 655.18280029]
[-155.75357056 648.45642090]
[-168.71762085 640.90106201]
[-181.18168640 632.54663086]
[-193.09657288 623.42608643]
[-204.41526794 613.57537842]
[-215.09309387 603.03338623]
[-225.08790588 591.84173584]
[-234.36026001 580.04455566]
[-242.87356567 567.68847656]
[-250.59423828 554.82220459]
[-257.49179077 541.49652100]
[-263.53897095 527.76403809]
[-268.71197510 513.67895508]
[-272.99035645 499.29687500]
[-276.35723877 484.67449951]
[-278.79931641 469.86959839]
[-280.30697632 454.94055176]
[-280.87423706 439.94628906]
[-280.49890137 424.94598389]
[-279.18240356 409.99887085]
[-276.92996216 395.16390991]
[-273.75048828 380.49966431]
[-269.65649414 366.06399536]
[-264.66415405 351.91384888]
[-258.79318237 338.10513306]
[-252.06672668 324.69229126]
[-244.51133728 311.72827148]
[-236.15684509 299.26425171]
[-227.03620911 287.34942627]
[-217.18542480 276.03076172]
[-206.64337158 265.35299683]
[-195.45167542 255.35824585]
[-183.65446472 246.08595276]
[-171.29832458 237.57270813]
[-158.43202209 229.85211182]
[-145.10632324 222.95465088]
[-131.37380981 216.90751648]
[-117.28870392 211.73458862]
[-102.90657806 207.45628357]
[-88.28419495 204.08947754]
[-73.47925568 201.64747620]
[-58.55020142 200.13990784]
[-43.55594635 199.57270813]
[-28.55566025 199.94813538]
[-13.60855007 201.26470947]
[1.22639823 203.51721191]
[15.89063644 206.69677734]
[30.32629013 210.79083252]
[44.47639084 215.78324890]
[50.34535217 201.97906494]
[56.21430969 188.17489624]
[62.08327103 174.37071228]
[67.84930420 160.52322388]
[73.51209259 146.63320923]
[70.19100189 129.40133667]
[84.83056641 118.23152161]
[90.28591919 104.25872040]
[95.00605774 90.02072906]
[98.97814941 75.55620575]
[102.95024872 61.09168243]
[106.92234802 46.62715912]
[110.89443970 32.16263580]
[114.54252625 17.61301613]
[110.05390930 2.44189620]
[120.41793060 -8.25559330]
[123.74018860 -22.88305283]
[127.06245422 -37.51051331]
[130.38470459 -52.13797379]
[116.14857483 -56.90357590]
[102.45768738 -63.06297684]
[89.44812012 -70.55496216]
[77.24917603 -79.30506134]
[65.98208618 -89.22632599]
[55.75884628 -100.22013855]
[46.68104935 -112.17723846]
[38.83892441 -124.97879028]
[32.31040955 -138.49755859]
[27.16038895 -152.59918213]
[23.44004822 -167.14352417]
[21.18636131 -181.98600769]
[20.42173004 -196.97914124]
[21.15375137 -211.97389221]
[23.37514877 -226.82125854]
[27.06384850 -241.37364197]
[32.18318558 -255.48643494]
[38.68228531 -269.01937866]
[46.49654770 -281.83795166]
[55.54831696 -293.81475830]
[65.74762726 -304.83078003]
[76.99310303 -314.77651978]
[89.17298889 -323.55313110]
[102.16622925 -331.07339478]
[115.84368896 -337.26257324]
[130.06942749 -342.05911255]
[144.70207214 -345.41540527]
[159.59617615 -347.29803467]
[174.60371399 -347.68832397]
[189.57553101 -346.58236694]
[204.36283875 -343.99118042]
[218.81866455 -339.94052124]
[232.79933167 -334.47064209]
[246.16587830 -327.63589478]
[258.78549194 -319.50421143]
[270.53271484 -310.15643311]
[281.29080200 -299.68542480]
[290.95285034 -288.19528198]
[299.42282104 -275.80017090]
[306.61654663 -262.62335205]
[312.46249390 -248.79571533]
[316.90258789 -234.45471191]
[319.89270020 -219.74288940]
[321.40310669 -204.80645752]
[321.41882324 -189.79383850]
[319.93963623 -174.85427856]
[316.98028564 -160.13623047]
[312.57019043 -145.78598022]
[306.75317383 -131.94615173]
[299.58703613 -118.75430298]
[291.14300537 -106.34152985]
[281.50500488 -94.83120728]
[270.76879883 -84.33773041]
[259.04116821 -74.96539307]
[246.43858337 -66.80734253]
[233.08634949 -59.94465637]
[219.11715698 -54.44554520]
[204.66983032 -50.36466599]
[189.88798523 -47.74257278]
[174.91850281 -46.60532379]
[159.91017151 -46.96422958]
[145.01217651 -48.81571579]
[141.68991089 -34.18825531]
[138.36764526 -19.56079483]
[135.04539490 -4.93333387]
[139.77163696 9.19153214]
[129.16998291 20.93527603]
[130.72959900 24.09754562]
[130.83502197 28.17233849]
[129.07403564 32.46794891]
[125.35896301 36.13473129]
[121.38687134 50.59925461]
[117.41477203 65.06378174]
[113.44268036 79.52830505]
[109.47058105 93.99282837]
[122.46360016 86.49739838]
[137.25616455 88.98339081]
[147.08529663 100.31423187]
[147.45727539 115.30961609]
[138.20201111 127.11386108]
[123.55090332 130.33021545]
[110.20223236 123.48822021]
[104.25872040 109.71408081]
[98.80335999 123.68687439]
[103.25793457 135.79139709]
[98.42649841 147.31706238]
[87.40212250 152.29598999]
[81.73933411 166.18601990]
[81.39743805 175.31404114]
[75.88745117 180.23966980]
[70.01848602 194.04385376]
[64.14952850 207.84802246]
[58.28056717 221.65220642]
[71.69351196 228.37844849]
[84.65763855 235.93363953]
[97.12179565 244.28793335]
[109.03678131 253.40838623]
[120.35557556 263.25900269]
[131.03350830 273.80087280]
[141.02844238 284.99243164]
[150.30091858 296.78948975]
[158.81436157 309.14547729]
[166.53515625 322.01168823]
[173.43283081 335.33728027]
[179.48017883 349.06967163]
[184.65333557 363.15469360]
[188.93185425 377.53677368]
[192.29888916 392.15908813]
[194.74111938 406.96398926]
[196.24893188 421.89303589]
[196.81636047 436.88726807]
[196.44116211 451.88757324]
[195.12483215 466.83468628]
[192.87255859 481.66967773]
[189.69322205 496.33395386]
[185.59938049 510.76968384]
[180.60719299 524.91986084]
[174.73635864 538.72863770]
[168.01004028 552.14154053]
[160.45478821 565.10565186]
[152.10043335 577.56976318]
[142.97991943 589.48468018]
[133.12925720 600.80346680]
[122.58731842 611.48132324]
[111.39571381 621.47619629]
[99.59860229 630.74859619]
[87.24255371 639.26196289]
[74.37632751 646.98272705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 175]
[64 174]
[65 173]
[66 172]
[67 170]
[68 169]
[70 166]
[71 165]
[72 157]
[73 156]
[74 155]
[75 154]
[76 153]
[77 149]
[79 147]
[80 146]
[81 145]
[82 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
