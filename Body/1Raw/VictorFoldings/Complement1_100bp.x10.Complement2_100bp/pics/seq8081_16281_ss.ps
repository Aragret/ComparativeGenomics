%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[69.07308197 620.88494873]
[55.90504837 628.10717773]
[41.96247101 633.68945312]
[27.44866753 637.55041504]
[12.57529449 639.63372803]
[-2.44074917 639.90899658]
[-17.38048744 638.37225342]
[-32.02605438 635.04589844]
[-46.16387177 629.97839355]
[-59.58777237 623.24371338]
[-72.10199738 614.94000244]
[-83.52404785 605.18835449]
[-93.68735504 594.13104248]
[-102.44371796 581.92926025]
[-109.66543579 568.76092529]
[-115.24719238 554.81817627]
[-119.10759735 540.30419922]
[-121.19034576 525.43078613]
[-121.46507263 510.41470337]
[-119.92776489 495.47503662]
[-116.60084534 480.82958984]
[-111.53282928 466.69195557]
[-104.79762268 453.26831055]
[-96.49344635 440.75439453]
[-86.74139404 429.33270264]
[-75.68369293 419.16979980]
[-63.48157883 410.41390991]
[-50.31300735 403.19268799]
[-36.37001038 397.61145020]
[-21.85592079 393.75158691]
[-6.98239326 391.66940308]
[8.03367138 391.39523315]
[22.97329330 392.93307495]
[26.29555321 378.30563354]
[29.61781311 363.67816162]
[32.94007111 349.05072021]
[36.26233292 334.42324829]
[23.41086769 327.92980957]
[12.48373413 318.53860474]
[4.12120962 306.79388428]
[-1.18526614 293.37808228]
[-3.12197638 279.07196045]
[-1.57146847 264.70932007]
[3.38033414 251.12838745]
[11.44887924 239.12277222]
[22.16733360 229.39526367]
[34.91359329 222.51655579]
[48.94638824 218.89186096]
[63.44839478 218.73695374]
[58.93296432 204.54328918]
[69.70829010 192.95869446]
[73.24796295 178.38230896]
[76.78763580 163.80593872]
[72.27220917 149.61227417]
[83.04753113 138.02767944]
[78.53210449 123.83400726]
[89.30743408 112.24941254]
[84.17134094 96.28079224]
[95.88154602 84.27049255]
[99.20380402 69.64303589]
[102.52606964 55.01557159]
[105.84832764 40.38811111]
[109.17058563 25.76065063]
[107.58309174 19.34259987]
[109.22818756 13.90286636]
[112.81565857 10.75023460]
[116.57196045 -3.77182436]
[105.76933289 6.63505745]
[91.69575500 11.82491016]
[76.72288513 10.92315292]
[63.37391281 4.08174658]
[53.89836502 -7.54641008]
[49.89304733 -22.00177002]
[52.03292084 -36.84835052]
[59.95738220 -49.58423996]
[72.33101654 -58.06322098]
[87.06865692 -60.85643387]
[101.68674469 -57.49317551]
[113.72187805 -48.54021072]
[121.14592743 -35.50627136]
[122.70763397 -20.58616066]
[129.18713379 -34.11450577]
[135.66662598 -47.64285278]
[142.14611816 -61.17119598]
[148.62561035 -74.69953918]
[155.10511780 -88.22789001]
[154.08813477 -104.01637268]
[166.56407166 -112.15271759]
[173.04357910 -125.68106079]
[179.52307129 -139.20941162]
[186.00256348 -152.73774719]
[192.38116455 -166.31396484]
[198.65852356 -179.93727112]
[185.82493591 -187.73449707]
[173.96382141 -196.94383240]
[163.22984314 -207.44522095]
[153.76292419 -219.10177612]
[145.68647766 -231.76152039]
[139.10581970 -245.25938416]
[134.10673523 -259.41943359]
[130.75437927 -274.05703735]
[129.09248352 -288.98138428]
[129.14268494 -303.99786377]
[130.90435791 -318.91076660]
[134.35452271 -333.52563477]
[139.44819641 -347.65191650]
[146.11897278 -361.10549927]
[154.27989197 -373.71093750]
[163.82455444 -385.30392456]
[174.62852478 -395.73330688]
[186.55094910 -404.86309814]
[199.43640137 -412.57434082]
[213.11688232 -418.76641846]
[227.41406250 -423.35864258]
[242.14152527 -426.29116821]
[257.10726929 -427.52572632]
[272.11618042 -427.04626465]
[286.97262573 -424.85897827]
[301.48287964 -420.99240112]
[315.45779419 -415.49697876]
[328.71514893 -408.44430542]
[341.08212280 -399.92636108]
[352.39752197 -390.05416870]
[362.51376343 -378.95645142]
[371.29901123 -366.77789307]
[378.63870239 -353.67727661]
[384.43716431 -339.82534790]
[388.61880493 -325.40274048]
[391.12908936 -310.59747314]
[391.93530273 -295.60253906]
[391.02691650 -280.61346436]
[388.41583252 -265.82562256]
[384.13601685 -251.43183899]
[378.24331665 -237.61975098]
[370.81451416 -224.56942749]
[361.94650269 -212.45101929]
[351.75488281 -201.42248535]
[340.37249756 -191.62762451]
[327.94775391 -183.19415283]
[314.64263916 -176.23197937]
[300.63061523 -170.83187866]
[286.09436035 -167.06428528]
[271.22335815 -164.97827148]
[256.21151733 -164.60105896]
[241.25453186 -165.93757629]
[226.54739380 -168.97036743]
[212.28184509 -173.65991211]
[206.00448608 -160.03660583]
[206.06027222 -152.64614868]
[199.53091431 -146.25825500]
[193.05140686 -132.72991943]
[186.57191467 -119.20156860]
[180.09242249 -105.67321777]
[181.57286072 -90.85237122]
[168.63345337 -81.74839020]
[162.15396118 -68.22004700]
[155.67446899 -54.69169998]
[149.19497681 -41.16335678]
[142.71546936 -27.63500977]
[136.23597717 -14.10666466]
[131.09402466 -0.01552360]
[127.33771515 14.50653553]
[123.79804993 29.08291054]
[120.47578430 43.71037292]
[117.15352631 58.33782959]
[113.83126831 72.96529388]
[110.50901031 87.59275055]
[116.11071014 97.80363464]
[113.44671631 109.14138031]
[103.88380432 115.78908539]
[108.14605713 131.02534485]
[97.62390900 141.56735229]
[101.88615417 156.80361938]
[91.36401367 167.34561157]
[87.82434082 181.92198181]
[84.28466797 196.49836731]
[88.54691315 211.73463440]
[78.02477264 222.27662659]
[91.78483582 229.73684692]
[103.14142609 240.49200439]
[111.32692719 253.80722046]
[115.79011536 268.77484131]
[116.23326874 284.37628174]
[112.63204956 299.55142212]
[105.23670959 313.27059937]
[94.55476379 324.60443115]
[81.31615448 332.78686523]
[66.42333221 337.26681519]
[50.88979340 337.74551392]
[47.56753159 352.37295532]
[44.24527359 367.00042725]
[40.92301559 381.62789917]
[37.60075378 396.25534058]
[51.73895264 401.32177734]
[65.16336060 408.05548096]
[77.67819977 416.35824585]
[89.10098267 426.10900879]
[99.26512146 437.16558838]
[108.02239227 449.36672974]
[115.24509430 462.53448486]
[120.82789612 476.47683716]
[124.68938446 490.99050903]
[126.77324677 505.86380005]
[127.04909515 520.87982178]
[125.51290131 535.81964111]
[122.18708038 550.46533203]
[117.12011719 564.60333252]
[110.38591766 578.02746582]
[102.08267975 590.54199219]
[92.33148193 601.96441650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 193]
[34 192]
[35 191]
[36 190]
[37 189]
[49 178]
[51 176]
[52 175]
[53 174]
[55 172]
[57 170]
[59 167]
[60 166]
[61 165]
[62 164]
[63 163]
[66 162]
[67 161]
[81 160]
[82 159]
[83 158]
[84 157]
[85 156]
[86 155]
[88 153]
[89 152]
[90 151]
[91 150]
[92 148]
[93 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
