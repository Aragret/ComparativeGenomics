%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[106.53954315 807.10028076]
[91.64521027 805.30169678]
[76.84657288 802.83666992]
[62.17343140 799.71014404]
[47.65533447 795.92852783]
[33.32151794 791.49932861]
[19.20084953 786.43151855]
[5.32176876 780.73529053]
[-8.28777599 774.42205811]
[-21.60037613 767.50463867]
[-34.58922195 759.99694824]
[-47.22815704 751.91400146]
[-59.49172592 743.27221680]
[-71.35523224 734.08886719]
[-82.79478455 724.38256836]
[-93.78734589 714.17279053]
[-104.31077576 703.48010254]
[-114.34387970 692.32604980]
[-123.86646271 680.73309326]
[-132.85934448 668.72460938]
[-141.30439758 656.32470703]
[-149.18463135 643.55841064]
[-156.48417664 630.45147705]
[-163.18833923 617.03021240]
[-169.28358459 603.32165527]
[-174.75767517 589.35345459]
[-179.59956360 575.15374756]
[-183.79951477 560.75109863]
[-187.34907532 546.17449951]
[-190.24105835 531.45336914]
[-192.46968079 516.61724854]
[-194.03044128 501.69613647]
[-194.92019653 486.72000122]
[-195.13714600 471.71905518]
[-194.68087769 456.72344971]
[-193.55227661 441.76342773]
[-191.75363159 426.86911011]
[-189.28857422 412.07046509]
[-186.16204834 397.39733887]
[-182.38037109 382.87924194]
[-177.95115662 368.54544067]
[-172.88330078 354.42477417]
[-167.18704224 340.54571533]
[-160.87382507 326.93615723]
[-153.95637512 313.62359619]
[-146.44862366 300.63476562]
[-138.36569214 287.99581909]
[-129.72386169 275.73226929]
[-120.54051971 263.86880493]
[-110.83417511 252.42926025]
[-100.62436676 241.43672180]
[-89.93166351 230.91329956]
[-78.77759552 220.88021851]
[-67.18463135 211.35766602]
[-55.17610550 202.36480713]
[-42.77620697 193.91976929]
[-30.00991249 186.03956604]
[-16.90292740 178.74003601]
[-3.48164678 172.03591919]
[10.22689819 165.94068909]
[24.19510269 160.46662903]
[38.39483261 155.62475586]
[52.79749680 151.42483521]
[67.37408447 147.87530518]
[82.09524536 144.98333740]
[96.93133545 142.75474548]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.58953857 43.88716888]
[85.02901459 28.96856308]
[83.46849060 14.04995918]
[81.90796661 -0.86864597]
[79.23397827 -4.28971815]
[77.91987610 -8.00961781]
[77.89261627 -11.56414413]
[78.93590546 -14.56050205]
[80.72589111 -16.71783638]
[80.05609894 -31.70287514]
[79.38631439 -46.68791580]
[64.43615723 -48.20797348]
[49.86666107 -51.88868332]
[35.98837662 -57.65159225]
[23.09712410 -65.37386322]
[11.46767807 -74.89089203]
[1.34792185 -85.99982452]
[-7.04644156 -98.46387482]
[-13.53648567 -112.01736450]
[-17.98387527 -126.37141418]
[-20.29381180 -141.22004700]
[-20.41706085 -156.24678040]
[-18.35099602 -171.13131714]
[-14.13965416 -185.55638123]
[-7.87280035 -199.21449280]
[0.31598672 -211.81455994]
[10.25216198 -223.08799744]
[21.72393608 -232.79449463]
[34.48678970 -240.72718811]
[48.26867676 -246.71696472]
[62.77583694 -250.63616943]
[77.69905090 -252.40124512]
[92.72023010 -251.97457886]
[107.51919556 -249.36528015]
[121.78050995 -244.62895203]
[135.20018005 -237.86654663]
[147.49218750 -229.22219849]
[158.39450073 -218.88018799]
[167.67475891 -207.06092834]
[175.13514709 -194.01637268]
[180.61663818 -180.02455139]
[184.00239563 -165.38369751]
[185.22024536 -150.40589905]
[184.24426270 -135.41038513]
[181.09519958 -120.71680450]
[175.84022522 -106.63834381]
[168.59132385 -93.47509003]
[159.50300598 -81.50761414]
[148.76901245 -70.99101257]
[136.61810303 -62.14943314]
[123.30931091 -55.17134476]
[109.12628937 -50.20548630]
[94.37135315 -47.35770035]
[95.04113770 -32.37266159]
[95.71092987 -17.38762283]
[96.82657623 -2.42916894]
[98.38710022 12.48943615]
[99.94762421 27.40804100]
[101.50814056 42.32664490]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[111.84993744 141.19422913]
[126.82605743 140.30438232]
[141.82702637 140.08735657]
[156.82261658 140.54354858]
[171.78265381 141.67205811]
[186.67698669 143.47061157]
[201.47563171 145.93559265]
[216.14878845 149.06202698]
[230.66690063 152.84362793]
[245.00073242 157.27276611]
[259.12142944 162.34053040]
[273.00051880 168.03672791]
[286.61010742 174.34985352]
[299.92272949 181.26722717]
[312.91159058 188.77490234]
[325.55056763 196.85775757]
[337.81417847 205.49952698]
[349.67770386 214.68280029]
[361.11727905 224.38908386]
[372.10989380 234.59881592]
[382.63336182 245.29147339]
[392.66650391 256.44546509]
[402.18914795 268.03839111]
[411.18206787 280.04687500]
[419.62716675 292.44671631]
[427.50744629 305.21295166]
[434.80703735 318.31991577]
[441.51126099 331.74114990]
[447.60656738 345.44964600]
[453.08068848 359.41784668]
[457.92263794 373.61752319]
[462.12265015 388.02017212]
[465.67224121 402.59674072]
[468.56430054 417.31790161]
[470.79296875 432.15396118]
[472.35379028 447.07507324]
[473.24362183 462.05120850]
[473.46063232 477.05218506]
[473.00439453 492.04776001]
[471.87585449 507.00781250]
[470.07727051 521.90216064]
[467.61227417 536.70080566]
[464.48580933 551.37390137]
[460.70416260 565.89202881]
[456.27499390 580.22583008]
[451.20721436 594.34655762]
[445.51098633 608.22564697]
[439.19784546 621.83520508]
[432.28042603 635.14776611]
[424.77273560 648.13665771]
[416.68984985 660.77563477]
[408.04806519 673.03918457]
[398.86477661 684.90270996]
[389.15847778 696.34228516]
[378.94869995 707.33483887]
[368.25604248 717.85833740]
[357.10202026 727.89141846]
[345.50909424 737.41406250]
[333.50057983 746.40692139]
[321.10073853 754.85205078]
[308.33447266 762.73229980]
[295.22750854 770.03186035]
[281.80624390 776.73602295]
[268.09771729 782.83129883]
[254.12954712 788.30541992]
[239.92982483 793.14733887]
[225.52719116 797.34735107]
[210.95060730 800.89691162]
[196.22946167 803.78894043]
[181.39338684 806.01757812]
[166.47225952 807.57836914]
[151.49612427 808.46813965]
[136.49516296 808.68511963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 138]
[67 137]
[68 136]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
[81 127]
[82 126]
[83 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
