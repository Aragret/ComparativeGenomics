%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[110.43335724 350.16537476]
[102.00648499 362.70190430]
[90.38813019 372.35543823]
[76.52014923 378.34338379]
[61.52674103 380.18035889]
[46.62336349 377.71740723]
[33.01816559 371.15423584]
[21.81405830 361.02288818]
[13.91931057 348.14462280]
[9.97391224 333.56344604]
[10.29769993 318.46139526]
[14.86442471 304.06271362]
[23.30388451 291.53466797]
[34.93192673 281.89282227]
[48.80592346 275.91879272]
[63.80116653 274.09689331]
[66.24689484 259.29760742]
[68.69261932 244.49835205]
[57.09380722 235.15312195]
[51.69408035 221.16389465]
[54.03702545 206.25157166]
[63.59234619 194.43664551]
[77.87169647 188.95509338]
[80.31742859 174.15582275]
[82.76315308 159.35655212]
[85.20887756 144.55728149]
[87.65460968 129.75801086]
[82.09600830 115.93950653]
[91.97986603 103.58556366]
[90.42132568 100.96630859]
[89.78137970 97.72208405]
[90.29333496 94.19202423]
[92.06196594 90.79669952]
[95.03694916 87.98913574]
[98.35920715 73.36167908]
[100.69469452 58.54460907]
[102.03292847 43.60442352]
[103.37116241 28.66423988]
[104.70940399 13.72405434]
[98.23414612 -0.71137583]
[107.07606506 -12.69760799]
[108.41429901 -27.63779259]
[101.93904114 -42.07322311]
[110.78096008 -54.05945587]
[112.11919403 -68.99964142]
[113.45742798 -83.93982697]
[114.79566193 -98.88001251]
[99.93921661 -100.97360229]
[85.20788574 -103.81698608]
[70.63947296 -107.40283966]
[56.27137756 -111.72197723]
[42.14048386 -116.76329803]
[28.28307152 -122.51387787]
[14.73470402 -128.95893860]
[1.53016460 -136.08193970]
[-11.29665184 -143.86459351]
[-23.71282005 -152.28694153]
[-35.68646622 -161.32733154]
[-47.18685532 -170.96258545]
[-58.18446350 -181.16796875]
[-68.65106201 -191.91725159]
[-78.55978394 -203.18287659]
[-87.88519287 -214.93591309]
[-96.60335541 -227.14619446]
[-104.69187927 -239.78236389]
[-112.13001251 -252.81198120]
[-118.89865112 -266.20162964]
[-124.98043823 -279.91690063]
[-130.35974121 -293.92263794]
[-135.02276611 -308.18283081]
[-138.95753479 -322.66088867]
[-142.15394592 -337.31967163]
[-144.60380554 -352.12155151]
[-146.30081177 -367.02850342]
[-147.24061584 -382.00225830]
[-147.42080688 -397.00442505]
[-146.84091187 -411.99645996]
[-145.50242615 -426.93984985]
[-143.40879822 -441.79629517]
[-140.56538391 -456.52761841]
[-136.97947693 -471.09603882]
[-132.66030884 -485.46411133]
[-127.61894226 -499.59497070]
[-121.86833191 -513.45239258]
[-115.42323303 -527.00073242]
[-108.30019379 -540.20526123]
[-100.51750183 -553.03204346]
[-92.09512329 -565.44818115]
[-83.05469513 -577.42181396]
[-73.41941071 -588.92218018]
[-63.21400833 -599.91973877]
[-52.46468353 -610.38635254]
[-41.19903183 -620.29504395]
[-29.44597435 -629.62042236]
[-17.23567772 -638.33850098]
[-4.59948587 -646.42700195]
[8.43016338 -653.86511230]
[21.81982422 -660.63372803]
[35.53512192 -666.71545410]
[49.54085541 -672.09472656]
[63.80106354 -676.75769043]
[78.27915192 -680.69244385]
[92.93794250 -683.88879395]
[107.73981476 -686.33862305]
[122.64677429 -688.03558350]
[137.62054443 -688.97534180]
[152.62269592 -689.15551758]
[167.61471558 -688.57556152]
[182.55812073 -687.23706055]
[197.41455078 -685.14337158]
[212.14587402 -682.29992676]
[226.71426392 -678.71398926]
[241.08233643 -674.39477539]
[255.21321106 -669.35339355]
[269.07058716 -663.60272217]
[282.61892700 -657.15759277]
[295.82342529 -650.03448486]
[308.65020752 -642.25177002]
[321.06631470 -633.82934570]
[333.03991699 -624.78887939]
[344.54025269 -615.15356445]
[355.53781128 -604.94818115]
[366.00433350 -594.19879150]
[375.91299438 -582.93310547]
[385.23834229 -571.18005371]
[393.95645142 -558.96972656]
[402.04489136 -546.33349609]
[409.48297119 -533.30383301]
[416.25152588 -519.91418457]
[422.33322144 -506.19885254]
[427.71246338 -492.19308472]
[432.37539673 -477.93286133]
[436.31008911 -463.45477295]
[439.50643921 -448.79598999]
[441.95620728 -433.99411011]
[443.65313721 -419.08712769]
[444.59286499 -404.11337280]
[444.77297974 -389.11120605]
[444.19299316 -374.11920166]
[442.85443115 -359.17578125]
[440.76071167 -344.31936646]
[437.91720581 -329.58804321]
[434.33123779 -315.01965332]
[430.01199341 -300.65161133]
[424.97055054 -286.52075195]
[419.21984863 -272.66339111]
[412.77468872 -259.11508179]
[405.65158081 -245.91059875]
[397.86880493 -233.08384705]
[389.44635010 -220.66773987]
[380.40585327 -208.69416809]
[370.77050781 -197.19386292]
[360.56506348 -186.19633484]
[349.81567383 -175.72982788]
[338.54995728 -165.82119751]
[326.79687500 -156.49588013]
[314.58651733 -147.77781677]
[301.95028687 -139.68940735]
[288.92059326 -132.25137329]
[275.53088379 -125.48284149]
[261.81555176 -119.40117645]
[247.80979919 -114.02198029]
[233.54956055 -109.35907745]
[219.07145691 -105.42442322]
[204.41264343 -102.22812653]
[189.61076355 -99.77839661]
[174.70379639 -98.08150482]
[159.73002625 -97.14182281]
[144.72785950 -96.96176147]
[129.73583984 -97.54177856]
[128.39761353 -82.60159302]
[127.05937958 -67.66140747]
[125.72114563 -52.72122192]
[132.29211426 -39.35441208]
[123.35448456 -26.29955864]
[122.01625061 -11.35937309]
[128.58721924 2.00743437]
[119.64958191 15.06228828]
[118.31134796 30.00247383]
[116.97311401 44.94265747]
[115.63488007 59.88284302]
[125.96292114 49.00481033]
[140.50683594 45.33406448]
[154.76005554 50.00803375]
[164.30604553 61.57843018]
[166.18687439 76.46004486]
[159.81976318 90.04164886]
[147.17762756 98.11483002]
[132.17776489 98.17802429]
[119.46804047 90.21165466]
[112.98667145 76.68393707]
[109.66441345 91.31139374]
[106.77913666 106.03128815]
[112.16280365 120.90834045]
[102.45388031 132.20375061]
[100.00814819 147.00302124]
[97.56242371 161.80229187]
[95.11669922 176.60156250]
[92.67096710 191.40083313]
[104.42749786 201.18505859]
[109.67350769 215.44606018]
[107.09410095 230.31929016]
[97.48066711 241.82745361]
[83.49188995 246.94407654]
[81.04616547 261.74334717]
[78.60044098 276.54263306]
[92.21221924 283.09213257]
[103.42649841 293.21221924]
[111.33418274 306.08255005]
[115.29422760 320.65975952]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 206]
[17 205]
[18 204]
[23 199]
[24 198]
[25 197]
[26 196]
[27 195]
[29 193]
[34 192]
[35 191]
[36 181]
[37 180]
[38 179]
[39 178]
[41 176]
[42 175]
[44 173]
[45 172]
[46 171]
[47 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
