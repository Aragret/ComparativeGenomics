%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[91.90645599 487.67242432]
[76.89913177 487.42446899]
[61.96866989 485.88732910]
[47.22562027 483.07235718]
[32.77914047 479.00042725]
[18.73618507 473.70169067]
[5.20072508 467.21533203]
[-7.72702503 459.58941650]
[-19.95135117 450.88037109]
[-31.38174820 441.15270996]
[-41.93358612 430.47842407]
[-51.52874374 418.93658447]
[-60.09617996 406.61257935]
[-67.57246399 393.59771729]
[-73.90223694 379.98834229]
[-79.03864288 365.88519287]
[-82.94364929 351.39270020]
[-85.58834839 336.61816406]
[-86.95314789 321.67095947]
[-87.02796173 306.66177368]
[-85.81221771 291.70172119]
[-83.31492615 276.90155029]
[-79.55457306 262.37084961]
[-74.55900574 248.21719360]
[-68.36520386 234.54539490]
[-61.01902390 221.45664978]
[-52.57486343 209.04788208]
[-43.09523010 197.41096497]
[-32.65031815 186.63203430]
[-21.31745529 176.79090881]
[-9.18054867 167.96046448]
[3.67054319 160.20605469]
[17.14067459 153.58509827]
[31.13011360 148.14662170]
[45.53528595 143.93089294]
[60.24954224 140.96910095]
[75.16394043 139.28321838]
[90.16805267 138.88568115]
[91.06086731 123.91227722]
[91.95368195 108.93886566]
[92.62346649 93.95382690]
[93.07007599 78.96047974]
[93.51667786 63.96712875]
[93.40501404 48.96754456]
[92.73522949 33.98250580]
[92.06544495 18.99746704]
[91.39566040 4.01242876]
[90.72587585 -10.97260952]
[75.72286987 -11.13658619]
[60.75217056 -12.13409901]
[45.86004257 -13.96206474]
[31.09251785 -16.61483383]
[16.49524498 -20.08420753]
[2.11334205 -24.35946083]
[-12.00873756 -29.42737961]
[-25.82734299 -35.27230072]
[-39.29976273 -41.87615204]
[-52.38434982 -49.21852875]
[-65.04066467 -57.27673340]
[-77.22958374 -66.02585602]
[-88.91343689 -75.43885040]
[-100.05610657 -85.48663330]
[-110.62314606 -96.13813782]
[-120.58190155 -107.36044312]
[-129.90159607 -119.11885834]
[-138.55340576 -131.37704468]
[-146.51058960 -144.09710693]
[-153.74856567 -157.23973083]
[-160.24496460 -170.76429749]
[-165.97969055 -184.62899780]
[-170.93502808 -198.79096985]
[-175.09564209 -213.20645142]
[-178.44869995 -227.83088684]
[-180.98382568 -242.61906433]
[-182.69317627 -257.52526855]
[-183.57148743 -272.50344849]
[-183.61601257 -287.50726318]
[-182.82664490 -302.49038696]
[-181.20581055 -317.40646362]
[-178.75851440 -332.20944214]
[-175.49234009 -346.85351562]
[-171.41735840 -361.29345703]
[-166.54617310 -375.48458862]
[-160.89385986 -389.38308716]
[-154.47787476 -402.94598389]
[-147.31803894 -416.13134766]
[-139.43649292 -428.89840698]
[-130.85760498 -441.20773315]
[-121.60787964 -453.02127075]
[-111.71591949 -464.30249023]
[-101.21229553 -475.01654053]
[-90.12947083 -485.13027954]
[-78.50170135 -494.61248779]
[-66.36492920 -503.43380737]
[-53.75667572 -511.56698608]
[-40.71590424 -518.98693848]
[-27.28292465 -525.67065430]
[-13.49925995 -531.59747314]
[0.59248668 -536.74914551]
[14.94875717 -541.10968018]
[29.52517891 -544.66564941]
[44.27669525 -547.40606689]
[59.15770721 -549.32238770]
[74.12222290 -550.40875244]
[89.12398529 -550.66180420]
[104.11663055 -550.08068848]
[119.05380249 -548.66729736]
[133.88934326 -546.42596436]
[148.57740784 -543.36358643]
[163.07257080 -539.48968506]
[177.33003235 -534.81622314]
[191.30574036 -529.35760498]
[204.95648193 -523.13067627]
[218.24006653 -516.15478516]
[231.11543274 -508.45141602]
[243.54280090 -500.04440308]
[255.48373413 -490.95974731]
[266.90133667 -481.22552490]
[277.76031494 -470.87179565]
[288.02709961 -459.93060303]
[297.66995239 -448.43572998]
[306.65908813 -436.42272949]
[314.96670532 -423.92871094]
[322.56713867 -410.99230957]
[329.43688965 -397.65350342]
[335.55471802 -383.95352173]
[340.90170288 -369.93475342]
[345.46133423 -355.64044189]
[349.21954346 -341.11486816]
[352.16467285 -326.40286255]
[354.28759766 -311.54989624]
[355.58181763 -296.60192871]
[356.04330444 -281.60513306]
[355.67065430 -266.60586548]
[354.46496582 -251.65048218]
[352.43002319 -236.78523254]
[349.57205200 -222.05604553]
[345.89996338 -207.50843811]
[341.42504883 -193.18740845]
[336.16116333 -179.13719177]
[330.12457275 -165.40122986]
[323.33395386 -152.02198792]
[315.81024170 -139.04080200]
[307.57675171 -126.49781799]
[298.65893555 -114.43178558]
[289.08428955 -102.88001251]
[278.88247681 -91.87819672]
[268.08502197 -81.46035767]
[256.72525024 -71.65867615]
[244.83833313 -62.50346756]
[232.46096802 -54.02302170]
[219.63143921 -46.24355316]
[206.38940430 -39.18910599]
[192.77577209 -32.88148499]
[178.83264160 -27.34019089]
[164.60308838 -22.58234596]
[150.13113403 -18.62266159]
[135.46147156 -15.47337437]
[120.63945770 -13.14421940]
[105.71091461 -11.64239502]
[106.38069916 3.34264374]
[107.05048370 18.32768250]
[107.72026825 33.31272125]
[108.39005280 48.29776001]
[120.28450775 39.15872192]
[134.88168335 42.61162567]
[141.42108154 56.11111450]
[135.08210754 69.70587158]
[120.53761292 73.37434387]
[108.51003265 64.41373444]
[108.06342316 79.40708923]
[107.61682129 94.40043640]
[110.25608063 98.93345642]
[110.16770172 104.62252045]
[106.92708588 109.83168793]
[106.03427124 124.80509186]
[105.14145660 139.77850342]
[119.99201965 141.95616150]
[134.60040283 145.40240479]
[148.85844421 150.09170532]
[162.66059875 155.98936462]
[175.90464783 163.05168152]
[188.49256897 171.22639465]
[200.33113098 180.45295715]
[211.33271790 190.66308594]
[221.41584778 201.78117371]
[230.50587463 213.72491455]
[238.53550720 226.40585327]
[245.44529724 239.73013306]
[251.18408203 253.59909058]
[255.70935059 267.91003418]
[258.98764038 282.55703735]
[260.99465942 297.43161011]
[261.71551514 312.42367554]
[261.14492798 327.42221069]
[259.28710938 342.31616211]
[256.15576172 356.99526978]
[251.77413940 371.35086060]
[246.17463684 385.27661133]
[239.39874268 398.66946411]
[231.49659729 411.43026733]
[222.52671814 423.46447754]
[212.55551147 434.68307495]
[201.65681458 445.00292969]
[189.91130066 454.34768677]
[177.40594482 462.64816284]
[164.23333740 469.84283447]
[150.49098206 475.87850952]
[136.28065491 480.71047974]
[121.70754242 484.30294800]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 177]
[39 176]
[40 175]
[41 172]
[42 171]
[43 170]
[44 164]
[45 163]
[46 162]
[47 161]
[48 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
