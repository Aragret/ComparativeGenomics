%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[74.30902100 411.46237183]
[72.30390167 426.44473267]
[65.97023010 440.16973877]
[55.87118912 451.41699219]
[42.90477371 459.18640137]
[28.22395706 462.78707886]
[13.13414097 461.89889526]
[-1.02289510 456.60083008]
[-12.98831844 447.36392212]
[-21.69816971 435.00958252]
[-26.37797737 420.63632202]
[-26.61161613 405.52218628]
[-22.37830925 391.01113892]
[-14.05447960 378.39349365]
[-2.38027692 368.79116821]
[11.60623646 363.05804443]
[26.66138840 361.70385742]
[29.76549911 347.02856445]
[32.86960983 332.35327148]
[35.97372055 317.67794800]
[39.07783127 303.00265503]
[34.14180374 288.94970703]
[44.56743622 277.04943848]
[39.63141251 262.99649048]
[50.05704498 251.09622192]
[53.16115570 236.42091370]
[40.03122330 243.67384338]
[25.58077240 239.65083313]
[18.08768272 226.65646362]
[21.84432983 212.13449097]
[34.69874191 204.40376282]
[49.28732300 207.89279175]
[57.25291061 220.60195923]
[61.65390778 206.26211548]
[66.05490875 191.92227173]
[70.45590210 177.58242798]
[74.85690308 163.24258423]
[79.25789642 148.90272522]
[83.33757019 134.46818542]
[87.09386444 119.94612122]
[90.85016632 105.42405701]
[93.51596069 90.66284180]
[95.07648468 75.74423981]
[96.63700867 60.82563400]
[90.37739563 46.29539490]
[99.39678955 34.44213486]
[100.95731354 19.52353096]
[102.51783752 4.60492611]
[104.07836151 -10.31367874]
[105.63887787 -25.23228264]
[92.05158997 -31.91142273]
[81.58890533 -42.81574249]
[75.49967194 -56.61579514]
[74.50115967 -71.63821411]
[78.69463348 -86.06860352]
[87.55542755 -98.17070770]
[99.99852753 -106.49526978]
[114.51139832 -110.05361176]
[108.25178528 -124.58384705]
[117.27117920 -136.43710327]
[118.83170319 -151.35571289]
[112.57209015 -165.88595581]
[121.59148407 -177.73921204]
[123.15200806 -192.65782166]
[124.71253204 -207.57641602]
[111.74365997 -211.78781128]
[99.86035919 -218.46372986]
[89.52530670 -227.34182739]
[81.14041138 -238.07406616]
[75.03119659 -250.24035645]
[71.43417358 -263.36499023]
[70.48765564 -276.93524170]
[72.22646332 -290.42147827]
[76.58065796 -303.29766846]
[83.37832642 -315.06204224]
[92.35237122 -325.25662231]
[103.15103149 -333.48498535]
[115.35163879 -339.42770386]
[128.47717285 -342.85479736]
[142.01492310 -343.63461304]
[144.24003601 -358.46865845]
[146.46516418 -373.30267334]
[148.69027710 -388.13671875]
[134.18296814 -392.01202393]
[120.20078278 -397.48730469]
[106.91956329 -404.49368286]
[94.50634766 -412.94305420]
[83.11722565 -422.72915649]
[72.89543915 -433.72894287]
[63.96953201 -445.80404663]
[56.45176315 -458.80264282]
[50.43667221 -472.56121826]
[45.99990845 -486.90676880]
[43.19726562 -501.65890503]
[42.06399155 -516.63208008]
[42.61433792 -531.63800049]
[44.84138107 -546.48791504]
[48.71711731 -560.99511719]
[54.19280624 -574.97711182]
[61.19958115 -588.25811768]
[69.64933014 -600.67108154]
[79.43577576 -612.05993652]
[90.43585968 -622.28137207]
[102.51123810 -631.20690918]
[115.51004028 -638.72430420]
[129.26881409 -644.73895264]
[143.61450195 -649.17529297]
[158.36671448 -651.97753906]
[173.33992004 -653.11035156]
[188.34579468 -652.55957031]
[203.19566345 -650.33203125]
[217.70274353 -646.45587158]
[231.68458557 -640.97979736]
[244.96539307 -633.97259521]
[257.37811279 -625.52252197]
[268.76663208 -615.73571777]
[278.98776245 -604.73529053]
[287.91296387 -592.65966797]
[295.42993164 -579.66064453]
[301.44421387 -565.90167236]
[305.88012695 -551.55584717]
[308.68188477 -536.80358887]
[309.81427002 -521.83032227]
[309.26300049 -506.82446289]
[307.03506470 -491.97467041]
[303.15847778 -477.46771240]
[297.68194580 -463.48602295]
[290.67437744 -450.20544434]
[282.22390747 -437.79296875]
[272.43676758 -426.40472412]
[261.43606567 -416.18392944]
[249.36015320 -407.25912476]
[236.36090088 -399.74249268]
[222.60177612 -393.72863770]
[208.25581360 -389.29318237]
[193.50343323 -386.49185181]
[178.53016663 -385.35992432]
[163.52432251 -385.91162109]
[161.29919434 -371.07757568]
[159.07408142 -356.24353027]
[156.84896851 -341.40948486]
[172.12791443 -335.37283325]
[185.54177856 -325.87423706]
[196.32011414 -313.45449829]
[203.84275818 -298.82229614]
[207.67546082 -282.81387329]
[207.59494019 -266.34509277]
[203.60195923 -250.35910034]
[195.92141724 -235.77232361]
[184.98976135 -223.42195129]
[171.43009949 -214.01780701]
[156.01678467 -208.10165405]
[139.63113403 -206.01589966]
[138.07061768 -191.09729004]
[136.51008606 -176.17868042]
[142.88131714 -162.71553040]
[133.75030518 -149.79519653]
[132.18978882 -134.87658691]
[138.56101990 -121.41342926]
[129.43000793 -108.49308777]
[142.89236450 -102.00846863]
[153.34342957 -91.28911591]
[159.50799561 -77.61532593]
[160.62445068 -62.62950134]
[156.53881836 -48.13890076]
[147.72560120 -35.89767838]
[135.23284912 -27.39455795]
[120.55748749 -23.67176056]
[118.99696350 -8.75315571]
[117.43643951 6.16544914]
[115.87591553 21.08405495]
[114.31539154 36.00265884]
[120.68663025 49.46581650]
[111.55561829 62.38615417]
[109.99509430 77.30476379]
[108.43457031 92.22336578]
[118.49592590 81.09820557]
[132.74124146 76.40024567]
[147.44683838 79.35752106]
[158.76870728 89.19700623]
[163.74732971 103.34667969]
[161.08129883 118.10785675]
[151.46752930 129.62199402]
[137.41903687 134.87933350]
[122.60803986 132.50561523]
[110.90612030 123.12131500]
[105.37223053 109.18035889]
[101.61592865 123.70242310]
[97.85962677 138.22447205]
[99.25606537 143.25408936]
[98.64472961 147.85621643]
[96.52467346 151.33766174]
[93.59774780 153.30372620]
[89.19674683 167.64356995]
[84.79575348 181.98342896]
[80.39475250 196.32327271]
[75.99375153 210.66311646]
[71.59275818 225.00296021]
[67.83645630 239.52502441]
[64.73234558 254.20033264]
[69.44634247 269.30294800]
[59.24274063 280.15353394]
[63.95673752 295.25616455]
[53.75313187 306.10675049]
[50.64902115 320.78207397]
[47.54491043 335.45736694]
[44.44079971 350.13265991]
[41.33669281 364.80798340]
[54.55405045 372.14233398]
[65.02116394 383.04788208]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[23 202]
[25 200]
[26 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 194]
[38 193]
[39 189]
[40 188]
[41 187]
[42 176]
[43 175]
[44 174]
[46 172]
[47 171]
[48 170]
[49 169]
[50 168]
[58 160]
[60 158]
[61 157]
[63 155]
[64 154]
[65 153]
[80 141]
[81 140]
[82 139]
[83 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
