%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[186.96623230 363.65975952]
[192.51721191 349.70617676]
[199.65060425 336.49136353]
[208.26992798 324.19406128]
[218.25863647 312.98056030]
[229.48164368 303.00256348]
[220.88307190 290.71170044]
[212.28451538 278.42086792]
[203.68594360 266.13003540]
[199.22236633 264.43139648]
[195.77847290 259.91070557]
[195.02076721 253.34278870]
[186.79196167 240.80139160]
[178.56315613 228.25997925]
[170.33435059 215.71858215]
[162.10554504 203.17718506]
[153.50697327 190.88635254]
[144.54627991 178.85696411]
[135.58558655 166.82759094]
[126.62488556 154.79821777]
[121.90502930 169.03630066]
[107.88401794 174.36651611]
[94.89761353 166.85961914]
[92.51891327 152.04943848]
[102.50141144 140.85345459]
[117.48490906 141.52418518]
[109.44374084 128.86166382]
[101.40256500 116.19913483]
[86.33931732 108.81842804]
[85.81501007 92.05235291]
[77.58620453 79.51095581]
[69.35739136 66.96955109]
[55.31768799 59.67590332]
[54.80477524 44.79013443]
[46.57596970 32.24873352]
[38.34716034 19.70733261]
[30.11835289 7.16593218]
[21.88954544 -5.37546778]
[13.01865005 -17.47122002]
[3.52975178 -29.08848381]
[-11.95064735 -30.81909180]
[-21.40824699 -42.73582077]
[-19.66297531 -57.48335266]
[-29.15187454 -69.10061646]
[-38.64077377 -80.71788025]
[-48.12966919 -92.33514404]
[-62.85198212 -98.12859344]
[-64.91075134 -112.88022614]
[-74.39965057 -124.49748993]
[-86.85158539 -116.11453247]
[-100.02388763 -108.91626740]
[-113.80418396 -102.96411133]
[-128.07489014 -98.30883789]
[-142.71426392 -94.99018097]
[-157.59738159 -93.03643799]
[-172.59730530 -92.46429443]
[-187.58601379 -93.27861786]
[-202.43565369 -95.47246552]
[-217.01951599 -99.02712250]
[-231.21318054 -103.91226196]
[-244.89553833 -110.08619690]
[-257.94985962 -117.49625397]
[-270.26480103 -126.07922363]
[-281.73522949 -135.76185608]
[-292.26333618 -146.46156311]
[-301.75927734 -158.08705139]
[-310.14202881 -170.53912354]
[-317.34008789 -183.71154785]
[-323.29199219 -197.49194336]
[-327.94702148 -211.76272583]
[-331.26544189 -226.40216064]
[-333.21893311 -241.28530884]
[-333.79083252 -256.28524780]
[-332.97625732 -271.27392578]
[-330.78216553 -286.12353516]
[-327.22726440 -300.70733643]
[-322.34188843 -314.90090942]
[-316.16772461 -328.58319092]
[-308.75744629 -341.63739014]
[-300.17428589 -353.95217896]
[-290.49145508 -365.42245483]
[-279.79156494 -375.95037842]
[-268.16592407 -385.44613647]
[-255.71371460 -393.82867432]
[-242.54116821 -401.02648926]
[-228.76068115 -406.97817993]
[-214.48982239 -411.63299561]
[-199.85034180 -414.95117188]
[-184.96714783 -416.90438843]
[-169.96720886 -417.47604370]
[-154.97853088 -416.66122437]
[-140.12896729 -414.46688843]
[-125.54521942 -410.91174316]
[-111.35172272 -406.02612305]
[-97.66956329 -399.85174561]
[-84.61547089 -392.44125366]
[-72.30083466 -383.85787964]
[-60.83071518 -374.17483521]
[-50.30296707 -363.47479248]
[-40.80742264 -351.84899902]
[-32.42508316 -339.39663696]
[-25.22747803 -326.22396851]
[-19.27600861 -312.44338989]
[-14.62145233 -298.17242432]
[-11.30352306 -283.53289795]
[-9.35052776 -268.64968872]
[-8.77912998 -253.64973450]
[-9.59420300 -238.66107178]
[-11.78879452 -223.81153870]
[-15.34418011 -209.22785950]
[-20.23002434 -195.03443909]
[-26.40464592 -181.35237122]
[-33.81535721 -168.29841614]
[-42.39894104 -155.98391724]
[-52.08215332 -144.51396179]
[-62.78238678 -133.98638916]
[-53.29348755 -122.36912537]
[-39.24988556 -117.40661621]
[-36.51240540 -101.82404327]
[-27.02350807 -90.20677948]
[-17.53461075 -78.58951569]
[-8.04571247 -66.97225189]
[6.75335073 -65.73801422]
[16.54193497 -54.09163284]
[15.14701462 -38.57738113]
[24.63591385 -26.96011734]
[26.05353737 -41.89297867]
[36.64951324 -52.51019669]
[51.57950592 -53.95771790]
[64.01772308 -45.57375717]
[68.27758026 -31.19135284]
[62.41152573 -17.38594055]
[49.10144043 -10.46917057]
[34.43094635 -13.60427570]
[42.65975189 -1.06287539]
[50.88856125 11.47852516]
[59.11737061 24.01992607]
[67.34617615 36.56132507]
[80.79730225 42.95792770]
[81.89879608 58.74074554]
[90.12760162 71.28214264]
[98.35640717 83.82354736]
[109.59631348 86.87407684]
[115.91277313 96.65894318]
[114.06509399 108.15795898]
[122.10626221 120.82048035]
[130.14743042 133.48300171]
[138.65426636 145.83752441]
[147.61495972 157.86689758]
[156.57565308 169.89627075]
[165.53634644 181.92564392]
[169.58248901 183.50131226]
[172.61207581 186.02839661]
[174.45083618 189.07049561]
[175.08412170 192.17944336]
[174.64694214 194.94837952]
[182.87574768 207.48977661]
[191.10455322 220.03117371]
[199.33335876 232.57257080]
[207.56216431 245.11398315]
[215.97679138 257.53146362]
[224.57534790 269.82232666]
[233.17391968 282.11315918]
[241.77247620 294.40399170]
[254.99313354 287.28143311]
[268.95129395 281.74191284]
[283.45816040 277.86029053]
[298.31759644 275.68911743]
[313.32861328 275.25775146]
[328.28820801 276.57199097]
[342.99404907 279.61410522]
[357.24728394 284.34289551]
[370.85516357 290.69445801]
[383.63363647 298.58291626]
[395.40988159 307.90151978]
[406.02465820 318.52429199]
[415.33438110 330.30752563]
[423.21319580 343.09194946]
[429.55450439 356.70458984]
[434.27258301 370.96139526]
[437.30361938 385.66952515]
[438.60659790 400.63009644]
[438.16390991 415.64077759]
[435.98156738 430.49856567]
[432.08901978 445.00253296]
[426.53897095 458.95651245]
[419.40646362 472.17178345]
[410.78796387 484.46966553]
[400.80001831 495.68383789]
[389.57766724 505.66259766]
[377.27273560 514.27099609]
[364.05160522 521.39270020]
[350.09307861 526.93127441]
[335.58593750 530.81195068]
[320.72634888 532.98211670]
[305.71533203 533.41247559]
[290.75582886 532.09722900]
[276.05017090 529.05413818]
[261.79724121 524.32440186]
[248.18980408 517.97192383]
[235.41186523 510.08264160]
[223.63623047 500.76324463]
[213.02217102 490.13977051]
[203.71322632 478.35586548]
[195.83526611 465.57095337]
[189.49485779 451.95788574]
[184.77772522 437.70077515]
[181.74769592 422.99243164]
[180.44570923 408.03176880]
[180.88938904 393.02111816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 164]
[7 163]
[8 162]
[9 161]
[12 160]
[13 159]
[14 158]
[15 157]
[16 156]
[17 151]
[18 150]
[19 149]
[20 148]
[26 147]
[27 146]
[28 145]
[30 142]
[31 141]
[32 140]
[34 138]
[35 137]
[36 136]
[37 135]
[38 134]
[39 126]
[40 125]
[43 122]
[44 121]
[45 120]
[46 119]
[48 117]
[49 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
