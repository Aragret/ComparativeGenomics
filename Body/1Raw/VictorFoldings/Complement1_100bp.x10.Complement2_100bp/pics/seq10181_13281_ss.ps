%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[82.14235687 535.37078857]
[68.38536072 541.43225098]
[53.83415985 545.20831299]
[38.86565018 546.60113525]
[23.86756706 545.57470703]
[9.22838879 542.15551758]
[-4.67269230 536.43225098]
[-17.47560501 528.55303955]
[-28.84872246 518.72204590]
[-38.49745560 507.19390869]
[-46.17187500 494.26721191]
[-51.67319870 480.27679443]
[-54.85892487 465.58505249]
[-55.64654160 450.57254028]
[-54.01564407 435.62808228]
[-50.00847626 421.13882446]
[-43.72883224 407.48004150]
[-35.33937454 395.00555420]
[-25.05740547 384.03845215]
[-13.14925480 374.86282349]
[0.07662707 367.71633911]
[14.27765846 362.78411865]
[29.08600044 360.19390869]
[44.11807632 360.01278687]
[46.34319305 345.17874146]
[48.56831360 330.34469604]
[35.73228836 322.71804810]
[26.76983452 310.72555542]
[23.07163620 296.17605591]
[25.23142052 281.27899170]
[32.95088577 268.30886841]
[45.08047104 259.25811768]
[59.79044342 255.53085327]
[62.01556015 240.69680786]
[64.24067688 225.86277771]
[66.46578979 211.02873230]
[68.69091034 196.19468689]
[70.91603088 181.36064148]
[59.47534180 191.06170654]
[44.52657318 192.30033875]
[31.64523506 184.61456299]
[25.63575172 170.87098694]
[28.73951340 156.19560242]
[39.79889297 146.06199646]
[54.68901062 144.24972534]
[67.85623169 151.43473816]
[74.38965607 164.93835449]
[78.36175537 150.47383118]
[82.33384705 136.00930786]
[86.30594635 121.54478455]
[90.27804565 107.08026123]
[94.03433990 92.55820465]
[97.57401276 77.98182678]
[101.11368561 63.40545273]
[90.96295166 74.44911957]
[77.67922211 81.41636658]
[62.82306290 83.48869324]
[48.13975906 80.42264557]
[35.35429382 72.57842255]
[25.96868706 60.87755203]
[21.08555222 46.69464111]
[21.27855492 31.69588089]
[26.52502251 17.64331627]
[36.20860291 6.18782520]
[49.19168091 -1.32481170]
[63.94901276 -4.01201725]
[78.74693298 -1.55810201]
[91.84698486 5.74865150]
[101.71018982 17.04985237]
[107.17783356 31.01784706]
[107.60735321 46.01324081]
[114.48676300 32.68381119]
[121.36618042 19.35438347]
[128.24559021 6.02495384]
[127.99781036 0.81096417]
[129.61325073 -3.54146290]
[132.45175171 -6.46687508]
[135.74143982 -7.73585033]
[143.20916748 -20.74480247]
[150.67691040 -33.75375366]
[158.14465332 -46.76270676]
[165.61239624 -59.77165985]
[165.97782898 -66.37302399]
[169.14653015 -71.09068298]
[173.50109863 -73.05200195]
[181.35285950 -85.83283997]
[169.24754333 -94.70494080]
[157.90567017 -104.53421783]
[147.40272522 -115.25526428]
[137.80859375 -126.79673004]
[129.18711853 -139.08180237]
[121.59570312 -152.02874756]
[115.08484650 -165.55137634]
[109.69788361 -179.55970764]
[105.47065735 -193.96052551]
[102.43131256 -208.65797424]
[100.60006714 -223.55426025]
[99.98910522 -238.55024719]
[100.60250092 -253.54612732]
[102.43616486 -268.44210815]
[105.47790527 -283.13906860]
[109.70746613 -297.53921509]
[115.09670258 -311.54666138]
[121.60975647 -325.06823730]
[129.20327759 -338.01394653]
[137.82673645 -350.29760742]
[147.42274475 -361.83752441]
[157.92742920 -372.55685425]
[169.27090454 -382.38430786]
[181.37767029 -391.25442505]
[194.16714478 -399.10821533]
[207.55421448 -405.89343262]
[221.44981384 -411.56484985]
[235.76145935 -416.08477783]
[250.39389038 -419.42315674]
[265.24975586 -421.55770874]
[280.23016357 -422.47427368]
[295.23544312 -422.16671753]
[310.16571045 -420.63711548]
[324.92163086 -417.89566040]
[339.40499878 -413.96054077]
[353.51940918 -408.85800171]
[367.17095947 -402.62197876]
[380.26876831 -395.29394531]
[392.72570801 -386.92272949]
[404.45886230 -377.56396484]
[415.39013672 -367.27999878]
[425.44677734 -356.13925171]
[434.56188965 -344.21585083]
[442.67480469 -331.58914185]
[449.73150635 -318.34317017]
[455.68505859 -304.56610107]
[460.49581909 -290.34957886]
[464.13180542 -275.78823853]
[466.56878662 -260.97897339]
[467.79055786 -246.02037048]
[467.78900146 -231.01194763]
[466.56411743 -216.05358887]
[464.12405396 -201.24485779]
[460.48504639 -186.68428040]
[455.67129517 -172.46876526]
[449.71487427 -158.69291687]
[442.65542603 -145.44842529]
[434.53988647 -132.82341003]
[425.42230225 -120.90190887]
[415.36331177 -109.76324463]
[404.42990112 -99.48154449]
[392.69479370 -90.12524414]
[380.23611450 -81.75660706]
[367.13677979 -74.43131256]
[353.48394775 -68.19812775]
[339.36846924 -63.09851837]
[324.88427734 -59.16643143]
[310.12777710 -56.42803192]
[295.19720459 -54.90154266]
[280.19186401 -54.59712601]
[265.21163940 -55.51680374]
[250.35621643 -57.65445709]
[235.72448730 -60.99586105]
[221.41378784 -65.51877594]
[207.51937866 -71.19310760]
[194.13369751 -77.98108673]
[186.28195190 -65.20024872]
[178.62135315 -52.30391693]
[171.15361023 -39.29496765]
[163.68586731 -26.28601456]
[156.21812439 -13.27706146]
[148.75038147 -0.26810929]
[141.57501221 12.90436649]
[134.69560242 26.23379517]
[127.81619263 39.56322479]
[120.93678284 52.89265442]
[115.69006348 66.94512177]
[112.15039062 81.52149963]
[108.61071777 96.09787750]
[110.25478363 101.07894135]
[108.99102020 106.62657166]
[104.74256897 111.05236053]
[100.77046967 125.51688385]
[96.79837036 139.98139954]
[92.82627869 154.44593811]
[88.85417938 168.91046143]
[85.75006866 183.58575439]
[83.52495575 198.41979980]
[81.29983521 213.25384521]
[79.07472229 228.08789062]
[76.84960175 242.92193604]
[74.62448883 257.75598145]
[87.59349060 265.63510132]
[96.53376007 277.84634399]
[100.10806274 292.51052856]
[97.80199432 307.38565063]
[89.99773407 320.20977783]
[77.91112518 329.04492188]
[63.40235519 332.56982422]
[61.17723846 347.40386963]
[58.95212173 362.23791504]
[73.26950073 366.82144165]
[86.66615295 373.64242554]
[98.79507446 382.52416992]
[109.34210968 393.23660278]
[118.03404999 405.50225830]
[124.64575958 419.00344849]
[129.00598145 433.39041138]
[131.00177002 448.29049683]
[130.58143616 463.31777954]
[127.75585938 478.08303833]
[122.59823608 492.20376587]
[115.24215698 505.31423950]
[105.87816620 517.07482910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 197]
[25 196]
[26 195]
[33 188]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[47 182]
[48 181]
[49 180]
[50 179]
[51 178]
[52 175]
[53 174]
[54 173]
[71 172]
[72 171]
[73 170]
[74 169]
[78 168]
[79 167]
[80 166]
[81 165]
[82 164]
[85 163]
[86 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
