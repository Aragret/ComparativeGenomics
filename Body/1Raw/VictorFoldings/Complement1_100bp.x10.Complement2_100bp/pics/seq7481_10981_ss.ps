%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[144.39093018 354.36410522]
[139.68891907 340.11453247]
[135.91915894 325.59048462]
[133.09744263 310.85290527]
[131.23559570 295.96356201]
[130.34146118 280.98492432]
[130.41874695 265.97982788]
[131.46716309 251.01119995]
[133.48231506 236.14183044]
[136.45571899 221.43408203]
[140.37492371 206.94964600]
[145.22348022 192.74928284]
[150.98106384 178.89254761]
[157.62351990 165.43756104]
[165.12298584 152.44076538]
[152.64320374 144.11882019]
[140.16340637 135.79687500]
[127.68360901 127.47492981]
[115.20381927 119.15298462]
[102.72402191 110.83103943]
[90.18262482 102.60223389]
[77.58031464 94.46701813]
[64.97800446 86.33180237]
[52.37569046 78.19658661]
[39.77337646 70.06137085]
[27.17106628 61.92615509]
[18.20033646 73.95524597]
[8.43799114 85.35128021]
[-2.07142997 96.06225586]
[-13.27997303 106.03929901]
[-25.13649559 115.23690033]
[-37.58689880 123.61308289]
[-50.57437515 131.12962341]
[-64.03965759 137.75224304]
[-77.92131805 143.45069885]
[-92.15601349 148.19900513]
[-106.67879486 151.97549438]
[-121.42338562 154.76293945]
[-136.32252502 156.54861450]
[-151.30822754 157.32437134]
[-166.31210327 157.08668518]
[-181.26570129 155.83662415]
[-196.10079956 153.57989502]
[-210.74971008 150.32678223]
[-225.14556885 146.09216309]
[-239.22271729 140.89532471]
[-252.91690063 134.76000977]
[-266.16564941 127.71418762]
[-278.90850830 119.79002380]
[-291.08734131 111.02365875]
[-302.64657593 101.45510101]
[-313.53344727 91.12801361]
[-323.69830322 80.08951569]
[-333.09475708 68.38996124]
[-341.67996216 56.08275223]
[-349.41470337 43.22402954]
[-356.26370239 29.87247086]
[-362.19570923 16.08899689]
[-367.18365479 1.93649817]
[-371.20480347 -12.52045059]
[-374.24078369 -27.21588326]
[-376.27774048 -42.08275223]
[-377.30639648 -57.05321503]
[-377.32205200 -72.05896759]
[-376.32464600 -87.03154755]
[-374.31869507 -101.90263367]
[-371.31338501 -116.60437012]
[-367.32238770 -131.06967163]
[-362.36398315 -145.23254395]
[-356.46072388 -159.02836609]
[-349.63958740 -172.39418030]
[-341.93167114 -185.26901245]
[-333.37219238 -197.59410095]
[-324.00015259 -209.31323242]
[-313.85833740 -220.37290955]
[-302.99301147 -230.72268677]
[-291.45379639 -240.31533813]
[-279.29327393 -249.10708618]
[-266.56695557 -257.05780029]
[-253.33294678 -264.13125610]
[-239.65158081 -270.29513550]
[-225.58531189 -275.52130127]
[-211.19831848 -279.78594971]
[-196.55622864 -283.06961060]
[-181.72587585 -285.35729980]
[-166.77491760 -286.63854980]
[-151.77156067 -286.90753174]
[-136.78427124 -286.16302490]
[-121.88144684 -284.40844727]
[-107.13106537 -281.65176392]
[-92.60044098 -277.90557861]
[-78.35587311 -273.18698120]
[-64.46235657 -267.51748657]
[-50.98328781 -260.92297363]
[-37.98015976 -253.43353271]
[-25.51231194 -245.08334351]
[-13.63662910 -235.91049194]
[-2.40729785 -225.95684814]
[8.12444305 -215.26782227]
[17.91054153 -203.89218140]
[26.90634155 -191.88182068]
[35.07080078 -179.29156494]
[42.36666489 -166.17886353]
[48.76064682 -152.60351562]
[54.22356796 -138.62748718]
[58.73050308 -124.31453705]
[62.26088715 -109.72997284]
[64.79861450 -94.94035339]
[66.33210754 -80.01315308]
[66.85436249 -65.01647949]
[66.36299896 -50.01876450]
[64.86026764 -35.08843613]
[62.35300827 -20.29361725]
[58.85267639 -5.70181799]
[54.37523651 8.62038422]
[48.94111633 22.60763931]
[42.57511902 36.19612503]
[35.30628204 49.32384491]
[47.90859222 57.45906067]
[60.51090622 65.59427643]
[73.11322021 73.72949219]
[85.71553040 81.86470795]
[98.31784058 89.99992371]
[106.25966644 91.37828827]
[111.04596710 98.35124969]
[123.52576447 106.67319489]
[136.00555420 114.99514008]
[148.48535156 123.31707764]
[160.96514893 131.63902283]
[173.44493103 139.96096802]
[182.56033325 128.04171753]
[192.42813110 116.73750305]
[203.00697327 106.09573364]
[214.25245667 96.16105652]
[226.11744690 86.97513580]
[238.55213928 78.57649994]
[251.50440979 71.00037384]
[264.91992188 64.27853394]
[278.74240112 58.43918610]
[292.91387939 53.50680923]
[307.37487793 49.50209808]
[322.06481934 46.44184875]
[336.92199707 44.33889389]
[351.88418579 43.20206070]
[366.88854980 43.03610992]
[381.87222290 43.84174347]
[396.77230835 45.61558151]
[411.52630615 48.35018158]
[426.07235718 52.03407288]
[440.34945679 56.65180588]
[454.29769897 62.18401337]
[467.85861206 68.60749054]
[480.97528076 75.89529419]
[493.59268188 84.01685333]
[505.65792847 92.93810272]
[517.12042236 102.62163544]
[527.93200684 113.02681732]
[538.04742432 124.11001587]
[547.42419434 135.82475281]
[556.02301025 148.12187195]
[563.80780029 160.94979858]
[570.74591064 174.25474548]
[576.80828857 187.98088074]
[581.96942139 202.07064819]
[586.20770264 216.46495056]
[589.50531006 231.10342407]
[591.84851074 245.92463684]
[593.22735596 260.86642456]
[593.63616943 275.86614990]
[593.07318115 290.86090088]
[591.54077148 305.78775024]
[589.04541016 320.58407593]
[585.59741211 335.18786621]
[581.21142578 349.53784180]
[575.90570068 363.57382202]
[569.70263672 377.23690796]
[562.62811279 390.46981812]
[554.71185303 403.21707153]
[545.98706055 415.42514038]
[536.49035645 427.04284668]
[526.26153564 438.02148438]
[515.34350586 448.31497192]
[503.78210449 457.88015747]
[491.62579346 466.67691040]
[478.92556763 474.66833496]
[465.73468018 481.82092285]
[452.10845947 488.10464478]
[438.10409546 493.49319458]
[423.78027344 497.96389771]
[409.19711304 501.49807739]
[394.41577148 504.08087158]
[379.49822998 505.70144653]
[364.50711060 506.35299683]
[349.50521851 506.03280640]
[334.55554199 504.74224854]
[319.72073364 502.48666382]
[305.06304932 499.27557373]
[290.64395142 495.12240601]
[276.52392578 490.04461670]
[262.76220703 484.06347656]
[249.41651917 477.20410156]
[236.54281616 469.49523926]
[224.19509888 460.96920776]
[212.42517090 451.66180420]
[201.28240967 441.61203003]
[190.81352234 430.86209106]
[181.06243896 419.45703125]
[172.07006836 407.44470215]
[163.87409973 394.87548828]
[156.50892639 381.80212402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 130]
[16 129]
[17 128]
[18 127]
[19 126]
[20 125]
[21 123]
[22 122]
[23 121]
[24 120]
[25 119]
[26 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
