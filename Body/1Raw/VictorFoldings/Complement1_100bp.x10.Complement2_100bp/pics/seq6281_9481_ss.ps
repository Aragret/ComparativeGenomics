%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[229.28656006 448.96566772]
[241.72395325 440.49234009]
[235.85499573 426.68817139]
[229.98603821 412.88400269]
[224.11706543 399.07980347]
[220.10162354 396.49423218]
[217.66780090 391.35870361]
[218.28565979 384.77618408]
[212.83030701 370.80337524]
[207.37495422 356.83059692]
[201.91958618 342.85778809]
[196.46423340 328.88497925]
[191.00888062 314.91220093]
[185.55351257 300.93939209]
[180.09815979 286.96658325]
[174.43537903 273.07656860]
[168.56642151 259.27239990]
[162.69744873 245.46821594]
[156.42008972 231.84489441]
[149.73989868 218.41452026]
[143.05970764 204.98414612]
[136.37951660 191.55377197]
[129.69931030 178.12339783]
[123.01911926 164.69302368]
[116.33892822 151.26264954]
[110.54553223 146.67370605]
[109.66092682 137.58221436]
[103.18143463 124.05386353]
[96.70193481 110.52552032]
[89.33150482 123.58985138]
[74.54704285 126.12357330]
[63.24710846 116.25891113]
[63.76159286 101.26773834]
[75.71123505 92.20098114]
[90.28591919 95.74127960]
[78.80810547 89.85718536]
[74.55198669 78.10690308]
[79.28639221 66.97532654]
[74.03967285 52.92285538]
[68.79295349 38.87038422]
[63.54623795 24.81791115]
[58.29951859 10.76544094]
[53.05280304 -3.28703070]
[45.68211365 -16.35121536]
[36.36722946 -28.10846710]
[27.05234718 -39.86571884]
[12.41792202 -45.87771988]
[10.57901096 -60.65837479]
[1.26412833 -72.41562653]
[-13.37029648 -78.42762756]
[-15.20920753 -93.20828247]
[-24.52408981 -104.96553040]
[-33.83897400 -116.72278595]
[-46.50267029 -108.65836334]
[-59.92844772 -101.93880463]
[-73.97399139 -96.63533020]
[-88.49040222 -92.80416870]
[-103.32379913 -90.48592377]
[-118.31694794 -89.70516968]
[-133.31091309 -90.47019196]
[-148.14672852 -92.77287292]
[-162.66716003 -96.58881378]
[-176.71824646 -101.87754822]
[-190.15107727 -108.58301544]
[-202.82322693 -116.63414764]
[-214.60037231 -125.94557953]
[-225.35766602 -136.41862488]
[-234.98107910 -147.94224548]
[-243.36860657 -160.39428711]
[-250.43132019 -173.64276123]
[-256.09436035 -187.54722595]
[-260.29769897 -201.96026611]
[-262.99676514 -216.72912598]
[-264.16296387 -231.69721985]
[-263.78390503 -246.70590210]
[-261.86364746 -261.59603882]
[-258.42251587 -276.20983887]
[-253.49700928 -290.39233398]
[-247.13931274 -303.99322510]
[-239.41683960 -316.86828613]
[-230.41145325 -328.88107300]
[-220.21862793 -339.90423584]
[-208.94638062 -349.82092285]
[-196.71421814 -358.52600098]
[-183.65182495 -365.92718506]
[-169.89764404 -371.94604492]
[-155.59750366 -376.51876831]
[-140.90296936 -379.59689331]
[-125.96981812 -381.14773560]
[-110.95635986 -381.15493774]
[-96.02173615 -379.61834717]
[-81.32426453 -376.55429077]
[-67.01975250 -371.99526978]
[-53.25982666 -365.98956299]
[-40.19035339 -358.60086060]
[-27.94987488 -349.90747070]
[-16.66814995 -340.00158691]
[-6.46477032 -328.98818970]
[2.55210280 -316.98400879]
[10.28688526 -304.11633301]
[16.65758514 -290.52154541]
[21.59666634 -276.34378052]
[25.05177689 -261.73327637]
[26.98628616 -246.84498596]
[27.37968826 -231.83666992]
[26.22781563 -216.86746216]
[23.54287529 -202.09603882]
[19.35333061 -187.67897034]
[13.70359230 -173.76910400]
[6.65355206 -160.51387024]
[-1.72205591 -148.05381775]
[-11.33444595 -136.52099609]
[-22.08172226 -126.03766632]
[-12.76683903 -114.28041077]
[-3.45195603 -102.52316284]
[10.51620579 -97.35211945]
[13.02137947 -81.73050690]
[22.33626175 -69.97325897]
[36.30442429 -64.80220795]
[38.80959702 -49.18060303]
[48.12448120 -37.42335129]
[57.43936539 -25.66609955]
[54.43251801 -40.36163712]
[55.44686508 -55.32730103]
[60.40917587 -69.48270416]
[68.96121979 -81.80596161]
[80.48561096 -91.40744019]
[94.15040588 -97.59399414]
[108.96911621 -99.91902924]
[123.87197113 -98.21468353]
[137.78312683 -92.60400391]
[149.69831848 -83.49202728]
[158.75738525 -71.53655243]
[164.30635071 -57.60066223]
[165.94459534 -42.69039536]
[163.55389404 -27.88213348]
[157.30682373 -14.24490547]
[147.65434265 -2.76319098]
[135.29330444 5.73413515]
[121.11603546 10.63364315]
[106.14602661 11.58163452]
[91.46395874 8.50967121]
[78.12975311 1.63952136]
[67.10527039 -8.53374863]
[72.35198975 5.51872253]
[77.59870911 19.57119370]
[82.84542847 33.62366486]
[88.09214783 47.67613602]
[93.33886719 61.72860718]
[107.45718384 72.15166473]
[104.25872040 90.28591919]
[110.23028564 104.04602814]
[116.70977783 117.57437134]
[123.18927765 131.10272217]
[129.76930237 144.58244324]
[136.44949341 158.01283264]
[143.12968445 171.44320679]
[149.80989075 184.87358093]
[156.49008179 198.30395508]
[163.17027283 211.73432922]
[169.85046387 225.16470337]
[173.55216980 227.43435669]
[176.08442688 230.45962524]
[177.35327148 233.78009033]
[177.42395020 236.95208740]
[176.50163269 239.59925842]
[182.37059021 253.40342712]
[188.23954773 267.20761108]
[193.28359985 271.48187256]
[195.13407898 276.85519409]
[194.07095337 281.51123047]
[199.52632141 295.48403931]
[204.98167419 309.45684814]
[210.43702698 323.42962646]
[215.89239502 337.40243530]
[221.34774780 351.37524414]
[226.80310059 365.34802246]
[232.25845337 379.32083130]
[237.92124939 393.21084595]
[243.79020691 407.01501465]
[249.65916443 420.81921387]
[255.52812195 434.62338257]
[270.25952148 431.54568481]
[285.30828857 431.40136719]
[300.09600830 434.19601440]
[314.05422974 439.82217407]
[326.64651489 448.06359863]
[337.38879395 458.60351562]
[345.86816406 471.03680420]
[351.75869751 484.88552856]
[354.83401489 499.61743164]
[354.97589111 514.66619873]
[352.17886353 529.45349121]
[346.55044556 543.41082764]
[338.30697632 556.00170898]
[327.76531982 566.74230957]
[315.33068848 575.21966553]
[301.48098755 581.10797119]
[286.74859619 584.18090820]
[271.69976807 584.32031250]
[256.91299438 581.52093506]
[242.95655823 575.89025879]
[230.36695862 567.64471436]
[219.62809753 557.10131836]
[211.15275574 544.66534424]
[205.26667786 530.81469727]
[202.19613647 516.08178711]
[202.05914307 501.03295898]
[204.86094666 486.24661255]
[210.49388123 472.29110718]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[4 180]
[5 179]
[8 178]
[9 177]
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[15 171]
[16 168]
[17 167]
[18 166]
[19 161]
[20 160]
[21 159]
[22 158]
[23 157]
[24 156]
[25 155]
[27 154]
[28 153]
[29 152]
[35 151]
[38 149]
[39 148]
[40 147]
[41 146]
[42 145]
[43 144]
[44 122]
[45 121]
[46 120]
[48 118]
[49 117]
[51 115]
[52 114]
[53 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
