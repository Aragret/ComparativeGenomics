%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[63.99971008 481.80578613]
[53.01990891 492.03274536]
[41.42554092 501.55731201]
[29.26146126 510.34262085]
[16.57472992 518.35467529]
[3.41443038 525.56256104]
[-10.16852188 531.93829346]
[-24.12157631 537.45721436]
[-38.39075470 542.09802246]
[-52.92084503 545.84277344]
[-67.65563965 548.67687988]
[-82.53813171 550.58947754]
[-97.51073456 551.57312012]
[-112.51553345 551.62408447]
[-127.49446869 550.74200439]
[-142.38958740 548.93048096]
[-157.14328003 546.19641113]
[-171.69845581 542.55035400]
[-185.99879456 538.00646973]
[-199.98898315 532.58233643]
[-213.61488342 526.29895020]
[-226.82379150 519.18054199]
[-239.56460571 511.25476074]
[-251.78802490 502.55221558]
[-263.44674683 493.10656738]
[-274.49569702 482.95434570]
[-284.89212036 472.13488770]
[-294.59576416 460.68997192]
[-303.56915283 448.66394043]
[-311.77749634 436.10333252]
[-319.18905640 423.05667114]
[-325.77517700 409.57449341]
[-331.51040649 395.70892334]
[-336.37249756 381.51361084]
[-340.34265137 367.04348755]
[-343.40551758 352.35455322]
[-345.54928589 337.50360107]
[-346.76559448 322.54809570]
[-347.04977417 307.54589844]
[-346.40072632 292.55505371]
[-344.82095337 277.63357544]
[-342.31655884 262.83914185]
[-338.89727783 248.22906494]
[-334.57626343 233.85980225]
[-329.37030029 219.78698730]
[-323.29949951 206.06503296]
[-316.38732910 192.74705505]
[-308.66055298 179.88456726]
[-300.14907837 167.52732849]
[-290.88583374 155.72314453]
[-280.90664673 144.51770020]
[-270.25009155 133.95433044]
[-258.95745850 124.07391357]
[-247.07238770 114.91467285]
[-234.64088440 106.51203918]
[-221.71102905 98.89852905]
[-208.33287048 92.10359192]
[-194.55813599 86.15351105]
[-180.44013977 81.07131958]
[-166.03349304 76.87667084]
[-151.39393616 73.58579254]
[-136.57810974 71.21142578]
[-121.64332581 69.76274109]
[-106.64736176 69.24536133]
[-91.64824677 69.66127014]
[-76.70399475 71.00887299]
[-61.87244034 73.28294373]
[-47.21095276 76.47470093]
[-32.77625656 80.57177734]
[-18.62419701 85.55833435]
[-4.80952787 91.41507721]
[8.61430550 98.11934662]
[21.59536743 105.64520264]
[34.08343887 113.96353149]
[46.03020477 123.04215240]
[57.38944244 132.84593201]
[67.87694550 122.12155914]
[78.36444092 111.39717865]
[88.85194397 100.67279816]
[99.25931549 89.87064362]
[109.58598328 78.99131012]
[119.91265106 68.11197662]
[130.23931885 57.23263931]
[140.56599426 46.35330582]
[150.89265442 35.47397232]
[161.21932983 24.59463692]
[151.07414246 13.53769684]
[141.71597290 1.80717206]
[133.18939209 -10.54103565]
[125.53506470 -23.44808197]
[118.78944397 -36.85245514]
[112.98468018 -50.69028473]
[108.14844513 -64.89561462]
[104.30377960 -79.40075684]
[101.46900177 -94.13658905]
[99.65763092 -109.03288269]
[98.87828827 -124.01865387]
[99.13469696 -139.02249146]
[100.42562103 -153.97286987]
[102.74492645 -168.79858398]
[106.08155060 -183.42893982]
[110.41959381 -197.79425049]
[115.73838806 -211.82604980]
[122.01258087 -225.45744324]
[129.21226501 -238.62350464]
[137.30314636 -251.26147461]
[146.24667358 -263.31112671]
[156.00019836 -274.71505737]
[166.51725769 -285.41888428]
[177.74772644 -295.37164307]
[189.63810730 -304.52584839]
[202.13169861 -312.83792114]
[215.16899109 -320.26824951]
[228.68785095 -326.78140259]
[242.62385559 -332.34634399]
[256.91058350 -336.93658447]
[271.47994995 -340.53018188]
[286.26254272 -343.11010742]
[301.18786621 -344.66397095]
[316.18487549 -345.18441772]
[331.18203735 -344.66897583]
[346.10791016 -343.12008667]
[360.89135742 -340.54513550]
[375.46191406 -336.95635986]
[389.75018311 -332.37091064]
[403.68804932 -326.81060791]
[417.20907593 -320.30197144]
[430.24884033 -312.87600708]
[442.74520874 -304.56811523]
[454.63864136 -295.41787720]
[465.87243652 -285.46887207]
[476.39306641 -274.76855469]
[486.15042114 -263.36788940]
[495.09796143 -251.32121277]
[503.19305420 -238.68594360]
[510.39712524 -225.52229309]
[516.67590332 -211.89299011]
[521.99932861 -197.86297607]
[526.34222412 -183.49911499]
[529.68371582 -168.86985779]
[532.00793457 -154.04493713]
[533.30389404 -139.09497070]
[533.56530762 -124.09123230]
[532.79095459 -109.10520172]
[530.98455811 -94.20830536]
[528.15472412 -79.47152710]
[524.31488037 -64.96510315]
[519.48339844 -50.75815582]
[513.68322754 -36.91839218]
[506.94210815 -23.51176453]
[499.29208374 -10.60216236]
[490.76965332 1.74889183]
[481.41537476 13.48254108]
[471.27389526 24.54286766]
[460.39349365 34.87716293]
[448.82604980 44.43618393]
[436.62667847 53.17436981]
[423.85351562 61.05008316]
[410.56741333 68.02579498]
[396.83172607 74.06825256]
[382.71188354 79.14866638]
[368.27517700 83.24283600]
[353.59039307 86.33123016]
[338.72753906 88.39914703]
[323.75744629 89.43672943]
[308.75143433 89.43902588]
[293.78100586 88.40602875]
[278.91751099 86.34266663]
[264.23178101 83.25876617]
[249.79383850 79.16902161]
[235.67243958 74.09292603]
[221.93489075 68.05467224]
[208.64666748 61.08303452]
[195.87109375 53.21123123]
[183.66903687 44.47677994]
[172.09866333 34.92130661]
[161.77198792 45.80064011]
[151.44532776 56.67997360]
[141.11865234 67.55931091]
[130.79199219 78.43864441]
[120.46531677 89.31797791]
[110.13864899 100.19731140]
[107.31452942 107.74694061]
[99.57632446 111.16030121]
[89.08882141 121.88468170]
[78.60131836 132.60905457]
[68.11382294 143.33343506]
[78.16883087 154.47090149]
[87.51197815 166.21195984]
[96.10711670 178.51113892]
[103.92098999 191.32090759]
[110.92336273 204.59167480]
[117.08715057 218.27210999]
[122.38850403 232.30928040]
[126.80691528 246.64888000]
[130.32528687 261.23544312]
[132.93000793 276.01251221]
[134.61100769 290.92294312]
[135.36177063 305.90902710]
[135.17939758 320.91281128]
[134.06459045 335.87622070]
[132.02168274 350.74136353]
[129.05854797 365.45077515]
[125.18667603 379.94750977]
[120.42102814 394.17547607]
[114.78005219 408.07962036]
[108.28556061 421.60620117]
[100.96269226 434.70285034]
[92.83977509 447.31890869]
[83.94823456 459.40554810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 187]
[77 186]
[78 185]
[79 184]
[80 182]
[81 181]
[82 180]
[83 179]
[84 178]
[85 177]
[86 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
