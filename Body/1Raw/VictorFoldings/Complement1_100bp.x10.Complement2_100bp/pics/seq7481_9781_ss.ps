%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[179.40242004 288.69589233]
[187.93501282 276.33148193]
[198.03952026 265.21472168]
[209.53564453 255.54402161]
[201.49447632 242.88148499]
[193.45329285 230.21896362]
[185.41212463 217.55644226]
[177.37095642 204.89392090]
[169.32977295 192.23138428]
[161.28860474 179.56886292]
[152.14981079 167.67424011]
[141.98625183 156.64234924]
[131.82270813 145.61047363]
[121.65916443 134.57859802]
[111.49561310 123.54672241]
[101.33206940 112.51484680]
[90.92469788 101.71269226]
[80.27868652 91.14564514]
[69.63268280 80.57859802]
[58.98667145 70.01155090]
[52.70227051 67.95780945]
[48.96017456 63.68068695]
[48.18688202 58.96782684]
[37.86021423 48.08849335]
[27.53354645 37.20915985]
[17.20687675 26.32982445]
[6.88020849 15.45049000]
[-3.44646025 4.57115555]
[-12.82115078 5.58223343]
[-21.48156357 2.21637058]
[-27.53113556 -4.65363550]
[-29.70790100 -13.40328789]
[-27.64633560 -22.03943062]
[-37.47691727 -33.36902618]
[-47.30749512 -44.69861603]
[-57.13807678 -56.02820969]
[-66.96865845 -67.35780334]
[-76.79924011 -78.68740082]
[-88.80628967 -69.68606567]
[-101.42489624 -61.56424332]
[-114.59076691 -54.36332321]
[-128.23678589 -48.11999512]
[-142.29345703 -42.86607361]
[-156.68910217 -38.62833786]
[-171.35040283 -35.42837906]
[-186.20262146 -33.28250122]
[-201.17008972 -32.20164108]
[-216.17651367 -32.19130707]
[-231.14546204 -33.25155258]
[-246.00062561 -35.37697220]
[-260.66632080 -38.55673599]
[-275.06777954 -42.77464294]
[-289.13165283 -48.00919724]
[-302.78628540 -54.23372650]
[-315.96203613 -61.41650772]
[-328.59182739 -69.52094269]
[-340.61126709 -78.50572968]
[-351.95910645 -88.32508850]
[-362.57751465 -98.92897034]
[-372.41241455 -110.26335907]
[-381.41366577 -122.27047729]
[-389.53536987 -134.88914490]
[-396.73620605 -148.05506897]
[-402.97943115 -161.70114136]
[-408.23324585 -175.75784302]
[-412.47085571 -190.15353394]
[-415.67071533 -204.81484985]
[-417.81646729 -219.66708374]
[-418.89721680 -234.63455200]
[-418.90744019 -249.64099121]
[-417.84707642 -264.60992432]
[-415.72155762 -279.46505737]
[-412.54165649 -294.13073730]
[-408.32363892 -308.53216553]
[-403.08898926 -322.59600830]
[-396.86434937 -336.25057983]
[-389.68148804 -349.42630005]
[-381.57693481 -362.05603027]
[-372.59207153 -374.07537842]
[-362.77261353 -385.42315674]
[-352.16864014 -396.04150391]
[-340.83419800 -405.87628174]
[-328.82699585 -414.87744141]
[-316.20828247 -422.99908447]
[-303.04229736 -430.19979858]
[-289.39617920 -436.44290161]
[-275.33944702 -441.69662476]
[-260.94372559 -445.93411255]
[-246.28237915 -449.13385010]
[-231.43011475 -451.27951050]
[-216.46263123 -452.36013794]
[-201.45619202 -452.37023926]
[-186.48727417 -451.30978394]
[-171.63214111 -449.18411255]
[-156.96650696 -446.00411987]
[-142.56509399 -441.78601074]
[-128.50129700 -436.55123901]
[-114.84677887 -430.32650757]
[-101.67111969 -423.14352417]
[-89.04145813 -415.03887939]
[-77.02216339 -406.05392456]
[-65.67446899 -396.23437500]
[-55.05621338 -385.63034058]
[-45.22149658 -374.29580688]
[-36.22043991 -362.28854370]
[-28.09891129 -349.66973877]
[-20.89829254 -336.50372314]
[-14.65527821 -322.85754395]
[-9.40168190 -308.80078125]
[-5.16427612 -294.40502930]
[-1.96465254 -279.74365234]
[0.18088356 -264.89138794]
[1.26139903 -249.92388916]
[1.27138770 -234.91744995]
[0.21079876 -219.94853210]
[-1.91496325 -205.09342957]
[-5.09506607 -190.42781067]
[-9.31330395 -176.02642822]
[-14.54818153 -161.96267700]
[-20.77302361 -148.30819702]
[-27.95610809 -135.13259888]
[-36.06083298 -122.50299835]
[-45.04589844 -110.48377228]
[-54.86551666 -99.13615417]
[-65.46964264 -88.51797485]
[-55.63906479 -77.18838501]
[-45.80848312 -65.85879517]
[-35.97790527 -54.52919769]
[-26.14732361 -43.19960403]
[-16.31674194 -31.87001228]
[3.70433688 -26.85790443]
[7.43287420 -5.75551319]
[17.75954247 5.12382126]
[28.08621216 16.00315475]
[38.41287994 26.88249016]
[48.73954773 37.76182556]
[59.06621552 48.64115906]
[69.55371857 59.36553955]
[80.19972992 69.93258667]
[90.84573364 80.49963379]
[101.49174500 91.06668091]
[105.31130219 91.59900665]
[108.87767029 93.81234741]
[111.44535065 97.55588531]
[112.36394501 102.35130310]
[122.52749634 113.38317871]
[132.69104004 124.41505432]
[142.85458374 135.44692993]
[153.01812744 146.47880554]
[163.18168640 157.51068115]
[160.61863708 142.73127747]
[164.63862610 128.27999878]
[174.46545410 116.94714355]
[188.20170593 110.92092896]
[203.19514465 111.36490631]
[216.55075073 118.19335938]
[225.68977356 130.08782959]
[228.84761047 144.75166321]
[225.41453552 159.35351562]
[216.05342102 171.07398987]
[202.57176208 177.65005493]
[187.57263184 177.81196594]
[173.95112610 171.52769470]
[181.99230957 184.19021606]
[190.03347778 196.85273743]
[198.07464600 209.51527405]
[206.11582947 222.17779541]
[214.15699768 234.84031677]
[222.19816589 247.50283813]
[235.83955383 241.21031189]
[250.19796753 236.79220581]
[265.01715088 234.32736206]
[280.03262329 233.85978699]
[294.97644043 235.39782715]
[309.58190918 238.91400146]
[323.58840942 244.34559631]
[336.74591064 251.59567261]
[348.81964111 260.53482056]
[359.59411621 271.00354004]
[368.87707520 282.81497192]
[376.50283813 295.75836182]
[382.33529663 309.60269165]
[386.27041626 324.10092163]
[388.23791504 338.99429321]
[388.20269775 354.01699829]
[386.16543579 368.90100098]
[382.16241455 383.38061523]
[376.26510620 397.19744873]
[368.57876587 410.10494995]
[359.24053955 421.87274170]
[348.41711426 432.29086304]
[336.30160522 441.17330933]
[323.11026001 448.36163330]
[309.07849121 453.72750854]
[294.45669556 457.17520142]
[279.50582886 458.64318848]
[264.49270630 458.10522461]
[249.68524170 455.57095337]
[235.34770203 451.08560181]
[221.73596191 444.72918701]
[209.09292603 436.61520386]
[197.64424133 426.88836670]
[187.59420776 415.72235107]
[179.12217712 403.31637573]
[172.37936401 389.89184570]
[167.48608398 375.68835449]
[164.52966309 360.95935059]
[163.56286621 345.96774292]
[164.60296631 330.98101807]
[167.63136292 316.26666260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[11 150]
[12 149]
[13 148]
[14 147]
[15 146]
[16 145]
[17 141]
[18 140]
[19 139]
[20 138]
[23 137]
[24 136]
[25 135]
[26 134]
[27 133]
[28 132]
[33 130]
[34 129]
[35 128]
[36 127]
[37 126]
[38 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
