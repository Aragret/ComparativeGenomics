%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[228.51426697 533.69885254]
[231.56764221 518.99658203]
[236.24797058 504.72863770]
[242.49641418 491.07443237]
[250.23439026 478.20571899]
[259.36456299 466.28433228]
[269.77212524 455.46014404]
[281.32620239 445.86935425]
[273.09738159 433.32794189]
[264.86856079 420.78656006]
[256.63977051 408.24514771]
[248.41096497 395.70373535]
[245.44749451 410.40808105]
[233.80444336 419.86535645]
[218.80488586 419.75177002]
[207.30638123 410.11929321]
[204.56591797 395.37176514]
[211.83638000 382.25152588]
[225.79382324 376.75701904]
[240.05854797 381.40133667]
[233.17913818 368.07192993]
[226.29972839 354.74249268]
[219.42031860 341.41305542]
[212.54089355 328.08364868]
[205.66148376 314.75421143]
[198.78207397 301.42477417]
[191.90266418 288.09533691]
[176.64579773 279.42382812]
[177.66668701 261.03799438]
[170.58958435 247.81246948]
[163.51246643 234.58694458]
[150.68566895 227.01579285]
[150.99664307 211.19764709]
[143.91952515 197.97212219]
[129.21125793 200.66056824]
[114.37206268 198.66851807]
[100.85685730 192.17857361]
[89.99467468 181.81498718]
[82.85797882 168.58358765]
[80.15675354 153.77416992]
[82.16792297 138.83485413]
[88.70700073 125.23033142]
[99.14493561 114.29840088]
[87.37055206 106.75814056]
[87.62953949 92.77870178]
[80.55243683 79.55317688]
[64.68927765 70.20214081]
[65.93915558 52.69771957]
[58.66592789 39.57902527]
[51.39269638 26.46033287]
[34.49110413 21.94862938]
[26.24418640 6.90525198]
[31.32689476 -9.12611866]
[23.85915375 -22.13507080]
[10.27846813 -30.25144577]
[10.65248108 -45.14135361]
[3.18474030 -58.15030670]
[-4.28300095 -71.15925598]
[-17.86368752 -79.27563477]
[-17.48967361 -94.16554260]
[-24.95741463 -107.17449951]
[-32.42515564 -120.18344879]
[-31.49206161 -105.21250153]
[-33.55044556 -90.35440063]
[-38.51831818 -76.20095062]
[-46.19781113 -63.31586456]
[-56.28306198 -52.21236420]
[-68.37236786 -43.33268738]
[-81.98422241 -37.03050995]
[-96.57646942 -33.55685043]
[-111.56790924 -33.05006027]
[-126.36142731 -35.53032303]
[-140.36781311 -40.89884949]
[-153.02920532 -48.94182205]
[-163.84127808 -59.33888245]
[-172.37342834 -71.67591858]
[-178.28578186 -85.46156311]
[-181.34289551 -100.14672852]
[-181.42297363 -115.14651489]
[-178.52284241 -129.86349487]
[-172.75799561 -143.71147156]
[-164.35806274 -156.13890076]
[-153.65760803 -166.65081787]
[-141.08282471 -174.82850647]
[-127.13455200 -180.34628296]
[-112.36835480 -182.98435974]
[-97.37236023 -182.63764954]
[-82.74385834 -179.31999207]
[-69.06549072 -173.16351318]
[-56.88206482 -164.41342163]
[-46.67884064 -153.41822815]
[-38.86401749 -140.61964417]
[-40.20225143 -155.55982971]
[-41.54048538 -170.50001526]
[-56.19677353 -174.36898804]
[-68.64414215 -183.01994324]
[-77.37950134 -195.40821838]
[-81.34802246 -210.03785706]
[-80.07048798 -225.14228821]
[-73.70115662 -238.89755249]
[-63.00916672 -249.64265442]
[-49.28562546 -256.08007812]
[-34.18771362 -257.43243408]
[-19.53858185 -253.53643799]
[-7.10717964 -244.86256409]
[1.60533762 -232.45822144]
[5.54689217 -217.82128906]
[4.24152136 -202.71923828]
[-2.15314388 -188.97572327]
[-12.86491776 -178.25035095]
[-26.60029984 -171.83824158]
[-25.26206589 -156.89805603]
[-23.92383194 -141.95787048]
[-19.41620255 -127.65119171]
[-11.94846249 -114.64223480]
[-4.48072100 -101.63328552]
[8.56582165 -94.44739532]
[8.72595119 -78.62699890]
[16.19369316 -65.61804962]
[23.66143417 -52.60909653]
[36.70797729 -45.42320633]
[36.86810684 -29.60281181]
[44.33584595 -16.59386063]
[57.12230301 -15.00136471]
[66.80136871 -6.20376682]
[69.68865967 6.75285482]
[64.51139069 19.18710327]
[71.78462219 32.30579758]
[79.05785370 45.42449188]
[90.59576416 49.05809402]
[96.76258087 59.92797089]
[93.77796173 72.47607422]
[100.85506439 85.70159912]
[112.62944794 93.24185944]
[112.37046051 107.22129822]
[127.25659943 104.60207367]
[142.20323181 106.70938873]
[155.74833679 113.32440186]
[166.57092285 123.78798676]
[173.61985779 137.06636047]
[176.21592712 151.85322571]
[174.11727905 166.69828796]
[167.54190063 180.14947510]
[157.14506531 190.89500427]
[164.22216797 204.12054443]
[177.55517578 212.63766479]
[176.73800659 227.50982666]
[183.81510925 240.73536682]
[190.89221191 253.96089172]
[202.98791504 258.43936157]
[208.61016846 269.60064697]
[205.23208618 281.21594238]
[212.11151123 294.54534912]
[218.99092102 307.87478638]
[225.87033081 321.20422363]
[232.74974060 334.53366089]
[239.62915039 347.86306763]
[246.50856018 361.19250488]
[253.38798523 374.52194214]
[260.95236206 387.47494507]
[269.18115234 400.01632690]
[277.40997314 412.55773926]
[285.63879395 425.09915161]
[293.86758423 437.64053345]
[307.26535034 430.85968018]
[321.33807373 425.62155151]
[335.90884399 421.99203491]
[350.79434204 420.01675415]
[365.80740356 419.72061157]
[380.75924683 421.10726929]
[395.46179199 424.15933228]
[409.73016357 428.83840942]
[423.38491821 435.08560181]
[436.25433350 442.82241821]
[448.17654419 451.95153809]
[459.00164795 462.35812378]
[468.59350586 473.91131592]
[476.83145142 486.46585083]
[483.61190796 499.86380005]
[488.84963989 513.93670654]
[492.47869873 528.50756836]
[494.45352173 543.39312744]
[494.74923706 558.40618896]
[493.36212158 573.35797119]
[490.30960083 588.06042480]
[485.63012695 602.32867432]
[479.38250732 615.98327637]
[471.64532471 628.85241699]
[462.51583862 640.77435303]
[452.10891724 651.59918213]
[440.55545044 661.19067383]
[428.00067139 669.42822266]
[414.60250854 676.20831299]
[400.52944946 681.44561768]
[385.95849609 685.07427979]
[371.07287598 687.04864502]
[356.05978394 687.34387207]
[341.10803223 685.95629883]
[326.40567017 682.90338135]
[312.13757324 678.22344971]
[298.48318481 671.97540283]
[285.61425781 664.23785400]
[273.69256592 655.10803223]
[262.86807251 644.70080566]
[253.27693176 633.14703369]
[245.03973389 620.59197998]
[238.26005554 607.19366455]
[233.02319336 593.12042236]
[229.39498901 578.54937744]
[227.42106628 563.66369629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 164]
[9 163]
[10 162]
[11 161]
[12 160]
[20 159]
[21 158]
[22 157]
[23 156]
[24 155]
[25 154]
[26 153]
[27 152]
[29 149]
[30 148]
[31 147]
[33 145]
[34 144]
[43 135]
[45 133]
[46 132]
[48 129]
[49 128]
[50 127]
[53 123]
[54 122]
[56 120]
[57 119]
[58 118]
[60 116]
[61 115]
[62 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
