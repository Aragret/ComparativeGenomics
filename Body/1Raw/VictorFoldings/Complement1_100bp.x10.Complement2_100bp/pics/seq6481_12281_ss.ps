%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[80.61513519 768.58966064]
[65.89342499 765.59729004]
[51.70193481 760.66925049]
[38.29393768 753.89367676]
[25.90871239 745.39129639]
[14.76728725 735.31402588]
[5.06849480 723.84155273]
[-3.01457977 711.17877197]
[-9.33768368 697.55151367]
[-13.78797340 683.20306396]
[-16.28602791 668.38940430]
[-16.78726768 653.37500000]
[-15.28274822 638.42779541]
[-11.79931641 623.81445312]
[-6.39914131 609.79583740]
[0.82140660 596.62213135]
[9.73346710 584.52838135]
[20.17799568 573.73046875]
[31.96859360 564.42102051]
[44.89484787 556.76629639]
[58.72607422 550.90277100]
[73.21543121 546.93518066]
[88.10435486 544.93426514]
[88.10435486 529.93426514]
[88.10435486 514.93426514]
[80.36705017 502.20700073]
[88.10435486 488.40682983]
[88.10435486 473.40682983]
[88.10435486 458.40682983]
[88.10435486 443.40682983]
[80.36705017 430.67956543]
[88.10435486 416.87939453]
[84.96085358 410.19058228]
[88.21768188 401.65649414]
[88.44100952 386.65814209]
[88.55267334 371.65856934]
[88.55267334 356.65856934]
[88.55267334 341.65856934]
[88.55267334 326.65856934]
[80.81537628 313.93127441]
[88.55267334 300.13110352]
[88.55267334 285.13110352]
[88.55267334 270.13110352]
[88.55267334 255.13111877]
[88.55267334 240.13111877]
[85.86899567 236.18055725]
[85.63853455 230.50218201]
[88.78265381 224.68617249]
[89.22926331 209.69282532]
[89.67586517 194.69947815]
[90.12247467 179.70611572]
[76.97606659 176.94497681]
[64.47373962 172.03135681]
[52.96523285 165.10270691]
[42.77249146 156.35285950]
[34.18064880 146.02656555]
[27.43005943 134.41271973]
[22.70956230 121.83620453]
[20.15120888 108.64883423]
[19.82657242 95.21952057]
[21.74473000 81.92393494]
[25.85202217 69.13401031]
[32.03355408 57.20754623]
[40.11640167 46.47817230]
[49.87444687 37.24603271]
[61.03472137 29.76938820]
[73.28501892 24.25739861]
[86.28265381 20.86425591]
[99.66402435 19.68487930]
[101.00225830 4.74469328]
[102.34049225 -10.19549179]
[103.67872620 -25.13567734]
[105.01696014 -40.07586288]
[106.35519409 -55.01604843]
[94.89444733 -68.23234558]
[96.50632477 -85.31206512]
[109.70715332 -95.73209381]
[110.82279968 -110.69054413]
[111.93845367 -125.64899445]
[113.05410004 -140.60745239]
[114.16974640 -155.56590271]
[107.48028564 -169.90332031]
[116.14276886 -182.01986694]
[117.25841522 -196.97833252]
[110.56895447 -211.31575012]
[119.23143768 -223.43229675]
[120.34708405 -238.39074707]
[121.46273804 -253.34919739]
[122.35555267 -268.32260132]
[122.91376495 -283.31222534]
[123.36036682 -298.30557251]
[111.25363159 -307.83096313]
[107.12542725 -322.48739624]
[112.35716248 -336.59744263]
[124.74597168 -344.82272339]
[125.19258118 -359.81607056]
[125.63918304 -374.80941772]
[111.39105988 -379.89334106]
[99.41254425 -389.13293457]
[90.87716675 -401.62304688]
[86.62113953 -416.13998413]
[87.06142426 -431.26153564]
[92.15488434 -445.50625610]
[101.40251160 -457.47857666]
[113.89833069 -466.00558472]
[128.41810608 -470.25186157]
[143.53936768 -469.80145264]
[157.78067017 -464.69845581]
[169.74678040 -455.44281006]
[178.26541138 -442.94128418]
[182.50198364 -428.41864014]
[182.04144287 -413.29769897]
[176.92889404 -399.05981445]
[167.66522217 -387.09991455]
[155.15798950 -378.58966064]
[140.63253784 -374.36282349]
[140.18592834 -359.36947632]
[139.73931885 -344.37612915]
[151.61659241 -335.42800903]
[155.99920654 -321.03161621]
[151.00595093 -306.64685059]
[138.35371399 -297.85894775]
[137.90711975 -282.86560059]
[140.85006714 -276.08618164]
[137.34059143 -267.65283203]
[139.84519958 -263.58636475]
[139.82186890 -257.90338135]
[136.42118835 -252.23355103]
[135.30554199 -237.27510071]
[134.18989563 -222.31665039]
[140.95915222 -209.04914856]
[132.21687317 -195.86267090]
[131.10122681 -180.90422058]
[137.87048340 -167.63673401]
[129.12820435 -154.45025635]
[128.01255798 -139.49180603]
[126.89690399 -124.53334808]
[125.78125763 -109.57489777]
[124.66560364 -94.61643982]
[134.35731506 -86.12524414]
[137.43473816 -73.41259003]
[132.55657959 -61.06697845]
[121.29537964 -53.67781448]
[119.95714569 -38.73762894]
[118.61891174 -23.79744339]
[117.28067780 -8.85725784]
[115.94244385 6.08292770]
[114.60420990 21.02311325]
[130.50823975 25.70411110]
[145.11236572 33.55072403]
[157.79434204 44.22862244]
[168.01379395 57.28284073]
[175.33529663 72.15715790]
[179.44691467 88.21781158]
[180.17343140 104.78047943]
[177.48390198 121.13946533]
[171.49291992 136.59773254]
[162.45574951 150.49664307]
[150.75746155 162.24397278]
[136.89648438 171.33920288]
[121.46340942 177.39479065]
[105.11582184 180.15272522]
[104.66921997 195.14607239]
[104.22261047 210.13943481]
[103.77600098 225.13278198]
[103.55267334 240.13111877]
[103.55267334 255.13111877]
[103.55267334 270.13110352]
[103.55267334 285.13110352]
[103.55267334 300.13110352]
[111.28997803 313.93127441]
[103.55267334 326.65856934]
[103.55267334 341.65856934]
[103.55267334 356.65856934]
[103.55267334 371.65856934]
[106.68208313 380.24020386]
[103.43934631 386.88146973]
[103.21601868 401.87982178]
[103.10435486 416.87939453]
[110.84165192 430.67956543]
[103.10435486 443.40682983]
[103.10435486 458.40682983]
[103.10435486 473.40682983]
[103.10435486 488.40682983]
[110.84165192 502.20700073]
[103.10435486 514.93426514]
[103.10435486 529.93426514]
[103.10435486 544.93426514]
[117.99327087 546.93518066]
[132.48263550 550.90277100]
[146.31385803 556.76629639]
[159.24011230 564.42102051]
[171.03071594 573.73046875]
[181.47523499 584.52838135]
[190.38729858 596.62213135]
[197.60784912 609.79583740]
[203.00802612 623.81445312]
[206.49145508 638.42779541]
[207.99597168 653.37500000]
[207.49473572 668.38940430]
[204.99667358 683.20306396]
[200.54638672 697.55151367]
[194.22328186 711.17877197]
[186.14021301 723.84155273]
[176.44142151 735.31402588]
[165.29998779 745.39129639]
[152.91476440 753.89367676]
[139.50677490 760.66925049]
[125.31528473 765.59729004]
[110.59356689 768.58966064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 188]
[24 187]
[25 186]
[27 184]
[28 183]
[29 182]
[30 181]
[32 179]
[34 178]
[35 177]
[36 175]
[37 174]
[38 173]
[39 172]
[41 170]
[42 169]
[43 168]
[44 167]
[45 166]
[48 165]
[49 164]
[50 163]
[51 162]
[69 148]
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
[77 139]
[78 138]
[79 137]
[80 136]
[81 135]
[83 133]
[84 132]
[86 130]
[87 129]
[88 128]
[89 125]
[90 123]
[91 122]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
