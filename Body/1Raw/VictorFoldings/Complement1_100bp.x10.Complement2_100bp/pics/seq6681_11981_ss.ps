%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[50.90698624 254.70863342]
[58.83435059 267.48614502]
[64.48812103 281.41967773]
[67.70562744 296.10827637]
[68.39428711 311.12939453]
[66.53429413 326.05081177]
[62.17916870 340.44320679]
[55.45420456 353.89245605]
[46.55290222 366.01165771]
[35.73136520 376.45208740]
[23.30094910 384.91333008]
[9.61930561 391.15197754]
[-4.91991901 394.98849487]
[-19.89840126 396.31253052]
[-34.88518143 395.08596802]
[-49.44905853 391.34411621]
[-63.17100143 385.19464111]
[-75.65620422 376.81442261]
[-86.54544067 366.44464111]
[-95.52540588 354.38363647]
[-102.33773041 340.97839355]
[-106.78640747 326.61465454]
[-108.74343872 311.70565796]
[-108.15251923 296.68038940]
[-105.03065491 281.97113037]
[-99.46765900 268.00112915]
[-91.62359619 255.17230225]
[-81.72415161 243.85377502]
[-70.05415344 234.37120056]
[-56.94937134 226.99742126]
[-42.78685760 221.94456482]
[-27.97409630 219.35804749]
[-12.93727875 219.31227112]
[1.89095747 221.80856323]
[16.08397293 226.77508545]
[23.35720253 213.65638733]
[30.63043213 200.53768921]
[37.90365982 187.41899109]
[37.28874207 183.94708252]
[38.32492447 180.00482178]
[41.21495819 176.37150574]
[45.80589294 173.88746643]
[53.65764618 161.10662842]
[53.72712708 146.21218872]
[67.54344940 138.50375366]
[75.39520264 125.72291565]
[83.24695587 112.94207001]
[78.85632324 101.05191040]
[82.04511261 88.78466797]
[91.67023468 80.53781128]
[104.28134918 79.26761627]
[112.32251740 66.60509491]
[120.36369324 53.94256592]
[128.40486145 41.28004074]
[115.24072266 48.47068787]
[100.42169189 50.79367447]
[85.68869019 47.97610092]
[72.77254486 40.34896851]
[63.19062424 28.80830956]
[58.06860733 14.70990849]
[58.00822067 -0.28996983]
[63.01655960 -14.42915440]
[72.50524902 -26.04658699]
[85.35957336 -33.77746582]
[100.06940460 -36.71356964]
[114.90666199 -34.50997543]
[128.12826538 -27.42555428]
[138.18096924 -16.29257584]
[143.88378906 -2.41893482]
[144.56674194 12.56550884]
[140.14891052 26.90179443]
[150.95108032 16.49442291]
[161.75323486 6.08704901]
[172.47761536 -4.40045214]
[183.12361145 -14.96749973]
[193.76962280 -25.53454781]
[204.41563416 -36.10159683]
[208.83409119 -53.97780228]
[225.96371460 -57.79131699]
[236.45121765 -68.51569366]
[246.93872070 -79.24007416]
[257.42620850 -89.96445465]
[267.91372681 -100.68883514]
[278.40121460 -111.41321564]
[288.88870239 -122.13759613]
[299.37622070 -132.86196899]
[289.38845825 -144.06114197]
[280.18826294 -155.91580200]
[271.81848145 -168.37068176]
[264.31817627 -181.36769104]
[257.72232056 -194.84623718]
[252.06166077 -208.74348450]
[247.36256409 -222.99462891]
[243.64695740 -237.53323364]
[240.93217468 -252.29151917]
[239.23086548 -267.20065308]
[238.55096436 -282.19113159]
[238.89562988 -297.19305420]
[240.26327515 -312.13650513]
[242.64750671 -326.95175171]
[246.03720093 -341.56979370]
[250.41658020 -355.92242432]
[255.76521301 -369.94271851]
[262.05816650 -383.56533813]
[269.26608276 -396.72674561]
[277.35537720 -409.36557007]
[286.28829956 -421.42291260]
[296.02325439 -432.84252930]
[306.51480103 -443.57119751]
[317.71401978 -453.55886841]
[329.56875610 -462.75900269]
[342.02368164 -471.12869263]
[355.02072144 -478.62890625]
[368.49932861 -485.22467041]
[382.39660645 -490.88525391]
[396.64779663 -495.58425903]
[411.18643188 -499.29974365]
[425.94473267 -502.01443481]
[440.85385132 -503.71563721]
[455.84436035 -504.39544678]
[470.84628296 -504.05068970]
[485.78970337 -502.68295288]
[500.60494995 -500.29861450]
[515.22296143 -496.90881348]
[529.57556152 -492.52932739]
[543.59582520 -487.18060303]
[557.21838379 -480.88757324]
[570.37976074 -473.67956543]
[583.01855469 -465.59017944]
[595.07580566 -456.65716553]
[606.49536133 -446.92214966]
[617.22393799 -436.43054199]
[627.21154785 -425.23123169]
[636.41162109 -413.37646484]
[644.78118896 -400.92147827]
[652.28131104 -387.92434692]
[658.87701416 -374.44570923]
[664.53753662 -360.54840088]
[669.23638916 -346.29718018]
[672.95184326 -331.75851440]
[675.66638184 -317.00021362]
[677.36749268 -302.09106445]
[678.04724121 -287.10058594]
[677.70233154 -272.09863281]
[676.33453369 -257.15521240]
[673.95007324 -242.33999634]
[670.56018066 -227.72201538]
[666.18060303 -213.36944580]
[660.83178711 -199.34921265]
[654.53863525 -185.72668457]
[647.33056641 -172.56538391]
[639.24108887 -159.92665100]
[630.30798340 -147.86943054]
[620.57293701 -136.44993591]
[610.08123779 -125.72142029]
[598.88183594 -115.73388672]
[587.02697754 -106.53392029]
[574.57196045 -98.16440582]
[561.57482910 -90.66436768]
[548.09613037 -84.06877136]
[534.19879150 -78.40837860]
[519.94750977 -73.70957184]
[505.40884399 -69.99426270]
[490.65051270 -67.27977753]
[475.74133301 -65.57876587]
[460.75085449 -64.89916229]
[445.74893188 -65.24413300]
[430.80551147 -66.61207581]
[415.99029541 -68.99660492]
[401.37234497 -72.38660431]
[387.01980591 -76.76627350]
[372.99960327 -82.11518860]
[359.37710571 -88.40840149]
[346.21585083 -95.61658478]
[333.57717896 -103.70613098]
[321.52001953 -112.63930511]
[310.10058594 -122.37447357]
[299.61309814 -111.65009308]
[289.12561035 -100.92571259]
[278.63809204 -90.20133209]
[268.15060425 -79.47695160]
[257.66308594 -68.75257111]
[247.17559814 -58.02819443]
[236.68809509 -47.30381393]
[236.50958252 -35.20858002]
[227.86003113 -26.18809128]
[214.98268127 -25.45558739]
[204.33666992 -14.88853931]
[193.69065857 -4.32149124]
[183.04466248 6.24555635]
[180.51188660 13.18867111]
[172.16059875 16.88920593]
[161.35844421 27.29657936]
[150.55628967 37.70395279]
[141.06739807 49.32121658]
[133.02621460 61.98374176]
[124.98504639 74.64626312]
[116.94387054 87.30879211]
[120.90634918 103.32960510]
[112.16310120 117.32687378]
[96.02780151 120.79383087]
[88.17604828 133.57467651]
[80.32428741 146.35551453]
[79.69319916 162.16412354]
[66.43849182 168.95838928]
[58.58673477 181.73922729]
[51.02235413 194.69223022]
[43.74912643 207.81092834]
[36.47589493 220.92961121]
[29.20266724 234.04830933]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 210]
[36 209]
[37 208]
[38 207]
[42 206]
[43 205]
[45 203]
[46 202]
[47 201]
[51 198]
[52 197]
[53 196]
[54 195]
[71 194]
[72 193]
[73 192]
[74 190]
[75 189]
[76 188]
[77 187]
[79 184]
[80 183]
[81 182]
[82 181]
[83 180]
[84 179]
[85 178]
[86 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
