%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[92.73561096 652.91986084]
[77.72716522 653.14971924]
[62.75853729 652.03332520]
[47.95024109 649.57965088]
[33.42151260 645.80841064]
[19.28932953 640.75000000]
[5.66747522 634.44512939]
[-7.33437014 626.94458008]
[-19.61152267 618.30871582]
[-31.06513214 608.60711670]
[-41.60297775 597.91784668]
[-51.14021301 586.32702637]
[-59.60005188 573.92791748]
[-66.91437531 560.82043457]
[-73.02429199 547.11004639]
[-77.88060760 532.90710449]
[-81.44422150 518.32604980]
[-83.68644714 503.48428345]
[-84.58921814 488.50125122]
[-84.14527893 473.49761963]
[-82.35820007 458.59417725]
[-79.24236298 443.91091919]
[-74.82286072 429.56610107]
[-69.13527679 415.67517090]
[-62.22541046 402.35000610]
[-54.14888763 389.69790649]
[-44.97074127 377.82070923]
[-34.76486969 366.81402588]
[-23.61344910 356.76654053]
[-11.60626125 347.75912476]
[1.16001558 339.86428833]
[14.58259201 333.14559937]
[28.55339622 327.65719604]
[42.95994186 323.44320679]
[57.68622971 320.53756714]
[72.61369324 318.96371460]
[87.62214661 318.73428345]
[88.73779297 303.77584839]
[89.85344696 288.81738281]
[90.96909332 273.85894775]
[92.08473969 258.90048218]
[93.20039368 243.94203186]
[93.75860596 228.95242310]
[93.75860596 213.95242310]
[93.75860596 198.95242310]
[84.17790985 184.24945068]
[93.51734924 168.37947083]
[93.29402161 153.38113403]
[93.07069397 138.38279724]
[92.84736633 123.38446045]
[92.62403870 108.38612366]
[92.28906250 93.38986206]
[91.84246063 78.39650726]
[80.62126160 67.59268951]
[80.38191986 52.38094330]
[90.75086212 41.74982452]
[90.30426025 26.75647545]
[76.02957153 14.30065346]
[75.40312195 -4.31440687]
[88.35623169 -17.25012016]
[87.46341705 -32.22352600]
[86.57060242 -47.19692993]
[85.67778778 -62.17033768]
[84.78496552 -77.14374542]
[83.89215088 -92.11714935]
[77.68944550 -78.45967865]
[67.61641693 -67.34509277]
[54.63317490 -59.83274460]
[39.97718811 -56.63867569]
[25.04537582 -58.06732178]
[11.26094627 -63.98250961]
[-0.06226036 -73.82044983]
[-7.84498644 -86.64344025]
[-11.34543324 -101.22928619]
[-10.22995949 -116.18775177]
[-4.60488462 -130.09309387]
[4.99364376 -141.61994934]
[17.65075493 -149.66963196]
[32.16005707 -153.47491455]
[47.13861084 -152.67311096]
[61.15876007 -147.34062195]
[72.88419342 -137.98571777]
[81.19731140 -125.50003815]
[85.30590820 -111.07252502]
[88.41001892 -125.74783325]
[91.51412201 -140.42312622]
[94.61823273 -155.09843445]
[97.72234344 -169.77374268]
[83.53243256 -174.69812012]
[70.07161713 -181.36218262]
[57.55220032 -189.66082764]
[46.17163467 -199.46316528]
[36.10940552 -210.61460876]
[27.52420616 -222.93928528]
[20.55143929 -236.24281311]
[15.30107784 -250.31536865]
[11.85592556 -264.93502808]
[10.27031708 -279.87118530]
[10.56926060 -294.88830566]
[12.74804115 -309.74954224]
[16.77229500 -324.22048950]
[22.57855606 -338.07296753]
[30.07525063 -351.08843994]
[39.14414215 -363.06167603]
[49.64220428 -373.80383301]
[61.40386963 -383.14547729]
[74.24363708 -390.93930054]
[87.95899963 -397.06237793]
[102.33365631 -401.41812134]
[117.14088440 -403.93786621]
[132.14717102 -404.58181763]
[147.11582947 -403.33990479]
[161.81079102 -400.23162842]
[176.00028992 -395.30606079]
[189.46055603 -388.64083862]
[201.97926331 -380.34115601]
[213.35900879 -370.53784180]
[223.42030334 -359.38555908]
[232.00445557 -347.06015015]
[238.97610474 -333.75604248]
[244.22528076 -319.68304443]
[247.66920471 -305.06311035]
[249.25355530 -290.12680054]
[248.95335388 -275.10971069]
[246.77331543 -260.24865723]
[242.74784851 -245.77804565]
[236.94041443 -231.92608643]
[229.44262695 -218.91122437]
[220.37272644 -206.93875122]
[209.87376404 -196.19747925]
[198.11131287 -186.85681152]
[185.27088928 -179.06407166]
[171.55500793 -172.94215393]
[157.17999268 -168.58761597]
[142.37254333 -166.06913757]
[127.36620331 -165.42642212]
[112.39765167 -166.66963196]
[109.29354095 -151.99432373]
[106.18943024 -137.31901550]
[103.08531952 -122.64372253]
[99.98120880 -107.96841431]
[98.86556244 -93.00996399]
[99.75837708 -78.03656006]
[100.65119171 -63.06315231]
[101.54400635 -48.08974838]
[102.43682098 -33.11634064]
[103.32963562 -18.14293480]
[113.30146027 -12.59955788]
[119.42240906 -2.82972598]
[120.07382202 8.80081940]
[114.97836304 19.40917587]
[105.29760742 26.30986977]
[105.74421692 41.30321884]
[116.72754669 51.29831696]
[117.39405823 66.49734497]
[106.83580780 77.94990540]
[107.28240967 92.94325256]
[110.65113068 100.26611328]
[107.62237549 108.16278839]
[107.84570312 123.16113281]
[108.06903076 138.15946960]
[108.29235840 153.15780640]
[108.51568604 168.15614319]
[117.21031952 177.68327332]
[117.08756256 190.18002319]
[108.75860596 198.95242310]
[108.75860596 213.95242310]
[108.75860596 228.95242310]
[121.04927063 220.35360718]
[135.47770691 224.45486450]
[141.40780640 238.23289490]
[134.46810913 251.53103638]
[119.77431488 254.54641724]
[108.15884399 245.05767822]
[107.04319763 260.01614380]
[105.92754364 274.97457886]
[104.81189728 289.93304443]
[103.69625092 304.89147949]
[102.58060455 319.84994507]
[117.38896942 322.30319214]
[131.91781616 326.07400513]
[146.05015564 331.13198853]
[159.67219543 337.43643188]
[172.67427063 344.93658447]
[184.95169067 353.57205200]
[196.40559387 363.27331543]
[206.94377136 373.96224976]
[216.48135376 385.55276489]
[224.94157410 397.95159912]
[232.25630188 411.05889893]
[238.36663818 424.76910400]
[243.22338867 438.97186279]
[246.78744507 453.55279541]
[249.03012085 468.39453125]
[249.93334961 483.37753296]
[249.48986816 498.38119507]
[247.70324707 513.28466797]
[244.58786011 527.96801758]
[240.16879272 542.31298828]
[234.48162842 556.20410156]
[227.57217407 569.52947998]
[219.49603271 582.18182373]
[210.31825256 594.05932617]
[200.11271667 605.06628418]
[188.96160889 615.11407471]
[176.95468140 624.12188721]
[164.18865967 632.01708984]
[150.76628113 638.73620605]
[136.79563904 644.22503662]
[122.38922882 648.43951416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 179]
[38 178]
[39 177]
[40 176]
[41 175]
[42 174]
[43 168]
[44 167]
[45 166]
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
[52 157]
[53 156]
[56 153]
[57 152]
[60 147]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[84 141]
[85 140]
[86 139]
[87 138]
[88 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
