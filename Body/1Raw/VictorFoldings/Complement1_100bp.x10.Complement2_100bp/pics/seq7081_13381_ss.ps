%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[36.74637604 445.07647705]
[37.50534058 460.10678101]
[35.31715775 474.99630737]
[30.26592636 489.17276001]
[22.54580879 502.09118652]
[12.45354176 513.25506592]
[0.37704727 522.23529053]
[-13.21948719 528.68670654]
[-27.81344604 532.36126709]
[-42.84387970 533.11779785]
[-57.73305511 530.92718506]
[-71.90866852 525.87371826]
[-84.82585907 518.15148926]
[-95.98811340 508.05740356]
[-104.96638489 495.97946167]
[-111.41558075 482.38189697]
[-115.08779907 467.78732300]
[-115.84190369 452.75677490]
[-113.64889526 437.86795044]
[-108.59307861 423.69314575]
[-100.86878204 410.77722168]
[-90.77289581 399.61660767]
[-78.69349670 390.64028931]
[-65.09487915 384.19329834]
[-50.49972534 380.52343750]
[-35.46905136 379.77175903]
[-20.58058548 381.96716309]
[-15.54366970 367.83813477]
[-10.50675392 353.70910645]
[-5.46983767 339.58007812]
[-6.18474579 332.22409058]
[-0.25131959 325.27914429]
[4.99539852 311.22668457]
[2.19861317 296.59698486]
[14.27420044 286.37493896]
[19.52091789 272.32244873]
[24.76763725 258.26998901]
[30.01435471 244.21751404]
[35.26107407 230.16503906]
[40.50778961 216.11256409]
[27.30721283 223.23609924]
[12.42570400 221.35441589]
[1.41370296 211.16934204]
[-1.62158823 196.47964478]
[4.45191956 182.76423645]
[17.36895752 175.13861084]
[32.31179047 176.44694519]
[43.70711136 186.20126343]
[47.30466843 200.76460266]
[54.18407822 187.43518066]
[61.06349182 174.10575867]
[67.94290161 160.77632141]
[74.82231903 147.44689941]
[81.70172882 134.11746216]
[87.05291748 120.10443878]
[90.80921936 105.58238220]
[91.70203400 90.60897827]
[89.69802094 75.74344635]
[87.69400787 60.87791824]
[85.57938385 46.02772141]
[83.13365173 31.22845078]
[80.46785736 16.46723366]
[77.80206299 1.70601666]
[75.13626862 -13.05520058]
[72.47047424 -27.81641769]
[60.25281906 -41.59358978]
[66.82646179 -57.86485672]
[63.94119263 -72.58474731]
[61.05591965 -87.30464172]
[58.17064667 -102.02452850]
[47.92334747 -114.07872009]
[53.06805420 -128.05661011]
[50.18278122 -142.77648926]
[47.29750824 -157.49638367]
[44.41223526 -172.21627808]
[41.52696228 -186.93617249]
[38.64168930 -201.65606689]
[35.75641632 -216.37594604]
[32.87114716 -231.09584045]
[29.98587227 -245.81573486]
[14.96070099 -245.32545471]
[0.05147118 -247.25184631]
[-14.35563183 -251.54504395]
[-27.88743019 -258.09384155]
[-40.19341660 -266.72857666]
[-50.95483398 -277.22564697]
[-59.89294052 -289.31307983]
[-66.77621460 -302.67782593]
[-71.42636871 -316.97372437]
[-73.72294617 -331.83044434]
[-73.60646057 -346.86315918]
[-71.07992554 -361.68249512]
[-66.20879364 -375.90460205]
[-59.11923981 -389.16107178]
[-49.99488831 -401.10855103]
[-39.07209396 -411.43759155]
[-26.63377380 -419.88058472]
[-13.00211716 -426.21890259]
[1.46978664 -430.28833008]
[16.40707970 -431.98345947]
[31.42284966 -431.26037598]
[46.12815094 -428.13784790]
[60.14208221 -422.69671631]
[73.10165405 -415.07794189]
[84.67117310 -405.47885132]
[94.55096436 -394.14810181]
[102.48511505 -381.37918091]
[108.26811981 -367.50283813]
[111.75018311 -352.87847900]
[112.84110260 -337.88494873]
[111.51262665 -322.91061401]
[107.79917145 -308.34329224]
[101.79691315 -294.56036377]
[93.66132355 -281.91882324]
[83.60314941 -270.74612427]
[71.88291168 -261.33166504]
[58.80419159 -253.91929626]
[44.70576477 -248.70100403]
[47.59103775 -233.98110962]
[50.47631073 -219.26123047]
[53.36158371 -204.54133606]
[56.24685287 -189.82144165]
[59.13212585 -175.10154724]
[62.01739883 -160.38165283]
[64.90267181 -145.66177368]
[67.78794861 -130.94187927]
[77.82887268 -119.94055176]
[72.89054108 -104.90980530]
[75.77581024 -90.18991089]
[78.66108704 -75.47002411]
[81.54635620 -60.75012970]
[91.40716553 -53.74362946]
[93.93140411 -41.50385666]
[87.23168945 -30.48221397]
[89.89748383 -15.72099590]
[92.56327820 -0.95977885]
[95.22907257 13.80143833]
[97.89487457 28.56265640]
[101.23792267 31.97337914]
[102.47387695 37.52040100]
[100.41342163 43.80260468]
[104.51437378 49.95110321]
[102.55953217 58.87390518]
[104.56354523 73.73943329]
[106.56755829 88.60496521]
[111.33959961 74.38428497]
[119.11720276 61.55818176]
[129.52087402 50.75246811]
[142.04301453 42.49437714]
[156.07263184 37.18684006]
[170.92518616 35.08882141]
[185.87599182 36.30269241]
[200.19555664 40.76922226]
[213.18521118 48.27047729]
[224.21116638 58.44046021]
[232.73541260 70.78295135]
[238.34205627 84.69573212]
[240.75753784 99.49996948]
[239.86399841 114.47332764]
[235.70501709 128.88523865]
[228.48355103 142.03248596]
[218.55192566 153.27362061]
[206.39474487 162.06011963]
[192.60516357 167.96331787]
[177.85603333 170.69514465]
[162.86697388 170.12232971]
[148.36933899 166.27282715]
[135.07051086 159.33444214]
[123.61936188 149.64573669]
[114.57461548 137.67942810]
[108.37759399 124.01937103]
[105.33127594 109.33868408]
[101.57497406 123.86074066]
[112.02554321 113.10036469]
[125.62693024 106.77563477]
[140.58964539 105.71867371]
[154.94508362 110.06855011]
[166.80453491 119.25295258]
[174.60769653 132.06352234]
[177.32792664 146.81480408]
[174.60731506 161.56602478]
[166.80383301 174.37638855]
[154.94413757 183.56048584]
[140.58857727 187.90998840]
[125.62589264 186.85263062]
[112.02466583 180.52755737]
[101.57437897 169.76690674]
[95.64994812 155.98645020]
[95.03115845 140.99687195]
[88.15174866 154.32630920]
[81.27233124 167.65573120]
[74.39292145 180.98516846]
[67.51351166 194.31459045]
[60.63409805 207.64402771]
[54.56026077 221.35928345]
[49.31354523 235.41175842]
[44.06682587 249.46423340]
[38.82010651 263.51669312]
[33.57339096 277.56918335]
[28.32667160 291.62164307]
[30.74817657 307.25643921]
[19.04787064 316.47338867]
[13.80115128 330.52584839]
[8.65919209 344.61700439]
[3.62227583 358.74603271]
[-1.41464043 372.87506104]
[-6.45155668 387.00408936]
[6.46812916 394.72210693]
[17.63364983 404.81256104]
[26.61583328 416.88760376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 207]
[28 206]
[29 205]
[30 204]
[32 203]
[33 202]
[35 200]
[36 199]
[37 198]
[38 197]
[39 196]
[40 195]
[49 194]
[50 193]
[51 192]
[52 191]
[53 190]
[54 189]
[55 173]
[56 172]
[57 145]
[58 144]
[59 143]
[60 141]
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[67 131]
[68 130]
[69 129]
[70 128]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
[80 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
