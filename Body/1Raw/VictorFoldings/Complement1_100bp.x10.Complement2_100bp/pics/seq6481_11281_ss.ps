%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[134.84170532 752.11212158]
[122.89333344 743.01519775]
[112.08186340 732.59271240]
[102.55350494 720.98553467]
[94.43711853 708.35064697]
[87.84246826 694.85888672]
[82.85874176 680.69274902]
[79.55332947 666.04382324]
[77.97094727 651.11022949]
[78.13298035 636.09387207]
[80.03725433 621.19793701]
[83.65799713 606.62371826]
[88.94625092 592.56848145]
[95.83050537 579.22216797]
[104.21765137 566.76531982]
[113.99426270 555.36645508]
[125.02811432 545.17968750]
[137.16999817 536.34277344]
[150.25570679 528.97521973]
[164.10827637 523.17669678]
[178.54034424 519.02557373]
[176.09461975 504.22628784]
[173.64889526 489.42703247]
[171.20317078 474.62774658]
[168.75744629 459.82849121]
[159.04852295 448.53308105]
[164.43217468 433.65603638]
[161.54690552 418.93612671]
[158.22463989 404.30868530]
[154.90238953 389.68121338]
[151.58012390 375.05377197]
[148.25787354 360.42630005]
[144.93560791 345.79882812]
[141.61334229 331.17138672]
[138.29109192 316.54391479]
[134.96882629 301.91647339]
[131.64657593 287.28900146]
[127.09967804 281.46255493]
[128.38545227 272.41906738]
[125.28134155 257.74377441]
[122.17723083 243.06846619]
[107.25914001 241.96038818]
[93.24358368 236.68826294]
[81.26942444 227.67131042]
[72.31222534 215.63348389]
[67.10475159 201.54525757]
[66.07704926 186.54539490]
[69.32093811 171.84895325]
[76.58187103 158.64880371]
[87.27888489 148.01882935]
[100.55110168 140.82659912]
[97.44699097 126.15129852]
[94.34288788 111.47599792]
[90.58411407 125.99741364]
[83.37687683 139.15248108]
[73.16190338 150.13674927]
[60.56383514 158.27854919]
[46.35305405 163.07997131]
[31.39855576 164.24743652]
[16.61481094 161.70954895]
[2.90585327 155.62147522]
[-8.89001083 146.35554504]
[-18.05145836 134.47834778]
[-24.01826477 120.71617889]
[-26.42555618 105.91060638]
[-25.12612724 90.96699524]
[-20.19943619 76.79915619]
[-11.94675541 64.27345276]
[-0.87273717 54.15583801]
[12.34543800 47.06501007]
[26.89947319 43.43457413]
[41.89938354 43.48653030]
[56.42791748 47.21770477]
[69.59664917 54.39993668]
[80.60031128 64.59402466]
[88.76602173 77.17660522]
[93.59444427 91.37825775]
[95.59846497 76.51273346]
[97.60247803 61.64720535]
[99.60649109 46.78167725]
[101.61050415 31.91614914]
[95.78627777 17.20598221]
[105.15459442 5.62651730]
[107.15860748 -9.23901081]
[105.00485229 -15.48984146]
[106.15808105 -21.05464935]
[109.44998169 -24.51476860]
[104.06631470 -39.39182281]
[113.77523804 -50.68722534]
[116.22097015 -65.48649597]
[107.28744507 -78.24697876]
[109.97858429 -93.22070312]
[122.19880676 -101.65881348]
[124.64453125 -116.45808411]
[127.09026337 -131.25735474]
[129.42575073 -146.07441711]
[131.65086365 -160.90846252]
[133.87597656 -175.74250793]
[119.93269348 -181.47383118]
[107.76657867 -190.37603760]
[98.08496857 -201.93154907]
[91.45073700 -215.46855164]
[88.24958038 -230.20001221]
[88.66761780 -245.26947021]
[92.68054962 -259.80081177]
[100.05506134 -272.94918823]
[110.36240387 -283.95019531]
[123.00333405 -292.16424561]
[137.24291992 -297.11373901]
[152.25329590 -298.51098633]
[167.16175842 -296.27468872]
[181.10157776 -290.53491211]
[193.26228333 -281.62533569]
[202.93688965 -270.06396484]
[209.56291199 -256.52294922]
[212.75514221 -241.78953552]
[212.32795715 -226.72033691]
[208.30622864 -212.19143677]
[200.92375183 -199.04751587]
[190.60972595 -188.05276489]
[177.96382141 -179.84640503]
[163.72123718 -174.90551758]
[148.71002197 -173.51739502]
[146.48490906 -158.68334961]
[144.25979614 -143.84930420]
[146.37628174 -136.76818848]
[141.88952637 -128.81163025]
[139.44380188 -114.01235962]
[136.99807739 -99.21308899]
[145.85372925 -87.29197693]
[143.58424377 -72.24856567]
[131.02023315 -63.04076767]
[128.57450867 -48.24149704]
[134.13310242 -34.42298508]
[124.24925232 -22.06904030]
[122.02413177 -7.23499727]
[120.02011871 7.63053083]
[125.98768616 21.27741623]
[116.47602844 33.92016220]
[114.47201538 48.78569031]
[112.46800232 63.65121841]
[110.46398926 78.51674652]
[108.45997620 93.38227844]
[109.01818848 108.37188721]
[112.12229919 123.04718781]
[115.22640991 137.72248840]
[130.27416992 138.92449951]
[144.35931396 144.31256104]
[156.34338379 153.44201660]
[165.26034546 165.56620789]
[170.39445496 179.69747925]
[171.33763123 194.68769836]
[168.02198792 209.32147217]
[160.72456360 222.41471863]
[150.04423523 232.91052246]
[136.85253906 239.96435547]
[139.95664978 254.63964844]
[143.06076050 269.31494141]
[146.27403259 283.96673584]
[149.59628296 298.59420776]
[152.91854858 313.22164917]
[156.24081421 327.84912109]
[159.56306458 342.47659302]
[162.88533020 357.10403442]
[166.20758057 371.73150635]
[169.52984619 386.35894775]
[172.85211182 400.98641968]
[176.17436218 415.61389160]
[179.23594666 418.69296265]
[180.98277283 422.23034668]
[181.43223572 425.75643921]
[180.75239563 428.85556030]
[179.23144531 431.21029663]
[189.11531067 443.56423950]
[183.55671692 457.38275146]
[186.00244141 472.18203735]
[188.44816589 486.98129272]
[190.89389038 501.78057861]
[193.33961487 516.57983398]
[208.33988953 515.86694336]
[223.32150269 516.90039062]
[238.08183289 519.66607666]
[252.42126465 524.12670898]
[266.14590454 530.22186279]
[279.07006836 537.86926270]
[291.01904297 546.96533203]
[301.83120728 557.38708496]
[311.36035156 568.99365234]
[319.47756958 581.62799072]
[326.07312012 595.11932373]
[331.05780029 609.28509521]
[334.36419678 623.93377686]
[335.94757080 638.86730957]
[335.78652954 653.88366699]
[333.88327026 668.77972412]
[330.26348877 683.35418701]
[324.97616577 697.40979004]
[318.09280396 710.75659180]
[309.70648193 723.21392822]
[299.93063354 734.61346436]
[288.89746094 744.80096436]
[276.75616455 753.63873291]
[263.67095947 761.00714111]
[249.81878662 766.80657959]
[235.38697815 770.95867920]
[220.57073975 773.40722656]
[205.57040405 774.11907959]
[190.58886719 773.08465576]
[175.82872009 770.31799316]
[161.48959351 765.85638428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 179]
[22 178]
[23 177]
[24 176]
[25 175]
[27 173]
[28 168]
[29 167]
[30 166]
[31 165]
[32 164]
[33 163]
[34 162]
[35 161]
[36 160]
[37 159]
[39 158]
[40 157]
[41 156]
[51 146]
[52 145]
[53 144]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[83 137]
[84 136]
[87 135]
[89 133]
[90 132]
[93 129]
[94 128]
[95 127]
[96 125]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
