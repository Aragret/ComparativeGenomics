%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[76.14633942 557.93609619]
[67.45219421 570.22015381]
[56.52840042 580.57183838]
[43.79483032 588.59320068]
[29.74092865 593.97595215]
[14.90689564 596.51318359]
[-0.13709250 596.10742188]
[-14.81278419 592.77423096]
[-28.55608368 586.64166260]
[-40.83873749 577.94555664]
[-51.18862915 567.02008057]
[-59.20794296 554.28521729]
[-64.58843231 540.23046875]
[-67.12328339 525.39599609]
[-66.71507263 510.35208130]
[-63.37948608 495.67694092]
[-57.24473190 481.93463135]
[-48.54661179 469.65338135]
[-37.61946487 459.30523682]
[-24.88330078 451.28799438]
[-10.82765961 445.90979004]
[4.00719500 443.37731934]
[19.05105019 443.78796387]
[22.37331009 429.16052246]
[25.69556999 414.53305054]
[19.51641655 404.13378906]
[22.16453362 391.92022705]
[32.75333405 384.55545044]
[36.29300690 369.97906494]
[39.83267975 355.40267944]
[43.37234879 340.82632446]
[46.91202164 326.24993896]
[38.96754456 313.70318604]
[42.34962845 298.87023926]
[55.56367493 290.62240601]
[58.66778564 275.94711304]
[61.33358002 261.18588257]
[63.99937820 246.42468262]
[66.66517639 231.66346741]
[64.76044464 224.52246094]
[69.48210907 216.70301819]
[72.36737823 201.98312378]
[75.25265503 187.26324463]
[66.75585938 175.08374023]
[69.47224426 160.11457825]
[82.30482483 151.28494263]
[85.19010162 136.56504822]
[80.04539490 122.58716583]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[95.21074677 71.58341217]
[92.76501465 56.78414154]
[90.20918274 42.00349045]
[87.54338837 27.24227142]
[84.87759399 12.48105526]
[74.81089783 0.27563626]
[80.16314697 -13.62410259]
[64.19867706 -23.82459259]
[60.81777954 -42.14077377]
[71.70867920 -56.85484695]
[68.60456848 -71.53015137]
[65.50045776 -86.20545197]
[62.39635086 -100.88075256]
[59.29224014 -115.55606079]
[56.18812943 -130.23135376]
[53.08401871 -144.90666199]
[49.97991180 -159.58197021]
[45.90024185 -174.01651001]
[40.86332703 -188.14555359]
[35.82641220 -202.27458191]
[21.82600594 -209.10293579]
[16.91913033 -223.50352478]
[23.51519966 -236.80870056]
[18.47828484 -250.93772888]
[13.44136810 -265.06674194]
[8.40445232 -279.19577026]
[-6.43704844 -276.75250244]
[-21.47630119 -276.99874878]
[-36.22985840 -279.92660522]
[-50.22345352 -285.44195557]
[-63.00724792 -293.36749268]
[-74.17029572 -303.44848633]
[-83.35375977 -315.36080933]
[-90.26241302 -328.72158813]
[-94.67418671 -343.10128784]
[-96.44725800 -358.03768921]
[-95.52462006 -373.05062866]
[-91.93593597 -387.65753174]
[-85.79657745 -401.38879395]
[-77.30388641 -413.80307007]
[-66.73087311 -424.50125122]
[-54.41741562 -433.13946533]
[-40.75934219 -439.44000244]
[-26.19570160 -443.20034790]
[-11.19465446 -444.29959106]
[3.76157689 -442.70242310]
[18.19221115 -438.46020508]
[31.63336563 -431.70925903]
[43.65295792 -422.66662598]
[53.86461258 -411.62298584]
[61.94006729 -398.93334961]
[67.61972046 -385.00564575]
[70.72100830 -370.28756714]
[71.14423370 -355.25225830]
[68.87578583 -340.38302612]
[63.98858643 -326.15786743]
[56.63973999 -313.03405762]
[47.06548691 -301.43347168]
[35.57359314 -291.72903442]
[22.53348160 -284.23269653]
[27.57039833 -270.10366821]
[32.60731506 -255.97463989]
[37.64422989 -241.84561157]
[51.16954041 -235.71359253]
[56.47896194 -221.45651245]
[49.95544052 -207.31149292]
[54.99235535 -193.18246460]
[60.02927399 -179.05343628]
[64.85705566 -193.25527954]
[76.52998352 -202.67562866]
[91.43106079 -204.39546204]
[104.94303131 -197.88189697]
[112.87906647 -185.15321350]
[112.78009796 -170.15353394]
[104.67678833 -157.53068542]
[91.08003998 -151.19598389]
[76.20295715 -153.11230469]
[64.65521240 -162.68608093]
[67.75932312 -148.01077271]
[70.86343384 -133.33546448]
[73.96754456 -118.66016388]
[77.07165527 -103.98486328]
[80.17576599 -89.30956268]
[83.27987671 -74.63426208]
[86.38397980 -59.95895767]
[97.06778717 -55.95614243]
[104.57028961 -47.20238876]
[106.93978119 -35.79715347]
[103.47435760 -24.55029869]
[94.92436218 -16.28989792]
[104.80037689 -5.14030075]
[99.63880920 9.81525993]
[102.30460358 24.57647705]
[104.97039795 39.33769226]
[109.25259399 45.36136627]
[107.56428528 54.33841705]
[110.01001740 69.13768768]
[114.38479614 54.78982162]
[122.02377319 41.88067245]
[132.49491882 31.14031792]
[145.20602417 23.17617607]
[159.43824768 18.43865776]
[174.38665771 17.19569206]
[189.20585632 19.51757622]
[203.05775452 25.27299500]
[215.15896606 34.13645172]
[224.82508850 45.60667419]
[231.50947571 59.03496552]
[234.83407593 73.66189575]
[234.61087036 88.66023254]
[230.85249329 103.18175507]
[223.77148438 116.40519714]
[213.76832581 127.58271027]
[201.40873718 136.08215332]
[187.39170837 141.42283630]
[172.50997925 143.30271912]
[157.60516357 141.61547852]
[143.52023315 136.45655823]
[131.05172729 128.11770630]
[120.90482330 117.07051849]
[113.65336609 103.93978119]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[109.95091248 128.44900513]
[99.90998840 139.45031738]
[97.02471924 154.17021179]
[105.57435608 167.19102478]
[102.43858337 182.07798767]
[89.97254944 190.14851379]
[87.08727264 204.86840820]
[84.20200348 219.58830261]
[81.42639160 234.32925415]
[78.76059723 249.09046936]
[76.09479523 263.85168457]
[73.42900085 278.61291504]
[75.04177094 282.64440918]
[75.26528931 286.58325195]
[74.29927826 290.00411987]
[72.46107483 292.59014893]
[70.14005280 294.16207886]
[78.09974670 307.55166626]
[74.30237579 322.28375244]
[61.48839951 329.78961182]
[57.94872665 344.36599731]
[54.40905380 358.94235229]
[50.86938095 373.51873779]
[47.32970810 388.09512329]
[52.92224884 405.63949585]
[40.32302856 417.85531616]
[37.00077057 432.48278809]
[33.67851257 447.11022949]
[47.42379379 453.23831177]
[59.70926285 461.93048096]
[70.06269073 472.85260010]
[78.08612823 485.58486938]
[83.47116852 499.63787842]
[86.01082611 514.47149658]
[85.60748291 529.51556396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 203]
[24 202]
[25 201]
[28 199]
[29 198]
[30 197]
[31 196]
[32 195]
[35 192]
[36 187]
[37 186]
[38 185]
[39 184]
[41 183]
[42 182]
[43 181]
[46 178]
[47 177]
[49 175]
[51 173]
[52 148]
[53 147]
[54 145]
[55 144]
[56 143]
[58 141]
[61 136]
[62 135]
[63 134]
[64 133]
[65 132]
[66 131]
[67 130]
[68 129]
[69 119]
[70 118]
[71 117]
[74 114]
[75 113]
[76 112]
[77 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
