%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[166.35836792 321.98394775]
[176.91838074 311.28179932]
[189.09597778 302.46386719]
[182.41578674 289.03347778]
[175.73558044 275.60311890]
[169.05538940 262.17272949]
[157.69123840 258.02755737]
[152.01593018 246.89317322]
[155.55787659 234.49084473]
[149.07838440 220.96250916]
[142.59889221 207.43415833]
[136.11938477 193.90580750]
[129.63989258 180.37747192]
[123.16040039 166.84912109]
[116.68090057 153.32077026]
[110.20140839 139.79243469]
[103.72190857 126.26408386]
[97.24241638 112.73574066]
[97.06598663 127.73470306]
[93.48146057 142.30010986]
[86.67687988 155.66789246]
[77.00920868 167.13681030]
[64.98557281 176.10522461]
[51.23672867 182.10266113]
[36.48390198 184.81451416]
[21.50100136 184.09851074]
[7.07399654 179.99223328]
[-6.04029942 172.71107483]
[-17.15393639 162.63699341]
[-25.68391609 150.29846191]
[-31.18277359 136.34272766]
[-33.36204529 121.50187683]
[-32.10741806 106.55444336]
[-27.48470116 92.28452301]
[-19.73639488 79.44070435]
[-9.26896191 68.69673920]
[3.36850023 60.61623383]
[17.51305389 55.62307739]
[32.42270279 53.97920227]
[47.31531906 55.77083969]
[61.40966797 60.90400696]
[73.96637726 69.10942841]
[84.32676697 79.95665741]
[91.94800568 92.87819672]
[90.83235168 77.91974640]
[89.71670532 62.96129227]
[80.97442627 49.77481842]
[87.74368286 36.50732422]
[72.74203491 36.77509308]
[57.74926376 36.19371414]
[42.81339645 34.76504898]
[27.98227882 32.49367142]
[13.30341911 29.38685608]
[-1.17616153 25.45456123]
[-15.41007996 20.70937729]
[-29.35274124 15.16650772]
[-42.95948410 8.84370708]
[-56.18671799 1.76122963]
[-68.99207306 -6.05823708]
[-81.33453369 -14.58964539]
[-93.17455292 -23.80566597]
[-104.47422028 -33.67677689]
[-115.19731903 -44.17136002]
[-125.30951691 -55.25579453]
[-134.77841187 -66.89457703]
[-143.57368469 -79.05041504]
[-151.66712952 -91.68438721]
[-159.03286743 -104.75600433]
[-165.64726257 -118.22341156]
[-171.48915100 -132.04345703]
[-176.53979492 -146.17187500]
[-180.78305054 -160.56340027]
[-184.20529175 -175.17193604]
[-186.79559326 -189.95068359]
[-188.54560852 -204.85232544]
[-189.44978333 -219.82908630]
[-189.50517273 -234.83302307]
[-188.71163940 -249.81607056]
[-187.07170105 -264.73022461]
[-184.59062195 -279.52770996]
[-181.27635193 -294.16110229]
[-177.13948059 -308.58358765]
[-172.19329834 -322.74890137]
[-166.45362854 -336.61172485]
[-159.93887329 -350.12759399]
[-152.66987610 -363.25326538]
[-144.66993713 -375.94665527]
[-135.96467590 -388.16711426]
[-126.58198547 -399.87548828]
[-116.55191803 -411.03430176]
[-105.90660858 -421.60778809]
[-94.68015289 -431.56207275]
[-82.90850830 -440.86526489]
[-70.62938690 -449.48760986]
[-57.88212204 -457.40142822]
[-44.70755005 -464.58139038]
[-31.14787292 -471.00448608]
[-17.24652481 -476.65017700]
[-3.04803586 -481.50033569]
[11.40211105 -485.53945923]
[26.05762672 -488.75457764]
[40.87156677 -491.13540649]
[55.79647827 -492.67434692]
[70.78454590 -493.36642456]
[85.78776550 -493.20944214]
[100.75807190 -492.20388794]
[115.64751434 -490.35302734]
[130.40838623 -487.66275024]
[144.99342346 -484.14166260]
[159.35589600 -479.80108643]
[173.44979858 -474.65487671]
[187.22996521 -468.71957397]
[200.65228271 -462.01412964]
[213.67373657 -454.56008911]
[226.25260925 -446.38125610]
[238.34863281 -437.50390625]
[249.92303467 -427.95642090]
[260.93875122 -417.76940918]
[271.36050415 -406.97549438]
[281.15487671 -395.60928345]
[290.29052734 -383.70712280]
[298.73818970 -371.30718994]
[306.47076416 -358.44918823]
[313.46353149 -345.17431641]
[319.69406128 -331.52505493]
[325.14239502 -317.54519653]
[329.79110718 -303.27947998]
[333.62527466 -288.77362061]
[336.63265991 -274.07403564]
[338.80355835 -259.22790527]
[340.13107300 -244.28269958]
[340.61093140 -229.28633118]
[340.24160767 -214.28683472]
[339.02426147 -199.33226013]
[336.96282959 -184.47052002]
[334.06387329 -169.74919128]
[330.33670044 -155.21545410]
[325.79324341 -140.91586304]
[320.44805908 -126.89623260]
[314.31829834 -113.20144653]
[307.42355347 -99.87539673]
[299.78591919 -86.96075439]
[291.42990112 -74.49890137]
[282.38220215 -62.52975082]
[272.67184448 -51.09164429]
[262.32992554 -40.22122574]
[251.38958740 -29.95331192]
[239.88584900 -20.32079697]
[227.85559082 -11.35453606]
[215.33731079 -3.08324957]
[202.37115479 4.46656561]
[188.99861145 11.27072525]
[175.26255798 17.30743217]
[161.20697021 22.55735207]
[146.87687683 27.00366592]
[132.31819153 30.63212967]
[117.57753754 33.43112183]
[102.70214081 35.39167404]
[111.36461639 47.50822067]
[104.67515564 61.84564209]
[105.79080963 76.80410004]
[106.90645599 91.76255035]
[110.77075958 106.25624084]
[117.25025940 119.78459167]
[123.72975159 133.31294250]
[130.20924377 146.84127808]
[136.68875122 160.36962891]
[143.16824341 173.89796448]
[149.64773560 187.42631531]
[156.12722778 200.95466614]
[162.60673523 214.48300171]
[169.08622742 228.01135254]
[184.51600647 238.06138611]
[182.48576355 255.49253845]
[189.16596985 268.92291260]
[195.84616089 282.35330200]
[202.52635193 295.78366089]
[216.90571594 291.39233398]
[231.81176758 289.42779541]
[246.83786011 289.94366455]
[261.57409668 292.92584229]
[275.61843872 298.29299927]
[288.58773804 305.89871216]
[300.12820435 315.53549194]
[309.92498779 326.94046021]
[317.71084595 339.80242920]
[323.27334595 353.77053833]
[326.46078491 368.46374512]
[327.18615723 383.48120117]
[325.42968750 398.41320801]
[321.23931885 412.85238647]
[314.72933960 426.40487671]
[306.07733154 438.70095825]
[295.51937866 449.40512085]
[283.34350586 458.22540283]
[269.88180542 464.92117310]
[255.50161743 469.30975342]
[240.59518433 471.27142334]
[225.56918335 470.75265503]
[210.83352661 467.76760864]
[196.79022217 462.39773560]
[183.82238770 454.78952026]
[172.28376770 445.15054321]
[162.48918152 433.74371338]
[154.70581055 420.88021851]
[149.14598083 406.91104126]
[145.96139526 392.21722412]
[145.23892212 377.19964600]
[146.99826050 362.26797485]
[151.19142151 347.82955933]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[6 174]
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[14 167]
[15 166]
[16 165]
[17 164]
[18 163]
[44 162]
[45 161]
[46 160]
[48 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
