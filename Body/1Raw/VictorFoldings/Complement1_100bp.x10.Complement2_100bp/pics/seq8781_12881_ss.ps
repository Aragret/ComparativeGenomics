%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[-46.30247879 290.52984619]
[-40.54833984 304.40316772]
[-36.54273224 318.87847900]
[-34.34637833 333.73632812]
[-33.99257278 348.75146484]
[-35.48667908 363.69628906]
[-38.80604935 378.34420776]
[-43.90036392 392.47317505]
[-50.69239044 405.86898804]
[-59.07916260 418.32858276]
[-68.93354034 429.66308594]
[-80.10614014 439.70065308]
[-92.42758179 448.28909302]
[-105.71107483 455.29827881]
[-119.75524902 460.62188721]
[-134.34719849 464.17922974]
[-149.26570129 465.91638184]
[-164.28460693 465.80703735]
[-179.17623901 463.85281372]
[-193.71482849 460.08334351]
[-207.67999268 454.55578613]
[-220.86001587 447.35391235]
[-233.05506897 438.58694458]
[-244.08032227 428.38772583]
[-253.76860046 416.91091919]
[-261.97305298 404.33053589]
[-268.56927490 390.83721924]
[-273.45727539 376.63555908]
[-276.56298828 361.94085693]
[-277.83932495 346.97589111]
[-277.26687622 331.96749878]
[-274.85440063 317.14318848]
[-270.63842773 302.72775269]
[-264.68286133 288.93966675]
[-257.07800293 275.98800659]
[-247.93916321 264.06906128]
[-237.40484619 253.36357117]
[-225.63476562 244.03379822]
[-212.80734253 236.22117615]
[-199.11705017 230.04415894]
[-184.77143860 225.59637451]
[-169.98796082 222.94525146]
[-154.99073792 222.13099670]
[-140.00712585 223.16593933]
[-125.26428223 226.03439331]
[-110.98568726 230.69287109]
[-97.38781738 237.07077026]
[-84.67679596 245.07136536]
[-75.18789673 233.45410156]
[-65.69900513 221.83683777]
[-56.21010208 210.21957397]
[-46.72120285 198.60231018]
[-37.23230743 186.98504639]
[-51.04802704 192.82678223]
[-65.98722839 194.17591858]
[-80.62600708 190.90388489]
[-93.56908417 183.32254028]
[-103.58280182 172.15447998]
[-109.71272278 158.46420288]
[-111.37458801 143.55653381]
[-108.40998077 128.85241699]
[-101.10148621 115.75334167]
[-90.14569855 105.50782013]
[-76.58685303 99.09239960]
[-61.71728516 97.11855316]
[-46.95427704 99.77441406]
[-33.70494461 106.80684662]
[-23.23212242 117.54556274]
[-16.53401947 130.96702576]
[-14.24905300 145.79196167]
[-16.59501266 160.60737610]
[-23.34895706 174.00207520]
[-11.12247276 165.31224060]
[1.10401344 156.62242126]
[13.33049870 147.93260193]
[25.55698395 139.24276733]
[37.78347015 130.55294800]
[38.38325882 127.81462860]
[40.10387421 125.14890289]
[42.92309570 122.98386383]
[46.66429138 121.73166656]
[51.00640488 121.73545837]
[63.72843933 113.78877258]
[76.45047760 105.84208679]
[89.17251587 97.89540100]
[75.36821747 92.02671051]
[71.20275879 77.61668396]
[79.74675751 65.28784943]
[94.70189667 64.12857056]
[105.04380035 74.99342346]
[103.14969635 89.87184906]
[116.42754364 82.89339447]
[129.70538330 75.91494751]
[142.98323059 68.93649292]
[156.26107788 61.95804214]
[169.32527161 54.58735275]
[177.13633728 40.82880020]
[192.03088379 40.87020111]
[204.86982727 33.11381149]
[198.10313416 19.71868896]
[192.36889648 5.85017109]
[187.69993591 -8.41230392]
[184.12300110 -22.98704147]
[181.65858459 -37.79055786]
[180.32081604 -52.73805618]
[180.11734009 -67.74391937]
[181.04933167 -82.72219849]
[183.11145020 -97.58708954]
[186.29187012 -112.25345612]
[190.57240295 -126.63728333]
[195.92849731 -140.65618896]
[202.32949829 -154.22985840]
[209.73873901 -167.28054810]
[218.11376953 -179.73352051]
[227.40661621 -191.51741028]
[237.56405640 -202.56475830]
[248.52790833 -212.81225586]
[260.23538208 -222.20123291]
[272.61938477 -230.67788696]
[285.60900879 -238.19366455]
[299.12985229 -244.70552063]
[313.10446167 -250.17616272]
[327.45275879 -254.57424927]
[342.09262085 -257.87460327]
[356.94012451 -260.05828857]
[371.91027832 -261.11279297]
[386.91732788 -261.03213501]
[401.87524414 -259.81671143]
[416.69845581 -257.47354126]
[431.30197144 -254.01599121]
[445.60217285 -249.46389771]
[459.51715088 -243.84333801]
[472.96719360 -237.18647766]
[485.87527466 -229.53147888]
[498.16741943 -220.92218018]
[509.77328491 -211.40788269]
[520.62634277 -201.04310608]
[530.66442871 -189.88719177]
[539.83001709 -178.00405884]
[548.07067871 -165.46177673]
[555.33917236 -152.33218384]
[561.59387207 -138.69047546]
[566.79895020 -124.61480713]
[570.92462158 -110.18579102]
[573.94714355 -95.48607635]
[575.84936523 -80.59987640]
[576.62023926 -65.61244202]
[576.25543213 -50.60963440]
[574.75708008 -35.67737961]
[572.13360596 -20.90121460]
[568.40020752 -6.36577559]
[563.57818604 7.84567881]
[557.69519043 21.65174484]
[550.78485107 34.97334290]
[542.88684082 47.73416901]
[534.04632568 59.86112595]
[524.31402588 71.28475189]
[513.74560547 81.93961334]
[502.40164185 91.76467896]
[490.34710693 100.70367432]
[477.65106201 108.70538330]
[464.38619995 115.72399139]
[450.62850952 121.71929169]
[436.45681763 126.65692902]
[421.95227051 130.50863647]
[407.19796753 133.25234985]
[392.27841187 134.87234497]
[377.27908325 135.35934448]
[362.28585815 134.71055603]
[347.38464355 132.92971802]
[332.66079712 130.02700806]
[318.19866943 126.01905060]
[304.08105469 120.92881775]
[290.38885498 114.78545380]
[277.20046997 107.62416077]
[264.59146118 99.48594666]
[252.63406372 90.41743469]
[241.39675903 80.47057343]
[230.94389343 69.70232391]
[221.33537292 58.17436981]
[212.62622070 45.95275116]
[199.78727722 53.70914078]
[192.89453125 66.91290283]
[177.08166504 67.42629242]
[176.27986145 70.11241913]
[174.36575317 72.64278412]
[171.39331055 74.59214783]
[167.56933594 75.56261444]
[163.23953247 75.23588562]
[149.96168518 82.21434021]
[136.68383789 89.19279480]
[123.40599823 96.17124176]
[110.12815094 103.14969635]
[97.11919403 110.61743927]
[84.39716339 118.56412506]
[71.67512512 126.51080322]
[58.95308685 134.45748901]
[46.47329330 142.77943420]
[34.24681091 151.46925354]
[22.02032280 160.15908813]
[9.79383755 168.84890747]
[-2.43264794 177.53872681]
[-14.65913391 186.22856140]
[-25.61504364 196.47395325]
[-35.10394287 208.09121704]
[-44.59283829 219.70848083]
[-54.08173752 231.32574463]
[-63.57063675 242.94300842]
[-73.05953217 254.56027222]
[-62.68223190 265.41802979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 209]
[49 208]
[50 207]
[51 206]
[52 205]
[53 204]
[72 203]
[73 202]
[74 201]
[75 200]
[76 199]
[77 198]
[82 197]
[83 196]
[84 195]
[85 194]
[91 193]
[92 192]
[93 191]
[94 190]
[95 189]
[96 184]
[98 182]
[99 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
