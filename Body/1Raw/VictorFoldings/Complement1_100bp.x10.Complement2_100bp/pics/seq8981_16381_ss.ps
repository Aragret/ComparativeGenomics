%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[101.93830109 457.85949707]
[101.93746185 442.81301880]
[104.78446198 428.03836060]
[110.37639618 414.06958008]
[118.51110840 401.41165161]
[128.89454651 390.52215576]
[141.15133667 381.79476929]
[154.83840942 375.54492188]
[151.29873657 360.96856689]
[147.75906372 346.39218140]
[144.21939087 331.81579590]
[139.58625793 326.05770874]
[140.73724365 316.99606323]
[137.41499329 302.36862183]
[124.81577301 290.15277100]
[130.40830994 272.60839844]
[126.86863708 258.03204346]
[122.23550415 252.27392578]
[123.38648987 243.21229553]
[113.02246857 232.51480103]
[117.51109314 217.34368896]
[105.75460815 212.06973267]
[99.08273315 200.81948853]
[100.12398529 187.58595276]
[108.72160339 177.21795654]
[105.61749268 162.54264832]
[102.51338196 147.86734009]
[92.30978394 137.01673889]
[97.02378082 121.91413116]
[93.91967010 107.23882294]
[90.28524780 103.45663452]
[89.02863312 97.90737915]
[90.94847870 92.08061981]
[88.28268433 77.31940460]
[73.63302612 73.17829132]
[62.28035736 63.12821960]
[56.44091415 49.20266342]
[57.22351837 34.18439102]
[64.41945648 21.04940414]
[76.55448151 12.37722206]
[73.88868713 -2.38399529]
[71.22289276 -17.14521217]
[68.55709076 -31.90642929]
[65.89129639 -46.66764832]
[63.22550201 -61.42886353]
[47.54285812 -63.49654007]
[33.28428650 -70.30091095]
[21.84038925 -81.16506195]
[14.32313347 -95.01679230]
[11.45782185 -110.49443817]
[13.51313210 -126.08070374]
[20.27596092 -140.25143433]
[31.07345963 -151.62463379]
[44.83995056 -159.09523010]
[41.95467758 -173.81512451]
[39.06940842 -188.53501892]
[24.02585030 -189.59643555]
[9.78074360 -194.51196289]
[-2.69683027 -202.94084167]
[-12.55967999 -214.30354309]
[-19.14002228 -227.82154846]
[-21.99470139 -242.57078552]
[-20.93501663 -257.54467773]
[-16.03919601 -271.72296143]
[-7.64664841 -284.14105225]
[3.66555929 -293.95590210]
[17.12237549 -300.50292969]
[14.23710346 -315.22280884]
[11.35183048 -329.94268799]
[8.24772072 -344.61801147]
[4.92546082 -359.24545288]
[1.60320151 -373.87292480]
[-8.99845219 -385.61666870]
[-4.27220201 -399.74154663]
[-14.87385559 -411.48529053]
[-10.14760590 -425.61013794]
[-15.09998894 -433.28555298]
[-13.40872192 -440.48007202]
[-16.51283264 -455.15539551]
[-19.61694145 -469.83068848]
[-22.72105217 -484.50598145]
[-25.82516289 -499.18127441]
[-40.86462402 -498.82174683]
[-55.71403503 -501.23208618]
[-69.86763000 -506.33016968]
[-82.84333801 -513.94238281]
[-94.19921875 -523.80938721]
[-103.54849243 -535.59521484]
[-110.57273102 -548.89843750]
[-115.03268433 -563.26586914]
[-116.77644348 -578.20819092]
[-115.74462891 -593.21655273]
[-111.97238159 -607.77966309]
[-105.58817291 -621.40161133]
[-96.80946350 -633.61834717]
[-85.93523407 -644.01379395]
[-73.33586884 -652.23394775]
[-59.44049072 -657.99877930]
[-44.72238159 -661.11193848]
[-29.68282318 -661.46740723]
[-14.83406258 -659.05310059]
[-0.68184280 -653.95117188]
[12.29181671 -646.33551025]
[23.64503860 -636.46539307]
[32.99113464 -624.67706299]
[40.01178360 -611.37194824]
[44.46786118 -597.00329590]
[46.20759964 -582.06048584]
[45.17173767 -567.05242920]
[41.39556503 -552.49029541]
[35.00768661 -538.87011719]
[26.22567749 -526.65576172]
[15.34864998 -516.26324463]
[2.74706841 -508.04647827]
[-11.14986038 -502.28540039]
[-8.04574966 -487.61010742]
[-4.94163990 -472.93478394]
[-1.83752954 -458.25949097]
[1.26658058 -443.58419800]
[4.47985458 -428.93240356]
[14.84387779 -418.23492432]
[10.35525799 -403.06378174]
[20.71928215 -392.36630249]
[16.23066139 -377.19519043]
[19.55292130 -362.56771851]
[22.87518120 -347.94027710]
[26.36719704 -344.68222046]
[27.84960175 -339.19592285]
[26.07172203 -332.82797241]
[28.95699501 -318.10809326]
[31.84226799 -303.38818359]
[46.77493286 -302.40582275]
[60.95534134 -297.58786011]
[73.41493225 -289.25701904]
[83.30104065 -277.97616577]
[89.93524170 -264.51037598]
[92.85991669 -249.77487183]
[91.86981964 -234.77294922]
[87.02643585 -220.52766418]
[78.65424347 -208.01197815]
[67.31895447 -198.08239746]
[53.78929901 -191.42028809]
[56.67457199 -176.70040894]
[59.55984497 -161.98051453]
[73.74868011 -160.61567688]
[86.99236298 -155.30108643]
[98.21367645 -146.45933533]
[106.49719238 -134.80029297]
[111.16393280 -121.26417542]
[111.82701111 -106.94559479]
[108.42369080 -93.00518036]
[101.22122192 -80.57540131]
[90.79584503 -70.66863251]
[77.98671722 -64.09465790]
[80.65251923 -49.33344269]
[83.31831360 -34.57222366]
[85.98410797 -19.81100845]
[88.64990234 -5.04979086]
[91.31569672 9.71142673]
[105.71753693 13.59119606]
[117.05328369 23.37946129]
[123.03956604 37.17531204]
[122.43988800 52.26373672]
[115.31967926 65.64990997]
[103.04389954 74.65361023]
[105.70969391 89.41482544]
[108.59497070 104.13471985]
[111.69908142 118.81002045]
[122.12471008 130.71029663]
[117.18869019 144.76322937]
[120.29280090 159.43853760]
[123.39691162 174.11384583]
[138.23092651 183.38591003]
[141.70117188 200.18687439]
[132.13854980 214.02142334]
[142.74020386 225.76516724]
[138.01394653 239.89004517]
[141.44500732 254.49235535]
[144.98468018 269.06872559]
[155.57348633 276.43353271]
[158.22160339 288.64709473]
[152.04244995 299.04635620]
[155.36471558 313.67382812]
[158.79577637 328.27615356]
[162.33544922 342.85250854]
[165.87512207 357.42889404]
[169.41479492 372.00527954]
[184.44386292 371.28176880]
[199.33822632 373.41589355]
[213.55944824 378.33047485]
[226.59346008 385.84783936]
[237.96908569 395.69628906]
[247.27508545 407.51977539]
[254.17506409 420.89089966]
[258.41958618 435.32629395]
[259.85525513 450.30410767]
[258.43011475 465.28295898]
[254.19570923 479.72131348]
[247.30509949 493.09725952]
[238.00738525 504.92727661]
[226.63868713 514.78369141]
[213.60995483 522.31024170]
[199.39218140 527.23480225]
[184.49931335 529.37933350]
[169.46974182 528.66638184]
[154.84675598 525.12170410]
[141.15898132 518.87341309]
[128.90121460 510.14736938]
[118.51656342 499.25903320]
[110.38043976 486.60202026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 187]
[9 186]
[10 185]
[11 184]
[13 183]
[14 182]
[16 179]
[17 178]
[19 177]
[21 175]
[25 172]
[26 171]
[27 170]
[29 168]
[30 167]
[33 166]
[34 165]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[54 144]
[55 143]
[56 142]
[67 131]
[68 130]
[69 129]
[70 126]
[71 125]
[72 124]
[74 122]
[76 120]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
