%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[92.78617859 816.86871338]
[77.78966522 816.19842529]
[62.92477417 814.10565186]
[48.32612991 810.60931396]
[34.12594223 805.74108887]
[20.45280838 799.54510498]
[7.43056488 792.07745361]
[-4.82285786 783.40576172]
[-16.19648743 773.60858154]
[-26.58732224 762.77459717]
[-35.90125656 751.00189209]
[-44.05393982 738.39721680]
[-50.97154236 725.07464600]
[-56.59140778 711.15478516]
[-60.86264801 696.76379395]
[-63.74658203 682.03192139]
[-65.21708679 667.09265137]
[-65.26084137 652.08117676]
[-63.87746048 637.13360596]
[-61.07946396 622.38519287]
[-56.89219666 607.96948242]
[-51.35357666 594.01715088]
[-44.51376343 580.65441895]
[-36.43470383 568.00244141]
[-27.18956375 556.17565918]
[-16.86206818 545.28131104]
[-5.54574966 535.41790771]
[6.65690899 526.67492676]
[19.63539505 519.13146973]
[33.27217102 512.85589600]
[47.44373703 507.90499878]
[62.02175140 504.32360840]
[76.87419128 502.14419556]
[91.86653900 501.38647461]
[92.53633118 486.40145874]
[93.20611572 471.41641235]
[93.87590027 456.43136597]
[94.54568481 441.44631958]
[95.21546936 426.46130371]
[79.84096527 421.43151855]
[66.48820496 412.27566528]
[56.23801041 399.72531128]
[49.92272186 384.78720093]
[48.05865097 368.66241455]
[50.80385971 352.64987183]
[57.94478226 338.04171753]
[68.91284180 326.01895142]
[82.82968903 317.55603027]
[98.57756042 313.34185791]
[98.80088806 298.34353638]
[99.02421570 283.34518433]
[99.24754333 268.34686279]
[99.47087097 253.34852600]
[91.92391968 240.50746155]
[99.86582184 226.82402039]
[100.08915710 211.82568359]
[92.54219818 198.98461914]
[100.48410797 185.30117798]
[99.81432343 170.31613159]
[98.25379944 155.39753723]
[96.69327545 140.47892761]
[95.13275146 125.56032562]
[83.18783569 119.85878754]
[75.59330750 109.01850891]
[74.31435394 95.84456635]
[79.68191528 83.74589539]
[90.30707550 75.85321045]
[88.96884155 60.91302490]
[87.63060760 45.97283936]
[86.29237366 31.03265572]
[84.95413971 16.09247017]
[71.24336243 12.23688126]
[59.69638824 3.95022678]
[51.68836594 -7.75552845]
[48.16439819 -21.46276855]
[49.52803802 -35.51989365]
[55.59519196 -48.24031448]
[65.61865997 -58.10482788]
[78.38011932 -63.94302368]
[77.26446533 -78.90147400]
[76.14881897 -93.85993195]
[75.03317261 -108.81838226]
[73.91751862 -123.77684021]
[65.17523956 -136.96331787]
[71.94450378 -150.23080444]
[60.79455566 -157.78681946]
[56.10075760 -170.20368958]
[59.36711121 -182.86911011]
[69.18415833 -191.21507263]
[68.29134369 -206.18847656]
[54.99687576 -217.55845642]
[54.05730057 -234.68832397]
[65.56635284 -246.95129395]
[64.45070648 -261.90972900]
[63.33506012 -276.86819458]
[48.80511856 -281.25512695]
[36.84350204 -290.59774780]
[29.06792450 -303.63247681]
[26.52996826 -318.59655762]
[29.57286835 -333.46615601]
[37.78509903 -346.23031616]
[50.05602264 -355.16278076]
[64.72610474 -359.05551147]
[79.81132507 -357.38201904]
[93.27153778 -350.36868286]
[103.28636169 -338.96395874]
[108.50136566 -324.71023560]
[108.21127319 -309.53524780]
[102.45531464 -295.49127197]
[92.01193237 -284.47763062]
[78.29351044 -277.98385620]
[79.40916443 -263.02539062]
[80.52481079 -248.06694031]
[91.36888123 -241.10736084]
[96.29806519 -228.99186707]
[93.30525208 -216.05921936]
[83.26475525 -207.08129883]
[84.15756989 -192.10789490]
[97.20178986 -181.49247742]
[98.55920410 -164.39065552]
[86.90295410 -151.34645081]
[95.56543732 -139.22990417]
[88.87597656 -124.89248657]
[89.99162292 -109.93403625]
[91.10726929 -94.97557831]
[92.22292328 -80.01712799]
[93.33856964 -65.05867004]
[108.46420288 -60.33201599]
[120.64749146 -50.13806915]
[128.00387573 -36.01509094]
[129.38069153 -20.11200523]
[124.53765106 -4.86141300]
[114.18813324 7.39248753]
[99.89432526 14.75423527]
[101.23255920 29.69441986]
[102.57079315 44.63460541]
[103.90902710 59.57479095]
[105.24726105 74.51497650]
[119.34990692 82.60456085]
[125.89785767 97.48577881]
[122.33460999 113.34860992]
[110.05136108 123.99980164]
[111.61187744 138.91841125]
[113.17240143 153.83700562]
[114.73292542 168.75561523]
[123.37973785 156.49867249]
[137.54202271 151.55603027]
[151.93759155 155.77116394]
[161.19726562 167.57194519]
[161.86741638 182.55697632]
[153.69807434 195.13719177]
[139.73622131 200.62049866]
[125.18927765 196.96176147]
[115.48244476 185.52450562]
[123.01342010 199.43833923]
[115.08749390 212.04901123]
[114.86416626 227.04734802]
[122.39514160 240.96118164]
[114.46920776 253.57185364]
[114.24588013 268.57019043]
[114.02255249 283.56851196]
[113.79922485 298.56686401]
[113.57589722 313.56518555]
[126.95610809 317.26742554]
[139.04809570 324.06781006]
[149.14735413 333.56472778]
[156.66682434 345.19958496]
[161.17094421 358.28967285]
[162.40092468 372.06829834]
[160.28961182 385.72964478]
[154.96511841 398.47583008]
[146.74307251 409.56365967]
[136.10789490 418.34783936]
[123.68428040 424.31854248]
[110.20050812 427.13107300]
[109.53072357 442.11611938]
[108.86093903 457.10116577]
[108.19115448 472.08618164]
[107.52136993 487.07122803]
[106.85157776 502.05627441]
[121.71654510 504.14852905]
[136.31532288 507.64431763]
[150.51568604 512.51196289]
[164.18904114 518.70745850]
[177.21156311 526.17468262]
[189.46530151 534.84588623]
[200.83929443 544.64270020]
[211.23051453 555.47631836]
[220.54487610 567.24865723]
[228.69802856 579.85302734]
[235.61610413 593.17535400]
[241.23648071 607.09503174]
[245.50825500 621.48583984]
[248.39271545 636.21765137]
[249.86376953 651.15686035]
[249.90808105 666.16827393]
[248.52523804 681.11596680]
[245.72778320 695.86444092]
[241.54103088 710.28027344]
[236.00292969 724.23284912]
[229.16360474 737.59582520]
[221.08500671 750.24810791]
[211.84028625 762.07519531]
[201.51319885 772.96997070]
[190.19723511 782.83374023]
[177.99488831 791.57714844]
[165.01667786 799.12109375]
[151.38012695 805.39715576]
[137.20875549 810.34857178]
[122.63086700 813.93048096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[49 163]
[50 162]
[51 161]
[52 160]
[53 159]
[55 157]
[56 156]
[58 154]
[59 145]
[60 144]
[61 143]
[62 142]
[67 138]
[68 137]
[69 136]
[70 135]
[71 134]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[85 121]
[89 118]
[90 117]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
