%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[141.70167542 679.16967773]
[128.77360535 671.55450439]
[116.30570984 663.20721436]
[104.33943939 654.15545654]
[92.91453552 644.42932129]
[82.06895447 634.06115723]
[71.83871460 623.08538818]
[62.25780106 611.53845215]
[53.35805130 599.45867920]
[45.16902161 586.88629150]
[37.71791458 573.86297607]
[31.02948761 560.43200684]
[25.12595558 546.63806152]
[20.02692986 532.52685547]
[15.74934864 518.14532471]
[12.30742168 503.54125977]
[9.71258354 488.76315308]
[7.97345352 473.86010742]
[7.09580946 458.88159180]
[7.08256626 443.87741089]
[7.93376780 428.89739990]
[9.64658737 413.99127197]
[12.21533394 399.20861816]
[15.63147449 384.59848022]
[19.88366318 370.20944214]
[24.95777130 356.08926392]
[30.83694458 342.28488159]
[37.50165176 328.84213257]
[44.92975616 315.80569458]
[53.09658051 303.21884155]
[61.97499466 291.12341309]
[71.53550720 279.55957031]
[81.74635315 268.56576538]
[92.57361603 258.17846680]
[103.98133850 248.43218994]
[115.93161011 239.35932922]
[128.38473511 230.99002075]
[141.29936218 223.35208130]
[134.41995239 210.02264404]
[127.54053497 196.69322205]
[120.66112518 183.36378479]
[113.78170776 170.03436279]
[106.90229797 156.70492554]
[106.76105499 171.70426941]
[102.05132294 185.94569397]
[93.22199249 198.07182312]
[81.11462402 206.92686462]
[66.88321686 211.66679382]
[51.88421249 211.83985901]
[37.54722595 207.42955017]
[25.23876762 198.85623169]
[16.13199615 186.93705750]
[11.09491539 172.80809021]
[10.60762596 157.81599426]
[14.71657276 143.38975525]
[23.03011894 130.90437317]
[34.75586700 121.54985809]
[48.77619934 116.21784973]
[63.75477982 115.41654205]
[78.26395416 119.22232819]
[90.92079163 127.27244568]
[100.51950836 138.80059814]
[97.41539764 124.12529755]
[94.31128693 109.44998932]
[84.06610870 120.40610504]
[69.10128784 119.37945557]
[60.44832230 107.12685394]
[64.48586273 92.68045807]
[78.23758698 86.68962097]
[91.56523132 93.56924438]
[89.56121826 78.70371246]
[87.55720520 63.83818436]
[85.55318451 48.97265625]
[83.54917145 34.10712814]
[81.54515839 19.24160194]
[79.54114532 4.37607288]
[73.46669006 18.09106255]
[62.39380646 28.20991898]
[48.18846893 33.02743530]
[33.24453354 31.73177338]
[20.08030891 24.54127884]
[10.91420174 12.66767406]
[7.29086113 -1.88812888]
[9.82088375 -16.67322159]
[18.07791710 -29.19605827]
[30.67050362 -37.34631729]
[45.47657394 -39.75054169]
[60.00104523 -36.00357056]
[71.79628754 -26.73684120]
[78.87506104 -13.51036644]
[79.76787567 -28.48377228]
[80.66069031 -43.45717621]
[81.55350494 -58.43058395]
[82.44631958 -73.40399170]
[83.33913422 -88.37739563]
[68.94012451 -92.84191132]
[56.02831268 -100.62319946]
[45.35437775 -111.26888275]
[37.53888321 -124.16002655]
[33.03622055 -138.54714966]
[32.10816193 -153.59381104]
[34.80866241 -168.42523193]
[40.98072433 -182.17910767]
[50.26551056 -194.05581665]
[62.12321091 -203.36485291]
[75.86444092 -209.56503296]
[90.69029999 -212.29583740]
[105.73883057 -211.39854431]
[120.13513184 -206.92530823]
[133.04222107 -199.13618469]
[143.70970154 -188.48403931]
[151.51737976 -175.58816528]
[156.01132202 -161.19830322]
[156.93025208 -146.15107727]
[154.22076416 -131.32130432]
[148.04035950 -117.57117462]
[138.74838257 -105.70010376]
[126.88504028 -96.39824677]
[113.14005280 -90.20640564]
[98.31254578 -87.48458099]
[97.41973114 -72.51117706]
[96.52690887 -57.53776932]
[95.63409424 -42.56436157]
[94.74127960 -27.59095573]
[93.84846497 -12.61755085]
[94.40667725 2.37205935]
[96.41069031 17.23758698]
[98.41470337 32.10311508]
[100.41871643 46.96864319]
[102.42272949 61.83417130]
[104.42674255 76.69969940]
[106.43075562 91.56523132]
[108.98658752 106.34587860]
[112.09069824 121.02118683]
[115.19480896 135.69648743]
[120.23172760 149.82551575]
[127.11113739 163.15495300]
[133.99055481 176.48437500]
[140.86996460 189.81379700]
[147.74937439 203.14323425]
[154.62878418 216.47265625]
[168.33619690 210.37080383]
[182.37237549 205.06878662]
[196.69070435 200.58422852]
[211.24360657 196.93203735]
[225.98275757 194.12432861]
[240.85917664 192.17044067]
[255.82347107 191.07685852]
[270.82589722 190.84721375]
[285.81665039 191.48226929]
[300.74591064 192.97993469]
[315.56408691 195.33520508]
[330.22195435 198.54028320]
[344.67083740 202.58448792]
[358.86270142 207.45442200]
[372.75045776 213.13389587]
[386.28793335 219.60403442]
[399.43014526 226.84333801]
[412.13348389 234.82777405]
[424.35568237 243.53082275]
[436.05621338 252.92355347]
[447.19616699 262.97479248]
[457.73855591 273.65112305]
[467.64831543 284.91708374]
[476.89257812 296.73526001]
[485.44064331 309.06637573]
[493.26403809 321.86950684]
[500.33685303 335.10208130]
[506.63555908 348.72015381]
[512.13922119 362.67849731]
[516.82958984 376.93072510]
[520.69110107 391.42950439]
[523.71081543 406.12667847]
[525.87884521 420.97341919]
[527.18792725 435.92037964]
[527.63366699 450.91796875]
[527.21459961 465.91629028]
[525.93218994 480.86557007]
[523.79064941 495.71615601]
[520.79705811 510.41867065]
[516.96142578 524.92431641]
[512.29644775 539.18487549]
[506.81765747 553.15301514]
[500.54321289 566.78228760]
[493.49398804 580.02740479]
[485.69338989 592.84448242]
[477.16732788 605.19079590]
[467.94412231 617.02545166]
[458.05444336 628.30902100]
[447.53109741 639.00408936]
[436.40905762 649.07519531]
[424.72528076 658.48870850]
[412.51858521 667.21356201]
[399.82949829 675.22058105]
[386.70019531 682.48327637]
[373.17428589 688.97753906]
[359.29669189 694.68176270]
[345.11349487 699.57696533]
[330.67184448 703.64691162]
[316.01971436 706.87805176]
[301.20574951 709.25976562]
[286.27917480 710.78399658]
[271.28958130 711.44573975]
[256.28677368 711.24285889]
[241.32057190 710.17590332]
[226.44068909 708.24853516]
[211.69654846 705.46710205]
[197.13716125 701.84082031]
[182.81086731 697.38177490]
[168.76527405 692.10479736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 141]
[39 140]
[40 139]
[41 138]
[42 137]
[43 136]
[62 135]
[63 134]
[64 133]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[75 127]
[76 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
