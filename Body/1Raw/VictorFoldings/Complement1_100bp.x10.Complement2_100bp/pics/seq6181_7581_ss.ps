%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[132.87173462 669.48559570]
[122.26531982 658.85620117]
[112.91574860 647.10607910]
[104.94058228 634.38299561]
[98.44012451 620.84698486]
[93.49612427 606.66821289]
[90.17076111 592.02508545]
[88.50585175 577.10168457]
[88.52233887 562.08569336]
[90.22000885 547.16595459]
[93.57750702 532.53015137]
[98.55261993 518.36230469]
[105.08277893 504.84054565]
[113.08585358 492.13500977]
[122.46120453 480.40545654]
[133.09092712 469.79934692]
[144.84132385 460.45013428]
[157.56465149 452.47534180]
[171.10086060 445.97528076]
[185.27976990 441.03170776]
[181.95750427 426.40426636]
[178.63523865 411.77679443]
[175.31298828 397.14935303]
[171.99072266 382.52188110]
[168.66847229 367.89440918]
[165.34620667 353.26696777]
[161.58990479 338.74490356]
[150.60752869 328.68325806]
[154.18519592 313.27188110]
[149.99818420 298.86807251]
[145.81117249 284.46429443]
[130.89001465 285.78085327]
[115.99397278 284.16046143]
[101.69573975 279.66351318]
[88.54542542 272.46109009]
[77.04933167 262.82833862]
[67.65051270 251.13407898]
[60.71165466 237.82656860]
[56.50109863 223.41639709]
[55.18247604 208.45687866]
[56.80832672 193.52279663]
[61.31803131 179.18832397]
[68.54004669 166.00495911]
[78.19844818 154.48027039]
[89.92346954 145.05841064]
[103.26564026 138.10296631]
[99.07862854 123.69918060]
[94.89161682 109.29539490]
[90.06562042 95.09294128]
[84.61026001 81.12014008]
[79.15489960 67.14734650]
[73.69954681 53.17454910]
[68.24418640 39.20175171]
[62.78883362 25.22895241]
[57.87428665 20.80641937]
[56.18460083 15.38037300]
[57.38588333 10.75804043]
[52.34896469 -3.37098956]
[47.31204987 -17.50001907]
[35.38999176 -27.90074539]
[38.40428162 -42.48715591]
[33.26232147 -56.57829666]
[28.01560402 -70.63076782]
[22.76888657 -84.68323517]
[17.52216721 -98.73571014]
[5.44658089 -108.95777893]
[8.24336624 -123.58745575]
[2.99664783 -137.63992310]
[-2.25007033 -151.69239807]
[-16.86860085 -148.24249268]
[-31.80425262 -146.65203857]
[-46.82146835 -146.94610596]
[-61.68340302 -149.12005615]
[-76.15567017 -153.13961792]
[-90.01000977 -158.94137573]
[-103.02792358 -166.43383789]
[-115.00411224 -175.49885559]
[-125.74967194 -185.99342346]
[-135.09515381 -197.75204468]
[-142.89314270 -210.58927917]
[-149.02066040 -224.30265808]
[-153.38107300 -238.67590332]
[-155.90562439 -253.48231506]
[-156.55445862 -268.48840332]
[-155.31738281 -283.45745850]
[-152.21388245 -298.15341187]
[-147.29292297 -312.34451294]
[-140.63209534 -325.80694580]
[-132.33645630 -338.32833862]
[-122.53685760 -349.71127319]
[-111.38783264 -359.77618408]
[-99.06522369 -368.36434937]
[-85.76337433 -375.34030151]
[-71.69207764 -380.59405518]
[-57.07325745 -384.04272461]
[-42.13747406 -385.63192749]
[-27.12028313 -385.33660889]
[-12.25852871 -383.16140747]
[2.21339607 -379.14062500]
[16.06724930 -373.33770752]
[29.08453560 -365.84411621]
[41.05995560 -356.77810669]
[51.80463409 -346.28265381]
[61.14912033 -334.52322388]
[68.94602966 -321.68533325]
[75.07240295 -307.97143555]
[79.43161011 -293.59783936]
[81.95490265 -278.79119873]
[82.60248566 -263.78509521]
[81.36414337 -248.81611633]
[78.25940704 -234.12040710]
[73.33724976 -219.92973328]
[66.67529297 -206.46786499]
[58.37860489 -193.94715881]
[48.57804108 -182.56506348]
[37.42816925 -172.50108337]
[25.10483551 -163.91395569]
[11.80240059 -156.93911743]
[17.04911995 -142.88664246]
[22.29583740 -128.83416748]
[33.99614334 -119.61722565]
[31.57463837 -103.98242950]
[36.82135773 -89.92995453]
[42.06807709 -75.87748718]
[47.31479263 -61.82501602]
[52.59934235 -56.65826416]
[52.53330994 -47.52407074]
[64.09509277 -38.13394547]
[61.44107819 -22.53693581]
[66.47799683 -8.40790558]
[71.51490784 5.72112370]
[76.76162720 19.77359581]
[82.21698761 33.74639130]
[87.67234039 47.71919250]
[93.12770081 61.69198990]
[98.58306122 75.66478729]
[104.03841400 89.63758087]
[111.03740692 76.37055206]
[125.32629395 71.80682373]
[138.71975708 78.56071472]
[143.54542542 92.76329041]
[137.03890991 106.27866364]
[122.92745972 111.36461639]
[109.29539490 105.10838318]
[113.48240662 119.51216888]
[117.66941833 133.91595459]
[132.66111755 132.63508606]
[147.60986328 134.30319214]
[161.94131470 138.85429382]
[175.10522461 146.11170959]
[186.59657288 155.79486084]
[195.97489929 167.53016663]
[202.88124084 180.86540222]
[207.05180359 195.28720093]
[208.32809448 210.24075317]
[206.66294861 225.15118408]
[202.12222290 239.44564819]
[194.88220215 252.57530212]
[185.22279358 264.03643799]
[173.51669312 273.38977051]
[160.21495056 280.27728271]
[164.40196228 294.68106079]
[168.58897400 309.08486938]
[179.87083435 320.17675781]
[175.99368286 334.55789185]
[179.23310852 337.44927979]
[181.18739319 340.87643433]
[181.84593201 344.36950684]
[181.35176086 347.50360107]
[179.97366333 349.94470215]
[183.29592896 364.57217407]
[186.61817932 379.19961548]
[189.94044495 393.82708740]
[193.26271057 408.45452881]
[196.58496094 423.08200073]
[199.90722656 437.70947266]
[214.83047485 436.04321289]
[229.84646606 436.05834961]
[244.76634216 437.75466919]
[259.40246582 441.11087036]
[273.57077026 446.08471680]
[287.09307861 452.61364746]
[299.79931641 460.61560059]
[311.52975464 469.98989868]
[322.13677979 480.61865234]
[331.48706055 492.36822510]
[339.46298218 505.09082031]
[345.96426392 518.62646484]
[350.90908813 532.80493164]
[354.23535156 547.44787598]
[355.90115356 562.37115479]
[355.88555908 577.38714600]
[354.18878174 592.30700684]
[350.83215332 606.94299316]
[345.85787964 621.11114502]
[339.32855225 634.63330078]
[331.32623291 647.33929443]
[321.95156860 659.06939697]
[311.32250977 669.67614746]
[299.57266235 679.02606201]
[286.84979248 687.00164795]
[273.31396484 693.50250244]
[259.13537598 698.44689941]
[244.49232483 701.77270508]
[229.56895447 703.43804932]
[214.55297852 703.42199707]
[199.63320923 701.72479248]
[184.99728394 698.36773682]
[170.82928467 693.39306641]
[157.30735779 686.86328125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[27 165]
[29 163]
[30 162]
[31 161]
[46 146]
[47 145]
[48 144]
[49 137]
[50 136]
[51 135]
[52 134]
[53 133]
[54 132]
[57 131]
[58 130]
[59 129]
[61 127]
[62 125]
[63 124]
[64 123]
[65 122]
[67 120]
[68 119]
[69 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
