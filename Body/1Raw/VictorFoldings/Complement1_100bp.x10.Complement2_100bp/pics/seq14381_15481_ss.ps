%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[171.78782654 738.99096680]
[157.63415527 734.01550293]
[143.72727966 728.38696289]
[130.09735107 722.11743164]
[116.77385712 715.22058105]
[103.78567505 707.71136475]
[91.16093445 699.60595703]
[78.92697144 690.92193604]
[67.11027527 681.67816162]
[55.73645401 671.89459229]
[44.83013153 661.59246826]
[34.41492844 650.79406738]
[24.51340103 639.52276611]
[15.14699936 627.80303955]
[6.33600521 615.66021729]
[-1.90049851 603.12060547]
[-9.54467297 590.21136475]
[-16.57996178 576.96044922]
[-22.99112892 563.39660645]
[-28.76428986 549.54913330]
[-33.88694000 535.44805908]
[-38.34798431 521.12390137]
[-42.13776398 506.60772705]
[-45.24806595 491.93093872]
[-47.67216110 477.12536621]
[-49.40479279 462.22302246]
[-50.44221115 447.25619507]
[-50.78216934 432.25732422]
[-50.42393112 417.25888062]
[-49.36827469 402.29333496]
[-47.61748123 387.39309692]
[-45.17534637 372.59048462]
[-42.04715729 357.91751099]
[-38.23969269 343.40594482]
[-33.76119232 329.08728027]
[-28.62136269 314.99246216]
[-22.83133125 301.15200806]
[-16.40363884 287.59597778]
[-9.35220528 274.35363770]
[-1.69230402 261.45373535]
[6.55947542 248.92416382]
[15.38526154 236.79209900]
[24.76593971 225.08377075]
[34.68119431 213.82456970]
[45.10955048 203.03887939]
[56.02841949 192.75004578]
[67.41416168 182.98036194]
[79.24210358 173.75097656]
[91.48664856 165.08189392]
[104.12126160 156.99188232]
[117.11858368 149.49845886]
[110.23916626 136.16902161]
[103.35975647 122.83959198]
[96.48034668 109.51016235]
[90.27890015 104.36092377]
[89.59940338 95.93067169]
[82.91921234 82.50029755]
[76.23901367 69.06992340]
[69.55882263 55.63954544]
[55.51846695 60.95434570]
[41.01869583 64.84474945]
[26.20361710 67.27208710]
[11.22046852 68.21224213]
[-3.78183341 67.65586853]
[-18.65418434 65.60848236]
[-33.24877548 62.09045029]
[-47.42055130 57.13673019]
[-61.02866364 50.79655075]
[-73.93786621 43.13293076]
[-86.01985931 34.22203445]
[-97.15456390 24.15242767]
[-107.23131561 13.02418613]
[-116.14995575 0.94791085]
[-123.82185364 -11.95637417]
[-130.17076111 -25.56041908]
[-135.13357544 -39.72901535]
[-138.66096497 -54.32134628]
[-140.71788025 -69.19238281]
[-141.28388977 -84.19432068]
[-140.35334778 -99.17807007]
[-137.93550110 -113.99470520]
[-134.05439758 -128.49696350]
[-128.74861145 -142.54072571]
[-122.07085419 -155.98640442]
[-114.08750916 -168.70036316]
[-104.87792206 -180.55625916]
[-94.53361511 -191.43623352]
[-83.15740204 -201.23217773]
[-70.86235046 -209.84671021]
[-57.77065277 -217.19422913]
[-44.01242828 -223.20170593]
[-29.72441101 -227.80944824]
[-15.04860878 -230.97163391]
[-0.13087961 -232.65684509]
[14.88051414 -232.84834290]
[29.83637810 -231.54421997]
[44.58806992 -228.75743103]
[58.98897552 -224.51567078]
[72.89597321 -218.86111450]
[86.17083740 -211.84994507]
[98.68164062 -203.55184937]
[110.30403900 -194.04930115]
[120.92252350 -183.43673706]
[130.43154907 -171.81964111]
[138.73661804 -159.31346130]
[145.75518799 -146.04251099]
[151.41751099 -132.13865662]
[155.66729736 -117.74012756]
[158.46231079 -102.98999023]
[159.77476501 -88.03485107]
[159.59164429 -73.02335358]
[157.91474915 -58.10469055]
[154.76074219 -43.42712402]
[150.16098022 -29.13654137]
[144.16116333 -15.37496853]
[136.82093811 -2.27917719]
[128.21325684 10.02067661]
[118.42366791 21.40234756]
[107.54945374 31.75271797]
[95.69870758 40.96891785]
[82.98919678 48.95935059]
[89.66939545 62.38972473]
[96.34958649 75.82009888]
[103.02977753 89.25048065]
[109.80977631 102.63075256]
[116.68918610 115.96018219]
[123.56859589 129.28961182]
[130.44801331 142.61903381]
[144.08552551 136.36604309]
[157.99919128 130.75430298]
[172.15888977 125.79597473]
[186.53393555 121.50180817]
[201.09320068 117.88109589]
[215.80516052 114.94167328]
[230.63793945 112.68991852]
[245.55941772 111.13069916]
[260.53729248 110.26740265]
[275.53909302 110.10189056]
[290.53237915 110.63451385]
[305.48461914 111.86413574]
[320.36346436 113.78808594]
[335.13668823 116.40219116]
[349.77230835 119.70079803]
[364.23858643 123.67676544]
[378.50424194 128.32147217]
[392.53833008 133.62486267]
[406.31048584 139.57545471]
[419.79089355 146.16035461]
[432.95031738 153.36529541]
[445.76028442 161.17469788]
[458.19302368 169.57162476]
[470.22164917 178.53790283]
[481.82009888 188.05409241]
[492.96322632 198.09960938]
[503.62692261 208.65269470]
[513.78808594 219.69047546]
[523.42468262 231.18905640]
[532.51593018 243.12351990]
[541.04205322 255.46804810]
[548.98455811 268.19589233]
[556.32635498 281.27947998]
[563.05145264 294.69046021]
[569.14532471 308.39981079]
[574.59478760 322.37786865]
[579.38793945 336.59429932]
[583.51452637 351.01834106]
[586.96557617 365.61874390]
[589.73358154 380.36392212]
[591.81256104 395.22189331]
[593.19805908 410.16052246]
[593.88696289 425.14743042]
[593.87792969 440.15014648]
[593.17083740 455.13619995]
[591.76727295 470.07312012]
[589.67034912 484.92858887]
[586.88446045 499.67037964]
[583.41577148 514.26660156]
[579.27172852 528.68566895]
[574.46130371 542.89630127]
[568.99499512 556.86773682]
[562.88452148 570.56970215]
[556.14318848 583.97253418]
[548.78558350 597.04724121]
[540.82763672 609.76544189]
[532.28656006 622.09960938]
[523.18096924 634.02307129]
[513.53039551 645.51000977]
[503.35589600 656.53546143]
[492.67944336 667.07562256]
[481.52416992 677.10766602]
[469.91421509 686.60980225]
[457.87475586 695.56152344]
[445.43182373 703.94342041]
[432.61242676 711.73730469]
[419.44430542 718.92633057]
[405.95593262 725.49487305]
[392.17660522 731.42883301]
[378.13607788 736.71520996]
[363.86483765 741.34265137]
[349.39373779 745.30108643]
[334.75415039 748.58197021]
[319.97778320 751.17822266]
[305.09661865 753.08416748]
[290.14288330 754.29571533]
[275.14898682 754.81018066]
[260.14736938 754.62652588]
[245.17056274 753.74505615]
[230.25097656 752.16778564]
[215.42092896 749.89807129]
[200.71253967 746.94085693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 128]
[52 127]
[53 126]
[54 125]
[56 124]
[57 123]
[58 122]
[59 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
