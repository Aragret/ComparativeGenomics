%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[103.03730011 780.44781494]
[88.47861481 776.81317139]
[74.19197845 772.22430420]
[60.23986435 766.70129395]
[46.68327332 760.26818848]
[33.58149338 752.95318604]
[20.99180984 744.78833008]
[8.96927929 735.80920410]
[-2.43352938 726.05511475]
[-13.16675282 715.56878662]
[-23.18345642 704.39599609]
[-32.43984222 692.58563232]
[-40.89543152 680.18927002]
[-48.51324844 667.26123047]
[-55.25998688 653.85797119]
[-61.10614014 640.03814697]
[-66.02614594 625.86212158]
[-69.99848938 611.39190674]
[-73.00580597 596.69085693]
[-75.03493500 581.82318115]
[-76.07701111 566.85388184]
[-76.12747955 551.84844971]
[-75.18611145 536.87243652]
[-73.25702667 521.99145508]
[-70.34866333 507.27047729]
[-66.47373962 492.77389526]
[-61.64919281 478.56512451]
[-55.89612198 464.70626831]
[-49.23969269 451.25793457]
[-41.70899963 438.27893066]
[-33.33698273 425.82601929]
[-24.16024590 413.95364380]
[-14.21891785 402.71374512]
[-3.55646992 392.15542603]
[7.78047323 382.32489014]
[19.74233818 373.26513672]
[32.27681732 365.01571655]
[45.32910156 357.61279297]
[58.84211349 351.08865356]
[72.75676727 345.47189331]
[87.01221466 340.78701782]
[101.54611969 337.05456543]
[116.29492950 334.29083252]
[114.51246643 319.39709473]
[112.73000336 304.50338745]
[109.59588623 300.89971924]
[108.69229126 295.28897095]
[111.12300873 289.14053345]
[109.78477478 274.20034790]
[108.44654083 259.26016235]
[107.10830688 244.31999207]
[92.28739166 237.88159180]
[82.68043518 224.77197266]
[80.98590851 208.51325989]
[87.76049805 193.53326416]
[101.24146271 183.95956421]
[99.68093872 169.04096985]
[98.12041473 154.12236023]
[96.55989075 139.20375061]
[79.77447510 133.75939941]
[67.05554962 121.52747345]
[60.96034241 104.96729279]
[62.71434021 87.40840149]
[71.96488953 72.38114166]
[86.85209656 62.90685654]
[84.62697601 48.07281113]
[82.40186310 33.23876953]
[68.14602661 23.10020447]
[65.68194580 6.12247753]
[76.05105591 -7.11837769]
[73.60533142 -21.91764832]
[71.15960693 -36.71691895]
[68.71387482 -51.51618958]
[62.74902725 -37.75317764]
[51.46014786 -27.87586594]
[37.02694702 -23.79141617]
[22.23625183 -26.28846741]
[9.94390774 -34.88488007]
[2.52337861 -47.92082214]
[1.40745044 -62.87925339]
[6.81159210 -76.87194061]
[17.69234848 -87.19711304]
[31.94881439 -91.86113739]
[46.82829285 -89.96347046]
[59.45778656 -81.87051392]
[67.39916229 -69.14369965]
[67.62248993 -84.14203644]
[67.84581757 -99.14037323]
[68.06914520 -114.13871002]
[68.29247284 -129.13705444]
[53.56108856 -132.20018005]
[39.67572403 -137.99615479]
[27.13833237 -146.31541443]
[16.40212631 -156.85725403]
[7.85521460 -169.24058533]
[1.80656385 -183.01776123]
[-1.52517164 -197.69071960]
[-2.01955175 -212.72908020]
[0.34129491 -227.58918762]
[5.47202539 -241.73387146]
[13.18716717 -254.65180969]
[23.20782280 -265.87603760]
[35.17174911 -275.00076294]
[48.64646530 -281.69619751]
[63.14485931 -285.72024536]
[78.14282990 -286.92745972]
[93.09820557 -285.27423096]
[107.47035980 -280.82028198]
[120.73975372 -273.72665405]
[132.42669678 -264.24972534]
[142.10873413 -252.73214722]
[149.43583679 -239.59022522]
[154.14314270 -225.29905701]
[156.06051636 -210.37524414]
[155.11860657 -195.35827637]
[151.35147095 -180.79100037]
[144.89530945 -167.20004272]
[135.98348999 -155.07667542]
[124.93817139 -144.85916138]
[112.15863800 -136.91687012]
[98.10686493 -131.53689575]
[83.29080963 -128.91372681]
[83.06748199 -113.91538239]
[82.84415436 -98.91704559]
[82.62082672 -83.91870880]
[82.39749908 -68.92037201]
[83.51314545 -53.96191788]
[85.95887756 -39.16264725]
[88.40460205 -24.36337662]
[90.85032654 -9.56410503]
[102.27205658 -3.59974384]
[108.26248169 8.02767849]
[106.43539429 21.17576599]
[97.23590851 31.01365089]
[99.46102142 45.84769440]
[101.68614197 60.68173981]
[113.65249634 63.08959198]
[124.30548096 69.04822540]
[132.62028503 77.98442078]
[137.79701233 89.03851318]
[139.33767700 101.14709473]
[137.09405518 113.14533234]
[131.28198242 123.87898254]
[122.46059418 132.31547546]
[111.47849274 137.64323425]
[113.03901672 152.56184387]
[114.59954071 167.48043823]
[116.16006470 182.39904785]
[129.21423340 187.42413330]
[138.78408813 197.53521729]
[143.04347229 210.71989441]
[141.21540833 224.38764954]
[133.71313477 235.87870789]
[122.04849243 242.98175049]
[123.38672638 257.92193604]
[124.72496033 272.86212158]
[126.06319427 287.80230713]
[127.62371826 302.72091675]
[129.40618896 317.61462402]
[131.18864441 332.50836182]
[146.17311096 331.71365356]
[161.17733765 331.91101074]
[176.13571167 333.09957886]
[190.98283386 335.27416992]
[205.65376282 338.42529297]
[220.08436584 342.53909302]
[234.21151733 347.59765625]
[247.97348022 353.57882690]
[261.31002808 360.45645142]
[274.16290283 368.20046997]
[286.47583008 376.77703857]
[298.19503784 386.14859009]
[309.26922607 396.27420044]
[319.64999390 407.10955811]
[329.29193115 418.60733032]
[338.15292358 430.71719360]
[346.19418335 443.38619995]
[353.38055420 456.55895996]
[359.68060303 470.17788696]
[365.06680298 484.18341064]
[369.51556396 498.51428223]
[373.00750732 513.10784912]
[375.52728271 527.90032959]
[377.06390381 542.82696533]
[377.61065674 557.82250977]
[377.16513062 572.82141113]
[375.72930908 587.75805664]
[373.30944824 602.56719971]
[369.91613770 617.18402100]
[365.56417847 631.54455566]
[360.27264404 645.58612061]
[354.06466675 659.24725342]
[346.96740723 672.46826172]
[339.01184082 685.19128418]
[330.23281860 697.36065674]
[320.66870117 708.92327881]
[310.36129761 719.82843018]
[299.35571289 730.02856445]
[287.70004272 739.47906494]
[275.44528198 748.13854980]
[262.64498901 755.96911621]
[249.35517883 762.93664551]
[235.63391113 769.01055908]
[221.54121399 774.16436768]
[207.13871765 778.37548828]
[192.48939514 781.62554932]
[177.65728760 783.90032959]
[162.70727539 785.18988037]
[147.70472717 785.48852539]
[132.71524048 784.79498291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 160]
[44 159]
[45 158]
[48 157]
[49 156]
[50 155]
[51 154]
[56 148]
[57 147]
[58 146]
[59 145]
[65 136]
[66 135]
[67 134]
[70 130]
[71 129]
[72 128]
[73 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
