%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[48.83182907 327.09121704]
[47.09603500 342.00073242]
[44.03073883 356.69461060]
[39.66062164 371.05456543]
[34.02086639 384.96496582]
[27.15688705 398.31384277]
[19.12394524 410.99365234]
[9.98671913 422.90237427]
[-0.18122008 433.94409180]
[-11.29800606 444.02987671]
[-23.27413177 453.07855225]
[-36.01316833 461.01727295]
[-49.41254807 467.78210449]
[-63.36438751 473.31857300]
[-77.75634766 477.58209229]
[-92.47254944 480.53836060]
[-107.39451599 482.16357422]
[-122.40208435 482.44464111]
[-137.37443542 481.37927246]
[-152.19100952 478.97610474]
[-166.73251343 475.25442505]
[-180.88186646 470.24423218]
[-194.52514648 463.98583984]
[-207.55249023 456.52966309]
[-219.85902405 447.93576050]
[-231.34565735 438.27325439]
[-241.91989136 427.62002563]
[-251.49659729 416.06176758]
[-259.99865723 403.69161987]
[-267.35763550 390.60910034]
[-273.51428223 376.91961670]
[-278.41900635 362.73336792]
[-282.03231812 348.16455078]
[-284.32513428 333.33050537]
[-285.27902222 318.35064697]
[-284.88623047 303.34558105]
[-283.14999390 288.43612671]
[-280.08425903 273.74234009]
[-275.71368408 259.38250732]
[-270.07351685 245.47227478]
[-263.20913696 232.12362671]
[-255.17579651 219.44404602]
[-246.03820801 207.53561401]
[-235.86993408 196.49421692]
[-224.75283813 186.40875244]
[-212.77642822 177.36044312]
[-200.03715515 169.42211914]
[-186.63757324 162.65769958]
[-172.68556213 157.12165833]
[-158.29347229 152.85856628]
[-143.57717896 149.90274048]
[-128.65516663 148.27798462]
[-113.64758301 147.99739075]
[-98.67526245 149.06320190]
[-83.85876465 151.46684265]
[-69.31736755 155.18896484]
[-55.16817093 160.19960022]
[-41.52508545 166.45838928]
[-28.49796677 173.91494751]
[-16.19169807 182.50924683]
[-4.70536613 192.17208862]
[5.94064236 181.60504150]
[16.58665085 171.03799438]
[27.23266029 160.47094727]
[37.87866974 149.90390015]
[48.52467728 139.33685303]
[51.05745316 132.39373779]
[59.40873337 128.69320679]
[63.20586395 114.29074097]
[78.51230621 110.28780365]
[89.31446075 99.88043213]
[98.88957977 88.33412933]
[107.11838531 75.79272461]
[115.34719849 63.25132751]
[116.44869232 47.46851349]
[129.89981079 41.07190704]
[138.12861633 28.53050804]
[146.35742188 15.98910713]
[154.58624268 3.44770718]
[162.43798828 -9.33313560]
[169.90573120 -22.34208679]
[177.37347412 -35.35103989]
[184.84121704 -48.35999298]
[192.30895996 -61.36894608]
[199.77670288 -74.37789917]
[207.24444580 -87.38684845]
[214.61512756 -100.45103455]
[221.88835144 -113.56972504]
[209.46574402 -121.99498749]
[197.84838867 -131.49989319]
[187.12982178 -142.00791931]
[177.39634705 -153.43444824]
[168.72633362 -165.68750000]
[161.18959045 -178.66839600]
[154.84680176 -192.27262878]
[149.74902344 -206.39067078]
[145.93731689 -220.90882874]
[143.44236755 -235.71023560]
[142.28425598 -250.67568970]
[142.47232056 -265.68472290]
[144.00503540 -280.61645508]
[146.87007141 -295.35070801]
[151.04434204 -309.76879883]
[156.49426270 -323.75469971]
[163.17593384 -337.19573975]
[171.03555298 -349.98370361]
[180.00985718 -362.01565552]
[190.02658081 -373.19473267]
[201.00506592 -383.43090820]
[212.85693359 -392.64172363]
[225.48675537 -400.75308228]
[238.79281616 -407.69964600]
[252.66801453 -413.42547607]
[267.00061035 -417.88449097]
[281.67523193 -421.04077148]
[296.57369995 -422.86892700]
[311.57604980 -423.35421753]
[326.56149292 -422.49273682]
[341.40942383 -420.29141235]
[356.00021362 -416.76797485]
[370.21646118 -411.95080566]
[383.94363403 -405.87869263]
[397.07125854 -398.60052490]
[409.49362183 -390.17489624]
[421.11068726 -380.66961670]
[431.82891846 -370.16128540]
[441.56204224 -358.73443604]
[450.23168945 -346.48114014]
[457.76803589 -333.50000000]
[464.11041260 -319.89556885]
[469.20776367 -305.77737427]
[473.01901245 -291.25909424]
[475.51351929 -276.45761108]
[476.67117310 -261.49212646]
[476.48266602 -246.48310852]
[474.94949341 -231.55140686]
[472.08401489 -216.81726074]
[467.90927124 -202.39927673]
[462.45895386 -188.41357422]
[455.77685547 -174.97273254]
[447.91683960 -162.18499756]
[438.94216919 -150.15330505]
[428.92510986 -138.97454834]
[417.94631958 -128.73872375]
[406.09417725 -119.52824402]
[393.46411133 -111.41727448]
[380.15780640 -104.47112274]
[366.28244019 -98.74570465]
[351.94970703 -94.28713226]
[337.27499390 -91.13129425]
[322.37649536 -89.30361176]
[307.37411499 -88.81878662]
[292.38867188 -89.68072510]
[277.54083252 -91.88249969]
[262.95013428 -95.40637207]
[248.73405457 -100.22396851]
[235.00704956 -106.29650116]
[227.73382568 -93.17780304]
[227.23977661 -85.80368042]
[220.25338745 -79.91910553]
[212.78564453 -66.91015625]
[205.31790161 -53.90120316]
[197.85017395 -40.89225006]
[190.38243103 -27.88329887]
[182.91468811 -14.87434673]
[175.44694519 -1.86539412]
[176.04815674 0.87261176]
[175.60104370 4.01374197]
[173.94662476 7.15989399]
[171.07281494 9.86281872]
[167.12763977 11.67651463]
[158.89883423 24.21791458]
[150.67002869 36.75931549]
[142.44120789 49.30071640]
[141.92829895 64.18648529]
[127.88859558 71.48013306]
[119.65979004 84.02153778]
[111.43098450 96.56293488]
[124.78786469 89.73698425]
[139.70094299 88.12454987]
[154.20816040 91.93778992]
[166.40083313 100.67500305]
[174.67478943 113.18665314]
[177.94148254 127.82662964]
[175.77108765 142.66877747]
[168.44918823 155.76036072]
[156.93908691 165.37896729]
[142.75512695 170.25909424]
[127.76348114 169.75868225]
[113.93653870 163.94355774]
[103.09347534 153.57881165]
[96.66088104 140.02810669]
[95.48507690 125.07425690]
[99.72183228 110.68258667]
[88.91967773 121.08995819]
[84.34989929 136.23683167]
[69.81610107 139.49536133]
[59.09172440 149.98286438]
[48.44571686 160.54991150]
[37.79970932 171.11695862]
[27.15369797 181.68400574]
[16.50769043 192.25105286]
[5.86168146 202.81809998]
[15.43874168 214.37605286]
[23.94119072 226.74595642]
[31.30056953 239.82823181]
[37.45762634 253.51751709]
[42.36278152 267.70364380]
[45.97654724 282.27233887]
[48.26982117 297.10632324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 203]
[62 202]
[63 201]
[64 200]
[65 199]
[66 198]
[68 197]
[70 195]
[71 194]
[72 178]
[73 177]
[74 176]
[76 174]
[77 173]
[78 172]
[79 171]
[80 166]
[81 165]
[82 164]
[83 163]
[84 162]
[85 161]
[86 160]
[87 158]
[88 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
