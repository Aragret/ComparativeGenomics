%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[59.48814011 564.22338867]
[51.08142471 576.66424561]
[41.37887573 588.12316895]
[30.49425507 598.46594238]
[18.55517578 607.57116699]
[5.70161772 615.33215332]
[-7.91571617 621.65795898]
[-22.13717079 626.47430420]
[-36.79600525 629.72485352]
[-51.72035599 631.37133789]
[-66.73523712 631.39459229]
[-81.66461182 629.79431152]
[-96.33343506 626.58917236]
[-110.56973267 621.81683350]
[-124.20658112 615.53326416]
[-137.08410645 607.81207275]
[-149.05130005 598.74377441]
[-159.96789551 588.43481445]
[-169.70585632 577.00592041]
[-178.15104675 564.59118652]
[-185.20442200 551.33612061]
[-190.78330994 537.39611816]
[-194.82229614 522.93463135]
[-197.27400208 508.12124634]
[-198.10971069 493.12963867]
[-197.31959534 478.13552856]
[-194.91296387 463.31475830]
[-190.91798401 448.84109497]
[-185.38153076 434.88418579]
[-178.36848450 421.60772705]
[-169.96110535 409.16732788]
[-160.25793457 397.70889282]
[-149.37275696 387.36676025]
[-137.43319702 378.26214600]
[-124.57921600 370.50183105]
[-110.96154022 364.17675781]
[-96.73983002 359.36117554]
[-82.08081818 356.11145020]
[-67.15637970 354.46572876]
[-52.14149857 354.44329834]
[-37.21221161 356.04440308]
[-22.54355621 359.25033569]
[-8.30751896 364.02340698]
[-2.03015780 350.40011597]
[4.24720287 336.77679443]
[10.52456379 323.15347290]
[16.80192375 309.53015137]
[15.10099030 294.73300171]
[27.90341377 285.43737793]
[34.18077469 271.81405640]
[40.45813370 258.19073486]
[46.73549652 244.56742859]
[52.08668137 230.55439758]
[56.48767853 216.21455383]
[60.88867569 201.87471008]
[53.70507812 188.87733459]
[57.96403885 174.27200317]
[71.64557648 166.82531738]
[76.04657745 152.48545837]
[80.44757843 138.14561462]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[99.95025635 71.55670166]
[102.61605072 56.79548645]
[105.17188263 42.01483536]
[107.61760712 27.21556282]
[110.06333923 12.41629219]
[104.67967224 -2.46076226]
[114.38859558 -13.75616360]
[99.81589508 -17.34290695]
[85.56496429 -22.04814529]
[71.72151184 -27.84358025]
[58.36878967 -34.69435883]
[45.58710861 -42.55927658]
[33.45333481 -51.39103317]
[22.04045296 -61.13651276]
[11.41709232 -71.73710632]
[1.64714932 -83.12905121]
[-7.21061945 -95.24385071]
[-15.10294151 -108.00862885]
[-21.98235130 -121.34661865]
[-27.80747414 -135.17761230]
[-32.54327393 -149.41841125]
[-36.16127396 -163.98338318]
[-38.63971329 -178.78492737]
[-39.96368408 -193.73402405]
[-40.12522507 -208.74075317]
[-39.12336349 -223.71488953]
[-36.96413040 -238.56636047]
[-33.66050339 -253.20584106]
[-29.23235321 -267.54528809]
[-23.70631409 -281.49847412]
[-17.11562157 -294.98144531]
[-9.49991131 -307.91317749]
[-0.90498531 -320.21585083]
[8.61746407 -331.81546021]
[19.01016617 -342.64227295]
[30.21061897 -352.63119507]
[42.15145874 -361.72210693]
[54.76087570 -369.86032104]
[67.96302795 -376.99697876]
[81.67852020 -383.08905029]
[95.82485962 -388.09997559]
[110.31697083 -391.99960327]
[125.06769562 -394.76443481]
[139.98832703 -396.37789917]
[154.98912048 -396.83026123]
[169.97984314 -396.11883545]
[184.87037659 -394.24783325]
[199.57113647 -391.22857666]
[213.99371338 -387.07916260]
[228.05137634 -381.82461548]
[241.65957642 -375.49645996]
[254.73646545 -368.13284302]
[267.20339966 -359.77795410]
[278.98541260 -350.48211670]
[290.01162720 -340.30120850]
[300.21572876 -329.29647827]
[309.53637695 -317.53405762]
[317.91748047 -305.08474731]
[325.30862427 -292.02340698]
[331.66540527 -278.42855835]
[336.94958496 -264.38198853]
[341.12933350 -249.96818542]
[344.17956543 -235.27381897]
[346.08190918 -220.38726807]
[346.82492065 -205.39805603]
[346.40414429 -190.39634705]
[344.82211304 -175.47236633]
[342.08834839 -160.71585083]
[338.21926880 -146.21554565]
[333.23812866 -132.05868530]
[327.17495728 -118.33039856]
[320.06613159 -105.11324310]
[311.95446777 -92.48671722]
[302.88873291 -80.52675629]
[292.92343140 -69.30529022]
[282.11853027 -58.88980865]
[270.53900146 -49.34294891]
[258.25445557 -40.72213364]
[245.33880615 -33.07920456]
[231.86972046 -26.46012688]
[217.92822266 -20.90471458]
[203.59812927 -16.44637680]
[188.96563721 -13.11192417]
[174.11874390 -10.92141342]
[159.14675903 -9.88801765]
[144.13970947 -10.01795197]
[129.18786621 -11.31043625]
[134.74645996 2.50807548]
[124.86260986 14.86201954]
[122.41687775 29.66129112]
[119.97115326 44.46055984]
[121.98198700 51.57240677]
[117.37726593 59.46128464]
[114.71147156 74.22250366]
[126.43592072 64.86636353]
[141.41494751 64.07335663]
[154.06173706 72.13925171]
[159.65936279 86.05566406]
[156.12002563 100.63212585]
[144.76383972 110.43196869]
[129.82635498 111.80009460]
[116.87890625 104.22623444]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[94.78742218 142.54661560]
[90.38642120 156.88645935]
[85.98542786 171.22630310]
[93.13404846 185.06591797]
[88.46653748 199.54586792]
[75.22852325 206.27571106]
[70.82752991 220.61555481]
[66.42652893 234.95539856]
[78.78211212 226.45013428]
[93.77082825 225.86857605]
[106.74827576 233.39093018]
[113.69324493 246.68632507]
[112.45375824 261.63504028]
[103.41388702 273.60501099]
[89.37473297 278.88726807]
[74.68648529 275.84503174]
[63.90044785 265.42092896]
[60.35881042 250.84478760]
[54.08145142 264.46810913]
[47.80408859 278.09143066]
[41.52672958 291.71472168]
[42.77866364 307.48632812]
[30.42523956 315.80752563]
[24.14788055 329.43084717]
[17.87051964 343.05413818]
[11.59315872 356.67745972]
[5.31579781 370.30078125]
[18.19373131 378.02127075]
[30.16142654 387.08889771]
[41.07856369 397.39730835]
[50.81715012 408.82565308]
[59.26300430 421.23995972]
[66.31710052 434.49462891]
[71.89673615 448.43432617]
[75.93648529 462.89556885]
[78.38899231 477.70883179]
[79.22550964 492.70040894]
[78.43621063 507.69454956]
[76.03036499 522.51544189]
[72.03617096 536.98931885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 197]
[44 196]
[45 195]
[46 194]
[47 193]
[49 191]
[50 190]
[51 189]
[52 188]
[53 178]
[54 177]
[55 176]
[58 173]
[59 172]
[60 171]
[61 170]
[62 169]
[64 167]
[65 158]
[66 157]
[67 155]
[68 154]
[69 153]
[71 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
