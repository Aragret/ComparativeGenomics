%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[151.37144470 852.41021729]
[137.35862732 847.04235840]
[123.74016571 840.74072266]
[110.57820129 833.53411865]
[97.93277740 825.45538330]
[85.86159515 816.54138184]
[74.41973877 806.83276367]
[63.65942001 796.37384033]
[53.62972641 785.21240234]
[44.37642670 773.39929199]
[35.94173813 760.98846436]
[28.36414909 748.03649902]
[21.67823410 734.60253906]
[15.91450024 720.74786377]
[11.09924603 706.53564453]
[7.25444174 692.03082275]
[4.39763212 677.29949951]
[2.54185104 662.40893555]
[1.69556653 647.42706299]
[1.86263990 632.42224121]
[3.04230857 617.46289062]
[5.22919035 602.61737061]
[8.41330719 587.95330811]
[12.58012962 573.53765869]
[17.71064568 559.43621826]
[23.78144646 545.71331787]
[30.76482964 532.43151855]
[38.62893677 519.65155029]
[47.33787918 507.43157959]
[56.85192108 495.82745361]
[67.12765503 484.89208984]
[78.11819458 474.67538452]
[89.77338409 465.22393799]
[102.04005432 456.58093262]
[114.86222839 448.78576660]
[128.18139648 441.87399292]
[141.93679810 435.87716675]
[156.06567383 430.82266235]
[170.50354004 426.73352051]
[167.39942932 412.05819702]
[164.29531860 397.38290405]
[161.19120789 382.70761108]
[158.08709717 368.03228760]
[147.88348389 357.18170166]
[152.59748840 342.07907104]
[149.49337769 327.40377808]
[146.38926697 312.72848511]
[136.18565369 301.87786865]
[140.89965820 286.77526855]
[137.46859741 272.17294312]
[133.71229553 257.65087891]
[123.03436279 247.26670837]
[127.06929016 231.96867371]
[123.31298828 217.44660950]
[119.55669403 202.92454529]
[115.80039215 188.40249634]
[112.04409027 173.88043213]
[96.58547211 168.35696411]
[87.37293243 154.56962585]
[88.20185852 137.84197998]
[98.94341278 124.77618408]
[94.97132111 110.31166077]
[89.64508057 124.33419037]
[78.08388519 133.89131165]
[63.30979919 136.48484802]
[49.18473434 131.43682861]
[39.40094757 120.06679535]
[36.51589966 105.34686279]
[41.28372955 91.12477112]
[52.45814514 81.11814880]
[67.11817932 77.94270325]
[81.43173218 82.42848969]
[91.65685272 93.40213776]
[89.87438965 78.50842285]
[88.09191895 63.61470413]
[86.30945587 48.72098923]
[76.98709106 35.93803024]
[83.15717316 22.38150406]
[73.83480835 9.59854507]
[80.00489044 -3.95797920]
[78.11159515 -18.83801460]
[76.10758209 -33.70354080]
[74.10356903 -48.56906891]
[72.09955597 -63.43460083]
[62.58790207 -76.07734680]
[68.55546570 -89.72422791]
[64.82333374 -95.18158722]
[64.46179962 -100.85312653]
[66.71991730 -105.06143951]
[65.15940094 -119.98004150]
[63.59887695 -134.89865112]
[48.71537018 -137.42526245]
[35.06594849 -143.87475586]
[23.66349411 -153.76852417]
[15.35414219 -166.37237549]
[10.75450230 -180.75103760]
[10.20589733 -195.83750916]
[13.74903870 -210.51228333]
[21.12100029 -223.68637085]
[31.77473450 -234.38218689]
[44.91966629 -241.80603027]
[59.58034897 -245.40699768]
[74.66886139 -244.91787720]
[89.06554413 -240.37495422]
[101.70206451 -232.11535645]
[111.64070892 -220.75198364]
[118.14395905 -207.12809753]
[120.72923279 -192.25466919]
[119.20468903 -177.23541260]
[113.68345642 -163.18482971]
[104.57524872 -151.14559937]
[92.55594635 -142.01110840]
[78.51747894 -136.45916748]
[80.07800293 -121.54056549]
[81.63852692 -106.62196350]
[83.42098999 -91.72824097]
[92.78930664 -80.14878082]
[86.96508026 -65.43861389]
[88.96909332 -50.57308578]
[90.97310638 -35.70755768]
[92.97712708 -20.84202766]
[96.98607635 -14.63315487]
[94.89860535 -5.74044514]
[104.09347534 5.97721577]
[98.05088806 20.59903908]
[107.24576569 32.31669998]
[101.20317078 46.93852234]
[102.98564148 61.83224106]
[104.76810455 76.72595978]
[106.55056763 91.61967468]
[109.43584442 106.33956909]
[113.40794373 120.80409241]
[126.63238525 124.69059753]
[136.13415527 134.52598572]
[139.50833130 147.66693115]
[135.97714233 160.65441895]
[126.56614685 170.12413025]
[130.32244873 184.64619446]
[134.07875061 199.16825867]
[137.83505249 213.69030762]
[141.59135437 228.21237183]
[152.53796387 239.63525391]
[148.23435974 253.89457703]
[151.99066162 268.41662598]
[155.65072632 272.13833618]
[157.34754944 276.45968628]
[157.18147278 280.53244019]
[155.57496643 283.67114258]
[166.00059509 295.57144165]
[161.06455994 309.62435913]
[164.16867065 324.29968262]
[167.27278137 338.97497559]
[177.69842529 350.87524414]
[172.76239014 364.92819214]
[175.86650085 379.60348511]
[178.97061157 394.27880859]
[182.07472229 408.95410156]
[185.17883301 423.62939453]
[200.03588867 421.52209473]
[215.00132751 420.42260742]
[230.00683594 420.33593750]
[244.98396301 421.26248169]
[259.86437988 423.19802856]
[274.58016968 426.13375854]
[289.06420898 430.05621338]
[303.25039673 434.94757080]
[317.07397461 440.78546143]
[330.47192383 447.54324341]
[343.38308716 455.19012451]
[355.74856567 463.69119263]
[367.51190186 473.00769043]
[378.61947632 483.09704590]
[389.02053833 493.91323853]
[398.66769409 505.40695190]
[407.51690674 517.52575684]
[415.52777100 530.21423340]
[422.66375732 543.41467285]
[428.89233398 557.06671143]
[434.18502808 571.10809326]
[438.51770020 585.47473145]
[441.87060547 600.10113525]
[444.22845459 614.92047119]
[445.58044434 629.86523438]
[445.92044067 644.86712646]
[445.24688721 659.85772705]
[443.56283569 674.76873779]
[440.87600708 689.53198242]
[437.19860840 704.08020020]
[432.54748535 718.34692383]
[426.94381714 732.26708984]
[420.41314697 745.77722168]
[412.98535156 758.81567383]
[404.69424438 771.32287598]
[395.57772827 783.24182129]
[385.67733765 794.51818848]
[375.03826904 805.10040283]
[363.70904541 814.94018555]
[351.74142456 823.99273682]
[339.18994141 832.21667480]
[326.11190796 839.57452393]
[312.56695557 846.03271484]
[298.61694336 851.56170654]
[284.32550049 856.13629150]
[269.75781250 859.73565674]
[254.98036194 862.34338379]
[240.06057739 863.94750977]
[225.06654358 864.54071045]
[210.06666565 864.12036133]
[195.12939453 862.68829346]
[180.32287598 860.25109863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 158]
[40 157]
[41 156]
[42 155]
[43 154]
[45 152]
[46 151]
[47 150]
[49 148]
[50 144]
[51 143]
[53 141]
[54 140]
[55 139]
[56 138]
[57 137]
[61 132]
[62 131]
[73 130]
[74 129]
[75 128]
[76 127]
[78 125]
[80 123]
[81 121]
[82 120]
[83 119]
[84 118]
[86 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
