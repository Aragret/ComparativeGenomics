%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[87.96556854 801.23107910]
[73.02490234 799.85858154]
[58.17846298 797.69287109]
[43.46832657 794.74005127]
[28.93619728 791.00848389]
[14.62326431 786.50878906]
[0.57010055 781.25372314]
[-13.18345833 775.25817871]
[-26.59842682 768.53912354]
[-39.63677979 761.11560059]
[-52.26155472 753.00866699]
[-64.43696594 744.24133301]
[-76.12850952 734.83837891]
[-87.30303192 724.82653809]
[-97.92886353 714.23413086]
[-107.97587585 703.09118652]
[-117.41560364 691.42938232]
[-126.22128296 679.28161621]
[-134.36795044 666.68249512]
[-141.83251953 653.66760254]
[-148.59382629 640.27386475]
[-154.63270569 626.53924561]
[-159.93203735 612.50268555]
[-164.47679138 598.20404053]
[-168.25410461 583.68371582]
[-171.25326538 568.98297119]
[-173.46575928 554.14343262]
[-174.88533020 539.20715332]
[-175.50794983 524.21649170]
[-175.33183289 509.21398926]
[-174.35751343 494.24206543]
[-172.58773804 479.34323120]
[-170.02751160 464.55972290]
[-166.68409729 449.93341064]
[-162.56698608 435.50579834]
[-157.68783569 421.31771851]
[-152.06047058 407.40945435]
[-145.70086670 393.82040405]
[-138.62702942 380.58908081]
[-130.85900879 367.75299072]
[-122.41883850 355.34851074]
[-113.33043671 343.41082764]
[-103.61956787 331.97378540]
[-93.31375122 321.06976318]
[-82.44220734 310.72973633]
[-71.03575134 300.98294067]
[-59.12671661 291.85702515]
[-46.74885559 283.37789917]
[-33.93726349 275.56954956]
[-20.72824669 268.45413208]
[-7.15925503 262.05181885]
[6.73125172 256.38073730]
[20.90389824 251.45700073]
[35.31851196 247.29454041]
[49.93423080 243.90513611]
[64.70962524 241.29844666]
[79.60281372 239.48181152]
[94.57157898 238.46040344]
[94.34825134 223.46206665]
[94.12492371 208.46372986]
[93.90159607 193.46539307]
[93.67826843 178.46705627]
[85.75233459 165.85638428]
[93.28330994 151.94255066]
[93.05998230 136.94421387]
[92.83665466 121.94587708]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[92.50000000 76.72462463]
[85.66844177 90.07864380]
[75.39324188 101.00659943]
[62.48474121 108.64667511]
[47.96096420 112.39633179]
[32.96731567 111.95986176]
[18.68625641 107.37168884]
[6.24405003 98.99365234]
[-3.37805891 87.48648071]
[-9.42123127 73.75767517]
[-11.40887642 58.88994598]
[-9.18424129 44.05583191]
[-2.92276907 30.42520523]
[6.88173389 19.07303619]
[19.45604324 10.89460659]
[33.80849838 6.53489780]
[48.80720139 6.33773661]
[63.26929474 10.31867123]
[76.05423737 18.16374969]
[86.15375519 29.25427437]
[92.77135468 42.71560287]
[95.38526917 57.48958588]
[99.78627014 43.14973831]
[104.18726349 28.80989075]
[108.58826447 14.47004318]
[112.98926544 0.13019638]
[117.39025879 -14.20965099]
[112.85189819 -32.05579376]
[126.15587616 -43.50004959]
[130.34288025 -57.90383148]
[134.52989197 -72.30761719]
[121.21482086 -79.32855225]
[109.58582306 -88.88634491]
[100.11911774 -100.58960724]
[93.20234680 -113.95909119]
[89.11875916 -128.44734192]
[88.03556824 -143.46104431]
[89.99712372 -158.38543701]
[94.92311859 -172.60932922]
[102.61182404 -185.55030823]
[112.74839020 -196.67842102]
[124.91773987 -205.53797913]
[138.62155151 -211.76618958]
[153.29862976 -215.10803223]
[168.34800720 -215.42663574]
[183.15338135 -212.70895386]
[197.10848999 -207.06628418]
[209.64189148 -198.72970581]
[220.24034119 -188.04055786]
[228.46984863 -175.43658447]
[233.99340820 -161.43389893]
[236.58483887 -146.60591125]
[236.13803101 -131.55981445]
[232.67127991 -116.91172028]
[226.32652283 -103.26148224]
[217.36360168 -91.16805267]
[206.14953613 -81.12666321]
[193.14352417 -73.54849243]
[178.87817383 -68.74386597]
[163.93762207 -66.90953064]
[148.93368530 -68.12060547]
[144.74667358 -53.71681976]
[140.55966187 -39.31303787]
[146.10888672 -28.56442451]
[142.73849487 -16.53013039]
[131.73010254 -9.80865288]
[127.32910919 4.53119421]
[122.92810822 18.87104225]
[118.52711487 33.21088791]
[114.12611389 47.55073547]
[109.72512054 61.89058304]
[107.50000000 76.72462463]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[107.83499146 121.72254944]
[108.05831909 136.72088623]
[108.28164673 151.71922302]
[116.22355652 165.40266418]
[108.67660522 178.24372864]
[108.89993286 193.24206543]
[109.12326050 208.24040222]
[109.34658813 223.23873901]
[109.56991577 238.23707581]
[124.56245422 238.81234741]
[139.50312805 240.18475342]
[154.34957886 242.35038757]
[169.05973816 245.30310059]
[183.59188843 249.03454590]
[197.90486145 253.53414917]
[211.95805359 258.78912354]
[225.71165466 264.78460693]
[239.12666321 271.50357056]
[252.16505432 278.92700195]
[264.78988647 287.03387451]
[276.96536255 295.80114746]
[288.65695190 305.20401001]
[299.83154297 315.21578979]
[310.45742798 325.80810547]
[320.50451660 336.95095825]
[329.94433594 348.61276245]
[338.75009155 360.76043701]
[346.89682007 373.35952759]
[354.36148071 386.37438965]
[361.12286377 399.76806641]
[367.16183472 413.50262451]
[372.46124268 427.53912354]
[377.00610352 441.83779907]
[380.78350830 456.35806274]
[383.78277588 471.05880737]
[385.99536133 485.89831543]
[387.41500854 500.83459473]
[388.03771973 515.82525635]
[387.86172485 530.82775879]
[386.88748169 545.79968262]
[385.11779785 560.69854736]
[382.55767822 575.48205566]
[379.21435547 590.10839844]
[375.09732056 604.53601074]
[370.21826172 618.72412109]
[364.59100342 632.63244629]
[358.23147583 646.22155762]
[351.15771484 659.45288086]
[343.38977051 672.28906250]
[334.94970703 684.69354248]
[325.86135864 696.63128662]
[316.15057373 708.06842041]
[305.84481812 718.97247314]
[294.97335815 729.31262207]
[283.56695557 739.05944824]
[271.65795898 748.18542480]
[259.28015137 756.66467285]
[246.46862793 764.47308350]
[233.25965881 771.58862305]
[219.69070435 777.99096680]
[205.80023193 783.66217041]
[191.62760925 788.58599854]
[177.21302795 792.74853516]
[162.59733582 796.13800049]
[147.82194519 798.74481201]
[132.92877197 800.56152344]
[117.96001434 801.58306885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 152]
[59 151]
[60 150]
[61 149]
[62 148]
[64 146]
[65 145]
[66 144]
[67 143]
[69 142]
[70 141]
[91 140]
[92 139]
[93 138]
[94 137]
[95 136]
[96 135]
[98 132]
[99 131]
[100 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
