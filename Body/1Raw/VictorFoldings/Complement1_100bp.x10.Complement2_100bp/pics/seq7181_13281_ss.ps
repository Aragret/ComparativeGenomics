%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[219.71012878 632.47332764]
[211.14202881 620.15356445]
[203.46429443 607.26013184]
[196.71517944 593.85717773]
[190.92829895 580.01159668]
[186.13250732 565.79223633]
[182.35166931 551.27008057]
[179.60464478 536.51733398]
[177.90512085 521.60760498]
[177.26153564 506.61511230]
[177.67712402 491.61456299]
[179.14979553 476.68069458]
[181.67222595 461.88793945]
[185.23184204 447.30993652]
[189.81091309 433.01934814]
[195.38662720 419.08734131]
[201.93121338 405.58337402]
[209.41204834 392.57467651]
[217.79187012 380.12609863]
[227.02894592 368.29962158]
[237.07723999 357.15417480]
[247.88668823 346.74530029]
[259.40344238 337.12484741]
[245.68011475 331.33523560]
[243.87498474 315.61737061]
[235.09437561 303.45590210]
[226.31376648 291.29443359]
[217.53317261 279.13299561]
[208.75256348 266.97152710]
[199.97195435 254.81007385]
[191.19136047 242.64862061]
[182.41075134 230.48716736]
[170.52281189 228.25036621]
[163.10801697 218.19032288]
[164.58036804 205.37646484]
[155.98181152 193.08563232]
[147.38323975 180.79478455]
[138.78468323 168.50395203]
[130.18612671 156.21311951]
[116.55050659 150.21983337]
[114.97959137 134.47680664]
[106.38102722 122.18597412]
[97.78246307 109.89513397]
[90.94866943 105.62057495]
[89.14897919 97.35668182]
[80.73435974 84.93918610]
[66.58762360 77.85537720]
[65.85314178 62.97889328]
[51.70639801 55.89508057]
[50.97191620 41.01859665]
[42.55729675 28.60110092]
[28.41055870 21.51729202]
[27.67607689 6.64080715]
[19.26145744 -5.77668810]
[10.84683895 -18.19418335]
[2.43222022 -30.61167908]
[-5.98239851 -43.02917480]
[-19.24968338 -35.99878311]
[-33.19932556 -30.44408035]
[-47.66777039 -26.43018341]
[-62.48538208 -24.00415993]
[-77.47843170 -23.19445038]
[-92.47113800 -24.01054955]
[-107.28771973 -26.44289017]
[-121.75444794 -30.46295166]
[-135.70172119 -36.02360153]
[-148.96600342 -43.05964661]
[-161.39179993 -51.48859024]
[-172.83338928 -61.21160507]
[-183.15666199 -72.11470032]
[-192.24055481 -84.07003784]
[-199.97857666 -96.93744659]
[-206.27999878 -110.56607056]
[-211.07093811 -124.79611206]
[-214.29524231 -139.46073914]
[-215.91508484 -154.38800049]
[-215.91146851 -169.40290833]
[-214.28446960 -184.32939148]
[-211.05313110 -198.99246216]
[-206.25535583 -213.22019958]
[-199.94738770 -226.84579468]
[-192.20320129 -239.70948792]
[-183.11357117 -251.66047668]
[-172.78506470 -262.55859375]
[-161.33880615 -272.27612305]
[-148.90896606 -280.69909668]
[-135.64131165 -287.72879028]
[-121.69136810 -293.28274536]
[-107.22270966 -297.29586792]
[-92.40496826 -299.72106934]
[-77.41187286 -300.52999878]
[-62.41920853 -299.71307373]
[-47.60276413 -297.27993774]
[-33.13624573 -293.25909424]
[-19.18927383 -287.69769287]
[-5.92536449 -280.66094971]
[6.49996805 -272.23132324]
[17.94104385 -262.50769043]
[28.26372147 -251.60404968]
[37.34697342 -239.64822388]
[45.08430099 -226.78039551]
[51.38499069 -213.15144348]
[56.17517090 -198.92114258]
[59.39867401 -184.25634766]
[61.01771545 -169.32897949]
[61.01330185 -154.31408691]
[59.38549423 -139.38768005]
[56.15336990 -124.72478485]
[51.35482788 -110.49730682]
[45.04613113 -96.87204742]
[37.30124283 -84.00876617]
[28.21096802 -72.05828094]
[17.88188362 -61.16070175]
[6.43509722 -51.44379425]
[14.84971619 -39.02629852]
[23.26433372 -26.60880280]
[31.67895317 -14.19130707]
[40.09357071 -1.77381146]
[53.63843918 4.42181587]
[54.97479248 20.18648338]
[63.38941193 32.60397720]
[76.93428040 38.79960632]
[78.27062988 54.56427383]
[91.81550598 60.75989914]
[93.15185547 76.52456665]
[101.56647491 88.94206238]
[110.07330322 101.29656982]
[118.67186737 113.58740997]
[127.27043152 125.87825012]
[141.52107239 132.75065613]
[142.47695923 147.61454773]
[151.07551575 159.90538025]
[159.67408752 172.19622803]
[168.27264404 184.48706055]
[176.87121582 196.77790833]
[193.73315430 204.17764282]
[194.57220459 221.70655823]
[203.35281372 233.86801147]
[212.13342285 246.02947998]
[220.91401672 258.19091797]
[229.69462585 270.35238647]
[238.47521973 282.51385498]
[247.25582886 294.67529297]
[256.03643799 306.83676147]
[270.38781738 313.49621582]
[271.56491089 328.34423828]
[284.32067871 320.43988037]
[297.60223389 313.45495605]
[311.34344482 307.42434692]
[325.47579956 302.37802124]
[339.92892456 298.34115601]
[354.63079834 295.33386230]
[369.50817871 293.37112427]
[384.48693848 292.46273804]
[399.49249268 292.61318970]
[414.45004272 293.82171631]
[429.28509521 296.08236694]
[443.92370605 299.38381958]
[458.29299927 303.70965576]
[472.32131958 309.03829956]
[485.93884277 315.34323120]
[499.07769775 322.59304810]
[511.67242432 330.75158691]
[523.66027832 339.77822876]
[534.98150635 349.62799072]
[545.57977295 360.25183105]
[555.40228271 371.59677124]
[564.39996338 383.60635376]
[572.52813721 396.22070312]
[579.74627686 409.37698364]
[586.01837158 423.00964355]
[591.31323242 437.05078125]
[595.60443115 451.43045044]
[598.87060547 466.07696533]
[601.09552002 480.91741943]
[602.26800537 495.87783813]
[602.38226318 510.88369751]
[601.43780518 525.86022949]
[599.43920898 540.73284912]
[596.39648438 555.42742920]
[592.32482910 569.87078857]
[587.24450684 583.99096680]
[581.18078613 597.71759033]
[574.16387939 610.98229980]
[566.22882080 623.71899414]
[557.41503906 635.86419678]
[547.76654053 647.35748291]
[537.33129883 658.14147949]
[526.16137695 668.16259766]
[514.31243896 677.37078857]
[501.84344482 685.72021484]
[488.81652832 693.16931152]
[475.29663086 699.68090820]
[461.35110474 705.22265625]
[447.04937744 709.76684570]
[432.46273804 713.29089355]
[417.66384888 715.77722168]
[402.72644043 717.21350098]
[387.72494507 717.59246826]
[372.73406982 716.91235352]
[357.82852173 715.17645264]
[343.08251953 712.39343262]
[328.56961060 708.57720947]
[314.36199951 703.74670410]
[300.53054810 697.92608643]
[287.14413452 691.14428711]
[274.26943970 683.43518066]
[261.97061157 674.83703613]
[250.30892944 665.39276123]
[239.34248352 655.14941406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 146]
[25 144]
[26 143]
[27 142]
[28 141]
[29 140]
[30 139]
[31 138]
[32 137]
[35 135]
[36 134]
[37 133]
[38 132]
[39 131]
[41 129]
[42 128]
[43 127]
[45 126]
[46 125]
[48 123]
[50 121]
[51 120]
[53 118]
[54 117]
[55 116]
[56 115]
[57 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
