%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[107.65925598 858.29736328]
[92.73175812 856.79467773]
[77.89429474 854.57250977]
[63.18152237 851.63610840]
[48.62779617 847.99230957]
[34.26711273 843.64959717]
[20.13300896 838.61816406]
[6.25849724 832.90972900]
[-7.32401896 826.53765869]
[-20.58281517 819.51678467]
[-33.48692703 811.86352539]
[-46.00621414 803.59576416]
[-58.11143875 794.73284912]
[-69.77433014 785.29541016]
[-80.96764374 775.30548096]
[-91.66523743 764.78649902]
[-101.84213257 753.76293945]
[-111.47455597 742.26055908]
[-120.54000854 730.30621338]
[-129.01731873 717.92785645]
[-136.88670349 705.15441895]
[-144.12974548 692.01568604]
[-150.72956848 678.54235840]
[-156.67073059 664.76586914]
[-161.93937683 650.71850586]
[-166.52319336 636.43292236]
[-170.41146851 621.94262695]
[-173.59512329 607.28131104]
[-176.06671143 592.48339844]
[-177.82049561 577.58331299]
[-178.85234070 562.61590576]
[-179.15986633 547.61608887]
[-178.74232483 532.61895752]
[-177.60072327 517.65954590]
[-175.73770142 502.77270508]
[-173.15763855 487.99328613]
[-169.86653137 473.35574341]
[-165.87207031 458.89434814]
[-161.18360901 444.64279175]
[-155.81207275 430.63439941]
[-149.77001953 416.90188599]
[-143.07154846 403.47732544]
[-135.73231506 390.39208984]
[-127.76946259 377.67669678]
[-119.20158386 365.36087036]
[-110.04869080 353.47335815]
[-100.33216095 342.04193115]
[-90.07468414 331.09329224]
[-79.30022430 320.65304565]
[-68.03393555 310.74551392]
[-56.30213928 301.39385986]
[-44.13223267 292.61996460]
[-31.55263901 284.44424438]
[-18.59273911 276.88586426]
[-5.28280210 269.96243286]
[8.34608650 263.69015503]
[22.26209641 258.08364868]
[36.43272400 253.15600586]
[50.82487488 248.91876221]
[65.40493774 245.38180542]
[80.13885498 242.55337524]
[94.99221802 240.44010925]
[109.93032837 239.04692078]
[109.26054382 224.06188965]
[108.59075928 209.07684326]
[100.29287720 196.70776367]
[107.40625000 182.57586670]
[105.62377930 167.68214417]
[102.73851013 152.96224976]
[99.85323334 138.24237061]
[96.96796417 123.52247620]
[94.08268738 108.80258179]
[90.65162659 94.20025635]
[79.53616333 82.94161987]
[83.62699127 68.61980438]
[72.82360840 61.57354736]
[69.81302643 49.44423676]
[75.67980957 38.86560822]
[71.92351532 24.34354973]
[68.16721344 9.82149029]
[64.41091156 -4.70056868]
[49.39427567 -3.75339293]
[34.46978760 -5.66551781]
[20.17696381 -10.36782074]
[7.03247643 -17.69031715]
[-4.48850822 -27.36830330]
[-13.96951389 -39.05192566]
[-21.06780815 -52.31882858]
[-25.52679253 -66.68942261]
[-27.18527794 -81.64421844]
[-25.98330879 -96.64260864]
[-21.96433830 -111.14241791]
[-15.27364731 -124.61947632]
[-6.15310240 -136.58660889]
[5.06759548 -146.61119080]
[17.98282623 -154.33087158]
[32.12570953 -159.46655273]
[46.98499298 -161.83261108]
[62.02351761 -161.34350586]
[76.69765472 -158.01692200]
[90.47694397 -151.97309875]
[102.86326599 -143.43054199]
[113.40887451 -132.69802856]
[121.73253632 -120.16355133]
[127.53337097 -106.28022766]
[130.60168457 -91.54991913]
[130.82653809 -76.50511932]
[128.19981384 -61.68969345]
[122.81648254 -47.63920593]
[114.87113190 -34.86157608]
[104.65097809 -23.81870461]
[92.52548218 -14.90978432]
[78.93296814 -8.45686913]
[82.68927002 6.06518984]
[86.44557190 20.58724976]
[90.20187378 35.10931015]
[103.15921783 46.94460297]
[98.09151459 64.64770508]
[108.92286682 74.87174988]
[105.11614990 90.22816467]
[114.69104767 78.68167114]
[129.69044495 78.81578064]
[139.05735779 90.53162384]
[135.88684082 105.19271851]
[122.51607513 111.99145508]
[108.80258179 105.91731262]
[111.68785095 120.63719940]
[114.57312775 135.35708618]
[117.45839691 150.07698059]
[120.34367371 164.79687500]
[126.69810486 151.20933533]
[138.93811035 142.53855896]
[153.86416626 141.05105591]
[167.57466125 147.13568115]
[176.48568726 159.20188904]
[178.26791382 174.09564209]
[172.45550537 187.92372131]
[160.56777954 197.07150269]
[145.71217346 199.14779663]
[131.77191162 193.60984802]
[122.39128876 181.90608215]
[130.73707581 195.34700012]
[123.57579803 208.40705872]
[124.24558258 223.39210510]
[124.91536713 238.37713623]
[139.91821289 238.43205261]
[154.90087891 239.21174622]
[169.82838440 240.71440125]
[184.66584778 242.93647766]
[199.37864685 245.87283325]
[213.93238831 249.51657104]
[228.29309082 253.85919189]
[242.42721558 258.89056396]
[256.30175781 264.59893799]
[269.88430786 270.97094727]
[283.14312744 277.99176025]
[296.04727173 285.64492798]
[308.56661987 293.91262817]
[320.67187500 302.77551270]
[332.33480835 312.21289062]
[343.52816772 322.20275879]
[354.22579956 332.72171021]
[364.40277100 343.74523926]
[374.03524780 355.24755859]
[383.10073853 367.20184326]
[391.57812500 379.58013916]
[399.44754028 392.35357666]
[406.69067383 405.49227905]
[413.29055786 418.96557617]
[419.23178101 432.74200439]
[424.50048828 446.78936768]
[429.08438110 461.07492065]
[432.97271729 475.56521606]
[436.15643311 490.22647095]
[438.62811279 505.02441406]
[440.38195801 519.92449951]
[441.41387939 534.89190674]
[441.72146606 549.89166260]
[441.30401611 564.88879395]
[440.16247559 579.84826660]
[438.29953003 594.73510742]
[435.71951294 609.51452637]
[432.42846680 624.15203857]
[428.43408203 638.61352539]
[423.74569702 652.86505127]
[418.37423706 666.87347412]
[412.33224487 680.60601807]
[405.63385010 694.03063965]
[398.29467773 707.11590576]
[390.33187866 719.83135986]
[381.76406860 732.14721680]
[372.61120605 744.03472900]
[362.89474487 755.46624756]
[352.63732910 766.41491699]
[341.86291504 776.85522461]
[330.59664917 786.76281738]
[318.86489868 796.11450195]
[306.69503784 804.88848877]
[294.11547852 813.06420898]
[281.15563965 820.62268066]
[267.84573364 827.54614258]
[254.21685791 833.81854248]
[240.30087280 839.42510986]
[226.13027954 844.35278320]
[211.73814392 848.59008789]
[197.15809631 852.12713623]
[182.42419434 854.95562744]
[167.57084656 857.06896973]
[152.63273621 858.46221924]
[137.64476013 859.13214111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 145]
[64 144]
[65 143]
[67 141]
[68 130]
[69 129]
[70 128]
[71 127]
[72 126]
[73 120]
[75 118]
[78 116]
[79 115]
[80 114]
[81 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
