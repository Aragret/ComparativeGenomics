%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[160.40618896 659.66491699]
[148.74758911 650.21807861]
[137.73883057 640.02136230]
[127.42804718 629.11938477]
[117.86032867 617.55981445]
[109.07751465 605.39312744]
[101.11800385 592.67260742]
[94.01661682 579.45379639]
[87.80438232 565.79461670]
[82.50849152 551.75469971]
[78.15207672 537.39544678]
[74.75421143 522.77972412]
[72.32973480 507.97134399]
[70.88925934 493.03512573]
[70.43907928 478.03634644]
[70.98116302 463.04061890]
[72.51314545 448.11352539]
[75.02832794 433.32028198]
[78.51570129 418.72564697]
[82.96002197 404.39337158]
[88.34185791 390.38616943]
[94.63768005 376.76528931]
[101.81994629 363.59030151]
[109.85725403 350.91879272]
[118.71446991 338.80615234]
[128.35284424 327.30538940]
[138.73023987 316.46679688]
[149.80128479 306.33773804]
[161.51756287 296.96252441]
[173.82783508 288.38217163]
[186.67828369 280.63415527]
[179.79887390 267.30471802]
[172.91944885 253.97528076]
[160.20678711 246.21400452]
[160.75323486 230.40223694]
[153.87382507 217.07281494]
[138.61695862 208.40130615]
[139.63784790 190.01545715]
[132.56074524 176.78993225]
[125.48363495 163.56439209]
[118.40653229 150.33886719]
[111.32942963 137.11334229]
[104.25231934 123.88781738]
[97.17521667 110.66229248]
[90.39548492 124.04269409]
[75.73891449 127.23404694]
[64.00976562 117.88379669]
[63.85434341 102.88460541]
[75.38721466 93.29331207]
[90.10544586 96.17928314]
[84.03161621 82.46401978]
[68.90789795 71.95903015]
[71.45623016 54.59605789]
[58.65380859 45.30043793]
[60.35474014 30.50327301]
[54.07738113 16.87995720]
[47.80001831 3.25664091]
[41.52265930 -10.36667538]
[35.24529648 -23.98999214]
[28.96793747 -37.61330795]
[22.69057655 -51.23662186]
[8.48149776 -46.38831329]
[-6.15078497 -43.02671814]
[-21.05116081 -41.18746185]
[-36.06167603 -40.89005280]
[-51.02321243 -42.13763809]
[-65.77716827 -44.91699219]
[-80.16714478 -49.19865417]
[-94.04059601 -54.93723679]
[-107.25046539 -62.07190323]
[-119.65670776 -70.52703094]
[-131.12782288 -80.21298218]
[-141.54219055 -91.02708435]
[-150.78944397 -102.85469818]
[-158.77153015 -115.57044983]
[-165.40383911 -129.03953552]
[-170.61607361 -143.11918640]
[-174.35298157 -157.66015625]
[-176.57493591 -172.50828552]
[-177.25840759 -187.50617981]
[-176.39611816 -202.49485779]
[-173.99722290 -217.31542969]
[-170.08717346 -231.81079102]
[-164.70738220 -245.82728577]
[-157.91490173 -259.21630859]
[-149.78172302 -271.83596802]
[-140.39408875 -283.55245972]
[-129.85147095 -294.24157715]
[-118.26565552 -303.79003906]
[-105.75945282 -312.09658813]
[-92.46543884 -319.07321167]
[-78.52452850 -324.64590454]
[-64.08451080 -328.75564575]
[-49.29845810 -331.35885620]
[-34.32310867 -332.42791748]
[-19.31720734 -331.95147705]
[-4.43982792 -329.93466187]
[10.15132236 -326.39880371]
[24.30156708 -321.38137817]
[37.86090851 -314.93557739]
[50.68560791 -307.12973022]
[62.63971710 -298.04660034]
[73.59651184 -287.78244019]
[83.43985748 -276.44610596]
[92.06539154 -264.15774536]
[99.38169098 -251.04759216]
[105.31118774 -237.25465393]
[109.79103851 -222.92514038]
[112.77374268 -208.21095276]
[114.22769165 -193.26805115]
[114.13746643 -178.25486755]
[112.50402832 -163.33052063]
[109.34468842 -148.65324402]
[104.69293976 -134.37860107]
[98.59809113 -120.65793610]
[91.12475586 -107.63667297]
[82.35214996 -95.45285034]
[72.37326813 -84.23563385]
[61.29389954 -74.10391998]
[49.23148346 -65.16512299]
[36.31389236 -57.51398468]
[42.59125519 -43.89066696]
[48.86861420 -30.26735115]
[55.14597321 -16.64403534]
[61.42333603 -3.02071977]
[67.70069885 10.60259628]
[73.97805786 24.22591209]
[86.33148193 32.54710007]
[85.07954407 48.31869507]
[96.31524658 52.80038452]
[101.65651703 64.09882355]
[97.74687958 76.39018250]
[103.82071686 90.10544586]
[110.40074158 103.58518219]
[117.47785187 116.81071472]
[124.55495453 130.03623962]
[131.63206482 143.26176453]
[138.70916748 156.48728943]
[145.78627014 169.71281433]
[152.86337280 182.93835449]
[164.95907593 187.41682434]
[170.58134460 198.57809448]
[167.20326233 210.19338989]
[174.08267212 223.52282715]
[187.28739929 232.23751831]
[186.24888611 247.09587097]
[193.12829590 260.42529297]
[200.00770569 273.75473022]
[213.76765442 267.76895142]
[227.89311218 262.70565796]
[242.32234192 258.58697510]
[256.99221802 255.43096924]
[271.83859253 253.25138855]
[286.79656982 252.05780029]
[301.80072021 251.85539246]
[316.78546143 252.64508057]
[331.68524170 254.42338562]
[346.43490601 257.18252563]
[360.96997070 260.91046143]
[375.22686768 265.59091187]
[389.14328003 271.20333862]
[402.65832520 277.72326660]
[415.71292114 285.12213135]
[428.24993896 293.36764526]
[440.21463013 302.42370605]
[451.55462646 312.25070190]
[462.22036743 322.80569458]
[472.16519165 334.04251099]
[481.34561157 345.91201782]
[489.72152710 358.36233521]
[497.25625610 371.33898926]
[503.91687012 384.78524780]
[509.67425537 398.64230347]
[514.50323486 412.84960938]
[518.38262939 427.34497070]
[521.29559326 442.06503296]
[523.22930908 456.94543457]
[524.17535400 471.92111206]
[524.12951660 486.92657471]
[523.09210205 501.89617920]
[521.06762695 516.76452637]
[518.06488037 531.46649170]
[514.09704590 545.93792725]
[509.18142700 560.11547852]
[503.33956909 573.93713379]
[496.59701538 587.34246826]
[488.98321533 600.27288818]
[480.53149414 612.67187500]
[471.27877808 624.48510742]
[461.26553345 635.66101074]
[450.53558350 646.15075684]
[439.13580322 655.90832520]
[427.11608887 664.89117432]
[414.52893066 673.05999756]
[401.42944336 680.37908936]
[387.87484741 686.81634521]
[373.92443848 692.34375000]
[359.63925171 696.93707275]
[345.08169556 700.57623291]
[330.31546021 703.24530029]
[315.40509033 704.93261719]
[300.41583252 705.63085938]
[285.41317749 705.33685303]
[270.46276855 704.05200195]
[255.62997437 701.78179932]
[240.97962952 698.53631592]
[226.57582092 694.32965088]
[212.48152161 689.18023682]
[198.75837708 683.11059570]
[185.46636963 676.14721680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 148]
[32 147]
[33 146]
[35 144]
[36 143]
[38 140]
[39 139]
[40 138]
[41 137]
[42 136]
[43 135]
[44 134]
[50 133]
[51 132]
[53 129]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
