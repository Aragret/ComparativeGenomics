%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[68.11038208 610.57012939]
[53.84562302 615.28179932]
[39.08012390 618.05010986]
[24.07738686 618.82556152]
[9.10515785 617.59442139]
[-5.56936789 614.37854004]
[-19.68430519 609.23541260]
[-32.98775864 602.25677490]
[-45.24230957 593.56713867]
[-56.22926331 583.32165527]
[-65.75254059 571.70306396]
[-73.64219666 558.91882324]
[-79.75742340 545.19708252]
[-83.98908997 530.78259277]
[-86.26167297 515.93273926]
[-86.53462219 500.91244507]
[-84.80306244 485.98980713]
[-81.09790039 471.43112183]
[-75.48525238 457.49621582]
[-68.06528473 444.43377686]
[-58.97041702 432.47689819]
[-48.36295700 421.83898926]
[-36.43220901 412.70986938]
[-23.39108658 405.25247192]
[-9.47233009 399.59991455]
[5.07566881 395.85302734]
[19.99328232 394.07867432]
[35.01428604 394.30856323]
[37.23940277 379.47451782]
[39.46451950 364.64047241]
[41.68964005 349.80642700]
[43.91475677 334.97238159]
[46.13987350 320.13833618]
[44.58403778 317.80648804]
[43.85813904 314.71786499]
[44.25504303 311.18545532]
[45.94901657 307.62246704]
[48.96440887 304.49813843]
[52.06851959 289.82284546]
[55.17263031 275.14752197]
[50.23660660 261.09460449]
[60.66223526 249.19432068]
[63.76634598 234.51901245]
[66.87046051 219.84370422]
[54.15578079 211.99372864]
[44.87661743 200.24526978]
[40.16804504 186.00434875]
[40.61669159 170.98368835]
[46.18769073 156.99676514]
[56.22659683 145.73884583]
[69.53618622 138.58155823]
[84.51921082 136.40570068]
[87.62332153 121.73040009]
[90.72742462 107.05509949]
[80.16557312 117.70626068]
[66.05747986 122.80151367]
[51.12718964 121.35704041]
[38.25751495 113.65175629]
[29.93338776 101.17341614]
[27.76206398 86.33140564]
[32.16279221 71.99147797]
[42.28586578 60.92244339]
[56.17667007 55.26156998]
[71.15311432 56.10187912]
[84.32347870 63.28111649]
[93.14477539 75.41309357]
[95.91370392 90.15657806]
[101.57649231 76.26654816]
[107.23927307 62.37652206]
[112.90206146 48.48649597]
[100.80590820 57.35684204]
[86.16513062 60.61992645]
[71.44696808 57.72586060]
[59.13167953 49.16235352]
[51.29461288 36.37249756]
[49.25644684 21.51161385]
[53.36065674 7.08401918]
[62.91560364 -4.47898197]
[76.31111145 -11.22882175]
[91.28980255 -12.02803230]
[105.32750702 -6.74193335]
[116.05862427 3.73867464]
[121.67477417 17.64762497]
[121.22914124 32.64262772]
[123.32044220 23.75081825]
[129.67498779 19.97702408]
[138.08961487 7.55952787]
[146.50422668 -4.85796785]
[154.91883850 -17.27546310]
[163.33346558 -29.69295883]
[171.74807739 -42.11045456]
[180.16270447 -54.52795029]
[188.57731628 -66.94544220]
[196.99194336 -79.36293793]
[203.37054443 -92.93914795]
[207.55755615 -107.34292603]
[211.74456787 -121.74671173]
[215.93157959 -136.15049744]
[202.46839905 -142.85739136]
[190.41925049 -151.86061096]
[180.17149353 -162.87075806]
[172.05453491 -175.53388977]
[166.32931519 -189.44293213]
[163.17985535 -204.15077209]
[162.70739746 -219.18461609]
[164.92715454 -234.06120300]
[169.76774597 -248.30227661]
[177.07359314 -261.45007324]
[186.60980225 -273.08193970]
[198.06987000 -282.82394409]
[211.08537292 -290.36294556]
[225.23791504 -295.45660400]
[240.07257080 -297.94113159]
[255.11244202 -297.73669434]
[269.87408447 -294.84988403]
[283.88296509 -289.37344360]
[296.68875122 -281.48345947]
[307.87976074 -271.43356323]
[317.09631348 -259.54681396]
[324.04208374 -246.20529175]
[328.49383545 -231.83790588]
[330.30841064 -216.90649414]
[329.42752075 -201.89105225]
[325.87945557 -187.27424622]
[319.77828979 -173.52593994]
[311.32015991 -161.08811951]
[300.77694702 -150.36058044]
[288.48754883 -141.68817139]
[274.84704590 -135.34968567]
[260.29391479 -131.54887390]
[245.29597473 -130.40791321]
[230.33535767 -131.96348572]
[226.14834595 -117.55970001]
[221.96133423 -103.15592194]
[217.77432251 -88.75213623]
[228.01071167 -99.71645355]
[240.79684448 -107.55959320]
[255.20967102 -111.71535492]
[270.20874023 -111.88372040]
[284.71121216 -108.05253601]
[297.67019653 -100.49839020]
[308.15011597 -89.76661682]
[315.39447021 -76.63194275]
[318.88021851 -62.04258728]
[318.35580444 -47.05175781]
[313.85900879 -32.74165726]
[305.71450806 -20.14534569]
[294.51025391 -10.17216206]
[281.05505371 -3.54207754]
[266.32031250 -0.73372430]
[251.36967468 -1.94983959]
[237.28250122 -7.10263109]
[225.07571411 -15.82011414]
[215.63055420 -27.47296715]
[209.62887573 -41.21995926]
[207.50393677 -56.06868362]
[209.40943909 -70.94831848]
[200.99481201 -58.53082657]
[192.58020020 -46.11333084]
[184.16557312 -33.69583511]
[175.75096130 -21.27833939]
[167.33633423 -8.86084461]
[158.92172241 3.55665088]
[150.50711060 15.97414589]
[142.09248352 28.39164162]
[133.77053833 40.87143707]
[126.79209137 54.14928055]
[121.12930298 68.03930664]
[115.46651459 81.92933655]
[109.80372620 95.81935883]
[105.40273285 110.15921021]
[102.29862213 124.83451080]
[99.19451141 139.50981140]
[112.01320648 147.56626892]
[121.28469086 159.49989319]
[125.90519714 173.85855103]
[125.33543396 188.90333557]
[119.66345215 202.81915283]
[109.59169769 213.93376160]
[96.35007477 220.91862488]
[81.54576111 222.94781494]
[78.44165039 237.62312317]
[75.33753967 252.29843140]
[80.05153656 267.40103149]
[69.84793091 278.25164795]
[66.74382019 292.92694092]
[63.63971329 307.60223389]
[60.97391510 322.36346436]
[58.74879837 337.19750977]
[56.52368164 352.03155518]
[54.29856491 366.86560059]
[52.07344818 381.69964600]
[49.84833145 396.53369141]
[64.27570343 400.72106934]
[78.01620483 406.79415894]
[90.82460022 414.64453125]
[102.47232819 424.13208008]
[112.75151062 435.08752441]
[121.47870636 447.31533813]
[128.49816895 460.59732056]
[133.68461609 474.69641113]
[136.94551086 489.36099243]
[138.22264099 504.32937622]
[137.49322510 519.33441162]
[134.77027893 534.10833740]
[130.10240173 548.38751221]
[123.57287598 561.91705322]
[115.29824829 574.45556641]
[105.42618561 585.77923584]
[94.13286591 595.68603516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 193]
[29 192]
[30 191]
[31 190]
[32 189]
[33 188]
[38 187]
[39 186]
[40 185]
[42 183]
[43 182]
[44 181]
[52 173]
[53 172]
[54 171]
[67 170]
[68 169]
[69 168]
[70 167]
[84 166]
[86 165]
[87 164]
[88 163]
[89 162]
[90 161]
[91 160]
[92 159]
[93 158]
[94 157]
[95 135]
[96 134]
[97 133]
[98 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
