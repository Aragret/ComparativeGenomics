%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[68.26738739 461.28900146]
[66.78892517 476.23788452]
[63.37183380 490.86587524]
[58.07458115 504.92269897]
[50.98781204 518.16778564]
[42.23279190 530.37457275]
[31.95932579 541.33404541]
[20.34321022 550.85882568]
[7.58321190 558.78582764]
[-6.10232973 564.97943115]
[-20.47923660 569.33367920]
[-35.30150223 571.77410889]
[-50.31549835 572.25885010]
[-65.26431274 570.77966309]
[-79.89215088 567.36187744]
[-93.94871521 562.06396484]
[-107.19348145 554.97656250]
[-119.39981079 546.22094727]
[-130.35884094 535.94696045]
[-139.88304138 524.33038330]
[-147.80943298 511.57003784]
[-154.00241089 497.88418579]
[-158.35597229 483.50708008]
[-160.79565430 468.68469238]
[-161.27969360 453.67068481]
[-159.79980469 438.72192383]
[-156.38131714 424.09423828]
[-151.08273315 410.03793335]
[-143.99470520 396.79351807]
[-135.23852539 384.58758545]
[-124.96401215 373.62905884]
[-113.34699249 364.10540771]
[-100.58623505 356.17962646]
[-86.90010834 349.98730469]
[-72.52278137 345.63442993]
[-57.70028687 343.19543457]
[-42.68624878 342.71212769]
[-27.73757362 344.19271851]
[-13.11005688 347.61190796]
[0.94600427 352.91116333]
[8.02310944 339.68563843]
[15.10021496 326.46011353]
[22.17732048 313.23458862]
[29.25442505 300.00906372]
[35.02045822 286.16156006]
[39.42145920 271.82171631]
[43.82245636 257.48187256]
[40.15985489 243.04460144]
[51.60560608 232.12190247]
[47.94300461 217.68463135]
[59.38875198 206.76193237]
[63.78974915 192.42208862]
[60.12715149 177.98481750]
[71.57289886 167.06211853]
[67.91030121 152.62486267]
[79.35604858 141.70216370]
[83.75704956 127.36231232]
[88.15804291 113.02246094]
[83.09802246 95.08679199]
[96.98445129 82.65863800]
[100.95655060 68.19411469]
[104.92864990 53.72958755]
[108.90074158 39.26506424]
[112.87284088 24.80054092]
[116.84493256 10.33601665]
[120.81703186 -4.12850761]
[123.81180573 -18.82651138]
[125.81581879 -33.69203949]
[116.47087860 -43.39186859]
[114.44824219 -56.51129532]
[120.26488495 -68.22661591]
[131.59654236 -74.36036682]
[133.82165527 -89.19441223]
[128.21710205 -103.98966217]
[137.75677490 -115.42836761]
[139.98188782 -130.26240540]
[134.37731934 -145.05766296]
[143.91700745 -156.49635315]
[146.14212036 -171.33039856]
[148.36723328 -186.16444397]
[150.59234619 -200.99848938]
[152.81747437 -215.83253479]
[154.37799072 -230.75114441]
[155.27081299 -245.72454834]
[156.16362000 -260.69793701]
[157.05644226 -275.67135620]
[142.33666992 -278.68951416]
[128.19628906 -283.77185059]
[114.92317200 -290.81494141]
[102.78753662 -299.67538452]
[92.03645325 -310.17276001]
[82.88880157 -322.09338379]
[75.53081512 -335.19454956]
[70.11228943 -349.20956421]
[66.74354553 -363.85305786]
[65.49316406 -378.82693481]
[66.38660431 -393.82635498]
[69.40566254 -408.54595947]
[74.48889160 -422.68600464]
[81.53279877 -435.95870972]
[90.39397430 -448.09378052]
[100.89202118 -458.84420776]
[112.81320953 -467.99111938]
[125.91484070 -475.34829712]
[139.93017578 -480.76596069]
[154.57389832 -484.13378906]
[169.54786682 -485.38327026]
[184.54722595 -484.48889160]
[199.26661682 -481.46893311]
[213.40637207 -476.38482666]
[226.67861938 -469.34008789]
[238.81315613 -460.47814941]
[249.56294250 -449.97946167]
[258.70910645 -438.05770874]
[266.06549072 -424.95562744]
[271.48226929 -410.93994141]
[274.84921265 -396.29602051]
[276.09771729 -381.32196045]
[275.20242310 -366.32266235]
[272.18154907 -351.60345459]
[267.09658813 -337.46401978]
[260.05102539 -324.19219971]
[251.18835449 -312.05822754]
[240.68896484 -301.30908203]
[228.76664734 -292.16363525]
[215.66410828 -284.80807495]
[201.64810181 -279.39218140]
[187.00396729 -276.02615356]
[172.02984619 -274.77853394]
[171.13702393 -259.80514526]
[170.24421692 -244.83172607]
[169.35139465 -229.85832214]
[181.26016235 -238.97871399]
[196.14750671 -237.14381409]
[205.48529053 -225.40475464]
[203.92440796 -210.48617554]
[192.35900879 -200.93414307]
[177.41426086 -202.22048950]
[167.65151978 -213.60742188]
[165.42639160 -198.77337646]
[163.20127869 -183.93933105]
[160.97616577 -169.10528564]
[158.75103760 -154.27124023]
[164.51477051 -140.53701782]
[154.81593323 -128.03729248]
[152.59082031 -113.20324707]
[158.35453796 -99.46902466]
[148.65570068 -86.96929932]
[146.43058777 -72.13525391]
[156.99568176 -59.05024719]
[154.78465271 -42.03771591]
[140.68135071 -31.68802643]
[138.67733765 -16.82249832]
[149.48080444 -27.22851181]
[164.17411804 -30.24617386]
[178.20442200 -24.94042969]
[187.22424316 -12.95532227]
[188.43870544 1.99543309]
[181.47149658 15.27918148]
[168.48147583 22.77980995]
[153.49374390 22.17316628]
[141.15242004 13.64722633]
[135.28155518 -0.15641148]
[131.30946350 14.30811214]
[127.33736420 28.77263641]
[123.36526489 43.23715973]
[119.39317322 57.70168304]
[115.42107391 72.16620636]
[111.44897461 86.63072968]
[116.86731720 94.96909332]
[116.90197754 104.91320801]
[111.54189301 113.28913116]
[102.49789429 117.42346191]
[98.09689331 131.76330566]
[93.69589233 146.10314941]
[97.04370880 161.56610107]
[85.91275024 171.46311951]
[89.26055908 186.92607117]
[78.12960052 196.82308960]
[73.72859955 211.16293335]
[77.07640839 226.62588501]
[65.94544983 236.52290344]
[69.29326630 251.98585510]
[58.16230392 261.88287354]
[53.76130295 276.22271729]
[49.36030579 290.56256104]
[60.61685181 280.64843750]
[74.90812683 276.09216309]
[89.82579803 277.66159058]
[102.85597229 285.09225464]
[111.80284119 297.13189697]
[115.15870667 311.75170898]
[112.35803223 326.48791504]
[103.87278748 338.85726929]
[91.13288116 346.77526855]
[76.28522491 348.90762329]
[61.83189011 344.89498901]
[50.20853424 335.41354370]
[43.37388611 322.06112671]
[42.47995377 307.08615112]
[35.40284729 320.31167603]
[28.32574272 333.53720093]
[21.24863815 346.76272583]
[14.17153168 359.98825073]
[26.37869263 368.74270630]
[37.33869553 379.01565552]
[46.86399841 390.63131714]
[54.79161453 403.39093018]
[60.98588943 417.07617188]
[65.34082794 431.45288086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 204]
[41 203]
[42 202]
[43 201]
[44 200]
[45 186]
[46 185]
[47 184]
[49 182]
[51 180]
[52 179]
[54 177]
[56 175]
[57 174]
[58 173]
[60 169]
[61 168]
[62 167]
[63 166]
[64 165]
[65 164]
[66 163]
[67 153]
[68 152]
[72 149]
[73 148]
[75 146]
[76 145]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[83 132]
[84 131]
[85 130]
[86 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
