%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[16.39583397 573.81243896]
[10.26346207 587.52655029]
[2.35783648 600.30090332]
[-7.17995834 611.90753174]
[-18.17970848 622.13934326]
[-30.44511223 630.81359863]
[-43.75727463 637.77563477]
[-57.87863159 642.90112305]
[-72.55716705 646.09863281]
[-87.53092194 647.31109619]
[-102.53267670 646.51690674]
[-117.29470825 643.73016357]
[-131.55355835 639.00061035]
[-145.05477905 632.41271973]
[-157.55741882 624.08398438]
[-168.83834839 614.16308594]
[-178.69625854 602.82708740]
[-186.95520020 590.27825928]
[-193.46780396 576.74053955]
[-198.11784363 562.45556641]
[-200.82232666 547.67828369]
[-201.53298950 532.67230225]
[-200.23713684 517.70556641]
[-196.95793152 503.04504395]
[-191.75384521 488.95245361]
[-184.71778870 475.67926025]
[-175.97532654 463.46237183]
[-165.68246460 452.51977539]
[-154.02288818 443.04678345]
[-141.20468140 435.21243286]
[-127.45660400 429.15652466]
[-113.02400208 424.98718262]
[-98.16445160 422.77874756]
[-83.14312744 422.57070923]
[-68.22811127 424.36669922]
[-53.68556976 428.13473511]
[-48.02278137 414.24468994]
[-42.35999680 400.35467529]
[-42.74572754 392.97409058]
[-36.50811386 386.30099487]
[-30.63915062 372.49682617]
[-24.77019119 358.69265747]
[-26.91093826 343.95269775]
[-14.39095497 334.28002930]
[-8.52199459 320.47583008]
[-2.65303373 306.67166138]
[-3.57705951 301.98602295]
[-1.56740367 296.67016602]
[3.60166097 292.54800415]
[9.87902164 278.92468262]
[3.76959205 267.57989502]
[5.33321285 254.59384155]
[14.22147560 244.73437500]
[27.35592079 241.75093079]
[33.83541870 228.22257996]
[40.31491470 214.69424438]
[46.79440689 201.16589355]
[53.27390289 187.63754272]
[59.75339890 174.10920715]
[59.03952026 169.38697815]
[61.28453827 164.16615295]
[66.63251495 160.27891541]
[73.51192474 146.94947815]
[79.58575439 133.23420715]
[84.83247375 119.18173981]
[90.07919312 105.12927246]
[95.22115326 91.03813171]
[100.25807190 76.90910339]
[105.29498291 62.78007126]
[104.36112976 58.53956604]
[104.78282166 54.61697769]
[106.29367065 51.39941025]
[108.52893066 49.14769363]
[111.07519531 47.97522736]
[116.94416046 34.17105103]
[122.81311798 20.36687469]
[128.68208313 6.56269741]
[123.01204681 -7.94552422]
[129.16065979 -21.86131668]
[143.02696228 -27.17741585]
[148.89593506 -40.98159409]
[148.47431946 -47.57960510]
[151.05998230 -52.64037704]
[155.15061951 -55.10525894]
[161.42797852 -68.72857666]
[167.29695129 -82.53275299]
[172.75230408 -96.50554657]
[178.20765686 -110.47834778]
[181.20243835 -125.17635345]
[173.87944031 -139.20077515]
[181.99224854 -151.69203186]
[182.43885803 -166.68537903]
[182.88546753 -181.67874146]
[183.33207703 -196.67208862]
[183.77867126 -211.66543579]
[184.22528076 -226.65878296]
[169.86050415 -231.33102417]
[157.39469910 -239.86218262]
[147.83842468 -251.56065369]
[141.96635437 -265.47808838]
[140.25451660 -280.48629761]
[142.84167480 -295.36862183]
[149.51811218 -308.91860962]
[159.74258423 -320.03781128]
[172.68624878 -327.82485962]
[187.29981995 -331.64849854]
[202.39865112 -331.19873047]
[216.75872803 -326.51208496]
[229.21594238 -317.96841431]
[238.76046753 -306.26034546]
[244.61856079 -292.33700562]
[246.31532288 -277.32708740]
[243.71321106 -262.44735718]
[237.02316284 -248.90411377]
[226.78752136 -237.79518127]
[213.83604431 -230.02113342]
[199.21862793 -226.21217346]
[198.77203369 -211.21882629]
[198.32542419 -196.22547913]
[197.87881470 -181.23213196]
[197.43220520 -166.23878479]
[196.98561096 -151.24542236]
[204.34053040 -138.29342651]
[196.19578552 -124.72974396]
[203.27514648 -137.95407104]
[213.38313293 -149.03686523]
[225.90167236 -157.30041504]
[240.06523132 -162.23939514]
[255.00772095 -163.55178833]
[269.81536865 -161.15734863]
[283.58270264 -155.20248413]
[295.46786499 -146.05134583]
[304.74401855 -134.26353455]
[310.84396362 -120.55986023]
[313.39471436 -105.77832794]
[312.24020386 -90.82282257]
[307.45111084 -76.60787964]
[299.32025146 -64.00275421]
[288.34484863 -53.77824783]
[275.19604492 -46.55959702]
[260.67791748 -42.78822708]
[245.67819214 -42.69475174]
[231.11416626 -46.28489304]
[217.87641907 -53.33911133]
[206.77444458 -63.42604065]
[198.48712158 -75.92885590]
[193.52124023 -90.08300781]
[192.18045044 -105.02298737]
[186.72509766 -91.05019379]
[181.26974487 -77.07739258]
[182.27047729 -74.45886993]
[182.29426575 -71.28616333]
[181.12483215 -67.92939758]
[178.68379211 -64.83007812]
[175.05130005 -62.45121384]
[168.77394104 -48.82789993]
[162.70010376 -35.11263275]
[156.83114624 -21.30845451]
[162.62358093 -7.63427353]
[156.86827087 6.44873047]
[142.48625183 12.43165874]
[136.61729431 26.23583603]
[130.74833679 40.04001236]
[124.87937164 53.84418869]
[119.42401886 67.81698608]
[114.38710022 81.94601440]
[109.35018158 96.07504272]
[109.82495880 104.12160492]
[104.13166809 110.37599182]
[98.88494873 124.42845917]
[93.63822937 138.48092651]
[106.83880615 131.35740662]
[121.72031403 133.23908997]
[132.73231506 143.42416382]
[135.76760864 158.11384583]
[129.69410706 171.82926941]
[116.77706146 179.45487976]
[101.83422852 178.14654541]
[90.43891144 168.39224243]
[86.84135437 153.82888794]
[79.96193695 167.15832520]
[73.28174591 180.58869934]
[66.80225372 194.11705017]
[60.32275391 207.64538574]
[53.84325790 221.17373657]
[47.36376190 234.70207214]
[40.88426590 248.23042297]
[46.99824142 264.62063599]
[39.51401520 280.05764771]
[23.50233841 285.20205688]
[17.22497749 298.82534790]
[11.15114307 312.54061890]
[5.28218222 326.34478760]
[-0.58677840 340.14898682]
[1.13418102 355.87631226]
[-10.96601391 364.56161499]
[-16.83497429 378.36578369]
[-22.70393562 392.16998291]
[-28.46996880 406.01745605]
[-34.13275528 419.90747070]
[-39.79554367 433.79751587]
[-26.76375198 441.27117920]
[-14.84442329 450.41519165]
[-4.25026798 461.06637573]
[4.82964754 473.03460693]
[12.23328209 486.10632324]
[17.82850838 500.04821777]
[21.51547432 514.61151123]
[23.22838020 529.53631592]
[22.93665695 544.55627441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 201]
[37 200]
[38 199]
[40 198]
[41 197]
[42 196]
[44 194]
[45 193]
[46 192]
[49 191]
[50 190]
[54 187]
[55 186]
[56 185]
[57 184]
[58 183]
[59 182]
[62 181]
[63 180]
[64 171]
[65 170]
[66 169]
[67 167]
[68 166]
[69 165]
[74 164]
[75 163]
[76 162]
[77 161]
[80 158]
[81 157]
[84 156]
[85 155]
[86 150]
[87 149]
[88 148]
[89 124]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
