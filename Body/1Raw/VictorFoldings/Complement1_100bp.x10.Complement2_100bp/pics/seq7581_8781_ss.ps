%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[61.31021500 298.07589722]
[65.81140900 312.55053711]
[65.08743286 327.69158936]
[59.22570419 341.67071533]
[48.93405914 352.79986572]
[35.45526505 359.73513794]
[20.41695023 361.63903809]
[5.63506603 358.28170776]
[-7.10540485 350.06854248]
[-16.26598930 337.99130249]
[-20.74049950 323.50839233]
[-19.98861885 308.36871338]
[-14.10113907 294.40042114]
[-3.78900313 283.29025269]
[9.70254898 276.37982178]
[24.74434662 274.50363159]
[28.06660461 259.87615967]
[31.38886452 245.24870300]
[34.71112442 230.62124634]
[29.98487473 216.49638367]
[40.58652878 204.75263977]
[43.90878677 190.12518311]
[47.23104858 175.49772644]
[37.74017334 187.11337280]
[25.68913460 196.04492188]
[11.81486225 201.74618530]
[-3.03422999 203.86856079]
[-17.95011330 202.28224182]
[-32.02067566 197.08424377]
[-44.38549805 188.59240723]
[-54.28846741 177.32603455]
[-61.12401199 163.97406006]
[-64.47413635 149.35295105]
[-64.13397217 134.35681152]
[-60.12433243 119.90264893]
[-52.69040298 106.87434387]
[-42.28676987 96.06858826]
[-29.54961777 88.14614868]
[-15.25783348 83.59149170]
[-0.28536287 82.68313599]
[14.45222187 85.47662354]
[28.05371284 91.80113983]
[39.68737030 101.26992798]
[48.64179611 113.30397034]
[54.36942291 127.16738892]
[56.52000046 142.01242065]
[54.96201706 156.93132019]
[63.00318909 144.26879883]
[71.04436493 131.60627747]
[79.08553314 118.94374847]
[87.12670898 106.28121948]
[87.90818024 92.32124329]
[100.21076965 85.67760468]
[87.39614105 93.47409821]
[73.14369202 98.15039062]
[58.20106888 99.46115112]
[43.35214233 97.33763885]
[29.37584877 91.89124298]
[17.00535965 83.40766907]
[6.88960600 72.33195496]
[-0.44075987 59.24510193]
[-4.60120153 44.83362198]
[-5.37347078 29.85351562]
[-2.71705580 15.09060669]
[3.22869301 1.31932950]
[12.15187359 -10.73790264]
[23.58439445 -20.44859123]
[36.92652512 -27.30333328]
[51.47837067 -30.94254303]
[66.47656250 -31.17531586]
[81.13433075 -27.98943901]
[94.68276215 -21.55203629]
[106.41111755 -12.20080376]
[115.70417023 -0.42628741]
[122.07440948 13.15384579]
[125.18767548 27.82720947]
[124.88064575 42.82406616]
[121.16943359 57.35771179]
[114.24778748 70.66711426]
[126.34354401 61.79622269]
[138.43928528 52.92532730]
[150.53504944 44.05443192]
[162.42967224 34.91563034]
[174.11726379 25.51347733]
[185.80484009 16.11132622]
[197.49241638 6.70917559]
[209.03872681 -2.86594439]
[220.44117737 -12.61190987]
[231.84364319 -22.35787582]
[243.24610901 -32.10383987]
[254.64857483 -41.84980774]
[266.05102539 -51.59577179]
[257.15921021 -63.68451691]
[249.17352295 -76.39007568]
[242.13659668 -89.64466095]
[236.08596802 -103.37755585]
[231.05392456 -117.51548004]
[227.06730652 -131.98300171]
[224.14739990 -146.70294189]
[222.30976868 -161.59675598]
[221.56422424 -176.58496094]
[221.91474915 -191.58761597]
[223.35946655 -206.52465820]
[225.89067078 -221.31639099]
[229.49485779 -235.88389587]
[234.15278625 -250.14945984]
[239.83961487 -264.03695679]
[246.52499390 -277.47229004]
[254.17327881 -290.38375854]
[262.74362183 -302.70251465]
[272.19033813 -314.36279297]
[282.46298218 -325.30239868]
[293.50677490 -335.46295166]
[305.26278687 -344.79025269]
[317.66827393 -353.23455811]
[330.65707397 -360.75076294]
[344.15988159 -367.29879761]
[358.10464478 -372.84371948]
[372.41696167 -377.35595703]
[387.02044678 -380.81140137]
[401.83721924 -383.19161987]
[416.78823853 -384.48394775]
[431.79367065 -384.68145752]
[446.77349854 -383.78314209]
[461.64779663 -381.79373169]
[476.33718872 -378.72384644]
[490.76330566 -374.58993530]
[504.84918213 -369.41397095]
[518.51965332 -363.22363281]
[531.70178223 -356.05191040]
[544.32525635 -347.93707275]
[556.32275391 -338.92242432]
[567.63012695 -329.05609131]
[578.18719482 -318.39065552]
[587.93750000 -306.98306274]
[596.82916260 -294.89416504]
[604.81463623 -282.18847656]
[611.85131836 -268.93377686]
[617.90173340 -255.20079041]
[622.93353271 -241.06278992]
[626.91992188 -226.59519958]
[629.83959961 -211.87521362]
[631.67700195 -196.98136902]
[632.42230225 -181.99314880]
[632.07153320 -166.99049377]
[630.62652588 -152.05348206]
[628.09509277 -137.26177979]
[624.49066162 -122.69433594]
[619.83251953 -108.42885590]
[614.14544678 -94.54146576]
[607.45983887 -81.10624695]
[599.81134033 -68.19489288]
[591.24078369 -55.87628555]
[581.79388428 -44.21615601]
[571.52105713 -33.27671814]
[560.47711182 -23.11633492]
[548.72094727 -13.78921890]
[536.31530762 -5.34513426]
[523.32641602 2.17086601]
[509.82348633 8.71867943]
[495.87863159 14.26337147]
[481.56625366 18.77535820]
[466.96270752 22.23056412]
[452.14587402 24.61055565]
[437.19485474 25.90263557]
[422.18942261 26.09990692]
[407.20959473 25.20131874]
[392.33532715 23.21166611]
[377.64599609 20.14156532]
[363.21994019 16.00739479]
[349.13415527 10.83121300]
[335.46377563 4.64063835]
[322.28173828 -2.53130031]
[309.65841675 -10.64633751]
[297.66110229 -19.66117477]
[286.35388184 -29.52771187]
[275.79699707 -40.19330978]
[264.39453125 -30.44734383]
[252.99208069 -20.70137978]
[241.58961487 -10.95541286]
[230.18714905 -1.20944738]
[218.78468323 8.53651810]
[217.52528381 13.14335632]
[213.35853577 17.00795937]
[206.89457703 18.39675713]
[195.20698547 27.79890823]
[183.51940918 37.20105743]
[171.83183289 46.60321045]
[171.09053040 50.05035782]
[168.64274597 53.30971146]
[164.59492493 55.58312988]
[159.40594482 56.15018463]
[147.31018066 65.02108002]
[135.21443176 73.89197540]
[123.11868286 82.76287079]
[112.87329102 93.71878052]
[112.09181976 107.67875671]
[99.78923035 114.32239532]
[91.74806213 126.98491669]
[83.70688629 139.64744568]
[75.66571045 152.30996704]
[67.62454224 164.97248840]
[61.85850906 178.81997681]
[58.53624725 193.44743347]
[55.21398926 208.07490540]
[59.70261002 223.24601746]
[49.33858490 233.94351196]
[46.01632690 248.57096863]
[42.69406509 263.19842529]
[39.37180710 277.82589722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 210]
[17 209]
[18 208]
[19 207]
[21 205]
[22 204]
[23 203]
[47 202]
[48 201]
[49 200]
[50 199]
[51 198]
[53 196]
[79 195]
[80 194]
[81 193]
[82 192]
[83 188]
[84 187]
[85 186]
[86 185]
[87 182]
[88 181]
[89 180]
[90 179]
[91 178]
[92 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
