%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[150.11311340 527.34350586]
[142.41308594 514.46221924]
[135.70932007 501.03549194]
[130.04020691 487.14022827]
[125.43820953 472.85598755]
[121.92970276 458.26464844]
[119.53477478 443.44970703]
[118.26714325 428.49612427]
[118.13407898 413.48944092]
[119.13632965 398.51571655]
[121.26816559 383.66067505]
[124.51737213 369.00936890]
[128.86532593 354.64578247]
[134.28715515 340.65219116]
[140.75177002 327.10867310]
[148.22215271 314.09289551]
[156.65551758 301.67935181]
[166.00354004 289.93920898]
[176.21270752 278.93963623]
[187.22451782 268.74368286]
[198.97590637 259.40972900]
[190.56127930 246.99224854]
[182.14666748 234.57475281]
[173.73205566 222.15725708]
[165.31742859 209.73976135]
[150.70948792 212.82798767]
[135.99221802 210.08068848]
[123.41403961 201.88592529]
[114.90866089 189.46633911]
[111.79785919 174.69688416]
[114.58615112 159.82179260]
[122.87924194 147.11351013]
[114.46462250 134.69601440]
[106.05000305 122.27851868]
[97.63538361 109.86102295]
[90.86599731 105.48519135]
[89.18953705 97.19541931]
[80.96073151 84.65402222]
[65.74437714 81.32229614]
[57.57785034 68.48631287]
[60.84790802 54.00037766]
[52.61910248 41.45898056]
[44.39029312 28.91757774]
[36.16148758 16.37617874]
[27.93267822 3.83477783]
[14.79865074 11.09526730]
[1.15313387 17.34164810]
[-12.92571068 22.53813744]
[-27.35724068 26.65497589]
[-42.05879211 29.66857719]
[-56.94615173 31.56167984]
[-71.93405151 32.32344437]
[-86.93663788 31.94950294]
[-101.86797333 30.44199944]
[-116.64253235 27.80956841]
[-131.17568970 24.06728935]
[-145.38420105 19.23659706]
[-159.18667603 13.34516144]
[-172.50405884 6.42672825]
[-185.26007080 -1.47907317]
[-197.38163757 -10.32695866]
[-208.79933167 -20.06624794]
[-219.44773865 -30.64115524]
[-229.26588440 -41.99110413]
[-238.19752502 -54.05109024]
[-246.19149780 -66.75202179]
[-253.20201111 -80.02116394]
[-259.18893433 -93.78250122]
[-264.11791992 -107.95720673]
[-267.96078491 -122.46409607]
[-270.69549561 -137.22006226]
[-272.30639648 -152.14060974]
[-272.78424072 -167.14024353]
[-272.12631226 -182.13305664]
[-270.33639526 -197.03317261]
[-267.42468262 -211.75524902]
[-263.40792847 -226.21495056]
[-258.30908203 -240.32945251]
[-252.15737915 -254.01791382]
[-244.98803711 -267.20190430]
[-236.84214783 -279.80593872]
[-227.76634216 -291.75781250]
[-217.81262207 -302.98907471]
[-207.03799438 -313.43536377]
[-195.50419617 -323.03683472]
[-183.27726746 -331.73855591]
[-170.42724609 -339.49063110]
[-157.02775574 -346.24865723]
[-143.15553284 -351.97393799]
[-128.89004517 -356.63366699]
[-114.31300354 -360.20117188]
[-99.50789642 -362.65600586]
[-84.55953217 -363.98413086]
[-69.55354309 -364.17791748]
[-54.57587051 -363.23623657]
[-39.71231079 -361.16452026]
[-25.04800606 -357.97460938]
[-10.66694832 -353.68478394]
[3.34848642 -348.31961060]
[16.91801834 -341.90985107]
[29.96392059 -334.49218750]
[42.41146851 -326.10910034]
[54.18936157 -316.80865479]
[65.23013306 -306.64407349]
[75.47055054 -295.67358398]
[84.85195160 -283.96005249]
[93.32059479 -271.57055664]
[100.82798004 -258.57608032]
[107.33110046 -245.05104065]
[112.79270935 -231.07290649]
[117.18151855 -216.72175598]
[120.47239685 -202.07977295]
[122.64648438 -187.23085022]
[123.69133759 -172.26002502]
[123.60096741 -157.25305176]
[122.37588501 -142.29588318]
[120.02311707 -127.47422028]
[116.55613708 -112.87294006]
[111.99480438 -98.57568359]
[106.36524200 -84.66433716]
[99.69969940 -71.21859741]
[92.03635406 -58.31547546]
[83.41911316 -46.02887726]
[73.89731598 -34.42918777]
[63.52552032 -23.58284187]
[52.36312866 -13.55197048]
[40.47407913 -4.39403009]
[48.70288467 8.14737034]
[56.93169403 20.68877029]
[65.16049957 33.23017120]
[73.38931274 45.77157211]
[87.97966766 48.53872681]
[96.50350189 61.14026642]
[93.50212860 76.42520905]
[101.73093414 88.96661377]
[110.05287933 101.44640350]
[118.46749878 113.86389923]
[126.88211823 126.28139496]
[135.29673767 138.69889832]
[150.17355347 135.70625305]
[165.02273560 138.62947083]
[177.58747864 146.99252319]
[185.97041321 159.49508667]
[188.91993713 174.21463013]
[186.01715088 188.90202332]
[177.73492432 201.32514954]
[186.14953613 213.74264526]
[194.56416321 226.16014099]
[202.97877502 238.57763672]
[211.39340210 250.99513245]
[224.41787720 243.53990173]
[237.96887207 237.09104919]
[251.96879578 231.68551636]
[266.33743286 227.35427856]
[280.99249268 224.12211609]
[295.85000610 222.00758362]
[310.82492065 221.02275085]
[325.83139038 221.17327881]
[340.78350830 222.45831299]
[355.59564209 224.87048340]
[370.18289185 228.39596558]
[384.46176147 233.01458740]
[398.35043335 238.69985962]
[411.76934814 245.41925049]
[424.64163208 253.13426208]
[436.89358521 261.80068970]
[448.45501709 271.36892700]
[459.25970459 281.78411865]
[469.24572754 292.98663330]
[478.35592651 304.91229248]
[486.53811646 317.49279785]
[493.74542236 330.65609741]
[499.93655396 344.32678223]
[505.07604980 358.42651367]
[509.13446045 372.87457275]
[512.08856201 387.58819580]
[513.92144775 402.48309326]
[514.62255859 417.47396851]
[514.18792725 432.47491455]
[512.62005615 447.40002441]
[509.92785645 462.16381836]
[506.12680054 476.68173218]
[501.23867798 490.87057495]
[495.29144287 504.64910889]
[488.31921387 517.93841553]
[480.36184692 530.66229248]
[471.46499634 542.74798584]
[461.67959595 554.12615967]
[451.06170654 564.73175049]
[439.67214966 574.50390625]
[427.57611084 583.38665771]
[414.84295654 591.32916260]
[401.54556274 598.28594971]
[387.76010132 604.21716309]
[373.56558228 609.08874512]
[359.04327393 612.87292480]
[344.27633667 615.54791260]
[329.34942627 617.09844971]
[314.34796143 617.51562500]
[299.35794067 616.79699707]
[284.46517944 614.94683838]
[269.75500488 611.97558594]
[255.31167603 607.90039062]
[241.21792603 602.74444580]
[227.55445862 596.53741455]
[214.39956665 589.31481934]
[201.82858276 581.11798096]
[189.91352844 571.99395752]
[178.72264099 561.99487305]
[168.32003784 551.17803955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 150]
[22 149]
[23 148]
[24 147]
[25 146]
[32 139]
[33 138]
[34 137]
[35 136]
[37 135]
[38 134]
[41 131]
[42 130]
[43 129]
[44 128]
[45 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
