%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[97.21725464 338.11962891]
[101.51610565 323.69378662]
[108.63115692 310.42877197]
[118.27106476 298.86773682]
[130.04106140 289.48416138]
[143.45919800 282.66223145]
[139.48710632 268.19769287]
[128.65574646 257.97366333]
[132.46246338 242.61724854]
[128.49037170 228.15272522]
[123.68785095 222.53511047]
[124.56853485 213.44323730]
[120.81223297 198.92117310]
[117.05593109 184.39910889]
[113.29962921 169.87705994]
[109.54332733 155.35499573]
[105.35631561 140.95121765]
[100.74230957 126.67848206]
[96.12829590 112.40574646]
[91.09138489 98.27671814]
[85.63602448 84.30392456]
[80.18067169 70.33112335]
[74.72531128 56.35832596]
[60.52780914 49.94984436]
[55.19434738 35.70172501]
[61.39134979 22.20606995]
[55.93599319 8.23327160]
[50.48063660 -5.73952579]
[45.02528000 -19.71232414]
[39.56991959 -33.68512344]
[34.11456299 -47.65792084]
[28.65920639 -61.63071823]
[21.48384094 -74.80319214]
[12.70323753 -86.96464539]
[3.92263460 -99.12610626]
[0.46898329 -84.52910614]
[-12.22177601 -76.53256989]
[-26.87980080 -79.71726990]
[-35.10830688 -92.25886536]
[-32.19363403 -106.97296906]
[-19.80544090 -115.43066406]
[-5.04104424 -112.78751373]
[-18.74106598 -120.70079041]
[-18.58878326 -135.59461975]
[-26.24938011 -148.49093628]
[-33.90997696 -161.38726807]
[-41.57057571 -174.28359985]
[-49.23117065 -187.17993164]
[-62.69565582 -180.55105591]
[-76.63872528 -174.99905396]
[-90.97442627 -170.55812073]
[-105.61436462 -167.25566101]
[-120.46828461 -165.11203003]
[-135.44459534 -164.14042664]
[-150.45098877 -164.34686279]
[-165.39491272 -165.73005676]
[-180.18423462 -168.28147888]
[-194.72779846 -171.98539734]
[-208.93591309 -176.81898499]
[-222.72099304 -182.75244141]
[-235.99803162 -189.74916077]
[-248.68518066 -197.76603699]
[-260.70422363 -206.75361633]
[-271.98104858 -216.65650940]
[-282.44613647 -227.41365051]
[-292.03497314 -238.95870972]
[-300.68841553 -251.22052002]
[-308.35311890 -264.12347412]
[-314.98184204 -277.58804321]
[-320.53372192 -291.53115845]
[-324.97448730 -305.86691284]
[-328.27682495 -320.50686646]
[-330.42028809 -335.36080933]
[-331.39175415 -350.33715820]
[-331.18515015 -365.34353638]
[-329.80181885 -380.28744507]
[-327.25024414 -395.07675171]
[-323.54617310 -409.62026978]
[-318.71243286 -423.82833862]
[-312.77883911 -437.61334229]
[-305.78198242 -450.89031982]
[-297.76498413 -463.57739258]
[-288.77728271 -475.59634399]
[-278.87426758 -486.87304688]
[-268.11700439 -497.33804321]
[-256.57186890 -506.92675781]
[-244.30995178 -515.58007812]
[-231.40692139 -523.24462891]
[-217.94230652 -529.87322998]
[-203.99911499 -535.42498779]
[-189.66333008 -539.86560059]
[-175.02333069 -543.16778564]
[-160.16935730 -545.31109619]
[-145.19302368 -546.28240967]
[-130.18664551 -546.07562256]
[-115.24275208 -544.69213867]
[-100.45346832 -542.14044189]
[-85.90998840 -538.43621826]
[-71.70197296 -533.60229492]
[-57.91701889 -527.66857910]
[-44.64012146 -520.67156982]
[-31.95313072 -512.65447998]
[-19.93427277 -503.66662598]
[-8.65764618 -493.76351929]
[1.80722237 -483.00616455]
[11.39581299 -471.46090698]
[20.04900932 -459.19891357]
[27.71345901 -446.29580688]
[34.34190750 -432.83111572]
[39.89348984 -418.88787842]
[44.33397675 -404.55203247]
[47.63599014 -389.91198730]
[49.77917480 -375.05801392]
[50.75031281 -360.08166504]
[50.54341888 -345.07528687]
[49.15976715 -330.13140869]
[46.60789108 -315.34216309]
[42.90352631 -300.79870605]
[38.06950378 -286.59075928]
[32.13563156 -272.80584717]
[25.13849640 -259.52902222]
[17.12123680 -246.84211731]
[8.13328075 -234.82334900]
[-1.76995480 -223.54682922]
[-12.52741337 -213.08206177]
[-24.07277107 -203.49359131]
[-36.33484650 -194.84051514]
[-28.67424774 -181.94419861]
[-21.01365089 -169.04786682]
[-13.35305309 -156.15153503]
[-5.69245529 -143.25521851]
[7.45962858 -136.26437378]
[7.85528278 -120.44810486]
[16.08409119 -107.90670776]
[24.86469269 -95.74525452]
[33.64529800 -83.58379364]
[31.68933296 -98.45572662]
[34.60367584 -113.16988373]
[42.08076859 -126.17346954]
[53.33153534 -136.09416199]
[67.16865540 -141.88502502]
[82.13186646 -142.93492126]
[96.64206696 -139.13305664]
[109.16796112 -130.88066101]
[118.38764954 -119.04861450]
[123.32817078 -104.88558960]
[123.46813202 -89.88624573]
[118.79277039 -75.63349152]
[109.79547882 -63.63146210]
[97.42576599 -55.14675140]
[82.98904419 -51.07478333]
[68.00884247 -51.84527206]
[54.06606674 -57.37690735]
[42.63200378 -67.08607483]
[48.08736038 -53.11327744]
[53.54272079 -39.14048004]
[58.99807739 -25.16768074]
[64.45343018 -11.19488335]
[69.90879059 2.77791500]
[75.36415100 16.75071335]
[89.06603241 22.47730637]
[94.79759216 36.56999588]
[88.69811249 50.90296936]
[94.15346527 64.87576294]
[99.60882568 78.84856415]
[105.06417847 92.82136536]
[107.74181366 94.27732086]
[109.94885254 96.73973083]
[111.31152344 100.03617859]
[111.52494812 103.85857391]
[110.40103149 107.79174042]
[115.01504517 122.06447601]
[119.62905121 136.33720398]
[122.95311737 139.13085938]
[125.00857544 142.49830627]
[125.77082062 145.97024536]
[125.37018585 149.11764526]
[124.06539154 151.59869385]
[127.82168579 166.12075806]
[131.57798767 180.64282227]
[135.33428955 195.16487122]
[139.09059143 209.68693542]
[142.95489502 224.18063354]
[146.92698669 238.64515686]
[158.04244995 249.90379333]
[153.95162964 264.22561646]
[157.92372131 278.69012451]
[172.94403076 277.70257568]
[187.85562134 279.75915527]
[202.04786682 284.77563477]
[214.93960571 292.54660034]
[226.00292969 302.75384521]
[234.78480530 314.97937012]
[240.92561340 328.72256470]
[244.17390442 343.42065430]
[244.39665222 358.47174072]
[241.58473206 373.25949097]
[235.85330200 387.17840576]
[227.43705750 399.65844727]
[216.68063354 410.18859863]
[204.02450562 418.33767700]
[189.98692322 423.77194214]
[175.14273071 426.26889038]
[160.09977722 425.72625732]
[145.47406006 422.16625977]
[131.86451721 415.73471069]
[119.82841492 406.69494629]
[109.85865021 395.41714478]
[102.36346436 382.36315918]
[97.64979553 368.06747437]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[9 184]
[10 183]
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[17 173]
[18 172]
[19 171]
[20 166]
[21 165]
[22 164]
[23 163]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[33 136]
[34 135]
[35 134]
[42 133]
[44 131]
[45 130]
[46 129]
[47 128]
[48 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
