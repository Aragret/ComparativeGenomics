%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[303.84063721 435.65667725]
[314.08062744 424.67034912]
[304.41983032 413.19564819]
[294.75900269 401.72094727]
[285.09820557 390.24624634]
[275.43740845 378.77154541]
[275.88211060 393.76495361]
[268.24160767 406.67318726]
[254.88337708 413.49652100]
[239.94660950 412.12063599]
[228.05963135 402.97189331]
[222.90574646 388.88510132]
[226.08193970 374.22521973]
[236.60404968 363.53479004]
[251.21165466 360.12634277]
[265.37866211 365.05615234]
[257.33749390 352.39364624]
[249.29632568 339.73110962]
[241.25515747 327.06857300]
[233.21398926 314.40606689]
[218.66644287 311.42199707]
[210.33117676 298.69494629]
[213.55978394 283.45635986]
[205.51860046 270.79385376]
[197.47743225 258.13131714]
[189.15548706 245.65151978]
[180.55693054 233.36068726]
[171.95835876 221.06985474]
[163.35980225 208.77900696]
[151.32389832 210.36402893]
[139.68736267 206.65942383]
[130.67713928 198.30976868]
[126.04483032 186.85458374]
[126.72641754 174.44474792]
[132.65382385 163.43867493]
[124.42501831 150.89727783]
[116.19620514 138.35588074]
[102.74508667 131.95927429]
[101.64359283 116.17645264]
[90.40368652 113.12592316]
[84.08722687 103.34105682]
[85.93490601 91.84204102]
[78.69272614 86.27529907]
[77.86991119 78.93058777]
[64.05358887 71.22216034]
[63.98410797 56.32771301]
[56.82561111 50.65376282]
[56.11223221 43.29761505]
[48.45163345 30.40128899]
[34.75161362 22.48801041]
[34.90389633 7.59418344]
[18.63901901 -1.03919959]
[19.10603523 -18.58197021]
[11.25427914 -31.36281395]
[3.40252352 -44.14365768]
[-4.44923210 -56.92449951]
[-4.44991446 -41.92449951]
[-10.47706890 -28.18865395]
[-21.51501465 -18.03169823]
[-35.70366287 -13.16525269]
[-50.65197372 -14.40940285]
[-63.84090042 -21.55448532]
[-73.04787445 -33.39642715]
[-76.72135925 -47.93965912]
[-74.24230957 -62.73338318]
[-66.02848053 -75.28459930]
[-53.46406174 -83.47821045]
[-38.66636276 -85.93344879]
[-24.12906647 -82.23655701]
[-12.30088806 -73.00926971]
[-17.54760742 -87.06174469]
[-22.79432487 -101.11421204]
[-28.04104233 -115.16668701]
[-33.28776169 -129.21916199]
[-38.53448105 -143.27162170]
[-53.29266357 -140.40007019]
[-68.32221222 -139.99693298]
[-83.21311188 -142.07324219]
[-97.55912018 -146.57232666]
[-110.96887970 -153.37147522]
[-123.07654572 -162.28517151]
[-133.55183411 -173.07028198]
[-142.10894775 -185.43254089]
[-148.51445007 -199.03472900]
[-152.59361267 -213.50573730]
[-154.23512268 -228.45082092]
[-153.39422607 -243.46223450]
[-150.09385681 -258.13049316]
[-144.42402649 -272.05538940]
[-136.53944397 -284.85705566]
[-126.65518951 -296.18630981]
[-115.04091644 -305.73400879]
[-102.01347351 -313.23968506]
[-87.92825317 -318.49865723]
[-73.16951752 -321.36737061]
[-58.13989258 -321.76760864]
[-43.24939346 -319.68841553]
[-28.90425110 -315.18655396]
[-15.49580479 -308.38485718]
[-3.38985133 -299.46881104]
[7.08335161 -288.68170166]
[15.63808823 -276.31777954]
[22.04097748 -262.71435547]
[26.11734390 -248.24255371]
[27.75598335 -233.29716492]
[26.91218948 -218.28590393]
[23.60898590 -203.61830139]
[17.93648148 -189.69448853]
[10.04942894 -176.89431763]
[0.16299272 -165.56700134]
[-11.45311832 -156.02153015]
[-24.48200798 -148.51834106]
[-19.23529053 -134.46586609]
[-13.98857117 -120.41339874]
[-8.74185371 -106.36093140]
[-3.49513531 -92.30845642]
[1.75158298 -78.25598907]
[8.33161068 -64.77625275]
[16.18336678 -51.99541092]
[24.03512192 -39.21456909]
[31.88687706 -26.43372726]
[43.57553482 -23.31894302]
[50.22155762 -12.73527145]
[47.80022430 -0.06641410]
[60.95230865 6.92443371]
[61.34796143 22.74069214]
[69.00856018 35.63702011]
[76.76494598 48.47595978]
[90.01966095 55.27021790]
[90.65074921 71.07883453]
[98.59743500 83.80086517]
[113.66068268 91.18157196]
[114.18498993 107.94764709]
[128.22470093 115.24129486]
[128.73760986 130.12705994]
[136.96641541 142.66847229]
[145.19522095 155.20986938]
[163.32402039 155.53303528]
[177.50537109 166.57698059]
[182.17704773 183.77076721]
[175.65063477 200.18045044]
[184.24920654 212.47128296]
[192.84776306 224.76213074]
[201.44633484 237.05296326]
[206.17697144 239.25933838]
[209.27813721 242.71418762]
[210.54713440 246.58778381]
[210.13995361 250.09014893]
[218.18113708 262.75268555]
[226.22230530 275.41519165]
[241.38737488 278.97308350]
[249.36187744 291.92926025]
[245.87651062 306.36489868]
[253.91767883 319.02740479]
[261.95886230 331.68994141]
[270.00003052 344.35247803]
[278.04119873 357.01498413]
[286.91210938 369.11074829]
[296.57290649 380.58544922]
[306.23370361 392.06015015]
[315.89453125 403.53485107]
[325.55532837 415.00955200]
[338.12579346 406.79122925]
[351.59524536 400.14807129]
[365.76724243 395.17697144]
[380.43511963 391.95037842]
[395.38497925 390.51538086]
[410.39880371 390.89291382]
[425.25762939 393.07742310]
[439.74481201 397.03710938]
[453.64907837 402.71417236]
[466.76760864 410.02587891]
[478.90917969 418.86557007]
[489.89666748 429.10433960]
[499.56985474 440.59289551]
[507.78768921 453.16366577]
[514.43035889 466.63336182]
[519.40093994 480.80554199]
[522.62695312 495.47351074]
[524.06140137 510.42343140]
[523.68328857 525.43725586]
[521.49822998 540.29602051]
[517.53802490 554.78302002]
[511.86041260 568.68707275]
[504.54824829 581.80535889]
[495.70809937 593.94659424]
[485.46890259 604.93365479]
[473.98001099 614.60644531]
[461.40893555 622.82379150]
[447.93899536 629.46594238]
[433.76663208 634.43603516]
[419.09851074 637.66149902]
[404.14852905 639.09539795]
[389.13473511 638.71673584]
[374.27606201 636.53112793]
[359.78918457 632.57031250]
[345.88537598 626.89221191]
[332.76736450 619.57952881]
[320.62646484 610.73895264]
[309.63973999 600.49932861]
[299.96740723 589.01007080]
[291.75048828 576.43872070]
[285.10885620 562.96850586]
[280.13934326 548.79595947]
[276.91439819 534.12774658]
[275.48107910 519.17773438]
[275.86029053 504.16394043]
[278.04647827 489.30532837]
[282.00778198 474.81860352]
[287.68640137 460.91497803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 162]
[3 161]
[4 160]
[5 159]
[6 158]
[16 157]
[17 156]
[18 155]
[19 154]
[20 153]
[23 150]
[24 149]
[25 148]
[26 144]
[27 143]
[28 142]
[29 141]
[35 137]
[36 136]
[37 135]
[39 133]
[42 131]
[44 130]
[46 128]
[48 127]
[49 126]
[51 124]
[53 121]
[54 120]
[55 119]
[56 118]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
