%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[185.77011108 822.34014893]
[171.21044922 818.72265625]
[156.81990051 814.48211670]
[142.62512207 809.62640381]
[128.65238953 804.16448975]
[114.92756653 798.10650635]
[101.47608948 791.46362305]
[88.32285309 784.24822998]
[75.49222565 776.47357178]
[63.00795364 768.15417480]
[50.89316177 759.30535889]
[39.17028809 749.94348145]
[27.86103249 740.08593750]
[16.98634338 729.75103760]
[6.56635475 718.95782471]
[-3.37963700 707.72625732]
[-12.83321381 696.07727051]
[-21.77687073 684.03228760]
[-30.19404411 671.61370850]
[-38.06914902 658.84448242]
[-45.38760376 645.74829102]
[-52.13585281 632.34942627]
[-58.30140305 618.67254639]
[-63.87283325 604.74310303]
[-68.83982849 590.58691406]
[-73.19319916 576.23010254]
[-76.92486572 561.69927979]
[-80.02793884 547.02136230]
[-82.49665833 532.22357178]
[-84.32645416 517.33325195]
[-85.51393890 502.37796021]
[-86.05691528 487.38546753]
[-85.95437622 472.38348389]
[-85.20652008 457.39981079]
[-83.81472015 442.46218872]
[-81.78155518 427.59826660]
[-79.11079407 412.83557129]
[-75.80738068 398.20144653]
[-71.87743378 383.72299194]
[-67.32823181 369.42703247]
[-62.16819763 355.34002686]
[-56.40688324 341.48803711]
[-50.05495834 327.89675903]
[-43.12419128 314.59133911]
[-35.62740707 301.59640503]
[-27.57849312 288.93603516]
[-18.99235535 276.63366699]
[-9.88489151 264.71209717]
[-0.27296573 253.19338989]
[9.82562160 242.09886169]
[20.39216995 231.44908142]
[31.40711403 221.26374817]
[42.85005569 211.56173706]
[54.69980240 202.36100769]
[66.93441772 193.67860413]
[79.53124237 185.53059387]
[92.46694183 177.93208313]
[105.71757507 170.89712524]
[119.25859833 164.43875122]
[113.38964081 150.63456726]
[107.52068329 136.83039856]
[101.65171814 123.02622223]
[95.78276062 109.22204590]
[89.98147583 103.62582397]
[89.93087769 95.16838074]
[84.26808929 81.27835846]
[78.60530090 67.38832855]
[64.11634827 71.34149933]
[49.25652313 73.51934814]
[34.24253464 73.89012909]
[19.29332542 72.44841766]
[4.62690163 69.21525574]
[-9.54285812 64.23777771]
[-23.00931740 57.58858109]
[-35.57609558 49.36462784]
[-47.05993271 39.68584061]
[-57.29335785 28.69337273]
[-66.12713623 16.54752350]
[-73.43245697 3.42541575]
[-79.10276794 -10.48159218]
[-83.05539703 -24.97069550]
[-85.23269653 -39.83060074]
[-85.60290527 -54.84460068]
[-84.16064453 -69.79375458]
[-80.92693329 -84.46006012]
[-75.94892883 -98.62963867]
[-69.29922485 -112.09584808]
[-61.07479858 -124.66231537]
[-51.39558411 -136.14579773]
[-40.40273285 -146.37879944]
[-28.25655365 -155.21212769]
[-15.13417244 -162.51695251]
[-1.22695243 -168.18675232]
[13.26229858 -172.13883972]
[28.12228394 -174.31558228]
[43.13629913 -174.68522644]
[58.08540344 -173.24240112]
[72.75158691 -170.00814819]
[86.92097473 -165.02961731]
[100.38693237 -158.37940979]
[112.95309448 -150.15451050]
[124.43621063 -140.47486877]
[134.66880798 -129.48162842]
[143.50169373 -117.33512115]
[150.80601501 -104.21247101]
[156.47529602 -90.30503845]
[160.42683411 -75.81564331]
[162.60302734 -60.95557404]
[162.97212219 -45.94154358]
[161.52873230 -30.99249458]
[158.29393005 -16.32643318]
[153.31486511 -2.15723157]
[146.66415405 11.30848217]
[138.43878174 23.87433815]
[128.75871277 35.35708618]
[117.76509857 45.58927917]
[105.61825562 54.42169952]
[92.49533081 61.72554398]
[98.15811157 75.61557007]
[103.82089996 89.50559998]
[109.58693695 103.35308075]
[115.45589447 117.15725708]
[121.32485962 130.96144104]
[127.19381714 144.76560974]
[133.06277466 158.56979370]
[147.10884094 153.29928589]
[161.36863708 148.63795471]
[175.81578064 144.59442139]
[190.42349243 141.17619324]
[205.16474915 138.38957214]
[220.01225281 136.23974609]
[234.93849182 134.73068237]
[249.91583252 133.86517334]
[264.91653442 133.64483643]
[279.91284180 134.07005310]
[294.87698364 135.14006042]
[309.78121948 136.85285950]
[324.59796143 139.20529175]
[339.29977417 142.19299316]
[353.85943604 145.81044006]
[368.25000000 150.05091858]
[382.44479370 154.90660095]
[396.41757202 160.36846924]
[410.14239502 166.42642212]
[423.59390259 173.06922913]
[436.74716187 180.28460693]
[449.57781982 188.05920410]
[462.06210327 196.37858582]
[474.17694092 205.22737122]
[485.89984131 214.58917236]
[497.20913696 224.44665527]
[508.08386230 234.78157043]
[518.50390625 245.57475281]
[528.44989014 256.80624390]
[537.90350342 268.45523071]
[546.84722900 280.50018311]
[555.26446533 292.91873169]
[563.13958740 305.68789673]
[570.45806885 318.78405762]
[577.20635986 332.18295288]
[583.37194824 345.85977173]
[588.94342041 359.78918457]
[593.91052246 373.94540405]
[598.26391602 388.30221558]
[601.99560547 402.83300781]
[605.09875488 417.51089478]
[607.56750488 432.30871582]
[609.39733887 447.19903564]
[610.58489990 462.15429688]
[611.12792969 477.14678955]
[611.02545166 492.14877319]
[610.27764893 507.13244629]
[608.88586426 522.07006836]
[606.85278320 536.93402100]
[604.18206787 551.69671631]
[600.87866211 566.33081055]
[596.94879150 580.80926514]
[592.39965820 595.10528564]
[587.23962402 609.19232178]
[581.47839355 623.04431152]
[575.12652588 636.63562012]
[568.19580078 649.94104004]
[560.69903564 662.93603516]
[552.65014648 675.59637451]
[544.06408691 687.89880371]
[534.95666504 699.82037354]
[525.34472656 711.33917236]
[515.24621582 722.43371582]
[504.67968750 733.08355713]
[493.66479492 743.26892090]
[482.22186279 752.97094727]
[470.37216187 762.17169189]
[458.13757324 770.85412598]
[445.54077148 779.00219727]
[432.60510254 786.60076904]
[419.35449219 793.63574219]
[405.81347656 800.09417725]
[392.00717163 805.96405029]
[377.96109009 811.23449707]
[363.70126343 815.89581299]
[349.25411987 819.93927002]
[334.64639282 823.35748291]
[319.90512085 826.14404297]
[305.05761719 828.29382324]
[290.13137817 829.80279541]
[275.15402222 830.66827393]
[260.15332031 830.88854980]
[245.15701294 830.46331787]
[230.19288635 829.39324951]
[215.28866577 827.68041992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 125]
[60 124]
[61 123]
[62 122]
[63 121]
[65 120]
[66 119]
[67 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
