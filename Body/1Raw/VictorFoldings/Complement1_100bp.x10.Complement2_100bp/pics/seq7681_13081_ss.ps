%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[-54.10726547 860.77239990]
[-68.66995239 864.38165283]
[-83.39793396 867.24261475]
[-98.25279236 869.34783936]
[-113.19576263 870.69177246]
[-128.18786621 871.27099609]
[-143.18998718 871.08398438]
[-158.16297913 870.13116455]
[-173.06781006 868.41503906]
[-187.86555481 865.94012451]
[-202.51762390 862.71282959]
[-216.98580933 858.74163818]
[-231.23233032 854.03680420]
[-245.22004700 848.61071777]
[-258.91247559 842.47753906]
[-272.27383423 835.65313721]
[-285.26934814 828.15545654]
[-297.86505127 820.00396729]
[-310.02810669 811.21990967]
[-321.72677612 801.82635498]
[-332.93054199 791.84765625]
[-343.61016846 781.30987549]
[-353.73782349 770.24060059]
[-363.28704834 758.66857910]
[-372.23294067 746.62414551]
[-380.55215454 734.13854980]
[-388.22299194 721.24450684]
[-395.22546387 707.97558594]
[-401.54125977 694.36645508]
[-407.15396118 680.45251465]
[-412.04885864 666.27020264]
[-416.21322632 651.85644531]
[-419.63616943 637.24884033]
[-422.30877686 622.48547363]
[-424.22406006 607.60498047]
[-425.37704468 592.64605713]
[-425.76473999 577.64776611]
[-425.38607788 562.64929199]
[-424.24206543 547.68963623]
[-422.33572388 532.80798340]
[-419.67199707 518.04302979]
[-416.25784302 503.43338013]
[-412.10214233 489.01712036]
[-407.21575928 474.83184814]
[-401.61145020 460.91458130]
[-395.30383301 447.30163574]
[-388.30935669 434.02850342]
[-380.64624023 421.12982178]
[-372.33453369 408.63928223]
[-363.39587402 396.58941650]
[-353.85363770 385.01168823]
[-343.73263550 373.93627930]
[-333.05935669 363.39212036]
[-321.86157227 353.40670776]
[-310.16854858 344.00607300]
[-298.01077271 335.21475220]
[-285.41998291 327.05569458]
[-272.42898560 319.55017090]
[-259.07171631 312.71777344]
[-245.38299561 306.57629395]
[-231.39854431 301.14181519]
[-217.15484619 296.42846680]
[-202.68905640 292.44854736]
[-188.03892517 289.21246338]
[-173.24267578 286.72863770]
[-158.33888245 285.00357056]
[-143.36645508 284.04174805]
[-128.36445618 283.84567261]
[-113.37200928 284.41589355]
[-98.42823029 285.75088501]
[-83.57211304 287.84713745]
[-68.84241486 290.69924927]
[-54.27755737 294.29977417]
[-39.91554260 298.63925171]
[-25.79384232 303.70642090]
[-11.94929600 309.48803711]
[-5.46980000 295.95968628]
[1.00969589 282.43136597]
[1.06394696 275.04089355]
[7.68769312 268.75091553]
[14.36788750 255.32054138]
[21.04808235 241.89016724]
[27.72827721 228.45979309]
[34.40847015 215.02941895]
[41.08866501 201.59904480]
[47.76885986 188.16867065]
[54.44905472 174.73828125]
[61.12924957 161.30790710]
[67.80944824 147.87753296]
[74.48963928 134.44715881]
[81.16983032 121.01678467]
[87.85002899 107.58641052]
[87.17493439 93.62088776]
[98.71959686 85.73339844]
[95.36270142 73.27972412]
[101.20314026 62.23105621]
[112.62775421 58.25553513]
[119.50716400 44.92610550]
[126.38658142 31.59667778]
[114.09770966 22.95391083]
[103.10020447 12.71825695]
[93.59893799 1.08040071]
[85.77091217 -11.74285221]
[79.76197052 -25.51261330]
[75.68403625 -39.97235870]
[73.61309814 -54.85271454]
[73.58772278 -69.87646484]
[75.60838318 -84.76373291]
[79.63745117 -99.23716736]
[85.59984589 -113.02714539]
[93.38450623 -125.87677002]
[102.84641266 -137.54666138]
[113.80928040 -147.81939697]
[126.06888580 -156.50363159]
[139.39683533 -163.43756104]
[153.54484558 -168.49201965]
[168.24934387 -171.57284546]
[183.23640442 -172.62263489]
[198.22680664 -171.62185669]
[212.94129944 -168.58912659]
[227.10575867 -163.58094788]
[240.45631409 -156.69062805]
[252.74424744 -148.04653931]
[263.74063110 -137.80969238]
[273.24066162 -126.17080688]
[281.06729126 -113.34671021]
[287.07473755 -99.57629395]
[291.15109253 -85.11611176]
[293.22042847 -70.23553467]
[293.24417114 -55.21177673]
[291.22189331 -40.32472992]
[287.19128418 -25.85172844]
[281.22738647 -12.06239414]
[273.44134521 0.78638542]
[263.97817993 12.45524597]
[253.01419067 22.72680283]
[240.75364685 31.40970421]
[227.42494202 38.34219360]
[213.27638245 43.39511871]
[198.57154846 46.47435379]
[183.58438110 47.52252579]
[168.59408569 46.52011490]
[153.87992859 43.48579407]
[139.71600342 38.47608948]
[132.83659363 51.80551910]
[125.95718384 65.13494873]
[127.72767639 82.59439850]
[112.14997101 92.41358948]
[112.82506561 106.37911224]
[101.28040314 114.26660156]
[94.60021210 127.69697571]
[87.92001343 141.12734985]
[81.23982239 154.55772400]
[74.55962372 167.98811340]
[67.87943268 181.41848755]
[61.19923782 194.84886169]
[54.51904297 208.27923584]
[47.83884811 221.70960999]
[41.15865326 235.13998413]
[34.47845840 248.57035828]
[27.79826355 262.00073242]
[21.11806870 275.43112183]
[14.53804111 288.91085815]
[8.05854607 302.43920898]
[1.57904971 315.96752930]
[14.76182938 323.13085938]
[27.56164932 330.95791626]
[39.94511795 339.42837524]
[51.87992477 348.52008057]
[63.33493423 358.20932007]
[74.28025818 368.47082520]
[84.68735504 379.27780151]
[94.52906036 390.60208130]
[103.77969360 402.41412354]
[112.41513824 414.68310547]
[120.41285706 427.37701416]
[127.75197601 440.46273804]
[134.41336060 453.90609741]
[140.37962341 467.67208862]
[145.63520813 481.72476196]
[150.16639709 496.02746582]
[153.96136475 510.54284668]
[157.01022339 525.23309326]
[159.30500793 540.05981445]
[160.83973694 554.98443604]
[161.61041260 569.96789551]
[161.61500549 584.97119141]
[160.85351562 599.95513916]
[159.32792664 614.88067627]
[157.04222107 629.70880127]
[154.00236511 644.40093994]
[150.21627808 658.91864014]
[145.69384766 673.22412109]
[140.44686890 687.27996826]
[134.48904419 701.04962158]
[127.83589172 714.49707031]
[120.50478363 727.58728027]
[112.51484680 740.28607178]
[103.88691711 752.56036377]
[94.64351654 764.37805176]
[84.80874634 775.70837402]
[74.40827942 786.52172852]
[63.46923447 796.78991699]
[52.02016068 806.48620605]
[40.09092331 815.58520508]
[27.71264648 824.06323242]
[14.91762352 831.89813232]
[1.73923314 839.06951904]
[-11.78814220 845.55865479]
[-25.62920952 851.34857178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 165]
[77 164]
[78 163]
[80 162]
[81 161]
[82 160]
[83 159]
[84 158]
[85 157]
[86 156]
[87 155]
[88 154]
[89 153]
[90 152]
[91 151]
[92 150]
[94 148]
[97 146]
[98 145]
[99 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
