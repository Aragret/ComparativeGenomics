%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[74.69686127 496.37841797]
[61.79555893 488.38336182]
[52.65671921 476.26535034]
[48.51629639 461.66326904]
[49.93424988 446.55187988]
[56.71881104 432.97491455]
[67.95242310 422.76852417]
[82.11583710 417.31304932]
[82.11583710 402.31304932]
[82.11583710 387.31304932]
[82.11583710 372.31304932]
[82.11583710 357.31304932]
[82.11583710 342.31304932]
[69.14851379 334.98403931]
[61.54011536 322.06243896]
[61.42028046 306.96765137]
[68.92132568 293.75286865]
[82.11583710 286.01644897]
[82.11583710 271.01644897]
[82.11583710 256.01644897]
[79.43215179 252.06588745]
[79.20169067 246.38751221]
[82.34580994 240.57150269]
[80.20706177 237.76826477]
[79.31981659 233.78984070]
[80.22164154 229.23573303]
[83.16203308 224.92282104]
[84.27767944 209.96435547]
[85.39332581 195.00590515]
[78.62406921 181.73841858]
[87.36634827 168.55194092]
[88.48199463 153.59349060]
[74.99373627 148.78128052]
[63.21218491 140.63966370]
[53.94145584 129.72434998]
[47.81429291 116.78029633]
[45.24888229 102.69095612]
[46.42031479 88.41796112]
[51.24864197 74.93546295]
[59.40431976 63.16364670]
[70.33071136 53.90597153]
[83.28208160 47.79427719]
[97.37446594 45.24570465]
[98.71269989 30.30552101]
[100.05093384 15.36533546]
[101.38916779 0.42515033]
[102.72740173 -14.51503468]
[94.17115021 -2.19470549]
[81.78301239 6.26307440]
[67.19286346 9.74553871]
[52.32028961 7.79450846]
[39.12203217 0.66667634]
[29.33454704 -10.70016956]
[24.24555206 -24.81052399]
[24.52458572 -39.80792999]
[30.13494110 -53.71921539]
[40.33847809 -64.71411896]
[53.79274368 -71.34606171]
[68.72760010 -72.74250793]
[83.17810822 -68.71972656]
[95.24305725 -59.80698395]
[103.33509827 -47.17690659]
[106.38963318 -32.48881531]
[111.00363922 -46.76154709]
[115.61765289 -61.03427887]
[120.23165894 -75.30701447]
[124.84566498 -89.57975006]
[119.67852020 -101.39767456]
[123.81536865 -113.19047546]
[134.52384949 -118.81674957]
[139.34985352 -133.01921082]
[144.17584229 -147.22166443]
[149.00184631 -161.42411804]
[136.32411194 -169.57032776]
[125.97080994 -180.50749207]
[118.54059601 -193.59683228]
[114.46160126 -208.07537842]
[113.96675873 -223.10029602]
[117.08049011 -237.79811096]
[123.61754608 -251.31532288]
[133.19404602 -262.86810303]
[145.24995422 -271.78768921]
[159.08190918 -277.55905151]
[173.88421631 -279.85073853]
[188.79576111 -278.53384399]
[193.62176514 -292.73629761]
[198.44775391 -306.93875122]
[198.24574280 -316.07095337]
[203.45277405 -321.31582642]
[208.48968506 -335.44485474]
[208.42366028 -344.57904053]
[213.70820618 -349.74578857]
[218.95492554 -363.79824829]
[224.20164490 -377.85073853]
[210.93431091 -384.89581299]
[198.70008850 -393.61239624]
[187.70831299 -403.85131836]
[178.14707947 -415.43740845]
[170.17997742 -428.17242432]
[163.94332886 -441.83840942]
[159.54386902 -456.20156860]
[157.05688477 -471.01608276]
[156.52490234 -486.02847290]
[157.95704651 -500.98187256]
[161.32881165 -515.62036133]
[166.58248901 -529.69354248]
[173.62818909 -542.96051025]
[182.34535217 -555.19433594]
[192.58480835 -566.18560791]
[204.17137146 -575.74633789]
[216.90675354 -583.71282959]
[230.57304382 -589.94879150]
[244.93638611 -594.34759521]
[259.75100708 -596.83386230]
[274.76342773 -597.36511230]
[289.71676636 -595.93225098]
[304.35513306 -592.55981445]
[318.42803955 -587.30548096]
[331.69470215 -580.25915527]
[343.92810059 -571.54138184]
[354.91888428 -561.30139160]
[364.47903442 -549.71441650]
[372.44491577 -536.97863770]
[378.68026733 -523.31207275]
[383.07833862 -508.94848633]
[385.56393433 -494.13375854]
[386.09448242 -479.12130737]
[384.66091919 -464.16802979]
[381.28775024 -449.52984619]
[376.03274536 -435.45718384]
[368.98577881 -422.19085693]
[360.26745605 -409.95788574]
[350.02694702 -398.96755981]
[338.43948364 -389.40798950]
[325.70333862 -381.44268799]
[312.03646851 -375.20800781]
[297.67269897 -370.81060791]
[282.85781860 -368.32571411]
[267.84533691 -367.79589844]
[252.89215088 -369.23016357]
[238.25411987 -372.60400391]
[233.00740051 -358.55154419]
[227.76068115 -344.49908447]
[222.61871338 -330.40792847]
[217.58180237 -316.27890015]
[212.65020752 -302.11276245]
[207.82421875 -287.91030884]
[202.99821472 -273.70785522]
[215.62503052 -265.66720581]
[225.96667480 -254.83160400]
[233.41883850 -241.82786560]
[237.54460144 -227.40975952]
[238.09996033 -212.41416931]
[235.04827881 -197.71263123]
[228.56269836 -184.16056824]
[219.01631165 -172.54765320]
[206.96066284 -163.55168152]
[193.09396362 -157.69902039]
[178.22053528 -155.33392334]
[163.20429993 -156.59812927]
[158.37831116 -142.39566040]
[153.55230713 -128.19320679]
[148.72630310 -113.99075317]
[153.06716919 -96.98711395]
[139.11840820 -84.96573639]
[134.50439453 -70.69300842]
[129.89038086 -56.42027283]
[125.27637482 -42.14753723]
[120.66236115 -27.87480545]
[117.66758728 -13.17680073]
[116.32935333 1.76338446]
[114.99111938 16.70356941]
[113.65288544 31.64375496]
[112.31465149 46.58393860]
[126.84676361 52.20693207]
[139.20964050 61.69164276]
[148.40434265 74.27169800]
[153.68794250 88.93061829]
[154.63351440 104.48395538]
[151.16464233 119.67498779]
[143.56164551 133.27626038]
[132.43882751 144.18879700]
[118.69491577 151.53082275]
[103.44045258 154.70913696]
[102.32479858 169.66758728]
[109.01425934 184.00500488]
[100.35178375 196.12155151]
[99.23612976 211.08001709]
[98.12048340 226.03846741]
[97.33916473 241.01809692]
[97.11583710 256.01644897]
[97.11583710 271.01644897]
[97.11583710 286.01644897]
[110.31034851 293.75286865]
[117.81138611 306.96765137]
[117.69155121 322.06243896]
[110.08315277 334.98403931]
[97.11583710 342.31304932]
[97.11583710 357.31304932]
[97.11583710 372.31304932]
[97.11583710 387.31304932]
[97.11583710 402.31304932]
[97.11583710 417.31304932]
[111.27924347 422.76852417]
[122.51285553 432.97491455]
[129.29742432 446.55187988]
[130.71537781 461.66326904]
[126.57495117 476.26535034]
[117.43611145 488.38336182]
[104.53480530 496.37841797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 203]
[9 202]
[10 201]
[11 200]
[12 199]
[13 198]
[18 193]
[19 192]
[20 191]
[23 190]
[27 189]
[28 188]
[29 187]
[31 185]
[32 184]
[43 174]
[44 173]
[45 172]
[46 171]
[47 170]
[63 169]
[64 168]
[65 167]
[66 166]
[67 165]
[70 163]
[71 162]
[72 161]
[73 160]
[85 148]
[86 147]
[87 146]
[89 145]
[90 144]
[92 143]
[93 142]
[94 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
