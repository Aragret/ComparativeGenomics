%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[188.89112854 538.86572266]
[194.13047791 524.76892090]
[201.73828125 511.79614258]
[211.48335266 500.34167480]
[223.06953430 490.75360107]
[236.14474487 483.32324219]
[231.10781860 469.19421387]
[226.07090759 455.06518555]
[220.40812683 441.17517090]
[214.13076782 427.55184937]
[207.85339355 413.92852783]
[201.47479248 400.35232544]
[194.99530029 386.82397461]
[188.51580811 373.29562378]
[182.03630066 359.76727295]
[175.55680847 346.23892212]
[169.07731628 332.71060181]
[163.35289001 328.03591919]
[162.60374451 318.93225098]
[156.32638550 305.30892944]
[150.04902649 291.68560791]
[147.94163513 306.53683472]
[139.67132568 319.05090332]
[126.83496094 326.81155396]
[111.91103363 328.32031250]
[97.78112030 323.28588867]
[87.17349243 312.68029785]
[82.13631439 298.55136108]
[83.64218140 283.62713623]
[91.40034485 270.78927612]
[103.91281128 262.51654053]
[118.76362610 260.40628052]
[133.08534241 264.86596680]
[144.11335754 275.03552246]
[140.35705566 260.51345825]
[136.60075378 245.99140930]
[132.62866211 231.52688599]
[128.44165039 217.12310791]
[124.25463867 202.71931458]
[120.06762695 188.31553650]
[106.76364899 176.87127686]
[111.30201721 159.02514648]
[106.90101624 144.68528748]
[102.50001526 130.34544373]
[97.77988434 116.10745239]
[84.72544861 105.57379150]
[87.92758179 89.10799408]
[82.68086243 75.05551910]
[70.60527802 64.83345032]
[73.40206146 50.20377731]
[68.15534210 36.15130615]
[62.90862656 22.09883690]
[56.97520065 15.15389061]
[57.69010925 7.79789352]
[52.65319443 -6.33113623]
[47.61627579 -20.46016502]
[42.78849030 -6.25831795]
[31.11556625 3.16202474]
[16.21448898 4.88186646]
[2.70251608 -1.63170397]
[-5.23351860 -14.36038685]
[-5.13454819 -29.36005974]
[2.96875930 -41.98291397]
[16.56550598 -48.31761551]
[31.44259262 -46.40129471]
[42.99033737 -36.82752609]
[39.88622665 -51.50282669]
[36.78211594 -66.17813110]
[33.56884384 -80.82991791]
[30.24658394 -95.45737457]
[26.92432404 -110.08483887]
[23.60206413 -124.71229553]
[20.27980423 -139.33975220]
[15.32742119 -147.01515198]
[17.01868820 -154.20970154]
[13.91457844 -168.88499451]
[10.81046867 -183.56030273]
[3.48572779 -170.47029114]
[-10.08549881 -164.08110046]
[-24.84148026 -166.77572632]
[-35.27859879 -177.54914856]
[-37.50407028 -192.38313293]
[-30.68784523 -205.74499512]
[-17.37220955 -212.65106201]
[-2.52356482 -210.52555847]
[8.32046890 -200.16021729]
[6.98223448 -215.10040283]
[5.64400053 -230.04058838]
[4.30576611 -244.98077393]
[2.96753192 -259.92095947]
[0.34477091 -263.38146973]
[-0.91380399 -267.12051392]
[-0.88813895 -270.67504883]
[0.19964491 -273.65554810]
[2.02155113 -275.78598022]
[1.57494533 -290.77935791]
[1.12833941 -305.77270508]
[-13.09485054 -311.13638306]
[-24.17934608 -321.53842163]
[-30.43483925 -335.39257812]
[-30.90741539 -350.58615112]
[-25.52500725 -364.80227661]
[-15.10839653 -375.87307739]
[-1.24603772 -382.11035156]
[13.94815826 -382.56292725]
[28.15718842 -377.16183472]
[39.21427917 -366.73068237]
[45.43330002 -352.86010742]
[45.86590195 -337.66534424]
[40.44610977 -323.46343994]
[30.00041008 -312.42007446]
[16.12168884 -306.21929932]
[16.56829453 -291.22595215]
[17.01490211 -276.23260498]
[17.90771675 -261.25918579]
[19.24595070 -246.31901550]
[20.58418465 -231.37882996]
[21.92242050 -216.43864441]
[23.26065445 -201.49845886]
[25.48577118 -186.66441345]
[28.58988190 -171.98910522]
[31.69399071 -157.31379700]
[34.90726471 -142.66201782]
[38.22952271 -128.03456116]
[41.55178452 -113.40709686]
[44.87404251 -98.77964020]
[48.19630432 -84.15217590]
[52.74319458 -78.32572174]
[51.45742035 -69.28224182]
[54.56153107 -54.60693741]
[57.66563797 -39.93163300]
[61.74530792 -25.49708176]
[66.78221893 -11.36805248]
[71.81913757 2.76097727]
[76.96109772 16.85211754]
[82.20781708 30.90458870]
[87.45453644 44.95706177]
[99.15483856 54.17400742]
[96.73333740 69.80880737]
[101.98005676 83.86127472]
[112.26515961 89.32550812]
[116.25755310 100.26634979]
[111.90891266 111.07054138]
[115.88642120 114.45085144]
[117.96201324 118.60359192]
[118.15995789 122.67493439]
[116.83986664 125.94445038]
[121.24085999 140.28430176]
[125.64186096 154.62414551]
[136.65025330 161.34561157]
[140.02062988 173.37991333]
[134.47140503 184.12852478]
[138.65841675 198.53230286]
[142.84542847 212.93609619]
[147.03244019 227.33987427]
[151.53283691 232.18322754]
[152.73168945 237.73837280]
[151.12281799 242.23510742]
[154.87911987 256.75717163]
[158.63542175 271.27923584]
[163.67233276 285.40826416]
[169.94969177 299.03158569]
[176.22705078 312.65487671]
[182.60566711 326.23110962]
[189.08515930 339.75942993]
[195.56465149 353.28778076]
[202.04414368 366.81613159]
[208.52365112 380.34448242]
[215.00314331 393.87283325]
[221.53250122 400.26071167]
[221.47671509 407.65115356]
[227.75407410 421.27447510]
[234.03143311 434.89779663]
[240.22834778 421.23770142]
[254.22027588 415.83157349]
[267.99200439 421.77630615]
[273.65444946 435.66647339]
[267.96392822 449.54513550]
[254.18020630 455.46200562]
[240.19993591 450.02825928]
[245.23684692 464.15728760]
[250.27377319 478.28631592]
[265.10070801 475.76971436]
[280.13937378 475.86621094]
[294.93280029 478.57284546]
[309.03140259 483.80740356]
[322.00674438 491.41079712]
[333.46453857 501.15194702]
[343.05654907 512.73486328]
[350.49136353 525.80755615]
[355.54296875 539.97271729]
[358.05789185 554.79992676]
[357.95968628 569.83862305]
[355.25137329 584.63171387]
[350.01522827 598.72973633]
[342.41036987 611.70422363]
[332.66790771 623.16088867]
[321.08389282 632.75164795]
[308.01037598 640.18493652]
[293.84460449 645.23492432]
[279.01712036 647.74816895]
[263.97845459 647.64825439]
[249.18565369 644.93829346]
[235.08824158 639.70056152]
[222.11462402 632.09417725]
[210.65904236 622.35046387]
[201.06964111 610.76531982]
[193.63781738 597.69097900]
[188.58941650 583.52465820]
[186.07785034 568.69683838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 182]
[7 181]
[8 180]
[9 173]
[10 172]
[11 171]
[12 169]
[13 168]
[14 167]
[15 166]
[16 165]
[17 164]
[19 163]
[20 162]
[21 161]
[34 160]
[35 159]
[36 158]
[37 155]
[38 154]
[39 153]
[40 152]
[42 149]
[43 148]
[44 147]
[45 143]
[47 140]
[48 139]
[50 137]
[51 136]
[52 135]
[54 134]
[55 133]
[56 132]
[66 131]
[67 130]
[68 129]
[69 127]
[70 126]
[71 125]
[72 124]
[73 123]
[75 122]
[76 121]
[77 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
