%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[65.50384521 930.52691650]
[50.51224518 929.95861816]
[35.55934143 928.74139404]
[20.67320251 926.87762451]
[5.88177252 924.37072754]
[-8.78717709 921.22546387]
[-23.30610657 917.44769287]
[-37.64775848 913.04449463]
[-51.78520966 908.02423096]
[-65.69191742 902.39617920]
[-79.34176636 896.17108154]
[-92.70914459 889.36047363]
[-105.76894379 881.97723389]
[-118.49665070 874.03515625]
[-130.86837769 865.54919434]
[-142.86087036 856.53527832]
[-154.45164490 847.01031494]
[-165.61894226 836.99218750]
[-176.34176636 826.49975586]
[-186.60000610 815.55261230]
[-196.37440491 804.17138672]
[-205.64660645 792.37744141]
[-214.39920044 780.19293213]
[-222.61576843 767.64068604]
[-230.28086853 754.74426270]
[-237.38011169 741.52795410]
[-243.90019226 728.01647949]
[-249.82884216 714.23529053]
[-255.15493774 700.21014404]
[-259.86846924 685.96746826]
[-263.96063232 671.53399658]
[-267.42370605 656.93682861]
[-270.25119019 642.20330811]
[-272.43777466 627.36114502]
[-273.97937012 612.43823242]
[-274.87304688 597.46246338]
[-275.11718750 582.46209717]
[-274.71130371 567.46527100]
[-273.65612793 552.50006104]
[-271.95370483 537.59460449]
[-269.60714722 522.77685547]
[-266.62094116 508.07470703]
[-263.00064087 493.51571655]
[-258.75308228 479.12719727]
[-253.88619995 464.93621826]
[-248.40914917 450.96936035]
[-242.33222961 437.25289917]
[-235.66680908 423.81253052]
[-228.42544556 410.67352295]
[-220.62170410 397.86053467]
[-212.27024841 385.39764404]
[-203.38674927 373.30819702]
[-193.98788452 361.61492920]
[-184.09130859 350.33981323]
[-173.71560669 339.50396729]
[-162.88023376 329.12774658]
[-151.60556030 319.23065186]
[-139.91273499 309.83126831]
[-127.82371521 300.94720459]
[-115.36119843 292.59515381]
[-102.54857635 284.79083252]
[-89.40991211 277.54885864]
[-75.96986389 270.88281250]
[-62.25366211 264.80523682]
[-48.28707123 259.32754517]
[-34.09629822 254.46002197]
[-19.70799255 250.21177673]
[-5.14916420 246.59080505]
[9.55285358 243.60391235]
[24.37046051 241.25668335]
[39.27583694 239.55355835]
[54.24099731 238.49769592]
[69.23784637 238.09111023]
[84.23823547 238.33454895]
[77.27219391 225.16931152]
[85.81717682 211.85414124]
[86.70999146 196.88073730]
[87.60280609 181.90731812]
[88.49562836 166.93391418]
[89.38844299 151.96051025]
[90.28125763 136.98710632]
[91.17407227 122.01370239]
[92.06688690 107.04029846]
[92.29021454 92.04196167]
[91.84361267 77.04860687]
[91.39700317 62.05525970]
[90.95040131 47.06190872]
[80.72836304 58.03960800]
[65.85743713 60.00316620]
[53.13640594 52.05486679]
[48.38116074 37.82856369]
[53.76573181 23.82833672]
[66.82836914 16.45489502]
[81.59700012 19.07928276]
[91.32027435 30.50339508]
[92.43592072 15.54494095]
[93.55156708 0.58648741]
[94.66722107 -14.37196636]
[80.58847046 -19.87472153]
[68.75820923 -29.28409195]
[60.22836304 -41.76340103]
[55.75740433 -56.20299530]
[55.74288940 -71.31892395]
[60.18610764 -85.76707458]
[68.69197083 -98.26274109]
[80.50415039 -107.69481659]
[94.57229614 -113.22459412]
[109.64550018 -114.36038971]
[124.38345337 -111.00119019]
[137.47566223 -103.44570160]
[147.75798035 -92.36575317]
[154.31611633 -78.74656677]
[156.56692505 -63.79914856]
[154.31025696 -48.85261536]
[147.74678040 -35.23600006]
[137.46011353 -24.16008568]
[124.36493683 -16.60973358]
[109.62567139 -13.25631714]
[108.51002502 1.70213604]
[107.39437103 16.66058922]
[106.27872467 31.61904335]
[105.94374847 46.61530304]
[106.39035797 61.60865021]
[106.83695984 76.60200500]
[107.28356934 91.59535217]
[118.33115387 81.44889069]
[133.32284546 81.94828033]
[143.67070007 92.80746460]
[143.44702148 107.80579376]
[132.77992249 118.35155487]
[117.78000641 118.40364838]
[107.04029846 107.93311310]
[106.14747620 122.90651703]
[105.25466156 137.87992859]
[104.36184692 152.85333252]
[103.46903229 167.82673645]
[102.57621765 182.80014038]
[101.68340302 197.77354431]
[100.79058075 212.74694824]
[107.69276428 226.98318481]
[99.21163940 239.22737122]
[114.13467407 240.76815796]
[128.97694397 242.95396423]
[143.71060181 245.78067017]
[158.30798340 249.24295044]
[172.74168396 253.33433533]
[186.98458862 258.04711914]
[201.00997925 263.37246704]
[214.79150391 269.30038452]
[228.30331421 275.81973267]
[241.52003479 282.91827393]
[254.41683960 290.58270264]
[266.96951294 298.79861450]
[279.15454102 307.55053711]
[290.94897461 316.82211304]
[302.33068848 326.59591675]
[313.27835083 336.85357666]
[323.77139282 347.57583618]
[333.79010010 358.74261475]
[343.31567383 370.33285522]
[352.33023071 382.32489014]
[360.81686401 394.69616699]
[368.75958252 407.42343140]
[376.14355469 420.48284912]
[382.95483398 433.84985352]
[389.18072510 447.49938965]
[394.80944824 461.40579224]
[399.83050537 475.54296875]
[404.23443604 489.88439941]
[408.01296997 504.40313721]
[411.15905762 519.07189941]
[413.66671753 533.86322021]
[415.53131104 548.74926758]
[416.74926758 563.70208740]
[417.31838989 578.69366455]
[417.23754883 593.69580078]
[416.50689697 608.68035889]
[415.12780762 623.61920166]
[413.10290527 638.48425293]
[410.43594360 653.24768066]
[407.13195801 667.88171387]
[403.19717407 682.35888672]
[398.63891602 696.65197754]
[393.46578979 710.73425293]
[387.68750000 724.57916260]
[381.31488037 738.16076660]
[374.35989380 751.45361328]
[366.83560181 764.43267822]
[358.75616455 777.07360840]
[350.13668823 789.35272217]
[340.99340820 801.24688721]
[331.34347534 812.73382568]
[321.20498657 823.79193115]
[310.59701538 834.40045166]
[299.53942871 844.53955078]
[288.05300903 854.19012451]
[276.15933228 863.33404541]
[263.88070679 871.95410156]
[251.24018860 880.03424072]
[238.26152039 887.55920410]
[224.96907043 894.51489258]
[211.38778687 900.88824463]
[197.54316711 906.66729736]
[183.46119690 911.84118652]
[169.16831970 916.40014648]
[154.69136047 920.33575439]
[140.05751038 923.64050293]
[125.29424286 926.30822754]
[110.42927551 928.33392334]
[95.49050140 929.71380615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 141]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 125]
[85 124]
[86 123]
[87 122]
[95 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
