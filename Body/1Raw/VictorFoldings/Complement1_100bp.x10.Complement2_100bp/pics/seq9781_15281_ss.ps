%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[127.20860291 133.12216187]
[115.80614471 123.37619019]
[104.40367889 113.63022614]
[90.69329071 110.88854980]
[85.85035706 97.77223969]
[74.44789124 88.02627563]
[63.04542923 78.28030396]
[51.64296722 68.53433990]
[40.16826630 58.87353134]
[28.62196541 49.29841232]
[17.07566261 39.72329330]
[6.95606565 50.79942322]
[-3.68293810 61.37763214]
[-14.81687832 71.43358612]
[-26.42014694 80.94416809]
[-38.46605682 89.88748932]
[-50.92689896 98.24298096]
[-63.77401352 105.99143982]
[-76.97785187 113.11502838]
[-90.50804901 119.59736633]
[-104.33348083 125.42354584]
[-118.42234802 130.58016968]
[-132.74224854 135.05535889]
[-147.26023865 138.83885193]
[-161.94293213 141.92192078]
[-176.75656128 144.29748535]
[-191.66705322 145.96008301]
[-206.64010620 146.90588379]
[-221.64129639 147.13272095]
[-236.63609314 146.64006042]
[-251.59004211 145.42904663]
[-266.46871948 143.50244141]
[-281.23791504 140.86471558]
[-295.86367798 137.52191162]
[-310.31231689 133.48171997]
[-324.55065918 128.75341797]
[-338.54592896 123.34791565]
[-352.26593018 117.27762604]
[-365.67910767 110.55651093]
[-378.75463867 103.20002747]
[-391.46240234 95.22510529]
[-403.77319336 86.65007782]
[-415.65872192 77.49467468]
[-427.09161377 67.77994537]
[-438.04556274 57.52824402]
[-448.49542236 46.76314163]
[-458.41714478 35.50940323]
[-467.78787231 23.79290962]
[-476.58609009 11.64061069]
[-484.79153442 -0.91954124]
[-492.38537598 -13.85865879]
[-499.35009766 -27.14698219]
[-505.66970825 -40.75394440]
[-511.32965088 -54.64825439]
[-516.31695557 -68.79795074]
[-520.62005615 -83.17049408]
[-524.22918701 -97.73281097]
[-527.13592529 -112.45143127]
[-529.33367920 -127.29248047]
[-530.81732178 -142.22183228]
[-531.58349609 -157.20515442]
[-531.63043213 -172.20797729]
[-530.95794678 -187.19580078]
[-529.56768799 -202.13414001]
[-527.46276855 -216.98864746]
[-524.64813232 -231.72515869]
[-521.13012695 -246.30976868]
[-516.91699219 -260.70892334]
[-512.01824951 -274.88952637]
[-506.44531250 -288.81896973]
[-500.21090698 -302.46517944]
[-493.32940674 -315.79678345]
[-485.81665039 -328.78314209]
[-477.68988037 -341.39434814]
[-468.96783447 -353.60144043]
[-459.67056274 -365.37631226]
[-449.81939697 -376.69186401]
[-439.43707275 -387.52209473]
[-428.54742432 -397.84210205]
[-417.17550659 -407.62811279]
[-405.34747314 -416.85766602]
[-393.09051514 -425.50952148]
[-380.43286133 -433.56375122]
[-367.40362549 -441.00183105]
[-354.03271484 -447.80670166]
[-340.35095215 -453.96267700]
[-326.38977051 -459.45559692]
[-312.18127441 -464.27282715]
[-297.75814819 -468.40328979]
[-283.15359497 -471.83746338]
[-268.40118408 -474.56750488]
[-253.53483582 -476.58709717]
[-238.58876038 -477.89160156]
[-223.59732056 -478.47802734]
[-208.59501648 -478.34500122]
[-193.61634827 -477.49285889]
[-178.69575500 -475.92352295]
[-163.86755371 -473.64062500]
[-149.16586304 -470.64944458]
[-134.62449646 -466.95681763]
[-120.27689362 -462.57122803]
[-106.15605927 -457.50280762]
[-92.29446411 -451.76321411]
[-78.72399902 -445.36560059]
[-65.47587585 -438.32470703]
[-52.58055496 -430.65673828]
[-40.06771088 -422.37933350]
[-27.96611404 -413.51150513]
[-16.30360031 -404.07366943]
[-5.10699654 -394.08755493]
[5.59794617 -383.57604980]
[15.78660679 -372.56341553]
[25.43554878 -361.07495117]
[34.52258301 -349.13708496]
[43.02680588 -336.77728271]
[50.92865753 -324.02392578]
[58.20996094 -310.90640259]
[64.85397339 -297.45486450]
[70.84541321 -283.70025635]
[76.17050171 -269.67419434]
[80.81698608 -255.40895081]
[84.77417755 -240.93733215]
[88.03298187 -226.29264832]
[90.58589935 -211.50854492]
[92.42705536 -196.61904907]
[93.55221558 -181.65840149]
[93.95880127 -166.66102600]
[93.64586639 -151.66139221]
[92.61413574 -136.69400024]
[90.86598206 -121.79330444]
[88.40542603 -106.99356079]
[85.23812866 -92.32879639]
[81.37137604 -77.83276367]
[76.81404877 -63.53878784]
[71.57664490 -49.47975159]
[65.67120361 -35.68798828]
[59.11130905 -22.19522476]
[51.91205215 -9.03249073]
[44.08998489 3.76993752]
[35.66310120 16.18261528]
[26.65078354 28.17699051]
[38.19708633 37.75210953]
[49.74338531 47.32722855]
[56.89874649 49.17725372]
[61.38893127 57.13187790]
[72.79139709 66.87784576]
[84.19385529 76.62380981]
[95.59632111 86.36977386]
[109.30670929 89.11145020]
[114.14964294 102.22776031]
[125.55210876 111.97372437]
[136.95457458 121.71969604]
[147.83058167 111.36998749]
[159.71313477 102.19344330]
[172.47625732 94.28732300]
[185.98466492 87.73545074]
[200.09513855 82.60726929]
[214.65812683 78.95713806]
[229.51925659 76.82376862]
[244.52095032 76.22975159]
[259.50421143 77.18140411]
[274.31024170 79.66863251]
[288.78201294 83.66506195]
[302.76617432 89.12833405]
[316.11447144 96.00054169]
[328.68539429 104.20882416]
[340.34567261 113.66617584]
[350.97174072 124.27233887]
[360.45092773 135.91488647]
[368.68276978 148.47039795]
[375.57998657 161.80578613]
[381.06945801 175.77967834]
[385.09301758 190.24394226]
[387.60800171 205.04525757]
[388.58773804 220.02671814]
[388.02185059 235.02951050]
[385.91632080 249.89460754]
[382.29351807 264.46441650]
[377.19180298 278.58447266]
[370.66525269 292.10513306]
[362.78308105 304.88305664]
[353.62881470 316.78280640]
[343.29949951 327.67819214]
[331.90466309 337.45376587]
[319.56509399 346.00585938]
[306.41152954 353.24383545]
[292.58349609 359.09097290]
[278.22750854 363.48529053]
[263.49578857 366.38021851]
[248.54449463 367.74502563]
[233.53211975 367.56527710]
[218.61778259 365.84286499]
[203.95959473 362.59603882]
[189.71295166 357.85925293]
[176.02886963 351.68270874]
[163.05241394 344.13183594]
[150.92112732 335.28674316]
[139.76361084 325.24114990]
[129.69815063 314.10156250]
[120.83143616 301.98605347]
[113.25746918 289.02307129]
[107.05653381 275.35000610]
[102.29435730 261.11181641]
[99.02143097 246.45945740]
[97.27244568 231.54821777]
[97.06594086 216.53617859]
[98.40410614 201.58247375]
[101.27275848 186.84561157]
[105.64147949 172.48184204]
[111.46397400 158.64338684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[5 148]
[6 147]
[7 146]
[8 145]
[9 143]
[10 142]
[11 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
