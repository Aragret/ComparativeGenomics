%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[53.67582703 864.30804443]
[38.67290115 864.37664795]
[23.68494034 863.70318604]
[8.74862099 862.28936768]
[-6.09950209 860.13861084]
[-20.82309341 857.25622559]
[-35.38612366 853.64916992]
[-49.75295639 849.32635498]
[-63.88842773 844.29840088]
[-77.75794983 838.57745361]
[-91.32757568 832.17761230]
[-104.56410980 825.11456299]
[-117.43515015 817.40557861]
[-129.90919495 809.06945801]
[-141.95573425 800.12670898]
[-153.54527283 790.59912109]
[-164.64945984 780.51000977]
[-175.24111938 769.88415527]
[-185.29432678 758.74743652]
[-194.78446960 747.12725830]
[-203.68835449 735.05194092]
[-211.98416138 722.55102539]
[-219.65161133 709.65521240]
[-226.67192078 696.39593506]
[-233.02792358 682.80572510]
[-238.70407104 668.91784668]
[-243.68644714 654.76623535]
[-247.96289062 640.38549805]
[-251.52291870 625.81091309]
[-254.35781860 611.07812500]
[-256.46066284 596.22314453]
[-257.82629395 581.28234863]
[-258.45135498 566.29223633]
[-258.33435059 551.28961182]
[-257.47555542 536.31115723]
[-255.87707520 521.39349365]
[-253.54280090 506.57308960]
[-250.47846985 491.88629150]
[-246.69155884 477.36898804]
[-242.19136047 463.05673218]
[-236.98886108 448.98452759]
[-231.09680176 435.18685913]
[-224.52961731 421.69741821]
[-217.30335999 408.54928589]
[-209.43571472 395.77459717]
[-200.94593811 383.40463257]
[-191.85481262 371.46963501]
[-182.18457031 359.99884033]
[-171.95890808 349.02032471]
[-161.20280457 338.56091309]
[-149.94261169 328.64627075]
[-138.20588684 319.30059814]
[-126.02133942 310.54678345]
[-113.41879272 302.40625000]
[-100.42908478 294.89889526]
[-87.08399963 288.04315186]
[-73.41620636 281.85577393]
[-59.45914841 276.35186768]
[-45.24697495 271.54492188]
[-30.81447029 267.44671631]
[-16.19695473 264.06726074]
[-1.43019712 261.41482544]
[13.44966412 259.49591064]
[28.40621567 258.31521606]
[43.40285873 257.87564087]
[58.40288925 258.17822266]
[73.36959839 259.22222900]
[75.15206909 244.32852173]
[76.93453217 229.43481445]
[67.55540466 217.92102051]
[69.15090942 202.79127502]
[81.29122925 193.03164673]
[83.07369232 178.13792419]
[84.85616302 163.24421692]
[86.63862610 148.35049438]
[88.42109680 133.45677185]
[82.25101471 119.90025330]
[91.57337952 107.11729431]
[78.34799194 114.19465637]
[64.50914764 108.40791321]
[60.25832748 94.02283478]
[68.72908020 81.64356232]
[83.67707825 80.39563751]
[94.08268738 91.19741821]
[96.96796417 76.47752380]
[88.41832733 63.45671844]
[91.55409241 48.56975555]
[104.02013397 40.49922562]
[106.90541077 25.77933502]
[109.79067993 11.05944443]
[112.67594910 -3.66044688]
[115.56122589 -18.38033867]
[117.45452118 -33.26037216]
[118.34733582 -48.23377991]
[119.24015045 -63.20718384]
[120.13296509 -78.18058777]
[121.02577972 -93.15399933]
[106.80648041 -98.25186157]
[94.60021210 -107.15037537]
[85.39647675 -119.12818909]
[79.94138336 -133.21430969]
[78.67715454 -148.26683044]
[81.70626831 -163.06550598]
[88.78317261 -176.41070557]
[99.33417511 -187.22056580]
[112.50395203 -194.61877441]
[127.22489166 -198.00561523]
[142.30363464 -197.10652161]
[156.51780701 -191.99436951]
[168.71511841 -183.08360291]
[177.90681458 -171.09654236]
[183.34776306 -157.00495911]
[184.59686279 -141.95117188]
[181.55288696 -127.15554047]
[174.46258545 -113.81746674]
[163.90072632 -103.01821136]
[150.72352600 -95.63323212]
[135.99919128 -92.26117706]
[135.10636902 -77.28777313]
[134.21356201 -62.31436920]
[133.32073975 -47.34096146]
[132.42791748 -32.36755753]
[142.42750549 -43.54827118]
[156.85568237 -47.65041733]
[171.24174500 -43.40289307]
[181.12799072 -32.12184525]
[183.45108032 -17.30282784]
[177.49116516 -3.53767490]
[165.09500122 4.90833139]
[150.10365295 5.41810369]
[137.16238403 -2.16631579]
[130.28111267 -15.49506569]
[127.39584351 -0.77517432]
[124.51057434 13.94471741]
[121.62529755 28.66460800]
[118.74002838 43.38449860]
[127.23682404 55.56399155]
[124.52043915 70.53315735]
[111.68785095 79.36280060]
[108.80258179 94.08268738]
[106.46709442 108.89975739]
[112.50968170 123.52158356]
[103.31481171 135.23924255]
[101.53234863 150.13296509]
[99.74987793 165.02667236]
[97.96741486 179.92039490]
[96.18494415 194.81411743]
[105.67934418 207.16296387]
[103.65950775 222.24191284]
[91.82825470 231.21726990]
[90.04578400 246.11099243]
[88.26332092 261.00469971]
[103.05371857 263.52197266]
[117.70152283 266.76763916]
[132.17089844 270.73367310]
[146.42643738 275.41046143]
[160.43324280 280.78649902]
[174.15705872 286.84863281]
[187.56427002 293.58206177]
[200.62208557 300.97030640]
[213.29855347 308.99523926]
[225.56263733 317.63726807]
[237.38433838 326.87521362]
[248.73472595 336.68649292]
[259.58602905 347.04708862]
[269.91165161 357.93164062]
[279.68640137 369.31353760]
[288.88629150 381.16488647]
[297.48883057 393.45669556]
[305.47296143 406.15890503]
[312.81915283 419.24041748]
[319.50942993 432.66921997]
[325.52740479 446.41244507]
[330.85836792 460.43649292]
[335.48928833 474.70697021]
[339.40878296 489.18902588]
[342.60729980 503.84719849]
[345.07699585 518.64562988]
[346.81182861 533.54809570]
[347.80755615 548.51806641]
[348.06176758 563.51898193]
[347.57379150 578.51416016]
[346.34484863 593.46679688]
[344.37792969 608.34039307]
[341.67788696 623.09851074]
[338.25128174 637.70507812]
[334.10653687 652.12426758]
[329.25378418 666.32086182]
[323.70486450 680.26007080]
[317.47341919 693.90783691]
[310.57464600 707.23077393]
[303.02545166 720.19616699]
[294.84429932 732.77239990]
[286.05123901 744.92864990]
[276.66772461 756.63513184]
[266.71679688 767.86328125]
[256.22274780 778.58557129]
[245.21128845 788.77581787]
[233.70936584 798.40899658]
[221.74510193 807.46154785]
[209.34780884 815.91137695]
[196.54780579 823.73773193]
[183.37641907 830.92156982]
[169.86587524 837.44519043]
[156.04925537 843.29272461]
[141.96035767 848.44976807]
[127.63365173 852.90380859]
[113.10421753 856.64385986]
[98.40760040 859.66076660]
[83.57976532 861.94720459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 152]
[68 151]
[69 150]
[72 147]
[73 146]
[74 145]
[75 144]
[76 143]
[78 141]
[84 140]
[85 139]
[88 136]
[89 135]
[90 134]
[91 133]
[92 132]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
