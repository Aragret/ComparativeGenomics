%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[91.51694489 888.58850098]
[76.57494354 887.23815918]
[61.71487427 885.17291260]
[46.97090530 882.39758301]
[32.37695694 878.91857910]
[17.96659470 874.74383545]
[3.77296066 869.88299561]
[-10.17129898 864.34729004]
[-23.83411026 858.14935303]
[-37.18405151 851.30346680]
[-50.19041061 843.82537842]
[-62.82328033 835.73236084]
[-75.05360413 827.04290771]
[-86.85324097 817.77709961]
[-98.19506073 807.95617676]
[-109.05297852 797.60278320]
[-119.40201569 786.74072266]
[-129.21836853 775.39501953]
[-138.47946167 763.59167480]
[-147.16400146 751.35784912]
[-155.25199890 738.72174072]
[-162.72485352 725.71240234]
[-169.56539917 712.35974121]
[-175.75787354 698.69439697]
[-181.28804016 684.74792480]
[-186.14318848 670.55236816]
[-190.31214905 656.14031982]
[-193.78532410 641.54498291]
[-196.55473328 626.79992676]
[-198.61401367 611.93902588]
[-199.95841980 596.99645996]
[-200.58485413 582.00665283]
[-200.49188232 567.00408936]
[-199.67973328 552.02319336]
[-198.15023804 537.09844971]
[-195.90695190 522.26422119]
[-192.95501709 507.55456543]
[-189.30122375 493.00338745]
[-184.95397949 478.64413452]
[-179.92327881 464.50982666]
[-174.22068787 450.63296509]
[-167.85934448 437.04544067]
[-160.85385132 423.77856445]
[-153.22033691 410.86282349]
[-144.97636414 398.32794189]
[-136.14088440 386.20269775]
[-126.73422241 374.51504517]
[-116.77800751 363.29180908]
[-106.29515076 352.55883789]
[-95.30976105 342.34082031]
[-83.84709930 332.66122437]
[-71.93353271 323.54235840]
[-59.59646225 315.00515747]
[-46.86426544 307.06930542]
[-33.76622772 299.75299072]
[-20.33247185 293.07308960]
[-6.59389877 287.04495239]
[7.41789484 281.68243408]
[21.67067909 276.99786377]
[36.13167572 273.00207520]
[50.76761627 269.70416260]
[65.54484558 267.11178589]
[80.42937469 265.23089600]
[95.38696289 264.06579590]
[94.94035339 249.07243347]
[94.49375153 234.07908630]
[94.04714203 219.08573914]
[93.60053253 204.09239197]
[81.34252930 199.79295349]
[71.25035858 191.56358337]
[64.53896332 180.36695862]
[62.02578735 167.52461243]
[64.03127289 154.56092834]
[70.33815002 143.02226257]
[80.21479034 134.29238892]
[92.50000000 129.42668152]
[92.50000000 114.42668152]
[84.77587128 105.71007538]
[84.86257172 94.06388855]
[92.71562195 85.46325684]
[92.93894958 70.46492004]
[93.16227722 55.46658325]
[82.43469238 44.17248535]
[82.87483215 28.96522141]
[93.70813751 18.80770683]
[93.93146515 3.80936837]
[94.15479279 -11.18896866]
[85.04975128 -16.74972725]
[79.11958313 -25.52128601]
[77.37879181 -35.88338852]
[80.07538605 -45.95519638]
[86.65805054 -53.93667603]
[95.88727570 -58.43026733]
[96.78009033 -73.40367126]
[97.67290497 -88.37708282]
[98.56572723 -103.35048676]
[99.45854187 -118.32389069]
[100.35135651 -133.29730225]
[101.24417114 -148.27070618]
[87.32396698 -154.27101135]
[76.29760742 -164.67269897]
[69.49658203 -178.21972656]
[67.74214172 -193.27621460]
[71.24615479 -208.02401733]
[79.58548737 -220.68226624]
[91.75312042 -229.72242737]
[106.27976227 -234.05284119]
[121.41124725 -233.15060425]
[135.32037354 -227.12464905]
[146.32754517 -216.70265198]
[153.10359192 -203.14312744]
[154.83027649 -188.08343506]
[151.29908752 -173.34210205]
[142.93644714 -160.69924927]
[130.75216675 -151.68151855]
[116.21757507 -147.37788391]
[115.32476044 -132.40447998]
[114.43194580 -117.43107605]
[113.53913116 -102.45767212]
[112.64631653 -87.48426056]
[111.75349426 -72.51085663]
[110.86067963 -57.53745270]
[124.82601929 -43.95498276]
[124.29157257 -24.17575073]
[109.15312958 -10.96564102]
[108.92980194 4.03269625]
[108.70647430 19.03103447]
[119.23254395 29.50659370]
[119.21971893 44.72022247]
[108.16061401 55.68991089]
[107.93728638 70.68824768]
[107.71395874 85.68658447]
[116.25928497 100.12104797]
[107.50000000 114.42668152]
[107.50000000 129.42668152]
[123.10883331 136.58587646]
[133.98295593 149.80499268]
[137.97198486 166.39375305]
[134.32044983 183.00338745]
[123.81024933 196.30261230]
[108.59388733 203.64578247]
[109.04048920 218.63912964]
[109.48709869 233.63247681]
[109.93370056 248.62582397]
[110.38031006 263.61917114]
[125.38072968 263.89193726]
[140.35081482 264.88354492]
[155.25614929 266.59176636]
[170.06243896 269.01266479]
[184.73562622 272.14068604]
[199.24197388 275.96856689]
[213.54811096 280.48757935]
[227.62112427 285.68731689]
[241.42864990 291.55578613]
[254.93894958 298.07949829]
[268.12091064 305.24346924]
[280.94424438 313.03121948]
[293.37945557 321.42480469]
[305.39794922 330.40496826]
[316.97204590 339.95101929]
[328.07516479 350.04098511]
[338.68173218 360.65173340]
[348.76739502 371.75875854]
[358.30889893 383.33660889]
[367.28436279 395.35858154]
[375.67309570 407.79708862]
[383.45581055 420.62347412]
[390.61462402 433.80822754]
[397.13308716 447.32107544]
[402.99615479 461.13092041]
[408.19036865 475.20596313]
[412.70376587 489.51385498]
[416.52600098 504.02169800]
[419.64828491 518.69610596]
[422.06338501 533.50335693]
[423.76577759 548.40936279]
[424.75155640 563.37982178]
[425.01843262 578.38031006]
[424.56582642 593.37640381]
[423.39471436 608.33349609]
[421.50787354 623.21728516]
[418.90957642 637.99346924]
[415.60583496 652.62811279]
[411.60421753 667.08752441]
[406.91397095 681.33843994]
[401.54583740 695.34808350]
[395.51220703 709.08422852]
[388.82693481 722.51531982]
[381.50537109 735.61041260]
[373.56442261 748.33941650]
[365.02227783 760.67309570]
[355.89865112 772.58300781]
[346.21447754 784.04180908]
[335.99206543 795.02307129]
[325.25488281 805.50164795]
[314.02767944 815.45336914]
[302.33624268 824.85534668]
[290.20748901 833.68597412]
[277.66928101 841.92492676]
[264.75048828 849.55328369]
[251.48080444 856.55346680]
[237.89076233 862.90936279]
[224.01161194 868.60638428]
[209.87528992 873.63146973]
[195.51428223 877.97296143]
[180.96165466 881.62091064]
[166.25085449 884.56695557]
[151.41571045 886.80432129]
[136.49037170 888.32781982]
[121.50915527 889.13397217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 145]
[65 144]
[66 143]
[67 142]
[68 141]
[76 135]
[77 134]
[80 132]
[81 131]
[82 130]
[85 127]
[86 126]
[87 125]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
