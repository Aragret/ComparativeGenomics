%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[78.64173889 370.96759033]
[77.01116943 385.90161133]
[73.40457153 400.48501587]
[67.88632202 414.45758057]
[60.55488968 427.56991577]
[51.54111481 439.58804321]
[41.00585938 450.29748535]
[29.13714027 459.50708008]
[16.14676476 467.05252075]
[2.26656413 472.79913330]
[-12.25575447 476.64434814]
[-27.16102409 478.51956177]
[-42.18323898 478.39129639]
[-57.05431366 476.26184082]
[-71.50885773 472.16918945]
[-85.28890991 466.18643188]
[-98.14854431 458.42025757]
[-109.85827637 449.00933838]
[-120.20912933 438.12158203]
[-129.01637268 425.95129395]
[-136.12283325 412.71566772]
[-141.40168762 398.65090942]
[-144.75874329 384.00805664]
[-146.13406372 369.04837036]
[-145.50312805 354.03887939]
[-142.87718201 339.24737549]
[-138.30310059 324.93789673]
[-131.86250305 311.36581421]
[-123.67032623 298.77328491]
[-113.87277985 287.38504028]
[-102.64470673 277.40438843]
[-90.18648529 269.00936890]
[-76.72045135 262.34985352]
[-62.48691940 257.54464722]
[-47.73989868 254.67951965]
[-32.74257660 253.80561829]
[-17.76259041 254.93852234]
[-3.06727839 258.05801392]
[11.08110428 263.10842896]
[17.96051598 249.77900696]
[24.83992958 236.44956970]
[31.71934128 223.12014771]
[30.68083191 208.26179504]
[43.88555908 199.54710388]
[50.76496887 186.21766663]
[57.64438248 172.88824463]
[64.22441101 159.40850830]
[70.50177002 145.78518677]
[76.77912903 132.16188049]
[83.05649567 118.53855896]
[89.33385468 104.91524506]
[76.85368347 113.23661804]
[62.08180618 115.84270477]
[47.50754547 112.29432678]
[35.58692169 103.18945312]
[28.32876968 90.06240845]
[26.95621300 75.12534332]
[31.70055199 60.89539719]
[41.76228333 49.77058029]
[55.44582748 43.62561417]
[70.44526672 43.49603653]
[84.23293304 49.40367889]
[94.48536682 60.35300064]
[99.47483826 74.49885559]
[98.36009216 89.45899963]
[107.14069366 77.29754639]
[108.94583130 61.57965469]
[122.66915894 55.79005432]
[131.44976807 43.62860107]
[133.25489807 27.91070938]
[146.97822571 22.12111092]
[155.75883484 9.95965481]
[164.53942871 -2.20180106]
[166.34457397 -17.91969109]
[180.06790161 -23.70928955]
[188.84849548 -35.87074661]
[197.62910461 -48.03220367]
[206.40971375 -60.19365692]
[194.83171082 -69.73857880]
[183.88903809 -80.00569916]
[173.62667847 -90.95282745]
[164.08679199 -102.53498077]
[155.30857849 -114.70455170]
[147.32810974 -127.41155243]
[140.17817688 -140.60375977]
[133.88816833 -154.22694397]
[128.48393250 -168.22515869]
[123.98766327 -182.54086304]
[120.41784668 -197.11521912]
[117.78915405 -211.88836670]
[116.11238098 -226.79957581]
[115.39442444 -241.78756714]
[115.63822937 -256.79077148]
[116.84278870 -271.74752808]
[119.00316620 -286.59640503]
[122.11048126 -301.27630615]
[126.15195465 -315.72698975]
[131.11099243 -329.88903809]
[136.96720886 -343.70428467]
[143.69653320 -357.11590576]
[151.27133179 -370.06881714]
[159.66046143 -382.50982666]
[168.82945251 -394.38775635]
[178.74061584 -405.65380859]
[189.35325623 -416.26171875]
[200.62374878 -426.16787720]
[212.50575256 -435.33157349]
[224.95048523 -443.71514893]
[237.90678406 -451.28414917]
[251.32141113 -458.00750732]
[265.13925171 -463.85757446]
[279.30349731 -468.81027222]
[293.75598145 -472.84530640]
[308.43728638 -475.94607544]
[323.28710938 -478.09985352]
[338.24441528 -479.29772949]
[353.24771118 -479.53485107]
[368.23541260 -478.81021118]
[383.14587402 -477.12680054]
[397.91781616 -474.49151611]
[412.49060059 -470.91519165]
[426.80429077 -466.41256714]
[440.80007935 -461.00207520]
[454.42047119 -454.70599365]
[467.60949707 -447.55017090]
[480.31292725 -439.56405640]
[492.47860718 -430.78039551]
[504.05648804 -421.23535156]
[514.99902344 -410.96810913]
[525.26129150 -400.02087402]
[534.80102539 -388.43862915]
[543.57910156 -376.26895142]
[551.55944824 -363.56185913]
[558.70922852 -350.36956787]
[564.99908447 -336.74630737]
[570.40319824 -322.74804688]
[574.89929199 -308.43228149]
[578.46893311 -293.85787964]
[581.09747314 -279.08471680]
[582.77404785 -264.17349243]
[583.49188232 -249.18548584]
[583.24786377 -234.18228149]
[582.04315186 -219.22554016]
[579.88262939 -204.37670898]
[576.77514648 -189.69680786]
[572.73352051 -175.24617004]
[567.77429199 -161.08418274]
[561.91796875 -147.26902771]
[555.18847656 -133.85746765]
[547.61352539 -120.90462494]
[539.22424316 -108.46372986]
[530.05517578 -96.58589935]
[520.14385986 -85.31994629]
[509.53109741 -74.71215820]
[498.26049805 -64.80612946]
[486.37838745 -55.64256668]
[473.93356323 -47.25912476]
[460.97717285 -39.69025421]
[447.56246948 -32.96705246]
[433.74456787 -27.11715126]
[419.58026123 -22.16458893]
[405.12774658 -18.12971497]
[390.44638062 -15.02911186]
[375.59655762 -12.87551975]
[360.63925171 -11.67778873]
[345.63592529 -11.44083881]
[330.64825439 -12.16564560]
[315.73782349 -13.84922981]
[300.96588135 -16.48467445]
[286.39315796 -20.06114769]
[272.07949829 -24.56395340]
[258.08377075 -29.97459030]
[244.46343994 -36.27082443]
[231.27450562 -43.42678070]
[218.57116699 -51.41305542]
[209.79055786 -39.25159836]
[201.00996399 -27.09014320]
[192.22935486 -14.92868710]
[191.05226135 -0.08066601]
[176.70088196 6.57880211]
[167.92028809 18.74025726]
[159.13967896 30.90171432]
[157.96260071 45.74973679]
[143.61122131 52.40920258]
[134.83061218 64.57065582]
[133.65353394 79.41867828]
[119.30215454 86.07814789]
[110.52154541 98.23960114]
[102.95716858 111.19260406]
[96.67980957 124.81591797]
[90.40245056 138.43923950]
[84.12508392 152.06254578]
[77.84772491 165.68586731]
[78.32807922 170.88359070]
[76.90858459 175.30381775]
[74.20355225 178.35305786]
[70.97380829 179.76765442]
[64.09439850 193.09707642]
[57.21498489 206.42651367]
[57.76143265 222.23828125]
[45.04877090 229.99955750]
[38.16935730 243.32897949]
[31.28994560 256.65841675]
[24.41053391 269.98785400]
[36.72358704 278.59436035]
[47.77959824 288.76531982]
[57.38125610 300.31915283]
[65.35720825 313.04974365]
[71.56512451 326.72985840]
[75.89420319 341.11532593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 204]
[40 203]
[41 202]
[42 201]
[44 199]
[45 198]
[46 197]
[47 193]
[48 192]
[49 191]
[50 190]
[51 189]
[65 188]
[66 187]
[68 185]
[69 184]
[71 182]
[72 181]
[73 180]
[75 178]
[76 177]
[77 176]
[78 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
