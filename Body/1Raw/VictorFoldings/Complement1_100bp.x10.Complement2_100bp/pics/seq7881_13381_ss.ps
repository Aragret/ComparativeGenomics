%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[140.87825012 674.04205322]
[143.60092163 659.16113281]
[150.79057312 645.85083008]
[161.74284363 635.41516113]
[175.38475037 628.87652588]
[173.38073730 614.01098633]
[171.37672424 599.14544678]
[169.37271118 584.27996826]
[167.36869812 569.41442871]
[165.36468506 554.54888916]
[163.36067200 539.68334961]
[161.35665894 524.81781006]
[159.35264587 509.95230103]
[157.34861755 495.08676147]
[155.34460449 480.22125244]
[153.34059143 465.35571289]
[151.33657837 450.49017334]
[149.33256531 435.62466431]
[146.55696106 420.88369751]
[143.01728821 406.30731201]
[139.47761536 391.73095703]
[135.93794250 377.15457153]
[132.39826965 362.57818604]
[129.59355164 360.44140625]
[127.68447113 356.83993530]
[127.34814453 352.20959473]
[129.04147339 347.27200317]
[126.15620422 332.55212402]
[123.27093506 317.83221436]
[120.38565826 303.11233521]
[117.50038910 288.39245605]
[113.12899017 282.43319702]
[114.68344879 273.43200684]
[104.80743408 262.28240967]
[109.96900177 247.32684326]
[99.40216827 257.97305298]
[84.47454071 256.50131226]
[76.19022369 243.99650574]
[80.65609741 229.67674255]
[94.58008575 224.09799194]
[107.69699097 231.37136841]
[106.13646698 216.45277405]
[104.57594299 201.53416443]
[103.01541901 186.61555481]
[101.45490265 171.69696045]
[86.56597900 161.04634094]
[84.14888000 142.57823181]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[84.92479706 44.31132507]
[82.92078400 29.44579697]
[71.88910675 39.60956192]
[57.04208755 37.47272491]
[49.32439804 24.61048126]
[54.42523193 10.50440121]
[68.58444214 5.55295897]
[81.36348724 13.40478992]
[80.47067261 -1.56861579]
[79.57785797 -16.54202080]
[78.68503571 -31.51542664]
[77.79222107 -46.48883438]
[76.89940643 -61.46223831]
[62.01896286 -63.73186874]
[47.94112396 -69.04385376]
[35.28038025 -77.16373444]
[24.58883095 -87.73452759]
[16.33209801 -100.29244995]
[10.86905956 -114.28725433]
[8.43624210 -129.10632324]
[9.13758564 -144.10153198]
[12.94000435 -158.61752319]
[19.67494011 -172.02043152]
[29.04583168 -183.72546387]
[40.64117050 -193.22253418]
[53.95257568 -200.09838867]
[68.39707947 -204.05464172]
[67.50426483 -219.02806091]
[66.61145020 -234.00146484]
[65.71863556 -248.97486877]
[64.82582092 -263.94827271]
[63.93300247 -278.92166138]
[55.38801956 -292.23684692]
[62.35406113 -305.40209961]
[53.80907822 -318.71725464]
[60.77511978 -331.88250732]
[51.66374969 -341.01190186]
[51.22837830 -353.50164795]
[59.15732193 -362.63720703]
[50.81152725 -376.07812500]
[57.97280884 -389.13821411]
[57.30302429 -404.12322998]
[56.63323975 -419.10827637]
[42.24035263 -423.92587280]
[30.56220627 -433.62048340]
[23.17816925 -446.88098145]
[21.08687210 -461.91397095]
[24.57114792 -476.68637085]
[33.15977478 -489.20037842]
[45.69121170 -497.76351929]
[60.47068787 -501.21774292]
[75.49939728 -499.09585571]
[88.74482727 -491.68484497]
[98.41564941 -479.98699951]
[103.20395660 -465.58435059]
[102.46218109 -450.42471313]
[96.29063416 -436.55834961]
[85.52396393 -425.86053467]
[71.61827850 -419.77807617]
[72.28806305 -404.79302979]
[72.95784760 -389.80798340]
[81.25572968 -377.43890381]
[74.14235687 -363.30700684]
[84.37001801 -349.04650879]
[75.74852753 -332.77532959]
[84.22964478 -320.53112793]
[77.32746887 -306.29489136]
[85.80858612 -294.05072021]
[78.90641022 -279.81448364]
[79.79922485 -264.84109497]
[80.69203949 -249.86767578]
[81.58485413 -234.89427185]
[82.47766876 -219.92086792]
[83.37049103 -204.94746399]
[98.18276978 -202.73570251]
[112.21692657 -197.49037170]
[124.85865021 -189.43847656]
[135.55406189 -178.92991638]
[143.83396912 -166.42231750]
[149.33439636 -152.46101379]
[151.81266785 -137.65541077]
[151.15805054 -122.65223694]
[147.39674377 -108.10741425]
[140.69078064 -94.65731049]
[131.33111572 -82.89093018]
[119.72498322 -73.32409668]
[106.37812042 -66.37686157]
[91.87281036 -62.35505295]
[92.76562500 -47.38164902]
[93.65844727 -32.40824509]
[94.55126190 -17.43483734]
[95.44407654 -2.46143174]
[96.33689117 12.51197433]
[97.78630829 27.44178200]
[99.79032135 42.30731201]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[121.74353027 131.18753052]
[128.50047302 140.82312012]
[129.75413513 152.40423584]
[125.30804443 163.04135132]
[116.37350464 170.13642883]
[117.93402863 185.05503845]
[119.49455261 199.97364807]
[121.05507660 214.89224243]
[122.61559296 229.81085205]
[124.73021698 244.66105652]
[134.79692078 256.86645508]
[129.44467163 270.76620483]
[132.22027588 285.50717163]
[135.10556030 300.22705078]
[137.99082947 314.94696045]
[140.87609863 329.66683960]
[143.76136780 344.38674927]
[146.97463989 359.03851318]
[150.51431274 373.61489868]
[154.05398560 388.19128418]
[157.59365845 402.76763916]
[161.13333130 417.34402466]
[168.86236572 404.48858643]
[183.00505066 399.49014282]
[197.09553528 404.63388062]
[204.69184875 417.56820679]
[202.32106018 432.37963867]
[191.06704712 442.29666138]
[176.07501221 442.78533936]
[164.19810486 433.62063599]
[166.20211792 448.48617554]
[168.20613098 463.35171509]
[170.21014404 478.21722412]
[172.21415710 493.08276367]
[174.21817017 507.94827271]
[176.22218323 522.81384277]
[178.22619629 537.67932129]
[180.23020935 552.54486084]
[182.23422241 567.41040039]
[184.23823547 582.27593994]
[186.24224854 597.14147949]
[188.24626160 612.00695801]
[190.25027466 626.87249756]
[205.13665771 629.56524658]
[218.46138000 636.72814941]
[228.91902161 647.65942383]
[235.48506165 661.28814697]
[237.51622009 676.27911377]
[234.81350708 691.16369629]
[227.64169312 704.48364258]
[216.70341492 714.93395996]
[203.07028198 721.49084473]
[188.07794189 723.51196289]
[173.19517517 720.79925537]
[159.88006592 713.61853027]
[149.43707275 702.67327881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 197]
[6 196]
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[33 166]
[35 164]
[41 163]
[42 162]
[43 161]
[44 160]
[45 159]
[48 154]
[49 153]
[51 151]
[52 150]
[53 149]
[54 148]
[55 147]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[87 120]
[89 118]
[92 116]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
