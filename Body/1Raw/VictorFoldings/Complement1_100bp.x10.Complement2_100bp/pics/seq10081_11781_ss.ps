%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[58.58670807 601.79565430]
[51.61495209 588.48620605]
[46.56343079 574.33599854]
[43.53047562 559.62048340]
[42.57512283 544.62603760]
[43.71596527 529.64453125]
[46.93080139 514.96765137]
[52.15705109 500.88107300]
[59.29298401 487.65893555]
[68.19969177 475.55865479]
[78.70381165 464.81576538]
[90.60087585 455.63937378]
[103.65930176 448.20812988]
[117.62490082 442.66662598]
[107.10276031 432.12463379]
[111.36500549 416.88836670]
[107.82533264 402.31201172]
[97.30319214 391.76998901]
[101.56543732 376.53372192]
[98.02576447 361.95736694]
[94.48609161 347.38098145]
[90.94641876 332.80459595]
[87.40674591 318.22824097]
[83.86707306 303.65185547]
[80.32740021 289.07546997]
[76.75484467 303.64382935]
[69.09848022 316.54266357]
[58.02066040 326.65612793]
[44.47972870 333.10928345]
[29.64710617 335.34384155]
[14.80596924 333.16656494]
[1.24022043 326.76574707]
[-9.87656498 316.69512939]
[-17.58267593 303.82595825]
[-21.21145439 289.27151489]
[-20.44897652 274.29089355]
[-15.36120224 260.18008423]
[-6.38827705 248.15983582]
[5.69355202 239.26998901]
[19.83908653 234.27961731]
[34.82459641 233.62042236]
[49.35367966 237.34944153]
[62.16943359 245.14408875]
[72.16316223 256.33004761]
[78.46932220 269.93621826]
[79.13910675 254.95117188]
[71.21016693 245.81561279]
[71.64553833 233.32585144]
[80.75690460 224.19645691]
[81.64971924 209.22305298]
[82.54253387 194.24964905]
[83.43534851 179.27624512]
[81.67768097 177.09249878]
[80.67912292 174.08093262]
[80.75930023 170.52720642]
[82.12864685 166.82728577]
[84.85327148 163.44641113]
[86.63574219 148.55268860]
[88.41820526 133.65896606]
[90.20066833 118.76525879]
[79.70650482 106.02790070]
[81.54559326 89.62712097]
[94.60025024 79.53040314]
[96.16077423 64.61180115]
[97.72129822 49.69319534]
[99.28182220 34.77458954]
[100.84234619 19.85598564]
[101.51213074 4.87094593]
[101.28880310 -10.12739086]
[101.06547546 -25.12572861]
[100.84214783 -40.12406540]
[100.61882019 -55.12240219]
[86.78437805 -59.10975647]
[74.64810181 -66.82619476]
[65.18923950 -77.63845062]
[59.16801453 -90.66391754]
[57.06451035 -104.84265137]
[59.04040909 -119.02365875]
[64.92661285 -132.05831909]
[74.23765564 -142.89340210]
[86.21175385 -150.65618896]
[99.87310028 -154.72477722]
[99.87310028 -169.72477722]
[99.87310028 -184.72477722]
[99.87310028 -199.72477722]
[99.87310028 -214.72477722]
[96.90354156 -220.63183594]
[97.30296326 -226.30082703]
[100.10308075 -230.16972351]
[100.54968262 -245.16307068]
[100.99629211 -260.15643311]
[93.67330170 -274.18084717]
[101.78610992 -286.67211914]
[94.46312714 -300.69653320]
[102.57593536 -313.18780518]
[103.02253723 -328.18115234]
[95.69955444 -342.20556641]
[103.81236267 -354.69683838]
[104.25896454 -369.69018555]
[90.38024902 -375.89096069]
[79.93454742 -386.93429565]
[74.51475525 -401.13623047]
[74.94735718 -416.33099365]
[81.16637421 -430.20153809]
[92.22346497 -440.63272095]
[106.43249512 -446.03381348]
[121.62669373 -445.58123779]
[135.48904419 -439.34396362]
[145.90567017 -428.27316284]
[151.28807068 -414.05703735]
[150.81549072 -398.86346436]
[144.55999756 -385.00930786]
[133.47550964 -374.60726929]
[119.25231934 -369.24356079]
[118.80570984 -354.25021362]
[126.16064453 -341.29821777]
[118.01589203 -327.73452759]
[117.56928253 -312.74118042]
[124.92421722 -299.78918457]
[116.77946472 -286.22549438]
[124.13439178 -273.27349854]
[115.98963928 -259.70980835]
[115.54303741 -244.71646118]
[115.09642792 -229.72311401]
[114.87310028 -214.72477722]
[114.87310028 -199.72477722]
[114.87310028 -184.72477722]
[114.87310028 -169.72477722]
[114.87310028 -154.72477722]
[129.81950378 -150.04168701]
[142.60302734 -140.95777893]
[151.96531677 -128.35252380]
[156.98030090 -113.45265198]
[157.14562988 -97.71288300]
[152.43315125 -82.67386627]
[143.29269409 -69.81134033]
[130.60922241 -60.39137268]
[115.61715698 -55.34572983]
[115.84048462 -40.34739304]
[116.06381226 -25.34905624]
[116.28713989 -10.35071850]
[116.51046753 4.64761829]
[126.21630859 -6.78901815]
[140.76307678 -10.44845486]
[154.72518921 -4.96581173]
[162.89512634 7.61402035]
[162.22569275 22.59907532]
[152.96658325 34.40029907]
[138.57121277 38.61612320]
[124.40869141 33.67415619]
[115.76094818 21.41650772]
[114.20042419 36.33511353]
[112.63990021 51.25371933]
[111.07937622 66.17232513]
[109.51885223 81.09092712]
[118.61487579 89.91793060]
[121.03797150 102.35908508]
[115.91954041 113.95456696]
[105.09439087 120.54772186]
[103.31192017 135.44143677]
[101.52945709 150.33515930]
[99.74699402 165.22886658]
[98.40876007 180.16905212]
[97.51593781 195.14247131]
[96.62312317 210.11587524]
[95.73030853 225.08927917]
[104.35180664 241.36045837]
[94.12414551 255.62095642]
[93.45436096 270.60598755]
[94.90377808 285.53579712]
[98.44345093 300.11218262]
[101.98312378 314.68856812]
[105.52279663 329.26492310]
[109.06246948 343.84130859]
[112.60214233 358.41769409]
[116.14181519 372.99404907]
[126.91713715 384.57864380]
[122.40171051 398.77233887]
[125.94138336 413.34869385]
[136.71670532 424.93328857]
[132.20127869 439.12695312]
[147.15299988 437.64627075]
[162.16526794 438.26095581]
[176.94587708 440.95904541]
[191.20712280 445.68798828]
[204.67140198 452.35577393]
[217.07662964 460.83261108]
[228.18132019 470.95346069]
[237.76933289 482.52136230]
[245.65403748 495.31109619]
[251.68194580 509.07376099]
[255.73573303 523.54138184]
[257.73648071 538.43243408]
[257.64526367 553.45703125]
[255.46380615 568.32263184]
[251.23463440 582.73999023]
[245.04002380 596.42846680]
[237.00057983 609.12152100]
[227.27279663 620.57208252]
[216.04600525 630.55737305]
[203.53875732 638.88287354]
[189.99449158 645.38665771]
[175.67686462 649.94207764]
[160.86457825 652.46044922]
[145.84594727 652.89282227]
[130.91333008 651.23065186]
[116.35736084 647.50640869]
[102.46141052 641.79248047]
[89.49594879 634.20019531]
[77.71335602 624.87725830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 181]
[16 179]
[17 178]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[24 171]
[25 170]
[45 169]
[46 168]
[49 166]
[50 165]
[51 164]
[52 163]
[57 162]
[58 161]
[59 160]
[60 159]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[89 124]
[90 123]
[91 122]
[93 120]
[95 118]
[96 117]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
