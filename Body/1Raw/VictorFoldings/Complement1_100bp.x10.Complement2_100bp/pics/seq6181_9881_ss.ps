%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[30.36617851 614.89880371]
[24.89559364 600.90527344]
[21.42584610 586.28656006]
[20.02447510 571.32720947]
[20.71875954 556.31842041]
[23.49518394 541.55230713]
[28.29970360 527.31634521]
[35.03879929 513.88763428]
[43.58129501 501.52752686]
[53.76090240 490.47668457]
[65.37947083 480.95013428]
[78.21085358 473.13336182]
[92.00527191 467.17852783]
[88.03318024 452.71398926]
[84.06108093 438.24948120]
[80.08898163 423.78494263]
[69.25762939 413.56091309]
[73.06434631 398.20449829]
[69.09225464 383.73999023]
[65.12015533 369.27545166]
[61.14805984 354.81091309]
[58.31479645 369.54092407]
[52.52055740 383.37661743]
[44.01171875 395.72973633]
[33.15007782 406.07504272]
[20.39748001 413.97256470]
[6.29617023 419.08657837]
[-8.55425549 421.19958496]
[-23.52235031 420.22177124]
[-37.97166443 416.19470215]
[-51.28780365 409.28961182]
[-62.90456009 399.80007935]
[-72.32798004 388.12963867]
[-79.15737915 374.77450562]
[-83.10237122 360.30258179]
[-83.99520111 345.32916260]
[-81.79792023 330.49099731]
[-76.60394287 316.41894531]
[-68.63413239 303.71136475]
[-58.22736359 292.90863037]
[-45.82613754 284.47006226]
[-31.95776176 278.75445557]
[-17.21192551 276.00485229]
[-2.21562839 276.33816528]
[12.39347744 279.74023438]
[25.99420547 286.06637573]
[38.00824738 295.04763794]
[47.92475891 306.30209351]
[55.32208633 319.35119629]
[59.88572311 333.64031982]
[62.11083984 318.80627441]
[64.33596039 303.97222900]
[66.56107330 289.13818359]
[54.49597549 278.00665283]
[51.41236496 261.71392822]
[58.72013474 246.64414978]
[73.71753693 238.82276917]
[75.72154999 223.95724487]
[77.72556305 209.09172058]
[68.51889038 197.43955994]
[70.33948517 182.33525085]
[82.62376404 172.75744629]
[84.62777710 157.89192200]
[86.63179016 143.02639771]
[88.63580322 128.16087341]
[90.63981628 113.29534149]
[83.87030029 97.94770813]
[94.26747894 84.78430939]
[96.04994202 69.89059448]
[83.61944580 78.28598785]
[68.86770630 75.56822968]
[60.24519348 63.29418182]
[62.69127655 48.49497223]
[74.80472565 39.64825821]
[89.64640808 41.82183838]
[98.71408844 53.76967621]
[101.81819916 39.09437561]
[97.10420227 23.99176407]
[107.30780792 13.14115620]
[110.41191101 -1.53414619]
[113.51602173 -16.20944786]
[116.40129852 -30.92934036]
[119.06709290 -45.69055557]
[113.90552521 -60.64611816]
[123.78153992 -71.79571533]
[126.44733429 -86.55693054]
[129.11312866 -101.31814575]
[114.78289032 -105.81785583]
[101.12963104 -112.07818604]
[88.36868286 -120.00040436]
[76.70130920 -129.45956421]
[66.31152344 -140.30647278]
[57.36317825 -152.37007141]
[49.99740982 -165.46009827]
[44.33037949 -179.37008667]
[40.45147324 -193.88067627]
[38.42186356 -208.76301575]
[38.27355957 -223.78237915]
[40.00889969 -238.70188904]
[43.60051346 -253.28625488]
[48.99176407 -267.30545044]
[56.09761429 -280.53836060]
[64.80599976 -292.77630615]
[74.97957611 -303.82626343]
[86.45788574 -313.51397705]
[99.05990601 -321.68661499]
[112.58688354 -328.21533203]
[126.82547760 -332.99713135]
[141.55113220 -335.95663452]
[156.53158569 -337.04708862]
[171.53059387 -336.25137329]
[186.31158447 -333.58200073]
[200.64144897 -329.08108521]
[214.29417419 -322.81961060]
[227.05445862 -314.89633179]
[238.72103882 -305.43618774]
[249.10990906 -294.58840942]
[258.05725098 -282.52404785]
[265.42190552 -269.43341064]
[271.08776855 -255.52293396]
[274.96545410 -241.01202393]
[276.99380493 -226.12951660]
[277.14083862 -211.11013794]
[275.40423584 -196.19078064]
[271.81140137 -181.60671997]
[266.41897583 -167.58798218]
[259.31201172 -154.35566711]
[250.60260010 -142.11845398]
[240.42810059 -131.06935120]
[228.94895935 -121.38260651]
[216.34625244 -113.21101379]
[202.81872559 -106.68344116]
[188.57972717 -101.90283203]
[173.85383606 -98.94459534]
[158.87329102 -97.85537720]
[143.87434387 -98.65235138]
[141.20855713 -83.89113617]
[138.54275513 -69.12992096]
[143.89500427 -55.23017883]
[133.82830811 -43.02476120]
[131.16252136 -28.26354408]
[133.10137939 -23.89893341]
[132.31901550 -18.26999855]
[128.19132996 -13.10533810]
[125.08721924 1.56996393]
[121.98310852 16.24526596]
[126.91912842 30.29819870]
[116.49349976 42.19848251]
[113.38938904 56.87378693]
[110.94366455 71.67305756]
[109.16119385 86.56677246]
[115.79479218 96.13948059]
[114.32477570 107.69284821]
[105.50534821 115.29935455]
[103.50133514 130.16488647]
[101.49732208 145.03041077]
[99.49330902 159.89593506]
[97.48928833 174.76145935]
[106.79878235 187.25030518]
[104.55466461 202.29751587]
[92.59108734 211.09573364]
[90.58707428 225.96125793]
[88.58306122 240.82678223]
[99.23258209 249.57771301]
[104.12862396 262.34671021]
[102.09221649 275.76022339]
[93.76100159 286.33071899]
[81.39511871 291.36328125]
[79.16999817 306.19732666]
[76.94488525 321.03137207]
[74.71976471 335.86541748]
[75.61257935 350.83883667]
[79.58467865 365.30334473]
[83.55677795 379.76788330]
[87.52886963 394.23239136]
[98.64433289 405.49105835]
[94.55350494 419.81286621]
[98.52560425 434.27737427]
[102.49770355 448.74191284]
[106.46979523 463.20642090]
[121.37079620 461.28125000]
[136.39471436 461.44866943]
[151.24909973 463.70547485]
[165.64482117 468.00772095]
[179.30165100 474.27166748]
[191.95376587 482.37539673]
[203.35487366 492.16113281]
[213.28306580 503.43841553]
[221.54507446 515.98773193]
[227.98007202 529.56481934]
[232.46281433 543.90533447]
[234.90603638 558.73022461]
[235.26219177 573.75085449]
[233.52432251 588.67486572]
[229.72627258 603.21173096]
[223.94197083 617.07855225]
[216.28401184 630.00531006]
[206.90145874 641.74047852]
[195.97694397 652.05560303]
[183.72311401 660.74981689]
[170.37850952 667.65399170]
[156.20286560 672.63366699]
[141.47212219 675.59197998]
[126.47302246 676.47125244]
[111.49752808 675.25445557]
[96.83713531 671.96520996]
[82.77722168 666.66754150]
[69.59145355 659.46466064]
[57.53651428 650.49670410]
[46.84704208 639.93823242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 180]
[14 179]
[15 178]
[16 177]
[18 175]
[19 174]
[20 173]
[21 172]
[50 171]
[51 170]
[52 169]
[53 168]
[57 163]
[58 162]
[59 161]
[62 158]
[63 157]
[64 156]
[65 155]
[66 154]
[68 151]
[69 150]
[76 149]
[77 148]
[79 146]
[80 145]
[81 144]
[82 141]
[83 140]
[85 138]
[86 137]
[87 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
