%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[29.54134178 863.71844482]
[14.54149628 863.97973633]
[-0.45643106 863.62500000]
[-15.42714977 862.65484619]
[-30.34541702 861.07086182]
[-45.18607712 858.87579346]
[-59.92410278 856.07324219]
[-74.53464508 852.66796875]
[-88.99306488 848.66577148]
[-103.27498627 844.07330322]
[-117.35631561 838.89843750]
[-131.21333313 833.14978027]
[-144.82263184 826.83709717]
[-158.16131592 819.97094727]
[-171.20684814 812.56298828]
[-183.93724060 804.62573242]
[-196.33105469 796.17248535]
[-208.36735535 787.21752930]
[-220.02586365 777.77600098]
[-231.28692627 767.86376953]
[-242.13154602 757.49755859]
[-252.54144287 746.69488525]
[-262.49905396 735.47393799]
[-271.98757935 723.85363770]
[-280.99105835 711.85363770]
[-289.49426270 699.49401855]
[-297.48287964 686.79577637]
[-304.94342041 673.78027344]
[-311.86334229 660.46942139]
[-318.23095703 646.88568115]
[-324.03549194 633.05200195]
[-329.26721191 618.99169922]
[-333.91726685 604.72845459]
[-337.97784424 590.28631592]
[-341.44204712 575.68963623]
[-344.30404663 560.96301270]
[-346.55908203 546.13134766]
[-348.20324707 531.21960449]
[-349.23385620 516.25292969]
[-349.64913940 501.25656128]
[-349.44839478 486.25576782]
[-348.63195801 471.27587891]
[-347.20120239 456.34213257]
[-345.15853882 441.47973633]
[-342.50744629 426.71371460]
[-339.25234985 412.06900024]
[-335.39874268 397.57025146]
[-330.95315552 383.24194336]
[-325.92309570 369.10821533]
[-320.31698608 355.19293213]
[-314.14431763 341.51953125]
[-307.41546631 328.11108398]
[-300.14184570 314.99020386]
[-292.33563232 302.17898560]
[-284.01007080 289.69906616]
[-275.17913818 277.57147217]
[-265.85778809 265.81665039]
[-256.06167603 254.45443726]
[-245.80735779 243.50398254]
[-235.11210632 232.98374939]
[-223.99395752 222.91148376]
[-212.47167969 213.30416870]
[-200.56468201 204.17799377]
[-188.29304504 195.54837036]
[-175.67745972 187.42982483]
[-162.73921204 179.83604431]
[-149.50010681 172.77986145]
[-135.98246765 166.27316284]
[-122.20909119 160.32691956]
[-108.20320892 154.95114136]
[-93.98843384 150.15492249]
[-79.58873749 145.94633484]
[-65.02838898 142.33245850]
[-50.33195114 139.31942749]
[-35.52420807 136.91229248]
[-20.63012123 135.11511230]
[-5.67480850 133.93093872]
[9.31651115 133.36174011]
[24.31855965 133.40849304]
[39.30604172 134.07112122]
[54.25368118 135.34851074]
[69.13627625 137.23849487]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[104.50007629 42.48270035]
[107.60418701 27.80739975]
[110.70829773 13.13209629]
[109.42252350 4.08861303]
[113.96941376 -1.73783994]
[117.29167175 -16.36529922]
[120.61393738 -30.99275970]
[123.93619537 -45.62022018]
[110.15757751 -51.66557693]
[97.77220917 -60.20952225]
[87.22779846 -70.94320679]
[78.90553284 -83.47860718]
[73.10624695 -97.36258698]
[70.03958130 -112.09323883]
[69.81640625 -127.13806152]
[72.44477081 -141.95318604]
[77.82967377 -156.00308228]
[85.77645111 -168.77983093]
[95.99783325 -179.82156372]
[108.12432861 -188.72912598]
[121.71755981 -195.18052673]
[136.28614807 -198.94253540]
[151.30343628 -199.87918091]
[166.22657776 -197.95658875]
[180.51609802 -193.24426270]
[193.65545654 -185.91255188]
[205.16964722 -176.22648621]
[214.64245605 -164.53620911]
[221.73144531 -151.26432800]
[226.18034363 -136.89060974]
[227.82833862 -121.93466187]
[226.61584473 -106.93711090]
[222.58670044 -92.44013214]
[215.88656616 -78.96776581]
[206.75762939 -67.00704193]
[195.52989197 -56.99032211]
[182.60925293 -49.27970886]
[168.46276855 -44.15394211]
[153.60183716 -41.79830551]
[138.56365967 -42.29796219]
[135.24139404 -27.67050171]
[131.91912842 -13.04304028]
[128.59687805 1.58441961]
[125.38360596 16.23620605]
[122.27949524 30.91150856]
[119.17538452 45.58681107]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[113.14158630 146.54646301]
[127.51480103 150.84465027]
[141.69943237 155.72930908]
[155.67156982 161.19219971]
[169.40763855 167.22410583]
[182.88449097 173.81486511]
[196.07939148 180.95336914]
[208.97010803 188.62756348]
[221.53488159 196.82450867]
[233.75253296 205.53041077]
[245.60246277 214.73056030]
[257.06469727 224.40943909]
[268.11990356 234.55075073]
[278.74942017 245.13739014]
[288.93536377 256.15148926]
[298.66052246 267.57449341]
[307.90847778 279.38714600]
[316.66372681 291.56948853]
[324.91140747 304.10101318]
[332.63766479 316.96060181]
[339.82943726 330.12652588]
[346.47463989 343.57662964]
[352.56204224 357.28820801]
[358.08139038 371.23812866]
[363.02334595 385.40289307]
[367.37960815 399.75860596]
[371.14282227 414.28106689]
[374.30667114 428.94577026]
[376.86575317 443.72802734]
[378.81579590 458.60287476]
[380.15353394 473.54522705]
[380.87667847 488.52990723]
[380.98400879 503.53164673]
[380.47534180 518.52514648]
[379.35153198 533.48510742]
[377.61453247 548.38635254]
[375.26718140 563.20367432]
[372.31350708 577.91217041]
[368.75845337 592.48699951]
[364.60803223 606.90356445]
[359.86926270 621.13757324]
[354.55007935 635.16503906]
[348.65948486 648.96234131]
[342.20739746 662.50610352]
[335.20474243 675.77362061]
[327.66326904 688.74243164]
[319.59573364 701.39068604]
[311.01571655 713.69702148]
[301.93768311 725.64080811]
[292.37695312 737.20178223]
[282.34967041 748.36047363]
[271.87271118 759.09814453]
[260.96374512 769.39660645]
[249.64115906 779.23846436]
[237.92407227 788.60723877]
[225.83222961 797.48706055]
[213.38603210 805.86291504]
[200.60644531 813.72076416]
[187.51502991 821.04736328]
[174.13385010 827.83026123]
[160.48548889 834.05810547]
[146.59295654 839.72033691]
[132.47966003 844.80743408]
[118.16941833 849.31085205]
[103.68635559 853.22296143]
[89.05488586 856.53710938]
[74.29969788 859.24780273]
[59.44565201 861.35046387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 142]
[84 141]
[85 140]
[87 138]
[88 137]
[89 136]
[90 135]
[91 134]
[92 133]
[94 132]
[95 131]
[96 130]
[97 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
