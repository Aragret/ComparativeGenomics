%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[103.83944702 478.25335693]
[101.27667236 463.45431519]
[100.55200195 448.45248413]
[101.67641449 433.47534180]
[104.63286591 418.74987793]
[109.37654114 404.49935913]
[115.83552551 390.93981934]
[123.91189575 378.27682495]
[133.48323059 366.70230103]
[144.40441895 356.39175415]
[156.50990295 347.50149536]
[169.61616516 340.16629028]
[163.95338440 326.27624512]
[158.29060364 312.38623047]
[152.62780762 298.49618530]
[150.09928894 297.28594971]
[147.89779663 295.00119019]
[146.43502808 291.76150513]
[146.07177734 287.83306885]
[147.06866455 283.60693359]
[142.24266052 269.40447998]
[137.41667175 255.20202637]
[132.28829956 249.88021851]
[132.62625122 240.75204468]
[128.01225281 226.47930908]
[123.39823914 212.20657349]
[120.44236755 210.28430176]
[118.27070618 206.83482361]
[117.59091949 202.24230957]
[118.91232300 197.19245911]
[114.94023132 182.72793579]
[110.96813202 168.26341248]
[100.13677979 158.03936768]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[76.08241272 82.36745453]
[72.26020050 67.64178467]
[79.82759094 54.86406326]
[68.71212769 43.60542297]
[72.80295563 29.28360558]
[68.83085632 14.81908226]
[64.85876465 0.35455871]
[60.88666534 -14.10996532]
[56.91456985 -28.57448959]
[46.11118698 -35.62074661]
[43.10060120 -47.75005722]
[48.96738815 -58.32868195]
[45.21109009 -72.85074615]
[41.45478821 -87.37280273]
[37.69848633 -101.89485931]
[26.75187874 -113.31774902]
[31.05548286 -127.57707214]
[27.29918289 -142.09912109]
[22.12047005 -149.62367249]
[23.59677887 -156.86537170]
[20.05710602 -171.44175720]
[16.51743507 -186.01812744]
[12.97776222 -200.59449768]
[9.43808937 -215.17088318]
[5.89841700 -229.74725342]
[-8.94659901 -227.52650452]
[-23.93091965 -226.64538574]
[-38.93389893 -227.11102295]
[-53.83474350 -228.91966248]
[-68.51347351 -232.05673218]
[-82.85189819 -236.49696350]
[-96.73458099 -242.20463562]
[-110.04973602 -249.13377380]
[-122.69015503 -257.22857666]
[-134.55407715 -266.42388916]
[-145.54595947 -276.64566040]
[-155.57730103 -287.81161499]
[-164.56735229 -299.83181763]
[-172.44372559 -312.60949707]
[-179.14299011 -326.04177856]
[-184.61120605 -340.02050781]
[-188.80435181 -354.43313599]
[-191.68867493 -369.16360474]
[-193.24093628 -384.09332275]
[-193.44865417 -399.10208130]
[-192.31015015 -414.06906128]
[-189.83457947 -428.87371826]
[-186.04188538 -443.39685059]
[-180.96260071 -457.52154541]
[-174.63761902 -471.13409424]
[-167.11788940 -484.12484741]
[-158.46392822 -496.38922119]
[-148.74542236 -507.82849121]
[-138.04061890 -518.35052490]
[-126.43571472 -527.87066650]
[-114.02414703 -536.31219482]
[-100.90584564 -543.60711670]
[-87.18643951 -549.69677734]
[-72.97637939 -554.53210449]
[-58.39008713 -558.07421875]
[-43.54500198 -560.29449463]
[-28.56065559 -561.17517090]
[-13.55768871 -560.70904541]
[1.34309828 -558.89996338]
[16.02173042 -555.76245117]
[30.36002159 -551.32177734]
[44.24252701 -545.61370850]
[57.55747223 -538.68414307]
[70.19764709 -530.58898926]
[82.06127930 -521.39331055]
[93.05285645 -511.17117310]
[103.08386230 -500.00491333]
[112.07354736 -487.98446655]
[119.94952393 -475.20654297]
[126.64837646 -461.77404785]
[132.11616516 -447.79516602]
[136.30888367 -433.38241577]
[139.19274902 -418.65182495]
[140.74456787 -403.72207642]
[140.95181274 -388.71328735]
[139.81285095 -373.74636841]
[137.33682251 -358.94177246]
[133.54368591 -344.41876221]
[128.46397400 -330.29421997]
[122.13858795 -316.68188477]
[114.61844635 -303.69134521]
[105.96411133 -291.42721558]
[96.24525452 -279.98825073]
[85.54013824 -269.46652222]
[73.93494415 -259.94677734]
[61.52311707 -251.50563049]
[48.40459442 -244.21107483]
[34.68499756 -238.12182617]
[20.47479248 -233.28692627]
[24.01446533 -218.71055603]
[27.55413628 -204.13417053]
[31.09380913 -189.55780029]
[34.63348389 -174.98143005]
[38.17315292 -160.40504456]
[41.82124329 -145.85542297]
[45.57754135 -131.33337402]
[56.25547409 -120.94919586]
[52.22054672 -105.65116119]
[55.97684860 -91.12910461]
[59.73314667 -76.60704041]
[63.48944855 -62.08498383]
[76.44679260 -50.24969101]
[71.37909698 -32.54658508]
[75.35118866 -18.08206177]
[79.32328796 -3.61753750]
[83.29537964 10.84698677]
[87.26747894 25.31151009]
[98.09883118 35.53555298]
[94.29211426 50.89196777]
[107.32388306 58.01295853]
[111.55821228 72.62545776]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[129.52348328 149.96949768]
[125.43265533 164.29130554]
[129.40475464 178.75582886]
[133.37684631 193.22035217]
[137.67097473 207.59257507]
[142.28498840 221.86531067]
[146.89898682 236.13803101]
[151.61912537 250.37602234]
[156.44512939 264.57849121]
[161.27111816 278.78094482]
[166.51783752 292.83340454]
[172.18061829 306.72344971]
[177.84341431 320.61346436]
[183.50619507 334.50347900]
[198.00517273 330.58441162]
[212.87588501 328.47683716]
[227.89286804 328.21270752]
[242.82847595 329.79605103]
[257.45629883 333.20281982]
[271.55459595 338.38143921]
[284.90960693 345.25335693]
[297.31890869 353.71438599]
[308.59432983 363.63629150]
[318.56500244 374.86862183]
[327.07971191 387.24114990]
[334.00942993 400.56625366]
[339.24908447 414.64196777]
[342.71920776 429.25491333]
[344.36724854 444.18353271]
[344.16818237 459.20150757]
[342.12506104 474.08120728]
[338.26882935 488.59701538]
[332.65795898 502.52893066]
[325.37750244 515.66571045]
[316.53784180 527.80816650]
[306.27297974 538.77233887]
[294.73852539 548.39190674]
[282.10934448 556.52105713]
[268.57687378 563.03656006]
[254.34628296 567.83966064]
[239.63330078 570.85754395]
[224.66096497 572.04449463]
[209.65625000 571.38244629]
[194.84663391 568.88146973]
[180.45663452 564.57946777]
[166.70437622 558.54168701]
[153.79833984 550.85961914]
[141.93420410 541.64971924]
[131.29180908 531.05163574]
[122.03249359 519.22607422]
[114.29662323 506.35220337]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 173]
[13 172]
[14 171]
[15 170]
[20 169]
[21 168]
[22 167]
[24 166]
[25 165]
[26 164]
[30 163]
[31 162]
[32 161]
[34 159]
[35 158]
[36 157]
[38 155]
[41 152]
[43 150]
[44 149]
[45 148]
[46 147]
[47 146]
[50 144]
[51 143]
[52 142]
[53 141]
[55 139]
[56 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
