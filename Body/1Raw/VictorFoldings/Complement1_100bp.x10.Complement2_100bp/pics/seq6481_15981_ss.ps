%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[15.54844379 463.20181274]
[19.00636292 477.84555054]
[19.63017654 492.87908936]
[17.39733505 507.75897217]
[12.38855457 521.94732666]
[4.78489828 534.93115234]
[-5.13876629 546.24121094]
[-17.02370453 555.46862793]
[-30.44028282 562.27978516]
[-44.90350342 566.42852783]
[-59.89052200 567.76477051]
[-74.85958099 566.24035645]
[-89.26953888 561.91027832]
[-102.59950256 554.93115234]
[-114.36759949 545.55517578]
[-124.14840698 534.12133789]
[-131.58837891 521.04302979]
[-136.41853333 506.79287720]
[-138.46429443 491.88613892]
[-137.65168762 476.86160278]
[-134.01008606 462.26245117]
[-127.67115784 448.61642456]
[-118.86402893 436.41677856]
[-107.90707397 426.10458374]
[-95.19638824 418.05255127]
[-81.19144440 412.55181885]
[-66.39852142 409.80120850]
[-51.35236740 409.90014648]
[-36.59689331 412.84506226]
[-30.93410683 398.95504761]
[-25.27132034 385.06503296]
[-19.60853386 371.17498779]
[-21.96850014 356.46853638]
[-9.59391689 346.61053467]
[-3.93113065 332.72052002]
[1.73165584 318.83047485]
[-7.12122107 301.47708130]
[-0.25155157 282.92144775]
[18.33211708 275.28424072]
[23.36903191 261.15521240]
[28.40594864 247.02618408]
[27.20466805 242.40385437]
[28.89435387 236.97781372]
[33.80889893 232.55528259]
[39.26425552 218.58247375]
[44.71961212 204.60968018]
[50.17496872 190.63688660]
[55.63032532 176.66409302]
[41.05401993 180.20404053]
[29.10523605 171.13615417]
[28.59217262 156.14494324]
[39.89303970 146.28135681]
[54.67726135 148.81646729]
[62.04634094 161.87985229]
[68.52584076 148.35150146]
[75.00533295 134.82315063]
[81.48483276 121.29480743]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[94.96538544 73.35172272]
[100.64068604 62.21732712]
[112.00484467 58.07215500]
[118.68503571 44.64177704]
[125.36523438 31.21140289]
[126.38509369 22.13408470]
[132.24617004 17.63191032]
[139.12557983 4.30248213]
[146.00498962 -9.02694702]
[145.64604187 -13.35420036]
[146.58801270 -17.18528557]
[148.51519775 -20.17215538]
[151.03125000 -22.10505486]
[153.71131897 -22.92682648]
[161.37191772 -35.82315445]
[169.03251648 -48.71947861]
[176.69311523 -61.61580658]
[177.08877563 -77.43206787]
[190.24085999 -84.42291260]
[197.90145874 -97.31923676]
[205.56205750 -110.21556854]
[205.62504578 -115.43505859]
[207.49670410 -119.68361664]
[210.50427246 -122.43489075]
[213.86366272 -123.50581360]
[222.09246826 -136.04721069]
[230.32127380 -148.58860779]
[238.55007935 -161.13002014]
[226.73402405 -170.38459778]
[215.73381042 -180.59545898]
[205.62660217 -191.69099426]
[196.48330688 -203.59338379]
[188.36805725 -216.21911621]
[181.33776855 -229.47964478]
[175.44175720 -243.28195190]
[170.72137451 -257.52920532]
[167.20973206 -272.12149048]
[164.93148804 -286.95645142]
[163.90258789 -301.93005371]
[164.13026428 -316.93719482]
[165.61291504 -331.87265015]
[168.34014893 -346.63168335]
[172.29281616 -361.11074829]
[177.44322205 -375.20825195]
[183.75521851 -388.82534790]
[191.18453979 -401.86651611]
[199.67906189 -414.24023438]
[209.17921448 -425.85977173]
[219.61834717 -436.64361572]
[230.92324829 -446.51608276]
[243.01461792 -455.40795898]
[255.80763245 -463.25686646]
[269.21255493 -470.00775146]
[283.13540649 -475.61322021]
[297.47845459 -480.03402710]
[312.14111328 -483.23910522]
[327.02056885 -485.20599365]
[342.01242065 -485.92089844]
[357.01150513 -485.37878418]
[371.91262817 -483.58349609]
[386.61126709 -480.54757690]
[401.00430298 -476.29235840]
[414.99078369 -470.84768677]
[428.47262573 -464.25173950]
[441.35522461 -456.55075073]
[453.54824829 -447.79879761]
[464.96618652 -438.05725098]
[475.52886963 -427.39443970]
[485.16229248 -415.88513184]
[493.79885864 -403.61010742]
[501.37796021 -390.65542603]
[507.84643555 -377.11196899]
[513.15893555 -363.07473755]
[517.27819824 -348.64221191]
[520.17535400 -333.91558838]
[521.83001709 -318.99819946]
[522.23059082 -303.99465942]
[521.37426758 -289.01022339]
[519.26715088 -274.14999390]
[515.92388916 -259.51818848]
[511.36798096 -245.21748352]
[505.63140869 -231.34815979]
[498.75439453 -218.00750732]
[490.78515625 -205.28909302]
[481.77963257 -193.28213501]
[471.80096436 -182.07086182]
[460.91912842 -171.73391724]
[449.21051025 -162.34379578]
[436.75717163 -153.96636963]
[423.64651489 -146.66040039]
[409.97048950 -140.47712708]
[395.82501221 -135.45994568]
[381.30932617 -131.64401245]
[366.52523804 -129.05612183]
[351.57644653 -127.71442413]
[336.56781006 -127.62831879]
[321.60461426 -128.79841614]
[306.79180908 -131.21650696]
[292.23327637 -134.86563110]
[278.03118896 -139.72019958]
[264.28509521 -145.74613953]
[251.09149170 -152.90119934]
[242.86267090 -140.35980225]
[234.63386536 -127.81840515]
[226.40505981 -115.27700806]
[218.45837402 -102.55496979]
[210.79777527 -89.65864563]
[203.13717651 -76.76231384]
[203.28945923 -61.86848831]
[189.58944702 -53.95520782]
[181.92884827 -41.05888367]
[174.26824951 -28.16255569]
[166.60765076 -15.26622868]
[159.33442688 -2.14753461]
[152.45501709 11.18189430]
[145.57559204 24.51132393]
[138.79560852 37.89159775]
[132.11541748 51.32197189]
[125.43521881 64.75234985]
[127.46546173 82.18350220]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[95.01317596 127.77430725]
[88.53367615 141.30264282]
[82.05418396 154.83099365]
[75.57468414 168.35934448]
[69.60312653 182.11944580]
[64.14776611 196.09223938]
[58.69240952 210.06503296]
[53.23705292 224.03784180]
[47.78169632 238.01063538]
[42.53497696 252.06311035]
[37.49806213 266.19213867]
[32.46114731 280.32116699]
[39.29299545 288.51565552]
[42.08575439 298.72875977]
[40.40015411 309.09997559]
[34.60650253 317.76870728]
[25.80593109 323.20794678]
[15.62168312 324.49325562]
[9.95889664 338.38330078]
[4.29610968 352.27331543]
[6.25103474 367.97326660]
[-5.71850729 376.83776855]
[-11.38129425 390.72781372]
[-17.04408073 404.61782837]
[-22.70686722 418.50787354]
[-10.09832478 426.71890259]
[0.72822934 437.16793823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 208]
[30 207]
[31 206]
[32 205]
[34 203]
[35 202]
[36 201]
[39 195]
[40 194]
[41 193]
[44 192]
[45 191]
[46 190]
[47 189]
[48 188]
[54 187]
[55 186]
[56 185]
[57 184]
[58 183]
[60 181]
[63 179]
[64 178]
[65 177]
[67 176]
[68 175]
[69 174]
[74 173]
[75 172]
[76 171]
[77 170]
[79 168]
[80 167]
[81 166]
[85 165]
[86 164]
[87 163]
[88 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
