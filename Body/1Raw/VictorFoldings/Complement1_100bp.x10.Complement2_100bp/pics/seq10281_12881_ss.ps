%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[18.02762413 589.07104492]
[6.01048803 598.05682373]
[-6.55767918 606.25415039]
[-19.62523270 613.62945557]
[-33.13847351 620.15234375]
[-47.04187393 625.79602051]
[-61.27830124 630.53729248]
[-75.78925323 634.35668945]
[-90.51510620 637.23852539]
[-105.39533997 639.17095947]
[-120.36881256 640.14605713]
[-135.37399292 640.15972900]
[-150.34922791 639.21203613]
[-165.23297119 637.30682373]
[-179.96406555 634.45190430]
[-194.48197937 630.65899658]
[-208.72703552 625.94378662]
[-222.64073181 620.32550049]
[-236.16587830 613.82733154]
[-249.24688721 606.47595215]
[-261.83001709 598.30157471]
[-273.86355591 589.33776855]
[-285.29806519 579.62139893]
[-296.08651733 569.19238281]
[-306.18463135 558.09356689]
[-315.55090332 546.37054443]
[-324.14682007 534.07153320]
[-331.93707275 521.24707031]
[-338.88964844 507.94976807]
[-344.97598267 494.23437500]
[-350.17105103 480.15719604]
[-354.45352173 465.77609253]
[-357.80578613 451.15014648]
[-360.21408081 436.33947754]
[-361.66848755 421.40496826]
[-362.16305542 406.40792847]
[-361.69573975 391.41000366]
[-360.26846313 376.47286987]
[-357.88708496 361.65783691]
[-354.56140137 347.02584839]
[-350.30505371 332.63699341]
[-345.13555908 318.55038452]
[-339.07415771 304.82394409]
[-332.14575195 291.51406860]
[-324.37878418 278.67544556]
[-315.80523682 266.36083984]
[-306.46029663 254.62084961]
[-296.38235474 243.50370789]
[-285.61282349 233.05509949]
[-274.19601440 223.31797791]
[-262.17877197 214.33233643]
[-249.61051941 206.13510132]
[-236.54287720 198.75996399]
[-223.02957153 192.23724365]
[-209.12609863 186.59371948]
[-194.88961792 181.85258484]
[-180.37863159 178.03334045]
[-165.65274048 175.15165710]
[-150.77249146 173.21940613]
[-135.79899597 172.24449158]
[-120.79382324 172.23094177]
[-105.81860352 173.17881775]
[-90.93487549 175.08421326]
[-76.20381927 177.93930054]
[-61.68595123 181.73234558]
[-47.44093323 186.44775391]
[-33.52730179 192.06616211]
[-20.00223351 198.56448364]
[-6.92130375 205.91601562]
[5.66173363 214.09054565]
[14.62242985 202.06115723]
[23.58312607 190.03178406]
[32.54382324 178.00241089]
[33.94184113 163.17355347]
[48.39077759 156.72850037]
[57.35147476 144.69911194]
[58.74949646 129.87026978]
[73.19843292 123.42520905]
[82.15912628 111.39582825]
[78.84678650 99.16136932]
[83.11729431 87.22753906]
[93.43978119 79.87227631]
[106.11392975 79.73225403]
[115.25273132 67.83762360]
[117.52504730 52.18044662]
[131.41467285 46.80200577]
[140.55346680 34.90737534]
[149.69227600 23.01274109]
[158.83106995 11.11810780]
[165.90818787 -2.10741949]
[170.73417664 -16.30987549]
[175.56018066 -30.51233101]
[180.38616943 -44.71478653]
[185.21217346 -58.91724014]
[171.77719116 -65.64144135]
[159.38298035 -74.13246918]
[148.26046753 -84.23213959]
[138.61683655 -95.75229645]
[130.63174438 -108.47834015]
[124.45395660 -122.17318726]
[120.19855499 -136.58169556]
[117.94482422 -151.43547058]
[117.73474121 -166.45777893]
[119.57221985 -181.36875916]
[123.42302704 -195.89064026]
[129.21543884 -209.75288391]
[136.84152222 -222.69723511]
[146.15924072 -234.48257446]
[156.99497986 -244.88932800]
[169.14688110 -253.72363281]
[182.38858032 -260.82089233]
[196.47337341 -266.04891968]
[211.13888550 -269.31030273]
[226.11190796 -270.54428101]
[241.11347961 -269.72787476]
[255.86413574 -266.87628174]
[270.08911133 -262.04263306]
[283.52337646 -255.31697083]
[295.91665649 -246.82460022]
[307.03808594 -236.72372437]
[316.68045044 -225.20252991]
[324.66418457 -212.47561646]
[330.84048462 -198.78010559]
[335.09429932 -184.37112427]
[337.34643555 -169.51712036]
[337.55490112 -154.49479675]
[335.71582031 -139.58399963]
[331.86343384 -125.06254578]
[326.06951904 -111.20092773]
[318.44201660 -98.25739288]
[309.12304688 -86.47306824]
[298.28616333 -76.06748962]
[286.13330078 -67.23450470]
[272.89083862 -60.13866806]
[258.80548096 -54.91217041]
[244.13961792 -51.65238190]
[229.16647339 -50.42002487]
[214.16499329 -51.23805618]
[199.41462708 -54.09124374]
[194.58862305 -39.88879013]
[189.76263428 -25.68633270]
[184.93663025 -11.48387718]
[180.11064148 2.71857834]
[190.78776550 -7.81703138]
[203.80152893 -15.27636337]
[218.28880310 -19.16466522]
[233.28869629 -19.22404289]
[247.80628967 -15.45055580]
[260.87872314 -8.09448624]
[271.63891602 2.35626411]
[279.37319946 15.20853424]
[283.56857300 29.60988045]
[283.94680786 44.60511017]
[280.48275757 59.19964600]
[273.40625000 72.42548370]
[263.18658447 83.40540314]
[250.50163269 91.41114807]
[236.19273376 95.91172028]
[221.20892334 96.60861206]
[206.54405212 93.45560455]
[193.17077637 86.66182709]
[181.97608948 76.67788696]
[173.70251465 64.16597748]
[168.89878845 49.95597076]
[167.88354492 34.99036789]
[170.72570801 20.25691032]
[161.58689880 32.15154266]
[152.44810486 44.04617691]
[143.30929565 55.94080734]
[141.69065857 70.74720001]
[127.14736176 76.97642517]
[118.00856018 88.87105560]
[120.52592468 105.18150330]
[110.56877136 118.34291840]
[94.18850708 120.35652924]
[85.22781372 132.38591003]
[83.18885803 148.07518005]
[69.38085175 153.65982056]
[60.42015839 165.68919373]
[58.38120651 181.37846375]
[44.57320023 186.96310425]
[35.61250305 198.99247742]
[26.65180779 211.02185059]
[17.69111061 223.05123901]
[29.12571907 232.76748657]
[39.91430664 243.19638062]
[50.01254654 254.29508972]
[59.37893677 266.01797485]
[67.97499084 278.31692505]
[75.76538849 291.14132690]
[82.71811676 304.43850708]
[88.80459595 318.15383911]
[93.99982452 332.23095703]
[98.28245544 346.61203003]
[101.63488007 361.23791504]
[104.04333496 376.04855347]
[105.49791718 390.98306274]
[105.99264526 405.98010254]
[105.52548981 420.97802734]
[104.09837341 435.91519165]
[101.71716309 450.73022461]
[98.39163208 465.36227417]
[94.13545227 479.75115967]
[88.96611786 493.83782959]
[82.90486145 507.56433105]
[75.97660065 520.87426758]
[68.20980072 533.71301270]
[59.63637543 546.02770996]
[50.29155350 557.76782227]
[40.21374130 568.88507080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 184]
[71 183]
[72 182]
[73 181]
[75 179]
[76 178]
[78 176]
[79 175]
[83 172]
[84 171]
[86 169]
[87 168]
[88 167]
[89 166]
[90 143]
[91 142]
[92 141]
[93 140]
[94 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
