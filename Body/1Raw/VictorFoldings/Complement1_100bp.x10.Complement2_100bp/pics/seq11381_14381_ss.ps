%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[133.22634888 605.83514404]
[144.07513428 594.34259033]
[143.40534973 579.35754395]
[142.73556519 564.37249756]
[142.06578064 549.38745117]
[141.39599609 534.40240479]
[138.53858948 530.57562256]
[138.05480957 524.91320801]
[140.93609619 518.96264648]
[140.71276855 503.96429443]
[140.04298401 488.97924805]
[138.92733765 474.02078247]
[137.81169128 459.06234741]
[129.14920044 446.94580078]
[135.83866882 432.60836792]
[134.72302246 417.64990234]
[133.49604797 402.70016479]
[124.41766357 394.70584106]
[123.18048859 382.26986694]
[130.99047852 372.00503540]
[129.87483215 357.04656982]
[128.75918579 342.08813477]
[127.64353180 327.12966919]
[126.52788544 312.17123413]
[125.41223145 297.21276855]
[123.07675171 282.39569092]
[119.53707886 267.81933594]
[115.99740601 253.24295044]
[112.45773315 238.66658020]
[108.91806030 224.09019470]
[105.37838745 209.51382446]
[101.83871460 194.93745422]
[98.29904175 180.36106873]
[94.75936890 165.78469849]
[90.80406189 180.25381470]
[82.19512939 192.53739929]
[69.94394684 201.19236755]
[55.48977280 205.20196533]
[40.53066635 204.09512329]
[26.82400513 198.00189209]
[15.98003960 187.63809204]
[9.27270412 174.22125244]
[7.48997164 159.32756042]
[10.84127522 144.70672607]
[18.93290710 132.07638550]
[30.81427002 122.92034912]
[45.08955383 118.31423187]
[60.08171463 118.79917908]
[74.02947998 124.31821442]
[85.29429626 134.22296143]
[92.55327606 147.35130310]
[92.55327606 132.35130310]
[84.81597900 119.62403870]
[92.55327606 105.82386017]
[89.78022003 101.37143707]
[89.69917297 95.68225861]
[92.78325653 90.37892151]
[93.22985840 75.38556671]
[93.67646790 60.39221954]
[94.12307739 45.39886856]
[94.56967926 30.40551949]
[95.01628876 15.41216946]
[95.46289062 0.41881993]
[95.46289062 -14.58117962]
[94.90467834 -29.57078934]
[94.23489380 -44.55582809]
[82.85408783 -55.19138336]
[82.38829803 -70.39788055]
[92.59780884 -81.18219757]
[91.92802429 -96.16723633]
[91.25823975 -111.15227509]
[90.58845520 -126.13731384]
[82.24266052 -139.57823181]
[89.40393829 -152.63830566]
[88.73415375 -167.62333679]
[85.22467804 -176.05668640]
[88.16763306 -182.83613586]
[87.72103119 -197.82948303]
[87.27442169 -212.82283020]
[86.82781982 -227.81617737]
[86.38121033 -242.80952454]
[85.93460083 -257.80288696]
[75.71256256 -246.82518005]
[60.84164047 -244.86161804]
[48.12061310 -252.80992126]
[43.36536789 -267.03622437]
[48.74993896 -281.03643799]
[61.81257248 -288.40988159]
[76.58120728 -285.78549194]
[86.30447388 -274.36138916]
[87.42012787 -289.31985474]
[88.53577423 -304.27828979]
[89.65142059 -319.23675537]
[90.65568542 -334.20309448]
[83.75350189 -348.43933105]
[92.23462677 -360.68350220]
[93.12744141 -375.65692139]
[94.02025604 -390.63031006]
[94.91307068 -405.60372925]
[95.80588531 -420.57711792]
[82.11794281 -427.18838501]
[72.00566864 -438.53784180]
[67.01113129 -452.89483643]
[67.89594269 -468.06997681]
[74.52518463 -481.74923706]
[85.88794708 -491.84655762]
[100.25148773 -496.82220459]
[115.42547607 -495.91744995]
[129.09597778 -489.27020264]
[139.17835999 -477.89416504]
[144.13511658 -463.52410889]
[143.21037292 -448.35131836]
[136.54516602 -434.68957520]
[125.15587616 -424.62216187]
[110.77929688 -419.68432617]
[109.88647461 -404.71090698]
[108.99365997 -389.73751831]
[108.10084534 -374.76409912]
[107.20803070 -359.79067993]
[114.17407227 -346.62545776]
[105.62908936 -333.31027222]
[108.36888885 -326.44622803]
[104.60987854 -318.12109375]
[103.49422455 -303.16265869]
[102.37857819 -288.20419312]
[101.26293182 -273.24575806]
[100.92795563 -258.24948120]
[101.37455750 -243.25613403]
[101.82116699 -228.26278687]
[102.26776886 -213.26943970]
[102.71437836 -198.27609253]
[103.16098022 -183.28273010]
[103.71919250 -168.29312134]
[104.38897705 -153.30809021]
[112.68686676 -140.93899536]
[105.57349396 -126.80709839]
[106.24327850 -111.82205963]
[106.91306305 -96.83702087]
[107.58284760 -81.85198212]
[118.71377563 -72.02152252]
[119.60649872 -56.83410263]
[109.21993256 -45.22561264]
[109.88971710 -30.24057579]
[113.32875824 -23.69879913]
[110.45623779 -15.02778625]
[112.40172577 -13.00955963]
[113.66497803 -10.09909725]
[113.90216827 -6.55238771]
[112.86837769 -2.74505281]
[110.45623779 0.86542588]
[110.00963593 15.85877609]
[109.56302643 30.85212517]
[109.11642456 45.84547424]
[108.66981506 60.83882523]
[108.22321320 75.83217621]
[107.77660370 90.82552338]
[107.55327606 105.82386017]
[115.29058075 119.62403870]
[107.55327606 132.35130310]
[107.55327606 147.35130310]
[109.33574677 162.24502563]
[112.87541962 176.82139587]
[116.41509247 191.39778137]
[119.95475769 205.97415161]
[123.49443054 220.55052185]
[127.03410339 235.12690735]
[130.57377625 249.70327759]
[134.11344910 264.27966309]
[137.65312195 278.85601807]
[142.94886780 264.82196045]
[154.09843445 254.78765869]
[168.61099243 250.99484253]
[183.24440002 254.29080200]
[194.72952271 263.93923950]
[200.50053406 277.78463745]
[199.26818848 292.73391724]
[191.30780029 305.44738770]
[178.39773560 313.08480835]
[163.42211914 313.93997192]
[149.72657776 307.82180786]
[140.37068176 296.09710693]
[141.48634338 311.05557251]
[142.60198975 326.01403809]
[143.71763611 340.97247314]
[144.83328247 355.93093872]
[145.94892883 370.88937378]
[156.66697693 385.86285400]
[148.43623352 401.36193848]
[152.31877136 409.63018799]
[149.68147278 416.53427124]
[150.79711914 431.49270630]
[159.53939819 444.67919922]
[152.77014160 457.94668579]
[153.88578796 472.90515137]
[155.00143433 487.86358643]
[157.57238770 491.36276245]
[158.77514648 495.12014771]
[158.69656372 498.67388916]
[157.56452942 501.63787842]
[155.71110535 503.74096680]
[155.93443298 518.73931885]
[156.38104248 533.73266602]
[157.05082703 548.71765137]
[157.72061157 563.70269775]
[158.39039612 578.68774414]
[159.06018066 593.67279053]
[170.89102173 604.15167236]
[171.76361084 619.93182373]
[161.16024780 631.65124512]
[145.37171936 632.35693359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[4 204]
[5 203]
[6 202]
[9 201]
[10 200]
[11 195]
[12 194]
[13 193]
[15 191]
[16 190]
[17 188]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[25 181]
[26 169]
[27 168]
[28 167]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[34 161]
[51 160]
[52 159]
[54 157]
[57 156]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[63 150]
[64 145]
[65 143]
[66 142]
[69 139]
[70 138]
[71 137]
[72 136]
[74 134]
[75 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 121]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
