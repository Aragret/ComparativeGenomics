%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[76.97080231 554.70471191]
[64.74925232 563.59991455]
[50.44821167 568.49603271]
[35.33932877 568.95764160]
[20.76607323 564.94366455]
[8.02428913 556.81115723]
[-1.75303185 545.28308105]
[-7.69649792 531.38464355]
[-9.27762032 516.35168457]
[-6.35580587 501.52078247]
[0.80913913 488.21084595]
[11.58011246 477.60528564]
[24.99936676 470.64721680]
[39.87367249 467.95526123]
[33.70359039 454.39874268]
[43.02595520 441.61578369]
[44.80842209 426.72207642]
[46.59088898 411.82836914]
[48.37335205 396.93463135]
[50.15581894 382.04092407]
[40.85293579 373.12542725]
[38.34623337 360.28805542]
[43.77077103 348.17257690]
[55.35069275 341.29360962]
[57.35470581 326.42810059]
[59.35871887 311.56256104]
[53.39115524 297.91567993]
[62.90280914 285.27291870]
[64.90682220 270.40740967]
[52.35270691 278.61679077]
[37.64306641 275.67971802]
[29.20425034 263.27865601]
[31.87039948 248.51748657]
[44.11421967 239.85211182]
[58.92189789 242.24641418]
[67.81068420 254.32794189]
[71.13294983 239.70046997]
[74.45520782 225.07301331]
[77.77746582 210.44555664]
[73.05121613 196.32069397]
[83.65287018 184.57695007]
[86.97512817 169.94949341]
[90.29738617 155.32202148]
[91.96892548 140.41545105]
[91.96892548 125.41545105]
[91.96892548 110.41545105]
[85.33977509 123.87109375]
[75.91831970 135.54312134]
[64.16425323 144.86201477]
[50.65108490 151.37310791]
[36.03815079 154.75869751]
[21.03845215 154.85359192]
[6.38385391 151.65316772]
[-7.21061277 145.31356812]
[-19.08164406 136.14413452]
[-28.65002632 124.59224701]
[-35.44889450 111.22154999]
[-39.14651871 96.68444061]
[-39.56248474 81.69021606]
[-36.67649460 66.97045898]
[-30.62936401 53.24340057]
[-21.71614456 41.17880249]
[-10.37173176 31.36532784]
[2.85035491 24.28179550]
[17.30498123 20.27382851]
[32.28687286 19.53698158]
[47.06502914 22.10721016]
[60.91839218 27.85910606]
[73.17102814 36.51202393]
[83.22509766 47.64376068]
[90.59004974 60.71118546]
[94.90652466 75.07669830]
[95.96417236 90.03277588]
[101.62696075 76.14274597]
[107.28974915 62.25271988]
[112.95253754 48.36269379]
[108.67867279 36.19318390]
[113.68117523 24.74073029]
[124.77846527 19.92649841]
[130.64741516 6.12232113]
[128.92646790 -9.60500717]
[141.02665710 -18.29031372]
[146.89561462 -32.09449005]
[152.76457214 -45.89866638]
[150.10746765 -64.12011719]
[164.52984619 -74.11819458]
[170.19264221 -88.00822449]
[175.85542297 -101.89825439]
[181.51821899 -115.78827667]
[175.63279724 -130.21047974]
[181.57354736 -144.21626282]
[195.35917664 -149.73822021]
[201.02195740 -163.62825012]
[204.01673889 -178.32626343]
[196.48574829 -192.24009705]
[204.41168213 -204.85075378]
[204.63500977 -219.84910583]
[204.85833740 -234.84744263]
[205.08166504 -249.84577942]
[205.30499268 -264.84411621]
[191.82968140 -272.10183716]
[183.28033447 -284.79699707]
[181.62152100 -300.01235962]
[187.23443604 -314.25149536]
[198.82926941 -324.24243164]
[213.74160767 -327.68927002]
[228.54470825 -323.79995728]
[239.83692932 -313.46826172]
[245.02340698 -299.06826782]
[242.91230774 -283.90905762]
[233.98876953 -271.47406006]
[220.30332947 -264.62078857]
[220.08000183 -249.62245178]
[219.85667419 -234.62411499]
[219.63334656 -219.62577820]
[219.41001892 -204.62742615]
[226.95697021 -191.78637695]
[219.01507568 -178.10293579]
[225.85276794 -191.45379639]
[235.54885864 -202.89871216]
[247.59469604 -211.83728027]
[261.35836792 -217.80059814]
[276.11785889 -220.47586060]
[291.09893799 -219.72271729]
[305.51571655 -215.58067322]
[318.61193848 -208.26702881]
[329.70056152 -198.16542053]
[338.19992065 -185.80577087]
[343.66415405 -171.83644104]
[345.80661011 -156.99023438]
[344.51492310 -142.04595947]
[339.85684204 -127.78755188]
[332.07672119 -114.96298218]
[321.58267212 -104.24500275]
[308.92520142 -96.19585419]
[294.76831055 -91.23779297]
[279.85464478 -89.63088989]
[264.96652222 -91.45944977]
[250.88493347 -96.62754822]
[238.34860229 -104.86408234]
[228.01515198 -115.73696899]
[220.42665100 -128.67584229]
[215.98117065 -143.00196838]
[214.91198730 -157.96546936]
[209.24919128 -144.07543945]
[215.24458313 -130.48901367]
[209.69958496 -116.32188416]
[195.40823364 -110.12548828]
[189.74545288 -96.23546600]
[184.08267212 -82.34543610]
[178.41987610 -68.45541382]
[182.82075500 -57.18780899]
[178.21667480 -45.56945419]
[166.56875610 -40.02970886]
[160.69979858 -26.22553062]
[154.83084106 -12.42135334]
[156.97158813 2.31860828]
[144.45159912 11.99128246]
[138.58264160 25.79545975]
[141.64680481 43.07486343]
[126.84255981 54.02547836]
[121.17977142 67.91550446]
[115.51699066 81.80553436]
[109.85420227 95.69555664]
[106.96892548 110.41545105]
[106.96892548 125.41545105]
[106.96892548 140.41545105]
[114.39189911 127.38089752]
[125.97606659 117.85163116]
[140.19734192 113.08138275]
[155.18467712 113.69776917]
[168.96621704 119.61968994]
[179.72877502 130.06800842]
[186.05633545 143.66807556]
[187.11642456 158.63056946]
[182.76954651 172.98692322]
[173.58761597 184.84829712]
[160.77867126 192.65412903]
[146.02795410 195.37742615]
[131.27616882 192.65989685]
[118.46417999 184.85906982]
[109.27761078 173.00129700]
[104.92485046 158.64428711]
[101.60259247 173.27174377]
[98.28032684 187.89920044]
[102.76895142 203.07032776]
[92.40492249 213.76780701]
[89.08266449 228.39527893]
[85.76040649 243.02273560]
[82.43814850 257.65020752]
[79.77235413 272.41140747]
[77.76834106 287.27694702]
[83.59255981 301.98712158]
[74.22425079 313.56655884]
[72.22023010 328.43209839]
[70.21621704 343.29763794]
[81.07539368 357.01248169]
[78.70247650 374.00320435]
[65.04953766 383.82339478]
[63.26707077 398.71710205]
[61.48460388 413.61080933]
[59.70213699 428.50454712]
[57.91967392 443.39825439]
[63.96226120 458.02008057]
[54.76738739 469.73773193]
[68.58638000 475.86364746]
[79.98469543 485.79190063]
[87.94880676 498.63961792]
[91.77053833 513.26446533]
[91.11007690 528.36596680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 205]
[16 203]
[17 202]
[18 201]
[19 200]
[20 199]
[24 196]
[25 195]
[26 194]
[28 192]
[29 191]
[36 190]
[37 189]
[38 188]
[39 187]
[41 185]
[42 184]
[43 183]
[44 167]
[45 166]
[46 165]
[73 164]
[74 163]
[75 162]
[76 161]
[79 159]
[80 158]
[82 156]
[83 155]
[84 154]
[86 151]
[87 150]
[88 149]
[89 148]
[92 145]
[93 144]
[94 118]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
