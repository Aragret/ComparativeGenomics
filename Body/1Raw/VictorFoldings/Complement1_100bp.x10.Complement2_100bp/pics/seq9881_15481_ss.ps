%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[1.21727419 832.46722412]
[-11.91219330 825.08947754]
[-23.14840126 815.06140137]
[-31.96581268 802.85211182]
[-37.95202255 789.03259277]
[-40.82704163 774.24920654]
[-40.45640564 759.19342041]
[-36.85744476 744.56939697]
[-30.19848824 731.06115723]
[-20.79099083 719.30053711]
[-9.07495880 709.83752441]
[4.40163088 703.11474609]
[19.00845146 699.44665527]
[18.56184578 684.45330811]
[18.11524010 669.45996094]
[17.66863441 654.46661377]
[17.22202682 639.47326660]
[16.77542114 624.47991943]
[16.32881546 609.48651123]
[15.88220978 594.49316406]
[5.66017151 605.47088623]
[-9.21075439 607.43444824]
[-21.93178177 599.48614502]
[-26.68702698 585.25982666]
[-21.30245590 571.25964355]
[-8.23982334 563.88616943]
[6.52881241 566.51055908]
[16.25208282 577.93469238]
[17.36773109 562.97619629]
[18.48337936 548.01776123]
[19.59902954 533.05932617]
[20.71467781 518.10089111]
[9.40604401 527.95556641]
[-5.58846617 528.36132812]
[-17.41356468 519.13275146]
[-20.66297340 504.48895264]
[-13.85111046 491.12487793]
[-0.09226496 485.15039062]
[14.32320309 489.29699707]
[22.80520630 501.67068481]
[25.47100067 486.90945435]
[28.13679695 472.14825439]
[30.80259132 457.38702393]
[33.46838760 442.62582397]
[36.13418198 427.86459351]
[38.79998016 413.10339355]
[41.46577454 398.34216309]
[44.13156891 383.58093262]
[38.77932358 369.68121338]
[48.84601974 357.47579956]
[51.51181412 342.71456909]
[46.15956879 328.81481934]
[56.22626495 316.60940552]
[44.49794006 305.12359619]
[41.90079117 288.74627686]
[49.65400314 273.90078735]
[64.87763214 266.52938843]
[67.32335663 251.73011780]
[69.76908112 236.93084717]
[58.17026901 227.58563232]
[52.77054214 213.59638977]
[55.11348724 198.68408203]
[64.66880798 186.86914062]
[78.94815826 181.38760376]
[73.38956451 167.56909180]
[83.27342224 155.21514893]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[92.90181732 77.75989532]
[97.18401337 71.73622131]
[99.84980774 56.97500610]
[102.51560211 42.21378708]
[104.29807281 27.32007027]
[105.19088745 12.34666443]
[105.97220612 -2.63297319]
[106.64199066 -17.61801147]
[107.31177521 -32.60305023]
[107.98155975 -47.58808899]
[100.18982697 -55.17739487]
[97.90814209 -65.58768463]
[101.65398407 -75.33021545]
[109.96516418 -81.27473450]
[111.08081055 -96.23318481]
[112.19646454 -111.19164276]
[105.50700378 -125.52906036]
[114.16947937 -137.64561462]
[115.28513336 -152.60406494]
[115.73173523 -167.59741211]
[115.50840759 -182.59574890]
[115.28507996 -197.59408569]
[115.06175232 -212.59242249]
[114.83842468 -227.59075928]
[106.89652252 -241.27420044]
[114.44347382 -254.11526489]
[114.22014618 -269.11361694]
[113.99681854 -284.11193848]
[100.31138611 -290.96524048]
[91.38784027 -303.40020752]
[89.27674866 -318.55944824]
[94.46321869 -332.95941162]
[105.75543976 -343.29110718]
[120.55854797 -347.18041992]
[135.47088623 -343.73358154]
[147.06571960 -333.74267578]
[152.67863464 -319.50350952]
[151.01982117 -304.28814697]
[142.47047424 -291.59298706]
[128.99514771 -284.33526611]
[129.21847534 -269.33694458]
[129.44180298 -254.33859253]
[137.36773682 -241.72793579]
[129.83676147 -227.81408691]
[130.06008911 -212.81575012]
[130.28341675 -197.81741333]
[130.50674438 -182.81907654]
[130.73007202 -167.82073975]
[141.92750549 -177.80160522]
[156.91009521 -177.07905579]
[167.09512329 -166.06701660]
[166.64816284 -151.07366943]
[155.82524109 -140.68789673]
[140.82621765 -140.85913086]
[130.24359131 -151.48841858]
[129.12792969 -136.52995300]
[135.89720154 -123.26246643]
[127.15491486 -110.07598877]
[126.03926849 -95.11753845]
[124.92361450 -80.15908051]
[134.57107544 -63.40158844]
[122.96659851 -46.91830444]
[122.29681396 -31.93326569]
[121.62702942 -16.94822693]
[120.95724487 -1.96318805]
[123.79894257 4.85931635]
[120.16429138 13.23948002]
[119.27147675 28.21288490]
[129.80105591 17.52981377]
[144.57971191 14.96245193]
[158.09536743 21.46836281]
[165.30702209 34.62100220]
[163.52491760 49.51476288]
[153.41371155 60.59463882]
[138.74465942 63.72810745]
[124.98892975 57.74646759]
[117.27681732 44.87958145]
[114.61102295 59.64080048]
[111.94522858 74.40201569]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[98.07269287 157.66087341]
[103.45635223 172.53791809]
[93.74742889 183.83332825]
[105.50395966 193.61755371]
[110.74996948 207.87855530]
[108.17056274 222.75178528]
[98.55712891 234.25996399]
[84.56835175 239.37657166]
[82.12262726 254.17584229]
[79.67690277 268.97512817]
[90.06114960 278.03924561]
[94.57484436 290.94833374]
[92.13996887 304.29528809]
[83.49772644 314.61303711]
[70.98748016 319.27520752]
[76.14904785 334.23077393]
[66.27303314 345.38037109]
[63.60723495 360.14157104]
[68.76880646 375.09713745]
[58.89278793 386.24673462]
[56.22698975 401.00796509]
[53.56119537 415.76916504]
[50.89540100 430.53039551]
[48.22960663 445.29159546]
[45.56380844 460.05282593]
[42.89801407 474.81405640]
[40.23221970 489.57525635]
[37.56642151 504.33648682]
[35.67313004 519.21649170]
[34.55748367 534.17498779]
[33.44183350 549.13342285]
[32.32618332 564.09185791]
[31.21053696 579.05035400]
[30.87556076 594.04656982]
[31.32216644 609.03991699]
[31.76877213 624.03326416]
[32.21537781 639.02661133]
[32.66198349 654.01995850]
[33.10858917 669.01330566]
[33.55519485 684.00671387]
[34.00180054 699.00006104]
[48.80105209 701.79217529]
[62.65389633 707.70092773]
[74.91240692 716.44982910]
[85.00322723 727.62963867]
[92.45440674 740.71759033]
[96.91741943 755.10144043]
[98.18354034 770.10852051]
[96.19353485 785.03680420]
[91.04049683 799.18811035]
[82.96542358 811.90063477]
[72.34601593 822.57965088]
[59.67895889 830.72583008]
[45.55671310 835.95806885]
[30.63979912 838.03161621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 196]
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[19 190]
[20 189]
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[40 183]
[41 182]
[42 181]
[43 180]
[44 179]
[45 178]
[46 177]
[47 176]
[48 175]
[50 173]
[51 172]
[53 170]
[57 165]
[58 164]
[59 163]
[64 158]
[66 156]
[67 155]
[68 154]
[69 153]
[71 151]
[73 150]
[74 149]
[75 148]
[76 139]
[77 138]
[78 136]
[79 135]
[80 134]
[81 133]
[85 131]
[86 130]
[87 129]
[89 127]
[90 126]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
