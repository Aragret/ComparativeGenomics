%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[135.70742798 564.67041016]
[132.32292175 550.03381348]
[130.91955566 535.07678223]
[131.52235413 520.06610107]
[134.12055969 505.26971436]
[138.66781616 490.95169067]
[145.08296204 477.36752319]
[153.25151062 464.75967407]
[163.02769470 453.35311890]
[174.23703003 443.35140991]
[186.67948914 434.93304443]
[200.13301086 428.24829102]
[188.71231079 418.68707275]
[191.59825134 403.13128662]
[180.17755127 393.57006836]
[183.06349182 378.01431274]
[178.23750305 363.81185913]
[173.41149902 349.60937500]
[168.58549500 335.40692139]
[156.34413147 331.38467407]
[148.53804016 320.88958740]
[148.19689941 307.61953735]
[155.66923523 296.41336060]
[151.05522156 282.14062500]
[146.44122314 267.86788940]
[141.82720947 253.59513855]
[137.21319580 239.32241821]
[132.59919739 225.04968262]
[119.26245117 218.51768494]
[114.37986755 204.10884094]
[121.32164764 190.16432190]
[116.70764160 175.89158630]
[105.43055725 166.16139221]
[108.54778290 150.65031433]
[103.93376923 136.37757874]
[99.31976318 122.10484314]
[94.70574951 107.83211517]
[90.69757843 104.44855499]
[88.87046814 99.06014252]
[90.17370605 93.06526947]
[85.98669434 78.66148376]
[81.79968262 64.25770569]
[77.61267090 49.85391998]
[62.50931549 48.79848480]
[48.70425797 42.65093231]
[37.85583115 32.17086029]
[31.25996208 18.63703156]
[29.69537544 3.69134521]
[33.33171463 -10.86034012]
[41.71136475 -23.26640701]
[53.80696869 -32.04032516]
[49.61996078 -46.44410706]
[38.33810043 -57.53601074]
[42.21524429 -71.91714478]
[38.02823257 -86.32092285]
[33.84122467 -100.72470856]
[29.65421104 -115.12848663]
[25.46720123 -129.53227234]
[21.28018951 -143.93605042]
[9.99833202 -155.02795410]
[13.87547588 -169.40908813]
[2.59361792 -180.50099182]
[6.47076178 -194.88212585]
[2.28375053 -209.28590393]
[-2.11724758 -223.62574768]
[-6.73125696 -237.89848328]
[-11.34526634 -252.17121887]
[-15.95927525 -266.44393921]
[-20.57328415 -280.71667480]
[-25.18729401 -294.98941040]
[-29.42456055 -280.60034180]
[-39.79693604 -269.76458740]
[-53.98720169 -264.90286255]
[-68.82521820 -267.10131836]
[-80.99613953 -275.86880493]
[-87.78094482 -289.24661255]
[-87.66389465 -304.24615479]
[-80.67113495 -317.51647949]
[-68.36486816 -326.09295654]
[-53.49434280 -328.05957031]
[-39.38167953 -322.97698975]
[-29.17966461 -311.98062134]
[-31.40478325 -326.81466675]
[-33.62989807 -341.64871216]
[-35.85501862 -356.48275757]
[-38.08013535 -371.31680298]
[-53.10922623 -372.22238159]
[-67.62151337 -376.23327637]
[-80.98258209 -383.17413330]
[-92.60833740 -392.74154663]
[-101.99056244 -404.51727295]
[-108.71909332 -417.98651123]
[-112.49980164 -432.56045532]
[-113.16739655 -447.60198975]
[-110.69270325 -462.45358276]
[-105.18389893 -476.46597290]
[-96.88181305 -489.02658081]
[-86.14937592 -499.58633423]
[-73.45574951 -507.68359375]
[-59.35586166 -512.96441650]
[-44.46609116 -515.19787598]
[-29.43735695 -514.28637695]
[-14.92664814 -510.26977539]
[-1.56831300 -503.32366943]
[10.05368042 -493.75167847]
[19.43126869 -481.97225952]
[26.15450287 -468.50039673]
[29.92947197 -453.92495728]
[30.59115219 -438.88314819]
[28.11061668 -424.03253174]
[22.59630394 -410.02230835]
[14.28927612 -397.46496582]
[3.55268073 -386.90945435]
[-9.14412498 -378.81716919]
[-23.24608994 -373.54193115]
[-21.02097321 -358.70788574]
[-18.79585648 -343.87384033]
[-16.57073975 -329.03979492]
[-14.34562206 -314.20574951]
[-10.91456032 -299.60342407]
[-6.30055141 -285.33068848]
[-1.68654203 -271.05795288]
[2.92746735 -256.78521729]
[7.54147673 -242.51249695]
[12.15548611 -228.23976135]
[15.92424583 -225.30624390]
[17.89020348 -219.97407532]
[16.68753242 -213.47291565]
[20.87454414 -199.06913757]
[31.85691833 -189.00749207]
[28.27925682 -173.59609985]
[39.26163101 -163.53445435]
[35.68397141 -148.12306213]
[39.87098312 -133.71928406]
[44.05799484 -119.31549835]
[48.24500656 -104.91172028]
[52.43201447 -90.50793457]
[56.61902618 -76.10415649]
[67.60140228 -66.04251099]
[64.02374268 -50.63111877]
[68.21075439 -36.22733688]
[83.12498474 -35.30486298]
[96.84944153 -29.32420349]
[107.71997070 -18.98949242]
[114.41124725 -5.53407621]
[116.09841919 9.42665672]
[112.55865479 24.08920479]
[104.20043182 36.67936325]
[92.01645660 45.66690826]
[96.20346832 60.07069016]
[100.39048004 74.47447205]
[104.57748413 88.87825775]
[108.97848511 103.21810150]
[113.59249115 117.49083710]
[118.20650482 131.76356506]
[122.82051086 146.03630066]
[134.42761230 156.78738403]
[130.98037720 171.27757263]
[135.59437561 185.55030823]
[149.38526917 192.79248047]
[153.86122131 207.33279419]
[146.87191772 220.43566895]
[151.48593140 234.70840454]
[156.09994507 248.98114014]
[160.71395874 263.25387573]
[165.32795715 277.52661133]
[169.94197083 291.79934692]
[185.66011047 299.47784424]
[190.85940552 315.82659912]
[182.78796387 330.58093262]
[187.61395264 344.78338623]
[192.43995667 358.98583984]
[197.26594543 373.18829346]
[209.03182983 383.76538086]
[205.80070496 398.30529785]
[217.56658936 408.88238525]
[214.33546448 423.42227173]
[229.07650757 420.52651978]
[244.07197571 419.62145996]
[259.05429077 420.72323608]
[273.75604248 423.81219482]
[287.91488647 428.83322144]
[301.27813721 435.69665527]
[313.60729980 444.28009033]
[324.68237305 454.43029785]
[334.30566406 465.96612549]
[342.30548096 478.68173218]
[348.53903198 492.35015869]
[352.89508057 506.72750854]
[355.29586792 521.55718994]
[355.69857788 536.57458496]
[354.09600830 551.51159668]
[350.51675415 566.10174561]
[345.02471924 580.08465576]
[337.71786499 593.21069336]
[328.72665405 605.24572754]
[318.21148682 615.97485352]
[306.36004639 625.20672607]
[293.38385010 632.77648926]
[279.51443481 638.54913330]
[264.99935913 642.42156982]
[250.09764099 644.32470703]
[235.07521057 644.22460938]
[220.20016479 642.12304688]
[205.73797607 638.05749512]
[191.94673157 632.10058594]
[179.07255554 624.35852051]
[167.34519958 614.96960449]
[156.97395325 604.10125732]
[148.14390564 591.94750977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 177]
[14 175]
[16 173]
[17 172]
[18 171]
[19 170]
[23 167]
[24 166]
[25 165]
[26 164]
[27 163]
[28 162]
[31 159]
[32 158]
[34 156]
[35 155]
[36 154]
[37 153]
[40 152]
[41 151]
[42 150]
[43 149]
[51 141]
[52 140]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
[61 131]
[63 129]
[64 128]
[65 125]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
