%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[125.98140717 794.35815430]
[112.18912506 788.44567871]
[98.84288025 781.58544922]
[86.00769043 773.81097412]
[73.74609375 765.16009521]
[62.11782074 755.67492676]
[51.17953110 745.40173340]
[40.98450851 734.39056396]
[31.58242798 722.69500732]
[23.01909256 710.37213135]
[15.33622360 697.48187256]
[8.57125282 684.08709717]
[2.75713658 670.25305176]
[-2.07779765 656.04711914]
[-5.90999508 641.53857422]
[-8.72078514 626.79797363]
[-10.49647331 611.89727783]
[-11.22840977 596.90899658]
[-10.91302776 581.90612793]
[-9.55186367 566.96185303]
[-7.15154886 552.14886475]
[-3.72377849 537.53948975]
[0.71474814 523.20477295]
[6.14240694 509.21456909]
[12.53275394 495.63708496]
[19.85465622 482.53845215]
[28.07244301 469.98245239]
[37.14607620 458.03030396]
[47.03134918 446.74020386]
[57.68010330 436.16720581]
[69.04045868 426.36276245]
[81.05706024 417.37466431]
[93.67137909 409.24670410]
[106.82194519 402.01846313]
[120.44469452 395.72518921]
[134.47326660 390.39752197]
[148.83929443 386.06140137]
[145.51704407 371.43395996]
[142.19477844 356.80648804]
[138.87251282 342.17901611]
[135.38050842 338.92098999]
[133.89810181 333.43469238]
[135.67597961 327.06674194]
[125.63505554 316.06542969]
[130.57337952 301.03466797]
[127.68811035 286.31478882]
[124.80284119 271.59487915]
[121.91756439 256.87500000]
[119.03229523 242.15510559]
[116.14701843 227.43521118]
[113.26174927 212.71531677]
[110.37647247 197.99542236]
[98.78222656 192.37377930]
[92.44827271 180.92987061]
[93.88307953 167.73321533]
[102.78558350 157.62577820]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[80.38389587 77.11824799]
[85.73613739 63.21850586]
[83.07034302 48.45729065]
[80.40454865 33.69607162]
[75.74443817 47.95381927]
[66.76000214 59.96547318]
[54.39937973 68.46341705]
[39.96701813 72.55083466]
[24.98600388 71.79637909]
[11.03731632 66.27967072]
[-0.40700588 56.58289337]
[-8.13921642 43.72937393]
[-11.34331703 29.07557869]
[-9.68117142 14.16795444]
[-3.32818818 0.57973874]
[7.04518557 -10.25507164]
[20.34422302 -17.19305229]
[35.16544724 -19.50202370]
[49.94473648 -16.93831253]
[63.12239838 -9.77247524]
[73.30776215 1.23926270]
[79.42598724 14.93498993]
[80.54164124 -0.02346318]
[81.65728760 -14.98191643]
[82.77293396 -29.94037056]
[83.88858795 -44.89882278]
[85.00423431 -59.85727692]
[86.11988068 -74.81572723]
[87.01269531 -89.78913879]
[87.68247986 -104.77417755]
[88.35227203 -119.75921631]
[81.23889923 -133.89111328]
[89.53678131 -146.26019287]
[75.04100037 -150.37954712]
[61.88623810 -157.73135376]
[50.78191376 -167.91912842]
[42.32687378 -180.39346313]
[36.97707748 -194.48162842]
[35.02104187 -209.42387390]
[36.56425095 -224.41436768]
[41.52348328 -238.64471436]
[49.63129044 -251.34748840]
[60.45042801 -261.83761597]
[73.39743805 -269.54940796]
[87.77409363 -274.06695557]
[102.80509949 -275.14666748]
[117.67983246 -272.73025513]
[131.59613037 -266.94812012]
[143.80349731 -258.11199951]
[153.64361572 -246.69845581]
[160.58580017 -233.32299805]
[164.25569153 -218.70695496]
[164.45535278 -203.63854980]
[161.17404175 -188.93040466]
[154.58868408 -175.37570190]
[145.05445862 -163.70542908]
[133.08551025 -154.54896545]
[119.32730865 -148.40008545]
[104.52182007 -145.59040833]
[111.68309784 -132.53034973]
[103.33731079 -119.08943176]
[102.66751862 -104.10439301]
[101.99773407 -89.11935425]
[104.50234222 -85.05290222]
[104.47901917 -79.36990356]
[101.07833862 -73.70008087]
[99.96268463 -58.74162674]
[98.84703827 -43.78317642]
[97.73139191 -28.82472038]
[96.61573792 -13.86626816]
[95.50009155 1.09218550]
[94.38444519 16.05063820]
[95.16576385 31.03027534]
[97.83155823 45.79149246]
[100.49736023 60.55271149]
[110.37337494 71.70230865]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[117.54679871 154.95999146]
[132.09817505 164.66960144]
[135.06665039 181.56643677]
[125.09636688 195.11015320]
[127.98163605 209.83004761]
[130.86691284 224.54994202]
[133.75218201 239.26982117]
[136.63745117 253.98971558]
[139.52273560 268.70962524]
[142.40800476 283.42950439]
[145.29327393 298.14938354]
[155.54057312 310.20358276]
[150.39587402 324.18145752]
[153.49998474 338.85678101]
[156.82223511 353.48422241]
[160.14450073 368.11169434]
[163.46675110 382.73913574]
[178.29638672 380.44418335]
[193.24998474 379.18930054]
[208.25468445 378.98056030]
[223.23739624 379.81903076]
[238.12512207 381.70059204]
[252.84533691 384.61608887]
[267.32632446 388.55133057]
[281.49749756 393.48712158]
[295.28985596 399.39944458]
[308.63619995 406.25946045]
[321.47149658 414.03375244]
[333.73324585 422.68447876]
[345.36163330 432.16946411]
[356.30007935 442.44250488]
[366.49526978 453.45355225]
[375.89749146 465.14892578]
[384.46102905 477.47171021]
[392.14407349 490.36184692]
[398.90924072 503.75653076]
[404.72354126 517.59051514]
[409.55868530 531.79632568]
[413.39108276 546.30487061]
[416.20208740 561.04541016]
[417.97799683 575.94610596]
[418.71014404 590.93438721]
[418.39498901 605.93719482]
[417.03402710 620.88153076]
[414.63391113 635.69451904]
[411.20635986 650.30395508]
[406.76803589 664.63873291]
[401.34057617 678.62902832]
[394.95043945 692.20660400]
[387.62872314 705.30535889]
[379.41110229 717.86145020]
[370.33764648 729.81372070]
[360.45254517 741.10394287]
[349.80392456 751.67712402]
[338.44372559 761.48175049]
[326.42724609 770.47003174]
[313.81304932 778.59814453]
[300.66256714 785.82659912]
[287.03991699 792.12005615]
[273.01144409 797.44793701]
[258.64544678 801.78424072]
[244.01199341 805.10784912]
[229.18232727 807.40258789]
[214.22872925 808.65728760]
[199.22401428 808.86578369]
[184.24131775 808.02709961]
[169.35360718 806.14532471]
[154.63343811 803.22961426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 159]
[38 158]
[39 157]
[40 156]
[43 155]
[45 153]
[46 152]
[47 151]
[48 150]
[49 149]
[50 148]
[51 147]
[52 146]
[56 143]
[57 142]
[58 141]
[59 140]
[61 138]
[63 136]
[64 135]
[65 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 124]
[91 123]
[92 122]
[94 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
