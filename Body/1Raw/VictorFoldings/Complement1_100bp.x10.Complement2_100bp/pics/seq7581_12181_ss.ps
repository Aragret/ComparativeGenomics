%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[107.33197021 498.28930664]
[107.19307709 483.26812744]
[109.01609039 468.35733032]
[112.76980591 453.81207275]
[118.39000702 439.88122559]
[125.78052521 426.80319214]
[134.81488037 414.80172729]
[145.33850098 404.08218384]
[157.17131042 394.82800293]
[170.11082458 387.19754028]
[164.24186707 373.39337158]
[158.37289429 359.58920288]
[152.50393677 345.78500366]
[146.63497925 331.98083496]
[135.53768921 327.16659546]
[130.53518677 315.71414185]
[134.80905151 303.54464722]
[122.83950806 294.68014526]
[124.79443359 278.98019409]
[119.13164520 265.09014893]
[113.46886444 251.20013428]
[107.59989929 237.39595032]
[101.52606964 223.68067932]
[95.45223236 209.96542358]
[94.82276154 224.95220947]
[91.22978973 239.51553345]
[84.81642151 253.07534790]
[75.83809662 265.09158325]
[64.65242767 275.08560181]
[51.70492172 282.65939331]
[37.51128387 287.51126099]
[22.63683891 289.44796753]
[7.67402744 288.39239502]
[-6.78118610 284.38653564]
[-20.15305519 277.58999634]
[-31.90898514 268.27343750]
[-41.58074188 256.80795288]
[-48.78310013 243.65022278]
[-53.22919464 229.32429504]
[-54.74194336 214.40077209]
[-53.26108551 199.47404480]
[-48.84560776 185.13865662]
[-41.67137909 171.96556091]
[-32.02414322 160.47944641]
[-20.28814507 151.13780212]
[-6.93082762 144.31269836]
[7.51579428 140.27597046]
[22.47631645 139.18841553]
[37.35486603 141.09333801]
[51.55883789 145.91487122]
[64.52249146 153.46096802]
[75.72949219 163.43107605]
[84.73346710 175.42810059]
[91.17438507 188.97024536]
[91.39771271 173.97190857]
[91.62104034 158.97357178]
[84.07408905 146.13252258]
[92.01599884 132.44906616]
[92.23932648 117.45073700]
[82.22293854 106.98085785]
[82.43866730 92.49294281]
[92.76233673 82.32593536]
[92.98566437 67.32759857]
[93.20899200 52.32926178]
[93.43231964 37.33092499]
[93.65564728 22.33258629]
[86.12467194 8.41874790]
[94.05060577 -4.19191694]
[86.51962280 -18.10575676]
[94.44555664 -30.71642113]
[94.66888428 -45.71475983]
[94.89221191 -60.71309662]
[95.11553955 -75.71143341]
[95.33886719 -90.70977020]
[93.09035492 -94.42435455]
[92.22760010 -98.27405548]
[92.62291718 -101.80663300]
[94.01487732 -104.65778351]
[96.04853821 -106.58712769]
[97.16418457 -121.54558563]
[98.27983856 -136.50404358]
[97.94486237 -151.50028992]
[96.16239166 -166.39401245]
[94.37992859 -181.28773499]
[92.26530457 -196.13792419]
[89.81957245 -210.93719482]
[87.37384796 -225.73646545]
[84.92812347 -240.53573608]
[69.90357971 -241.84497070]
[55.67693329 -246.85029602]
[43.14247131 -255.23707581]
[33.08812332 -266.47811890]
[26.14591599 -279.86679077]
[22.75223923 -294.56146240]
[23.12042427 -309.63845825]
[27.22732735 -324.14996338]
[34.81478500 -337.18380737]
[45.40583801 -347.92068481]
[58.33473206 -355.68563843]
[72.78874207 -359.99057007]
[87.85927582 -360.56488037]
[102.59899139 -357.37243652]
[116.08132935 -350.61392212]
[127.45878601 -340.71420288]
[136.01615906 -328.29559326]
[141.21553040 -314.13870239]
[142.73007202 -299.13348389]
[140.46455383 -284.22314453]
[134.56140137 -270.34497070]
[125.39170074 -258.37136841]
[113.53186035 -249.05497742]
[99.72739410 -242.98147583]
[102.17311859 -228.18218994]
[104.61884308 -213.38291931]
[107.06457520 -198.58364868]
[109.70259094 -196.24417114]
[111.33852386 -192.51069641]
[111.32952881 -187.86816406]
[109.27364349 -183.07019043]
[111.05610657 -168.17648315]
[112.83857727 -153.28276062]
[119.11655426 -166.90579224]
[130.33886719 -176.85867310]
[144.61434937 -181.46415710]
[159.53733826 -179.94613647]
[172.59304810 -172.56045532]
[181.58135986 -160.55169678]
[184.98759460 -145.94355774]
[182.23771667 -131.19776917]
[173.79515076 -118.79925537]
[161.08261108 -110.83738708]
[146.24240112 -108.65386963]
[131.77531433 -112.61666870]
[120.11935425 -122.05798340]
[113.23828888 -135.38838196]
[112.12264252 -120.42993164]
[111.00698853 -105.47148132]
[110.33720398 -90.48644257]
[110.11387634 -75.48810577]
[109.89054871 -60.48976898]
[109.66722107 -45.49143219]
[109.44389343 -30.49309349]
[116.99084473 -17.65203476]
[109.04894257 -3.96858907]
[116.59589386 8.87246895]
[108.65398407 22.55591393]
[108.43065643 37.55425262]
[108.20732880 52.55258942]
[107.98400116 67.55092621]
[107.76067352 82.54926300]
[117.77706146 93.01914215]
[117.56133270 107.50705719]
[107.23766327 117.67406464]
[107.01433563 132.67239380]
[114.54531097 146.58624268]
[106.61937714 159.19689941]
[106.39604950 174.19523621]
[106.17272186 189.19357300]
[109.16749573 203.89158630]
[115.24133301 217.60685730]
[121.31517029 231.32211304]
[126.42228699 235.52079773]
[128.35256958 240.86598206]
[127.35888672 245.53733826]
[133.02166748 259.42736816]
[138.68446350 273.31738281]
[151.05903625 283.17541504]
[148.69908142 297.88186646]
[163.50331116 308.83245850]
[160.43914795 326.11187744]
[166.30812073 339.91604614]
[172.17707825 353.72024536]
[178.04603577 367.52441406]
[183.91499329 381.32858276]
[198.38778687 377.30447388]
[213.26200867 375.20391846]
[228.28317261 375.06289673]
[243.19422913 376.88378906]
[257.74002075 380.63543701]
[271.67166138 386.25363159]
[284.75076294 393.64227295]
[296.75354004 402.67492676]
[307.47457886 413.19702148]
[316.73043823 425.02850342]
[324.36273193 437.96691895]
[330.24090576 451.79089355]
[334.26431274 466.26388550]
[336.36416626 481.13821411]
[336.50448608 496.15936279]
[334.68289185 511.07034302]
[330.93054199 525.61596680]
[325.31167603 539.54730225]
[317.92239380 552.62609863]
[308.88919067 564.62841797]
[298.36657715 575.34893799]
[286.53466797 584.60424805]
[273.59588623 592.23596191]
[259.77160645 598.11346436]
[245.29844666 602.13616943]
[230.42401123 604.23529053]
[215.40284729 604.37487793]
[200.49197388 602.55261230]
[185.94653320 598.79956055]
[172.01542664 593.18005371]
[158.93702698 585.79016113]
[146.93511963 576.75634766]
[136.21508789 566.23327637]
[126.96034241 554.40087891]
[119.32926941 541.46173096]
[113.45243073 527.63720703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 174]
[11 173]
[12 172]
[13 171]
[14 170]
[17 168]
[19 166]
[20 165]
[21 164]
[22 161]
[23 160]
[24 159]
[54 158]
[55 157]
[56 156]
[58 154]
[59 153]
[62 150]
[63 149]
[64 148]
[65 147]
[66 146]
[68 144]
[70 142]
[71 141]
[72 140]
[73 139]
[74 138]
[79 137]
[80 136]
[81 135]
[82 121]
[83 120]
[84 119]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
