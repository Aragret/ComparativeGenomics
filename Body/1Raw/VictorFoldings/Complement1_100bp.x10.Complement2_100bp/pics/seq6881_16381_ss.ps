%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[71.64382172 589.77923584]
[60.80045319 600.17523193]
[48.69286728 609.06689453]
[35.52824402 616.30206299]
[21.53184319 621.75695801]
[6.94316387 625.33819580]
[-7.98816252 626.98455811]
[-23.00664139 626.66784668]
[-37.85528564 624.39349365]
[-52.28002167 620.20037842]
[-66.03401184 614.16027832]
[-78.88191986 606.37658691]
[-90.60388947 596.98242188]
[-100.99935150 586.13854980]
[-109.89042664 574.03051758]
[-117.12496948 560.86560059]
[-122.57919312 546.86889648]
[-126.15975952 532.28009033]
[-127.80541229 517.34863281]
[-127.48799133 502.33020020]
[-125.21292114 487.48165894]
[-121.01912689 473.05712891]
[-114.97838593 459.30340576]
[-107.19405365 446.45587158]
[-97.79933167 434.73434448]
[-86.95497131 424.33941650]
[-74.84653473 415.44891357]
[-61.68122482 408.21499634]
[-47.68430710 402.76144409]
[-33.09528732 399.18157959]
[-18.16380310 397.53662109]
[-3.14535403 397.85476685]
[11.70307541 400.13055420]
[15.89008617 385.72677612]
[20.07709694 371.32296753]
[24.26410866 356.91918945]
[28.45112038 342.51541138]
[32.63813019 328.11163330]
[28.76098824 313.73049927]
[40.04284668 302.63861084]
[44.22985458 288.23480225]
[48.41686630 273.83102417]
[52.60387802 259.42724609]
[56.79088974 245.02346802]
[60.97790146 230.61968994]
[65.16490936 216.21591187]
[61.28776932 201.83477783]
[72.56962585 190.74287415]
[76.21771240 176.19325256]
[79.32182312 161.51794434]
[82.42593384 146.84265137]
[68.81819916 139.12513733]
[58.25915909 127.58229828]
[51.78118896 113.34269714]
[50.01765442 97.79855347]
[53.14097595 82.46965027]
[60.84578323 68.85472107]
[72.37876129 58.28491211]
[86.61231995 51.79365921]
[102.15480804 50.01562119]
[105.04008484 35.29573059]
[107.92535400 20.57584000]
[110.81063080 5.85594797]
[112.03760529 -9.09378529]
[111.59099579 -24.08713531]
[111.14439392 -39.08048630]
[110.69778442 -54.07383728]
[110.25117493 -69.06718445]
[102.10642242 -82.63087463]
[109.46135712 -95.58287048]
[94.12791443 -108.56612396]
[93.29904175 -128.33520508]
[107.06060791 -142.12409973]
[105.94496155 -157.08255005]
[104.82930756 -172.04100037]
[103.71366119 -186.99945068]
[102.59801483 -201.95791626]
[101.48236084 -216.91636658]
[100.36671448 -231.87481689]
[85.36743927 -232.68101501]
[70.59440613 -235.39869690]
[56.29020691 -239.98327637]
[42.68973160 -246.35942078]
[30.01630974 -254.42247009]
[18.47805214 -264.04000854]
[8.26442528 -275.05410767]
[-0.45685276 -287.28387451]
[-7.54257011 -300.52853394]
[-12.87637424 -314.57058716]
[-16.37067795 -329.17941284]
[-17.96810150 -344.11517334]
[-17.64241409 -359.13256836]
[-15.39896584 -373.98501587]
[-11.27459335 -388.42861938]
[-5.33702326 -402.22622681]
[2.31624317 -415.15121460]
[11.55953312 -426.99139404]
[22.24106407 -437.55233765]
[34.18543243 -446.66058350]
[47.19650650 -454.16662598]
[61.06062698 -459.94714355]
[75.55013275 -463.90725708]
[90.42710114 -465.98190308]
[105.44722748 -466.13705444]
[120.36387634 -464.37014771]
[134.93209839 -460.71020508]
[148.91267395 -455.21731567]
[162.07601929 -447.98165894]
[174.20599365 -439.12210083]
[185.10340881 -428.78405762]
[194.58930969 -417.13735962]
[202.50793457 -404.37319946]
[208.72926331 -390.70120239]
[213.15112305 -376.34588623]
[215.70089722 -361.54293823]
[216.33673096 -346.53546143]
[215.04818726 -331.56991577]
[211.85639954 -316.89199829]
[206.81381226 -302.74276733]
[200.00320435 -289.35458374]
[191.53642273 -276.94723511]
[181.55249023 -265.72451782]
[170.21536255 -255.87069702]
[157.71121216 -247.54756165]
[144.24534607 -240.89183044]
[130.03890991 -236.01275635]
[115.32517242 -232.99046326]
[116.44081879 -218.03201294]
[117.55646515 -203.07356262]
[118.67211914 -188.11509705]
[119.78776550 -173.15664673]
[120.90341187 -158.19819641]
[122.01905823 -143.23974609]
[131.31416321 -138.88406372]
[138.01493835 -131.00146484]
[140.86117554 -120.97092438]
[139.27485657 -110.58405304]
[133.47595215 -101.72517395]
[124.45470428 -96.02947235]
[132.56752014 -83.53821564]
[125.24452972 -69.51379395]
[125.69113159 -54.52044296]
[126.13774109 -39.52709198]
[126.58434296 -24.53374100]
[127.03095245 -9.54039192]
[134.06254578 -22.79017448]
[145.35786438 -32.66012192]
[159.43080139 -37.85167313]
[174.42984009 -37.68178940]
[188.38159180 -32.17282486]
[199.45045471 -22.04957771]
[206.18014526 -8.64393330]
[207.68524170 6.28036547]
[203.76773071 20.75976944]
[194.94303894 32.88926315]
[182.37217712 41.07300186]
[167.70909119 44.23427963]
[152.88293457 41.95717239]
[139.84436035 34.54127121]
[130.30880737 22.96226692]
[125.53051758 8.74122047]
[122.64524841 23.46111107]
[119.75997162 38.18100357]
[116.87470245 52.90089417]
[129.45864868 59.56153107]
[139.65678406 69.49720764]
[146.64320374 81.90323639]
[149.85208130 95.77489471]
[149.02352905 109.98873138]
[144.22465515 123.39360046]
[135.84411621 134.90386963]
[124.56063843 143.58734131]
[111.28803253 148.74075317]
[97.10123444 149.94676208]
[93.99712372 164.62205505]
[90.89301300 179.29736328]
[104.69707489 173.42813110]
[117.96446991 180.42643738]
[120.91496277 195.13339233]
[111.37356567 206.70758057]
[96.37384033 206.61692810]
[86.97341156 194.92988586]
[90.55107117 210.34127808]
[79.56869507 220.40292358]
[75.38168335 234.80670166]
[71.19467163 249.21047974]
[67.00765991 263.61425781]
[62.82064819 278.01803589]
[58.63363647 292.42181396]
[54.44662857 306.82562256]
[58.02428818 322.23699951]
[47.04191208 332.29864502]
[42.85490036 346.70242310]
[38.66789246 361.10620117]
[34.48088074 375.50997925]
[30.29386902 389.91375732]
[26.10685730 404.31756592]
[39.86142731 410.35632324]
[52.71007156 418.13882446]
[64.43293762 427.53189087]
[74.82943726 438.37475586]
[83.72165680 450.48193359]
[90.95745087 463.64620972]
[96.41300964 477.64233398]
[99.99497223 492.23083496]
[101.64204407 507.16210938]
[101.32604980 522.18060303]
[99.05239105 537.02935791]
[94.85997772 551.45428467]
[88.82054138 565.20855713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 197]
[34 196]
[35 195]
[36 194]
[37 193]
[38 192]
[40 190]
[41 189]
[42 188]
[43 187]
[44 186]
[45 185]
[46 184]
[48 182]
[49 176]
[50 175]
[51 174]
[60 164]
[61 163]
[62 162]
[63 161]
[64 145]
[65 144]
[66 143]
[67 142]
[68 141]
[70 139]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
