%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[27.61276627 815.54321289]
[12.67112637 816.89910889]
[-2.31904626 817.52020264]
[-17.32163811 817.40502930]
[-32.30051041 816.55383301]
[-47.21957016 814.96868896]
[-62.04288101 812.65344238]
[-76.73473358 809.61358643]
[-91.25972748 805.85656738]
[-105.58287811 801.39129639]
[-119.66967773 796.22863770]
[-133.48619080 790.38098145]
[-146.99913025 783.86242676]
[-160.17593384 776.68865967]
[-172.98486328 768.87701416]
[-185.39506531 760.44622803]
[-197.37664795 751.41668701]
[-208.90072632 741.81005859]
[-219.93955994 731.64959717]
[-230.46653748 720.95971680]
[-240.45631409 709.76617432]
[-249.88481140 698.09594727]
[-258.72930908 685.97711182]
[-266.96853638 673.43890381]
[-274.58261108 660.51153564]
[-281.55316162 647.22613525]
[-287.86346436 633.61468506]
[-293.49829102 619.71002197]
[-298.44403076 605.54559326]
[-302.68881226 591.15557861]
[-306.22238159 576.57458496]
[-309.03625488 561.83776855]
[-311.12362671 546.98065186]
[-312.47949219 532.03906250]
[-313.10055542 517.04888916]
[-312.98535156 502.04626465]
[-312.13412476 487.06741333]
[-310.54895020 472.14834595]
[-308.23367310 457.32504272]
[-305.19378662 442.63317871]
[-301.43670654 428.10821533]
[-296.97143555 413.78506470]
[-291.80871582 399.69827271]
[-285.96102905 385.88177490]
[-279.44241333 372.36886597]
[-272.26864624 359.19207764]
[-264.45693970 346.38314819]
[-256.02612305 333.97299194]
[-246.99655151 321.99142456]
[-237.38993835 310.46737671]
[-227.22943115 299.42855835]
[-216.53952026 288.90161133]
[-205.34594727 278.91186523]
[-193.67567444 269.48339844]
[-181.55683899 260.63891602]
[-169.01861572 252.39973450]
[-156.09123230 244.78570557]
[-142.80580139 237.81515503]
[-129.19435120 231.50489807]
[-115.28965759 225.87011719]
[-101.12522888 220.92440796]
[-86.73519135 216.67965698]
[-72.15421295 213.14611816]
[-57.41740417 210.33229065]
[-42.56028366 208.24494934]
[-27.61863708 206.88912964]
[-12.62846184 206.26809692]
[2.37413001 206.38334656]
[17.35299492 207.23458862]
[32.27204895 208.81979370]
[47.09534836 211.13514709]
[61.78718567 214.17503357]
[65.54348755 199.65298462]
[69.29978943 185.13092041]
[73.05609131 170.60885620]
[67.18930054 160.03024292]
[70.19989014 147.90092468]
[81.00326538 140.85467529]
[84.97536469 126.39014435]
[88.94746399 111.92562103]
[84.28909302 95.81115723]
[96.35169983 84.15484619]
[92.31677246 68.85680389]
[102.99470520 58.47263718]
[106.75100708 43.95057678]
[110.50730133 29.42851830]
[96.47189331 24.09275246]
[83.10865784 17.24533463]
[70.57981873 8.96938515]
[59.03746033 -0.63463283]
[48.62169647 -11.45013618]
[39.45897293 -23.34583473]
[31.66050720 -36.17732620]
[25.32097054 -49.78884506]
[20.51731682 -64.01515961]
[17.30785942 -78.68358612]
[15.73155880 -93.61604309]
[15.80754948 -108.63128662]
[17.53490639 -123.54702759]
[20.89266396 -138.18222046]
[25.84006119 -152.35919189]
[32.31704330 -165.90583801]
[40.24497986 -178.65774536]
[49.52763748 -190.46009827]
[60.05233383 -201.16961670]
[71.69130707 -210.65632629]
[84.30326843 -218.80503845]
[97.73513031 -225.51684570]
[111.82382965 -230.71028137]
[126.39834595 -234.32229614]
[141.28175354 -236.30903625]
[156.29339600 -236.64639282]
[171.25103760 -235.33026123]
[185.97311401 -232.37663269]
[200.28088379 -227.82135010]
[214.00070190 -221.71972656]
[226.96600342 -214.14579773]
[239.01939392 -205.19154358]
[250.01457214 -194.96562195]
[259.81805420 -183.59219360]
[268.31085205 -171.20932007]
[275.38986206 -157.96730042]
[280.96911621 -144.02690125]
[284.98095703 -129.55732727]
[287.37664795 -114.73424530]
[288.12707520 -99.73757935]
[287.22317505 -84.74938202]
[284.67593384 -69.95158386]
[280.51620483 -55.52383804]
[274.79455566 -41.64126587]
[267.58038330 -28.47239685]
[258.96130371 -16.17708969]
[249.04193115 -4.90459538]
[237.94267273 5.20824718]
[225.79824829 14.03867722]
[212.75611877 21.47950172]
[198.97457886 27.44039726]
[184.62092590 31.84900093]
[169.86940002 34.65179825]
[154.89906311 35.81476593]
[139.89166260 35.32378387]
[125.02936554 33.18481827]
[121.27306366 47.70687866]
[117.51676178 62.22893524]
[121.82036591 76.48825836]
[110.87375641 87.91114807]
[116.16896057 98.28428650]
[113.16858673 109.53768158]
[103.41198730 115.89772034]
[99.43988800 130.36224365]
[95.46778870 144.82676697]
[100.53549194 162.52987671]
[87.57814789 174.36515808]
[83.82184601 188.88722229]
[80.06554413 203.40928650]
[76.30924225 217.93133545]
[90.63241577 222.39651489]
[104.71924591 227.55911255]
[118.53578186 233.40670776]
[132.04875183 239.92520142]
[145.22558594 247.09889221]
[158.03456116 254.91050720]
[170.44480896 263.34121704]
[182.42643738 272.37069702]
[193.95056152 281.97723389]
[204.98944092 292.13766479]
[215.51647949 302.82748413]
[225.50630188 314.02099609]
[234.93486023 325.69119263]
[243.77943420 337.80996704]
[252.01870728 350.34811401]
[259.63284302 363.27545166]
[266.60348511 376.56082153]
[272.91384888 390.17224121]
[278.54870605 404.07687378]
[283.49453735 418.24127197]
[287.73937988 432.63128662]
[291.27304077 447.21221924]
[294.08697510 461.94900513]
[296.17443848 476.80612183]
[297.53036499 491.74774170]
[298.15151978 506.73791504]
[298.03637695 521.74053955]
[297.18524170 536.71942139]
[295.60012817 551.63842773]
[293.28491211 566.46179199]
[290.24511719 581.15362549]
[286.48809814 595.67864990]
[282.02288818 610.00183105]
[276.86026001 624.08862305]
[271.01263428 637.90515137]
[264.49411011 651.41809082]
[257.32037354 664.59490967]
[249.50872803 677.40386963]
[241.07798767 689.81408691]
[232.04846191 701.79571533]
[222.44190979 713.31982422]
[212.28146362 724.35864258]
[201.59159851 734.88568115]
[190.39807129 744.87548828]
[178.72785950 754.30401611]
[166.60906982 763.14855957]
[154.07087708 771.38775635]
[141.14352417 779.00189209]
[127.85813141 785.97247314]
[114.24671173 792.28277588]
[100.34204865 797.91766357]
[86.17765045 802.86346436]
[71.78763580 807.10827637]
[57.20666885 810.64184570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 156]
[73 155]
[74 154]
[75 153]
[78 151]
[79 150]
[80 149]
[82 146]
[84 144]
[85 143]
[86 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
