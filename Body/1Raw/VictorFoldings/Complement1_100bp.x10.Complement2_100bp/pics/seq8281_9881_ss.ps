%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[21.31443214 400.20364380]
[20.68920326 415.20452881]
[18.49935341 430.05789185]
[14.76887894 444.60098267]
[9.53865051 458.67443848]
[2.86597514 472.12408447]
[-5.17603874 484.80255127]
[-14.49927807 496.57095337]
[-25.00159264 507.30032349]
[-36.56791306 516.87310791]
[-49.07151413 525.18438721]
[-62.37539291 532.14312744]
[-76.33379364 537.67315674]
[-90.79377747 541.71374512]
[-105.59690857 544.22076416]
[-120.58100128 545.16662598]
[-135.58187866 544.54101562]
[-150.43518066 542.35083008]
[-164.97817993 538.61999512]
[-179.05151367 533.38940430]
[-192.50100708 526.71643066]
[-205.17929077 518.67407227]
[-216.94744873 509.35055542]
[-227.67654419 498.84799194]
[-237.24903870 487.28143311]
[-245.56002808 474.77764893]
[-252.51847839 461.47357178]
[-258.04812622 447.51504517]
[-262.08840942 433.05496216]
[-264.59503174 418.25177002]
[-265.54052734 403.26766968]
[-264.91458130 388.26678467]
[-262.72399902 373.41354370]
[-258.99282837 358.87063599]
[-253.76191711 344.79742432]
[-247.08857727 331.34811401]
[-239.04594421 318.67001343]
[-229.72213745 306.90209961]
[-219.21929932 296.17324829]
[-207.65252686 286.60104370]
[-195.14851379 278.29034424]
[-181.84429932 271.33221436]
[-167.88562012 265.80291748]
[-153.42544556 261.76300049]
[-138.62219238 259.25671387]
[-123.63805389 258.31158447]
[-108.63720703 258.93789673]
[-93.78401184 261.12884521]
[-79.24119568 264.86035156]
[-65.16811371 270.09161377]
[-51.71894836 276.76528931]
[-39.04106140 284.80822754]
[-29.72617722 273.05096436]
[-20.41129494 261.29370117]
[-11.09641171 249.53645325]
[-9.25750065 234.75581360]
[5.37692451 228.74380493]
[14.69180679 216.98655701]
[24.00668907 205.22929382]
[33.32157135 193.47204590]
[42.10217667 181.31059265]
[50.33098221 168.76919556]
[58.55979156 156.22779846]
[66.41154480 143.44694519]
[73.87928772 130.43800354]
[81.34703064 117.42904663]
[88.81477356 104.42008972]
[96.08799744 91.30139923]
[103.16510773 78.07587433]
[110.24221039 64.85034180]
[109.93123627 49.03219604]
[122.75804901 41.46104813]
[129.83514404 28.23552132]
[136.91226196 15.00999260]
[137.08097839 8.40067577]
[140.10781860 3.59076548]
[144.40205383 1.50066328]
[151.86979675 -11.50828934]
[159.33753967 -24.51724052]
[159.32283020 -29.73709488]
[161.13101196 -34.01304626]
[164.09729004 -36.80879593]
[167.44036865 -37.92961502]
[175.48153687 -50.59214020]
[183.52270508 -63.25466537]
[191.56388855 -75.91719055]
[199.60505676 -88.57971191]
[207.64622498 -101.24224091]
[215.68739319 -113.90476227]
[203.76599121 -123.02448273]
[192.68478394 -133.14852905]
[182.52812195 -144.19984436]
[173.37330627 -156.09432983]
[165.29000854 -168.74145508]
[158.33975220 -182.04495239]
[152.57542419 -195.90359497]
[148.04090881 -210.21189880]
[144.77072144 -224.86096191]
[142.78971863 -239.73930359]
[142.11302185 -254.73368835]
[142.74574280 -269.72998047]
[144.68307495 -284.61407471]
[147.91029358 -299.27267456]
[152.40281677 -313.59420776]
[158.12646484 -327.46969604]
[165.03767395 -340.79354858]
[173.08383179 -353.46432495]
[182.20372009 -365.38558960]
[192.32792664 -376.46667480]
[203.37937927 -386.62316895]
[215.27400208 -395.77783203]
[227.92123413 -403.86093140]
[241.22483826 -410.81100464]
[255.08355713 -416.57513428]
[269.39193726 -421.10946655]
[284.04104614 -424.37945557]
[298.91940308 -426.36022949]
[313.91378784 -427.03674316]
[328.91009521 -426.40380859]
[343.79415894 -424.46624756]
[358.45269775 -421.23883057]
[372.77416992 -416.74609375]
[386.64959717 -411.02224731]
[399.97332764 -404.11087036]
[412.64398193 -396.06451416]
[424.56515503 -386.94445801]
[435.64605713 -376.82009888]
[445.80242920 -365.76852417]
[454.95690918 -353.87377930]
[463.03985596 -341.22640991]
[469.98971558 -327.92272949]
[475.75366211 -314.06390381]
[480.28778076 -299.75549316]
[483.55755615 -285.10632324]
[485.53814697 -270.22793579]
[486.21441650 -255.23353577]
[485.58126831 -240.23725891]
[483.64352417 -225.35322571]
[480.41589355 -210.69471741]
[475.92297363 -196.37329102]
[470.19894409 -182.49797058]
[463.28735352 -169.17431641]
[455.24084473 -156.50376892]
[446.12060547 -144.58274841]
[435.99609375 -133.50196838]
[424.94436646 -123.34577179]
[413.04949951 -114.19145203]
[400.40203857 -106.10868835]
[387.09823608 -99.15898895]
[373.23934937 -93.39525604]
[358.93084717 -88.86134338]
[344.28164673 -85.59175873]
[329.40322876 -83.61138916]
[314.40881348 -82.93531036]
[299.41253662 -83.56866455]
[284.52853394 -85.50663757]
[269.87008667 -88.73446655]
[255.54872131 -93.22759247]
[241.67347717 -98.95182800]
[228.34992981 -105.86359406]
[220.30874634 -93.20106506]
[212.26757812 -80.53854370]
[204.22640991 -67.87601471]
[196.18522644 -55.21348953]
[188.14405823 -42.55096436]
[180.10289001 -29.88844109]
[172.34649658 -17.04949951]
[164.87875366 -4.04054785]
[157.41101074 8.96840477]
[150.13778687 22.08709908]
[143.06068420 35.31262589]
[135.98356628 48.53815460]
[136.80075073 63.41032410]
[123.46773529 71.92745209]
[116.39063263 85.15297699]
[109.31352997 98.37850189]
[109.65785217 103.61256409]
[107.04511261 108.66696167]
[101.82372284 111.88783264]
[94.35597992 124.89678955]
[86.88823700 137.90574646]
[79.42050171 150.91468811]
[79.58586884 155.25366211]
[78.47377014 159.03886414]
[76.41514587 161.93669128]
[73.81529236 163.75532532]
[71.10118866 164.45660400]
[62.87238312 176.99800110]
[54.64357758 189.53939819]
[69.51218414 187.55839539]
[81.50994110 196.56138611]
[83.76397705 211.39106750]
[74.98307800 223.55230713]
[60.19734955 226.07861328]
[47.87672424 217.52278137]
[45.07882309 202.78692627]
[35.76394272 214.54418945]
[26.44905853 226.30143738]
[17.13417625 238.05868530]
[14.62900162 253.68029785]
[0.66083997 258.85134888]
[-8.65404320 270.60858154]
[-17.96892548 282.36584473]
[-27.28380775 294.12310791]
[-16.55419731 304.62515259]
[-6.98114443 316.19122314]
[1.33045936 328.69464111]
[8.28954887 341.99835205]
[13.81987667 355.95660400]
[17.86084938 370.41650391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 204]
[53 203]
[54 202]
[55 201]
[57 199]
[58 198]
[59 197]
[60 196]
[61 189]
[62 188]
[63 187]
[64 182]
[65 181]
[66 180]
[67 179]
[68 176]
[69 175]
[70 174]
[72 172]
[73 171]
[74 170]
[77 169]
[78 168]
[79 167]
[83 166]
[84 165]
[85 164]
[86 163]
[87 162]
[88 161]
[89 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
