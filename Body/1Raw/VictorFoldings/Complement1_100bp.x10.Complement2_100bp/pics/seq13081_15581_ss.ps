%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[101.88016510 307.79965210]
[103.72542572 292.89804077]
[107.19881439 278.28985596]
[112.25816345 264.15246582]
[118.84206390 250.65744019]
[126.87059784 237.96862793]
[136.24629211 226.24005127]
[146.85534668 215.61408997]
[158.56898499 206.21972656]
[150.52781677 193.55720520]
[142.48663330 180.89468384]
[134.44546509 168.23214722]
[126.40428925 155.56962585]
[111.85675049 152.58555603]
[103.52147675 139.85850525]
[106.75009155 124.61993408]
[98.70891571 111.95741272]
[90.48011017 99.41600800]
[82.06549072 86.99851227]
[73.65087128 74.58101654]
[65.14404297 62.22650909]
[56.54547882 49.93567276]
[47.94691467 37.64483643]
[50.07373428 52.49328995]
[48.17041397 67.37204742]
[42.37435532 81.20699310]
[33.10398483 92.99936676]
[21.02853203 101.89788055]
[7.01973915 107.26013184]
[-7.91108847 108.69901276]
[-22.68608093 106.11065674]
[-36.23862076 99.68191528]
[-47.59033585 89.87689209]
[-55.92173767 77.40341187]
[-60.63137436 63.16194534]
[-61.37925339 48.18059921]
[-58.11138535 33.54089355]
[-51.06367874 20.29967499]
[-40.74491501 9.41284180]
[-27.90001678 1.66632318]
[-13.45626354 -2.38065267]
[1.54363418 -2.43593144]
[16.01682281 1.50447738]
[28.91846848 9.15611267]
[39.31787872 19.96753502]
[34.91688156 5.62768745]
[30.51588249 -8.71215916]
[26.11488533 -23.05200768]
[21.71388626 -37.39185333]
[17.31288910 -51.73170090]
[12.91189003 -66.07154846]
[8.51089287 -80.41139221]
[4.10989428 -94.75124359]
[-0.29110369 -109.09108734]
[-14.92658043 -105.77220154]
[-29.76915550 -103.55630493]
[-44.73582077 -102.45580292]
[-59.74287796 -102.47684479]
[-74.70639801 -103.61930847]
[-89.54270172 -105.87681580]
[-104.16881561 -109.23673248]
[-118.50294495 -113.68026733]
[-132.46492004 -119.18257904]
[-145.97666931 -125.71289062]
[-158.96261597 -133.23468018]
[-171.35014343 -141.70588684]
[-183.06997681 -151.07911682]
[-194.05657959 -161.30198669]
[-204.24850464 -172.31729126]
[-213.58872986 -184.06344604]
[-222.02505493 -196.47476196]
[-229.51028442 -209.48181152]
[-236.00256348 -223.01187134]
[-241.46557617 -236.98927307]
[-245.86877441 -251.33584595]
[-249.18754578 -265.97134399]
[-251.40330505 -280.81393433]
[-252.50367737 -295.78060913]
[-252.48249817 -310.78768921]
[-251.33990479 -325.75119019]
[-249.08226013 -340.58746338]
[-245.72222900 -355.21356201]
[-241.27856445 -369.54763794]
[-235.77612305 -383.50958252]
[-229.24569702 -397.02127075]
[-221.72380066 -410.00714111]
[-213.25248718 -422.39459229]
[-203.87913513 -434.11434937]
[-193.65617371 -445.10086060]
[-182.64077759 -455.29269409]
[-170.89454651 -464.63281250]
[-158.48315430 -473.06903076]
[-145.47602844 -480.55413818]
[-131.94590759 -487.04629517]
[-117.96846771 -492.50918579]
[-103.62185669 -496.91226196]
[-88.98632050 -500.23089600]
[-74.14370728 -502.44653320]
[-59.17702103 -503.54678345]
[-44.16996384 -503.52545166]
[-29.20646286 -502.38272095]
[-14.37020016 -500.12496948]
[0.25585347 -496.76480103]
[14.58990192 -492.32101440]
[28.55178261 -486.81845093]
[42.06341171 -480.28790283]
[55.04922867 -472.76586914]
[67.43661499 -464.29446411]
[79.15628052 -454.92102051]
[90.14270020 -444.69796753]
[100.33441925 -433.68246460]
[109.67445374 -421.93615723]
[118.11055756 -409.52468872]
[125.59555817 -396.51748657]
[132.08760071 -382.98733521]
[137.55036926 -369.00982666]
[141.95330811 -354.66317749]
[145.27182007 -340.02761841]
[147.48731995 -325.18499756]
[148.58741760 -310.21829224]
[148.56597900 -295.21124268]
[147.42312622 -280.24774170]
[145.16522217 -265.41149902]
[141.80491638 -250.78547668]
[137.36100769 -236.45146179]
[131.85832214 -222.48962402]
[125.32765961 -208.97805786]
[117.80552673 -195.99230957]
[109.33399963 -183.60499573]
[99.96044159 -171.88540649]
[89.73728943 -160.89907837]
[78.72171021 -150.70745850]
[66.97531128 -141.36753845]
[54.56377411 -132.93153381]
[41.55652237 -125.44664764]
[28.02628708 -118.95473480]
[14.04874325 -113.49208832]
[18.44974136 -99.15223694]
[22.85074043 -84.81239319]
[27.25173759 -70.47254944]
[31.65273476 -56.13269806]
[36.05373383 -41.79285049]
[40.45473099 -27.45300484]
[44.85572815 -13.11315727]
[49.25672913 1.22668946]
[53.65772629 15.56653690]
[60.23775482 29.04627037]
[68.83631897 41.33710861]
[77.43488312 53.62794495]
[83.84490967 57.30671310]
[86.06836700 66.16640472]
[94.48298645 78.58390045]
[102.89760590 91.00138855]
[107.69093323 93.13164520]
[110.94950867 97.79586792]
[111.37143707 103.91623688]
[119.41261292 116.57876587]
[134.57768250 120.13666534]
[142.55218506 133.09281921]
[139.06681824 147.52845764]
[147.10798645 160.19097900]
[155.14915466 172.85350037]
[163.19033813 185.51603699]
[171.23150635 198.17855835]
[184.71527100 191.57164001]
[198.84402466 186.48817444]
[213.44625854 182.98988342]
[228.34469604 181.11920166]
[243.35852051 180.89886475]
[258.30545044 182.33154297]
[273.00402832 185.39982605]
[287.27587891 190.06649780]
[300.94772339 196.27488708]
[313.85357666 203.94963074]
[325.83682251 212.99757385]
[336.75195312 223.30886841]
[346.46649170 234.75837708]
[354.86251831 247.20707703]
[361.83807373 260.50384521]
[367.30853271 274.48733521]
[371.20745850 288.98773193]
[373.48751831 303.82904053]
[374.12106323 318.83108521]
[373.10037231 333.81179810]
[370.43783569 348.58929443]
[366.16580200 362.98416138]
[360.33609009 376.82171631]
[353.01950073 389.93395996]
[344.30484009 402.16171265]
[334.29791260 413.35653687]
[323.12017822 423.38256836]
[310.90728760 432.11807251]
[297.80755615 439.45703125]
[283.97998047 445.31030273]
[269.59237671 449.60690308]
[254.81947327 452.29464722]
[239.84053040 453.34088135]
[224.83740234 452.73294067]
[209.99223328 450.47817993]
[195.48519897 446.60400391]
[181.49241638 441.15740967]
[168.18374634 434.20455933]
[155.72074890 425.82977295]
[144.25469971 416.13479614]
[133.92478943 405.23724365]
[124.85642242 393.26947021]
[117.15967560 380.37670898]
[110.92797089 366.71548462]
[106.23696899 352.45162964]
[103.14360809 337.75827026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 164]
[10 163]
[11 162]
[12 161]
[13 160]
[16 157]
[17 156]
[18 153]
[19 152]
[20 151]
[21 149]
[22 148]
[23 147]
[45 146]
[46 145]
[47 144]
[48 143]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[54 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
