%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[104.12604523 757.68676758]
[89.37786865 754.92413330]
[74.82554626 751.26751709]
[60.52321243 746.73052979]
[46.52407837 741.33007812]
[32.88021469 735.08618164]
[19.64238358 728.02215576]
[6.85982704 720.16424561]
[-5.41990042 711.54162598]
[-17.15111732 702.18646240]
[-28.29018402 692.13348389]
[-38.79566193 681.42010498]
[-48.62846756 670.08624268]
[-57.75202179 658.17401123]
[-66.13238525 645.72772217]
[-73.73838806 632.79364014]
[-80.54172516 619.41998291]
[-86.51709747 605.65643311]
[-91.64226532 591.55413818]
[-95.89817047 577.16571045]
[-99.26898193 562.54449463]
[-101.74214935 547.74505615]
[-103.30848694 532.82232666]
[-103.96215820 517.83190918]
[-103.70072937 502.82946777]
[-102.52517700 487.87091064]
[-100.43988037 473.01181030]
[-97.45258331 458.30749512]
[-93.57440948 443.81265259]
[-88.81978607 429.58117676]
[-83.20639801 415.66607666]
[-76.75512695 402.11904907]
[-69.48996735 388.99050903]
[-61.43795395 376.32931519]
[-52.62903976 364.18255615]
[-43.09599304 352.59539795]
[-32.87427521 341.61099243]
[-22.00191689 331.27017212]
[-10.51936150 321.61138916]
[1.53067458 312.67062378]
[14.10336399 304.48107910]
[27.15193558 297.07327271]
[40.62784576 290.47473145]
[54.48096466 284.71002197]
[68.65975952 279.80056763]
[83.11148071 275.76464844]
[97.78236389 272.61727905]
[112.61783600 270.37017822]
[111.27960205 255.42997742]
[109.94136810 240.48979187]
[108.60313416 225.54960632]
[104.87542725 219.16792297]
[107.35789490 210.37728882]
[106.24224091 195.41883850]
[105.12659454 180.46038818]
[103.34413147 165.56666565]
[100.89839935 150.76739502]
[98.45267487 135.96812439]
[96.00695038 121.16885376]
[93.56121826 106.36958313]
[90.77606964 103.70212555]
[89.18022156 99.81996918]
[89.28980255 95.28179932]
[91.35214996 90.85612488]
[89.56968689 75.96240997]
[87.78721619 61.06868744]
[86.00475311 46.17497253]
[84.22228241 31.28125381]
[82.43981934 16.38753700]
[72.34150696 27.47915840]
[57.36505127 28.31924820]
[46.08964539 18.42656136]
[44.97435379 3.46808147]
[54.65806961 -7.98729610]
[69.59351349 -9.37741089]
[81.22454071 0.09322375]
[80.77793121 -14.90012646]
[80.33132935 -29.89347649]
[79.88471985 -44.88682556]
[72.41638947 -31.87821388]
[60.35087585 -22.96623230]
[45.72143173 -19.65270996]
[30.99337959 -22.49602890]
[18.64865303 -31.01704407]
[10.76755333 -43.77981186]
[8.67818546 -58.63358688]
[12.73264408 -73.07524109]
[22.24768257 -84.67110443]
[35.61985016 -91.46706390]
[50.59569931 -92.31789398]
[64.65154266 -87.08020782]
[75.41871643 -76.63665009]
[81.08306122 -62.74550247]
[83.52878571 -77.54477692]
[85.97451782 -92.34404755]
[88.42024231 -107.14331818]
[90.86596680 -121.94258881]
[76.88015747 -127.52927399]
[64.42254639 -135.99226379]
[54.07581329 -146.93571472]
[46.32389069 -159.84779358]
[41.52934265 -174.12457275]
[39.91642380 -189.09829712]
[41.56057739 -204.06863403]
[46.38489532 -218.33537292]
[54.16374207 -231.23124695]
[64.53327942 -242.15309143]
[77.00851440 -250.59007263]
[91.00595856 -256.14758301]
[105.87091064 -258.56564331]
[120.90812683 -257.73123169]
[135.41427612 -253.68331909]
[148.71089172 -246.61125183]
[160.17605591 -236.84580994]
[169.27352905 -224.84371948]
[175.57781982 -211.16636658]
[178.79402161 -196.45344543]
[178.77175903 -181.39311218]
[175.51203918 -166.68977356]
[169.16732788 -153.03111267]
[160.03439331 -141.05598450]
[148.54039001 -131.32449341]
[135.22291565 -124.29179382]
[120.70485687 -120.28680420]
[105.66523743 -119.49685669]
[103.21951294 -104.69758606]
[100.77378845 -89.89831543]
[98.32805634 -75.09904480]
[95.88233185 -60.29977798]
[94.87806702 -45.33343124]
[95.32467651 -30.34008217]
[95.77128601 -15.34673214]
[96.21788788 -0.35338217]
[97.33353424 14.60507107]
[99.11600494 29.49878883]
[100.89846802 44.39250565]
[102.68093109 59.28622437]
[104.46340179 74.17993927]
[106.24586487 89.07365417]
[108.36048889 103.92385864]
[110.80622101 118.72312927]
[113.25194550 133.52239990]
[115.69766998 148.32167053]
[118.14340210 163.12094116]
[127.73637390 151.58946228]
[142.66038513 150.08148193]
[154.36627197 159.46083069]
[156.14837646 174.35458374]
[146.98583984 186.23094177]
[132.12734985 188.28657532]
[120.08504486 179.34474182]
[121.20069885 194.30319214]
[122.31634521 209.26164246]
[123.54331970 224.21138000]
[124.88155365 239.15156555]
[126.21978760 254.09175110]
[127.55802155 269.03192139]
[142.55668640 268.60671997]
[157.55339050 269.09667969]
[172.49230957 270.50000000]
[187.31790161 272.81146240]
[201.97499084 276.02243042]
[216.40907288 280.12100220]
[230.56645203 285.09188843]
[244.39442444 290.91662598]
[257.84158325 297.57354736]
[270.85791016 305.03787231]
[283.39495850 313.28186035]
[295.40612793 322.27481079]
[306.84667969 331.98330688]
[317.67407227 342.37118530]
[327.84805298 353.39984131]
[337.33074951 365.02819824]
[346.08691406 377.21307373]
[354.08392334 389.90905762]
[361.29208374 403.06896973]
[367.68453979 416.64385986]
[373.23751831 430.58319092]
[377.93038940 444.83514404]
[381.74563599 459.34667969]
[384.66912842 474.06381226]
[386.68997192 488.93179321]
[387.80062866 503.89532471]
[387.99697876 518.89874268]
[387.27832031 533.88623047]
[385.64727783 548.80200195]
[383.10992432 563.59057617]
[379.67575073 578.19702148]
[375.35748291 592.56689453]
[370.17117310 606.64678955]
[364.13616943 620.38427734]
[357.27490234 633.72833252]
[349.61288452 646.62927246]
[341.17858887 659.03912354]
[332.00347900 670.91168213]
[322.12158203 682.20281982]
[311.56976318 692.87048340]
[300.38717651 702.87506104]
[288.61550903 712.17926025]
[276.29849243 720.74853516]
[263.48199463 728.55096436]
[250.21363831 735.55749512]
[236.54281616 741.74212646]
[222.52040100 747.08184814]
[208.19851685 751.55676270]
[193.63047791 755.15020752]
[178.87045288 757.84881592]
[163.97337341 759.64263916]
[148.99462891 760.52490234]
[133.98997498 760.49237061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 157]
[49 156]
[50 155]
[51 154]
[53 153]
[54 152]
[55 151]
[56 144]
[57 143]
[58 142]
[59 141]
[60 140]
[64 139]
[65 138]
[66 137]
[67 136]
[68 135]
[69 134]
[76 133]
[77 132]
[78 131]
[79 130]
[93 129]
[94 128]
[95 127]
[96 126]
[97 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
