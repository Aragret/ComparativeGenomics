%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[114.73094940 526.41986084]
[127.73509979 518.69024658]
[124.41284180 504.06280518]
[121.09058380 489.43533325]
[117.76832581 474.80786133]
[114.44606781 460.18041992]
[108.94196320 474.13409424]
[97.64423370 484.00125122]
[83.07681274 487.57760620]
[68.49409485 484.06414795]
[57.15390778 474.24578857]
[51.58966827 460.31597900]
[53.04444885 445.38668823]
[61.19324112 432.79315186]
[74.21559143 425.34881592]
[89.20226288 424.71670532]
[102.80520630 431.03811646]
[111.98549652 442.90078735]
[111.09268188 427.92736816]
[110.19985962 412.95394897]
[109.30704498 397.98056030]
[108.41423035 383.00714111]
[94.07472229 378.80432129]
[82.01573944 369.93246460]
[73.70417023 357.44677734]
[70.15923309 342.84350586]
[71.82752991 327.88067627]
[78.52690125 314.36627197]
[89.46605682 303.94003296]
[103.33802795 297.87423706]
[102.44521332 282.90084839]
[101.55239868 267.92742920]
[100.65958405 252.95402527]
[89.38352966 243.29037476]
[88.26478577 228.11793518]
[98.47736359 216.35609436]
[97.58454895 201.38269043]
[96.69173431 186.40928650]
[95.79891968 171.43586731]
[92.26286316 164.94602966]
[95.00596619 156.23320007]
[94.33618164 141.24816895]
[86.03829193 128.87907410]
[93.15166473 114.74718475]
[85.04602814 106.38417816]
[84.61260986 94.74573517]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[89.21504211 67.19918823]
[88.18125153 63.39185715]
[88.41844177 59.84514618]
[89.68170166 56.93468475]
[91.62718201 54.91645813]
[92.07379150 39.92310715]
[92.52039337 24.92975807]
[92.96700287 9.93640804]
[93.41360474 -5.05694151]
[93.86021423 -20.05029106]
[86.05244446 -7.24252844]
[74.18968964 1.93761122]
[59.83268738 6.28232193]
[44.87035370 5.21998262]
[31.27124023 -1.10963774]
[20.82454300 -11.87376881]
[14.90470505 -25.65620422]
[14.29058456 -40.64362717]
[19.06297684 -54.86418533]
[28.59399414 -66.44692230]
[41.62966537 -73.86791992]
[56.45492554 -76.15082550]
[71.11925507 -72.99528503]
[83.69331360 -64.81646729]
[92.52275848 -52.69042587]
[96.44612885 -38.21018219]
[100.20243073 -52.73224258]
[103.95872498 -67.25430298]
[107.71502686 -81.77635956]
[111.47132874 -96.29842377]
[115.22763062 -110.82048035]
[118.98393250 -125.34253693]
[121.86920166 -140.06242371]
[123.87321472 -154.92796326]
[125.87722778 -169.79348755]
[127.88124847 -184.65901184]
[126.09007263 -188.61447144]
[125.69089508 -192.53941345]
[126.50319672 -195.99998474]
[128.22409058 -198.66552734]
[130.47261047 -200.33953857]
[133.35787964 -215.05943298]
[136.24314880 -229.77932739]
[139.12843323 -244.49922180]
[142.01370239 -259.21911621]
[144.89897156 -273.93899536]
[146.34838867 -288.86880493]
[146.34838867 -303.86880493]
[146.34838867 -318.86880493]
[146.34838867 -333.86880493]
[132.29119873 -339.65362549]
[121.52133179 -350.38107300]
[115.68109894 -364.41531372]
[115.66110229 -379.61624146]
[121.46439362 -393.66580200]
[132.20600891 -404.42156982]
[146.24792480 -410.24331665]
[161.44885254 -410.24331665]
[175.49078369 -404.42156982]
[186.23239136 -393.66580200]
[192.03567505 -379.61624146]
[192.01568604 -364.41531372]
[186.17544556 -350.38107300]
[175.40557861 -339.65362549]
[161.34838867 -333.86880493]
[161.34838867 -318.86880493]
[161.34838867 -303.86880493]
[161.34838867 -288.86880493]
[169.20072937 -301.64929199]
[181.52622986 -310.19808960]
[196.24784851 -313.07458496]
[210.88471985 -309.79400635]
[222.97026062 -300.90921021]
[230.46788025 -287.91744995]
[232.11405945 -273.00805664]
[227.63142395 -258.69354248]
[217.77534485 -247.38610840]
[204.20677185 -240.99128723]
[189.21221924 -240.58673096]
[175.31855774 -246.24058533]
[164.86711121 -257.00009155]
[159.61886597 -271.05374146]
[156.73359680 -256.33383179]
[153.84831238 -241.61395264]
[150.96304321 -226.89405823]
[148.07777405 -212.17416382]
[145.19250488 -197.45426941]
[142.74678040 -182.65499878]
[140.74275208 -167.78947449]
[138.73873901 -152.92395020]
[136.73472595 -138.05841064]
[148.02970886 -147.92874146]
[162.95838928 -149.38981628]
[175.95272827 -141.89666748]
[182.16616821 -128.24407959]
[179.28123474 -113.52412415]
[168.37396240 -103.22697449]
[153.51248169 -101.19321442]
[140.23974609 -108.18138885]
[133.50599670 -121.58623505]
[129.74969482 -107.06417847]
[125.99339294 -92.54212189]
[122.23709106 -78.02005768]
[118.48078918 -63.49800110]
[114.72448730 -48.97594070]
[110.96818542 -34.45388412]
[108.85356140 -19.60368538]
[108.40695953 -4.61033583]
[107.96035004 10.38301468]
[107.51374817 25.37636375]
[107.06713867 40.36971283]
[106.62053680 55.36306381]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[116.24847412 99.39491272]
[108.13670349 114.07740021]
[116.48249817 127.51831818]
[109.32122040 140.57838440]
[109.99100494 155.56341553]
[110.77232361 170.54306030]
[111.66513824 185.51646423]
[112.55795288 200.48986816]
[113.45077515 215.46327209]
[124.98866272 225.92820740]
[125.68080902 241.12608337]
[115.63298798 252.06121826]
[116.52580261 267.03460693]
[117.41861725 282.00802612]
[118.31143951 296.98144531]
[132.80592346 301.35580444]
[144.90653992 310.40826416]
[153.16436768 323.03082275]
[156.59889221 337.68939209]
[154.81439209 352.61041260]
[148.04539490 365.99533081]
[137.12611389 376.23730469]
[123.38763428 382.11434937]
[124.28044891 397.08773804]
[125.17327118 412.06115723]
[126.06608582 427.03454590]
[126.95890045 442.00796509]
[129.07351685 456.85815430]
[132.39578247 471.48562622]
[135.71804810 486.11306763]
[139.04029846 500.74053955]
[142.36256409 515.36798096]
[157.42980957 516.72192383]
[171.34043884 522.66748047]
[182.73162842 532.62213135]
[190.48738098 545.61071777]
[193.84786987 560.36071777]
[192.48385620 575.42706299]
[186.52899170 589.33374023]
[176.56666565 600.71826172]
[163.57287598 608.46527100]
[148.82063293 611.81591797]
[133.75521851 610.44177246]
[119.85256195 604.47760010]
[108.47472382 594.50762939]
[100.73638916 581.50866699]
[97.39567566 566.75421143]
[98.77986908 551.68969727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 194]
[3 193]
[4 192]
[5 191]
[6 190]
[18 189]
[19 188]
[20 187]
[21 186]
[22 185]
[30 177]
[31 176]
[32 175]
[33 174]
[36 171]
[37 170]
[38 169]
[39 168]
[41 167]
[42 166]
[44 164]
[47 162]
[48 161]
[53 160]
[54 159]
[55 158]
[56 157]
[57 156]
[58 155]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[81 139]
[82 138]
[83 137]
[84 136]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
[94 130]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
