%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[57.36287308 564.50225830]
[45.23074341 573.36199951]
[32.02594757 580.52557373]
[17.98413658 585.86517334]
[3.35590458 589.28540039]
[-11.59769058 590.72534180]
[-26.60978508 590.15924072]
[-41.41247177 587.59722900]
[-55.74157333 583.08502197]
[-69.34137726 576.70312500]
[-81.96917725 568.56536865]
[-93.39961243 558.81713867]
[-103.42869568 547.63226318]
[-111.87744141 535.21044922]
[-118.59507751 521.77331543]
[-123.46172333 507.56066895]
[-126.39051819 492.82617188]
[-127.32920074 477.83273315]
[-126.26101685 462.84802246]
[-123.20503235 448.13934326]
[-118.21578217 433.96929932]
[-111.38230133 420.59069824]
[-102.82655334 408.24230957]
[-92.70121002 397.14453125]
[-81.18698120 387.49536133]
[-68.48934937 379.46707153]
[-54.83491516 373.20291138]
[-40.46736526 368.81463623]
[-25.64309692 366.38058472]
[-10.62667274 365.94421387]
[4.31392479 367.51327515]
[7.85359716 352.93692017]
[11.39326954 338.36053467]
[14.93294144 323.78414917]
[18.47261429 309.20779419]
[22.01228714 294.63140869]
[25.55195999 280.05502319]
[12.78786564 287.93399048]
[-2.07215476 285.88952637]
[-12.23430061 274.85635376]
[-13.05257511 259.87869263]
[-4.15287495 247.80412292]
[10.39597702 244.15298462]
[23.94244194 250.59451294]
[30.29342842 264.18557739]
[35.33034515 250.05654907]
[40.36725998 235.92752075]
[45.40417862 221.79849243]
[50.44109344 207.66946411]
[45.54147720 196.60960388]
[49.62218475 184.79725647]
[61.01111984 178.74293518]
[66.25784302 164.69046021]
[71.50455475 150.63798523]
[70.37223053 145.99827576]
[72.14251709 140.59799194]
[77.12236023 136.24913025]
[82.78514862 122.35909271]
[88.44792938 108.46907043]
[86.73600006 94.59243774]
[97.66204071 85.86814117]
[103.32482910 71.97811890]
[108.98761749 58.08808899]
[114.65039825 44.19806290]
[112.69547272 28.49810028]
[124.66501617 19.63360214]
[130.32780457 5.74357557]
[133.54107666 -8.90821171]
[134.21086121 -23.89324951]
[134.88064575 -38.87828827]
[135.55043030 -53.86332703]
[127.43827820 -63.89107895]
[128.30464172 -76.35836029]
[137.14097595 -84.61946106]
[138.03379822 -99.59287262]
[138.92660522 -114.56627655]
[139.81942749 -129.53968811]
[140.71223450 -144.51309204]
[138.09953308 -150.58641052]
[138.83567810 -156.22158813]
[141.86111450 -159.91696167]
[143.19934082 -174.85714722]
[144.53758240 -189.79733276]
[145.87580872 -204.73751831]
[147.21405029 -219.67770386]
[132.55476379 -222.95799255]
[118.44907379 -228.12371826]
[105.13835144 -235.08644104]
[92.85035706 -243.72706604]
[81.79534912 -253.89770508]
[72.16250610 -265.42434692]
[64.11665344 -278.10974121]
[57.79545975 -291.73681641]
[53.30709457 -306.07241821]
[50.72835922 -320.87124634]
[50.10337830 -335.88006592]
[51.44284821 -350.84204102]
[54.72384644 -365.50115967]
[59.89022827 -379.60659790]
[66.85359955 -392.91699219]
[75.49479675 -405.20458984]
[85.66596222 -416.25909424]
[97.19305420 -425.89138794]
[109.87883759 -433.93664551]
[123.50622559 -440.25720215]
[137.84204102 -444.74487305]
[152.64099121 -447.32290649]
[167.64982605 -447.94717407]
[182.61174011 -446.60699463]
[197.27072144 -443.32528687]
[211.37591553 -438.15823364]
[224.68597412 -431.19424438]
[236.97314453 -422.55245972]
[248.02717590 -412.38076782]
[257.65893555 -400.85321045]
[265.70358276 -388.16705322]
[272.02346802 -374.53936768]
[276.51046753 -360.20333862]
[279.08779907 -345.40426636]
[279.71133423 -330.39538574]
[278.37045288 -315.43353271]
[275.08807373 -300.77471924]
[269.92034912 -286.66976929]
[262.95568848 -273.36004639]
[254.31333923 -261.07327271]
[244.14111328 -250.01972961]
[232.61309814 -240.38853455]
[219.92655945 -232.34448242]
[206.29856873 -226.02523804]
[191.96232605 -221.53892517]
[177.16313171 -218.96229553]
[162.15423584 -218.33946228]
[160.81599426 -203.39927673]
[159.47776794 -188.45909119]
[158.13952637 -173.51890564]
[156.80130005 -158.57872009]
[155.68563843 -143.62026978]
[154.79283142 -128.64686584]
[153.90000916 -113.67346191]
[153.00720215 -98.70005035]
[152.11437988 -83.72664642]
[160.80294800 -68.47949219]
[150.53547668 -53.19354248]
[149.86569214 -38.20850372]
[149.19590759 -23.22346497]
[148.52612305 -8.23842621]
[155.80157471 -21.35588264]
[166.07347107 -32.28695679]
[178.71365356 -40.36320496]
[192.94917297 -45.09076691]
[207.90953064 -46.18054581]
[222.67990112 -43.56590652]
[236.35705566 -37.40672684]
[248.10462952 -28.07965279]
[257.20428467 -16.15503311]
[263.09951782 -2.36206245]
[265.42987061 12.45581150]
[264.05285645 27.39247131]
[259.05264282 41.53453445]
[250.73503113 54.01720810]
[239.60861206 64.07717133]
[226.35379028 71.09925842]
[211.78109741 74.65405273]
[196.78166199 74.52419281]
[182.27270508 70.71761322]
[169.14144897 63.46708679]
[158.19087219 53.21598434]
[150.09062195 40.59117126]
[145.33602905 26.36465454]
[144.21783447 11.40636253]
[138.55503845 25.29638863]
[140.91500854 40.00284576]
[128.54042053 49.86085129]
[122.87763977 63.75087738]
[117.21485138 77.64090729]
[111.55207062 91.53092957]
[113.26399994 105.40756226]
[102.33795929 114.13185883]
[96.67517090 128.02188110]
[91.01238251 141.91191101]
[85.55702972 155.88470459]
[80.31031036 169.93717957]
[75.06359100 183.98965454]
[78.53169250 202.07427979]
[64.57012177 212.70637512]
[59.53320694 226.83540344]
[54.49629211 240.96443176]
[49.45937347 255.09347534]
[44.42245865 269.22250366]
[40.12833405 283.59469604]
[36.58866119 298.17108154]
[33.04898834 312.74746704]
[29.50931740 327.32382202]
[25.96964455 341.90020752]
[22.42997169 356.47659302]
[18.89030075 371.05294800]
[32.88656235 376.51080322]
[46.03045273 383.78552246]
[58.08740234 392.74731445]
[68.84223938 403.23620605]
[78.10303497 415.06503296]
[85.70452118 428.02267456]
[91.51103210 441.87792969]
[95.41894531 456.38351440]
[97.35852051 471.28051758]
[97.29515076 486.30316162]
[95.22996521 501.18328857]
[91.19980621 515.65539551]
[85.27661133 529.46112061]
[77.56607819 542.35418701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 196]
[32 195]
[33 194]
[34 193]
[35 192]
[36 191]
[37 190]
[45 189]
[46 188]
[47 187]
[48 186]
[49 185]
[52 183]
[53 182]
[54 181]
[57 180]
[58 179]
[59 178]
[61 176]
[62 175]
[63 174]
[64 173]
[66 171]
[67 170]
[68 146]
[69 145]
[70 144]
[71 143]
[74 141]
[75 140]
[76 139]
[77 138]
[78 137]
[81 136]
[82 135]
[83 134]
[84 133]
[85 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
