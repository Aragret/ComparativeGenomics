%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[217.10848999 388.66455078]
[219.85249329 373.90524292]
[224.02996826 359.48596191]
[229.60067749 345.54559326]
[236.51098633 332.21838379]
[244.69432068 319.63269043]
[254.07186890 307.90972900]
[264.55334473 297.16235352]
[254.89253235 285.68765259]
[245.23171997 274.21295166]
[235.57090759 262.73825073]
[220.75511169 261.72448730]
[210.79421997 250.22514343]
[211.95800781 234.69184875]
[197.84207153 229.93898010]
[194.87289429 214.39888000]
[185.21208191 202.92417908]
[175.55126953 191.44947815]
[161.43534851 186.69660950]
[158.46617126 171.15650940]
[148.38502502 160.04928589]
[137.89752197 149.32490540]
[123.46719360 145.63508606]
[119.35041809 130.35887146]
[108.86291504 119.63449860]
[98.37541962 108.91011810]
[94.56420898 108.32098389]
[91.03118896 106.05478668]
[88.51953125 102.27344513]
[87.67243195 97.46488190]
[77.67425537 86.28290558]
[67.51071167 75.25102997]
[57.18404388 64.37169647]
[46.85737610 53.49235916]
[38.67966080 49.42261124]
[36.45943832 42.37332916]
[26.29589272 31.34145164]
[16.13234711 20.30957413]
[9.94591808 17.97727013]
[6.39853954 13.53732300]
[5.83645868 8.79463291]
[-3.99412227 -2.53496003]
[-13.82470322 -13.86455345]
[-10.04751492 0.65208715]
[-9.13463402 15.62428284]
[-11.12018871 30.49228859]
[-15.92994976 44.70024872]
[-23.38409805 57.71699524]
[-33.20395660 69.05588531]
[-45.02240372 78.29299927]
[-58.39759445 85.08300781]
[-72.82949066 89.17206573]
[-87.77854919 90.40728760]
[-102.68587494 88.74250793]
[-116.99416351 84.23995209]
[-130.16847229 77.06796265]
[-141.71629333 67.49466705]
[-151.20587158 55.87796402]
[-158.28245544 42.65216064]
[-162.68148804 28.31170654]
[-164.23847961 13.39273262]
[-162.89523315 -1.54700351]
[-158.70198059 -15.94896984]
[-151.81547546 -29.27473640]
[-142.49319458 -41.02611160]
[-131.08361816 -50.76376343]
[-118.01334381 -58.12363815]
[-103.77098846 -62.83058548]
[-88.88902283 -64.70863342]
[-73.92381287 -63.68756104]
[-59.43485260 -59.80555344]
[-45.96381760 -53.20773315]
[-34.01433182 -44.14077377]
[-24.03673935 -32.94856644]
[-28.00883484 -47.41308975]
[-31.98093224 -61.87761307]
[-35.95302963 -76.34214020]
[-39.14903641 -79.28144073]
[-41.05208206 -82.73729706]
[-41.65853500 -86.23981476]
[-41.11775970 -89.36618042]
[-39.70347977 -91.78649902]
[-42.80759048 -106.46179962]
[-45.91169739 -121.13710022]
[-49.01580811 -135.81240845]
[-64.07878113 -136.04594421]
[-78.71200562 -139.62594604]
[-92.18148804 -146.37286377]
[-103.81159210 -155.94827271]
[-113.01896667 -167.87185669]
[-119.34177399 -181.54554749]
[-122.46286774 -196.28347778]
[-122.22567749 -211.34640503]
[-118.64212036 -225.97875977]
[-111.89193726 -239.44659424]
[-102.31372070 -251.07438660]
[-90.38790131 -260.27886963]
[-76.71267700 -266.59835815]
[-61.97399139 -269.71588135]
[-46.91113281 -269.47503662]
[-32.27964401 -265.88793945]
[-18.81343842 -259.13449097]
[-7.18797255 -249.55346680]
[2.01362419 -237.62541199]
[8.32980347 -223.94865417]
[11.44374943 -209.20921326]
[11.19926643 -194.14642334]
[7.60861826 -179.51580811]
[0.85191000 -166.05123901]
[-8.73194408 -154.42808533]
[-20.66222191 -145.22938538]
[-34.34050751 -138.91651917]
[-31.23639679 -124.24121094]
[-28.13228607 -109.56591034]
[-25.02817726 -94.89060974]
[-21.48850441 -80.31423187]
[-17.51640701 -65.84970856]
[-13.54431152 -51.38518524]
[-9.57221508 -36.92066193]
[-2.49511003 -23.69513321]
[7.33547068 -12.36554050]
[17.16605186 -1.03594780]
[27.16422462 10.14602661]
[37.32777023 21.17790413]
[47.49131775 32.20978165]
[57.73670959 43.16569138]
[68.06337738 54.04502487]
[78.39004517 64.92436218]
[83.05622864 65.94208527]
[87.13262177 69.90188599]
[88.85623169 76.28473663]
[98.85440826 87.46670532]
[109.09980011 98.42261505]
[119.58729553 109.14699554]
[130.07479858 119.87137604]
[145.25526428 124.32826996]
[148.62190247 138.83740234]
[159.10940552 149.56178284]
[161.88471985 134.82077026]
[175.06791687 127.66511536]
[188.94082642 133.36970520]
[193.27685547 147.72932434]
[184.87965393 160.15859985]
[169.94087219 161.49571228]
[184.74780273 167.06932068]
[187.02597046 181.78866577]
[196.68678284 193.26336670]
[206.34759521 204.73806763]
[221.15452576 210.31169128]
[223.43270874 225.03103638]
[238.93714905 226.53097534]
[248.57112122 238.30557251]
[247.04560852 253.07745361]
[256.70642090 264.55215454]
[266.36724854 276.02685547]
[276.02804565 287.50155640]
[288.40417480 279.00457764]
[301.55355835 271.76162720]
[315.34954834 265.84240723]
[329.65930176 261.30395508]
[344.34503174 258.19000244]
[359.26522827 256.53048706]
[374.27627563 256.34143066]
[389.23355103 257.62463379]
[403.99301147 260.36776733]
[418.41253662 264.54437256]
[432.35324097 270.11425781]
[445.68087769 277.02374268]
[458.26705933 285.20632935]
[469.99060059 294.58319092]
[480.73858643 305.06402588]
[490.40750122 316.54788208]
[498.90420532 328.92416382]
[506.14691162 342.07366943]
[512.06585693 355.86981201]
[516.60400391 370.17965698]
[519.71771240 384.86541748]
[521.37689209 399.78567505]
[521.56567383 414.79672241]
[520.28216553 429.75396729]
[517.53869629 444.51339722]
[513.36181641 458.93283081]
[507.79168701 472.87341309]
[500.88189697 486.20089722]
[492.69906616 498.78692627]
[483.32199097 510.51028442]
[472.84094238 521.25805664]
[461.35690308 530.92675781]
[448.98043823 539.42321777]
[435.83074951 546.66564941]
[422.03451538 552.58428955]
[407.72457886 557.12219238]
[393.03875732 560.23553467]
[378.11846924 561.89447021]
[363.10742188 562.08294678]
[348.15020752 560.79913330]
[333.39083862 558.05541992]
[318.97146606 553.87823486]
[305.03100586 548.30780029]
[291.70364380 541.39776611]
[279.11776733 533.21466064]
[267.39462280 523.83734131]
[256.64706421 513.35607910]
[246.97860718 501.87185669]
[238.48237610 489.49520874]
[231.24020386 476.34539795]
[225.32182312 462.54904175]
[220.78424072 448.23901367]
[217.67114258 433.55310059]
[216.01254272 418.63281250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 156]
[9 155]
[10 154]
[11 153]
[14 150]
[16 148]
[17 147]
[18 146]
[20 144]
[21 138]
[22 137]
[24 135]
[25 134]
[26 133]
[30 132]
[31 131]
[32 128]
[33 127]
[34 126]
[36 125]
[37 124]
[38 123]
[41 122]
[42 121]
[43 120]
[74 119]
[75 118]
[76 117]
[77 116]
[82 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
