%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[69.04778290 595.27679443]
[59.60094452 606.95520020]
[48.73822403 617.32965088]
[36.63799667 626.22985840]
[23.49895859 633.50952148]
[9.53686333 639.04925537]
[-5.01901627 642.75793457]
[-19.92966080 644.57482910]
[-34.95022583 644.46997070]
[-49.83405685 642.44519043]
[-64.33674622 638.53363037]
[-78.22015381 632.79956055]
[-91.25630188 625.33715820]
[-103.23110962 616.26898193]
[-113.94795990 605.74389648]
[-123.23085785 593.93475342]
[-130.92738342 581.03540039]
[-136.91113281 567.25781250]
[-141.08386230 552.82806396]
[-143.37704468 537.98321533]
[-143.75303650 522.96704102]
[-142.20565796 508.02600098]
[-138.76031494 493.40554810]
[-133.47357178 479.34570312]
[-126.43225861 466.07739258]
[-117.75199890 453.81845093]
[-107.57532501 442.77023315]
[-96.06934357 433.11410522]
[-83.42300415 425.00863647]
[-69.84396362 418.58694458]
[-55.55520248 413.95449829]
[-40.79135895 411.18734741]
[-25.79486275 410.33090210]
[-10.81197548 411.39926147]
[3.91127300 414.37487793]
[8.73727036 400.17242432]
[13.56326866 385.96997070]
[12.73891926 378.62542725]
[18.56828880 371.59292603]
[23.60520363 357.46389771]
[28.64212036 343.33486938]
[33.67903519 329.20584106]
[38.71595383 315.07681274]
[43.75286865 300.94778442]
[35.20391083 288.78005981]
[35.46212387 273.73355103]
[44.63803864 261.58218384]
[59.37999725 257.11218262]
[64.41691589 242.98315430]
[69.45382690 228.85412598]
[74.49074554 214.72509766]
[78.13883209 200.17547607]
[80.36395264 185.34143066]
[82.58906555 170.50738525]
[84.81418610 155.67333984]
[86.92881012 140.82315063]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[97.87319183 57.13179398]
[99.21142578 42.19160843]
[89.31681824 53.46533203]
[75.14302826 58.37486267]
[60.39503098 55.63686371]
[48.92792892 45.96703339]
[43.73918915 31.89305115]
[46.18514252 17.09381866]
[55.62641525 5.43781757]
[69.59508514 -0.02809856]
[84.43977356 2.12484670]
[96.28012085 11.33387852]
[102.02095795 25.19089890]
[105.56063080 10.61452389]
[109.10030365 -3.96185160]
[112.63997650 -18.53822708]
[108.37773132 -33.77449417]
[118.89987183 -44.31649399]
[122.43954468 -58.89286804]
[125.97921753 -73.46924591]
[129.51889038 -88.04561615]
[133.05856323 -102.62199402]
[126.87214661 -111.56832886]
[126.63549805 -122.22310638]
[132.18537903 -131.06318665]
[141.48480225 -135.29803467]
[145.45689392 -149.76255798]
[149.42898560 -164.22708130]
[153.40109253 -178.69160461]
[157.37318420 -193.15612793]
[161.34527588 -207.62065125]
[147.53388977 -213.53326416]
[134.65626526 -221.27151489]
[122.95231628 -230.69125366]
[112.64009094 -241.61698914]
[103.91169739 -253.84519958]
[96.92972565 -267.14804077]
[91.82426453 -281.27774048]
[88.69041443 -295.97100830]
[87.58655548 -310.95419312]
[88.53326416 -325.94808960]
[91.51288605 -340.67343140]
[96.46993256 -354.85586548]
[103.31204224 -368.23120117]
[111.91175079 -380.55023193]
[122.10885620 -391.58349609]
[133.71339417 -401.12542725]
[146.50918579 -408.99826050]
[160.25782776 -415.05535889]
[174.70321655 -419.18386841]
[189.57623291 -421.30685425]
[204.59980774 -421.38482666]
[219.49404907 -419.41625977]
[233.98149109 -415.43786621]
[247.79225159 -409.52374268]
[260.66903687 -401.78411865]
[272.37197876 -392.36309814]
[282.68301392 -381.43624878]
[291.41009521 -369.20709229]
[298.39059448 -355.90350342]
[303.49453735 -341.77325439]
[306.62680054 -327.07962036]
[307.72903442 -312.09634399]
[306.78070068 -297.10253906]
[303.79949951 -282.37750244]
[298.84091187 -268.19561768]
[291.99734497 -254.82102966]
[283.39630127 -242.50292969]
[273.19799805 -231.47076416]
[261.59243774 -221.93009949]
[248.79580688 -214.05863953]
[235.04649353 -208.00302124]
[220.60066223 -203.87608337]
[205.72741699 -201.75469971]
[190.70384216 -201.67837524]
[175.80979919 -203.64854431]
[171.83770752 -189.18402100]
[167.86561584 -174.71949768]
[163.89352417 -160.25497437]
[159.92141724 -145.79045105]
[155.94932556 -131.32592773]
[162.19329834 -113.02566528]
[147.63493347 -99.08232117]
[144.09526062 -84.50594330]
[140.55558777 -69.92957306]
[137.01593018 -55.35319519]
[133.47625732 -40.77682114]
[137.99168396 -26.58315277]
[127.21635437 -14.99855423]
[123.67668152 -0.42217922]
[120.13700867 14.15419579]
[116.59733582 28.73057175]
[114.15161133 43.52984238]
[112.81337738 58.47002792]
[114.78148651 61.39558411]
[115.43035126 65.41976166]
[114.25906372 69.91213226]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[101.79433441 142.82716370]
[103.74917603 151.74996948]
[99.64823151 157.89846802]
[97.42311096 172.73249817]
[95.19799805 187.56654358]
[92.97287750 202.40058899]
[102.63420868 190.92633057]
[116.09149170 184.30050659]
[131.07691956 183.63966370]
[145.06521606 189.05519104]
[155.69906616 199.63446045]
[161.18652344 213.59468079]
[160.60281372 228.58332825]
[154.04634094 242.07452393]
[142.62194824 251.79478455]
[128.25488281 256.10607910]
[113.36621857 254.28184509]
[100.46496582 246.62954712]
[91.72521973 234.43869019]
[88.61977386 219.76200867]
[83.58286285 233.89103699]
[78.54594421 248.02006531]
[73.50902557 262.14910889]
[82.09876251 274.93670654]
[81.51847839 290.15237427]
[72.20014954 301.96899414]
[57.88189697 305.98468018]
[52.84498215 320.11370850]
[47.80806732 334.24273682]
[42.77114868 348.37176514]
[37.73423386 362.50079346]
[32.69731903 376.62982178]
[27.76572418 390.79595947]
[22.93972588 404.99841309]
[18.11372948 419.20086670]
[31.60180855 425.81149292]
[44.13377380 434.09268188]
[55.50384521 443.90847778]
[65.52530670 455.09768677]
[74.03359985 467.47659302]
[80.88902283 480.84188843]
[85.97898102 494.97415161]
[89.21990967 509.64129639]
[90.55858612 524.60241699]
[89.97303009 539.61193848]
[87.47284698 554.42333984]
[83.09909821 568.79339600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 198]
[36 197]
[37 196]
[39 195]
[40 194]
[41 193]
[42 192]
[43 191]
[44 190]
[48 186]
[49 185]
[50 184]
[51 183]
[52 169]
[53 168]
[54 167]
[55 166]
[56 164]
[57 163]
[58 162]
[60 160]
[61 159]
[62 155]
[63 154]
[74 153]
[75 152]
[76 151]
[77 150]
[79 148]
[80 147]
[81 146]
[82 145]
[83 144]
[87 142]
[88 141]
[89 140]
[90 139]
[91 138]
[92 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
