%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[82.21489716 631.22924805]
[67.22013092 632.16235352]
[52.23796844 631.04492188]
[37.54752350 627.89782715]
[23.42246437 622.77954102]
[10.12593651 615.78552246]
[-2.09435606 607.04608154]
[-13.01075649 596.72399902]
[-22.41989708 585.01153564]
[-30.14649391 572.12689209]
[-36.04660416 558.31011963]
[-40.01031113 543.81866455]
[-41.96377563 528.92242432]
[-41.87060547 513.89892578]
[-39.73253632 499.02810669]
[-35.58939743 484.58688354]
[-29.51837349 470.84439087]
[-21.63256454 458.05661011]
[-12.07887840 446.46173096]
[-1.03529394 436.27581787]
[11.29245281 427.68859863]
[24.67470360 420.86004639]
[38.86215591 415.91735840]
[53.59050751 412.95266724]
[68.58537292 412.02114868]
[69.70101929 397.06271362]
[70.81667328 382.10424805]
[71.93231964 367.14578247]
[65.16306305 353.87829590]
[73.90534210 340.69183350]
[75.02098846 325.73336792]
[68.25173187 312.46588135]
[76.99401093 299.27941895]
[78.10965729 284.32095337]
[79.22530365 269.36248779]
[80.34095764 254.40405273]
[67.95465851 246.13088989]
[61.32839966 232.67916870]
[62.33159256 217.61729431]
[70.79473114 204.99699402]
[84.52810669 198.26336670]
[85.64375305 183.30491638]
[86.75939941 168.34646606]
[87.87505341 153.38800049]
[88.99069977 138.42955017]
[86.35339355 131.52546692]
[90.23594666 123.25723267]
[91.57418060 108.31704712]
[82.83249664 120.50650787]
[70.13225555 128.48797607]
[55.35745621 131.07745361]
[40.69985580 127.89079285]
[28.33382416 119.40072632]
[20.09378433 106.86669922]
[17.20209885 92.14807129]
[20.08773232 77.42824554]
[28.32261848 64.89083862]
[40.68516159 56.39568710]
[55.34144974 53.20300293]
[70.11730957 55.78639984]
[82.82083130 63.76264954]
[91.56752777 75.94851685]
[95.05979156 90.53439331]
[99.46078491 76.19454956]
[103.86178589 61.85469818]
[108.26277924 47.51485062]
[111.80245209 32.93847656]
[114.46824646 18.17725945]
[117.13404846 3.41604257]
[119.79984283 -11.34517479]
[122.46563721 -26.10639191]
[125.13143158 -40.86761093]
[127.79722595 -55.62882614]
[130.13272095 -70.44589233]
[132.13673401 -85.31142426]
[118.94679260 -95.28224945]
[112.62121582 -110.45731354]
[114.79907227 -126.65835571]
[124.79209137 -139.47613525]
[139.79812622 -145.47041321]
[141.58059692 -160.36412048]
[142.80757141 -175.31385803]
[143.47735596 -190.29888916]
[144.14714050 -205.28393555]
[144.81692505 -220.26896667]
[145.48670959 -235.25401306]
[146.15649414 -250.23904419]
[131.41949463 -253.19218445]
[117.30602264 -258.36041260]
[104.14694977 -265.62258911]
[92.25071716 -274.80847168]
[81.89620972 -285.70269775]
[73.32614136 -298.04995728]
[66.74140930 -311.56076050]
[62.29637146 -325.91839600]
[60.09521866 -340.78631592]
[60.18955612 -355.81600952]
[62.57717133 -370.65515137]
[67.20208740 -384.95587158]
[73.95590210 -398.38293457]
[82.68029022 -410.62161255]
[93.17073822 -421.38504028]
[105.18133545 -430.42083740]
[118.43054199 -437.51727295]
[132.60777283 -442.50790405]
[147.38069153 -445.27581787]
[162.40299988 -445.75610352]
[177.32255554 -443.93753052]
[191.78961182 -439.86267090]
[205.46507263 -433.62707520]
[218.02832031 -425.37692261]
[229.18489075 -415.30563354]
[238.67324829 -403.64923096]
[246.27096558 -390.68099976]
[251.79994202 -376.70489502]
[255.13056946 -362.04858398]
[256.18478394 -347.05563354]
[254.93786621 -332.07745361]
[251.41903687 -317.46517944]
[245.71080017 -303.56137085]
[237.94694519 -290.69189453]
[228.30947876 -279.15847778]
[217.02432251 -269.23147583]
[204.35601807 -261.14355469]
[190.60151672 -255.08433533]
[176.08323669 -251.19586182]
[161.14154053 -249.56925964]
[160.47175598 -234.58422852]
[159.80197144 -219.59918213]
[159.13218689 -204.61415100]
[158.46238708 -189.62910461]
[157.79260254 -174.64407349]
[170.45497131 -182.68550110]
[184.68588257 -177.94406128]
[189.99484253 -163.91499329]
[182.46829224 -150.93998718]
[167.65451050 -148.58372498]
[156.47431946 -158.58166504]
[154.69184875 -143.68794250]
[166.13983154 -136.24075317]
[173.29664612 -124.53140259]
[174.71696472 -110.81528473]
[170.06690979 -97.76326752]
[160.20025635 -87.94160461]
[147.00225830 -83.30741119]
[144.99824524 -68.44187927]
[146.83375549 -65.43135834]
[147.30229187 -61.38222122]
[145.93156433 -56.94663620]
[142.55844116 -52.96303177]
[139.89265442 -38.20181274]
[137.22685242 -23.44059563]
[134.56106567 -8.67937946]
[131.89526367 6.08183813]
[129.22946167 20.84305573]
[126.56367493 35.60427094]
[138.28811646 26.24813652]
[153.26715088 25.45512962]
[165.91394043 33.52102280]
[171.51155090 47.43743896]
[167.97222900 62.01390076]
[156.61604309 71.81374359]
[141.67855835 73.18186951]
[128.73110962 65.60800934]
[122.60263062 51.91585159]
[118.20162964 66.25569916]
[113.80063629 80.59554291]
[109.39963531 94.93539429]
[106.51436615 109.65528107]
[105.17612457 124.59546661]
[103.94915009 139.54519653]
[102.83350372 154.50366211]
[101.71785736 169.46211243]
[100.60220337 184.42056274]
[99.48655701 199.37901306]
[112.06911469 208.07536316]
[118.56650543 221.81147766]
[117.32431030 236.85551453]
[108.77591705 249.17546082]
[95.29940796 255.51969910]
[94.18376160 270.47814941]
[93.06811523 285.43661499]
[91.95246124 300.39505005]
[98.64192200 314.73248291]
[89.97943878 326.84902954]
[88.86379242 341.80746460]
[95.55325317 356.14489746]
[86.89076996 368.26144409]
[85.77512360 383.21990967]
[84.65947723 398.17834473]
[83.54383087 413.13681030]
[98.23461151 416.28237915]
[112.36022949 421.39907837]
[125.65750885 428.39166260]
[137.87875366 437.12979126]
[148.79626465 447.45071411]
[158.20668030 459.16217041]
[165.93466187 472.04595947]
[171.83627319 485.86206055]
[175.80154419 500.35308838]
[177.75662231 515.24914551]
[177.66508484 530.27264404]
[175.52862549 545.14367676]
[171.38703918 559.58532715]
[165.31750488 573.32849121]
[157.43309021 586.11718750]
[147.88064575 597.71307373]
[136.83816528 607.90014648]
[124.51135254 616.48870850]
[111.12984467 623.31872559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 191]
[26 190]
[27 189]
[28 188]
[30 186]
[31 185]
[33 183]
[34 182]
[35 181]
[36 180]
[41 175]
[42 174]
[43 173]
[44 172]
[45 171]
[47 170]
[48 169]
[63 168]
[64 167]
[65 166]
[66 165]
[67 156]
[68 155]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[74 146]
[75 145]
[80 139]
[81 138]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
