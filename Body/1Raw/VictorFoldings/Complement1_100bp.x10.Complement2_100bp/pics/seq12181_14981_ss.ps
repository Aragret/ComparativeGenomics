%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[81.50437927 573.87414551]
[69.79322815 583.29992676]
[56.72166443 590.72491455]
[42.62827301 595.95678711]
[27.87811089 598.86004639]
[12.85324097 599.35949707]
[-2.05715799 597.44213867]
[-16.46686935 593.15771484]
[-30.00264740 586.61712646]
[-42.31388474 577.98986816]
[-53.08168793 567.49938965]
[-62.02714539 555.41735840]
[-68.91854858 542.05682373]
[-73.57739258 527.76373291]
[-75.88300323 512.90844727]
[-75.77566528 497.87564087]
[-73.25814819 483.05477905]
[-68.39566803 468.82971191]
[-61.31417465 455.56893921]
[-52.19709396 443.61590576]
[-41.28057861 433.28024292]
[-28.84740067 424.82965088]
[-15.21960068 418.48306274]
[-0.75017500 414.40484619]
[14.18608379 412.70062256]
[29.20228958 413.41455078]
[32.30640030 398.73925781]
[35.41051102 384.06396484]
[38.51462173 369.38864136]
[41.61873245 354.71334839]
[44.72283936 340.03805542]
[47.71761703 325.34005737]
[42.57291031 311.36215210]
[52.82020950 299.30798340]
[55.70548248 284.58807373]
[41.80199432 277.52139282]
[30.43938828 266.81674194]
[22.54220772 253.33392334]
[18.75618935 238.15921021]
[19.39545441 222.51786804]
[24.41647530 207.67520142]
[33.42092133 194.83422852]
[45.68726730 185.03814697]
[60.22857666 179.08560181]
[75.87193298 177.46554565]
[78.53772736 162.70433044]
[76.83847046 159.61485291]
[76.55120850 155.54882812]
[78.11862183 151.17887878]
[81.66625977 147.34986877]
[84.98851776 132.72239685]
[88.31077576 118.09494019]
[91.63304138 103.46748352]
[90.06100464 99.94596863]
[90.04882812 95.74861908]
[91.86354828 91.58763123]
[95.44406128 88.26802826]
[99.41616058 73.80350494]
[103.38825226 59.33897781]
[99.58153534 43.98256302]
[110.41289520 33.75852203]
[114.38498688 19.29399681]
[118.35708618 4.82947254]
[122.32917786 -9.63505077]
[118.52246094 -24.99146652]
[129.35382080 -35.21550751]
[133.32591248 -49.68003082]
[137.29800415 -64.14455414]
[133.49128723 -79.50096893]
[144.32264709 -89.72501373]
[148.29473877 -104.18953705]
[144.48802185 -119.54595184]
[155.31938171 -129.76998901]
[154.57415771 -138.87397766]
[159.45979309 -144.41946411]
[163.64680481 -158.82324219]
[167.83381653 -173.22702026]
[153.81124878 -178.57684326]
[140.27140808 -185.05181885]
[127.30438995 -192.60890198]
[114.99649811 -201.19776917]
[103.42964172 -210.76126099]
[92.68079376 -221.23576355]
[82.82147980 -232.55154419]
[73.91732788 -244.63328552]
[66.02758026 -257.40063477]
[59.20475388 -270.76855469]
[53.49424744 -284.64816284]
[48.93406677 -298.94702148]
[45.55455780 -313.57000732]
[43.37821198 -328.41979980]
[42.41951370 -343.39755249]
[42.68484116 -358.40365601]
[44.17242813 -373.33816528]
[46.87237549 -388.10174561]
[50.76671600 -402.59609985]
[55.82953644 -416.72482300]
[62.02713776 -430.39385986]
[69.31827545 -443.51223755]
[77.65443420 -455.99267578]
[86.98013306 -467.75210571]
[97.23331451 -478.71228027]
[108.34573364 -488.80023193]
[120.24344635 -497.94885254]
[132.84727478 -506.09725952]
[146.07333374 -513.19122314]
[159.83361816 -519.18347168]
[174.03654480 -524.03424072]
[188.58758545 -527.71118164]
[203.38992310 -530.18981934]
[218.34503174 -531.45367432]
[233.35340881 -531.49432373]
[248.31515503 -530.31152344]
[263.13070679 -527.91308594]
[277.70144653 -524.31506348]
[291.93045044 -519.54138184]
[305.72299194 -513.62371826]
[318.98730469 -506.60153198]
[331.63510132 -498.52154541]
[343.58221436 -489.43753052]
[354.74911499 -479.40994263]
[365.06155396 -468.50549316]
[374.45080566 -456.79675293]
[382.85449219 -444.36169434]
[390.21658325 -431.28298950]
[396.48815918 -417.64773560]
[401.62747192 -403.54666138]
[405.60028076 -389.07360840]
[408.38018799 -374.32485962]
[409.94866943 -359.39862061]
[410.29531860 -344.39422607]
[409.41778564 -329.41146851]
[407.32192993 -314.55010986]
[404.02169800 -299.90902710]
[399.53906250 -285.58566284]
[393.90383911 -271.67532349]
[387.15353394 -258.27062988]
[379.33309937 -245.46072388]
[370.49453735 -233.33090210]
[360.69668579 -221.96186829]
[350.00473022 -211.42929077]
[338.48986816 -201.80325317]
[326.22869873 -193.14782715]
[313.30282593 -185.52059937]
[299.79824829 -178.97233582]
[285.80490112 -173.54663086]
[271.41583252 -169.27957153]
[256.72683716 -166.19955444]
[241.83567810 -164.32710266]
[226.84144592 -163.67463684]
[211.84391785 -164.24653625]
[196.94291687 -166.03897095]
[182.23759460 -169.04000854]
[178.05058289 -154.63623047]
[173.86357117 -140.23245239]
[169.78390503 -125.79789734]
[173.87474060 -111.47608185]
[162.75926208 -100.21743774]
[158.78717041 -85.75291443]
[162.87800598 -71.43109894]
[151.76252747 -60.17245865]
[147.79043579 -45.70793533]
[143.81834412 -31.24341202]
[147.90916443 -16.92159653]
[136.79370117 -5.66295481]
[132.82160950 8.80156898]
[128.84951782 23.26609230]
[124.87741852 37.73061752]
[128.96824646 52.05243301]
[117.85277557 63.31107330]
[113.88068390 77.77559662]
[109.90858459 92.24011993]
[106.26049805 106.78974152]
[102.93824005 121.41720581]
[99.61598206 136.04466248]
[96.29371643 150.67211914]
[93.29894257 165.37013245]
[90.63314819 180.13134766]
[103.65590668 186.40414429]
[114.59922028 195.82929993]
[122.71961212 207.75819397]
[127.46755981 221.37239075]
[128.52464294 235.73979187]
[125.82494354 249.87844849]
[119.55905151 262.82369995]
[110.16065979 273.69393921]
[98.27656555 281.75070190]
[84.72213745 286.44885254]
[70.42537689 287.47335815]
[67.54010010 302.19323730]
[72.47843170 317.22399902]
[62.43750763 328.22531128]
[63.85778427 337.24865723]
[59.39814377 343.14215088]
[56.29403305 357.81747437]
[53.18992233 372.49276733]
[50.08581161 387.16806030]
[46.98170471 401.84335327]
[43.87759399 416.51867676]
[57.89676666 421.94628906]
[70.86367798 429.55255127]
[82.44245148 439.14047241]
[92.33316803 450.46170044]
[100.27963257 463.22296143]
[106.07601929 477.09371948]
[109.57218170 491.71469116]
[110.67756653 506.70715332]
[109.36353302 521.68280029]
[105.66412354 536.25366211]
[99.67516327 550.04235840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 199]
[27 198]
[28 197]
[29 196]
[30 195]
[31 194]
[32 192]
[34 190]
[35 189]
[45 178]
[46 177]
[50 176]
[51 175]
[52 174]
[53 173]
[57 172]
[58 171]
[59 170]
[61 168]
[62 167]
[63 166]
[64 165]
[66 163]
[67 162]
[68 161]
[70 159]
[71 158]
[73 156]
[75 155]
[76 154]
[77 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
