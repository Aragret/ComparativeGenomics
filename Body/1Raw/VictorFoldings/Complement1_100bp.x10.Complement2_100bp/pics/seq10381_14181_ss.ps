%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[72.42684174 395.22311401]
[80.23312378 382.30163574]
[91.23689270 371.96627808]
[104.62158966 364.98397827]
[101.51748657 350.30868530]
[98.41337585 335.63339233]
[95.30926514 320.95806885]
[92.20515442 306.28277588]
[85.52326965 319.71231079]
[72.69641876 327.48867798]
[57.69915771 327.20230103]
[45.17853546 318.94192505]
[39.01420975 305.26708984]
[41.11626053 290.41510010]
[50.83335114 278.98803711]
[65.15452576 274.52664185]
[79.64221954 278.41339111]
[89.80738068 289.44412231]
[88.69172668 274.48565674]
[79.73338318 266.35702515]
[78.68149567 253.90403748]
[86.64344788 243.75662231]
[85.75063324 228.78321838]
[84.85781860 213.80979919]
[83.96500397 198.83639526]
[83.07218933 183.86299133]
[82.17936707 168.88958740]
[75.71557617 182.42544556]
[65.06065369 192.98350525]
[51.46634293 199.32342529]
[36.52967834 200.70039368]
[22.00540733 196.95265198]
[9.59982872 188.52047729]
[0.77033746 176.39447021]
[-3.44578743 161.99917603]
[-2.55323982 147.02575684]
[3.34312487 133.23326111]
[13.55060768 122.24202728]
[26.87004280 115.34328461]
[41.73667908 113.34749603]
[56.40399551 116.48912048]
[69.14888763 124.39909363]
[78.47410583 136.14814758]
[83.28437042 150.35757446]
[85.95017242 135.59635925]
[88.61596680 120.83513641]
[91.28176117 106.07392120]
[92.95330048 91.16734314]
[93.62308502 76.18230438]
[94.29286957 61.19726944]
[94.96265411 46.21223068]
[95.63243866 31.22719002]
[96.30222321 16.24215126]
[96.86043549 1.25254142]
[89.53745270 -12.77188110]
[97.65026093 -25.26314163]
[98.09686279 -40.25649261]
[98.54347229 -55.24984360]
[98.76679993 -70.24817657]
[91.02949524 -84.04835510]
[98.76679993 -96.77562714]
[98.76679993 -111.77562714]
[98.76679993 -126.77562714]
[98.76679993 -141.77561951]
[83.80166626 -142.89685059]
[68.96217346 -145.13328552]
[54.33131027 -148.47242737]
[39.99088669 -152.89561462]
[26.02111435 -158.37809753]
[12.50011063 -164.88922119]
[-0.49650553 -172.39256287]
[-12.89605141 -180.84617615]
[-24.62918282 -190.20275879]
[-35.63028336 -200.41001892]
[-45.83782578 -211.41084290]
[-55.19472885 -223.14373779]
[-63.64866638 -235.54306030]
[-71.15235138 -248.53947449]
[-77.66383362 -262.06030273]
[-83.14668274 -276.02993774]
[-87.57024384 -290.37023926]
[-90.90978241 -305.00100708]
[-93.14661407 -319.84045410]
[-94.26823425 -334.80554199]
[-94.26836395 -349.81262207]
[-93.14701080 -364.77774048]
[-90.91043854 -379.61721802]
[-87.57115936 -394.24804688]
[-83.14785004 -408.58843994]
[-77.66524506 -422.55816650]
[-71.15400696 -436.07910156]
[-63.65054703 -449.07565308]
[-55.19683075 -461.47512817]
[-45.84013367 -473.20816040]
[-35.63278198 -484.20919800]
[-24.63186455 -494.41662598]
[-12.89889812 -503.77343750]
[-0.49950171 -512.22723389]
[12.49698162 -519.73083496]
[26.01786995 -526.24218750]
[39.98754883 -531.72491455]
[54.32789230 -536.14837646]
[68.95870209 -539.48773193]
[83.79815674 -541.72448730]
[98.76325989 -542.84594727]
[113.77033234 -542.84594727]
[128.73544312 -541.72448730]
[143.57489014 -539.48773193]
[158.20570374 -536.14837646]
[172.54605103 -531.72491455]
[186.51573181 -526.24218750]
[200.03662109 -519.73083496]
[213.03309631 -512.22723389]
[225.43249512 -503.77343750]
[237.16546631 -494.41662598]
[248.16638184 -484.20919800]
[258.37371826 -473.20816040]
[267.73043823 -461.47512817]
[276.18414307 -449.07565308]
[283.68759155 -436.07910156]
[290.19885254 -422.55816650]
[295.68145752 -408.58843994]
[300.10476685 -394.24804688]
[303.44403076 -379.61721802]
[305.68060303 -364.77774048]
[306.80197144 -349.81262207]
[306.80181885 -334.80554199]
[305.68020630 -319.84045410]
[303.44338989 -305.00100708]
[300.10385132 -290.37023926]
[295.68026733 -276.02993774]
[290.19741821 -262.06030273]
[283.68594360 -248.53947449]
[276.18225098 -235.54306030]
[267.72833252 -223.14373779]
[258.37142944 -211.41084290]
[248.16387939 -200.41001892]
[237.16278076 -190.20275879]
[225.42964172 -180.84617615]
[213.03010559 -172.39256287]
[200.03349304 -164.88922119]
[186.51248169 -158.37809753]
[172.54270935 -152.89561462]
[158.20228577 -148.47242737]
[143.57142639 -145.13328552]
[128.73193359 -142.89685059]
[113.76679993 -141.77561951]
[113.76679993 -126.77562714]
[113.76679993 -111.77562714]
[113.76679993 -96.77562714]
[121.50409698 -84.04835510]
[113.76679993 -70.24817657]
[116.45048523 -66.29762268]
[116.68093872 -60.61925125]
[113.53681946 -54.80323792]
[113.09021759 -39.80988693]
[112.64360809 -24.81653595]
[119.99854279 -11.86453819]
[111.85379028 1.69914746]
[114.79674530 8.47858715]
[111.28726959 16.91193581]
[110.61747742 31.89697456]
[109.94769287 46.88201523]
[109.27790833 61.86705399]
[108.60812378 76.85208893]
[107.93833923 91.83712769]
[117.77034760 80.50877380]
[132.13584900 76.19227600]
[146.58355713 80.22513580]
[156.63667297 91.35774231]
[159.18013000 106.14053345]
[153.42581177 119.99288940]
[141.15676880 128.62252808]
[126.17469025 129.35543823]
[113.12192535 121.96453857]
[106.04297638 108.73971558]
[103.37718201 123.50093079]
[100.71138763 138.26214600]
[98.04559326 153.02336121]
[97.15277863 167.99676514]
[98.04559326 182.97018433]
[98.93840790 197.94358826]
[99.83122253 212.91699219]
[100.72403717 227.89039612]
[101.61685181 242.86380005]
[112.11078644 257.99517822]
[103.65018463 273.37002563]
[104.76583099 288.32846069]
[106.88045502 303.17868042]
[109.98456573 317.85397339]
[113.08867645 332.52926636]
[116.19278717 347.20455933]
[119.29689789 361.87988281]
[134.36250305 362.84439087]
[148.60882568 367.83886719]
[160.97869873 376.49267578]
[170.55419922 388.16369629]
[176.62477112 401.98580933]
[178.73991394 416.93334961]
[176.74269104 431.89709473]
[170.78129578 445.76663208]
[161.29811096 457.51275635]
[148.99684143 466.26385498]
[134.79034424 471.37051392]
[119.73281097 472.45376587]
[104.94162750 469.43325806]
[91.51439667 462.53311157]
[80.44749451 452.26538086]
[72.56217957 439.39196777]
[68.44357300 424.86822510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 193]
[5 192]
[6 191]
[7 190]
[8 189]
[18 188]
[19 187]
[22 185]
[23 184]
[24 183]
[25 182]
[26 181]
[27 180]
[44 179]
[45 178]
[46 177]
[47 176]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[53 161]
[54 159]
[56 157]
[57 156]
[58 155]
[59 152]
[61 150]
[62 149]
[63 148]
[64 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
