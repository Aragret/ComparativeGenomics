%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[111.97840881 478.17306519]
[106.81076050 464.06600952]
[103.61222839 449.38665771]
[102.44239044 434.40850830]
[103.32304382 419.41055298]
[106.23778534 404.67224121]
[111.13231659 390.46810913]
[117.91545105 377.06277466]
[126.46082306 364.70599365]
[136.60923767 353.62792969]
[148.17163086 344.03497314]
[160.93261719 336.10583496]
[174.65444946 329.98825073]
[170.46743774 315.58447266]
[166.28044128 301.18069458]
[162.09342957 286.77691650]
[157.90641785 272.37313843]
[153.71940613 257.96936035]
[149.53239441 243.56556702]
[145.34538269 229.16178894]
[142.44804382 227.15235901]
[140.38005066 223.63973999]
[139.83731079 219.02902222]
[141.30847168 214.02075195]
[137.76879883 199.44438171]
[134.22914124 184.86799622]
[123.70699310 174.32600403]
[127.96923828 159.08973694]
[121.89540100 145.37446594]
[113.48078156 132.95697021]
[105.06616211 120.53948212]
[96.65155029 108.12198639]
[93.71794891 107.29524231]
[91.02033234 105.38280487]
[88.96139526 102.47003937]
[87.90666962 98.78984833]
[88.13154602 94.70543671]
[80.47094727 81.80911255]
[72.81034851 68.91278076]
[59.11032486 60.99950409]
[59.26260757 46.10567856]
[51.60201263 33.20935059]
[38.25377274 31.40960121]
[28.52133369 22.38241386]
[25.80539131 9.58765984]
[30.87832642 -2.25695205]
[23.41058350 -15.26590443]
[15.94284344 -28.27485657]
[8.95645428 -34.15942764]
[8.46241188 -41.53355408]
[-4.99592781 -49.85122681]
[-4.40026712 -64.73391724]
[-11.67349720 -77.85260773]
[-25.38481522 -71.74613190]
[-39.57617950 -66.85791779]
[-54.13957596 -63.22517776]
[-68.96417236 -60.87555695]
[-83.93714142 -59.82693863]
[-98.94452667 -60.08729935]
[-113.87210846 -61.65466309]
[-128.60627747 -64.51709747]
[-143.03489685 -68.65281677]
[-157.04815674 -74.03034973]
[-170.53941345 -80.60876465]
[-183.40597534 -88.33799744]
[-195.54991150 -97.15922546]
[-206.87881470 -107.00530243]
[-217.30645752 -117.80130005]
[-226.75347900 -129.46505737]
[-235.14797974 -141.90779114]
[-242.42607117 -155.03482056]
[-248.53236389 -168.74623108]
[-253.42036438 -182.93765259]
[-257.05291748 -197.50109863]
[-259.40231323 -212.32572937]
[-260.45074463 -227.29872131]
[-260.19015503 -242.30609131]
[-258.62258911 -257.23364258]
[-255.75994873 -271.96780396]
[-251.62402344 -286.39636230]
[-246.24629211 -300.40954590]
[-239.66769409 -313.90069580]
[-231.93827820 -326.76715088]
[-223.11688232 -338.91098022]
[-213.27064514 -350.23974609]
[-202.47450256 -360.66723633]
[-190.81060791 -370.11407471]
[-178.36775208 -378.50842285]
[-165.24063110 -385.78631592]
[-151.52912903 -391.89239502]
[-137.33763123 -396.78021240]
[-122.77413940 -400.41256714]
[-107.94947052 -402.76174927]
[-92.97647858 -403.80996704]
[-77.96910095 -403.54916382]
[-63.04156113 -401.98138428]
[-48.30746841 -399.11856079]
[-33.87896347 -394.98242188]
[-19.86585045 -389.60449219]
[-6.37478542 -383.02569580]
[6.49155617 -375.29611206]
[18.63525200 -366.47454834]
[29.96388054 -356.62814331]
[40.39122009 -345.83184814]
[49.83791351 -334.16784668]
[58.23206329 -321.72485352]
[65.50978851 -308.59762573]
[71.61568451 -294.88604736]
[76.50330353 -280.69448853]
[80.13542938 -266.13092041]
[82.48442841 -251.30624390]
[83.53241730 -236.33322144]
[83.27142334 -221.32585144]
[81.70343018 -206.39834595]
[78.84037781 -191.66429138]
[74.70404816 -177.23583984]
[69.32592773 -163.22280884]
[62.74694443 -149.73182678]
[55.01717377 -136.86560059]
[46.19543839 -124.72202301]
[36.34888077 -113.39353180]
[25.55244064 -102.96634674]
[13.88828945 -93.51981354]
[1.44519722 -85.12583923]
[8.71842670 -72.00714111]
[21.65653610 -64.62780762]
[21.58110619 -48.80678177]
[28.95179558 -35.74259949]
[36.41953659 -22.73364639]
[43.88727951 -9.72469330]
[60.29406738 -6.02929115]
[69.12567139 8.67845058]
[64.49833679 25.54875374]
[72.15893555 38.44507980]
[85.31101990 45.43592834]
[85.70667267 61.25218582]
[93.36727142 74.14851379]
[101.02787018 87.04483795]
[109.06903839 99.70736694]
[117.48365784 112.12486267]
[125.89827728 124.54235840]
[134.31289673 136.95985413]
[132.28172302 122.09800720]
[133.81723022 107.17681122]
[138.83261108 93.04012299]
[147.04418945 80.48743439]
[157.98757935 70.22866821]
[171.04386902 62.84401321]
[185.47467041 58.75109482]
[200.46385193 58.18139648]
[215.16369629 61.16713333]
[228.74285889 67.53944397]
[240.43336487 76.93795776]
[249.57408142 88.83112335]
[255.64802551 102.54634094]
[258.31170654 117.30793762]
[257.41448975 132.28108215]
[253.00708008 146.61895752]
[245.33877563 159.51071167]
[234.84324646 170.22721863]
[222.11405945 178.16244507]
[207.87110901 182.86758423]
[192.91990662 184.07655334]
[178.10601807 181.72099304]
[164.26724243 175.93408203]
[152.18621826 167.04313660]
[142.54560852 155.55006409]
[153.32093811 167.13465881]
[148.80551147 181.32832336]
[152.34518433 195.90470886]
[155.88485718 210.48107910]
[159.74916077 224.97477722]
[163.93617249 239.37855530]
[168.12318420 253.78233337]
[172.31019592 268.18612671]
[176.49720764 282.58990479]
[180.68421936 296.99368286]
[184.87123108 311.39746094]
[189.05824280 325.80123901]
[203.92127991 323.60955811]
[218.94433594 323.46218872]
[233.84751892 325.36187744]
[248.35319519 329.27328491]
[262.19113159 335.12353516]
[275.10354614 342.80358887]
[286.84988403 352.17041016]
[297.21130371 363.04949951]
[305.99478149 375.23818970]
[313.03671265 388.50939941]
[318.20590210 402.61590576]
[321.40600586 417.29489136]
[322.57748413 432.27294922]
[321.69845581 447.27096558]
[318.78530884 462.00961304]
[313.89230347 476.21426392]
[307.11062622 489.62033081]
[298.56658936 501.97805786]
[288.41937256 513.05718994]
[276.85800171 522.65142822]
[264.09790039 530.58190918]
[250.37670898 536.70098877]
[235.95010376 540.89465332]
[221.08682251 543.08471680]
[206.06375122 543.23046875]
[191.16076660 541.32916260]
[176.65551758 537.41619873]
[162.81820679 531.56445312]
[149.90663147 523.88299561]
[138.16131592 514.51489258]
[127.80107117 503.63467407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[18 174]
[19 173]
[20 172]
[24 171]
[25 170]
[26 169]
[28 167]
[29 142]
[30 141]
[31 140]
[32 139]
[37 138]
[38 137]
[39 136]
[41 134]
[42 133]
[46 130]
[47 129]
[48 128]
[50 127]
[52 125]
[53 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
