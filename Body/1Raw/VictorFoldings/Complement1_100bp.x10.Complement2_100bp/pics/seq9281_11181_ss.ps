%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[102.51604462 455.49716187]
[89.02905273 462.29992676]
[74.17156982 465.02606201]
[59.14801788 463.45455933]
[45.17629242 457.71282959]
[33.38902283 448.26629639]
[24.74174309 435.88076782]
[19.93545151 421.56027222]
[19.35977554 406.46572876]
[23.06138039 391.82077026]
[30.74019241 378.81262207]
[41.77372742 368.49575806]
[55.26754379 361.70651245]
[70.12776184 358.99530029]
[71.68828583 344.07669067]
[73.24880981 329.15811157]
[74.80933380 314.23950195]
[76.36985016 299.32089233]
[77.93037415 284.40228271]
[64.26575470 273.21524048]
[60.01454163 255.91270447]
[67.06225586 239.37760925]
[82.76063538 230.30465698]
[83.87628174 215.34619141]
[84.99193573 200.38774109]
[86.10758209 185.42929077]
[87.22322845 170.47084045]
[72.85254669 166.27519226]
[59.66802216 159.18374634]
[48.24573898 149.50637817]
[39.08477402 137.66589355]
[32.58539963 124.17967224]
[29.03159904 109.63695526]
[28.57864571 94.67317200]
[31.24633217 79.94213104]
[36.91809845 66.08748627]
[45.34612656 53.71459198]
[56.16216660 43.36406326]
[68.89363098 35.48815155]
[82.98423767 30.43097878]
[97.81831360 28.41351318]
[91.12885284 14.07608986]
[99.79133606 1.95954335]
[100.90698242 -12.99890995]
[102.02263641 -27.95736313]
[88.22613525 -31.56965446]
[75.27647400 -37.53591156]
[63.57168198 -45.67137146]
[53.47128296 -55.72462463]
[45.28525925 -67.38536835]
[39.26452637 -80.29400635]
[35.59325790 -94.05271149]
[34.38323975 -108.23770905]
[35.67045593 -122.41232300]
[39.41405487 -136.14039612]
[45.49761200 -148.99975586]
[53.73275375 -160.59516907]
[63.86501312 -170.57046509]
[75.58166504 -178.61953735]
[88.52140045 -184.49569702]
[102.28545380 -188.01921082]
[116.44989014 -189.08285522]
[118.01041412 -204.00144958]
[119.57093811 -218.92005920]
[121.13146210 -233.83866882]
[122.69197845 -248.75726318]
[124.25250244 -263.67587280]
[125.81302643 -278.59448242]
[127.37355042 -293.51309204]
[112.61319733 -296.22607422]
[98.10747528 -300.07473755]
[83.94361115 -305.03591919]
[70.20680237 -311.07980347]
[56.97965240 -318.16998291]
[44.34171677 -326.26388550]
[32.36900711 -335.31277466]
[21.13352394 -345.26226807]
[10.70284081 -356.05249023]
[1.13969052 -367.61859131]
[-7.49841213 -379.89096069]
[-15.15951538 -392.79583740]
[-21.79754639 -406.25558472]
[-27.37257957 -420.18927002]
[-31.85108757 -434.51306152]
[-35.20613480 -449.14083862]
[-37.41754532 -463.98464966]
[-38.47201538 -478.95516968]
[-38.36320877 -493.96237183]
[-37.09177399 -508.91601562]
[-34.66536331 -523.72619629]
[-31.09856415 -538.30377197]
[-26.41283035 -552.56115723]
[-20.63634491 -566.41253662]
[-13.80384541 -579.77459717]
[-5.95642567 -592.56701660]
[2.85871887 -604.71289062]
[12.58857250 -616.13909912]
[23.17461777 -626.77691650]
[34.55318832 -636.56243896]
[46.65584946 -645.43676758]
[59.40981674 -653.34655762]
[72.73838043 -660.24420166]
[86.56138611 -666.08825684]
[100.79570007 -670.84356689]
[115.35570526 -674.48150635]
[130.15383911 -676.98016357]
[145.10110474 -678.32458496]
[160.10762024 -678.50665283]
[175.08309937 -677.52532959]
[189.93750000 -675.38641357]
[204.58149719 -672.10278320]
[218.92698669 -667.69427490]
[232.88771057 -662.18737793]
[246.37971497 -655.61511230]
[259.32183838 -648.01708984]
[271.63626099 -639.43902588]
[283.24890137 -629.93243408]
[294.08993530 -619.55456543]
[304.09414673 -608.36779785]
[313.20138550 -596.43939209]
[321.35687256 -583.84112549]
[328.51156616 -570.64874268]
[334.62243652 -556.94165039]
[339.65270996 -542.80218506]
[343.57214355 -528.31536865]
[346.35717773 -513.56848145]
[347.99105835 -498.65005493]
[348.46395874 -483.64990234]
[347.77301025 -468.65820312]
[345.92239380 -453.76513672]
[342.92324829 -439.06027222]
[338.79360962 -424.63201904]
[333.55828857 -410.56716919]
[327.24877930 -396.95034790]
[319.90301514 -383.86337280]
[311.56521606 -371.38500977]
[302.28552246 -359.59030151]
[292.11972046 -348.55017090]
[281.12893677 -338.33102417]
[269.37930298 -328.99429321]
[256.94146729 -320.59616089]
[243.89024353 -313.18713379]
[230.30410767 -306.81173706]
[216.26478577 -301.50836182]
[201.85671997 -297.30889893]
[187.16653442 -294.23855591]
[172.28259277 -292.31585693]
[157.29441833 -291.55230713]
[142.29216003 -291.95254517]
[140.73162842 -277.03396606]
[139.17111206 -262.11535645]
[137.61058044 -247.19674683]
[136.05006409 -232.27813721]
[134.48954773 -217.35954285]
[132.92901611 -202.44093323]
[131.36849976 -187.52232361]
[146.46853638 -182.96531677]
[160.40255737 -175.56513977]
[172.64099121 -165.60105896]
[182.71827698 -153.44982910]
[190.25068665 -139.57147217]
[194.95083618 -124.49179077]
[196.63871765 -108.78250122]
[195.24851990 -93.03955841]
[190.83126831 -77.86052704]
[183.55293274 -63.82189560]
[173.68812561 -51.45720673]
[161.60984802 -41.23675919]
[147.77529907 -33.54972839]
[132.70864868 -28.68934631]
[116.98108673 -26.84171486]
[115.86544037 -11.88326168]
[114.74978638 3.07519197]
[121.51905060 16.34268570]
[112.77677155 29.52916145]
[127.14745331 33.72481155]
[140.33198547 40.81624985]
[151.75425720 50.49362183]
[160.91522217 62.33409882]
[167.41459656 75.82032776]
[170.96839905 90.36304474]
[171.42135620 105.32682800]
[168.75366211 120.05786896]
[163.08189392 133.91252136]
[154.65386963 146.28541565]
[143.83782959 156.63594055]
[131.10636902 164.51185608]
[117.01576233 169.56901550]
[102.18168640 171.58648682]
[101.06603241 186.54493713]
[99.95038605 201.50338745]
[98.83473969 216.46185303]
[97.71909332 231.42030334]
[108.23972321 238.17189026]
[114.85313416 248.69479370]
[116.35621643 260.95938110]
[112.52465820 272.63073730]
[104.14388275 281.51303101]
[92.84898376 285.96279907]
[91.28845978 300.88140869]
[89.72793579 315.80001831]
[88.16741180 330.71862793]
[86.60688782 345.63723755]
[85.04636383 360.55584717]
[99.02384949 366.28353882]
[110.82061005 375.71823120]
[119.48032379 388.09506226]
[124.30100250 402.41070557]
[124.89183807 417.50466919]
[121.20494843 432.15332031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 204]
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[23 193]
[24 192]
[25 191]
[26 190]
[27 189]
[41 175]
[43 173]
[44 172]
[45 171]
[62 156]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
