%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[66.88864899 495.41958618]
[58.39830017 507.80072021]
[48.71736145 519.27496338]
[37.94205475 529.72821045]
[26.17946434 539.05670166]
[13.54650211 547.16760254]
[0.16872048 553.98034668]
[-13.82092190 559.42724609]
[-28.28338623 563.45410156]
[-43.07493591 566.02093506]
[-58.04855728 567.10229492]
[-73.05543518 566.68731689]
[-87.94641876 564.78015137]
[-102.57351685 561.39984131]
[-116.79135132 556.57989502]
[-130.45860291 550.36822510]
[-143.43945312 542.82659912]
[-155.60488892 534.02996826]
[-166.83399963 524.06573486]
[-177.01516724 513.03295898]
[-186.04722595 501.04125977]
[-193.84039307 488.20983887]
[-200.31721497 474.66622925]
[-205.41333008 460.54504395]
[-209.07807922 445.98660278]
[-211.27505493 431.13562012]
[-211.98240662 416.13967896]
[-211.19311523 401.14782715]
[-208.91502380 386.30905151]
[-205.17076111 371.77087402]
[-199.99754333 357.67773438]
[-193.44679260 344.16970825]
[-185.58361816 331.38107300]
[-176.48617554 319.43893433]
[-166.24485779 308.46194458]
[-154.96147156 298.55923462]
[-142.74813843 289.82922363]
[-129.72627258 282.35864258]
[-116.02526855 276.22177124]
[-101.78131104 271.47958374]
[-87.13596344 268.17922974]
[-72.23477173 266.35351562]
[-57.22585297 266.02056885]
[-42.25836182 267.18368530]
[-27.48106384 269.83132935]
[-13.04082108 273.93719482]
[0.91884536 279.46044922]
[7.79825783 266.13101196]
[14.67767048 252.80157471]
[21.55708313 239.47215271]
[20.51857376 224.61380005]
[33.72329712 215.89910889]
[40.60271072 202.56967163]
[47.38270187 189.18940735]
[54.06289673 175.75903320]
[60.74309158 162.32864380]
[67.42328644 148.89826965]
[66.16367340 134.05702209]
[79.23718262 125.14670563]
[77.97756958 110.30545807]
[91.05108643 101.39513397]
[90.35444641 97.60210419]
[91.33309937 93.52042389]
[94.07847595 89.90518951]
[98.34121704 87.52425385]
[98.26579285 71.70322418]
[111.20389557 64.32389069]
[118.47712708 51.20519638]
[119.90129852 42.18247223]
[125.95755768 37.94650269]
[133.42530823 24.93754959]
[130.81561279 12.30614567]
[137.30332947 1.62469840]
[148.94430542 -1.66376710]
[156.60490417 -14.56009388]
[164.26550293 -27.45642090]
[171.92610168 -40.35274887]
[179.58670044 -53.24907303]
[187.24729919 -66.14540100]
[194.90789795 -79.04172516]
[202.56849670 -91.93805695]
[210.22909546 -104.83438110]
[207.80775452 -117.50324249]
[214.45378113 -128.08691406]
[226.14244080 -131.20169067]
[233.99418640 -143.98254395]
[221.88887024 -152.85462952]
[210.54699707 -162.68391418]
[200.04405212 -173.40495300]
[190.44992065 -184.94642639]
[181.82846069 -197.23150635]
[174.23703003 -210.17843628]
[167.72618103 -223.70106506]
[162.33921814 -237.70939636]
[158.11199951 -252.11021423]
[155.07264709 -266.80767822]
[153.24139404 -281.70394897]
[152.63043213 -296.69995117]
[153.24383545 -311.69583130]
[155.07749939 -326.59179688]
[158.11923218 -341.28875732]
[162.34880066 -355.68890381]
[167.73803711 -369.69635010]
[174.25108337 -383.21792603]
[181.84461975 -396.16363525]
[190.46807861 -408.44729614]
[200.06407166 -419.98721313]
[210.56877136 -430.70654297]
[221.91223145 -440.53399658]
[234.01899719 -449.40411377]
[246.80847168 -457.25790405]
[260.19555664 -464.04312134]
[274.09115601 -469.71453857]
[288.40280151 -474.23449707]
[303.03521729 -477.57284546]
[317.89108276 -479.70739746]
[332.87149048 -480.62396240]
[347.87677002 -480.31640625]
[362.80703735 -478.78680420]
[377.56295776 -476.04534912]
[392.04632568 -472.11022949]
[406.16073608 -467.00769043]
[419.81228638 -460.77166748]
[432.91009521 -453.44363403]
[445.36703491 -445.07241821]
[457.10018921 -435.71365356]
[468.03146362 -425.42968750]
[478.08810425 -414.28894043]
[487.20321655 -402.36553955]
[495.31613159 -389.73883057]
[502.37283325 -376.49285889]
[508.32638550 -362.71578979]
[513.13714600 -348.49926758]
[516.77313232 -333.93792725]
[519.21014404 -319.12869263]
[520.43188477 -304.17007446]
[520.43035889 -289.16165161]
[519.20544434 -274.20327759]
[516.76538086 -259.39453125]
[513.12634277 -244.83396912]
[508.31262207 -230.61845398]
[502.35620117 -216.84262085]
[495.29675293 -203.59811401]
[487.18121338 -190.97309875]
[478.06362915 -179.05160522]
[468.00463867 -167.91293335]
[457.07122803 -157.63124084]
[445.33615112 -148.27493286]
[432.87747192 -139.90629578]
[419.77810669 -132.58100891]
[406.12527466 -126.34781647]
[392.00979614 -121.24821472]
[377.52560425 -117.31612396]
[362.76910400 -114.57772064]
[347.83853149 -113.05123901]
[332.83319092 -112.74681854]
[317.85296631 -113.66649628]
[302.99755859 -115.80415344]
[288.36581421 -119.14555359]
[274.05511475 -123.66847229]
[260.16070557 -129.34280396]
[246.77503967 -136.13078308]
[238.92327881 -123.34993744]
[239.39028931 -105.80716705]
[223.12541199 -97.17378235]
[215.46482849 -84.27745819]
[207.80422974 -71.38113403]
[200.14363098 -58.48480225]
[192.48303223 -45.58847809]
[184.82243347 -32.69215012]
[177.16183472 -19.79582405]
[169.50123596 -6.89949656]
[161.84063721 5.99683046]
[162.56878662 23.53070450]
[146.43424988 32.40528870]
[138.96650696 45.41424179]
[131.59582520 58.47842789]
[124.32259369 71.59712219]
[124.91825104 86.47981262]
[111.45991516 94.79748535]
[104.48146057 108.07533264]
[105.26325989 123.87720490]
[92.66756439 131.82690430]
[93.44936371 147.62878418]
[80.85366058 155.57847595]
[74.17346954 169.00885010]
[67.49327087 182.43922424]
[60.81307983 195.86959839]
[59.79321671 204.94691467]
[53.93214035 209.44908142]
[47.05272675 222.77851868]
[47.59917450 238.59028625]
[34.88651276 246.35156250]
[28.00709915 259.68099976]
[21.12768745 273.01043701]
[14.24827480 286.33984375]
[26.83740807 294.51861572]
[38.54962921 303.91024780]
[49.26853180 314.42135620]
[58.88758469 325.94754028]
[67.31118774 338.37417603]
[74.45561981 351.57778931]
[80.24987793 365.42718506]
[84.63636780 379.78466797]
[87.57149506 394.50756836]
[89.02609253 409.44952393]
[88.98569489 424.46209717]
[87.45072174 439.39602661]
[84.43640900 454.10290527]
[79.97272491 468.43658447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 196]
[48 195]
[49 194]
[50 193]
[52 191]
[53 190]
[54 188]
[55 187]
[56 186]
[57 185]
[59 183]
[61 181]
[65 180]
[67 178]
[68 177]
[70 176]
[71 175]
[74 173]
[75 172]
[76 171]
[77 170]
[78 169]
[79 168]
[80 167]
[81 166]
[82 165]
[85 163]
[86 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
