%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[91.01986694 644.93859863]
[76.07856750 646.48321533]
[61.06241608 646.10449219]
[46.21798706 643.80853271]
[31.78904533 639.63311768]
[18.01252365 633.64685059]
[5.11464739 625.94793701]
[-6.69279051 616.66284180]
[-17.21590042 605.94409180]
[-26.28188324 593.96759033]
[-33.74186707 580.93005371]
[-39.47335434 567.04559326]
[-43.38222504 552.54217529]
[-45.40429306 537.65795898]
[-45.50635910 522.63739014]
[-43.68674088 507.72708130]
[-39.97531891 493.17187500]
[-34.43304062 479.21081543]
[-27.15091705 466.07312012]
[-18.24852180 453.97454834]
[-7.87204456 443.11373901]
[3.80812597 433.66906738]
[16.60018921 425.79559326]
[30.29408836 419.62265015]
[44.66495895 415.25155640]
[59.47681427 412.75408936]
[74.48643494 412.17132568]
[75.82466888 397.23114014]
[77.16290283 382.29095459]
[78.50113678 367.35076904]
[79.61678314 352.39230347]
[72.65074158 339.22705078]
[81.19572449 325.91189575]
[82.08854675 310.93847656]
[82.98136139 295.96508789]
[76.01531982 282.79983521]
[84.56030273 269.48468018]
[85.45311737 254.51126099]
[86.34593201 239.53785706]
[84.29158783 236.67219543]
[83.52319336 232.66911316]
[84.56021118 228.14387512]
[87.62770844 223.92041016]
[81.25647736 210.45726013]
[90.38748932 197.53692627]
[91.94801331 182.61831665]
[93.50853729 167.69970703]
[94.06674957 152.71009827]
[93.62014008 137.71675110]
[93.17353058 122.72340393]
[92.72692871 107.73004913]
[91.38869476 92.78986359]
[89.16357422 77.95581818]
[76.73806000 68.56198120]
[74.69278717 53.48645401]
[83.72495270 41.69851303]
[81.49983978 26.86446762]
[79.27471924 12.03042412]
[77.04960632 -2.80361962]
[74.82448578 -17.63766289]
[72.59936523 -32.47170639]
[60.17385101 -41.86554718]
[58.12858200 -56.94107437]
[67.16074371 -68.72901917]
[64.93563080 -83.56305695]
[61.68260574 -87.64533234]
[60.44455719 -92.11975861]
[61.03343964 -96.15315247]
[62.95777512 -99.10768890]
[61.39725113 -114.02629852]
[59.83673096 -128.94490051]
[58.27620697 -143.86351013]
[48.76627731 -152.57695007]
[47.77364349 -165.03480530]
[55.28675079 -174.51530457]
[44.34695816 -189.32754517]
[52.34604263 -204.94744873]
[50.78551865 -219.86605835]
[49.22499466 -234.78466797]
[47.66447449 -249.70326233]
[46.10395050 -264.62188721]
[38.56263733 -251.65542603]
[25.59787560 -244.11123657]
[10.59862614 -243.96130371]
[-2.51434708 -251.24484253]
[-10.31334209 -264.05795288]
[-10.75972176 -279.05130005]
[-3.73680210 -292.30569458]
[8.91964149 -300.35641479]
[23.90124512 -301.09909058]
[37.29185486 -294.33953857]
[45.59090805 -281.84552002]
[46.26069641 -296.83056641]
[46.93048096 -311.81561279]
[47.60026550 -326.80065918]
[33.17189026 -331.19073486]
[20.28900146 -339.03176880]
[9.76143265 -349.83090210]
[2.25095463 -362.90927124]
[-1.77031815 -377.44473267]
[-2.04960489 -392.52362061]
[1.43065035 -407.19805908]
[8.45167637 -420.54556274]
[18.57212448 -431.72711182]
[31.15581703 -440.03985596]
[45.41172791 -444.96121216]
[60.44372559 -446.18182373]
[75.30687714 -443.62500000]
[89.06687927 -437.45141602]
[100.85877228 -428.04916382]
[109.94129181 -416.00927734]
[115.74351501 -402.08862305]
[117.90070343 -387.16220093]
[116.27725983 -372.16836548]
[110.97522736 -358.04962158]
[102.32790375 -345.69345093]
[90.87886810 -335.87661743]
[77.34780884 -329.21618652]
[62.58530426 -326.13085938]
[61.91551971 -311.14581299]
[61.24573517 -296.16079712]
[60.57595062 -281.17575073]
[61.02255630 -266.18240356]
[62.58307648 -251.26379395]
[64.14360046 -236.34518433]
[65.70412445 -221.42657471]
[67.26464844 -206.50798035]
[76.46104431 -198.64967346]
[77.88323212 -186.23352051]
[70.22693634 -175.85354614]
[81.08116150 -162.06394958]
[73.19480896 -145.42402649]
[74.75533295 -130.50541687]
[76.31585693 -115.58681488]
[77.87638092 -100.66821289]
[79.76967621 -85.78817749]
[81.99478912 -70.95413208]
[94.08802795 -62.33501816]
[96.55593109 -47.32288361]
[87.43341064 -34.69682312]
[89.65853119 -19.86278152]
[91.88364410 -5.02873707]
[94.10876465 9.80530643]
[96.33387756 24.63935089]
[98.55899811 39.47339249]
[110.65223694 48.09251022]
[113.12014008 63.10464478]
[103.99761963 75.73070526]
[106.22274017 90.56475067]
[114.31362152 77.93392944]
[128.24107361 72.36383820]
[142.81051636 75.93197632]
[152.58787537 87.30752563]
[153.92646790 102.24768066]
[146.32702637 115.18013000]
[132.62393188 121.28139496]
[117.92813110 118.27585602]
[107.72027588 107.28344727]
[108.16688538 122.27679443]
[108.61348724 137.27014160]
[109.06009674 152.26348877]
[118.02230835 140.23524475]
[132.02697754 134.86224365]
[146.73460388 137.80937195]
[157.58789062 148.16342163]
[161.22380066 162.71609497]
[156.51571655 176.95806885]
[144.92248535 186.47633362]
[130.03642273 188.32153320]
[116.47010040 181.92192078]
[108.42713928 169.26023865]
[106.86661530 184.17883301]
[105.30609131 199.09744263]
[111.56571198 213.62768555]
[102.54631805 225.48094177]
[101.31933594 240.43067932]
[100.42652130 255.40408325]
[99.53370667 270.37747192]
[106.43589020 284.61370850]
[97.95476532 296.85791016]
[97.06195068 311.83129883]
[96.16913605 326.80471802]
[103.07131195 341.04095459]
[94.59019470 353.28512573]
[97.20289612 359.35845947]
[96.46675873 364.99362183]
[93.44132233 368.68899536]
[92.10308838 383.62918091]
[90.76485443 398.56936646]
[89.42662048 413.50955200]
[104.09373474 416.75054932]
[118.22595215 421.84060669]
[131.59123230 428.69610596]
[143.97007751 437.20446777]
[155.15924072 447.22601318]
[164.97497559 458.59613037]
[173.25608826 471.12814331]
[179.86660767 484.61627197]
[184.69798279 498.83898926]
[187.67088318 513.56280518]
[188.73646545 528.54589844]
[187.87727356 543.54223633]
[185.10737610 558.30554199]
[180.47227478 572.59344482]
[174.04809570 586.17132568]
[165.94029236 598.81616211]
[156.28204346 610.32031250]
[145.23191833 620.49499512]
[132.97138977 629.17297363]
[119.70177460 636.21185303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 190]
[28 189]
[29 188]
[30 187]
[31 184]
[33 182]
[34 181]
[35 180]
[37 178]
[38 177]
[39 176]
[43 175]
[45 173]
[46 172]
[47 171]
[48 161]
[49 160]
[50 159]
[51 158]
[52 149]
[53 148]
[56 145]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[64 137]
[65 136]
[69 135]
[70 134]
[71 133]
[72 132]
[75 130]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[92 122]
[93 121]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
