%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[131.26142883 662.57080078]
[118.74184418 654.29809570]
[106.81600189 645.19036865]
[95.53948975 635.29003906]
[84.96490479 624.64318848]
[75.14153290 613.29956055]
[66.11518097 601.31201172]
[57.92793655 588.73638916]
[50.61797333 575.63140869]
[44.21937180 562.05810547]
[38.76196671 548.07977295]
[34.27120209 533.76159668]
[30.76801682 519.17034912]
[28.26874352 504.37405396]
[26.78503609 489.44171143]
[26.32381248 474.44290161]
[26.88722420 459.44760132]
[28.47264099 444.52569580]
[31.07267380 429.74676514]
[34.67519760 415.17971802]
[39.26342010 400.89248657]
[44.81594467 386.95169067]
[51.30688095 373.42230225]
[58.70597076 360.36740112]
[66.97871399 347.84786987]
[76.08653259 335.92208862]
[85.98696899 324.64562988]
[96.63385773 314.07113647]
[107.97756195 304.24783325]
[119.96518707 295.22155762]
[132.54084778 287.03439331]
[145.64590454 279.72451782]
[159.21925354 273.32601929]
[153.76388550 259.35321045]
[148.30853271 245.38041687]
[142.85317993 231.40762329]
[137.39782715 217.43482971]
[125.56158447 208.39309692]
[127.75004578 192.72398376]
[115.91380310 183.68225098]
[118.10226440 168.01313782]
[112.64690399 154.04034424]
[107.19155121 140.06755066]
[101.73619080 126.09474945]
[96.28083801 112.12194824]
[94.89855194 127.05812073]
[89.74748993 141.14593506]
[81.16928864 153.45100403]
[69.73291779 163.15715027]
[56.19691467 169.62063599]
[41.45906830 172.41273499]
[26.49688530 171.34826660]
[12.30275536 166.49783325]
[-0.18187462 158.18315125]
[-10.12894440 146.95568848]
[-16.87870216 133.56013489]
[-19.98345757 118.88497162]
[-19.23728752 103.90354156]
[-14.68968010 89.60951233]
[-6.64226151 76.95095825]
[4.37121058 66.76747131]
[17.62025261 59.73448563]
[32.22610474 56.31847382]
[47.22000885 56.74601364]
[61.60747910 60.98873901]
[74.43424225 68.76525116]
[84.84954834 79.55976105]
[92.16448212 92.66107178]
[91.49469757 77.67603302]
[90.82491302 62.69099808]
[90.15512848 47.70595932]
[89.48534393 32.72092056]
[88.81555939 17.73587990]
[88.14577484 2.75084186]
[79.70802307 -4.11305332]
[76.50667572 -14.27826786]
[79.36839294 -24.31614113]
[87.11608887 -30.97843742]
[86.89276123 -45.97677612]
[86.66943359 -60.97511292]
[86.44610596 -75.97344971]
[78.50420380 -89.65689850]
[86.05115509 -102.49795532]
[85.82782745 -117.49629211]
[85.60449982 -132.49462891]
[85.38117218 -147.49296570]
[71.74063110 -151.87901306]
[60.13886642 -160.25077820]
[51.70241547 -171.77902222]
[47.24541473 -185.32881165]
[47.19103241 -199.57124329]
[51.53133774 -213.11383057]
[59.82936859 -224.63653564]
[71.26307678 -233.02053833]
[84.70675659 -237.45683289]
[84.70675659 -252.45683289]
[84.70675659 -267.45684814]
[84.70675659 -282.45684814]
[70.64957428 -288.24163818]
[59.87969971 -298.96908569]
[54.03946686 -313.00332642]
[54.01947021 -328.20425415]
[59.82275772 -342.25381470]
[70.56436920 -353.00958252]
[84.60629272 -358.83132935]
[99.80722809 -358.83132935]
[113.84914398 -353.00958252]
[124.59075928 -342.25381470]
[130.39404297 -328.20425415]
[130.37405396 -313.00332642]
[124.53382111 -298.96908569]
[113.76394653 -288.24163818]
[99.70675659 -282.45684814]
[99.70675659 -267.45684814]
[99.70675659 -252.45683289]
[99.70675659 -237.45683289]
[114.56845093 -232.25881958]
[126.77255249 -222.26908875]
[134.83187866 -208.68124390]
[137.75617981 -193.12878418]
[135.17382812 -177.48869324]
[127.37892914 -163.65496826]
[115.29791260 -153.30923462]
[100.37950897 -147.71629333]
[100.60283661 -132.71795654]
[100.82616425 -117.71961975]
[101.04949188 -102.72128296]
[108.97542572 -90.11061859]
[101.44444275 -76.19677734]
[101.66777039 -61.19844055]
[101.89109802 -46.20010376]
[102.11442566 -31.20176506]
[113.21844482 -15.37179947]
[103.13081360 2.08105683]
[103.80059814 17.06609535]
[104.47038269 32.05113602]
[105.14016724 47.03617477]
[105.80995178 62.02121353]
[106.47973633 77.00624847]
[107.14952087 91.99128723]
[110.25363159 106.66659546]
[115.70899200 120.63938904]
[121.16434479 134.61218262]
[126.61970520 148.58499146]
[132.07505798 162.55778503]
[144.30149841 172.59893799]
[141.72283936 187.26863098]
[153.94927979 197.30978394]
[151.37062073 211.97946167]
[156.82597351 225.95227051]
[162.28132629 239.92506409]
[167.73669434 253.89785767]
[173.19204712 267.87066650]
[187.51011658 263.37960815]
[202.10128784 259.87612915]
[216.89753723 257.37655640]
[231.82986450 255.89254761]
[246.82865906 255.43103027]
[261.82397461 255.99412537]
[276.74591064 257.57925415]
[291.52490234 260.17898560]
[306.09201050 263.78121948]
[320.37933350 268.36914062]
[334.32025146 273.92138672]
[347.84976196 280.41204834]
[360.90481567 287.81088257]
[373.42449951 296.08337402]
[385.35046387 305.19094849]
[396.62710571 315.09115601]
[407.20184326 325.73785400]
[417.02536011 337.08135986]
[426.05187988 349.06878662]
[434.23928833 361.64428711]
[441.54943848 374.74920654]
[447.94821167 388.32241821]
[453.40582275 402.30065918]
[457.89675903 416.61877441]
[461.40014648 431.20996094]
[463.89962769 446.00622559]
[465.38351440 460.93856812]
[465.84494019 475.93734741]
[465.28173828 490.93267822]
[463.69653320 505.85461426]
[461.09667969 520.63354492]
[457.49435425 535.20062256]
[452.90634155 549.48791504]
[447.35400391 563.42883301]
[440.86325073 576.95831299]
[433.46432495 590.01330566]
[425.19174194 602.53295898]
[416.08407593 614.45886230]
[406.18380737 625.73541260]
[395.53704834 636.31005859]
[384.19348145 646.13354492]
[372.20596313 655.15997314]
[359.63043213 663.34729004]
[346.52548218 670.65734863]
[332.95220947 677.05603027]
[318.97393799 682.51354980]
[304.65579224 687.00439453]
[290.06457520 690.50769043]
[275.26828003 693.00701904]
[260.33593750 694.49084473]
[245.33714294 694.95214844]
[230.34182739 694.38885498]
[215.41992188 692.80352783]
[200.64097595 690.20361328]
[186.07391357 686.60119629]
[171.78665161 682.01306152]
[157.84580994 676.46063232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 153]
[34 152]
[35 151]
[36 150]
[37 149]
[39 147]
[41 145]
[42 144]
[43 143]
[44 142]
[45 141]
[68 140]
[69 139]
[70 138]
[71 137]
[72 136]
[73 135]
[74 134]
[78 132]
[79 131]
[80 130]
[81 129]
[83 127]
[84 126]
[85 125]
[86 124]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
