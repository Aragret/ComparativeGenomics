%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[182.95079041 448.46661377]
[176.91175842 434.72982788]
[171.80372620 420.62033081]
[167.64950562 406.20120239]
[164.46766663 391.53677368]
[162.27239990 376.69259644]
[161.07353210 361.73492432]
[160.87641907 346.73056030]
[161.68191528 331.74655151]
[163.48643494 316.84982300]
[166.28193665 302.10687256]
[170.05590820 287.58355713]
[174.79150391 273.34475708]
[180.46757507 259.45407104]
[187.05877686 245.97351074]
[194.53565979 232.96331787]
[202.86483765 220.48156738]
[212.00910950 208.58401489]
[200.75302124 198.66937256]
[189.49691772 188.75471497]
[178.24082947 178.84005737]
[166.98472595 168.92541504]
[155.72863770 159.01075745]
[144.47253418 149.09611511]
[133.21644592 139.18145752]
[121.96034241 129.26681519]
[110.70424652 119.35215759]
[99.44815063 109.43750763]
[94.27409363 108.57547760]
[89.95133209 104.87587738]
[88.01017761 99.05618286]
[77.05426788 88.81079102]
[66.09835815 78.56539917]
[55.14245224 68.32000732]
[44.18654251 58.07461548]
[33.17262650 68.26732635]
[21.45193291 77.63872528]
[9.08557034 86.13995361]
[-3.86198783 93.72668457]
[-17.32323837 100.35936737]
[-31.22800064 106.00341797]
[-45.50378036 110.62941742]
[-60.07614899 114.21324921]
[-74.86913300 116.73622131]
[-89.80561066 118.18518066]
[-104.80770111 118.55257416]
[-119.79719543 117.83648682]
[-134.69593811 116.04065704]
[-149.42626953 113.17443848]
[-163.91137695 109.25277710]
[-178.07574463 104.29612732]
[-191.84553528 98.33032227]
[-205.14894104 91.38646698]
[-217.91661072 83.50076294]
[-230.08198547 74.71431732]
[-241.58161926 65.07295227]
[-252.35559082 54.62693024]
[-262.34771729 43.43070984]
[-271.50585938 31.54265976]
[-279.78234863 19.02476501]
[-287.13397217 5.94228554]
[-293.52243042 -7.63656950]
[-298.91442871 -21.64100647]
[-303.28182983 -35.99801254]
[-306.60186768 -50.63273621]
[-308.85720825 -65.46887970]
[-310.03616333 -80.42908478]
[-310.13253784 -95.43537140]
[-309.14581299 -110.40948486]
[-307.08117676 -125.27336884]
[-303.94937134 -139.94952393]
[-299.76669312 -154.36143494]
[-294.55502319 -168.43395996]
[-288.34149170 -182.09375000]
[-281.15847778 -195.26956177]
[-273.04342651 -207.89271545]
[-264.03869629 -219.89739990]
[-254.19119263 -231.22102356]
[-243.55227661 -241.80455017]
[-232.17739868 -251.59280396]
[-220.12586975 -260.53475952]
[-207.46052551 -268.58377075]
[-194.24739075 -275.69790649]
[-180.55537415 -281.84008789]
[-166.45582581 -286.97824097]
[-152.02227783 -291.08560181]
[-137.32997131 -294.14074707]
[-122.45551300 -296.12777710]
[-107.47645569 -297.03631592]
[-92.47087860 -296.86160278]
[-77.51702881 -295.60458374]
[-62.69286346 -293.27182007]
[-48.07566833 -289.87542725]
[-33.74165726 -285.43313599]
[-19.76555634 -279.96813965]
[-6.22023439 -273.50888062]
[6.82368994 -266.08905029]
[19.29821014 -257.74734497]
[31.13829231 -248.52725220]
[42.28220367 -238.47682190]
[52.67184448 -227.64848328]
[62.25304794 -216.09866333]
[70.97586060 -203.88758850]
[78.79481506 -191.07893372]
[85.66912842 -177.73945618]
[91.56297302 -163.93872070]
[96.44562531 -149.74867249]
[100.29161072 -135.24328613]
[103.08089447 -120.49819946]
[104.79893494 -105.59027863]
[105.43675995 -90.59724426]
[104.99105835 -75.59727478]
[103.46414948 -60.66857147]
[100.86399841 -45.88895798]
[97.20414734 -31.33549500]
[92.50369263 -17.08405876]
[86.78712463 -3.20894861]
[80.08426666 10.21749592]
[72.43005371 23.12527466]
[63.86438751 35.44709015]
[54.43193436 47.11870575]
[65.38784027 57.36409760]
[76.34375000 67.60948944]
[87.29965973 77.85488129]
[98.25556946 88.10027313]
[109.36280823 98.18141174]
[120.61890411 108.09606171]
[131.87500000 118.01071167]
[143.13108826 127.92536163]
[154.38719177 137.84001160]
[165.64328003 147.75466919]
[176.89938354 157.66931152]
[188.15547180 167.58396912]
[199.41157532 177.49862671]
[210.66766357 187.41326904]
[221.92376709 197.32792664]
[232.57197571 186.75508118]
[243.90258789 176.91708374]
[255.86502075 167.85784912]
[268.40582275 159.61785889]
[281.46899414 152.23390198]
[294.99618530 145.73895264]
[308.92700195 140.16204834]
[323.19918823 135.52806091]
[337.74902344 131.85771179]
[352.51150513 129.16737366]
[367.42074585 127.46908569]
[382.41012573 126.77041626]
[397.41268921 127.07449341]
[412.36141968 128.37994385]
[427.18960571 130.68096924]
[441.83096313 133.96725464]
[456.22012329 138.22415161]
[470.29281616 143.43263245]
[483.98620605 149.56944275]
[497.23913574 156.60716248]
[509.99237061 164.51437378]
[522.18902588 173.25573730]
[533.77453613 182.79225159]
[544.69720459 193.08128357]
[554.90826416 204.07690430]
[564.36206055 215.72999573]
[573.01647949 227.98851013]
[580.83270264 240.79769897]
[587.77593994 254.10035706]
[593.81518555 267.83706665]
[598.92340088 281.94647217]
[603.07775879 296.36557007]
[606.25982666 311.02993774]
[608.45526123 325.87411499]
[609.65429688 340.83175659]
[609.85162354 355.83612061]
[609.04632568 370.82012939]
[607.24194336 385.71688843]
[604.44665527 400.45986938]
[600.67285156 414.98321533]
[595.93743896 429.22207642]
[590.26153564 443.11285400]
[583.67053223 456.59347534]
[576.19378662 469.60379028]
[567.86474609 482.08563232]
[558.72064209 493.98330688]
[548.80224609 505.24362183]
[538.15393066 515.81634521]
[526.82318115 525.65417480]
[514.86065674 534.71325684]
[502.31973267 542.95312500]
[489.25646973 550.33691406]
[475.72918701 556.83166504]
[461.79833984 562.40838623]
[447.52606201 567.04223633]
[432.97619629 570.71240234]
[418.21365356 573.40252686]
[403.30441284 575.10064697]
[388.31503296 575.79913330]
[373.31246948 575.49487305]
[358.36373901 574.18920898]
[343.53561401 571.88800049]
[328.89428711 568.60156250]
[314.50515747 564.34448242]
[300.43252563 559.13580322]
[286.73922729 552.99884033]
[273.48638916 545.96093750]
[260.73324585 538.05358887]
[248.53672791 529.31201172]
[236.95132446 519.77539062]
[226.02877808 509.48620605]
[215.81785583 498.49047852]
[206.36418152 486.83724976]
[197.70997620 474.57864380]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[23 131]
[24 130]
[25 129]
[26 128]
[27 127]
[28 126]
[31 125]
[32 124]
[33 123]
[34 122]
[35 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
