%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[-69.67353058 568.80474854]
[-61.74616623 581.58227539]
[-56.09239578 595.51580811]
[-52.87489319 610.20440674]
[-52.18622971 625.22552490]
[-54.04622269 640.14691162]
[-58.40135193 654.53930664]
[-65.12631226 667.98858643]
[-74.02761841 680.10778809]
[-84.84915161 690.54821777]
[-97.27957153 699.00946045]
[-110.96121216 705.24810791]
[-125.50043488 709.08459473]
[-140.47891235 710.40863037]
[-155.46569824 709.18212891]
[-170.02957153 705.44024658]
[-183.75152588 699.29077148]
[-196.23672485 690.91052246]
[-207.12596130 680.54077148]
[-216.10592651 668.47973633]
[-222.91824341 655.07452393]
[-227.36692810 640.71075439]
[-229.32395935 625.80175781]
[-228.73303223 610.77648926]
[-225.61117554 596.06726074]
[-220.04817200 582.09722900]
[-212.20411682 569.26843262]
[-202.30467224 557.94989014]
[-190.63467407 548.46734619]
[-177.52989197 541.09350586]
[-163.36737061 536.04071045]
[-148.55461121 533.45416260]
[-133.51779175 533.40838623]
[-118.68955994 535.90466309]
[-104.49654388 540.87121582]
[-97.22332001 527.75250244]
[-89.95008850 514.63378906]
[-82.67685699 501.51510620]
[-75.40362549 488.39642334]
[-80.65235138 476.62866211]
[-78.12720490 463.79489136]
[-68.53024292 454.62377930]
[-55.21027756 452.62551880]
[-47.74253845 439.61654663]
[-40.27479553 426.60760498]
[-44.40127563 412.34197998]
[-37.01324081 399.04266357]
[-22.02217484 394.81115723]
[-14.55443287 381.80221558]
[-7.08669186 368.79327393]
[0.38104951 355.78430176]
[6.55681801 342.11465454]
[11.38281536 327.91220093]
[16.20881271 313.70971680]
[21.03481102 299.50726318]
[20.21046257 292.16275024]
[26.03983116 285.13021851]
[31.07674599 271.00119019]
[36.11366272 256.87216187]
[41.15057755 242.74313354]
[46.18749619 228.61410522]
[51.22441101 214.48507690]
[56.26132965 200.35604858]
[53.24703979 185.76963806]
[65.16909790 175.36891174]
[70.20600891 161.23988342]
[75.24292755 147.11085510]
[80.27984619 132.98182678]
[85.31675720 118.85279083]
[90.35367584 104.72376251]
[92.90950775 89.94310760]
[92.90950775 74.94310760]
[92.90950775 59.94310760]
[85.17221069 46.14293671]
[92.90950775 33.41566467]
[92.90950775 18.41566277]
[85.17221069 4.61549091]
[92.90950775 -8.11178112]
[92.90950775 -23.11178017]
[89.78009796 -31.69342613]
[93.02283478 -38.33469391]
[92.57623291 -53.32804489]
[91.46058655 -68.28649902]
[90.34493256 -83.24494934]
[89.22928619 -98.20339966]
[80.48700714 -111.38987732]
[87.25626373 -124.65737152]
[86.14061737 -139.61582947]
[85.02497101 -154.57427979]
[83.79799652 -169.52401733]
[82.45976257 -184.46420288]
[81.12152100 -199.40438843]
[79.78328705 -214.34457397]
[65.03199768 -217.69934082]
[52.04040146 -225.45005798]
[42.08129120 -236.83738708]
[36.13035583 -250.74571228]
[34.77061081 -265.81243896]
[38.13526535 -280.56149292]
[45.89468765 -293.54788208]
[57.28869247 -303.49935913]
[71.20100403 -309.44097900]
[86.26863861 -310.79061890]
[101.01542664 -307.41607666]
[113.99662018 -299.64797974]
[123.94046021 -288.24731445]
[129.87275696 -274.33102417]
[131.21231079 -259.26248169]
[127.82788849 -244.51795959]
[120.05106354 -231.54196167]
[108.64373779 -221.60575867]
[94.72347260 -215.68280029]
[96.06170654 -200.74261475]
[97.39994049 -185.80242920]
[98.73817444 -170.86224365]
[102.46588898 -164.48056030]
[99.98342133 -155.68992615]
[101.09906769 -140.73147583]
[102.21472168 -125.77301788]
[110.87719727 -113.65647125]
[104.18773651 -99.31905365]
[105.30339050 -84.36059570]
[106.41903687 -69.40214539]
[107.53468323 -54.44369125]
[118.11819458 -65.07333374]
[133.11721802 -65.24385071]
[143.93965149 -54.85756302]
[144.38589478 -39.86420059]
[134.20033264 -28.85264969]
[119.21771240 -28.13082314]
[108.02117920 -38.11136627]
[107.90950775 -23.11178017]
[107.90950775 -8.11178112]
[115.64681244 4.61549091]
[107.90950775 18.41566277]
[107.90950775 33.41566467]
[115.64681244 46.14293671]
[107.90950775 59.94310760]
[107.90950775 74.94310760]
[107.90950775 89.94310760]
[114.59198761 76.51387024]
[124.36553192 65.13503265]
[136.63247681 56.50242615]
[150.64271545 51.14393234]
[165.53948975 49.38722229]
[180.41186523 51.33972549]
[194.35040283 56.88204193]
[206.50274658 65.67525482]
[216.12576294 77.18166351]
[222.63102722 90.69763947]
[225.62072754 105.39667511]
[224.91203308 120.37992859]
[220.54829407 134.73115540]
[212.79634094 147.57278442]
[202.13021851 158.11953735]
[189.20217896 165.72647095]
[174.80274963 169.92842102]
[159.81246948 170.46846008]
[145.14801025 167.31353760]
[131.70610046 160.65657043]
[120.30871582 150.90466309]
[111.65281677 138.65414429]
[106.26771545 124.65412140]
[104.48270416 109.76067352]
[99.44579315 123.88970947]
[94.40887451 138.01873779]
[89.37195587 152.14776611]
[84.33504486 166.27679443]
[79.29812622 180.40582275]
[81.95214081 196.00283813]
[70.39035797 205.39295959]
[65.35343933 219.52198792]
[60.31652451 233.65101624]
[55.27960968 247.78004456]
[50.24269104 261.90908813]
[45.20577621 276.03811646]
[40.16886139 290.16714478]
[35.23726654 304.33328247]
[30.41126823 318.53573608]
[25.58527184 332.73818970]
[20.75927353 346.94064331]
[32.30601120 337.36605835]
[46.72660446 333.23730469]
[61.59093475 335.25021362]
[74.39409637 343.06552124]
[82.97853851 355.36621094]
[85.89762115 370.07943726]
[82.65943146 384.72573853]
[73.80966949 396.83697510]
[60.83966827 404.37216187]
[45.93510056 406.06149292]
[31.60765076 401.62030029]
[20.27174377 391.79699707]
[13.83767891 378.24700928]
[13.39000225 363.25204468]
[5.92226076 376.26101685]
[-1.54548049 389.26995850]
[-9.01322174 402.27890015]
[-5.10739326 417.35812378]
[-12.86606216 430.44467163]
[-27.26584435 434.07534790]
[-34.73358536 447.08428955]
[-42.20132828 460.09323120]
[-37.32333374 476.89279175]
[-45.93498230 491.73037720]
[-62.28493500 495.66964722]
[-69.55816650 508.78833008]
[-76.83139038 521.90704346]
[-84.10462189 535.02575684]
[-91.37785339 548.14440918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 210]
[36 209]
[37 208]
[38 207]
[39 206]
[43 203]
[44 202]
[45 201]
[48 198]
[49 197]
[50 196]
[51 195]
[52 181]
[53 180]
[54 179]
[55 178]
[57 177]
[58 176]
[59 175]
[60 174]
[61 173]
[62 172]
[63 171]
[65 169]
[66 168]
[67 167]
[68 166]
[69 165]
[70 164]
[71 140]
[72 139]
[73 138]
[75 136]
[76 135]
[78 133]
[79 132]
[81 131]
[82 124]
[83 123]
[84 122]
[85 121]
[87 119]
[88 118]
[89 117]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
