%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUU\
) } def
/len { sequence length } bind def

/coor [
[45.86797714 688.39135742]
[48.89963913 703.28692627]
[45.99534225 718.20782471]
[37.59796906 730.87872314]
[24.98806000 739.36749268]
[10.08853245 742.37951660]
[-4.82854176 739.45562744]
[-17.48841858 731.04156494]
[-25.96055794 718.42053223]
[-28.95302010 703.51702881]
[-26.00947762 688.60382080]
[-17.57879829 675.95501709]
[-4.94659853 667.49951172]
[9.96080112 664.52667236]
[12.84607410 649.80676270]
[15.73134708 635.08685303]
[18.61661911 620.36694336]
[21.39223099 605.62603760]
[24.05802536 590.86480713]
[26.72382164 576.10357666]
[21.37157631 562.20385742]
[31.43827057 549.99841309]
[34.10406494 535.23718262]
[36.76986313 520.47601318]
[39.43565750 505.71475220]
[24.38869858 498.05072021]
[12.42400932 486.10916138]
[4.71452808 471.04510498]
[2.02085280 454.32046509]
[4.61621523 437.56213379]
[12.25881004 422.40371704]
[24.21427917 410.32632446]
[39.32625961 402.51385498]
[56.12821960 399.73690796]
[58.13223648 384.87139893]
[60.13624954 370.00585938]
[62.14026260 355.14031982]
[64.14427185 340.27481079]
[66.03756714 325.39477539]
[67.82003021 310.50103760]
[69.60250092 295.60733032]
[63.43241882 282.05081177]
[72.75478363 269.26785278]
[60.32428360 277.66323853]
[45.57254410 274.94549561]
[36.95003128 262.67144775]
[39.39611435 247.87222290]
[51.50956345 239.02551270]
[66.35124207 241.19909668]
[75.41893005 253.14694214]
[78.52303314 238.47163391]
[81.62714386 223.79632568]
[84.73125458 209.12103271]
[87.83536530 194.44572449]
[90.93947601 179.77041626]
[92.50000000 164.85182190]
[92.50000000 149.85182190]
[92.50000000 134.85182190]
[78.07430267 128.10983276]
[68.02296448 115.75971222]
[64.35131073 100.26539612]
[67.79187012 84.71812439]
[77.65821838 72.21971893]
[91.98194122 65.26371002]
[84.04003143 51.58026123]
[91.58698273 38.73920441]
[91.36365509 23.74086761]
[91.14032745 8.74252987]
[87.88349915 0.20842917]
[91.02700043 -6.48038197]
[78.64202118 -15.64108753]
[74.07926941 -30.16812134]
[78.88858032 -44.42766190]
[91.02700043 -53.01816940]
[91.02700043 -68.01817322]
[91.02700043 -83.01817322]
[91.02700043 -98.01817322]
[90.80367279 -113.01651001]
[90.35706329 -128.00985718]
[82.21231079 -141.57354736]
[89.56724548 -154.52554321]
[89.12063599 -169.51889038]
[86.37576294 -173.95880127]
[85.67819214 -178.54864502]
[86.74219513 -182.48347473]
[89.00398254 -185.18841553]
[89.22731018 -200.18675232]
[81.69633484 -214.10058594]
[89.62226868 -226.71124268]
[89.84559631 -241.70959473]
[90.06892395 -256.70791626]
[90.29225159 -271.70626831]
[90.51557922 -286.70458984]
[90.73890686 -301.70294189]
[76.18621826 -305.66146851]
[63.07558441 -313.11547852]
[52.23115158 -323.59637451]
[44.33461380 -336.44531250]
[39.88234711 -350.85461426]
[39.15422821 -365.91851807]
[42.19602966 -380.69006348]
[48.81653595 -394.24069214]
[58.59958267 -405.71862793]
[70.93019104 -414.40231323]
[85.03325653 -419.74594116]
[100.02224731 -421.41360474]
[114.95494080 -419.30041504]
[128.89265442 -413.53924561]
[140.95925903 -404.49227905]
[150.39622498 -392.72814941]
[156.61033630 -378.98638916]
[159.21098328 -364.13085938]
[158.03468323 -349.09530640]
[153.15538025 -334.82495117]
[144.87977600 -322.21682739]
[133.72808838 -312.06344604]
[120.40134430 -305.00311279]
[105.73724365 -301.47961426]
[105.51391602 -286.48126221]
[105.29058838 -271.48294067]
[105.06726074 -256.48458862]
[104.84393311 -241.48626709]
[104.62060547 -226.48791504]
[112.16755676 -213.64686584]
[104.22564697 -199.96342468]
[104.00231934 -184.96508789]
[104.11399078 -169.96549988]
[104.56059265 -154.97215271]
[112.67340088 -142.48088074]
[105.35041809 -128.45646667]
[105.79701996 -113.46311188]
[108.59713745 -109.59421539]
[108.99655914 -103.92521667]
[106.02700043 -98.01817322]
[106.02700043 -83.01817322]
[106.02700043 -68.01817322]
[106.02700043 -53.01816940]
[118.16542053 -44.42766190]
[122.97473145 -30.16812134]
[118.41197968 -15.64108753]
[106.02700043 -6.48038197]
[106.13866425 8.51920223]
[106.36199188 23.51753998]
[106.58531952 38.51587677]
[114.51125336 51.12654114]
[106.98027802 65.04038239]
[119.75818634 70.32655334]
[129.56329346 80.07737732]
[134.92033386 92.82574463]
[135.02326965 106.65354919]
[129.85664368 119.48026276]
[120.19779205 129.37599182]
[107.50000000 134.85182190]
[107.50000000 149.85182190]
[107.50000000 164.85182190]
[115.11933136 151.93107605]
[127.05686188 142.84837341]
[141.54171753 138.95108032]
[156.42517090 140.81733704]
[169.49932861 148.17031860]
[178.82475281 159.91921997]
[183.01803589 174.32116699]
[181.45713806 189.23973083]
[174.37362671 202.46183777]
[162.81828308 212.02603149]
[148.50527954 216.51356506]
[133.55786133 215.25869751]
[120.19338989 208.44761658]
[110.39440155 197.09068298]
[105.61477661 182.87452698]
[102.51066589 197.54983521]
[99.40656281 212.22514343]
[96.30245209 226.90043640]
[93.19834137 241.57574463]
[90.09423065 256.25103760]
[87.64849854 271.05032349]
[93.69109344 285.67214966]
[84.49621582 297.38980103]
[82.71375275 312.28350830]
[80.93128204 327.17724609]
[83.01875305 336.06994629]
[79.00980377 342.27880859]
[77.00579071 357.14434814]
[75.00177765 372.00988770]
[72.99776459 386.87539673]
[70.99375153 401.74093628]
[83.17130280 406.83593750]
[93.76112366 414.69927979]
[102.14675140 424.86700439]
[107.84155273 436.74118042]
[110.51692200 449.62506104]
[110.02128601 462.76400757]
[106.38863373 475.38967896]
[99.83625793 486.76492310]
[90.75178528 496.22683716]
[79.67019653 503.22546387]
[67.24238586 507.35565186]
[54.19687271 508.38055420]
[51.53107834 523.14178467]
[48.86528397 537.90301514]
[46.19948959 552.66418457]
[51.36105728 567.61975098]
[41.48503876 578.76934814]
[38.81924438 593.53057861]
[36.15344620 608.29180908]
[37.70791245 617.29296875]
[33.33650970 623.25225830]
[30.45123863 637.97210693]
[27.56596565 652.69201660]
[24.68069267 667.41192627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[18 205]
[19 204]
[20 203]
[22 201]
[23 200]
[24 199]
[25 198]
[34 186]
[35 185]
[36 184]
[37 183]
[38 182]
[39 180]
[40 179]
[41 178]
[43 176]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[55 170]
[56 155]
[57 154]
[58 153]
[64 146]
[66 144]
[67 143]
[68 142]
[70 141]
[74 137]
[75 136]
[76 135]
[77 134]
[78 131]
[79 130]
[81 128]
[82 127]
[86 126]
[87 125]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
