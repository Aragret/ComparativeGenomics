%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[37.72104263 402.92501831]
[40.52866745 417.68762207]
[41.15682602 432.70175171]
[39.59212494 447.64727783]
[35.86791992 462.20571899]
[30.06359291 476.06674194]
[22.30286026 488.93487549]
[12.75114346 500.53585815]
[1.61203897 510.62237549]
[-10.87702370 518.97949219]
[-24.44983864 525.42901611]
[-38.81710052 529.83355713]
[-53.67256927 532.09912109]
[-68.69960022 532.17749023]
[-83.57789612 530.06695557]
[-97.99031830 525.81256104]
[-111.62966919 519.50494385]
[-124.20522308 511.27859497]
[-135.44892883 501.30877686]
[-145.12113953 489.80807495]
[-153.01567078 477.02160645]
[-158.96426392 463.22189331]
[-162.84011841 448.70306396]
[-164.56062317 433.77465820]
[-164.08911133 418.75482178]
[-161.43562317 403.96371460]
[-156.65672302 389.71661377]
[-149.85426331 376.31719971]
[-141.17326355 364.05105591]
[-130.79873657 353.17965698]
[-118.95182037 343.93475342]
[-105.88504028 336.51336670]
[-91.87690735 331.07366943]
[-77.22601318 327.73165894]
[-62.24463272 326.55853271]
[-47.25210571 327.57931519]
[-32.56799316 330.77221680]
[-18.50529099 336.06921387]
[-11.23206043 322.95053101]
[-3.95883107 309.83184814]
[3.31439829 296.71313477]
[10.58762741 283.59445190]
[9.33775234 266.09002686]
[25.20090485 256.73898315]
[25.58510399 249.35832214]
[32.48310471 243.37039185]
[39.75633621 230.25169373]
[46.23583221 216.72335815]
[51.89861679 202.83332825]
[57.56140518 188.94329834]
[63.22418976 175.05326843]
[68.88697815 161.16323853]
[74.34233093 147.19044495]
[79.58905029 133.13796997]
[84.83576965 119.08550262]
[90.08248901 105.03303528]
[76.02191925 110.25800323]
[62.32812119 104.13591003]
[56.84553146 90.17378235]
[62.71482086 76.36974335]
[76.57379913 70.63138580]
[90.48340607 76.24589539]
[96.47557831 89.99607849]
[102.95507050 76.46773529]
[99.41313171 64.06541443]
[105.08842468 52.93101883]
[116.45258331 48.78584671]
[123.13278198 35.35546875]
[129.81297302 21.92509460]
[129.03117371 6.12321568]
[141.62687683 -1.82647586]
[148.30706787 -15.25685215]
[154.98725891 -28.68722725]
[161.46675110 -42.21557236]
[160.21482849 -57.98716736]
[172.56825256 -66.30835724]
[178.84561157 -79.93167114]
[185.12297058 -93.55499268]
[191.40032959 -107.17830658]
[190.14839172 -122.94989777]
[202.50181580 -131.27108765]
[208.77917480 -144.89440918]
[195.70535278 -152.26515198]
[183.27581787 -160.67701721]
[171.57328796 -170.07402039]
[160.67565918 -180.39363098]
[150.65542603 -191.56716919]
[141.57929993 -203.52026367]
[133.50767517 -216.17338562]
[126.49424744 -229.44233704]
[120.58571625 -243.23878479]
[115.82138824 -257.47091675]
[112.23297882 -272.04406738]
[109.84436035 -286.86117554]
[108.67143250 -301.82369995]
[108.72200012 -316.83203125]
[109.99572754 -331.78631592]
[112.48413086 -346.58700562]
[116.17066956 -361.13565063]
[121.03079224 -375.33535767]
[127.03215790 -389.09167480]
[134.13482666 -402.31304932]
[142.29154968 -414.91149902]
[151.44801331 -426.80316162]
[161.54330444 -437.90893555]
[172.51023865 -448.15487671]
[184.27581787 -457.47280884]
[196.76174927 -465.80072021]
[209.88494873 -473.08319092]
[223.55807495 -479.27178955]
[237.69012451 -484.32525635]
[252.18707275 -488.21005249]
[266.95242310 -490.90023804]
[281.88790894 -492.37796021]
[296.89416504 -492.63339233]
[311.87130737 -491.66479492]
[326.71966553 -489.47866821]
[341.34042358 -486.08950806]
[355.63626099 -481.51986694]
[369.51208496 -475.80020142]
[382.87551880 -468.96856689]
[395.63763428 -461.07040405]
[407.71350098 -452.15826416]
[419.02276611 -442.29147339]
[429.49017334 -431.53573608]
[439.04602051 -419.96255493]
[447.62677002 -407.64898682]
[455.17529297 -394.67700195]
[461.64132690 -381.13287354]
[466.98190308 -367.10678101]
[471.16140747 -352.69204712]
[474.15206909 -337.98461914]
[475.93399048 -323.08236694]
[476.49530029 -308.08444214]
[475.83224487 -293.09066772]
[473.94927979 -278.20083618]
[470.85888672 -263.51400757]
[466.58166504 -249.12797546]
[461.14608765 -235.13844299]
[454.58828735 -221.63850403]
[446.95196533 -208.71801758]
[438.28787231 -196.46295166]
[428.65371704 -184.95487976]
[418.11358643 -174.27038574]
[406.73764038 -164.48056030]
[394.60159302 -155.65055847]
[381.78616333 -147.83915710]
[368.37670898 -141.09832764]
[354.46240234 -135.47293091]
[340.13586426 -131.00039673]
[325.49246216 -127.71051025]
[310.62960815 -125.62515259]
[295.64627075 -124.75819397]
[280.64208984 -125.11541748]
[265.71694946 -126.69444275]
[250.97019958 -129.48475647]
[236.49993896 -133.46778870]
[222.40249634 -138.61705017]
[216.12513733 -124.99372864]
[217.82606506 -110.19656372]
[205.02365112 -100.90094757]
[198.74627686 -87.27762604]
[192.46891785 -73.65431213]
[186.19155884 -60.03099823]
[187.89250183 -45.23383331]
[175.09007263 -35.93821335]
[175.87417603 -31.22713852]
[173.70713806 -25.97347641]
[168.41763306 -22.00703239]
[161.73744202 -8.57665730]
[155.05725098 4.85371876]
[156.31686401 19.69496727]
[143.24334717 28.60528946]
[136.56315613 42.03566360]
[129.88296509 55.46604156]
[131.91320801 72.89719391]
[116.48341370 82.94722748]
[110.00392151 96.47557831]
[104.13495636 110.27975464]
[98.88824463 124.33222198]
[93.64152527 138.38468933]
[88.39480591 152.43716431]
[89.11061096 159.00976562]
[86.75350952 164.18095398]
[82.77700043 166.82603455]
[77.11421967 180.71606445]
[71.45143127 194.60607910]
[65.78864288 208.49610901]
[60.12585831 222.38613892]
[73.53267670 215.65879822]
[88.35156250 217.98272705]
[99.05543518 228.49114990]
[101.65201569 243.26470947]
[95.17284393 256.79321289]
[82.03448486 264.03085327]
[67.13722992 262.27819824]
[56.03738403 252.18893433]
[52.87503052 237.52493286]
[45.60179901 250.64361572]
[38.42643356 263.81610107]
[41.41104889 276.36419678]
[35.24423599 287.23406982]
[23.70632172 290.86767578]
[16.43309212 303.98635864]
[9.15986252 317.10507202]
[1.88663340 330.22375488]
[-5.38659620 343.34246826]
[6.55610418 352.46328735]
[17.04346466 363.22589111]
[25.85194397 375.40078735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 207]
[39 206]
[40 205]
[41 204]
[42 203]
[44 200]
[46 199]
[47 198]
[48 189]
[49 188]
[50 187]
[51 186]
[52 185]
[53 182]
[54 181]
[55 180]
[56 179]
[63 178]
[64 177]
[67 175]
[68 174]
[69 173]
[71 171]
[72 170]
[73 169]
[74 166]
[76 164]
[77 163]
[78 162]
[79 161]
[81 159]
[82 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
