%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[126.02316284 631.40362549]
[115.71470642 620.49078369]
[106.50762939 608.63391113]
[98.48789978 595.94378662]
[91.73040009 582.53881836]
[86.29823303 568.54431152]
[82.24210358 554.09082031]
[79.59988403 539.31335449]
[78.39625549 524.34979248]
[78.64245605 509.33999634]
[80.33617401 494.42401123]
[83.46160889 479.74111938]
[87.98957062 465.42840576]
[93.87778473 451.61956787]
[101.07127380 438.44348145]
[109.50286865 426.02319336]
[119.09384918 414.47463989]
[129.75465393 403.90570068]
[141.38577271 394.41503906]
[153.87857056 386.09124756]
[167.11640930 379.01205444]
[180.97570801 373.24356079]
[176.57470703 358.90371704]
[172.17370605 344.56387329]
[167.77272034 330.22402954]
[152.82197571 330.03311157]
[138.64305115 325.22390747]
[126.62857819 316.25549316]
[117.96269226 303.99609375]
[113.50434113 289.63900757]
[113.70217133 274.58657837]
[118.54939270 260.31307983]
[127.58320618 248.22039795]
[139.92900085 239.50036621]
[135.52799988 225.16052246]
[130.80786133 210.92253113]
[125.77095032 196.79350281]
[120.62899017 182.70236206]
[115.38227081 168.64988708]
[110.13555145 154.59741211]
[107.09679413 152.80903625]
[104.77326965 149.45996094]
[103.88909912 144.90238953]
[104.98369598 139.79856873]
[100.36968994 125.52583313]
[95.75567627 111.25310516]
[90.92967987 97.05064392]
[85.89276123 82.92161560]
[80.85585022 68.79258728]
[68.93379211 58.39186096]
[71.94808197 43.80545044]
[66.91116333 29.67642212]
[62.13047409 25.10952568]
[60.60308838 19.63557625]
[61.94146347 15.05105877]
[57.32745361 0.77832574]
[52.71344376 -13.49440765]
[50.51544189 1.34367788]
[44.87594223 15.24317646]
[36.11388779 27.41800308]
[24.72481537 37.17961121]
[11.35283089 43.97594070]
[-3.24581313 47.42261887]
[-18.24549294 47.32472229]
[-32.79790497 43.68778610]
[-46.08003998 36.71749878]
[-57.34072876 26.80806351]
[-65.94312286 14.51990604]
[-71.40071869 0.54798168]
[-73.40485382 -14.31752968]
[-71.84220123 -29.23591042]
[-66.80111694 -43.36345673]
[-58.56671524 -55.90118408]
[-47.60468292 -66.14002228]
[-34.53497696 -73.50091553]
[-20.09675598 -77.56758118]
[-5.10656643 -78.11000824]
[9.58782101 -75.09754181]
[23.15536690 -68.70053101]
[34.82876205 -59.28077698]
[43.94781876 -47.37099838]
[49.99712372 -33.64373016]
[50.66690826 -48.62876892]
[51.33669662 -63.61380768]
[52.00648117 -78.59884644]
[52.67626572 -93.58388519]
[52.89959335 -108.58222198]
[52.67626572 -123.58055878]
[52.45293808 -138.57890320]
[52.22961044 -153.57723999]
[38.14194870 -166.24420166]
[37.79272461 -184.86653137]
[50.93699265 -197.60795593]
[50.26720810 -212.59298706]
[49.59742355 -227.57803345]
[35.06468201 -231.82987976]
[22.70137787 -240.57215881]
[13.84858799 -252.85656738]
[9.46659851 -267.35061646]
[10.03073215 -282.48205566]
[15.47979832 -296.60955811]
[25.22272110 -308.20068359]
[38.20266342 -315.99810791]
[53.01165390 -319.15600586]
[68.04332733 -317.33187866]
[81.66716766 -310.72357178]
[92.40534210 -300.04788208]
[99.09307861 -286.46286011]
[101.00492096 -271.44207764]
[97.93350220 -256.61489868]
[90.21197510 -243.58967590]
[78.67791748 -233.77925110]
[64.58245850 -228.24781799]
[65.25224304 -213.26278687]
[65.92202759 -198.27774048]
[75.81021118 -192.58651733]
[81.78502655 -182.72662354]
[82.26320648 -171.08767700]
[77.01036835 -160.55636597]
[67.22794342 -153.80056763]
[67.45127106 -138.80223083]
[67.67459869 -123.80388641]
[67.89793396 -108.80554962]
[69.81314850 -106.75858307]
[71.03293610 -103.82963562]
[71.21729279 -100.27978516]
[70.12693024 -96.48826599]
[67.66130066 -92.91410065]
[66.99151611 -77.92906189]
[66.32173157 -62.94402313]
[65.65194702 -47.95898438]
[64.98216248 -32.97394562]
[66.98617554 -18.10841751]
[71.60018921 -3.83568358]
[76.21419525 10.43704987]
[81.04019165 24.63950539]
[86.07711029 38.76853561]
[97.63889313 48.15866089]
[94.98487854 63.75567245]
[100.02178955 77.88469696]
[105.05870819 92.01373291]
[109.16584778 95.27645111]
[111.15258789 100.60807800]
[110.02841187 106.63909149]
[114.64241791 120.91182709]
[119.25643158 135.18455505]
[124.18802643 149.35069275]
[129.43473816 163.40316772]
[134.68145752 177.45564270]
[140.61488342 184.40058899]
[139.89997864 191.75657654]
[144.93688965 205.88560486]
[148.91439819 209.26593018]
[150.98999023 213.41865540]
[151.18794250 217.49000549]
[149.86784363 220.75952148]
[154.26884460 235.09936523]
[169.38081360 235.39242554]
[183.64299011 240.33538818]
[195.66273499 249.43229675]
[204.27055359 261.78222656]
[208.63374329 276.16851807]
[208.33705139 291.17861938]
[203.42211914 305.34277344]
[194.38218689 317.27801514]
[182.11256409 325.82302856]
[186.51356506 340.16287231]
[190.91455078 354.50271606]
[195.31555176 368.84255981]
[210.02471924 365.84320068]
[224.95468140 364.27749634]
[239.96606445 364.16006470]
[254.91871643 365.49200439]
[269.67300415 368.26086426]
[284.09115601 372.44082642]
[298.03857422 377.99285889]
[311.38504028 384.86508179]
[324.00592041 392.99337769]
[335.78335571 402.30181885]
[346.60742188 412.70352173]
[356.37704468 424.10131836]
[365.00097656 436.38885498]
[372.39871216 449.45135498]
[378.50122070 463.16687012]
[383.25146484 477.40731812]
[386.60510254 492.03976440]
[388.53082275 506.92758179]
[389.01068115 521.93176270]
[388.04016113 536.91217041]
[385.62832642 551.72900391]
[381.79772949 566.24389648]
[376.58407593 580.32135010]
[370.03610229 593.82983398]
[362.21490479 606.64324951]
[353.19354248 618.64202881]
[343.05621338 629.71411133]
[331.89761353 639.75604248]
[319.82189941 648.67419434]
[306.94183350 656.38513184]
[293.37768555 662.81701660]
[279.25604248 667.90972900]
[264.70883179 671.61566162]
[249.87187195 673.90032959]
[234.88365173 674.74230957]
[219.88414001 674.13378906]
[205.01339722 672.08038330]
[190.41024780 668.60137939]
[176.21105957 663.72912598]
[162.54840088 657.50921631]
[149.54985046 649.99969482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 169]
[23 168]
[24 167]
[25 166]
[34 157]
[35 156]
[36 152]
[37 151]
[38 149]
[39 148]
[40 147]
[44 146]
[45 145]
[46 144]
[47 141]
[48 140]
[49 139]
[51 137]
[52 136]
[55 135]
[56 134]
[57 133]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 123]
[88 122]
[89 121]
[90 120]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
