%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[77.83026123 906.66406250]
[62.84863663 905.86859131]
[47.92024994 904.37689209]
[33.07743073 902.19226074]
[18.35232353 899.31945801]
[3.77681947 895.76470947]
[-10.61751175 891.53564453]
[-24.79949760 886.64141846]
[-38.73841858 881.09271240]
[-52.40409088 874.90148926]
[-65.76691437 868.08117676]
[-78.79795837 860.64654541]
[-91.46897888 852.61364746]
[-103.75255585 844.00000000]
[-115.62207031 834.82409668]
[-127.05182648 825.10595703]
[-138.01705933 814.86657715]
[-148.49403381 804.12805176]
[-158.46003723 792.91375732]
[-167.89350891 781.24792480]
[-176.77400208 769.15588379]
[-185.08229065 756.66369629]
[-192.80038452 743.79852295]
[-199.91156006 730.58819580]
[-206.40042114 717.06127930]
[-212.25291443 703.24719238]
[-217.45635986 689.17572021]
[-221.99949646 674.87738037]
[-225.87246704 660.38317871]
[-229.06689453 645.72448730]
[-231.57588196 630.93304443]
[-233.39395142 616.04089355]
[-234.51719666 601.08026123]
[-234.94319153 586.08361816]
[-234.67097473 571.08337402]
[-233.70117188 556.11199951]
[-232.03587341 541.20196533]
[-229.67868042 526.38555908]
[-226.63470459 511.69491577]
[-222.91053772 497.16177368]
[-218.51423645 482.81762695]
[-213.45533752 468.69354248]
[-207.74478149 454.82012939]
[-201.39495850 441.22744751]
[-194.41958618 427.94488525]
[-186.83380127 415.00125122]
[-178.65402222 402.42456055]
[-169.89796448 390.24206543]
[-160.58460999 378.48013306]
[-150.73408508 367.16424561]
[-140.36776733 356.31893921]
[-129.50808716 345.96765137]
[-118.17858124 336.13281250]
[-106.40376282 326.83572388]
[-94.20914459 318.09655762]
[-81.62114716 309.93420410]
[-68.66701508 302.36636353]
[-55.37482071 295.40939331]
[-41.77334213 289.07839966]
[-27.89204025 283.38705444]
[-13.76097775 278.34771729]
[0.58923787 273.97128296]
[15.12752914 270.26724243]
[29.82240868 267.24362183]
[44.64205170 264.90695190]
[59.55435944 263.26229858]
[74.52703857 262.31323242]
[89.52765656 262.06179810]
[89.97426605 247.06845093]
[90.42086792 232.07510376]
[90.75584412 217.07884216]
[90.97917175 202.08050537]
[91.20249939 187.08216858]
[91.42582703 172.08383179]
[91.64915466 157.08549500]
[91.87248230 142.08715820]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[93.35250854 42.69117737]
[93.57583618 27.69284058]
[93.79916382 12.69450283]
[94.02249146 -2.30383492]
[94.24581909 -17.30217171]
[91.24452209 -25.92945671]
[94.58577728 -32.52170944]
[95.03238678 -47.51506042]
[95.47899628 -62.50841141]
[84.92074585 -73.96096802]
[85.58724976 -89.15999603]
[96.57058716 -99.15509796]
[97.01718903 -114.14844513]
[82.56250000 -118.47560120]
[69.72080231 -126.39729309]
[59.36766052 -137.37339783]
[52.20897675 -150.65556335]
[48.73284149 -165.33816528]
[49.17625809 -180.42013550]
[53.50899506 -194.87315369]
[61.43564224 -207.71179199]
[72.41574860 -218.06068420]
[85.70066833 -225.21424866]
[100.38461304 -228.68470764]
[115.46640778 -228.23547363]
[129.91775513 -223.89715576]
[142.75332642 -215.96554565]
[153.09799194 -204.98144531]
[160.24641418 -191.69377136]
[163.71121216 -177.00848389]
[163.25614929 -161.92686462]
[158.91224670 -147.47718811]
[150.97569275 -134.64468384]
[139.98759460 -124.30426025]
[126.69715881 -117.16096497]
[112.01054382 -113.70183563]
[111.56393433 -98.70848846]
[121.93287659 -88.07736969]
[121.69354248 -72.86562347]
[110.47234344 -62.06180573]
[110.02573395 -47.06845474]
[109.57913208 -32.07510376]
[109.24415588 -17.07884407]
[109.02082825 -2.08050728]
[108.79750061 12.91783047]
[108.57417297 27.91616821]
[108.35084534 42.91450500]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[106.87081909 142.31048584]
[106.64749146 157.30882263]
[106.42416382 172.30715942]
[106.20083618 187.30549622]
[105.97750854 202.30383301]
[105.75418091 217.30216980]
[108.75547791 225.92945862]
[105.41422272 232.52171326]
[104.96761322 247.51506042]
[104.52100372 262.50842285]
[119.48006439 263.65225220]
[134.36970520 265.49081421]
[149.15768433 268.02014160]
[163.81198120 271.23477173]
[178.30082703 275.12768555]
[192.59288025 279.69049072]
[206.65716553 284.91329956]
[220.46322632 290.78479004]
[233.98115540 297.29226685]
[247.18170166 304.42163086]
[260.03625488 312.15740967]
[272.51696777 320.48291016]
[284.59680176 329.38003540]
[296.24963379 338.82955933]
[307.45019531 348.81097412]
[318.17425537 359.30273438]
[328.39855957 370.28204346]
[338.10098267 381.72515869]
[347.26049805 393.60729980]
[355.85726929 405.90270996]
[363.87268066 418.58477783]
[371.28936768 431.62603760]
[378.09127808 444.99822998]
[384.26370239 458.67242432]
[389.79321289 472.61895752]
[394.66787720 486.80767822]
[398.87713623 501.20782471]
[402.41186523 515.78820801]
[405.26440430 530.51727295]
[407.42858887 545.36303711]
[408.89971924 560.29345703]
[409.67459106 575.27618408]
[409.75155640 590.27868652]
[409.13046265 605.26855469]
[407.81262207 620.21331787]
[405.80087280 635.08056641]
[403.09963989 649.83807373]
[399.71469116 664.45397949]
[395.65344238 678.89654541]
[390.92462158 693.13452148]
[385.53848267 707.13708496]
[379.50671387 720.87390137]
[372.84237671 734.31518555]
[365.55987549 747.43182373]
[357.67501831 760.19549561]
[349.20486450 772.57849121]
[340.16775513 784.55395508]
[330.58328247 796.09606934]
[320.47216797 807.17968750]
[309.85632324 817.78094482]
[298.75878906 827.87677002]
[287.20352173 837.44537354]
[275.21560669 846.46600342]
[262.82095337 854.91906738]
[250.04647827 862.78637695]
[236.91978455 870.05078125]
[223.46934509 876.69665527]
[209.72425842 882.70947266]
[195.71429443 888.07635498]
[181.46981812 892.78558350]
[167.02168274 896.82696533]
[152.40115356 900.19177246]
[137.63990784 902.87268066]
[122.76990509 904.86395264]
[107.82337189 906.16125488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 145]
[69 144]
[70 143]
[71 141]
[72 140]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[80 132]
[81 131]
[82 130]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[89 124]
[90 123]
[91 122]
[94 119]
[95 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
