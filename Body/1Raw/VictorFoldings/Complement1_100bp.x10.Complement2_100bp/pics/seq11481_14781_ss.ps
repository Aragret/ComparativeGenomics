%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[124.59155273 932.74957275]
[109.65803528 931.31860352]
[94.79172516 929.30609131]
[80.01525879 926.71502686]
[65.35112762 923.54949951]
[50.82167053 919.81420898]
[36.44901657 915.51489258]
[22.25504684 910.65802002]
[8.26138020 905.25109863]
[-5.51067495 899.30236816]
[-19.04014587 892.82073975]
[-32.30642700 885.81628418]
[-45.28932190 878.29949951]
[-57.96905518 870.28186035]
[-70.32631683 861.77569580]
[-82.34228516 852.79382324]
[-93.99867249 843.34997559]
[-105.27772522 833.45855713]
[-116.16226196 823.13458252]
[-126.63571167 812.39379883]
[-136.68211365 801.25256348]
[-146.28619385 789.72784424]
[-155.43330383 777.83715820]
[-164.10951233 765.59869385]
[-172.30162048 753.03100586]
[-179.99716187 740.15325928]
[-187.18438721 726.98504639]
[-193.85237122 713.54644775]
[-199.99096680 699.85797119]
[-205.59080505 685.94036865]
[-210.64338684 671.81494141]
[-215.14097595 657.50305176]
[-219.07676697 643.02661133]
[-222.44473267 628.40765381]
[-225.23977661 613.66839600]
[-227.45761108 598.83135986]
[-229.09487915 583.91906738]
[-230.14906311 568.95422363]
[-230.61859131 553.95965576]
[-230.50273132 538.95819092]
[-229.80165100 523.97265625]
[-228.51643372 509.02590942]
[-226.64903259 494.14065552]
[-224.20228577 479.33963013]
[-221.17993164 464.64529419]
[-217.58654785 450.08010864]
[-213.42762756 435.66619873]
[-208.70950317 421.42550659]
[-203.43936157 407.37976074]
[-197.62521362 393.55035400]
[-191.27592468 379.95828247]
[-184.40115356 366.62429810]
[-177.01138306 353.56869507]
[-169.11785889 340.81137085]
[-160.73260498 328.37170410]
[-151.86839294 316.26867676]
[-142.53871155 304.52072144]
[-132.75776672 293.14572144]
[-122.54047394 282.16098022]
[-111.90237427 271.58328247]
[-100.85967255 261.42864990]
[-89.42918396 251.71261597]
[-77.62831879 242.44995117]
[-65.47504425 233.65475464]
[-52.98786926 225.34043884]
[-40.18581009 217.51963806]
[-27.08836174 210.20429993]
[-13.71546936 203.40553284]
[-0.08749787 197.13369751]
[13.77479935 191.39836121]
[27.85031319 186.20823669]
[42.11760712 181.57122803]
[56.55495453 177.49441528]
[71.14037323 173.98399353]
[85.85164642 171.04530334]
[100.66637421 168.68284607]
[98.88391113 153.78912354]
[97.10144806 138.89540100]
[95.31897736 124.00168610]
[93.53651428 109.10797119]
[91.64321899 94.22793579]
[79.35894012 84.65013885]
[77.53835297 69.54582977]
[86.74501801 57.89367294]
[84.74100494 43.02814484]
[82.73699188 28.16261482]
[80.73297882 13.29708672]
[78.72896576 -1.56844115]
[76.72495270 -16.43396950]
[61.74605179 -18.18995285]
[47.67473984 -23.61663818]
[35.39553833 -32.37289810]
[25.68033600 -43.90830612]
[19.13983727 -57.49773788]
[16.18518066 -72.28694916]
[17.00209999 -87.34628296]
[21.53924370 -101.72908783]
[29.51140404 -114.53125763]
[40.41744232 -124.94802856]
[53.57179260 -132.32460022]
[68.14756775 -136.19728088]
[83.22852325 -136.32261658]
[97.86664581 -132.69273376]
[111.14178467 -125.53580475]
[122.21944427 -115.30173492]
[130.40327454 -102.63383484]
[135.17884827 -88.32842255]
[136.24594116 -73.28475189]
[133.53750610 -58.44847107]
[127.22376251 -44.75220871]
[117.70162964 -33.05692291]
[105.56965637 -24.09778786]
[91.59047699 -18.43798256]
[93.59449005 -3.57245469]
[95.59850311 11.29307365]
[97.60251617 26.15860176]
[99.60652924 41.02412796]
[101.61054993 55.88965988]
[113.57411957 64.68786621]
[115.81823730 79.73508453]
[106.50875092 92.22392273]
[110.62101746 99.15657806]
[108.43022919 107.32550812]
[110.21269226 122.21922302]
[111.99516296 137.11294556]
[113.77762604 152.00665283]
[115.56009674 166.90037537]
[130.51391602 165.70016479]
[145.50318909 165.08432007]
[160.50508118 165.05375671]
[175.49673462 165.60853577]
[190.45532227 166.74781799]
[205.35807800 168.46984863]
[220.18229675 170.77201843]
[234.90541077 173.65081787]
[249.50498962 177.10186768]
[263.95880127 181.11990356]
[278.24484253 185.69882202]
[292.34136963 190.83163452]
[306.22686768 196.51052856]
[319.88024902 202.72685242]
[333.28070068 209.47114563]
[346.40780640 216.73313904]
[359.24157715 224.50177002]
[371.76248169 232.76521301]
[383.95144653 241.51089478]
[395.78988647 250.72546387]
[407.25982666 260.39492798]
[418.34375000 270.50451660]
[429.02481079 281.03887939]
[439.28671265 291.98193359]
[449.11386108 303.31704712]
[458.49124146 315.02694702]
[467.40463257 327.09381104]
[475.84045410 339.49923706]
[483.78579712 352.22433472]
[491.22863770 365.24978638]
[498.15759277 378.55566406]
[504.56213379 392.12179565]
[510.43252563 405.92742920]
[515.75976562 419.95162964]
[520.53582764 434.17297363]
[524.75335693 448.56985474]
[528.40594482 463.12033081]
[531.48809814 477.80221558]
[533.99499512 492.59317017]
[535.92297363 507.47070312]
[537.26898193 522.41210938]
[538.03106689 537.39465332]
[538.20794678 552.39550781]
[537.79943848 567.39184570]
[536.80615234 582.36083984]
[535.22955322 597.27972412]
[533.07208252 612.12567139]
[530.33709717 626.87615967]
[527.02862549 641.50872803]
[523.15173340 656.00103760]
[518.71240234 670.33105469]
[513.71740723 684.47698975]
[508.17422485 698.41723633]
[502.09136963 712.13061523]
[495.47811890 725.59619141]
[488.34451294 738.79351807]
[480.70144653 751.70251465]
[472.56054688 764.30340576]
[463.93420410 776.57708740]
[454.83554077 788.50488281]
[445.27844238 800.06860352]
[435.27746582 811.25061035]
[424.84777832 822.03393555]
[414.00534058 832.40209961]
[402.76663208 842.33935547]
[391.14877319 851.83050537]
[379.16946411 860.86120605]
[366.84689331 869.41760254]
[354.19989014 877.48675537]
[341.24771118 885.05627441]
[328.01004028 892.11474609]
[314.50704956 898.65130615]
[300.75930786 904.65606689]
[286.78775024 910.11987305]
[272.61364746 915.03442383]
[258.25860596 919.39215088]
[243.74447632 923.18652344]
[229.09335327 926.41174316]
[214.32754517 929.06286621]
[199.46954346 931.13586426]
[184.54197693 932.62756348]
[169.56758118 933.53576660]
[154.56915283 933.85894775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
[81 121]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
