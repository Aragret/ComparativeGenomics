%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[202.79687500 466.78384399]
[198.89187622 452.29357910]
[196.09394836 437.54943848]
[194.41912842 422.63595581]
[193.87698364 407.63851929]
[194.47064209 392.64300537]
[196.19670105 377.73535156]
[199.04527283 363.00094604]
[203.00003052 348.52416992]
[208.03833008 334.38793945]
[214.13131714 320.67321777]
[221.24407959 307.45861816]
[229.33589172 294.81979370]
[238.36038208 282.82913208]
[248.26586914 271.55532837]
[237.77836609 260.83093262]
[227.29086304 250.10656738]
[216.80337524 239.38218689]
[206.31587219 228.65780640]
[195.82836914 217.93342590]
[192.32571411 217.52868652]
[188.84509277 215.40730286]
[186.19117737 211.59809875]
[185.12538147 206.48818970]
[175.12721252 195.30621338]
[165.12904358 184.12423706]
[150.87785339 179.79376221]
[147.44731140 164.34895325]
[137.44912720 153.16699219]
[127.45096588 141.98501587]
[117.45278931 130.80303955]
[103.20160675 126.47255707]
[99.77105713 111.02775574]
[96.34028625 125.63014221]
[82.85072327 132.19000244]
[69.24637604 125.87164307]
[65.55586243 111.33272552]
[74.49968719 99.29080200]
[89.48328400 98.62208557]
[80.34448242 86.72745514]
[65.80118561 80.49822998]
[64.18254089 65.69184113]
[55.04373932 53.79720306]
[45.90493774 41.90257263]
[36.76613617 30.00793839]
[21.36395836 30.28931427]
[8.89516354 21.54960442]
[4.02115345 7.31204748]
[8.41282463 -6.89538765]
[-0.72597730 -18.79001999]
[-9.86477947 -30.68465424]
[-24.40807343 -36.91387558]
[-26.02671814 -51.72026825]
[-35.16551971 -63.61489868]
[-44.30432129 -75.50953674]
[-57.12963104 -67.70192719]
[-70.72391510 -61.32677078]
[-84.92779541 -56.45881653]
[-99.57473755 -53.15513229]
[-114.49301147 -51.45445633]
[-129.50772095 -51.37672806]
[-144.44279480 -52.92285538]
[-159.12315369 -56.07471466]
[-173.37667847 -60.79534912]
[-187.03623962 -67.02941132]
[-199.94169617 -74.70381927]
[-211.94174194 -83.72857666]
[-222.89566040 -93.99789429]
[-232.67504883 -105.39134979]
[-241.16522217 -117.77537537]
[-248.26667786 -131.00476074]
[-253.89610291 -144.92440796]
[-257.98754883 -159.37112427]
[-260.49301147 -174.17550659]
[-261.38308716 -189.16400146]
[-260.64743042 -204.16087341]
[-258.29458618 -218.99028015]
[-254.35215759 -233.47836304]
[-248.86639404 -247.45526123]
[-241.90158081 -260.75708008]
[-233.53939819 -273.22790527]
[-223.87788391 -284.72146606]
[-213.03030396 -295.10305786]
[-201.12385559 -304.25094604]
[-188.29814148 -312.05786133]
[-174.70350647 -318.43228149]
[-160.49935913 -323.29946899]
[-145.85223389 -326.60238647]
[-130.93386841 -328.30224609]
[-115.91917419 -328.37918091]
[-100.98416901 -326.83224487]
[-86.30397797 -323.67959595]
[-72.05071259 -318.95819092]
[-58.39148331 -312.72338867]
[-45.48644257 -305.04827881]
[-33.48688889 -296.02288818]
[-22.53351784 -285.75299072]
[-12.75474644 -274.35900879]
[-4.26522923 -261.97451782]
[2.83550024 -248.74475098]
[8.46418858 -234.82479858]
[12.55484390 -220.37786865]
[15.05950356 -205.57333374]
[15.94880199 -190.58479309]
[15.21231365 -175.58796692]
[12.85867310 -160.75868225]
[8.91547489 -146.27081299]
[3.42895174 -132.29421997]
[-3.53657007 -118.99275970]
[-11.89942265 -106.52239990]
[-21.56155777 -95.02934265]
[-32.40969086 -84.64833832]
[-23.27088737 -72.75370026]
[-14.13208485 -60.85906982]
[-0.24246013 -55.48063278]
[2.02985334 -39.82345581]
[11.16865540 -27.92882347]
[20.30745888 -16.03419113]
[35.16672134 -16.61750221]
[47.66806412 -8.24012280]
[52.90055847 6.05933046]
[48.66076660 20.86913681]
[57.79956818 32.76377106]
[66.93836975 44.65840149]
[76.07717133 56.55303574]
[89.96679688 61.93147278]
[92.23911285 77.58864594]
[101.37791443 89.48328400]
[110.95303345 101.02958679]
[125.91935730 106.15987396]
[128.63476562 120.80486298]
[138.63293457 131.98683167]
[148.63110352 143.16880798]
[158.62928772 154.35078430]
[173.59559631 159.48107910]
[176.31100464 174.12606812]
[186.30918884 185.30804443]
[196.30735779 196.49002075]
[206.55274963 207.44592285]
[217.04025269 218.17030334]
[227.52775574 228.89468384]
[238.01524353 239.61906433]
[248.50274658 250.34344482]
[258.99026489 261.06784058]
[270.48245239 251.41656494]
[282.67166138 242.66209412]
[295.48803711 234.85455322]
[308.85818481 228.03866577]
[322.70553589 222.25347900]
[336.95074463 217.53211975]
[351.51223755 213.90164185]
[366.30661011 211.38282776]
[381.24908447 209.99011230]
[396.25408936 209.73147583]
[411.23568726 210.60839844]
[426.10806274 212.61585999]
[440.78604126 215.74234009]
[455.18548584 219.96997070]
[469.22399902 225.27450562]
[482.82110596 231.62556458]
[495.89895630 238.98677063]
[508.38259888 247.31596375]
[520.20056152 256.56542969]
[531.28521729 266.68218994]
[541.57293701 277.60830688]
[551.00488281 289.28115845]
[559.52697754 301.63394165]
[567.09045410 314.59585571]
[573.65197754 328.09265137]
[579.17395020 342.04705811]
[583.62475586 356.37908936]
[586.97894287 371.00671387]
[589.21716309 385.84609985]
[590.32672119 400.81228638]
[590.30120850 415.81951904]
[589.14080811 430.78182983]
[586.85211182 445.61352539]
[583.44830322 460.22964478]
[578.94879150 474.54647827]
[573.37939453 488.48202515]
[566.77203369 501.95645142]
[559.16455078 514.89257812]
[550.60052490 527.21630859]
[541.12890625 538.85705566]
[530.80413818 549.74810791]
[519.68518066 559.82714844]
[507.83581543 569.03637695]
[495.32391357 577.32312012]
[482.22113037 584.63983154]
[468.60250854 590.94464111]
[454.54608154 596.20141602]
[440.13232422 600.38006592]
[425.44381714 603.45666504]
[410.56469727 605.41357422]
[395.58020020 606.23956299]
[380.57617188 605.92993164]
[365.63848877 604.48638916]
[350.85278320 601.91729736]
[336.30371094 598.23736572]
[322.07464600 593.46759033]
[308.24703979 587.63537598]
[294.90011597 580.77410889]
[282.11035156 572.92303467]
[269.95098877 564.12719727]
[258.49166870 554.43688965]
[247.79801941 543.90771484]
[237.93132019 532.59997559]
[228.94807434 520.57836914]
[220.89973450 507.91183472]
[213.83241272 494.67285156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 144]
[16 143]
[17 142]
[18 141]
[19 140]
[20 139]
[24 138]
[25 137]
[26 136]
[28 134]
[29 133]
[30 132]
[31 131]
[33 129]
[39 128]
[40 127]
[42 125]
[43 124]
[44 123]
[45 122]
[49 118]
[50 117]
[51 116]
[53 114]
[54 113]
[55 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
