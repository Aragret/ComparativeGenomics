%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[58.88800049 224.95547485]
[60.29052353 239.89892578]
[60.42069244 254.90748596]
[59.27756500 269.87301636]
[56.86938095 284.68768311]
[53.21348953 299.24475098]
[48.33623505 313.43933105]
[42.27275467 327.16915894]
[35.06673813 340.33529663]
[26.77010727 352.84289551]
[17.44264030 364.60180664]
[7.15153980 375.52734375]
[-4.02904272 385.54074097]
[-16.01854897 394.56988525]
[-28.73059464 402.54974365]
[-42.07358932 409.42276001]
[-55.95138931 415.13943481]
[-70.26400757 419.65859985]
[-84.90831757 422.94766235]
[-99.77880859 424.98297119]
[-114.76832581 425.74981689]
[-129.76889038 425.24267578]
[-144.67239380 423.46524048]
[-159.37145996 420.43026733]
[-173.76020813 416.15966797]
[-187.73492432 410.68417358]
[-201.19494629 404.04327393]
[-214.04328918 396.28479004]
[-226.18737793 387.46463013]
[-237.53970337 377.64636230]
[-248.01846313 366.90069580]
[-257.54818726 355.30508423]
[-266.06018066 342.94305420]
[-273.49313354 329.90368652]
[-279.79348755 316.28094482]
[-284.91586304 302.17297363]
[-288.82330322 287.68139648]
[-291.48770142 272.91064453]
[-292.88983154 257.96716309]
[-293.01962280 242.95858765]
[-291.87609863 227.99308777]
[-289.46752930 213.17848206]
[-285.81127930 198.62150574]
[-280.93365479 184.42704773]
[-274.86981201 170.69737244]
[-267.66345215 157.53143311]
[-259.36651611 145.02404785]
[-250.03872681 133.26538086]
[-239.74734497 122.34011841]
[-228.56651306 112.32699585]
[-216.57676697 103.29814911]
[-203.86451721 95.31864929]
[-190.52134705 88.44597626]
[-176.64340210 82.72964478]
[-162.33067322 78.21085358]
[-147.68626404 74.92215729]
[-132.81573486 72.88725281]
[-117.82618713 72.12079620]
[-102.82564545 72.62831116]
[-87.92218018 74.40614319]
[-73.22318268 77.44149017]
[-58.83456039 81.71246338]
[-44.85997391 87.18830872]
[-31.40012360 93.82955933]
[-18.55198479 101.58837128]
[-6.40813112 110.40884399]
[4.94394016 120.22740936]
[15.42243481 130.97334290]
[24.95185280 142.56919861]
[37.30636215 134.06237793]
[49.66087341 125.55554962]
[55.75549316 111.96493530]
[71.50977325 110.51125336]
[83.86428070 102.00443268]
[86.66304779 90.69920349]
[96.30442047 84.16580200]
[107.84182739 85.75623322]
[120.32161713 77.43429565]
[132.80140686 69.11235046]
[129.91961670 54.21366119]
[132.95329285 39.38666153]
[141.40963745 26.88451385]
[153.97427368 18.59489632]
[168.71536255 15.75502682]
[183.38073730 18.76707649]
[195.74186707 27.14155388]
[208.22164917 18.81961060]
[211.33570862 1.60560572]
[225.65409851 -7.84419966]
[242.04750061 -4.08986282]
[254.40200806 -12.59669018]
[266.75653076 -21.10351753]
[279.11102295 -29.61034393]
[291.46554565 -38.11717224]
[303.82003784 -46.62399673]
[296.22332764 -59.56570053]
[289.58026123 -73.02183533]
[283.92550659 -86.92224121]
[279.28848267 -101.19444275]
[275.69342041 -115.76404572]
[273.15902710 -130.55508423]
[271.69854736 -145.49043274]
[271.31961060 -160.49223328]
[272.02410889 -175.48228455]
[273.80847168 -190.38241577]
[276.66333008 -205.11494446]
[280.57379150 -219.60307312]
[285.51953125 -233.77125549]
[291.47473145 -247.54563904]
[298.40832520 -260.85440063]
[306.28417969 -273.62814331]
[315.06121826 -285.80029297]
[324.69372559 -297.30737305]
[335.13143921 -308.08938599]
[346.31994629 -318.09011841]
[358.20092773 -327.25747681]
[370.71243286 -335.54357910]
[383.78924561 -342.90530396]
[397.36315918 -349.30422974]
[411.36343384 -354.70703125]
[425.71707153 -359.08547974]
[440.34924316 -362.41680908]
[455.18362427 -364.68362427]
[470.14291382 -365.87408447]
[485.14910889 -365.98202515]
[500.12399292 -365.00686646]
[514.98944092 -362.95367432]
[529.66802979 -359.83319092]
[544.08319092 -355.66165161]
[558.15972900 -350.46084595]
[571.82427979 -344.25781250]
[585.00561523 -337.08496094]
[597.63500977 -328.97967529]
[609.64666748 -319.98419189]
[620.97790527 -310.14544678]
[631.56964111 -299.51467896]
[641.36663818 -288.14736938]
[650.31787109 -276.10272217]
[658.37664795 -263.44360352]
[665.50097656 -250.23596191]
[671.65368652 -236.54867554]
[676.80273438 -222.45309448]
[680.92120361 -208.02272034]
[683.98773193 -193.33277893]
[685.98620605 -178.45985413]
[686.90631104 -163.48149109]
[686.74316406 -148.47579956]
[685.49768066 -133.52098083]
[683.17633057 -118.69501495]
[679.79125977 -104.07521057]
[675.35998535 -89.73777771]
[669.90576172 -75.75746155]
[663.45697021 -62.20716476]
[656.04718018 -49.15752411]
[647.71514893 -36.67657089]
[638.50415039 -24.82938385]
[628.46234131 -13.67772579]
[617.64196777 -3.27973676]
[606.09954834 6.31037235]
[593.89520264 15.04260254]
[581.09259033 22.87142754]
[567.75842285 29.75602913]
[553.96221924 35.66051865]
[539.77593994 40.55410767]
[525.27355957 44.41128540]
[510.53063965 47.21194077]
[495.62402344 48.94147110]
[480.63150024 49.59086227]
[465.63119507 49.15673065]
[450.70132446 47.64133453]
[435.91970825 45.05257797]
[421.36340332 41.40395355]
[407.10836792 36.71448898]
[393.22885132 31.00862885]
[379.79724121 24.31612396]
[366.88354492 16.67186546]
[354.55514526 8.11570835]
[342.87625122 -1.30774140]
[331.90777588 -11.54935265]
[321.70693970 -22.55572891]
[312.32687378 -34.26948929]
[299.97235107 -25.76266098]
[287.61785889 -17.25583458]
[275.26333618 -8.74900818]
[262.90884399 -0.24218078]
[250.55432129 8.26464653]
[250.01307678 21.13851738]
[242.03669739 31.50477791]
[229.35966492 35.44221878]
[216.54359436 31.29940414]
[204.06379700 39.62134933]
[207.04318237 54.25188065]
[204.18641663 68.94828033]
[195.89822388 81.46511078]
[183.41566467 89.87779236]
[168.62347412 92.87855530]
[153.76954651 89.97960663]
[141.12335205 81.59214020]
[128.64356995 89.91408539]
[116.16377258 98.23603058]
[109.12129974 113.46035004]
[92.37110901 114.35894012]
[80.01660156 122.86576843]
[73.03830719 137.06484985]
[58.16769791 137.91006470]
[45.81319046 146.41688538]
[33.45867920 154.92370605]
[40.89197159 167.96289062]
[47.19267654 181.58547974]
[52.31539917 195.69332886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 207]
[70 206]
[71 205]
[73 203]
[74 202]
[77 200]
[78 199]
[79 198]
[86 191]
[87 190]
[90 186]
[91 185]
[92 184]
[93 183]
[94 182]
[95 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
