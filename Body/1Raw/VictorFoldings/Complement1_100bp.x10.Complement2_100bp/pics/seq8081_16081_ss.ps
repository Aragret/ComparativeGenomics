%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[91.04953766 338.19824219]
[85.12500763 351.98583984]
[78.22103882 365.30999756]
[70.37361145 378.10122681]
[61.62365723 390.29287720]
[52.01678467 401.82135010]
[41.60308456 412.62655640]
[30.43684387 422.65216064]
[18.57628250 431.84588623]
[6.08323669 440.15985107]
[-6.97716045 447.55062866]
[-20.53681755 453.97973633]
[-34.52503967 459.41363525]
[-48.86889648 463.82403564]
[-63.49361038 467.18789673]
[-78.32292938 469.48770142]
[-93.27954102 470.71142578]
[-108.28546143 470.85275269]
[-123.26246643 469.91091919]
[-138.13246155 467.89080811]
[-152.81793213 464.80297852]
[-167.24230957 460.66351318]
[-181.33039856 455.49401855]
[-195.00872803 449.32141113]
[-208.20600891 442.17788696]
[-220.85340881 434.10070801]
[-232.88500977 425.13198853]
[-244.23808289 415.31845093]
[-254.85343933 404.71127319]
[-264.67572021 393.36578369]
[-273.65374756 381.34109497]
[-281.74066162 368.69992065]
[-288.89434814 355.50814819]
[-295.07751465 341.83459473]
[-300.25787354 327.75048828]
[-304.40844727 313.32931519]
[-307.50759888 298.64624023]
[-309.53918457 283.77780151]
[-310.49258423 268.80151367]
[-310.36285400 253.79548645]
[-309.15063477 238.83793640]
[-306.86227417 224.00685120]
[-303.50967407 209.37954712]
[-299.11035156 195.03230286]
[-293.68725586 181.03988647]
[-287.26858521 167.47528076]
[-279.88787842 154.40917969]
[-271.58358765 141.90972900]
[-262.39898682 130.04208374]
[-252.38198853 118.86811829]
[-241.58480835 108.44608307]
[-230.06375122 98.83032227]
[-217.87886047 90.07096863]
[-205.09368896 82.21368408]
[-191.77487183 75.29943848]
[-177.99185181 69.36427307]
[-163.81648254 64.43914032]
[-149.32269287 60.54971313]
[-134.58602905 57.71627045]
[-119.68331909 55.95358276]
[-104.69226837 55.27084351]
[-89.69102478 55.67160797]
[-74.75781250 57.15378952]
[-59.97047806 59.70965958]
[-45.40611649 63.32589340]
[-31.14066315 67.98363495]
[-17.24849129 73.65860748]
[-3.80202770 80.32122040]
[9.12862206 87.93672943]
[21.47604370 96.46544647]
[33.17586136 105.86289215]
[44.16707611 116.08007812]
[54.39239120 127.06373596]
[66.07997131 117.66159058]
[77.76755524 108.25943756]
[89.45513153 98.85728455]
[100.71122742 88.94263458]
[111.51338196 78.53526306]
[122.31554413 68.12788391]
[133.11769104 57.72051620]
[143.91986084 47.31314087]
[154.72201538 36.90576935]
[165.52416992 26.49839401]
[176.01167297 15.77401447]
[186.17521667 4.74213791]
[196.33876038 -6.28973961]
[206.50230408 -17.32161713]
[216.66586304 -28.35349464]
[226.82940674 -39.38537216]
[216.58288574 -50.34990311]
[207.18438721 -62.04950333]
[198.68650818 -74.41873932]
[191.13673401 -87.38844299]
[184.57730103 -100.88607788]
[179.04490662 -114.83615875]
[174.57048035 -129.16067505]
[171.17903137 -143.77951050]
[168.88955688 -158.61091614]
[167.71482849 -173.57192993]
[167.66142273 -188.57891846]
[168.72966003 -203.54791260]
[170.91354370 -218.39523315]
[174.20088196 -233.03782654]
[178.57325745 -247.39382935]
[184.00625610 -261.38293457]
[190.46946716 -274.92687988]
[197.92674255 -287.94998169]
[206.33639526 -300.37939453]
[215.65139771 -312.14556885]
[225.81964111 -323.18273926]
[236.78425598 -333.42916870]
[248.48394775 -342.82754517]
[260.85327148 -351.32534790]
[273.82302856 -358.87500000]
[287.32070923 -365.43429565]
[301.27084351 -370.96658325]
[315.59539795 -375.44088745]
[330.21426392 -378.83218384]
[345.04568481 -381.12155151]
[360.00671387 -382.29614258]
[375.01370239 -382.34939575]
[389.98269653 -381.28103638]
[404.82998657 -379.09701538]
[419.47256470 -375.80957031]
[433.82852173 -371.43704224]
[447.81756592 -366.00393677]
[461.36148071 -359.54061890]
[474.38452148 -352.08319092]
[486.81384277 -343.67343140]
[498.57992554 -334.35833740]
[509.61700439 -324.19000244]
[519.86334229 -313.22528076]
[529.26165771 -301.52551270]
[537.75927734 -289.15612793]
[545.30883789 -276.18630981]
[551.86804199 -262.68853760]
[557.40020752 -248.73837280]
[561.87432861 -234.41377258]
[565.26556396 -219.79487610]
[567.55474854 -204.96343994]
[568.72924805 -190.00239563]
[568.78234863 -174.99542236]
[567.71386719 -160.02642822]
[565.52972412 -145.17915344]
[562.24212646 -130.53660583]
[557.86950684 -116.18069458]
[552.43627930 -102.19169617]
[545.97277832 -88.64784241]
[538.51525879 -75.62487030]
[530.10540771 -63.19562531]
[520.79022217 -51.42960358]
[510.62176514 -40.39261627]
[499.65698242 -30.14638138]
[487.95712280 -20.74820328]
[475.58764648 -12.25063992]
[462.61776733 -4.70121431]
[449.11993408 1.85785377]
[435.16970825 7.38988304]
[420.84509277 11.86393547]
[406.22616577 15.25499058]
[391.39471436 17.54408455]
[376.43365479 18.71841431]
[361.42666626 18.77141190]
[346.45770264 17.70278358]
[331.61044312 15.51850319]
[316.96792603 12.23078728]
[302.61206055 7.85802317]
[288.62310791 2.42466378]
[275.07928467 -4.03890419]
[262.05639648 -11.49653339]
[249.62721252 -19.90651703]
[237.86128235 -29.22182465]
[227.69773865 -18.18994713]
[217.53417969 -7.15807009]
[207.37063599 3.87380719]
[197.20709229 14.90568447]
[187.04354858 25.93756104]
[187.02340698 28.74072647]
[185.89169312 31.70481491]
[183.58152771 34.40639877]
[180.18045044 36.40569305]
[175.93153381 37.30055237]
[165.12937927 47.70792389]
[154.32722473 58.11529922]
[143.52507019 68.52266693]
[132.72291565 78.93004608]
[121.92076111 89.33741760]
[111.11859894 99.74478912]
[126.05670166 101.10614014]
[135.76245117 112.54284668]
[134.67597961 127.50344849]
[123.41963959 137.41783142]
[108.44159698 136.60658264]
[98.32193756 125.53443146]
[98.85728455 110.54486847]
[87.16970062 119.94701385]
[75.48212433 129.34916687]
[63.79454041 138.75131226]
[72.33277130 151.09216309]
[79.95825958 164.01693726]
[86.63123322 177.45825195]
[92.31691742 191.34603882]
[96.98566437 205.60791016]
[100.61312866 220.16946411]
[103.18040466 234.95483398]
[104.67410278 249.88690186]
[105.08643341 264.88781738]
[104.41526031 279.87939453]
[102.66406250 294.78344727]
[99.84198761 309.52230835]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 198]
[74 197]
[75 196]
[76 195]
[77 188]
[78 187]
[79 186]
[80 185]
[81 184]
[82 183]
[83 182]
[84 177]
[85 176]
[86 175]
[87 174]
[88 173]
[89 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
