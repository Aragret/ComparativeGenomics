%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[158.79722595 469.52352905]
[148.90301514 480.87246704]
[136.86520386 489.91595459]
[123.21003723 496.25866699]
[108.53444672 499.62332153]
[93.48000336 499.86282349]
[78.70481110 496.96670532]
[64.85478973 491.06158447]
[52.53538895 482.40557861]
[42.28517151 471.37713623]
[34.55222321 458.45834351]
[29.67460442 444.21395874]
[27.86553764 429.26669312]
[29.20410919 414.26995850]
[33.63180161 399.87936401]
[40.95505905 386.72399902]
[50.85373688 375.37896729]
[62.89510727 366.34020996]
[76.55277252 360.00286865]
[91.22968292 356.64398193]
[106.28421783 356.41040039]
[109.16949463 341.69052124]
[112.05476379 326.97064209]
[114.94003296 312.25073242]
[117.82530975 297.53085327]
[120.71057892 282.81094360]
[121.15718842 267.81759644]
[119.15317535 252.95207214]
[117.14916229 238.08654785]
[115.14514923 223.22102356]
[113.14113617 208.35549927]
[110.69540405 193.55622864]
[107.81013489 178.83633423]
[95.34409332 170.76580811]
[92.20832825 155.87884521]
[100.75795746 142.85803223]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[77.16011810 62.69294357]
[82.30482483 48.71506119]
[79.41955566 33.99516678]
[69.17225647 21.94098091]
[74.31696320 7.96309471]
[71.43168640 -6.75679636]
[68.54641724 -21.47668839]
[65.66114044 -36.19657898]
[51.40060043 -36.02651596]
[37.33332062 -38.35063553]
[23.89204407 -43.09616852]
[11.49004745 -50.11588669]
[0.50841069 -59.19264984]
[-8.71567917 -70.04614258]
[-15.89928150 -82.34150696]
[-20.82238579 -95.69969940]
[-23.33464432 -109.70915985]
[-23.35997009 -123.93849945]
[-20.89883041 -137.94976807]
[-16.02820778 -151.31195068]
[-8.89917755 -163.61424255]
[0.26776442 -174.47862244]
[11.18952942 -183.57153320]
[23.52917671 -190.61405945]
[36.90630722 -195.39057922]
[34.46057892 -210.18984985]
[32.01485062 -224.98912048]
[29.56912422 -239.78839111]
[27.12339592 -254.58766174]
[24.67766953 -269.38693237]
[9.68794346 -268.52655029]
[-5.30831194 -269.26440430]
[-20.14118004 -271.59210205]
[-34.64258957 -275.48324585]
[-48.64823532 -280.89379883]
[-61.99941254 -287.76242065]
[-74.54485321 -296.01132202]
[-86.14239502 -305.54699707]
[-96.66064453 -316.26141357]
[-105.98040771 -328.03314209]
[-113.99609375 -340.72885132]
[-120.61687469 -354.20465088]
[-125.76773071 -368.30789185]
[-129.39030457 -382.87872314]
[-131.44354248 -397.75204468]
[-131.90417480 -412.75936890]
[-130.76699829 -427.73065186]
[-128.04489136 -442.49621582]
[-123.76869965 -456.88879395]
[-117.98686981 -470.74530029]
[-110.76491547 -483.90872192]
[-102.18466949 -496.22988892]
[-92.34334564 -507.56921387]
[-81.35247040 -517.79821777]
[-69.33656311 -526.80102539]
[-56.43177414 -534.47558594]
[-42.78433228 -540.73492432]
[-28.54886818 -545.50811768]
[-13.88668346 -548.74114990]
[1.03608906 -550.39733887]
[16.05036354 -550.45794678]
[30.98601532 -548.92224121]
[45.67381287 -545.80761719]
[59.94733429 -541.14941406]
[73.64484406 -535.00042725]
[86.61114502 -527.43029785]
[98.69931793 -518.52478027]
[109.77239227 -508.38479614]
[119.70489502 -497.12524414]
[128.38429260 -484.87371826]
[135.71224976 -471.76901245]
[141.60571289 -457.95962524]
[145.99792480 -443.60202026]
[148.83909607 -428.85888672]
[150.09706116 -413.89727783]
[149.75755310 -398.88674927]
[147.82440186 -383.99731445]
[144.31953430 -369.39770508]
[139.28266907 -355.25338745]
[132.77085876 -341.72457886]
[124.85788727 -328.96459961]
[115.63342285 -317.11804199]
[105.20198822 -306.31909180]
[93.68177032 -296.69012451]
[81.20331573 -288.34027100]
[67.90799713 -281.36413574]
[53.94647598 -275.84072876]
[39.47694016 -271.83264160]
[41.92266846 -257.03338623]
[44.36839294 -242.23411560]
[46.81412125 -227.43484497]
[49.25984955 -212.63557434]
[51.70557785 -197.83630371]
[67.47329712 -197.44056702]
[82.86951447 -193.99436951]
[97.30960083 -187.62680054]
[110.24486542 -178.57789612]
[121.18345642 -167.18959045]
[129.70903015 -153.89286804]
[135.49656677 -139.19132996]
[138.32482910 -123.64225769]
[138.08477783 -107.83537292]
[134.78376770 -92.37055206]
[128.54537964 -77.83499146]
[119.60471344 -64.78099823]
[108.29962158 -53.70490646]
[95.05788422 -45.02828598]
[80.38103485 -39.08185196]
[83.26630402 -24.36196136]
[86.15158081 -9.64206886]
[89.03684998 5.07782221]
[99.07777405 16.07914543]
[94.13944244 31.10989571]
[97.02471924 45.82978821]
[107.06564331 56.83110809]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[115.47785187 139.97276306]
[128.31044006 148.80239868]
[131.02682495 163.77156067]
[122.53002167 175.95106506]
[125.41529846 190.67094421]
[128.38383484 193.83981323]
[130.02458191 197.42764282]
[130.36885071 200.96556091]
[129.59704590 204.04304504]
[128.00666809 206.35148621]
[130.01068115 221.21701050]
[132.01469421 236.08253479]
[134.01870728 250.94805908]
[136.02272034 265.81359863]
[140.89056396 251.62542725]
[149.22058105 239.15101624]
[160.46023560 229.21774292]
[173.86407471 222.48443604]
[188.54302979 219.39768982]
[203.52352905 220.16226196]
[217.81196594 224.72741699]
[230.46063232 232.79035950]
[240.63059998 243.81632996]
[247.64730835 257.07400513]
[251.04537964 271.68402100]
[250.59944153 286.67739868]
[246.33905029 301.05966187]
[238.54679871 313.87686157]
[227.73951721 324.27890015]
[214.63400269 331.57583618]
[200.09950256 335.28372192]
[185.10003662 335.15661621]
[170.63047791 331.20291138]
[157.65051270 323.68487549]
[147.02108765 313.10113525]
[139.44720459 300.15371704]
[135.43046570 285.69622803]
[132.54519653 300.41610718]
[129.65992737 315.13601685]
[126.77465820 329.85589600]
[123.88938141 344.57580566]
[121.00411224 359.29568481]
[134.85646057 365.19537354]
[147.17926025 373.84649658]
[157.43382263 384.87091064]
[165.17184448 397.78665161]
[170.05506897 412.02911377]
[171.87001038 426.97567749]
[170.53733826 441.97293091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 203]
[22 202]
[23 201]
[24 200]
[25 199]
[26 198]
[27 175]
[28 174]
[29 173]
[30 172]
[31 171]
[32 166]
[33 165]
[36 162]
[37 161]
[38 160]
[40 158]
[41 157]
[43 155]
[44 154]
[46 152]
[47 151]
[48 150]
[49 149]
[66 134]
[67 133]
[68 132]
[69 131]
[70 130]
[71 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
