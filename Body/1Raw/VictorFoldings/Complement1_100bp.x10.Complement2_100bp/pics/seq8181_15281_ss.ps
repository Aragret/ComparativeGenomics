%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[85.08648682 494.75869751]
[70.53485870 490.96948242]
[56.83298874 484.77539062]
[44.37511444 476.35461426]
[33.51966858 465.94946289]
[24.57898712 453.85928345]
[17.81030846 440.43197632]
[13.40838337 426.05383301]
[11.49986172 411.13854980]
[12.13965607 396.11526489]
[15.30935860 381.41625977]
[20.91777039 367.46441650]
[28.80352783 354.66119385]
[38.73973846 343.37493896]
[50.44052124 333.93035889]
[63.56922150 326.59924316]
[77.74809265 321.59249878]
[92.56919098 319.05419922]
[92.56919098 304.05419922]
[92.56919098 289.05419922]
[92.56919098 274.05419922]
[84.83189392 261.32690430]
[92.56919098 247.52674866]
[92.56919098 232.52674866]
[89.42568970 225.83793640]
[92.68252563 217.30383301]
[92.90585327 202.30549622]
[93.12918091 187.30715942]
[93.35250854 172.30882263]
[93.35250854 157.30882263]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[84.37723541 74.22607422]
[91.92418671 61.38501358]
[91.70085907 46.38667679]
[91.47753143 31.38833809]
[91.25420380 16.39000130]
[91.03087616 1.39166355]
[87.70861816 -13.23579693]
[81.43125153 -26.85911369]
[75.15389252 -40.48242950]
[74.05560303 -25.52269173]
[67.97019958 -11.81255341]
[57.61259460 -0.96266830]
[44.19958496 5.75232983]
[29.30692101 7.54356956]
[14.68417549 4.20061827]
[2.04921556 -3.88379765]
[-7.11361694 -15.75992870]
[-11.72788239 -30.03257942]
[-11.25150013 -45.02501297]
[-5.74043560 -58.97593307]
[4.15787697 -70.24639893]
[17.28059387 -77.51236725]
[32.08607101 -79.92024231]
[46.83497620 -77.18714905]
[59.79462051 -69.63416290]
[69.44330597 -58.14725113]
[66.55803680 -72.86714172]
[63.67276382 -87.58703613]
[60.24070358 -91.51997375]
[58.80409622 -95.93466187]
[59.21229172 -99.99032593]
[61.00277710 -103.02783966]
[58.77766037 -117.86188507]
[56.55254364 -132.69592285]
[54.32742691 -147.52996826]
[52.10231018 -162.36401367]
[37.10306931 -161.70034790]
[22.11662292 -162.60818481]
[7.30717468 -165.07759094]
[-7.16301680 -169.08149719]
[-21.13540840 -174.57603455]
[-34.45690918 -181.50102234]
[-46.98156357 -189.78054810]
[-58.57214355 -199.32394409]
[-69.10166168 -210.02659607]
[-78.45474243 -221.77128601]
[-86.52890778 -234.42930603]
[-93.23570251 -247.86198425]
[-98.50163269 -261.92211914]
[-102.26900482 -276.45568848]
[-104.49655151 -291.30343628]
[-105.15985107 -306.30270386]
[-104.25164795 -321.28912354]
[-101.78188324 -336.09851074]
[-97.77762604 -350.56860352]
[-92.28274536 -364.54086304]
[-85.35744476 -377.86221313]
[-77.07760620 -390.38665771]
[-67.53394318 -401.97698975]
[-56.83102036 -412.50625610]
[-45.08610916 -421.85903931]
[-32.42789078 -429.93292236]
[-18.99505615 -436.63937378]
[-4.93478394 -441.90496826]
[9.59887505 -445.67199707]
[24.44668198 -447.89916992]
[39.44595718 -448.56210327]
[54.43235779 -447.65353394]
[69.24168396 -445.18341064]
[83.71168518 -441.17880249]
[97.68380737 -435.68359375]
[111.00497437 -428.75796509]
[123.52922821 -420.47781372]
[135.11933899 -410.93386841]
[145.64833069 -400.23071289]
[155.00083923 -388.48556519]
[163.07440186 -375.82714844]
[169.78053284 -362.39413452]
[175.04579163 -348.33374023]
[178.81245422 -333.79998779]
[181.03927612 -318.95214844]
[181.70185852 -303.95285034]
[180.79292297 -288.96646118]
[178.32243347 -274.15719604]
[174.31747437 -259.68728638]
[168.82191467 -245.71530151]
[161.89596558 -232.39431763]
[153.61552429 -219.87025452]
[144.07128906 -208.28038025]
[133.36785889 -197.75164795]
[121.62249756 -188.39941406]
[108.96388245 -180.32617188]
[95.53072357 -173.62036133]
[81.47019958 -168.35545349]
[66.93635559 -164.58914185]
[69.16146851 -149.75509644]
[71.38658905 -134.92105103]
[73.61170197 -120.08700562]
[75.83682251 -105.25296021]
[78.39265442 -90.47230530]
[81.27793121 -75.75241089]
[84.16320038 -61.03252411]
[88.77720642 -46.75978851]
[95.05457306 -33.13647461]
[101.33193207 -19.51315689]
[101.72557831 -34.50799179]
[105.18638611 -49.10329056]
[111.56719971 -62.67845917]
[120.59671021 -74.65627289]
[131.89097595 -84.52742767]
[144.96974182 -91.87219238]
[159.27691650 -96.37827301]
[174.20414734 -97.85406494]
[189.11671448 -96.23681641]
[203.38052368 -91.59529877]
[216.38906860 -84.12686157]
[227.58923340 -74.14907074]
[236.50477600 -62.08618927]
[242.75660706 -48.45113373]
[246.07887268 -33.82367706]
[246.33033752 -18.82578659]
[243.50030518 -4.09517622]
[237.70909119 9.74179840]
[229.20295715 22.09678268]
[218.34358215 32.44443512]
[205.59271240 40.34477234]
[191.49252319 45.46186447]
[176.64254761 47.57813263]
[161.67424011 46.60358810]
[147.22404480 42.57966995]
[133.90640259 35.67747879]
[122.28757477 26.19050217]
[112.86159515 14.52212620]
[106.02921295 1.16833591]
[106.25254059 16.16667366]
[106.47586823 31.16501045]
[106.69919586 46.16334915]
[106.92252350 61.16168594]
[114.84845734 73.77234650]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[108.35084534 157.08549500]
[111.40802765 162.94767761]
[111.09304810 168.62199402]
[108.35084534 172.53215027]
[108.12751770 187.53048706]
[107.90419006 202.52882385]
[107.68086243 217.52716064]
[107.56919098 232.52674866]
[107.56919098 247.52674866]
[115.30649567 261.32690430]
[107.56919098 274.05419922]
[107.56919098 289.05419922]
[107.56919098 304.05419922]
[107.56919098 319.05419922]
[122.39028931 321.59249878]
[136.56916809 326.59924316]
[149.69786072 333.93035889]
[161.39865112 343.37493896]
[171.33485413 354.66119385]
[179.22061157 367.46441650]
[184.82902527 381.41625977]
[187.99873352 396.11526489]
[188.63851929 411.13854980]
[186.73001099 426.05383301]
[182.32807922 440.43197632]
[175.55940247 453.85928345]
[166.61871338 465.94946289]
[155.76327515 476.35461426]
[143.30540466 484.77539062]
[129.60353088 490.96948242]
[115.05190277 494.75869751]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 193]
[19 192]
[20 191]
[21 190]
[23 188]
[24 187]
[26 186]
[27 185]
[28 184]
[29 183]
[30 180]
[31 179]
[32 178]
[33 177]
[35 175]
[37 173]
[38 172]
[39 171]
[40 170]
[41 169]
[42 140]
[43 139]
[44 138]
[61 137]
[62 136]
[63 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
