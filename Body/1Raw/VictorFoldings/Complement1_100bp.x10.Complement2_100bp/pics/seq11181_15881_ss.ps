%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[105.21583557 772.87396240]
[90.49882507 769.94781494]
[75.99703217 766.09417725]
[61.76884842 761.32855225]
[47.87157059 755.67010498]
[34.36115265 749.14160156]
[21.29199982 741.76934814]
[8.71673870 733.58306885]
[-3.31399632 724.61572266]
[-14.75176144 714.90332031]
[-25.55049896 704.48510742]
[-35.66672897 693.40295410]
[-45.05971146 681.70147705]
[-53.69163132 669.42779541]
[-61.52772141 656.63140869]
[-68.53643799 643.36376953]
[-74.68955231 629.67828369]
[-79.96228790 615.63012695]
[-84.33341980 601.27581787]
[-87.78533936 586.67321777]
[-90.30415344 571.88104248]
[-91.87971497 556.95892334]
[-92.50567627 541.96685791]
[-92.17952728 526.96533203]
[-90.90257263 512.01470947]
[-88.67995453 497.17514038]
[-85.52062988 482.50643921]
[-81.43731689 468.06762695]
[-76.44644928 453.91687012]
[-70.56813812 440.11114502]
[-63.82603836 426.70605469]
[-56.24731064 413.75555420]
[-47.86246490 401.31179810]
[-38.70526886 389.42489624]
[-28.81259346 378.14273071]
[-18.22427177 367.51071167]
[-6.98294115 357.57165527]
[4.86613369 348.36557007]
[17.27523994 339.92953491]
[30.19441032 332.29751587]
[43.57162476 325.50027466]
[57.35301590 319.56512451]
[71.48308563 314.51602173]
[85.90495300 310.37326050]
[100.56052399 307.15353394]
[115.39080048 304.86981201]
[114.05256653 289.92962646]
[112.71433258 274.98944092]
[111.37609863 260.04925537]
[109.81558228 245.13066101]
[108.03311157 230.23693848]
[106.25064850 215.34323120]
[97.05577087 203.62556458]
[103.09836578 189.00373840]
[90.02513123 181.91651917]
[83.55541992 168.32951355]
[86.35958099 153.36322021]
[97.56822968 142.79570007]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[85.19351959 65.73151398]
[87.62409210 58.75196838]
[86.06356812 43.83336258]
[84.50304413 28.91475868]
[82.94252014 13.99615288]
[81.38200378 -0.92245173]
[79.82147980 -15.84105682]
[78.26095581 -30.75966072]
[76.70043182 -45.67826462]
[75.13990784 -60.59687042]
[73.57938385 -75.51547241]
[72.01885986 -90.43408203]
[70.45833588 -105.35268402]
[68.89781952 -120.27128601]
[67.33729553 -135.18989563]
[65.77677155 -150.10850525]
[61.77155304 -158.31800842]
[64.30577087 -165.26058960]
[62.96753693 -180.20077515]
[61.62930298 -195.14096069]
[60.29106903 -210.08114624]
[49.35127640 -224.89338684]
[57.35035706 -240.51330566]
[55.78983688 -255.43190002]
[52.72233963 -259.65536499]
[51.68532181 -264.18060303]
[52.45371628 -268.18368530]
[54.50806046 -271.04934692]
[53.61524200 -286.02276611]
[52.72242737 -300.99615479]
[51.82961273 -315.96957397]
[37.18474197 -319.76205444]
[24.42967415 -327.89614868]
[14.81402206 -339.57495117]
[9.27982903 -353.65429688]
[8.36927795 -368.75482178]
[12.17157650 -383.39715576]
[20.31421280 -396.14675903]
[31.99945641 -405.75457764]
[46.08250427 -411.27932739]
[61.18364334 -412.17977905]
[75.82341766 -408.36767578]
[88.56757355 -400.21649170]
[98.16756439 -388.52481079]
[103.68288422 -374.43804932]
[104.57319641 -359.33633423]
[100.75128174 -344.69909668]
[92.59156799 -331.96041870]
[80.89345551 -322.36825562]
[66.80301666 -316.86236572]
[67.69583130 -301.88897705]
[68.58864594 -286.91555786]
[69.48146820 -271.94216919]
[70.70844269 -256.99243164]
[72.26896667 -242.07382202]
[81.46536255 -234.21553040]
[82.88755035 -221.79936218]
[75.23125458 -211.41938782]
[76.56948853 -196.47920227]
[77.90772247 -181.53901672]
[79.24595642 -166.59883118]
[80.69537354 -151.66902161]
[82.25589752 -136.75041199]
[83.81642151 -121.83181000]
[85.37694550 -106.91320801]
[86.93746948 -91.99460602]
[88.49799347 -77.07599640]
[90.05850983 -62.15739441]
[91.61903381 -47.23878860]
[93.17955780 -32.32018280]
[94.74008179 -17.40157890]
[96.30060577 -2.48297477]
[97.86112976 12.43562984]
[99.42165375 27.35423470]
[100.98217773 42.27283859]
[102.54269409 57.19144440]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[112.46194458 141.01322937]
[125.84774780 148.63731384]
[132.10443115 162.51921082]
[129.02366638 177.24922180]
[117.99208069 187.22128296]
[127.31444550 200.00424194]
[121.14436340 213.56076050]
[122.92682648 228.45448303]
[124.70929718 243.34819031]
[128.35975647 248.86051941]
[128.63681030 254.53680420]
[126.31628418 258.71102905]
[127.65451813 273.65121460]
[128.99275208 288.59140015]
[130.33099365 303.53158569]
[145.33105469 303.14331055]
[160.32553101 303.70721436]
[175.25405884 305.22097778]
[190.05653381 307.67849731]
[204.67332458 311.06994629]
[219.04559326 315.38159180]
[233.11546326 320.59613037]
[246.82627869 326.69250488]
[260.12283325 333.64624023]
[272.95159912 341.42926025]
[285.26086426 350.01028442]
[297.00112915 359.35473633]
[308.12509155 369.42498779]
[318.58795166 380.18051147]
[328.34759521 391.57797241]
[337.36471558 403.57147217]
[345.60302734 416.11273193]
[353.02929688 429.15124512]
[359.61367798 442.63449097]
[365.32962036 456.50823975]
[370.15414429 470.71655273]
[374.06777954 485.20227051]
[377.05480957 499.90704346]
[379.10321045 514.77166748]
[380.20468140 529.73626709]
[380.35482788 544.74060059]
[379.55300903 559.72424316]
[377.80252075 574.62683105]
[375.11035156 589.38842773]
[371.48736572 603.94958496]
[366.94815063 618.25158691]
[361.51095581 632.23693848]
[355.19772339 645.84930420]
[348.03384399 659.03381348]
[340.04818726 671.73742676]
[331.27285767 683.90893555]
[321.74325562 695.49938965]
[311.49771118 706.46215820]
[300.57751465 716.75299072]
[289.02658081 726.33050537]
[276.89147949 735.15612793]
[264.22103882 743.19433594]
[251.06631470 750.41271973]
[237.48023987 756.78228760]
[223.51753235 762.27734375]
[209.23443604 766.87573242]
[194.68843079 770.55895996]
[179.93811035 773.31225586]
[165.04284668 775.12445068]
[150.06265259 775.98828125]
[135.05783081 775.90026855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 159]
[47 158]
[48 157]
[49 156]
[50 153]
[51 152]
[52 151]
[54 149]
[58 145]
[59 144]
[60 143]
[62 141]
[63 140]
[65 139]
[66 138]
[67 137]
[68 136]
[69 135]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[81 124]
[82 123]
[83 122]
[84 121]
[86 118]
[87 117]
[91 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
