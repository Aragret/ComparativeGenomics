%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[81.93393707 245.74720764]
[81.59607697 260.75228882]
[80.00379944 275.67648315]
[77.16827393 290.41506958]
[73.10939026 304.86471558]
[67.85561371 318.92401123]
[61.44380188 332.49441528]
[53.91893005 345.48065186]
[45.33377838 357.79168701]
[35.74856567 369.34115601]
[25.23052979 380.04806519]
[13.85344505 389.83724976]
[1.69711661 398.64010620]
[-11.15318680 406.39486694]
[-24.60732841 413.04711914]
[-38.57093430 418.55023193]
[-52.94606018 422.86560059]
[-67.63187408 425.96292114]
[-82.52536011 427.82052612]
[-97.52204895 428.42532349]
[-112.51675415 427.77310181]
[-127.40428925 425.86843872]
[-142.08023071 422.72470093]
[-156.44165039 418.36389160]
[-170.38778687 412.81668091]
[-183.82083130 406.12188721]
[-196.64654541 398.32653809]
[-208.77497864 389.48532104]
[-220.12106323 379.66018677]
[-230.60519409 368.92010498]
[-240.15383911 357.34036255]
[-248.70002747 345.00225830]
[-256.18380737 331.99227905]
[-262.55267334 318.40167236]
[-267.76196289 304.32583618]
[-271.77514648 289.86343384]
[-274.56405640 275.11593628]
[-276.10913086 260.18679810]
[-276.39956665 245.18072510]
[-275.43325806 230.20297241]
[-273.21704102 215.35861206]
[-269.76644897 200.75177002]
[-265.10568237 186.48489380]
[-259.26742554 172.65806580]
[-252.29263306 159.36825562]
[-244.23023987 146.70870972]
[-235.13677979 134.76820374]
[-225.07606506 123.63050842]
[-214.11863708 113.37373352]
[-202.34136963 104.06983948]
[-189.82687378 95.78407288]
[-176.66291809 88.57456970]
[-162.94186401 82.49188232]
[-148.75993347 77.57868958]
[-134.21661377 73.86945343]
[-119.41391754 71.39018250]
[-104.45568085 70.15827942]
[-89.44681549 70.18238068]
[-74.49260712 71.46231842]
[-59.69795227 73.98910522]
[-45.16661835 77.74503326]
[-31.00054359 82.70374298]
[-17.29908752 88.83045959]
[-4.15835905 96.08220673]
[8.32946682 104.40811157]
[20.07679558 113.74977875]
[31.00122643 124.04168701]
[41.02613449 135.21163940]
[52.98846817 126.16163635]
[64.95080566 117.11164093]
[76.91313934 108.06163788]
[88.87548065 99.01164246]
[100.77011108 89.87284088]
[112.59638214 80.64573669]
[124.42265320 71.41864014]
[136.24891663 62.19154358]
[148.07519531 52.96444321]
[139.48300171 40.66486359]
[131.55189514 27.92896843]
[124.30399323 14.79225445]
[117.75949097 1.29133594]
[111.93661499 -12.53615761]
[106.85160828 -26.65168571]
[102.51864624 -41.01590729]
[98.94979858 -55.58878326]
[96.15501404 -70.32969666]
[94.14208221 -85.19756317]
[92.91661835 -100.15094757]
[92.48203278 -115.14816284]
[92.83953094 -130.14741516]
[93.98812866 -145.10690308]
[95.92462158 -159.98492432]
[98.64360046 -174.74000549]
[102.13750458 -189.33102417]
[106.39658356 -203.71733093]
[111.40897369 -217.85881042]
[117.16070557 -231.71604919]
[123.63573456 -245.25041199]
[130.81602478 -258.42422485]
[138.68156433 -271.20071411]
[147.21043396 -283.54428101]
[156.37884521 -295.42053223]
[166.16125488 -306.79638672]
[176.53039551 -317.64010620]
[187.45738220 -327.92147827]
[198.91172791 -337.61184692]
[210.86152649 -346.68420410]
[223.27348328 -355.11325073]
[236.11297607 -362.87551880]
[249.34423828 -369.94934082]
[262.93038940 -376.31503296]
[276.83355713 -381.95483398]
[291.01498413 -386.85302734]
[305.43515015 -390.99597168]
[320.05389404 -394.37210083]
[334.83041382 -396.97201538]
[349.72357178 -398.78848267]
[364.69183350 -399.81643677]
[379.69348145 -400.05297852]
[394.68670654 -399.49746704]
[409.62969971 -398.15145874]
[424.48086548 -396.01870728]
[439.19876099 -393.10516357]
[453.74240112 -389.41891479]
[468.07119751 -384.97027588]
[482.14526367 -379.77160645]
[495.92535400 -373.83743286]
[509.37307739 -367.18426514]
[522.45092773 -359.83068848]
[535.12243652 -351.79714966]
[547.35235596 -343.10604858]
[559.10650635 -333.78164673]
[570.35223389 -323.84988403]
[581.05810547 -313.33847046]
[591.19427490 -302.27670288]
[600.73260498 -290.69543457]
[609.64636230 -278.62689209]
[617.91082764 -266.10473633]
[625.50292969 -253.16386414]
[632.40142822 -239.84036255]
[638.58721924 -226.17135620]
[644.04296875 -212.19494629]
[648.75347900 -197.95007324]
[652.70568848 -183.47645569]
[655.88848877 -168.81443787]
[658.29309082 -154.00486755]
[659.91278076 -139.08903503]
[660.74298096 -124.10851288]
[660.78149414 -109.10504913]
[660.02807617 -94.12046814]
[658.48492432 -79.19652557]
[656.15625000 -64.37482452]
[653.04864502 -49.69667053]
[649.17071533 -35.20298386]
[644.53326416 -20.93415070]
[639.14923096 -6.92994642]
[633.03363037 6.77059698]
[626.20355225 20.12929344]
[618.67791748 33.10890961]
[610.47778320 45.67327118]
[601.62597656 57.78735733]
[592.14715576 69.41740417]
[582.06781006 80.53099823]
[571.41601562 91.09716034]
[560.22137451 101.08643341]
[548.51513672 110.47099304]
[536.32995605 119.22467041]
[523.69976807 127.32307434]
[510.65982056 134.74362183]
[497.24639893 141.46565247]
[483.49691772 147.47039795]
[469.44970703 152.74114990]
[455.14389038 157.26321411]
[440.61935425 161.02397156]
[425.91656494 164.01293945]
[411.07653809 166.22181702]
[396.14062500 167.64440918]
[381.15045166 168.27677917]
[366.14779663 168.11715698]
[351.17446899 167.16598511]
[336.27218628 165.42590332]
[321.48251343 162.90177917]
[306.84667969 159.60064697]
[292.40545654 155.53169250]
[278.19909668 150.70626831]
[264.26721191 145.13783264]
[250.64859009 138.84187317]
[237.38124084 131.83598328]
[224.50210571 124.13964844]
[212.04710388 115.77434540]
[200.05094910 106.76338196]
[188.54705811 97.13187408]
[177.56750488 86.90666199]
[167.14289856 76.11624908]
[157.30229187 64.79071808]
[145.47601318 74.01781464]
[133.64974976 83.24491119]
[121.82347870 92.47200775]
[109.99720764 101.69910431]
[106.08441162 108.74627686]
[97.92547607 110.97397614]
[85.96314240 120.02397919]
[74.00080872 129.07397461]
[62.03847122 138.12397766]
[50.07613373 147.17398071]
[58.09846497 159.85896301]
[65.03119659 173.17074585]
[70.82570648 187.01597595]
[75.44135284 201.29751587]
[78.84574127 215.91519165]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 205]
[69 204]
[70 203]
[71 202]
[72 201]
[73 199]
[74 198]
[75 197]
[76 196]
[77 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
