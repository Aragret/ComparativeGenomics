%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[291.42413330 366.47436523]
[298.05392456 353.00540161]
[305.97198486 340.25115967]
[315.10205078 328.33444214]
[304.14614868 318.08905029]
[293.19024658 307.84365845]
[275.90740967 304.79882812]
[270.69515991 287.13772583]
[259.58792114 277.05661011]
[248.40596008 267.05841064]
[237.14985657 257.14376831]
[225.89376831 247.22912598]
[214.63766479 237.31446838]
[203.38157654 227.39981079]
[192.12547302 217.48516846]
[180.86938477 207.57051086]
[169.61328125 197.65586853]
[158.35719299 187.74121094]
[163.01679993 201.99913025]
[161.94209290 216.96057129]
[155.29248047 230.40612793]
[144.05441284 240.34120178]
[129.89497375 245.29199219]
[114.91464233 244.52409363]
[101.33566284 238.15139771]
[91.17238617 227.11927795]
[85.93247986 213.06427002]
[86.39324951 198.07135010]
[92.48635101 184.36462402]
[103.30789948 173.97741699]
[117.25258636 168.45060730]
[132.25180054 168.60404968]
[146.07891846 174.41394043]
[137.11822510 162.38455200]
[128.15751648 150.35517883]
[119.19682312 138.32580566]
[110.23612976 126.29642487]
[101.27543640 114.26705170]
[88.51278687 108.55683136]
[86.69519043 94.69364929]
[89.00145721 109.51528931]
[86.67678833 124.33406067]
[79.94275665 137.73751831]
[69.44121552 148.44815063]
[56.17308807 155.44506836]
[41.40301895 158.06138611]
[26.53879738 156.04771423]
[12.99718094 149.59599304]
[2.06887341 139.32116699]
[-5.20450926 126.20256042]
[-8.12971497 111.49055481]
[-6.42793083 96.58740234]
[-0.26136050 82.91358185]
[9.78223801 71.77238464]
[22.74557114 64.22573853]
[37.39305878 60.99291992]
[52.32859802 62.38207245]
[66.12862396 68.26078796]
[77.47853851 78.06961823]
[72.02317810 64.09681702]
[66.56782532 50.12401962]
[61.11246872 36.15122223]
[55.65710831 22.17842293]
[42.78094101 18.22634697]
[34.65061188 7.73310280]
[34.05717850 -5.33326340]
[40.99347305 -16.19223785]
[35.74675751 -30.24470901]
[23.67116928 -40.46678162]
[26.46795464 -55.09645081]
[21.22123528 -69.14892578]
[15.97451782 -83.20139313]
[10.72779942 -97.25386810]
[-3.97722650 -94.15227509]
[-18.98028374 -93.27709961]
[-33.94619751 -94.64788818]
[-48.54062653 -98.23402405]
[-62.43751907 -103.95538330]
[-75.32642365 -111.68415070]
[-86.91938782 -121.24766541]
[-96.95742798 -132.43228149]
[-105.21628571 -144.98811340]
[-111.51145172 -158.63465881]
[-115.70230103 -173.06707764]
[-117.69519806 -187.96290588]
[-117.44562531 -202.98939514]
[-114.95915985 -217.81083679]
[-110.29134369 -232.09611511]
[-103.54646301 -245.52609253]
[-94.87519836 -257.80075073]
[-84.47127533 -268.64584351]
[-72.56711578 -277.81909180]
[-59.42866135 -285.11557007]
[-45.34943008 -290.37228394]
[-30.64396286 -293.47177124]
[-15.64078140 -294.34481812]
[-0.67506295 -292.97189331]
[13.91885376 -289.38366699]
[27.81493378 -283.66033936]
[40.70273590 -275.92974854]
[52.29433823 -266.36456299]
[62.33078384 -255.17852783]
[70.58785248 -242.62152100]
[76.88108063 -228.97407532]
[81.06987000 -214.54106140]
[83.06064606 -199.64494324]
[82.80892944 -184.61848450]
[80.32035065 -169.79739380]
[75.65050507 -155.51278687]
[68.90370941 -142.08377075]
[60.23070145 -129.81036377]
[49.82523346 -118.96675873]
[37.91976547 -109.79519653]
[24.78027153 -102.50058746]
[30.02698898 -88.44811249]
[35.27370834 -74.39563751]
[40.52042389 -60.34317017]
[52.22073364 -51.12622452]
[49.79922867 -35.49142838]
[55.04594421 -21.43895531]
[70.63065338 -15.11790276]
[76.94599152 0.83300072]
[69.62990570 16.72306633]
[75.08526611 30.69586372]
[80.54061890 44.66866302]
[85.99597931 58.64146042]
[91.45133972 72.61425781]
[98.72456360 85.73294830]
[111.48721313 91.44316864]
[113.30480957 105.30635071]
[122.26551056 117.33573151]
[131.22621155 129.36511230]
[140.18690491 141.39448547]
[149.14759827 153.42385864]
[158.10829163 165.45324707]
[168.27183533 176.48512268]
[179.52793884 186.39976501]
[190.78402710 196.31442261]
[202.04013062 206.22906494]
[213.29621887 216.14372253]
[224.55232239 226.05838013]
[235.80841064 235.97302246]
[247.06451416 245.88768005]
[258.32061768 255.80232239]
[266.82879639 259.12625122]
[269.66906738 265.94937134]
[280.77630615 276.03048706]
[293.67352295 276.18725586]
[302.71722412 284.81253052]
[303.43563843 296.88772583]
[314.39154053 307.13311768]
[325.34744263 317.37850952]
[336.62615967 307.47109985]
[348.82168579 298.71688843]
[361.81655884 291.20022583]
[375.48562622 284.99349976]
[389.69723511 280.15646362]
[404.31454468 276.73574829]
[419.19674683 274.76425171]
[434.20053101 274.26098633]
[449.18139648 275.23077393]
[463.99505615 277.66430664]
[478.49887085 281.53811646]
[492.55313110 286.81494141]
[506.02246094 293.44390869]
[518.77722168 301.36120605]
[530.69445801 310.49057007]
[541.65954590 320.74407959]
[551.56671143 332.02301025]
[560.32067871 344.21871948]
[567.83709717 357.21371460]
[574.04351807 370.88290405]
[578.88024902 385.09463501]
[582.30072021 399.71200562]
[584.27191162 414.59423828]
[584.77490234 429.59802246]
[583.80480957 444.57888794]
[581.37097168 459.39248657]
[577.49682617 473.89620972]
[572.21978760 487.95037842]
[565.59051514 501.41958618]
[557.67297363 514.17419434]
[548.54333496 526.09124756]
[538.28961182 537.05609131]
[527.01049805 546.96307373]
[514.81463623 555.71679688]
[501.81945801 563.23291016]
[488.15014648 569.43908691]
[473.93835449 574.27557373]
[459.32089233 577.69573975]
[444.43862915 579.66662598]
[429.43481445 580.16931152]
[414.45401001 579.19891357]
[399.64041138 576.76477051]
[385.13677979 572.89038086]
[371.08273315 567.61297607]
[357.61364746 560.98345947]
[344.85922241 553.06567383]
[332.94232178 543.93585205]
[321.97769165 533.68188477]
[312.07092285 522.40252686]
[303.31747437 510.20651245]
[295.80157471 497.21118164]
[289.59567261 483.54174805]
[284.75949097 469.32983398]
[281.33966064 454.71234131]
[279.36904907 439.83001709]
[278.86666870 424.82620239]
[279.83737183 409.84539795]
[282.27178955 395.03189087]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 152]
[5 151]
[6 150]
[8 147]
[9 146]
[10 144]
[11 143]
[12 142]
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[33 135]
[34 134]
[35 133]
[36 132]
[37 131]
[38 130]
[40 128]
[59 127]
[60 126]
[61 125]
[62 124]
[63 123]
[67 120]
[68 119]
[70 117]
[71 116]
[72 115]
[73 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
