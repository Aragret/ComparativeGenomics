%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[76.02405548 660.91998291]
[63.31341553 668.92590332]
[49.66651154 675.20422363]
[35.31686020 679.64746094]
[20.50999832 682.17962646]
[5.49929523 682.75738525]
[-9.45839691 681.37084961]
[-24.10713387 678.04376221]
[-38.19625473 672.83306885]
[-51.48467636 665.82788086]
[-63.74501801 657.14807129]
[-74.76748657 646.94213867]
[-84.36347961 635.38482666]
[-92.36878967 622.67382812]
[-98.64643097 609.02661133]
[-103.08900452 594.67675781]
[-105.62046814 579.86975098]
[-106.19752502 564.85900879]
[-104.81028748 549.90136719]
[-101.48249817 535.25280762]
[-96.27109528 521.16394043]
[-89.26526642 507.87585449]
[-80.58486938 495.61593628]
[-70.37845612 484.59393311]
[-58.82066727 474.99850464]
[-46.10926437 466.99380493]
[-32.46176147 460.71679688]
[-18.11168671 456.27493286]
[-3.30458570 453.74417114]
[11.70617199 453.16781616]
[26.66373253 454.55575562]
[29.98599243 439.92831421]
[33.30825043 425.30084229]
[36.63051224 410.67340088]
[39.73462296 395.99807739]
[34.58991623 382.02020264]
[44.83721542 369.96600342]
[47.72248840 355.24612427]
[50.60776138 340.52621460]
[53.49303436 325.80633545]
[40.88096237 313.44482422]
[38.19035721 295.83200073]
[46.68515396 279.99160767]
[63.13038635 272.35534668]
[65.57611084 257.55609131]
[60.01751328 243.73757935]
[69.90137482 231.38363647]
[72.34709930 216.58436584]
[74.79282379 201.78509521]
[77.23855591 186.98582458]
[79.68428040 172.18655396]
[82.13001251 157.38728333]
[80.11917877 150.27543640]
[84.72389221 142.38656616]
[87.38969421 127.62534332]
[90.05548859 112.86412811]
[84.00343323 102.91355133]
[86.15850830 91.46817017]
[95.41504669 84.40008545]
[98.30032349 69.68019867]
[101.18559265 54.96030426]
[104.07086182 40.24041367]
[95.52123260 27.21960449]
[98.65699768 12.33264256]
[111.12303925 4.26211405]
[106.18470764 -10.76863670]
[116.22563171 -21.76995850]
[119.11090088 -36.48984909]
[121.99617767 -51.20974350]
[115.46130371 -62.32991409]
[118.16748810 -74.53074646]
[128.13151550 -81.38965607]
[126.84574890 -90.43314362]
[131.39263916 -96.25959015]
[134.71490479 -110.88705444]
[138.03715515 -125.51451111]
[141.35942078 -140.14196777]
[144.46353149 -154.81727600]
[147.34880066 -169.53717041]
[150.23406982 -184.25706482]
[136.58164978 -190.63648987]
[124.85994720 -200.09237671]
[115.74759674 -212.07170105]
[109.77082062 -225.87548828]
[107.27307129 -240.69961548]
[108.39524841 -255.68164062]
[113.06779480 -269.95104980]
[121.01496887 -282.67968750]
[131.77114868 -293.12997437]
[144.70803833 -300.69757080]
[159.07147217 -304.94631958]
[174.02526855 -305.63342285]
[176.91055298 -320.35333252]
[179.79582214 -335.07321167]
[182.68109131 -349.79309082]
[185.56636047 -364.51300049]
[188.45164490 -379.23287964]
[174.56327820 -385.03790283]
[162.12796021 -393.52011108]
[151.65487671 -404.33212280]
[143.57292175 -417.03121948]
[138.21304321 -431.09735107]
[135.79470825 -445.95455933]
[136.41696167 -460.99444580]
[140.05432129 -475.60110474]
[146.55783081 -489.17642212]
[155.66117859 -501.16448975]
[166.99159241 -511.07443237]
[180.08508301 -518.50036621]
[194.40550232 -523.13830566]
[209.36643982 -524.79827881]
[224.35522461 -523.41235352]
[238.75811768 -519.03717041]
[251.98529053 -511.85202026]
[263.49511719 -502.15103149]
[272.81628418 -490.33154297]
[279.56707764 -476.87747192]
[283.47106934 -462.33981323]
[284.36837769 -447.31384277]
[282.22229004 -432.41488647]
[277.12063599 -418.25302124]
[269.27239990 -405.40817261]
[258.99890137 -394.40637207]
[246.72084045 -385.69805908]
[232.94100952 -379.63992310]
[218.22367859 -376.47994995]
[203.17152405 -376.34762573]
[200.28625488 -361.62771606]
[197.40098572 -346.90783691]
[194.51571655 -332.18792725]
[191.63043213 -317.46804810]
[188.74516296 -302.74816895]
[202.33302307 -296.46655273]
[214.02960205 -287.10974121]
[223.15228271 -275.21820068]
[229.16732788 -261.48052979]
[231.72111511 -246.69358826]
[230.66093445 -231.71612549]
[226.04406738 -217.41908264]
[218.13475037 -204.63487244]
[207.38906860 -194.10888672]
[194.42858887 -186.45610046]
[180.00448608 -182.12510681]
[164.95396423 -181.37178040]
[162.06869507 -166.65190125]
[159.18342590 -151.93200684]
[161.05709839 -147.53901672]
[160.19100952 -141.92234802]
[155.98687744 -136.81971741]
[152.66461182 -122.19225311]
[149.34236145 -107.56479645]
[146.02009583 -92.93733215]
[142.80682373 -78.28554535]
[149.13748169 -61.91821289]
[136.71606445 -48.32447052]
[133.83079529 -33.60457611]
[130.94552612 -18.88468552]
[136.09022522 -4.90680075]
[125.84292603 7.14738703]
[134.33972168 19.32687950]
[131.62333679 34.29604340]
[118.79075623 43.12568665]
[115.90548706 57.84557724]
[113.02021027 72.56546783]
[110.13494110 87.28536224]
[115.97894287 103.00871277]
[104.81670380 115.52992249]
[102.15090942 130.29113770]
[99.48511505 145.05235291]
[96.92928314 159.83300781]
[94.48355103 174.63227844]
[92.03782654 189.43154907]
[89.59209442 204.23081970]
[87.14636993 219.03009033]
[84.70064545 233.82936096]
[90.08430481 248.70642090]
[80.37538147 260.00183105]
[77.92965698 274.80108643]
[87.80599213 282.46435547]
[93.45421600 293.53530884]
[93.85711670 305.88510132]
[88.99957275 317.16806030]
[79.85977173 325.26727295]
[68.21292114 328.69161987]
[65.32765198 343.41149902]
[62.44237900 358.13137817]
[59.55710602 372.85128784]
[64.49543762 387.88204956]
[54.45451355 398.88336182]
[56.23239136 405.25131226]
[54.74998856 410.73760986]
[51.25797272 413.99563599]
[47.93571091 428.62310791]
[44.61345291 443.25057983]
[41.29119110 457.87802124]
[55.38080978 463.08740234]
[68.66989899 470.09133911]
[80.93106842 478.76998901]
[91.95450592 488.97482300]
[101.55159760 500.53125000]
[109.55812073 513.24151611]
[115.83706665 526.88812256]
[120.28099823 541.23754883]
[122.81387329 556.04431152]
[123.39235687 571.05499268]
[122.00654602 586.01275635]
[118.68014526 600.66162109]
[113.47009277 614.75097656]
[106.46552277 628.03973389]
[97.78630066 640.30047607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 195]
[32 194]
[33 193]
[34 192]
[35 189]
[37 187]
[38 186]
[39 185]
[40 184]
[44 178]
[45 177]
[47 175]
[48 174]
[49 173]
[50 172]
[51 171]
[52 170]
[54 169]
[55 168]
[56 167]
[59 165]
[60 164]
[61 163]
[62 162]
[65 159]
[67 157]
[68 156]
[69 155]
[72 153]
[74 152]
[75 151]
[76 150]
[77 149]
[78 146]
[79 145]
[80 144]
[92 132]
[93 131]
[94 130]
[95 129]
[96 128]
[97 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
