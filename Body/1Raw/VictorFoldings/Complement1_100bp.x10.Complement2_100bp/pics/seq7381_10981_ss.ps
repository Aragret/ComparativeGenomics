%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[168.65707397 144.55693054]
[155.37922668 137.57847595]
[142.10137939 130.60003662]
[128.82353210 123.62157440]
[115.54569244 116.64312744]
[105.66259003 122.05894470]
[94.39287567 122.07311249]
[84.49619293 116.68215179]
[78.39598846 107.20616913]
[77.58604431 95.96558380]
[64.52185822 88.59489441]
[51.45767212 81.22420502]
[33.05361176 81.83425140]
[24.72497940 66.38754272]
[11.55250359 59.21217346]
[-1.61997259 52.03680801]
[-14.79244804 44.86144257]
[-22.73779678 57.58953476]
[-31.42321205 69.82459259]
[-40.81818771 81.52362061]
[-50.88972473 92.64554596]
[-61.60244370 103.15128326]
[-72.91871643 113.00394440]
[-84.79878998 122.16892242]
[-97.20094299 130.61401367]
[-110.08161163 138.30955505]
[-123.39554596 145.22853088]
[-137.09597778 151.34661865]
[-151.13479614 156.64233398]
[-165.46267700 161.09707642]
[-180.02929688 164.69522095]
[-194.78349304 167.42408752]
[-209.67343140 169.27410889]
[-224.64682007 170.23880005]
[-239.65106201 170.31475830]
[-254.63343811 169.50172424]
[-269.54135132 167.80255127]
[-284.32241821 165.22319031]
[-298.92471313 161.77273560]
[-313.29696655 157.46327209]
[-327.38867188 152.30996704]
[-341.15036011 146.33090210]
[-354.53366089 139.54708862]
[-367.49157715 131.98236084]
[-379.97860718 123.66326141]
[-391.95086670 114.61904144]
[-403.36633301 104.88146210]
[-414.18484497 94.48471832]
[-424.36846924 83.46533966]
[-433.88143921 71.86203003]
[-442.69027710 59.71554184]
[-450.76406860 47.06854248]
[-458.07449341 33.96545792]
[-464.59582520 20.45230865]
[-470.30517578 6.57656479]
[-475.18249512 -7.61303568]
[-479.21063232 -22.06665230]
[-482.37545776 -36.73351288]
[-484.66586304 -51.56210327]
[-486.07376099 -66.50033569]
[-486.59426880 -81.49573517]
[-486.22549438 -96.49563599]
[-484.96875000 -111.44734192]
[-482.82849121 -126.29834747]
[-479.81219482 -140.99647522]
[-475.93048096 -155.49009705]
[-471.19696045 -169.72830200]
[-465.62826538 -183.66110229]
[-459.24395752 -197.23951721]
[-452.06646729 -210.41589355]
[-444.12100220 -223.14392090]
[-435.43548584 -235.37889099]
[-426.04040527 -247.07785034]
[-415.96878052 -258.19967651]
[-405.25595093 -268.70532227]
[-393.93960571 -278.55789185]
[-382.05944824 -287.72274780]
[-369.65722656 -296.16775513]
[-356.77648926 -303.86315918]
[-343.46249390 -310.78201294]
[-329.76199341 -316.89999390]
[-315.72314453 -322.19558716]
[-301.39523315 -326.65020752]
[-286.82858276 -330.24822998]
[-272.07434082 -332.97695923]
[-257.18438721 -334.82687378]
[-242.21099854 -335.79141235]
[-227.20675659 -335.86724854]
[-212.22438049 -335.05407715]
[-197.31648254 -333.35476685]
[-182.53544617 -330.77529907]
[-167.93316650 -327.32470703]
[-153.56095886 -323.01510620]
[-139.46928406 -317.86169434]
[-125.70766449 -311.88250732]
[-112.32441711 -305.09857178]
[-99.36656189 -297.53372192]
[-86.87961578 -289.21450806]
[-74.90743256 -280.17019653]
[-63.49206924 -270.43252563]
[-52.67362213 -260.03567505]
[-42.49009323 -249.01620483]
[-32.97725296 -237.41281128]
[-24.16851234 -225.26625061]
[-16.09481430 -212.61917114]
[-8.78451824 -199.51602173]
[-2.26330233 -186.00282288]
[3.44592762 -172.12702942]
[8.32311726 -157.93737793]
[12.35113525 -143.48373413]
[15.51583385 -128.81684875]
[17.80609512 -113.98823547]
[19.21387672 -99.04998779]
[19.73423195 -84.05458069]
[19.36533356 -69.05468750]
[18.10847855 -54.10298920]
[15.96807861 -39.25201035]
[12.95165443 -24.55390930]
[9.06980133 -10.06031799]
[4.33615351 4.17785454]
[-1.23266125 18.11059570]
[-7.61708212 31.68896484]
[5.55539370 38.86433029]
[18.72786903 46.03969955]
[31.90034485 53.21506500]
[43.58818436 50.09721375]
[54.62111282 55.96732330]
[58.82836151 68.16001892]
[71.89254761 75.53070831]
[84.95673370 82.90139771]
[102.09247589 77.32218170]
[117.91801453 85.94273376]
[122.52413940 103.36528015]
[135.80198669 110.34372711]
[149.07983398 117.32218170]
[162.35768127 124.30063629]
[175.63552856 131.27908325]
[183.69096375 118.61538696]
[192.76466370 106.66014862]
[202.79463196 95.49505615]
[213.71235657 85.19637299]
[225.44325256 75.83444977]
[237.90718079 67.47324371]
[251.01902771 60.16986465]
[264.68917847 53.97420502]
[278.82427979 48.92858887]
[293.32778931 45.06748199]
[308.10058594 42.41726303]
[323.04180908 40.99603271]
[338.04934692 40.81350327]
[353.02069092 41.87091827]
[367.85357666 44.16105270]
[382.44671631 47.66826630]
[396.70034790 52.36860275]
[410.51715088 58.22994995]
[423.80273438 65.21226501]
[436.46633911 73.26786041]
[448.42147827 82.34169769]
[459.58645630 92.37179565]
[469.88500977 103.28964233]
[479.24679565 115.02065277]
[487.60784912 127.48468781]
[494.91107178 140.59660339]
[501.10656738 154.26684570]
[506.15200806 168.40200806]
[510.01293945 182.90554810]
[512.66296387 197.67839050]
[514.08404541 212.61961365]
[514.26641846 227.62715149]
[513.20880127 242.59849548]
[510.91848755 257.43136597]
[507.41110229 272.02444458]
[502.71060181 286.27801514]
[496.84909058 300.09475708]
[489.86660767 313.38027954]
[481.81085205 326.04379272]
[472.73687744 337.99880981]
[462.70663452 349.16363525]
[451.78866577 359.46206665]
[440.05755615 368.82373047]
[427.59341431 377.18463135]
[414.48141479 384.48770142]
[400.81109619 390.68301392]
[386.67587280 395.72830200]
[372.17230225 399.58908081]
[357.39941406 402.23892212]
[342.45819092 403.65982056]
[327.45062256 403.84197998]
[312.47930908 402.78421021]
[297.64645386 400.49371338]
[283.05343628 396.98614502]
[268.79989624 392.28549194]
[254.98323059 386.42379761]
[241.69781494 379.44116211]
[229.03439331 371.38528442]
[217.07949829 362.31115723]
[205.91476440 352.28079224]
[195.61647034 341.36270142]
[186.25495911 329.63146973]
[177.89419556 317.16723633]
[170.59129333 304.05514526]
[164.39611816 290.38476562]
[159.35101318 276.24948120]
[155.49041748 261.74581909]
[152.84072876 246.97293091]
[151.42002869 232.03167725]
[151.23803711 217.02412415]
[152.29598999 202.05281067]
[154.58665466 187.22000122]
[158.09439087 172.62701416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 134]
[5 133]
[10 130]
[11 129]
[12 128]
[14 125]
[15 124]
[16 123]
[17 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
