%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-91.84873962 749.58294678]
[-105.29940796 742.77539062]
[-116.72961426 732.94610596]
[-125.47481537 720.66668701]
[-131.02658081 706.65093994]
[-133.06213379 691.71374512]
[-131.46313477 676.72351074]
[-126.32254028 662.55175781]
[-117.93922424 650.02246094]
[-106.80057526 639.86401367]
[-93.55419159 632.66705322]
[-78.97018433 628.84991455]
[-79.19351196 613.85156250]
[-79.41683960 598.85327148]
[-79.64016724 583.85491943]
[-79.86349487 568.85656738]
[-80.08682251 553.85821533]
[-86.52399445 567.40679932]
[-95.87502289 579.13531494]
[-107.64937592 588.42852783]
[-121.22940063 594.79901123]
[-135.90270996 597.91253662]
[-150.89956665 597.60577393]
[-165.43328857 593.89483643]
[-178.74143982 586.97436523]
[-190.12590027 577.20733643]
[-198.98948669 565.10626221]
[-204.86721802 551.30578613]
[-207.45075989 536.52996826]
[-206.60459900 521.55383301]
[-202.37309265 507.16308594]
[-194.97825623 494.11254883]
[-184.80798340 483.08688354]
[-172.39578247 474.66442871]
[-158.39279175 469.28707886]
[-143.53356934 467.23684692]
[-128.59759521 468.62130737]
[-114.36838531 473.36785889]
[-101.59238434 481.22747803]
[-90.93978882 491.78790283]
[-82.96940613 504.49508667]
[-78.09935760 518.68249512]
[-76.58512878 533.60754395]
[-71.33840942 519.55505371]
[-66.09169006 505.50259399]
[-60.84497452 491.45013428]
[-55.59825516 477.39764404]
[-50.35153580 463.34518433]
[-62.56725311 455.53262329]
[-72.89044189 445.34106445]
[-80.86579132 433.21649170]
[-86.14080048 419.69012451]
[-88.48137665 405.35531616]
[-87.78218079 390.84146118]
[-84.07141113 376.78631592]
[-77.50963593 363.80798340]
[-68.38288879 352.47781372]
[-57.09016037 343.29513550]
[-44.12598038 336.66537476]
[-30.05875397 332.88201904]
[-15.50584030 332.11370850]
[-1.10646260 334.39678955]
[4.34889460 320.42401123]
[9.80425167 306.45120239]
[15.25960827 292.47839355]
[20.71496582 278.50561523]
[26.17032242 264.53280640]
[31.62567902 250.56001282]
[19.52763367 242.56643677]
[9.35732746 232.22232056]
[1.56337988 219.98033142]
[-3.50966096 206.37693787]
[-5.63654947 192.00888062]
[-4.72134209 177.50704956]
[-0.80172032 163.50868225]
[5.95255089 150.62948608]
[15.24697590 139.43644714]
[26.67516899 130.42292786]
[39.73661804 123.98691559]
[53.85861588 120.41341400]
[68.42135620 119.86189270]
[82.78514862 122.35909271]
[88.44792938 108.46907043]
[86.73600006 94.59243774]
[97.66204071 85.86814117]
[103.32482910 71.97811890]
[101.36990356 56.27815628]
[113.33944702 47.41365814]
[119.00222778 33.52362823]
[124.24894714 19.47115898]
[129.07495117 5.26870251]
[126.18901062 -10.28706551]
[137.60971069 -19.84828758]
[142.43569946 -34.05074310]
[147.26170349 -48.25320053]
[151.44871521 -62.65698242]
[154.98838806 -77.23335266]
[158.52806091 -91.80973053]
[144.87553406 -98.14177704]
[132.72084045 -107.01588440]
[122.53117371 -118.09094238]
[114.69819641 -130.94125366]
[109.52297974 -145.07290649]
[107.20445251 -159.94268799]
[107.83173370 -174.97908020]
[111.38071442 -189.60408020]
[117.71497345 -203.25558472]
[126.59104156 -215.40884399]
[137.66773987 -225.59671021]
[150.51933289 -233.42761230]
[164.65180969 -238.60054016]
[179.52197266 -240.91665649]
[194.55825806 -240.28694153]
[209.18269348 -236.73559570]
[222.83317566 -230.39913940]
[234.98498535 -221.52110291]
[245.17106628 -210.44274902]
[252.99989319 -197.58988953]
[258.17053223 -183.45657349]
[260.48425293 -168.58602905]
[259.85208130 -153.54985046]
[256.29837036 -138.92599487]
[249.95970154 -125.27654266]
[241.07969666 -113.12615967]
[229.99969482 -102.94187164]
[217.14558411 -95.11512756]
[203.01142883 -89.94677734]
[188.14050293 -87.63547516]
[173.10443115 -88.27005768]
[169.56475830 -73.69368744]
[166.02508545 -59.11730957]
[179.36514282 -65.97608948]
[193.68940735 -61.52462769]
[200.79228210 -48.31292343]
[196.60493469 -33.90924072]
[183.52604675 -26.56466293]
[169.04782104 -30.48649979]
[161.46415710 -43.42720032]
[156.63815308 -29.22474480]
[151.81216431 -15.02229023]
[155.04328918 -0.48237589]
[143.27740479 10.09469986]
[138.45140076 24.29715538]
[139.56805420 26.86838722]
[139.73348999 30.03686333]
[138.71511841 33.44249725]
[136.41490173 36.64772797]
[132.89225769 39.18641663]
[127.22946930 53.07644272]
[129.58943176 67.78289795]
[117.21485138 77.64090729]
[111.55207062 91.53092957]
[113.26399994 105.40756226]
[102.33795929 114.13185883]
[96.67517090 128.02188110]
[109.41896057 136.91070557]
[119.86691284 148.40155029]
[127.49996948 161.91891479]
[131.93992615 176.78675842]
[132.96818542 192.26232910]
[130.53654480 207.57315063]
[124.76938629 221.95570374]
[115.95735931 234.69346619]
[104.54273224 245.15257263]
[91.09719086 252.81338501]
[76.29318237 257.29632568]
[60.87034225 258.38067627]
[45.59847641 256.01535034]
[40.14311981 269.98815918]
[34.68776321 283.96096802]
[29.23240662 297.93374634]
[23.77705002 311.90655518]
[18.32169151 325.87936401]
[12.86633492 339.85214233]
[25.74105263 348.55026245]
[36.35892868 359.88427734]
[44.19239044 373.28649902]
[48.85321426 388.08657837]
[50.11177444 403.54513550]
[47.90835571 418.89044189]
[42.35597229 433.35726929]
[33.73456955 446.22482300]
[22.47692680 456.85272217]
[9.14692783 464.71286011]
[-5.58869028 469.41574097]
[-20.99367905 470.72955322]
[-36.29906464 468.59191895]
[-41.54578400 482.64437866]
[-46.79250336 496.69683838]
[-52.03921890 510.74932861]
[-57.28593826 524.80181885]
[-62.53265762 538.85424805]
[-65.08848572 553.63488770]
[-64.86515808 568.63323975]
[-64.64183044 583.63159180]
[-64.41850281 598.62994385]
[-64.19517517 613.62823486]
[-63.97185135 628.62658691]
[-49.28066635 632.00781250]
[-35.82587051 638.80718994]
[-24.38970757 648.62951660]
[-15.63706398 660.90362549]
[-10.07680511 674.91601562]
[-8.03219700 689.85198975]
[-9.62211132 704.84320068]
[-14.75411129 719.01800537]
[-23.12982941 731.55242920]
[-34.26231384 741.71759033]
[-47.50433350 748.92260742]
[-62.08602142 752.74859619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[43 192]
[44 191]
[45 190]
[46 189]
[47 188]
[48 187]
[62 174]
[63 173]
[64 172]
[65 171]
[66 170]
[67 169]
[68 168]
[82 155]
[83 154]
[85 152]
[86 151]
[88 149]
[89 148]
[90 143]
[91 142]
[93 140]
[94 139]
[95 138]
[96 131]
[97 130]
[98 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
