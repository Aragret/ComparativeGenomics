%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[197.30780029 732.91540527]
[185.26911926 723.95886230]
[173.81658936 714.26409912]
[162.99540710 703.86932373]
[152.84826660 692.81555176]
[143.41522217 681.14648438]
[134.73348999 668.90814209]
[126.83735657 656.14880371]
[119.75797272 642.91888428]
[113.52326965 629.27050781]
[108.15786743 615.25756836]
[103.68292999 600.93542480]
[100.11612701 586.36053467]
[97.47152710 571.59045410]
[95.75956726 556.68341064]
[94.98701477 541.69836426]
[95.15690613 526.69433594]
[96.26856995 511.73059082]
[98.31763458 496.86618042]
[101.29599762 482.15975952]
[105.19190979 467.66937256]
[109.98999786 453.45220947]
[115.67132568 439.56436157]
[122.21347046 426.06066895]
[129.59060669 412.99438477]
[137.77363586 400.41714478]
[146.73023987 388.37850952]
[156.42509460 376.92602539]
[166.81993103 366.10488892]
[177.87371826 355.95779419]
[189.54283142 346.52481079]
[201.78121948 337.84317017]
[214.54060364 329.94708252]
[207.46348572 316.72155762]
[200.38638306 303.49603271]
[193.30928040 290.27050781]
[186.23217773 277.04498291]
[179.15507507 263.81945801]
[166.32826233 256.24832153]
[166.63923645 240.43016052]
[153.81242371 232.85900879]
[154.12339783 217.04086304]
[147.04629517 203.81533813]
[139.96919250 190.58981323]
[132.89208984 177.36427307]
[125.81497955 164.13874817]
[112.98816681 156.56761169]
[113.29914093 140.74945068]
[106.22203827 127.52392578]
[99.14493561 114.29840088]
[87.37055206 106.75814056]
[87.62953949 92.77870178]
[80.55243683 79.55317688]
[65.69400024 74.87720490]
[58.70521164 61.36382675]
[63.25460052 47.22739792]
[56.17749786 34.00186920]
[49.10039139 20.77634048]
[42.02328491 7.55081367]
[35.21519852 1.46083939]
[34.94092941 -5.92472553]
[28.06151772 -19.25415421]
[21.18210602 -32.58358383]
[21.23590660 -17.58368111]
[17.11693001 -3.16029549]
[9.15001488 9.54908276]
[-2.03653121 19.54213905]
[-15.56049347 26.03077888]
[-30.35531425 28.50328255]
[-45.25421143 26.76465797]
[-59.08219910 20.95201874]
[-70.74874115 11.52377605]
[-79.33377075 -0.77652186]
[-84.16022491 -14.97882080]
[-84.84748840 -29.96306801]
[-81.34133911 -44.54754639]
[-73.91830444 -57.58205795]
[-63.16378403 -68.03865051]
[-49.92592621 -75.09266663]
[-35.24872971 -78.18781281]
[-20.28969765 -77.07997894]
[-6.22855759 -71.85653687]
[5.82576799 -62.92942810]
[14.92432022 -50.99965668]
[12.25852489 -65.76087189]
[9.59272957 -80.52209473]
[6.92693377 -95.28330994]
[-8.11895466 -96.22388458]
[-22.50233078 -100.73851776]
[-35.38696671 -108.56472778]
[-46.02376556 -119.24752045]
[-53.79431534 -132.16580200]
[-58.24684906 -146.56852722]
[-59.12250137 -161.61833191]
[-56.37036133 -176.44024658]
[-50.15044022 -190.17254639]
[-40.82434845 -202.01684570]
[-28.93429947 -211.28453064]
[-15.17156219 -217.43681335]
[-0.33628380 -220.11598206]
[14.70903111 -219.16629028]
[29.08966827 -214.64292908]
[41.96955490 -206.80891418]
[52.59987640 -196.11967468]
[60.36259079 -183.19668579]
[64.80639648 -168.79125977]
[65.67292023 -153.74093628]
[62.91179657 -138.92068481]
[56.68355179 -125.19216156]
[47.35028076 -113.35351562]
[35.45461655 -104.09303284]
[21.68815041 -97.94910431]
[24.35394669 -83.18788910]
[27.01974297 -68.42666626]
[29.68553734 -53.66545105]
[34.51153564 -39.46299744]
[41.39094925 -26.13356781]
[48.27035904 -12.80413818]
[55.24881363 0.47370827]
[62.32591629 13.69923592]
[69.40302277 26.92476273]
[76.48012543 40.15029144]
[90.76542664 44.20809937]
[98.13101959 57.51984787]
[93.77796173 72.47607422]
[100.85506439 85.70159912]
[112.62944794 93.24185944]
[112.37046051 107.22129822]
[119.44756317 120.44682312]
[126.52467346 133.67234802]
[139.85768127 142.18946838]
[139.04051208 157.06164551]
[146.11761475 170.28717041]
[153.19471741 183.51269531]
[160.27182007 196.73823547]
[167.34892273 209.96376038]
[180.68193054 218.48088074]
[179.86476135 233.35305786]
[193.19776917 241.87017822]
[192.38059998 256.74234009]
[199.45770264 269.96786499]
[206.53480530 283.19338989]
[213.61190796 296.41894531]
[220.68902588 309.64447021]
[227.76612854 322.86999512]
[241.41439819 316.63507080]
[255.42723083 311.26943970]
[269.74932861 306.79428101]
[284.32415771 303.22726440]
[299.09420776 300.58242798]
[314.00119019 298.87023926]
[328.98623657 298.09744263]
[343.99026489 298.26708984]
[358.95404053 299.37854004]
[373.81848145 301.42736816]
[388.52496338 304.40548706]
[403.01541138 308.30117798]
[417.23263550 313.09906006]
[431.12057495 318.78015137]
[444.62435913 325.32208252]
[457.69073486 332.69903564]
[470.26812744 340.88186646]
[482.30691528 349.83828735]
[493.75955200 359.53295898]
[504.58084106 369.92761230]
[514.72808838 380.98123169]
[524.16125488 392.65020752]
[532.84313965 404.88845825]
[540.73937988 417.64770508]
[547.81890869 430.87759399]
[554.05377197 444.52590942]
[559.41931152 458.53875732]
[563.89440918 472.86087036]
[567.46136475 487.43572998]
[570.10607910 502.20581055]
[571.81823730 517.11279297]
[572.59094238 532.09783936]
[572.42120361 547.10186768]
[571.30969238 562.06561279]
[569.26074219 576.93005371]
[566.28253174 591.63653564]
[562.38677979 606.12695312]
[557.58886719 620.34417725]
[551.90765381 634.23205566]
[545.36566162 647.73583984]
[537.98864746 660.80218506]
[529.80578613 673.37951660]
[520.84930420 685.41821289]
[511.15454102 696.87084961]
[500.75982666 707.69207764]
[489.70614624 717.83929443]
[478.03713989 727.27239990]
[465.79882812 735.95416260]
[453.03955078 743.85034180]
[439.80963135 750.92980957]
[426.16128540 757.16461182]
[412.14840698 762.53009033]
[397.82626343 767.00506592]
[383.25137329 770.57196045]
[368.48132324 773.21661377]
[353.57431030 774.92864990]
[338.58923340 775.70129395]
[323.58520508 775.53149414]
[308.62145996 774.41992188]
[293.75704956 772.37091064]
[279.05059814 769.39263916]
[264.56021118 765.49676514]
[250.34300232 760.69879150]
[236.45513916 755.01751709]
[222.95141602 748.47546387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 145]
[34 144]
[35 143]
[36 142]
[37 141]
[38 140]
[40 138]
[42 136]
[43 135]
[44 134]
[45 133]
[46 132]
[48 130]
[49 129]
[50 128]
[52 126]
[53 125]
[56 122]
[57 121]
[58 120]
[59 119]
[61 118]
[62 117]
[63 116]
[84 115]
[85 114]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
