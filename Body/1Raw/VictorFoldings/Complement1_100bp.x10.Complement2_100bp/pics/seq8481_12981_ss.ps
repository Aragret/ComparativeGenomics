%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[132.68305969 724.78393555]
[118.29089355 720.52581787]
[104.30551147 715.07830811]
[90.82501984 708.47955322]
[77.94397736 700.77600098]
[65.75273895 692.02154541]
[54.33681107 682.27764893]
[43.77627563 671.61267090]
[34.14520645 660.10144043]
[25.51115990 647.82464600]
[17.93470001 634.86840820]
[11.46897030 621.32360840]
[6.15932274 607.28533936]
[2.04300213 592.85192871]
[-0.85111791 578.12475586]
[-2.50273728 563.20703125]
[-2.90027046 548.20336914]
[-2.04092956 533.21911621]
[0.06925820 518.35931396]
[3.41549087 503.72821045]
[7.97429657 489.42843628]
[13.71369839 475.56027222]
[20.59343719 462.22103882]
[28.56525803 449.50424194]
[37.57323837 437.49911499]
[47.55419922 426.28988647]
[58.43812561 415.95516968]
[70.14867401 406.56741333]
[82.60370636 398.19253540]
[95.71585083 390.88922119]
[109.39314270 384.70874023]
[123.53963470 379.69445801]
[138.05610657 375.88146973]
[152.84071350 373.29660034]
[151.50248718 358.35641479]
[150.16424561 343.41622925]
[148.82601929 328.47604370]
[147.48777771 313.53585815]
[146.14955139 298.59567261]
[143.04544067 283.92037964]
[138.21943665 269.71792603]
[133.39344788 255.51547241]
[121.97274780 245.95423889]
[124.85868073 230.39846802]
[120.03268433 216.19601440]
[108.61199188 206.63479614]
[111.49792480 191.07902527]
[106.67192841 176.87657166]
[101.84593201 162.67411804]
[98.78874969 177.35926819]
[90.40814209 189.79974365]
[77.94732666 198.15007019]
[63.25478363 201.17153931]
[48.51007080 198.41592407]
[35.90047836 190.29199219]
[27.29656029 178.00489807]
[23.97465897 163.37736511]
[26.42755890 148.57928467]
[34.29138947 135.80586243]
[46.39959335 126.95196533]
[60.95598984 123.33102417]
[75.80123138 125.48017883]
[88.73310852 133.08061218]
[97.83241272 145.00312805]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[85.56227875 107.47872162]
[84.26443481 95.90474701]
[91.03981781 86.43186951]
[89.47929382 71.51325989]
[87.91877747 56.59465790]
[84.85128021 52.37120438]
[83.81425476 47.84595490]
[84.58265686 43.84288025]
[86.63700104 40.97721863]
[85.74417877 26.00381088]
[84.85136414 11.03040504]
[83.95854950 -3.94300056]
[83.06573486 -18.91640663]
[74.52075195 -32.23157883]
[81.48679352 -45.39682007]
[69.35289001 -51.93587494]
[62.09213638 -63.52466202]
[61.51040649 -77.07940674]
[67.65279388 -89.05501556]
[78.81973267 -96.37222290]
[70.47394562 -109.81314087]
[77.63522339 -122.87320709]
[76.96543884 -137.85824585]
[76.29565430 -152.84329224]
[75.62586975 -167.82832336]
[74.95608521 -182.81336975]
[60.19358063 -185.89869690]
[46.66252136 -192.55912781]
[35.21348190 -202.37596130]
[26.56615829 -214.73211670]
[21.26412964 -228.85087585]
[19.64068413 -243.84471130]
[21.79787445 -258.77111816]
[27.60009575 -272.69177246]
[36.68261719 -284.73165894]
[48.47450256 -294.13391113]
[62.23450851 -300.30749512]
[77.09766388 -302.86431885]
[92.12966156 -301.64370728]
[106.38557434 -296.72235107]
[118.96926117 -288.40960693]
[129.08970642 -277.22805786]
[136.11073303 -263.88055420]
[139.59098816 -249.20613098]
[139.31170654 -234.12724304]
[135.29043579 -219.59176636]
[127.77995300 -206.51339722]
[117.25238800 -195.71427917]
[104.36949921 -187.87322998]
[89.94112396 -183.48315430]
[90.61090851 -168.49810791]
[91.28069305 -153.51307678]
[91.95047760 -138.52803040]
[92.62026215 -123.54299164]
[100.91815186 -111.17390442]
[93.80477905 -97.04200745]
[107.78573608 -88.43909454]
[113.94569397 -73.04374695]
[109.67308807 -56.84973526]
[96.46019745 -46.28963470]
[104.94132233 -34.04545975]
[98.03913879 -19.80922127]
[98.93195343 -4.83581638]
[99.82476807 10.13758945]
[100.71759033 25.11099434]
[101.61040497 40.08440018]
[102.83737946 55.03413391]
[104.39790344 69.95273590]
[105.95842743 84.87134552]
[116.15846252 98.18807983]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.72612762 143.22065735]
[116.04838562 157.84811401]
[120.87438202 172.05058289]
[125.70038605 186.25303650]
[137.46626282 196.83010864]
[134.23513794 211.37002563]
[139.06114197 225.57247925]
[150.82702637 236.14955139]
[147.59590149 250.68946838]
[152.42189026 264.89193726]
[157.24789429 279.09439087]
[159.89656067 264.33007812]
[167.37527466 251.32742310]
[178.80543518 241.61396790]
[192.84425354 236.33082581]
[207.84246826 236.09866333]
[222.03807068 240.94476318]
[233.76341248 250.29977417]
[241.64099121 263.06472778]
[244.74536133 277.73995972]
[242.71183777 292.60150146]
[235.77929688 305.90335083]
[224.76217651 316.08288574]
[210.95474243 321.94421387]
[195.97911072 322.79873657]
[181.59457397 318.54608154]
[169.49102783 309.68582153]
[161.08973694 297.25744629]
[162.42796326 312.19763184]
[163.76620483 327.13781738]
[165.10443115 342.07800293]
[166.44267273 357.01818848]
[167.78089905 371.95837402]
[182.78955078 371.87457275]
[197.75257874 373.04699707]
[212.56501770 375.46734619]
[227.12297058 379.11874390]
[241.32432556 383.97549438]
[255.06945801 390.00354004]
[268.26199341 397.16064453]
[280.80932617 405.39657593]
[292.62350464 414.65356445]
[303.62164307 424.86666870]
[313.72659302 435.96426392]
[322.86746216 447.86853027]
[330.98013306 460.49591064]
[338.00772095 473.75787354]
[343.90090942 487.56137085]
[348.61840820 501.80960083]
[352.12704468 516.40258789]
[354.40228271 531.23803711]
[355.42813110 546.21179199]
[355.19741821 561.21893311]
[353.71170044 576.15411377]
[350.98147583 590.91253662]
[347.02584839 605.39080811]
[341.87255859 619.48724365]
[335.55780029 633.10308838]
[328.12582397 646.14270020]
[319.62875366 658.51470947]
[310.12625122 670.13232422]
[299.68490601 680.91400146]
[288.37799072 690.78417969]
[276.28482056 699.67358398]
[263.49020386 707.51989746]
[250.08389282 714.26806641]
[236.15992737 719.87072754]
[221.81597900 724.28857422]
[207.15264893 727.49066162]
[192.27281189 729.45452881]
[177.28080750 730.16638184]
[162.28182983 729.62121582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 171]
[35 170]
[36 169]
[37 168]
[38 167]
[39 166]
[40 149]
[41 148]
[42 147]
[44 145]
[45 144]
[47 142]
[48 141]
[49 140]
[64 139]
[65 138]
[66 137]
[69 135]
[70 134]
[71 133]
[75 132]
[76 131]
[77 130]
[78 129]
[79 128]
[81 126]
[86 122]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
