%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[137.72436523 471.26055908]
[139.19941711 456.31222534]
[142.57397461 441.67526245]
[147.79260254 427.58999634]
[154.76960754 414.28778076]
[163.39044189 401.98696899]
[173.51351929 390.88961792]
[184.97262573 381.17791748]
[197.57958984 373.01135254]
[191.10009766 359.48300171]
[184.62060547 345.95465088]
[178.14111328 332.42630005]
[172.14826965 346.17715454]
[158.23838806 351.79098511]
[144.37968445 346.05197144]
[138.51104736 332.24765015]
[143.99430847 318.28579712]
[157.68840027 312.16433716]
[171.74801636 317.38934326]
[166.50131226 303.33688354]
[161.25459290 289.28439331]
[155.97003174 284.11764526]
[156.03607178 274.98345947]
[150.99914551 260.85443115]
[145.85719299 246.76329041]
[140.61047363 232.71081543]
[135.36375427 218.65835571]
[130.11703491 204.60588074]
[124.87032318 190.55340576]
[119.62360382 176.50093079]
[107.26790619 172.84494019]
[99.15280151 162.58691406]
[98.41670990 149.33291626]
[105.55207825 137.90919495]
[100.51515961 123.78017426]
[95.47824860 109.65114594]
[89.20088196 96.02782440]
[81.73314667 83.01887512]
[74.26540375 70.00992584]
[66.79766083 57.00096893]
[59.32992172 43.99201584]
[51.86217880 30.98306465]
[52.26033020 45.97777939]
[47.83101654 60.30890656]
[39.04167175 72.46404266]
[26.81985474 81.16043854]
[12.45536709 85.48033142]
[-2.53587532 84.96783447]
[-16.57180977 79.67704010]
[-28.17119217 70.16629028]
[-36.10990906 57.43928146]
[-39.55017471 42.83912277]
[-38.12892151 27.90660667]
[-31.99614334 14.21759605]
[-21.79904556 3.21672392]
[-8.61375141 -3.93506122]
[6.16826248 -6.48301411]
[20.98701477 -4.15824318]
[34.27864838 2.79391265]
[44.64057541 13.63993454]
[40.66847610 -0.82458919]
[35.37831116 -8.27119446]
[36.74663544 -15.53407764]
[32.99033737 -30.05613708]
[29.23403549 -44.57819748]
[25.47773552 -59.10025406]
[21.72143364 -73.62231445]
[17.96513367 -88.14437103]
[13.56413555 -102.48422241]
[8.52721977 -116.61325073]
[3.49030328 -130.74227905]
[-1.65165651 -144.83341980]
[-6.89837456 -158.88589478]
[-12.14509296 -172.93836975]
[-17.39181137 -186.99082947]
[-32.14999390 -184.11927795]
[-47.17954254 -183.71614075]
[-62.07044220 -185.79244995]
[-76.41645050 -190.29153442]
[-89.82621002 -197.09068298]
[-101.93387604 -206.00437927]
[-112.40915680 -216.78948975]
[-120.96627808 -229.15174866]
[-127.37178802 -242.75393677]
[-131.45094299 -257.22494507]
[-133.09246826 -272.17001343]
[-132.25155640 -287.18145752]
[-128.95118713 -301.84970093]
[-123.28135681 -315.77459717]
[-115.39677429 -328.57626343]
[-105.51251984 -339.90551758]
[-93.89824677 -349.45321655]
[-80.87080383 -356.95889282]
[-66.78558350 -362.21786499]
[-52.02685165 -365.08657837]
[-36.99722290 -365.48681641]
[-22.10672569 -363.40762329]
[-7.76158190 -358.90576172]
[5.64686298 -352.10406494]
[17.75281715 -343.18801880]
[28.22602081 -332.40090942]
[36.78075409 -320.03698730]
[43.18364716 -306.43356323]
[47.26001358 -291.96176147]
[48.89865112 -277.01638794]
[48.05485916 -262.00512695]
[44.75165176 -247.33750916]
[39.07915115 -233.41369629]
[31.19209671 -220.61352539]
[21.30566025 -209.28620911]
[9.68955040 -199.74073792]
[-3.33933973 -192.23754883]
[1.90737844 -178.18508911]
[7.15409660 -164.13261414]
[12.40081501 -150.08013916]
[17.68536568 -144.91339111]
[17.61933327 -135.77919006]
[22.65624809 -121.65016937]
[27.69316483 -107.52114105]
[35.08406067 -120.57390594]
[49.50249481 -124.71017456]
[62.68893814 -117.56050110]
[67.08959198 -103.22055054]
[60.18356323 -89.90489197]
[45.92694092 -85.24134064]
[32.48719406 -91.90067291]
[36.24349213 -77.37861633]
[39.99979401 -62.85655594]
[43.75609589 -48.33449554]
[47.51239395 -33.81243896]
[51.26869583 -19.29037857]
[55.13300323 -4.79668522]
[59.10509872 9.66783810]
[64.87113190 23.51532364]
[72.33887482 36.52427673]
[79.80661011 49.53322983]
[87.27435303 62.54218292]
[94.74209595 75.55113220]
[102.20983887 88.56008911]
[102.98385620 73.58007050]
[110.10472870 60.37805939]
[122.19754028 51.50315475]
[136.92735291 48.66896439]
[151.45007324 52.42272186]
[162.96157837 62.03963852]
[169.23919678 75.66283417]
[169.07080078 90.66189575]
[162.48892212 104.14072418]
[150.76440430 113.49677277]
[136.16107178 116.92353821]
[121.49860382 113.75936890]
[109.60727692 104.61422729]
[114.64418793 118.74325562]
[119.68110657 132.87228394]
[135.62089539 140.07939148]
[141.30465698 156.26611328]
[133.67607117 171.25422668]
[138.92279053 185.30668640]
[144.16950989 199.35916138]
[149.41622925 213.41163635]
[154.66294861 227.46411133]
[159.90966797 241.51657104]
[165.84309387 248.46151733]
[165.12818909 255.81752014]
[170.16510010 269.94653320]
[175.30705261 284.03768921]
[180.55377197 298.09014893]
[185.80049133 312.14263916]
[191.66944885 325.94680786]
[198.14895630 339.47515869]
[204.62844849 353.00350952]
[211.10794067 366.53186035]
[225.37327576 361.82772827]
[240.12304688 358.98651123]
[255.11505127 358.05484009]
[270.10311890 359.04797363]
[284.84112549 361.94967651]
[299.08703613 366.71221924]
[312.60693359 373.25747681]
[325.17883301 381.47790527]
[336.59628296 391.23855591]
[346.67178345 402.37915039]
[355.23989868 414.71673584]
[362.15991211 428.04870605]
[367.31820679 442.15615845]
[370.63009644 456.80743408]
[372.04116821 471.76193237]
[371.52825928 486.77410889]
[369.09979248 501.59744263]
[364.79565430 515.98852539]
[358.68649292 529.71099854]
[350.87265015 542.53955078]
[341.48245239 554.26354980]
[330.67007446 564.69049072]
[318.61306763 573.64910889]
[305.50939941 580.99230957]
[291.57427979 586.59948730]
[277.03652954 590.37866211]
[262.13485718 592.26763916]
[247.11395264 592.23553467]
[232.22050476 590.28277588]
[217.69905090 586.44146729]
[203.78805542 580.77465820]
[190.71594238 573.37542725]
[178.69738770 564.36529541]
[167.92971802 553.89221191]
[158.58978271 542.12811279]
[150.83091736 529.26623535]
[144.78054810 515.51770020]
[140.53804016 501.10836792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 172]
[10 171]
[11 170]
[12 169]
[19 168]
[20 167]
[21 166]
[23 165]
[24 164]
[25 162]
[26 161]
[27 160]
[28 159]
[29 158]
[30 157]
[34 154]
[35 153]
[36 152]
[37 139]
[38 138]
[39 137]
[40 136]
[41 135]
[42 134]
[60 133]
[61 132]
[63 131]
[64 130]
[65 129]
[66 128]
[67 127]
[68 126]
[69 119]
[70 118]
[71 117]
[72 115]
[73 114]
[74 113]
[75 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
