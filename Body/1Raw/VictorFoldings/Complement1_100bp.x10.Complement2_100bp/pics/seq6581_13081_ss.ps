%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[114.14313507 638.79675293]
[102.84723663 628.90637207]
[92.64706421 617.88934326]
[83.65438843 605.86645508]
[75.96772003 592.96948242]
[69.67129517 579.33959961]
[64.83408356 565.12628174]
[61.50909805 550.48516846]
[59.73276138 535.57672119]
[59.52454376 520.56420898]
[60.88671875 505.61224365]
[63.80436325 490.88455200]
[68.24551392 476.54251099]
[74.16150665 462.74328613]
[81.48752594 449.63803101]
[90.14330292 437.37039185]
[100.03399658 426.07473755]
[111.05124664 415.87484741]
[123.07433319 406.88244629]
[135.97152710 399.19610596]
[149.60153198 392.89999390]
[163.81498718 388.06314087]
[160.49273682 373.43566895]
[157.17047119 358.80822754]
[153.63079834 344.23184204]
[149.87449646 329.70977783]
[146.11819458 315.18771362]
[142.36189270 300.66564941]
[138.60559082 286.14358521]
[124.64431763 284.72158813]
[111.98005676 278.60647583]
[102.14290619 268.51437378]
[96.32913208 255.64340210]
[95.25565338 241.53118896]
[99.07176208 227.87138367]
[107.33869171 216.31028748]
[119.08000946 208.24847412]
[115.54033661 193.67210388]
[112.00066376 179.09573364]
[101.47851562 168.55372620]
[105.74076843 153.31745911]
[91.01762390 145.18925476]
[86.64248657 128.60090637]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[81.95457458 61.07690430]
[77.76756287 46.67312241]
[73.58055115 32.26934052]
[58.52283859 32.86177063]
[43.76986313 29.83489227]
[30.17831802 23.36889839]
[18.53639412 13.84357452]
[9.51806927 1.81597245]
[3.64409232 -12.01215649]
[1.25191259 -26.83530617]
[2.47629738 -41.79113770]
[7.24174786 -56.01064301]
[15.26713753 -68.66864014]
[26.08229637 -79.03166962]
[39.05554962 -86.50048065]
[27.77369308 -97.59237671]
[31.65083694 -111.97351074]
[27.46382523 -126.37729645]
[23.27681541 -140.78108215]
[19.08980370 -155.18486023]
[14.36966896 -169.42285156]
[9.12295151 -183.47532654]
[3.87623310 -197.52778625]
[-1.47495282 -211.54081726]
[-6.93030977 -225.51361084]
[-12.38566685 -239.48640442]
[-17.84102440 -253.45921326]
[-32.53987885 -250.30645752]
[-47.55413055 -249.55253601]
[-62.49487686 -251.21696472]
[-76.97511292 -255.25663757]
[-90.61976624 -261.56689453]
[-103.07540894 -269.98434448]
[-114.01940918 -280.29089355]
[-123.16828918 -292.21960449]
[-130.28507996 -305.46148682]
[-135.18542480 -319.67355347]
[-137.74240112 -334.48767090]
[-137.88978577 -349.52011108]
[-135.62373352 -364.38150024]
[-131.00297546 -378.68692017]
[-124.14717865 -392.06579590]
[-115.23393250 -404.17160034]
[-104.49410248 -414.69073486]
[-92.20588684 -423.35073853]
[-78.68757629 -429.92733765]
[-64.28932953 -434.25012207]
[-49.38409042 -436.20715332]
[-34.35794067 -435.74774170]
[-19.60009956 -432.88378906]
[-5.49282598 -427.68948364]
[7.59846592 -420.29931641]
[19.33468056 -410.90478516]
[29.41182137 -399.74917603]
[37.56886673 -387.12149048]
[43.59453201 -373.34878540]
[47.33273315 -358.78781128]
[48.68664169 -343.81573486]
[47.62119293 -328.82034302]
[44.16398239 -314.19012451]
[38.40456009 -300.30395508]
[30.49210739 -287.52157593]
[20.63157654 -276.17407227]
[9.07838058 -266.55535889]
[-3.86822629 -258.91455078]
[1.58713090 -244.94177246]
[7.04248810 -230.96896362]
[12.49784470 -216.99617004]
[17.85873413 -211.90867615]
[17.92870522 -202.77450562]
[23.17542267 -188.72203064]
[28.42214012 -174.66957092]
[36.92872238 -187.02424622]
[51.88027573 -188.22885132]
[62.25506973 -177.39540100]
[60.40519333 -162.50990295]
[47.69430542 -154.54539490]
[33.49358749 -159.37187195]
[37.68059540 -144.96809387]
[41.86760712 -130.56430054]
[46.05461884 -116.16052246]
[57.03699493 -106.09887695]
[53.45933151 -90.68749237]
[68.41481018 -91.33723450]
[83.10001373 -88.38687134]
[96.66047668 -82.00362396]
[108.30608368 -72.55461884]
[117.35716248 -60.58574677]
[123.28412628 -46.79011917]
[125.73846436 -31.96793938]
[124.57321167 -16.98009109]
[119.85179138 -2.69813156]
[111.84451294 10.04638577]
[101.01316071 20.51033211]
[87.98432922 28.08232880]
[92.17134094 42.48611069]
[96.35835266 56.88989258]
[100.03810120 59.93431473]
[101.84442902 65.32265472]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[122.63233185 115.39067841]
[129.45812988 126.77570343]
[128.49467468 139.82000732]
[120.31713867 149.77778625]
[131.09246826 161.36239624]
[126.57704163 175.55606079]
[130.11671448 190.13243103]
[133.65638733 204.70881653]
[149.55871582 207.08033752]
[163.30043030 215.35292053]
[172.79260254 228.23448181]
[176.60554504 243.73497009]
[174.18411255 259.47384644]
[165.92834473 273.04553223]
[153.12765503 282.38729858]
[156.88395691 296.90936279]
[160.64025879 311.43142700]
[164.39656067 325.95349121]
[168.15286255 340.47552490]
[172.50704956 345.45074463]
[173.53997803 351.03912354]
[171.79792786 355.48596191]
[175.12019348 370.11340332]
[178.44244385 384.74087524]
[193.35078430 382.96343994]
[208.36325073 382.75415039]
[223.31533813 384.11523438]
[238.04324341 387.03179932]
[252.38560486 391.47189331]
[266.18527222 397.38690186]
[279.29104614 404.71194458]
[291.55932617 413.36682129]
[302.85568237 423.25671387]
[313.05639648 434.27322388]
[322.04965210 446.29565430]
[329.73693848 459.19229126]
[336.03405762 472.82180786]
[340.87194824 487.03494263]
[344.19763184 501.67587280]
[345.97470093 516.58428955]
[346.18365479 531.59674072]
[344.82220459 546.54876709]
[341.90527344 561.27661133]
[337.46481323 575.61889648]
[331.54949951 589.41839600]
[324.22412109 602.52398682]
[315.56893921 614.79205322]
[305.67877197 626.08819580]
[294.66201782 636.28863525]
[282.63937378 645.28161621]
[269.74255371 652.96856689]
[256.11285400 659.26531982]
[241.89964294 664.10290527]
[227.25860596 667.42822266]
[212.35018921 669.20495605]
[197.33772278 669.41351318]
[182.38568115 668.05169678]
[167.65791321 665.13439941]
[153.31578064 660.69360352]
[139.51640320 654.77795410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 174]
[23 173]
[24 172]
[25 169]
[26 168]
[27 167]
[28 166]
[29 165]
[37 158]
[38 157]
[39 156]
[41 154]
[44 150]
[46 148]
[47 147]
[48 144]
[49 143]
[50 142]
[62 130]
[64 128]
[65 127]
[66 126]
[67 125]
[68 119]
[69 118]
[70 117]
[71 115]
[72 114]
[73 113]
[74 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
