%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[105.73320007 609.49884033]
[104.55452728 594.50616455]
[105.99740601 579.53656006]
[110.01799011 565.04492188]
[116.49410248 551.47180176]
[125.22894287 539.22949219]
[135.95706177 528.69012451]
[148.35244751 520.17388916]
[162.03842163 513.93969727]
[158.28211975 499.41766357]
[147.60418701 489.03347778]
[151.63911438 473.73544312]
[147.88281250 459.21337891]
[144.12651062 444.69131470]
[140.37020874 430.16925049]
[136.61390686 415.64721680]
[134.26974487 414.10998535]
[132.39323425 411.55160522]
[131.37640381 408.14550781]
[131.54125977 404.20376587]
[133.09382629 400.14871216]
[130.20854187 385.42883301]
[117.97863007 372.84329224]
[124.09104919 355.47320557]
[120.98693848 340.79788208]
[117.88282776 326.12258911]
[107.67922211 315.27197266]
[112.39321899 300.16937256]
[109.28910828 285.49407959]
[106.18500519 270.81875610]
[103.08089447 256.14346313]
[96.92945862 269.82409668]
[84.81991577 278.67614746]
[69.91764832 280.38571167]
[56.11809158 274.50592041]
[47.02840805 262.57369995]
[45.02462006 247.70814514]
[50.63051224 233.79505920]
[62.38071823 224.47128296]
[77.20376587 222.17405701]
[91.22494507 227.50382996]
[100.77877808 239.06665039]
[99.88595581 224.09323120]
[98.99314117 209.11982727]
[87.71708679 199.45617676]
[86.59834290 184.28373718]
[96.81092834 172.52189636]
[95.91811371 157.54849243]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[90.00129700 58.31773376]
[89.10848236 43.34432602]
[87.65906525 28.41451836]
[85.65505219 13.54899025]
[83.65103912 -1.31653750]
[76.49913025 11.86868858]
[63.76473618 19.79555511]
[48.77659607 20.39199829]
[35.45257950 13.50211048]
[27.27554703 0.92689115]
[26.38295937 -14.04652786]
[33.00813293 -27.50413132]
[45.41926575 -35.92813110]
[60.37211609 -37.11651993]
[73.95804596 -30.75864792]
[82.62541199 -18.51728439]
[82.84873962 -33.51562119]
[83.07206726 -48.51395798]
[83.29539490 -63.51229858]
[83.51872253 -78.51063538]
[83.07212067 -93.50398254]
[81.95646667 -108.46244049]
[73.21418762 -121.64891052]
[79.98345184 -134.91641235]
[78.86779785 -149.87486267]
[70.12551880 -163.06134033]
[76.89478302 -176.32882690]
[75.77912903 -191.28727722]
[67.03684998 -204.47375488]
[73.80611420 -217.74125671]
[72.69046021 -232.69970703]
[71.57481384 -247.65815735]
[70.45916748 -262.61660767]
[69.34351349 -277.57507324]
[60.60123825 -290.76153564]
[67.37049866 -304.02902222]
[66.25484467 -318.98748779]
[51.40702438 -321.63192749]
[37.68365860 -327.88653564]
[25.94741249 -337.35812378]
[16.93603516 -349.45135498]
[11.21598816 -363.40597534]
[9.14684010 -378.34484863]
[10.85865879 -393.32885742]
[16.24383926 -407.41610718]
[24.96386147 -419.72106934]
[36.47058105 -429.47021484]
[50.04067230 -436.05075073]
[64.82111359 -439.04898071]
[79.88278198 -438.27645874]
[94.27890778 -433.78173828]
[107.10452271 -425.84735107]
[117.55339813 -414.97207642]
[124.96871948 -401.83953857]
[128.88433838 -387.27523804]
[129.05413818 -372.19473267]
[125.46741486 -357.54595947]
[118.34966278 -344.24978638]
[108.14829254 -333.14199829]
[95.50457001 -324.92086792]
[81.21330261 -320.10314941]
[82.32894897 -305.14468384]
[90.99143219 -293.02813721]
[84.30197144 -278.69070435]
[85.41761780 -263.73226929]
[86.53326416 -248.77380371]
[87.64891815 -233.81535339]
[88.76456451 -218.85690308]
[97.42704773 -206.74035645]
[90.73758698 -192.40293884]
[91.85323334 -177.44447327]
[100.51571655 -165.32792664]
[93.82625580 -150.99050903]
[94.94190216 -136.03205872]
[103.60438538 -123.91551208]
[96.91492462 -109.57808685]
[98.03057098 -94.61963654]
[108.61408234 -105.24927521]
[123.61311340 -105.41979218]
[134.43553162 -95.03350067]
[134.88179016 -80.04014587]
[124.69622040 -69.02858734]
[109.71360016 -68.30676270]
[98.51705933 -78.28730774]
[98.29373169 -63.28897095]
[98.07040405 -48.29063034]
[97.84707642 -33.29229355]
[97.62374878 -18.29395676]
[98.51656342 -3.32055116]
[100.52057648 11.54497719]
[102.52459717 26.41050529]
[113.55626678 16.24674034]
[128.40328979 18.38357735]
[136.12097168 31.24582100]
[131.02014160 45.35190201]
[116.86093903 50.30334091]
[104.08188629 42.45151138]
[104.97470856 57.42491913]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[110.89151764 156.65567017]
[111.78433228 171.62907410]
[123.32222748 182.09400940]
[124.01436615 197.29188538]
[113.96654510 208.22702026]
[114.85936737 223.20042419]
[115.75218201 238.17382812]
[117.75619507 253.03935242]
[120.86030579 267.71466064]
[123.96441650 282.38995361]
[127.06852722 297.06527710]
[137.49415588 308.96554565]
[132.55813599 323.01849365]
[135.66224670 337.69378662]
[138.76635742 352.36907959]
[149.13117981 360.04586792]
[151.41447449 372.33288574]
[144.92843628 382.54354858]
[147.81372070 397.26342773]
[151.13597107 411.89089966]
[154.89227295 426.41296387]
[158.64857483 440.93502808]
[162.40487671 455.45709229]
[166.16117859 469.97912598]
[177.10778809 481.40203857]
[172.80418396 495.66134644]
[176.56048584 510.18341064]
[191.55281067 508.99963379]
[206.52290344 510.43740845]
[221.01585388 514.45306396]
[234.59123230 520.92456055]
[246.83650208 529.65521240]
[257.37951660 540.37976074]
[265.89993286 552.77227783]
[272.13879395 566.45611572]
[275.90649414 581.01550293]
[277.08859253 596.00793457]
[275.64910889 610.97790527]
[271.63180542 625.47039795]
[265.15875244 639.04504395]
[256.42669678 651.28930664]
[245.70097351 661.83111572]
[233.30752563 670.35009766]
[219.62295532 676.58740234]
[205.06315613 680.35345459]
[190.07057190 681.53387451]
[175.10078430 680.09265137]
[160.60874939 676.07373047]
[147.03483582 669.59918213]
[134.79156494 660.86572266]
[124.25096130 650.13879395]
[115.73336792 637.74438477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 185]
[10 184]
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[21 177]
[22 176]
[24 173]
[25 172]
[26 171]
[28 169]
[29 168]
[30 167]
[31 166]
[42 165]
[43 164]
[44 163]
[47 160]
[48 159]
[49 158]
[50 157]
[51 156]
[53 154]
[54 153]
[55 152]
[56 151]
[57 145]
[58 144]
[59 143]
[70 142]
[71 141]
[72 140]
[73 139]
[74 138]
[75 131]
[76 130]
[78 128]
[79 127]
[81 125]
[82 124]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
