%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[120.08840942 423.82073975]
[123.60962677 409.20391846]
[129.48880005 395.36611938]
[137.56555176 382.68478394]
[147.61955261 371.50592041]
[159.37648010 362.13446045]
[172.51564026 354.82608032]
[167.47872925 340.69705200]
[162.44181824 326.56802368]
[157.40489197 312.43899536]
[152.36798096 298.30996704]
[149.35618591 296.47656250]
[147.08277893 293.09326172]
[146.26655579 288.52301025]
[147.43702698 283.43606567]
[143.03602600 269.09622192]
[138.63502502 254.75636292]
[127.50406647 244.85934448]
[130.85188293 229.39639282]
[126.45088196 215.05654907]
[122.04988861 200.71670532]
[117.64888763 186.37686157]
[113.24788666 172.03700256]
[108.28023529 166.56488037]
[108.88983154 157.45080566]
[104.70281982 143.04702759]
[100.51580811 128.64324951]
[86.15603638 125.08079529]
[75.48867035 114.82890320]
[71.35886383 100.62190247]
[74.86809540 86.24903107]
[85.08040619 75.54376221]
[80.89340210 61.13998413]
[76.70639038 46.73620224]
[72.51937866 32.33242035]
[68.33236694 17.92863655]
[65.71871948 32.69917679]
[60.13111877 46.61962128]
[51.80714417 59.09805679]
[41.10073471 69.60390472]
[28.46713257 77.69044495]
[14.44352531 83.01383209]
[-0.37379533 85.34770966]
[-15.35478973 84.59285736]
[-29.86245918 80.78135681]
[-43.27992630 74.07527161]
[-55.03668213 64.75975800]
[-64.63281250 53.23091888]
[-71.66029358 39.97895432]
[-75.82031250 25.56735420]
[-76.93598175 10.60890198]
[-74.95985413 -4.26035929]
[-69.97596741 -18.40818214]
[-62.19623947 -31.23299217]
[-51.95146179 -42.18947601]
[-39.67724609 -50.81175232]
[-25.89550400 -56.73320389]
[-11.19223881 -59.70204163]
[3.80735803 -59.59203339]
[18.46549606 -56.40785599]
[32.15890503 -50.28490067]
[44.30533218 -41.48352051]
[54.38830566 -30.37795258]
[61.97909546 -17.44041252]
[66.75496674 -3.22084093]
[68.75897980 -18.08636856]
[70.76300049 -32.95189667]
[72.76701355 -47.81742477]
[58.30549240 -53.80563354]
[45.89161301 -63.32095337]
[36.36528015 -75.71233368]
[30.36915970 -90.13439941]
[28.30531120 -105.60507965]
[30.30825233 -121.07254028]
[36.23618698 -135.48663330]
[45.68104935 -147.87026978]
[57.99657059 -157.38555908]
[72.34250641 -163.39060974]
[87.74195099 -165.48271179]
[89.52442169 -180.37643433]
[91.30688477 -195.27014160]
[93.08935547 -210.16386414]
[94.87181854 -225.05758667]
[96.65428162 -239.95129395]
[98.43675232 -254.84501648]
[99.88616943 -269.77484131]
[101.00181580 -284.73327637]
[102.11746216 -299.69174194]
[95.42800903 -314.02914429]
[104.09048462 -326.14569092]
[105.20613861 -341.10415649]
[106.32178497 -356.06262207]
[107.43743134 -371.02105713]
[92.95766449 -375.13458252]
[79.60250092 -382.07897949]
[67.91883087 -391.56985474]
[58.38509369 -403.21856689]
[51.39169312 -416.54815674]
[47.22499847 -431.01269531]
[46.05563736 -446.01995850]
[47.93149567 -460.95535278]
[52.77575302 -475.20730591]
[60.39004135 -488.19219971]
[70.46256256 -499.37829590]
[82.58085632 -508.30758667]
[96.24868011 -514.61437988]
[110.90634918 -518.04040527]
[125.95363617 -518.44537354]
[140.77436829 -515.81274414]
[154.76164246 -510.25027466]
[167.34269714 -501.98577881]
[178.00233459 -491.35766602]
[186.30404663 -478.80111694]
[191.90791321 -464.83038330]
[194.58442688 -450.01751709]
[194.22398376 -434.96908569]
[190.84136963 -420.30133057]
[184.57508850 -406.61489868]
[175.68173218 -394.47021484]
[164.52549744 -384.36462402]
[151.56320190 -376.71191406]
[137.32566833 -371.82546997]
[122.39588928 -369.90542603]
[121.28023529 -354.94696045]
[120.16458893 -339.98849487]
[119.04894257 -325.03005981]
[125.81819916 -311.76257324]
[117.07592010 -298.57608032]
[115.96027374 -283.61764526]
[114.84461975 -268.65917969]
[116.85607147 -265.76324463]
[117.56478119 -261.74917603]
[116.46050262 -257.23986816]
[113.33046722 -253.06254578]
[111.54800415 -238.16883850]
[109.76553345 -223.27511597]
[107.98307037 -208.38139343]
[106.20059967 -193.48768616]
[104.41813660 -178.59396362]
[102.63567352 -163.70024109]
[116.09294128 -158.57905579]
[127.93779755 -150.37559509]
[137.47680664 -139.56462097]
[144.15019226 -126.77365112]
[147.56472778 -112.74665070]
[147.51684570 -98.30065918]
[144.00480652 -84.27824402]
[137.22904968 -71.49837494]
[127.58075714 -60.70855331]
[115.61928558 -52.54112244]
[102.03973389 -47.47618484]
[87.63253784 -45.81341171]
[85.62852478 -30.94788361]
[83.62451172 -16.08235550]
[81.62049866 -1.21682739]
[82.73614502 13.74162579]
[86.92315674 28.14540863]
[91.11016846 42.54919052]
[95.29718018 56.95297241]
[99.48419189 71.35675049]
[113.84396362 74.91920471]
[124.51132965 85.17109680]
[128.64114380 99.37809753]
[125.13190460 113.75096893]
[114.91959381 124.45623779]
[119.10659790 138.86001587]
[123.29360962 153.26379395]
[127.58773804 167.63601685]
[131.98873901 181.97586060]
[136.38973999 196.31570435]
[140.79072571 210.65554810]
[145.19172668 224.99540710]
[156.63748169 235.91810608]
[152.97488403 250.35536194]
[157.37586975 264.69522095]
[161.77687073 279.03506470]
[166.49700928 293.27304077]
[171.53392029 307.40206909]
[176.57084656 321.53109741]
[181.60775757 335.66012573]
[186.64466858 349.78915405]
[201.44396973 347.13766479]
[216.47785950 346.95834351]
[231.33619690 349.25610352]
[245.61363220 353.96829224]
[258.92065430 360.96633911]
[270.89428711 370.05932617]
[281.20782471 380.99917603]
[289.57995605 393.48748779]
[295.78222656 407.18353271]
[299.64547729 421.71365356]
[301.06430054 436.68151855]
[300.00000000 451.67877197]
[296.48159790 466.29623413]
[290.60507202 480.13519287]
[282.53076172 492.81805420]
[272.47894287 503.99887085]
[260.72381592 513.37261963]
[247.58605957 520.68353271]
[233.42410278 525.73217773]
[218.62429810 528.38079834]
[203.59037781 528.55725098]
[188.73248291 526.25659180]
[174.45594788 521.54168701]
[161.15026855 514.54107666]
[149.17839050 505.44577026]
[138.86695862 494.50393677]
[130.49725342 482.01400757]
[124.29760742 468.31677246]
[120.43715668 453.78588867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 181]
[8 180]
[9 179]
[10 178]
[11 177]
[15 176]
[16 175]
[17 174]
[19 172]
[20 171]
[21 170]
[22 169]
[23 168]
[25 167]
[26 166]
[27 165]
[32 160]
[33 159]
[34 158]
[35 157]
[36 156]
[65 155]
[66 154]
[67 153]
[68 152]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
[86 130]
[87 129]
[88 128]
[90 126]
[91 125]
[92 124]
[93 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
