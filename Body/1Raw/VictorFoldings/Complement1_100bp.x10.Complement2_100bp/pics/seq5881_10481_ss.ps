%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[9.73139477 193.84548950]
[11.16055298 208.78436279]
[11.46932602 223.78825378]
[10.65598679 238.77326965]
[8.72508430 253.65560913]
[5.68741655 268.35202026]
[1.55997181 282.78033447]
[-3.63416743 296.85986328]
[-9.86595345 310.51187134]
[-17.10053444 323.66000366]
[-25.29745102 336.23071289]
[-34.41086197 348.15371704]
[-44.38980484 359.36230469]
[-55.17846680 369.79385376]
[-66.71651459 379.38998413]
[-78.93942261 388.09701538]
[-91.77883911 395.86630249]
[-105.16295624 402.65435791]
[-119.01691437 408.42324829]
[-133.26324463 413.14065552]
[-147.82228088 416.78027344]
[-162.61259460 419.32168579]
[-177.55148315 420.75070190]
[-192.55537415 421.05935669]
[-207.54039001 420.24588013]
[-222.42269897 418.31484985]
[-237.11909485 415.27703857]
[-251.54737854 411.14947510]
[-265.62686157 405.95523071]
[-279.27880859 399.72329712]
[-292.42684937 392.48861694]
[-304.99749756 384.29159546]
[-316.92041016 375.17807007]
[-328.12893677 365.19903564]
[-338.56039429 354.41027832]
[-348.15640259 342.87213135]
[-356.86334229 330.64913940]
[-364.63250732 317.80966187]
[-371.42044067 304.42550659]
[-377.18920898 290.57147217]
[-381.90649414 276.32510376]
[-385.54598999 261.76605225]
[-388.08728027 246.97570801]
[-389.51617432 232.03680420]
[-389.82467651 217.03291321]
[-389.01107788 202.04791260]
[-387.07989502 187.16560364]
[-384.04199219 172.46923828]
[-379.91427612 158.04100037]
[-374.71987915 143.96156311]
[-368.48785400 130.30967712]
[-361.25305176 117.16168213]
[-353.05590820 104.59111023]
[-343.94229126 92.66827393]
[-333.96316528 81.45983887]
[-323.17431641 71.02848816]
[-311.63607788 61.43256760]
[-299.41302490 52.72573471]
[-286.57348633 44.95668411]
[-273.18923950 38.16886520]
[-259.33517456 32.40023422]
[-245.08876038 27.68305588]
[-230.52966309 24.04371071]
[-215.73930359 21.50255013]
[-200.80039978 20.07378769]
[-185.79649353 19.76541138]
[-170.81149292 20.57914734]
[-155.92921448 22.51044273]
[-141.23287964 25.54850006]
[-126.80466461 29.67632675]
[-112.72527313 34.87083817]
[-99.07344055 41.10298538]
[-85.92551422 48.33791351]
[-73.35501862 56.53516388]
[-61.43226242 65.64888763]
[-50.22391510 75.62812805]
[-39.79266357 86.41706848]
[-30.19684219 97.95536804]
[-21.49011612 110.17850494]
[-13.72117805 123.01812744]
[-6.93347549 136.40242004]
[6.91401005 130.63638306]
[20.76149559 124.87035370]
[34.60898209 119.10431671]
[48.45646667 113.33828735]
[62.30395126 107.57225037]
[76.15143585 101.80622101]
[89.99892426 96.04018402]
[102.41641998 87.62556458]
[112.90392303 76.90119171]
[123.39141846 66.17681122]
[133.87892151 55.45242691]
[135.88581848 49.15291214]
[140.13496399 45.37908173]
[144.84193420 44.57072449]
[155.64408875 34.16335297]
[166.44624329 23.75597954]
[177.24841309 13.34860611]
[188.05056763 2.94123268]
[178.67715454 -8.78326130]
[170.42553711 -21.32261848]
[163.36611938 -34.56985474]
[157.55912781 -48.41194534]
[153.05410767 -62.73079681]
[149.88949585 -77.40423584]
[148.09230042 -92.30708313]
[147.67784119 -107.31217957]
[148.64967346 -122.29150391]
[150.99948120 -137.11726379]
[154.70722961 -151.66294861]
[159.74127197 -165.80448914]
[166.05868530 -179.42120361]
[173.60554504 -192.39692688]
[182.31747437 -204.62097168]
[192.12014771 -215.98899841]
[202.92991638 -226.40406799]
[214.65457153 -235.77728271]
[227.19406128 -244.02868652]
[240.44142151 -251.08789062]
[254.28359985 -256.89465332]
[268.60253906 -261.39941406]
[283.27603149 -264.56378174]
[298.17889404 -266.36074829]
[313.18399048 -266.77493286]
[328.16329956 -265.80285645]
[342.98901367 -263.45281982]
[357.53466797 -259.74481201]
[371.67611694 -254.71054077]
[385.29272461 -248.39289856]
[398.26831055 -240.84582520]
[410.49221802 -232.13369751]
[421.86007690 -222.33084106]
[432.27496338 -211.52088928]
[441.64797974 -199.79608154]
[449.89920044 -187.25645447]
[456.95816040 -174.00897217]
[462.76467896 -160.16668701]
[467.26922607 -145.84768677]
[470.43334961 -131.17414856]
[472.23004150 -116.27124023]
[472.64401245 -101.26613617]
[471.67169189 -86.28684235]
[469.32138062 -71.46115875]
[465.61315918 -56.91558838]
[460.57864380 -42.77422333]
[454.26077271 -29.15771675]
[446.71347046 -16.18223953]
[438.00112915 -3.95850015]
[428.19808960 7.40921307]
[417.38796997 17.82391167]
[405.66299438 27.19673920]
[393.12322998 35.44773102]
[379.87564087 42.50648499]
[366.03326416 48.31278229]
[351.71420288 52.81708145]
[337.04058838 55.98095703]
[322.13766479 57.77740860]
[307.13253784 58.19111633]
[292.15325928 57.21854782]
[277.32763672 54.86799622]
[262.78210449 51.15952301]
[248.64083862 46.12476730]
[235.02442932 39.80667877]
[222.04908752 32.25916672]
[209.82548523 23.54662704]
[198.45793152 13.74338913]
[187.65577698 24.15076256]
[176.85362244 34.55813599]
[166.05146790 44.96550751]
[155.24931335 55.37288284]
[144.60330200 65.93992615]
[134.11579895 76.66430664]
[123.62830353 87.38868713]
[113.14080048 98.11306763]
[127.28749084 93.12597656]
[142.17002869 91.25249481]
[157.11137390 92.57783508]
[171.43176270 97.04172516]
[184.47973633 104.44107819]
[195.66169739 114.43927002]
[204.46893311 126.58145142]
[210.50077820 140.31523132]
[213.48281860 155.01582336]
[213.27938843 170.01445007]
[209.89976501 184.62875366]
[203.49768066 198.19390869]
[194.36437988 210.09277344]
[182.91539001 219.78402710]
[169.67153931 226.82679749]
[155.23535156 230.90066528]
[140.26356506 231.82031250]
[125.43730927 229.54389954]
[111.43106842 224.17498779]
[98.88204193 215.95780945]
[88.36112213 205.26622009]
[80.34693909 192.58659363]
[75.20408630 178.49577332]
[73.16652679 163.63481140]
[74.32695770 148.67976379]
[78.63259125 134.31098938]
[85.88755035 121.18218231]
[95.76495361 109.88767242]
[81.91747284 115.65370178]
[68.06998444 121.41973877]
[54.22249985 127.18577576]
[40.37501526 132.95181274]
[26.52752876 138.71783447]
[12.68004322 144.48387146]
[-1.16744196 150.24990845]
[3.55011296 164.49620056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 209]
[82 208]
[83 207]
[84 206]
[85 205]
[86 204]
[87 203]
[88 202]
[89 174]
[90 173]
[91 172]
[92 171]
[95 170]
[96 169]
[97 168]
[98 167]
[99 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
