%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[82.18454742 462.96411133]
[72.49885559 474.42855835]
[61.92206192 485.07644653]
[50.52275848 494.83874512]
[38.37487793 503.65209961]
[25.55720520 511.45938110]
[12.15286636 518.20996094]
[-1.75120366 523.85998535]
[-16.06483078 528.37292480]
[-30.69518280 531.71942139]
[-45.54737854 533.87780762]
[-60.52508926 534.83410645]
[-75.53118134 534.58203125]
[-90.46833038 533.12335205]
[-105.23966980 530.46740723]
[-119.74938965 526.63146973]
[-133.90338135 521.64044189]
[-147.60987854 515.52661133]
[-160.77996826 508.32974243]
[-173.32823181 500.09643555]
[-185.17327881 490.88009644]
[-196.23832703 480.74050903]
[-206.45158386 469.74343872]
[-215.74681091 457.96017456]
[-224.06373596 445.46716309]
[-231.34841919 432.34545898]
[-237.55360413 418.68008423]
[-242.63906860 404.55975342]
[-246.57180786 390.07595825]
[-249.32632446 375.32269287]
[-250.88476562 360.39559937]
[-251.23699951 345.39154053]
[-250.38076782 330.40777588]
[-248.32160950 315.54150391]
[-245.07287598 300.88912964]
[-240.65565491 286.54568481]
[-235.09857178 272.60418701]
[-228.43768311 259.15505981]
[-220.71618652 246.28553772]
[-211.98414612 234.07907104]
[-202.29820251 222.61483765]
[-191.72117615 211.96716309]
[-180.32165527 202.20513916]
[-168.17358398 193.39204407]
[-155.35572815 185.58505249]
[-141.95124817 178.83477783]
[-128.04704285 173.18502808]
[-113.73332214 168.67242432]
[-99.10289764 165.32624817]
[-84.25065613 163.16818237]
[-69.27292633 162.21223450]
[-54.26683807 162.46459961]
[-39.32971954 163.92364502]
[-24.55844116 166.57991028]
[-10.04880619 170.41615295]
[4.10508585 175.40751648]
[17.81144142 181.52160645]
[30.98136520 188.71878052]
[39.21017456 176.17738342]
[47.43898010 163.63598633]
[55.66778946 151.09458923]
[56.70892715 143.77763367]
[64.11363983 138.42898560]
[65.26359558 131.12834167]
[72.74712372 125.89052582]
[81.34568787 113.59968567]
[89.94425201 101.30885315]
[91.61720276 93.42382050]
[98.76345825 88.90032959]
[107.54405975 76.73886871]
[116.32466125 64.57741547]
[125.10526276 52.41595840]
[133.88586426 40.25450134]
[142.66647339 28.09304619]
[151.44708252 15.93159103]
[137.18257141 20.57099533]
[122.48925018 17.55334091]
[111.20790863 7.66743326]
[106.28744507 -6.50257397]
[109.01407623 -21.25267410]
[118.67506409 -32.72723007]
[132.74504089 -37.92681503]
[147.54615784 -35.49227524]
[159.20942688 -26.05998802]
[164.68611145 -12.09553528]
[162.54496765 2.74999332]
[173.03247070 -7.97438622]
[183.51995850 -18.69876671]
[181.82019043 -32.06010437]
[188.03540039 -43.78962326]
[199.69859314 -49.71008301]
[212.45030212 -47.85979080]
[223.09631348 -58.42683792]
[233.74232483 -68.99388885]
[244.38832092 -79.56093597]
[255.03433228 -90.12798309]
[245.41528320 -101.64992523]
[236.82231140 -113.95611572]
[229.31907654 -126.95545959]
[222.96110535 -140.55169678]
[217.79547119 -154.64416504]
[213.86044312 -169.12854004]
[211.18511963 -183.89755249]
[209.78933716 -198.84190369]
[209.68342590 -213.85090637]
[210.86814880 -228.81344604]
[213.33476257 -243.61875916]
[217.06498718 -258.15722656]
[222.03120422 -272.32119751]
[228.19665527 -286.00579834]
[235.51568604 -299.10974121]
[243.93411255 -311.53598022]
[253.38960266 -323.19253540]
[263.81213379 -333.99310303]
[275.12457275 -343.85769653]
[287.24316406 -352.71328735]
[300.07815552 -360.49432373]
[313.53454590 -367.14315796]
[327.51266479 -372.61062622]
[341.90908813 -376.85620117]
[356.61715698 -379.84848022]
[371.52801514 -381.56527710]
[386.53128052 -381.99392700]
[401.51583862 -381.13119507]
[416.37078857 -378.98352051]
[430.98608398 -375.56677246]
[445.25357056 -370.90628052]
[459.06759644 -365.03649902]
[472.32589722 -358.00094604]
[484.93026733 -349.85165405]
[496.78744507 -340.64898682]
[507.80963135 -330.46112061]
[517.91516113 -319.36340332]
[527.02929688 -307.43804932]
[535.08453369 -294.77334595]
[542.02117920 -281.46304321]
[547.78796387 -267.60568237]
[552.34216309 -253.30390930]
[555.64996338 -238.66357422]
[557.68701172 -223.79306030]
[558.43817139 -208.80249023]
[557.89782715 -193.80284119]
[556.07006836 -178.90516663]
[552.96838379 -164.21977234]
[548.61578369 -149.85536194]
[543.04437256 -135.91831970]
[536.29553223 -122.51181030]
[528.41918945 -109.73509979]
[519.47363281 -97.68278503]
[509.52508545 -86.44409943]
[498.64724731 -76.10224152]
[486.92062378 -66.73378754]
[474.43206787 -58.40810776]
[461.27398682 -51.18682861]
[447.54385376 -45.12342453]
[433.34332275 -40.26278305]
[418.77746582 -36.64089203]
[403.95422363 -34.28457260]
[388.98327637 -33.21126175]
[373.97546387 -33.42891312]
[359.04193115 -34.93590927]
[344.29321289 -37.72109604]
[329.83856201 -41.76385498]
[315.78494263 -47.03424835]
[302.23638916 -53.49325943]
[289.29327393 -61.09307098]
[277.05139160 -69.77740479]
[265.60137939 -79.48197174]
[254.95538330 -68.91492462]
[244.30937195 -58.34787750]
[233.66336060 -47.78083038]
[223.01734924 -37.21378326]
[223.67340088 -20.40877342]
[211.73730469 -8.08625603]
[194.24433899 -8.21126556]
[183.75683594 2.51311469]
[173.26934814 13.23749447]
[163.60853577 24.71219444]
[154.82792664 36.87364960]
[146.04733276 49.03510666]
[137.26672363 61.19656372]
[128.48611450 73.35801697]
[119.70551300 85.51947021]
[110.92491150 97.68093109]
[102.23508453 109.90741730]
[93.63652039 122.19824982]
[85.03796387 134.48908997]
[76.53113556 146.84359741]
[68.20919037 159.32339478]
[59.98038101 171.86479187]
[51.75157547 184.40618896]
[43.52276611 196.94760132]
[55.36803055 206.16366577]
[66.43329620 216.30300903]
[76.64678955 227.29986572]
[85.94228363 239.08291626]
[94.25948334 251.57572937]
[101.54445648 264.69729614]
[107.74994659 278.36251831]
[112.83571625 292.48275757]
[116.76877594 306.96646118]
[119.52362061 321.71966553]
[121.08238220 336.64669800]
[121.43495941 351.65075684]
[120.57904816 366.63455200]
[118.52021790 381.50088501]
[115.27181244 396.15332031]
[110.85490417 410.49685669]
[105.29813385 424.43847656]
[98.63753510 437.88775635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 192]
[59 191]
[60 190]
[61 189]
[63 188]
[65 187]
[66 186]
[67 185]
[69 184]
[70 183]
[71 182]
[72 181]
[73 180]
[74 179]
[75 178]
[86 177]
[87 176]
[88 175]
[92 172]
[93 171]
[94 170]
[95 169]
[96 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
