%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[104.89582062 433.96713257]
[93.98022461 444.29913330]
[81.61531067 452.84368896]
[68.09095001 459.40051270]
[53.72415161 463.81591797]
[38.85170746 465.98635864]
[23.82224655 465.86099243]
[8.98807907 463.44274902]
[-5.30306005 458.78829956]
[-18.71616554 452.00680542]
[-30.93681717 443.25714111]
[-41.67854309 432.74450684]
[-50.68954086 420.71527100]
[-57.75858307 407.45144653]
[-62.71995926 393.26394653]
[-65.45736694 378.48535156]
[-65.90663910 363.46209717]
[-64.05724335 348.54632568]
[-59.95253372 334.08767700]
[-53.68872833 320.42514038]
[-45.41265869 307.87893677]
[-35.31833267 296.74319458]
[-23.64237022 287.27893066]
[-10.65847492 279.70800781]
[3.32899141 274.20788574]
[17.99214363 270.90753174]
[32.98725510 269.88427734]
[47.96282196 271.16210938]
[51.50249481 256.58572388]
[55.04216385 242.00936890]
[58.58183670 227.43298340]
[62.12150955 212.85661316]
[60.64520264 205.61491394]
[65.82391357 198.09036255]
[69.58021545 183.56829834]
[61.55184555 173.48986816]
[60.78270340 160.43266296]
[67.77725220 149.15052795]
[80.17239380 143.88032532]
[84.14449310 129.41580200]
[88.11658478 114.95127869]
[81.04122162 102.30670166]
[84.87813568 88.33442688]
[97.41889191 81.07662201]
[101.39098358 66.61209869]
[105.36308289 52.14757538]
[109.33517456 37.68305206]
[113.30727386 23.21852875]
[100.73041534 8.79084301]
[99.40086365 -10.15227795]
[109.67532349 -25.94354630]
[127.25032043 -32.30064392]
[130.57257080 -46.92810440]
[133.89483643 -61.55556488]
[137.21710205 -76.18302155]
[140.53935242 -90.81048584]
[130.05136108 -80.08657837]
[116.13855743 -74.48000336]
[101.14547729 -74.93556976]
[87.59872437 -81.37648773]
[77.78116608 -92.71736908]
[73.34722900 -107.04706573]
[75.04412079 -121.95077515]
[82.58586884 -134.91696167]
[94.70156860 -143.76058960]
[109.34951019 -146.99136353]
[124.06125641 -144.06483459]
[136.35762024 -135.47416687]
[144.16644287 -122.66704559]
[146.17167664 -107.80004883]
[152.24551392 -121.51531219]
[158.31935120 -135.23057556]
[164.39318848 -148.94584656]
[170.46702576 -162.66111755]
[176.54084778 -176.37638855]
[182.61468506 -190.09164429]
[188.68852234 -203.80691528]
[180.35148621 -211.23036194]
[174.21423340 -220.53633118]
[170.68351746 -231.09355164]
[169.98960876 -242.18832397]
[172.17124939 -253.07273865]
[177.07365417 -263.01516724]
[184.35940552 -271.34936523]
[193.53167725 -277.51919556]
[203.96813965 -281.11569214]
[214.96311951 -281.90408325]
[225.77542114 -279.83926392]
[232.85252380 -293.06478882]
[239.92962646 -306.29031372]
[247.00674438 -319.51583862]
[254.08384705 -332.74136353]
[241.64456177 -341.14782715]
[230.13557434 -350.78872681]
[219.67889404 -361.56195068]
[210.38537598 -373.35321045]
[202.35351562 -386.03759766]
[195.66847229 -399.48059082]
[190.40109253 -413.53970337]
[186.60723877 -428.06591797]
[184.32710266 -442.90521240]
[183.58486938 -457.90032959]
[184.38841248 -472.89227295]
[186.72920227 -487.72213745]
[190.58241272 -502.23269653]
[195.90722656 -516.27014160]
[202.64718628 -529.68572998]
[210.73085022 -542.33715820]
[220.07250977 -554.09033203]
[230.57315063 -564.82067871]
[242.12144470 -574.41448975]
[254.59500122 -582.76995850]
[267.86157227 -589.79864502]
[281.78054810 -595.42596436]
[296.20434570 -599.59222412]
[310.98007202 -602.25335693]
[325.95111084 -603.38110352]
[340.95877075 -602.96350098]
[355.84393311 -601.00500488]
[370.44885254 -597.52630615]
[384.61865234 -592.56439209]
[398.20312500 -586.17175293]
[411.05831909 -578.41625977]
[423.04794312 -569.38006592]
[434.04489136 -559.15893555]
[443.93258667 -547.86126709]
[452.60620117 -535.60675049]
[459.97381592 -522.52539062]
[465.95733643 -508.75579834]
[470.49328613 -494.44393921]
[473.53366089 -479.74154663]
[475.04614258 -464.80447388]
[475.01477051 -449.79104614]
[473.43981934 -434.86041260]
[470.33801270 -420.17086792]
[465.74224854 -405.87811279]
[459.70123291 -392.13366699]
[452.27896118 -379.08322144]
[443.55416870 -366.86511230]
[433.61932373 -355.60885620]
[422.57974243 -345.43380737]
[410.55245972 -336.44781494]
[397.66494751 -328.74612427]
[384.05386353 -322.41036987]
[369.86343384 -317.50772095]
[355.24411011 -314.09014893]
[340.35089111 -312.19387817]
[325.34161377 -311.83905029]
[310.37542725 -313.02935791]
[295.61093140 -315.75225830]
[281.20468140 -319.97882080]
[267.30935669 -325.66427612]
[260.23226929 -312.43875122]
[253.15516663 -299.21322632]
[246.07804871 -285.98767090]
[239.00094604 -272.76214600]
[250.98387146 -257.97430420]
[255.30897522 -239.38827515]
[251.06430054 -220.73323059]
[239.06176758 -205.77149963]
[221.68234253 -197.53984070]
[202.40379333 -197.73307800]
[196.32995605 -184.01780701]
[190.25611877 -170.30255127]
[184.18228149 -156.58728027]
[178.10844421 -142.87200928]
[172.03462219 -129.15675354]
[165.96078491 -115.44148254]
[159.88694763 -101.72621155]
[155.16680908 -87.48822784]
[151.84455872 -72.86076355]
[148.52229309 -58.23330307]
[145.20004272 -43.60584259]
[141.87777710 -28.97838402]
[150.67958069 -22.12427139]
[156.31367493 -12.43638134]
[157.93298340 -1.29507732]
[155.26567078 9.69556713]
[148.65989685 18.93870926]
[139.03881836 25.07674026]
[127.77179718 27.19062614]
[123.79970551 41.65514755]
[119.82760620 56.11967468]
[115.85550690 70.58419800]
[111.88341522 85.04872131]
[118.95877838 97.69329834]
[115.12186432 111.66557312]
[102.58110809 118.92337799]
[98.60901642 133.38789368]
[94.63691711 147.85241699]
[103.56642914 162.89514160]
[98.94480133 179.41650391]
[84.10227203 187.32460022]
[80.34597015 201.84666443]
[76.69788361 216.39628601]
[73.15821075 230.97265625]
[69.61853790 245.54904175]
[66.07886505 260.12539673]
[62.53919601 274.70178223]
[76.43296814 280.43447876]
[89.28875732 288.22091675]
[100.80521393 297.87866211]
[110.71237946 309.18124390]
[118.77799988 321.86376953]
[124.81302643 335.62890625]
[128.67596436 350.15399170]
[130.27629089 365.09851074]
[129.57646179 380.11221313]
[126.59291077 394.84307861]
[121.39555359 408.94586182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 199]
[29 198]
[30 197]
[31 196]
[32 195]
[34 194]
[35 193]
[39 190]
[40 189]
[41 188]
[44 185]
[45 184]
[46 183]
[47 182]
[48 181]
[52 174]
[53 173]
[54 172]
[55 171]
[56 170]
[70 169]
[71 168]
[72 167]
[73 166]
[74 165]
[75 164]
[76 163]
[77 162]
[88 156]
[89 155]
[90 154]
[91 153]
[92 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
