%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[113.13265991 427.69149780]
[114.27538300 412.71124268]
[117.44733429 398.02615356]
[122.58943939 383.90975952]
[129.60589600 370.62506104]
[138.36598206 358.41955566]
[148.70651245 347.52059937]
[160.43484497 338.13125610]
[173.33250427 330.42642212]
[167.46354675 316.62225342]
[161.59458923 302.81805420]
[155.72561646 289.01388550]
[149.85665894 275.20971680]
[137.75646973 266.52441406]
[139.47743225 250.79707336]
[133.60845947 236.99290466]
[127.73950195 223.18872070]
[121.87054443 209.38455200]
[118.46547699 223.99295044]
[108.28476715 235.00898743]
[93.98962402 239.55310059]
[79.31676483 236.43745422]
[68.10164642 226.47648621]
[63.27585983 212.27395630]
[66.10086823 197.54237366]
[75.83821106 186.13255310]
[89.94257355 181.02697754]
[104.72711182 183.56024170]
[116.32666016 193.06942749]
[112.57036591 178.54737854]
[101.89243317 168.16320801]
[105.92736053 152.86517334]
[102.17105865 138.34310913]
[98.41475677 123.82104492]
[94.65845490 109.29898834]
[88.78949738 95.49481201]
[80.93774414 82.71396637]
[73.08598328 69.93312836]
[59.26966476 62.22469711]
[59.20018387 47.33025360]
[45.38386536 39.62182617]
[45.31438446 24.72738075]
[37.46262741 11.94653893]
[29.61087418 -0.83430386]
[21.75911903 -13.61514664]
[13.90736294 -26.39598846]
[5.77214670 -38.99830246]
[-2.64247179 -51.41579437]
[-11.05709076 -63.83329010]
[-19.47170830 -76.25078583]
[-32.58355713 -68.94539642]
[-46.28222656 -62.81058502]
[-60.46345139 -57.89304733]
[-75.01931000 -54.23020935]
[-89.83901978 -51.84994888]
[-104.80978394 -50.77038193]
[-119.81767273 -50.99972153]
[-134.74845886 -52.53622055]
[-149.48852539 -55.36819458]
[-163.92565918 -59.47407913]
[-177.95001221 -64.82263184]
[-191.45483398 -71.37314606]
[-204.33734131 -79.07576752]
[-216.49949646 -87.87186432]
[-227.84872437 -97.69450378]
[-238.29866028 -108.46892548]
[-247.76977539 -120.11312866]
[-256.18997192 -132.53848267]
[-263.49517822 -145.65043640]
[-269.62979126 -159.34919739]
[-274.54714966 -173.53048706]
[-278.20977783 -188.08639526]
[-280.58984375 -202.90614319]
[-281.66918945 -217.87692261]
[-281.43963623 -232.88481140]
[-279.90292358 -247.81558228]
[-277.07073975 -262.55560303]
[-272.96466064 -276.99267578]
[-267.61590576 -291.01696777]
[-261.06521606 -304.52166748]
[-253.36241150 -317.40408325]
[-244.56613159 -329.56610107]
[-234.74333191 -340.91522217]
[-223.96876526 -351.36499023]
[-212.32443237 -360.83593750]
[-199.89895630 -369.25598145]
[-186.78689575 -376.56100464]
[-173.08805847 -382.69543457]
[-158.90669250 -387.61254883]
[-144.35073853 -391.27499390]
[-129.53096008 -393.65484619]
[-114.56016541 -394.73397827]
[-99.55228424 -394.50421143]
[-84.62153625 -392.96731567]
[-69.88155365 -390.13491821]
[-55.44453049 -386.02862549]
[-41.42033005 -380.67968750]
[-27.91569519 -374.12878418]
[-15.03340340 -366.42581177]
[-2.87149739 -357.62936401]
[8.47745991 -347.80639648]
[18.92709541 -337.03167725]
[28.39788055 -325.38723755]
[36.81773376 -312.96163940]
[44.12257385 -299.84945679]
[50.25680923 -286.15054321]
[55.17374802 -271.96911621]
[58.83597183 -257.41308594]
[61.21561050 -242.59329224]
[62.29454803 -227.62248230]
[62.06457901 -212.61459351]
[60.52745056 -197.68386841]
[57.69485855 -182.94393921]
[53.58836365 -168.50695801]
[48.23921967 -154.48284912]
[41.68814087 -140.97830200]
[33.98497772 -128.09611511]
[25.18836594 -115.93433380]
[15.36524677 -104.58551025]
[4.59038591 -94.13602448]
[-7.05421352 -84.66540527]
[1.36040509 -72.24790955]
[9.77502346 -59.83041382]
[18.18964195 -47.41291809]
[21.56459999 -46.39213562]
[24.61280823 -43.68594360]
[26.54750061 -39.46572113]
[26.68820572 -34.24774551]
[34.53995895 -21.46690178]
[42.39171600 -8.68605900]
[50.24347305 4.09478331]
[58.09522629 16.87562561]
[71.34993744 23.66988373]
[71.98102570 39.47849655]
[85.23574066 46.27275467]
[85.86682892 62.08137131]
[93.71858215 74.86221313]
[101.57033539 87.64305878]
[100.40104675 72.68869781]
[103.43585205 57.99890900]
[110.43541718 44.73218155]
[120.84773254 33.93478775]
[133.85163879 26.45825195]
[148.42158508 22.89220810]
[163.40852356 23.51788902]
[177.63053894 28.28594971]
[189.96600342 36.82036209]
[199.44210815 48.44806671]
[205.31152344 62.25205231]
[207.11134338 77.14367676]
[204.69966125 91.94853973]
[198.26664734 105.49904633]
[188.31964111 116.72656250]
[175.64309692 124.74562836]
[161.23675537 128.92384338]
[146.23677063 128.93167114]
[131.82606506 124.76851654]
[119.14116669 116.76269531]
[109.18051910 105.54268646]
[112.93681335 120.06474304]
[116.69311523 134.58680725]
[120.44941711 149.10887146]
[131.39602661 160.53175354]
[127.09242249 174.79107666]
[130.84872437 189.31312561]
[135.67471313 203.51559448]
[141.54368591 217.31976318]
[147.41264343 231.12394714]
[153.28160095 244.92811584]
[165.80158997 254.60079956]
[163.66084290 269.34075928]
[169.52980042 283.14492798]
[175.39875793 296.94909668]
[181.26771545 310.75329590]
[187.13668823 324.55746460]
[201.63397217 320.61508179]
[216.53306580 318.68356323]
[231.55639648 318.79885864]
[246.42408752 320.95883179]
[260.85916138 325.12322998]
[274.59271240 331.21447754]
[287.36889648 339.11911011]
[298.94967651 348.68984985]
[309.11932373 359.74844360]
[317.68838501 372.08880615]
[324.49722290 385.48110962]
[329.41900635 399.67581177]
[332.36199951 414.40850830]
[333.27142334 429.40472412]
[332.13034058 444.38510132]
[328.95996094 459.07055664]
[323.81939697 473.18750000]
[316.80438232 486.47296143]
[308.04562378 498.67944336]
[297.70626831 509.57949829]
[285.97894287 518.97009277]
[273.08212280 526.67633057]
[259.25607300 532.55462646]
[244.75834656 536.49542236]
[229.85903931 538.42529297]
[214.83572388 538.30841064]
[199.96826172 536.14678955]
[185.53364563 531.98083496]
[171.80075073 525.88812256]
[159.02543640 517.98211670]
[147.44567871 508.41009521]
[137.27723694 497.35043335]
[128.70950317 485.00912476]
[121.90211487 471.61608887]
[116.98188782 457.42083740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 175]
[10 174]
[11 173]
[12 172]
[13 171]
[15 169]
[16 168]
[17 167]
[18 166]
[29 165]
[30 164]
[32 162]
[33 161]
[34 160]
[35 159]
[36 138]
[37 137]
[38 136]
[40 134]
[42 132]
[43 131]
[44 130]
[45 129]
[46 128]
[47 124]
[48 123]
[49 122]
[50 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
