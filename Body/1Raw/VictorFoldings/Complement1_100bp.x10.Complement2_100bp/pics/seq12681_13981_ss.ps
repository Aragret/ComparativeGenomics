%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[77.98148346 925.39282227]
[62.99834824 924.63836670]
[48.05881500 923.26940918]
[33.18808365 921.28826904]
[18.41122246 918.69824219]
[3.75315475 915.50378418]
[-10.76140594 911.71020508]
[-25.10798264 907.32397461]
[-39.26238632 902.35235596]
[-53.20074844 896.80389404]
[-66.89956665 890.68786621]
[-80.33573914 884.01452637]
[-93.48660278 876.79522705]
[-106.33000183 869.04211426]
[-118.84426117 860.76824951]
[-131.00828552 851.98760986]
[-142.80155945 842.71490479]
[-154.20420837 832.96588135]
[-165.19699097 822.75695801]
[-175.76138306 812.10534668]
[-185.87956238 801.02899170]
[-195.53446960 789.54650879]
[-204.70982361 777.67736816]
[-213.39015198 765.44152832]
[-221.56082153 752.85968018]
[-229.20805359 739.95294189]
[-236.31895447 726.74316406]
[-242.88151550 713.25256348]
[-248.88470459 699.50390625]
[-254.31837463 685.52038574]
[-259.17337036 671.32556152]
[-263.44149780 656.94335938]
[-267.11557007 642.39813232]
[-270.18936157 627.71429443]
[-272.65774536 612.91662598]
[-274.51654053 598.03009033]
[-275.76257324 583.07983398]
[-276.39376831 568.09094238]
[-276.40908813 553.08886719]
[-275.80847168 538.09875488]
[-274.59292603 523.14593506]
[-272.76455688 508.25567627]
[-270.32638550 493.45300293]
[-267.28253174 478.76293945]
[-263.63815308 464.21017456]
[-259.39938354 449.81933594]
[-254.57336426 435.61465454]
[-249.16824341 421.62005615]
[-243.19313049 407.85919189]
[-236.65811157 394.35522461]
[-229.57418823 381.13095093]
[-221.95330811 368.20864868]
[-213.80833435 355.61010742]
[-205.15299988 343.35659790]
[-196.00187683 331.46875000]
[-186.37042236 319.96661377]
[-176.27487183 308.86962891]
[-165.73223877 298.19644165]
[-154.76031494 287.96511841]
[-143.37759399 278.19284058]
[-131.60325623 268.89614868]
[-119.45717621 260.09066772]
[-106.95983124 251.79127502]
[-94.13228607 244.01196289]
[-80.99617004 236.76583862]
[-67.57364655 230.06512451]
[-53.88734055 223.92114258]
[-39.96033096 218.34420776]
[-25.81610298 213.34376526]
[-11.47850704 208.92823792]
[3.02828145 205.10504150]
[17.67980003 201.88066101]
[32.45134354 199.26051331]
[47.31800079 197.24902344]
[62.25470734 195.84957886]
[77.23627472 195.06454468]
[92.23744202 194.89524841]
[92.68405151 179.90190125]
[93.13065338 164.90853882]
[93.24232483 149.90896606]
[85.31639099 137.29829407]
[92.84736633 123.38446045]
[92.62403870 108.38612366]
[92.28906250 93.38986206]
[91.84246063 78.39650726]
[80.62126160 67.59268951]
[80.38191986 52.38094330]
[90.75086212 41.74982452]
[90.30426025 26.75647545]
[89.85765076 11.76312542]
[89.41104889 -3.23022461]
[80.57553101 -12.62684631]
[80.51222229 -25.12403679]
[88.70964813 -34.01947403]
[88.48632050 -49.01781082]
[88.26299286 -64.01614380]
[88.03966522 -79.01448822]
[87.81633759 -94.01282501]
[73.79681396 -99.96033478]
[63.41316605 -111.10034180]
[58.46441650 -125.50276184]
[59.80796814 -140.67228699]
[67.21104431 -153.98072815]
[79.39101410 -163.12228394]
[94.23762512 -166.51315308]
[109.17861938 -163.56582642]
[121.62536621 -154.79096985]
[129.42140198 -141.70884705]
[131.21601868 -126.58604431]
[126.69827271 -112.04266357]
[116.65090179 -100.59844208]
[102.81467438 -94.23615265]
[103.03800201 -79.23781586]
[103.26132965 -64.23947144]
[103.48465729 -49.24113846]
[103.70798492 -34.24280167]
[113.50652313 -19.68410492]
[104.40439606 -3.67683053]
[104.85100555 11.31651974]
[105.29760742 26.30986977]
[105.74421692 41.30321884]
[116.72754669 51.29831696]
[117.39405823 66.49734497]
[106.83580780 77.94990540]
[107.28240967 92.94325256]
[110.65113068 100.26611328]
[107.62237549 108.16278839]
[107.84570312 123.16113281]
[115.78761292 136.84457397]
[108.24066162 149.68563843]
[110.91912079 154.16590881]
[111.54828644 158.76564026]
[110.42581940 162.68418884]
[108.12400055 165.35514832]
[107.67739868 180.34849548]
[107.23078918 195.34185791]
[122.19528198 196.40374756]
[137.10356140 198.07910156]
[151.93049622 200.36511230]
[166.65106201 203.25791931]
[181.24046326 206.75263977]
[195.67408752 210.84336853]
[209.92759705 215.52323914]
[223.97695923 220.78433228]
[237.79847717 226.61779785]
[251.36885071 233.01377869]
[264.66519165 239.96150208]
[277.66510010 247.44926453]
[290.34661865 255.46440125]
[302.68838501 263.99343872]
[314.66958618 273.02197266]
[326.27001953 282.53479004]
[337.47012329 292.51583862]
[348.25100708 302.94827271]
[358.59451294 313.81454468]
[368.48318481 325.09631348]
[377.90032959 336.77453613]
[386.83007812 348.82952881]
[395.25738525 361.24096680]
[403.16806030 373.98794556]
[410.54870605 387.04895020]
[417.38693237 400.40191650]
[423.67117310 414.02441406]
[429.39083862 427.89340210]
[434.53628540 441.98553467]
[439.09884644 456.27700806]
[443.07083130 470.74377441]
[446.44552612 485.36138916]
[449.21725464 500.10525513]
[451.38131714 514.95050049]
[452.93411255 529.87200928]
[453.87298584 544.84472656]
[454.19635010 559.84338379]
[453.90365601 574.84265137]
[452.99545288 589.81726074]
[451.47320557 604.74194336]
[449.33950806 619.59155273]
[446.59796143 634.34106445]
[443.25320435 648.96551514]
[439.31082153 663.44036865]
[434.77752686 677.74121094]
[429.66091919 691.84381104]
[423.96966553 705.72448730]
[417.71331787 719.35980225]
[410.90243530 732.72674561]
[403.54852295 745.80285645]
[395.66397095 758.56597900]
[387.26208496 770.99462891]
[378.35699463 783.06787109]
[368.96377563 794.76538086]
[359.09823608 806.06732178]
[348.77697754 816.95477295]
[338.01748657 827.40924072]
[326.83782959 837.41320801]
[315.25686646 846.94970703]
[303.29418945 856.00274658]
[290.96987915 864.55700684]
[278.30477905 872.59808350]
[265.32025146 880.11242676]
[252.03814697 887.08734131]
[238.48089600 893.51110840]
[224.67134094 899.37286377]
[210.63278198 904.66265869]
[196.38888550 909.37170410]
[181.96365356 913.49200439]
[167.38143921 917.01654053]
[152.66682434 919.93945312]
[137.84460449 922.25579834]
[122.93978119 923.96166992]
[107.97749329 925.05419922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 136]
[78 135]
[79 134]
[80 130]
[82 128]
[83 127]
[84 125]
[85 124]
[88 121]
[89 120]
[90 119]
[91 118]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
