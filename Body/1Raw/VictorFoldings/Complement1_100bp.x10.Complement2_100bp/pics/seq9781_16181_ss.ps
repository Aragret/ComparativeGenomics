%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[82.78833771 611.57574463]
[67.77180481 611.53918457]
[52.85731888 609.79107666]
[38.23932648 606.35418701]
[24.10840988 601.27337646]
[10.64878845 594.61480713]
[-1.96406364 586.46533203]
[-13.56571102 576.93121338]
[-24.00490189 566.13671875]
[-33.14554214 554.22259521]
[-40.86846161 541.34411621]
[-47.07297897 527.66931152]
[-51.67820358 513.37628174]
[-54.62409973 498.65148926]
[-55.87225723 483.68688965]
[-55.40641022 468.67752075]
[-53.23262405 453.81912231]
[-49.37924576 439.30535889]
[-43.89650345 425.32546997]
[-36.85588455 412.06170654]
[-28.34917641 399.68698120]
[-18.48727798 388.36264038]
[-7.39876080 378.23629761]
[4.77181339 369.44000244]
[17.86577606 362.08840942]
[31.71241951 356.27737427]
[46.13122559 352.08264160]
[60.93421555 349.55889893]
[75.92840576 348.73907471]
[76.82122040 333.76565552]
[77.71403503 318.79226685]
[78.60684967 303.81884766]
[79.49966431 288.84545898]
[77.44532776 285.97979736]
[76.67692566 281.97671509]
[77.71395111 277.45144653]
[80.78144073 273.22799683]
[82.34196472 258.30938721]
[83.90248871 243.39079285]
[85.46301270 228.47218323]
[79.09177399 215.00903320]
[88.22279358 202.08869934]
[89.78331757 187.17008972]
[91.23273468 172.24028015]
[92.57096863 157.30009460]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[84.15390778 59.22773361]
[91.70085907 46.38667679]
[91.47753143 31.38833809]
[91.25420380 16.39000130]
[91.03087616 1.39166355]
[89.69264221 -13.54852104]
[87.24691010 -28.34779167]
[84.80118561 -43.14706421]
[72.23718262 -52.35486603]
[69.96768951 -67.39826965]
[78.82334900 -79.31938171]
[76.37762451 -94.11865234]
[73.93189240 -108.91792297]
[67.96704102 -95.15490723]
[56.67816544 -85.27760315]
[42.24496460 -81.19314575]
[27.45426750 -83.69020081]
[15.16192436 -92.28661346]
[7.74139500 -105.32255554]
[6.62546682 -120.28098297]
[12.02960873 -134.27366638]
[22.91036415 -144.59884644]
[37.16683197 -149.26286316]
[52.04631042 -147.36520386]
[64.67580414 -139.27224731]
[72.61717987 -126.54543304]
[72.84050751 -141.54376221]
[73.06383514 -156.54209900]
[73.28716278 -171.54045105]
[73.51049042 -186.53878784]
[58.63399506 -188.60505676]
[44.12418747 -192.48387146]
[30.20103836 -198.11640930]
[17.07561302 -205.41729736]
[4.94689417 -214.27583313]
[-6.00125313 -224.55773926]
[-15.60285664 -236.10714722]
[-23.71235847 -248.74897766]
[-30.20682144 -262.29156494]
[-34.98778915 -276.52960205]
[-37.98278427 -291.24725342]
[-39.14640808 -306.22143555]
[-38.46100998 -321.22509766]
[-35.93699265 -336.03079224]
[-31.61260796 -350.41409302]
[-25.55342102 -364.15695190]
[-17.85128403 -377.05099487]
[-8.62295914 -388.90078735]
[1.99165380 -399.52670288]
[13.83163929 -408.76760864]
[26.71750832 -416.48342896]
[40.45391083 -422.55722046]
[54.83261108 -426.89688110]
[69.63562775 -429.43661499]
[84.63854980 -430.13793945]
[99.61394501 -428.99023438]
[114.33477783 -426.01086426]
[128.57789612 -421.24502563]
[142.12736511 -414.76495361]
[154.77780151 -406.66888428]
[166.33740234 -397.07955933]
[176.63093567 -386.14233398]
[185.50234985 -374.02304077]
[192.81716919 -360.90536499]
[198.46449280 -346.98822021]
[202.35871887 -332.48254395]
[204.44079590 -317.60824585]
[204.67916870 -302.59082031]
[203.07023621 -287.65795898]
[199.63836670 -273.03598022]
[194.43559265 -258.94659424]
[187.54080200 -245.60337830]
[179.05850220 -233.20861816]
[169.11727905 -221.95019531]
[157.86785889 -211.99880981]
[145.48075867 -203.50531006]
[132.14378357 -196.59846497]
[118.05910492 -191.38296509]
[103.44024658 -187.93788147]
[88.50882721 -186.31546021]
[88.28549957 -171.31712341]
[88.06217194 -156.31877136]
[87.83884430 -141.32043457]
[87.61551666 -126.32210541]
[88.73116302 -111.36364746]
[91.17689514 -96.56437683]
[93.62261963 -81.76510620]
[105.84284210 -73.32699585]
[108.53398132 -58.35327148]
[99.60045624 -45.59278870]
[102.04618073 -30.79351997]
[104.49191284 -15.99424934]
[111.24807739 -29.38656807]
[123.74081421 -37.68907166]
[138.70454407 -38.73150253]
[152.22779846 -32.24137497]
[160.77561951 -19.91519165]
[162.11361694 -4.97498608]
[155.89207458 8.67390633]
[143.73725891 17.46369934]
[128.82641602 19.09675980]
[115.05720520 13.14621258]
[106.02921295 1.16833591]
[106.25254059 16.16667366]
[106.47586823 31.16501045]
[106.69919586 46.16334915]
[114.62512970 58.77401352]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[118.51186371 131.26286316]
[133.41036987 129.52093506]
[146.01165771 137.65774536]
[150.55456543 151.95327759]
[144.96214294 165.87178040]
[131.79118347 173.04991150]
[117.06325531 170.20594788]
[107.51115417 158.63833618]
[106.17292023 173.57852173]
[108.52423096 182.40513611]
[104.70191956 188.73060608]
[103.14139557 203.64921570]
[109.40101624 218.17945862]
[100.38161469 230.03271484]
[98.82109070 244.95132446]
[97.26057434 259.86993408]
[95.70005035 274.78851318]
[94.47307587 289.73825073]
[93.58025360 304.71166992]
[92.68743896 319.68505859]
[91.79462433 334.65847778]
[90.90180969 349.63189697]
[105.69232941 352.22769165]
[120.09053802 356.49258423]
[133.90872192 362.37100220]
[146.96672058 369.78628540]
[159.09429932 378.64175415]
[170.13337708 388.82199097]
[179.94000244 400.19421387]
[188.38633728 412.61022949]
[195.36227417 425.90811157]
[200.77685547 439.91455078]
[204.55949402 454.44689941]
[206.66088867 469.31573486]
[207.05363464 484.32717896]
[205.73260498 499.28552246]
[202.71502686 513.99578857]
[198.04023743 528.26617432]
[191.76919556 541.91064453]
[183.98364258 554.75134277]
[174.78507996 566.62078857]
[164.29344177 577.36431885]
[152.64549255 586.84185791]
[139.99310303 594.92980957]
[126.50121307 601.52270508]
[112.34571838 606.53466797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 186]
[30 185]
[31 184]
[32 183]
[33 182]
[37 181]
[38 180]
[39 179]
[40 178]
[42 176]
[43 175]
[44 173]
[45 172]
[46 164]
[47 163]
[48 162]
[50 160]
[51 159]
[53 157]
[54 156]
[55 155]
[56 154]
[57 143]
[58 142]
[59 141]
[62 138]
[63 137]
[64 136]
[77 135]
[78 134]
[79 133]
[80 132]
[81 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
