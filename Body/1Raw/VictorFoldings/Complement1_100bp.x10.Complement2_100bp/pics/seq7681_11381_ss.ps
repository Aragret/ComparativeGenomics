%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[-5.30614758 651.14196777]
[-19.13469315 657.82531738]
[-34.45104599 656.68298340]
[-47.13518143 648.02221680]
[-53.77513504 634.17279053]
[-52.58478928 618.86010742]
[-43.88434219 606.20318604]
[-30.01416969 599.60668945]
[-28.89852142 584.64819336]
[-38.78241730 573.56469727]
[-37.86407852 558.37884521]
[-26.17165756 548.08685303]
[-25.05600929 533.12835693]
[-23.94036102 518.16992188]
[-22.82471085 503.21145630]
[-21.70906258 488.25302124]
[-20.59341431 473.29455566]
[-29.63757896 485.26132202]
[-42.93846893 492.19573975]
[-57.92789078 492.75891113]
[-71.71162415 486.84210205]
[-81.62825012 475.58773804]
[-85.76301575 461.16888428]
[-83.31755829 446.36956787]
[-74.76407623 434.04730225]
[-61.75409317 426.58135986]
[-46.79964447 425.41326904]
[-32.78819656 430.76858521]
[-22.42513847 441.61325073]
[-17.71129227 455.85464478]
[-13.95499229 441.33258057]
[-10.19869137 426.81051636]
[-21.65509415 417.25979614]
[-27.85416603 403.62597656]
[-27.51759720 388.59109497]
[-20.65859222 375.13842773]
[-8.58988094 365.96057129]
[6.32720613 362.92053223]
[10.08350658 348.39846802]
[13.83980751 333.87640381]
[17.59610748 319.35433960]
[11.72931957 308.77572632]
[14.73990631 296.64639282]
[25.54328728 289.60015869]
[29.51538467 275.13562012]
[33.48748016 260.67111206]
[37.45957565 246.20657349]
[41.43167114 231.74205017]
[45.40377045 217.27752686]
[49.37586594 202.81300354]
[37.27899551 211.68237305]
[22.31423378 212.70994568]
[9.11857319 205.57730103]
[1.78083301 192.49458313]
[2.57469153 177.51560974]
[11.25416374 165.28176880]
[25.12981987 159.58386230]
[39.90213776 162.18743896]
[50.99375534 172.28576660]
[54.96780777 186.75000000]
[60.83676529 172.94583130]
[66.70572662 159.14164734]
[72.57469177 145.33747864]
[78.44364929 131.53329468]
[68.02492523 120.89543915]
[62.46513748 107.08230591]
[62.60915756 92.19294739]
[68.43510437 78.48994446]
[79.05765533 68.05561829]
[92.86261749 62.47557068]
[107.75217438 62.59774399]
[113.62113190 48.79356766]
[119.49009705 34.98938751]
[119.96785736 25.86746216]
[125.55056763 21.02441216]
[131.62440491 7.30914593]
[130.13778687 -8.44206238]
[142.36595154 -16.94625282]
[140.87934875 -32.69746017]
[153.10751343 -41.20164871]
[159.18133545 -54.91691589]
[165.25517273 -68.63218689]
[168.46844482 -83.28397369]
[168.69177246 -98.28231049]
[168.91510010 -113.28064728]
[169.13842773 -128.27897644]
[169.36175537 -143.27731323]
[169.58508301 -158.27566528]
[169.80841064 -173.27400208]
[170.03173828 -188.27233887]
[162.50076294 -202.18617249]
[170.42669678 -214.79682922]
[170.65002441 -229.79518127]
[170.87335205 -244.79351807]
[171.09667969 -259.79183960]
[156.61886597 -264.06918335]
[143.83256531 -272.09497070]
[133.68658447 -283.27359009]
[126.93384552 -296.77554321]
[124.07542419 -311.59890747]
[125.32344818 -326.64367676]
[130.58531189 -340.79342651]
[139.47052002 -352.99816895]
[151.31976318 -362.35220337]
[165.25373840 -368.16140747]
[180.23844910 -369.99472046]
[195.16194153 -367.71606445]
[208.91676331 -361.49456787]
[220.48225403 -351.79187012]
[229.00015259 -339.32800293]
[233.83837891 -325.02786255]
[234.63790894 -309.95260620]
[231.33941650 -295.22094727]
[224.18766785 -281.92602539]
[213.71334839 -271.05441284]
[200.69375610 -263.41290283]
[186.09501648 -259.56851196]
[185.87168884 -244.57019043]
[185.64836121 -229.57185364]
[185.42503357 -214.57350159]
[192.97198486 -201.73245239]
[185.03007507 -188.04901123]
[184.80674744 -173.05067444]
[184.58341980 -158.05233765]
[184.36009216 -143.05398560]
[184.13676453 -128.05564880]
[183.91343689 -113.05731964]
[183.69010925 -98.05898285]
[183.46678162 -83.06064606]
[190.29389954 -96.41693878]
[199.79824829 -108.02156067]
[211.54745483 -117.34658051]
[225.00701904 -123.96777344]
[239.56460571 -127.58391571]
[254.55796814 -128.03048706]
[269.30496216 -125.28719330]
[283.13476562 -119.47882080]
[295.41815186 -110.86961365]
[305.59631348 -99.85123444]
[313.20626831 -86.92494965]
[317.90173340 -72.67881775]
[319.46917725 -57.76093674]
[317.83724976 -42.84997177]
[313.08016968 -28.62428093]
[305.41439819 -15.73102856]
[295.18865967 -4.75677681]
[282.86816406 3.79922032]
[269.01336670 9.54772282]
[254.25463867 12.22721100]
[239.26336670 11.71578693]
[224.72154236 8.03671646]
[211.29074097 1.35737324]
[199.58197021 -8.01837730]
[190.12789917 -19.66400146]
[183.35862732 -33.04970169]
[179.58210754 -47.56651688]
[178.97044373 -62.55834961]
[172.89660645 -48.84308243]
[166.82276917 -35.12781525]
[168.74383545 -20.35761642]
[156.08122253 -10.87241840]
[158.00227356 3.89778233]
[145.33967590 13.38298035]
[139.26583862 27.09824753]
[133.29426575 40.85834885]
[127.42530823 54.66252518]
[121.55635071 68.46670532]
[131.97508240 79.10456085]
[137.53486633 92.91769409]
[137.39083862 107.80705261]
[131.56489563 121.51005554]
[120.94234467 131.94438171]
[107.13738251 137.52442932]
[92.24782562 137.40225220]
[86.37886810 151.20643616]
[80.50990295 165.01060486]
[74.64094543 178.81478882]
[68.77198029 192.61895752]
[63.84038925 206.78509521]
[59.86829376 221.24961853]
[55.89619827 235.71414185]
[51.92409897 250.17866516]
[47.95200348 264.64318848]
[43.97990799 279.10772705]
[40.00781250 293.57223511]
[45.07551193 311.27536011]
[32.11816788 323.11065674]
[28.36186600 337.63269043]
[24.60556602 352.15475464]
[20.84926605 366.67681885]
[32.42137909 376.56860352]
[38.52624893 390.44729614]
[38.00203705 405.53851318]
[31.00625229 418.85092163]
[18.97387695 427.76895142]
[4.32336807 430.56683350]
[0.56706738 445.08886719]
[-3.18923330 459.61093140]
[-5.63496065 474.41021729]
[-6.75060940 489.36865234]
[-7.86625814 504.32711792]
[-8.98190689 519.28558350]
[-10.09755516 534.24401855]
[-11.21320438 549.20245361]
[-1.17687011 561.11505127]
[-2.52138543 576.26916504]
[-13.94006824 585.76385498]
[-15.05571651 600.72235107]
[-2.31753540 609.30334473]
[4.40910864 623.11090088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 208]
[9 207]
[12 204]
[13 203]
[14 202]
[15 201]
[16 200]
[17 199]
[30 198]
[31 197]
[32 196]
[38 190]
[39 189]
[40 188]
[41 187]
[44 185]
[45 184]
[46 183]
[47 182]
[48 181]
[49 180]
[50 179]
[60 178]
[61 177]
[62 176]
[63 175]
[64 174]
[71 167]
[72 166]
[73 165]
[75 164]
[76 163]
[78 161]
[80 159]
[81 158]
[82 157]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[92 120]
[93 119]
[94 118]
[95 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
