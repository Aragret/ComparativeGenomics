%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[207.86274719 792.03173828]
[193.99909973 786.29675293]
[180.43353271 779.88842773]
[167.19876099 772.82220459]
[154.32666016 765.11505127]
[141.84822083 756.78558350]
[129.79353333 747.85388184]
[118.19162750 738.34143066]
[107.07044220 728.27117920]
[96.45677948 717.66735840]
[86.37621307 706.55548096]
[76.85301971 694.96240234]
[67.91014099 682.91595459]
[59.56912613 670.44525146]
[51.85007095 657.58032227]
[44.77156448 644.35211182]
[38.35066605 630.79248047]
[32.60284042 616.93414307]
[27.54193878 602.81048584]
[23.18014717 588.45544434]
[19.52797890 573.90374756]
[16.59422874 559.19036865]
[14.38596630 544.35070801]
[12.90851116 529.42059326]
[12.16542244 514.43597412]
[12.15849018 499.43295288]
[12.88773251 484.44766235]
[14.35139084 469.51617432]
[16.54594040 454.67453003]
[19.46609116 439.95840454]
[23.10481262 425.40332031]
[27.45333672 411.04431152]
[32.50118637 396.91595459]
[38.23620605 383.05230713]
[44.64456940 369.48675537]
[51.71084976 356.25201416]
[59.41801453 343.37991333]
[67.74749756 330.90151978]
[76.67924500 318.84683228]
[86.19171906 307.24496460]
[96.26201630 296.12380981]
[106.86587524 285.51016235]
[117.97774506 275.42962646]
[129.57086182 265.90646362]
[141.61729431 256.96362305]
[154.08802795 248.62261963]
[166.95300293 240.90359497]
[159.87590027 227.67807007]
[152.79879761 214.45254517]
[145.72169495 201.22702026]
[138.64457703 188.00149536]
[131.56747437 174.77597046]
[124.49037170 161.55043030]
[117.41326904 148.32490540]
[110.33615875 135.09938049]
[103.25905609 121.87385559]
[96.18195343 108.64832306]
[91.63625336 106.03096008]
[88.88059998 101.05303955]
[89.09768677 94.92198944]
[82.41749573 81.49160767]
[82.47047424 96.49151611]
[79.44575500 111.18338776]
[73.47195435 124.94252014]
[64.80307007 137.18386841]
[53.80772018 147.38691711]
[40.95342636 155.11782837]
[26.78675652 160.04789734]
[11.91008949 161.96746826]
[-3.04401278 160.79493713]
[-17.43969345 156.58015442]
[-30.66484261 149.50234985]
[-42.15711975 139.86245728]
[-51.42786789 128.07037354]
[-58.08288574 114.62749481]
[-61.83920288 100.10544586]
[-62.53709793 85.12168884]
[-60.14690018 70.31334686]
[-54.77023315 56.31008148]
[-46.63572311 43.70731354]
[-36.08924866 33.04092407]
[-23.57925224 24.76445007]
[-9.63766861 19.22981071]
[5.14270258 16.67234421]
[20.13339043 17.20079422]
[34.69698715 20.79269028]
[48.21423340 27.29530334]
[60.11037827 36.43214035]
[69.87958527 47.81469727]
[77.10652924 60.95914078]
[76.43674469 45.97410202]
[75.76696014 30.98906326]
[75.09717560 16.00402451]
[74.42739105 1.01898646]
[59.79450226 -2.77178693]
[46.92993546 -10.70868301]
[36.97760010 -22.08596039]
[30.82244873 -35.89195633]
[29.01179504 -50.89905167]
[31.70664215 -65.77282715]
[38.66736603 -79.19071960]
[49.27502060 -89.95960999]
[62.58638382 -97.12194824]
[77.41781616 -100.04084778]
[92.45051575 -98.45677948]
[106.34779358 -92.51058960]
[117.87390137 -82.73100281]
[126.00395203 -69.98762512]
[130.01502991 -55.41358566]
[129.55046082 -40.30479431]
[124.65156555 -26.00471687]
[115.75394440 -13.78490448]
[103.64877319 -4.73193789]
[89.41242981 0.34920129]
[90.08221436 15.33423996]
[90.75199890 30.31927872]
[91.42178345 45.30431747]
[92.09156799 60.28935623]
[95.84786987 74.81141663]
[102.52806854 88.24179077]
[109.40747833 101.57122040]
[116.48458099 114.79674530]
[123.56169128 128.02227783]
[130.63879395 141.24780273]
[137.71589661 154.47332764]
[144.79299927 167.69885254]
[151.87011719 180.92439270]
[158.94721985 194.14991760]
[166.02432251 207.37544250]
[173.10142517 220.60096741]
[180.17852783 233.82649231]
[193.73809814 227.40550232]
[207.59638977 221.65756226]
[221.72003174 216.59655762]
[236.07499695 212.23466492]
[250.62669373 208.58238220]
[265.34008789 205.64852905]
[280.17968750 203.44015503]
[295.10977173 201.96258545]
[310.09439087 201.21939087]
[325.09744263 201.21234131]
[340.08273315 201.94146729]
[355.01422119 203.40501404]
[369.85589600 205.59945679]
[384.57202148 208.51950073]
[399.12713623 212.15811157]
[413.48620605 216.50653076]
[427.61459351 221.55427551]
[441.47827148 227.28918457]
[455.04385376 233.69744873]
[468.27865601 240.76364136]
[481.15081787 248.47070312]
[493.62927246 256.80010986]
[505.68402100 265.73175049]
[517.28601074 275.24414062]
[528.40722656 285.31436157]
[539.02093506 295.91812134]
[549.10156250 307.02993774]
[558.62481689 318.62298584]
[567.56774902 330.66934204]
[575.90881348 343.14001465]
[583.62792969 356.00494385]
[590.70648193 369.23312378]
[597.12750244 382.79269409]
[602.87536621 396.65100098]
[607.93634033 410.77465820]
[612.29821777 425.12963867]
[615.95043945 439.68133545]
[618.88427734 454.39471436]
[621.09259033 469.23434448]
[622.57012939 484.16445923]
[623.31329346 499.14907837]
[623.32031250 514.15209961]
[622.59112549 529.13739014]
[621.12756348 544.06890869]
[618.93304443 558.91058350]
[616.01300049 573.62664795]
[612.37432861 588.18176270]
[608.02587891 602.54083252]
[602.97808838 616.66918945]
[597.24316406 630.53289795]
[590.83483887 644.09844971]
[583.76867676 657.33325195]
[576.06152344 670.20538330]
[567.73211670 682.68383789]
[558.80047607 694.73852539]
[549.28802490 706.34045410]
[539.21777344 717.46166992]
[528.61395264 728.07537842]
[517.50213623 738.15594482]
[505.90908813 747.67919922]
[493.86270142 756.62207031]
[481.39199829 764.96313477]
[468.52706909 772.68218994]
[455.29885864 779.76074219]
[441.73925781 786.18170166]
[427.88095093 791.92956543]
[413.75729370 796.99047852]
[399.40228271 801.35229492]
[384.85058594 805.00451660]
[370.13717651 807.93829346]
[355.29757690 810.14660645]
[340.36746216 811.62408447]
[325.38284302 812.36724854]
[310.37979126 812.37420654]
[295.39450073 811.64495850]
[280.46304321 810.18133545]
[265.62136841 807.98687744]
[250.90524292 805.06671143]
[236.35014343 801.42803955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 131]
[48 130]
[49 129]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[60 120]
[61 119]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
