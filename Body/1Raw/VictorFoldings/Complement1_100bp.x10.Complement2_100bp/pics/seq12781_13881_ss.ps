%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[108.67443848 701.27972412]
[93.61421967 700.60656738]
[79.15290833 696.34820557]
[66.13127899 688.75207520]
[55.30638885 678.25994873]
[47.30757523 665.48175049]
[42.59988785 651.16040039]
[41.45702362 636.12854004]
[43.94542313 621.26007080]
[49.92042160 607.41943359]
[59.03462982 595.41131592]
[70.75817108 585.93383789]
[84.40943909 579.53808594]
[99.19478607 576.59576416]
[99.86457062 561.61071777]
[100.53435516 546.62573242]
[101.20413971 531.64068604]
[101.87392426 516.65563965]
[102.54370880 501.67059326]
[95.38243103 488.61053467]
[103.72822571 475.16961670]
[104.39801025 460.18457031]
[88.51348114 452.38726807]
[77.60875702 438.38436890]
[73.91852570 420.97000122]
[78.23200989 403.64483643]
[89.72472382 389.91235352]
[106.11558533 382.57046509]
[106.11558533 367.57046509]
[106.11558533 352.57046509]
[106.11558533 337.57046509]
[98.37828827 324.84320068]
[106.11558533 311.04302979]
[92.41549683 298.90121460]
[91.93284607 280.28189087]
[105.44084167 266.99850464]
[104.99423218 252.00514221]
[96.88142395 239.51388550]
[104.20441437 225.48945618]
[103.75781250 210.49610901]
[103.31120300 195.50276184]
[102.19555664 180.54431152]
[100.41308594 165.65058899]
[98.63062286 150.75688171]
[96.84815979 135.86315918]
[95.06568909 120.96943665]
[93.28322601 106.07572174]
[90.61996460 103.28656006]
[89.19905090 99.33702087]
[89.51116180 94.80826569]
[91.76907349 90.47909546]
[83.02679443 77.29262543]
[89.79605103 64.02513123]
[88.68039703 49.06667328]
[87.56475067 34.10822296]
[86.44910431 19.14976692]
[85.33345795 4.19131422]
[77.40942383 16.92747498]
[64.22579193 24.08232307]
[49.22872925 23.78559875]
[36.33842850 16.11486626]
[28.92438316 3.07523656]
[28.92461014 -11.92476368]
[36.33905029 -24.96416855]
[49.22958374 -32.63451004]
[64.22665405 -32.93078232]
[77.41007233 -25.77553368]
[85.33345795 -13.03998280]
[86.44910431 -27.99843597]
[87.56475067 -42.95689011]
[88.68039703 -57.91534424]
[89.79605103 -72.87379456]
[83.10659027 -87.21121979]
[91.76907349 -99.32776642]
[80.46043396 -89.47308350]
[65.46592712 -89.06727600]
[53.64082718 -98.29587555]
[50.39141846 -112.93968964]
[57.20328140 -126.30376434]
[70.96212769 -132.27822876]
[85.37759399 -128.13162231]
[93.85959625 -115.75794983]
[96.52539062 -130.51916504]
[99.19119263 -145.28038025]
[101.85698700 -160.04159546]
[104.30271149 -174.84086609]
[106.52783203 -189.67491150]
[108.75294495 -204.50895691]
[103.14838409 -219.30421448]
[112.68805695 -230.74290466]
[114.91317749 -245.57695007]
[100.57908630 -250.10247803]
[87.12947845 -256.81472778]
[74.89555359 -265.54846191]
[64.17859650 -276.08853149]
[55.24250793 -288.17541504]
[48.30735397 -301.51147461]
[43.54391861 -315.76824951]
[41.06950760 -330.59469604]
[40.94505310 -345.62570190]
[43.17361832 -360.49111938]
[47.70032501 -374.82482910]
[54.41369629 -388.27386475]
[63.14841461 -400.50708008]
[73.68937683 -411.22317505]
[85.77700043 -420.15826416]
[99.11362457 -427.09231567]
[113.37081146 -431.85458374]
[128.19746399 -434.32775879]
[143.22848511 -434.45098877]
[158.09368896 -432.22119141]
[172.42703247 -427.69329834]
[185.87553406 -420.97882080]
[198.10801697 -412.24307251]
[208.82324219 -401.70123291]
[217.75732422 -389.61288452]
[224.69027710 -376.27569580]
[229.45135498 -362.01809692]
[231.92332458 -347.19125366]
[232.04530334 -332.16021729]
[229.81428528 -317.29519653]
[225.28521729 -302.96221924]
[218.56962585 -289.51428223]
[209.83288574 -277.28250122]
[199.29014587 -266.56817627]
[187.20104980 -257.63507080]
[173.86329651 -250.70321655]
[159.60531616 -245.94331360]
[144.77824402 -243.47256470]
[129.74722290 -243.35183716]
[127.52210236 -228.51779175]
[133.28582764 -214.78356934]
[123.58699036 -202.28384399]
[121.36186981 -187.44979858]
[119.13675690 -172.61575317]
[121.20471954 -168.31080627]
[120.59029388 -162.66107178]
[116.61820221 -157.37580872]
[113.95240784 -142.61459351]
[111.28661346 -127.85337067]
[108.62081909 -113.09215546]
[106.72752380 -98.21212006]
[113.49678040 -84.94462585]
[104.75450134 -71.75814819]
[103.63885498 -56.79969406]
[102.52320862 -41.84123993]
[101.40755463 -26.88278770]
[100.29190826 -11.92433453]
[100.29190826 3.07566547]
[101.40755463 18.03411865]
[102.52320862 32.99257278]
[103.63885498 47.95102692]
[104.75450134 62.90948105]
[113.41698456 75.02602386]
[106.72752380 89.36344910]
[108.17694092 104.29325867]
[109.95941162 119.18697357]
[111.74187469 134.08068848]
[113.52433777 148.97441101]
[115.30680847 163.86813354]
[117.08927155 178.76184082]
[127.18758392 167.67022705]
[142.16404724 166.83013916]
[153.43945312 176.72282410]
[154.55473328 191.68130493]
[144.87101746 203.13667297]
[129.93557739 204.52679443]
[118.30455017 195.05615234]
[118.75115967 210.04949951]
[119.19776154 225.04286194]
[127.34251404 238.60653687]
[119.98758698 251.55854797]
[120.43418884 266.55187988]
[130.50851440 272.86413574]
[136.22636414 283.15039062]
[136.26837158 294.79910278]
[130.73977661 304.91592407]
[121.11558533 311.04302979]
[128.85289001 324.84320068]
[121.11558533 337.57046509]
[121.11558533 352.57046509]
[121.11558533 367.57046509]
[121.11558533 382.57046509]
[132.78903198 386.83786011]
[142.57115173 394.46566772]
[149.52774048 404.70642090]
[153.00032043 416.56408691]
[152.66836548 428.89086914]
[148.57888794 440.49835205]
[141.14042664 450.27209473]
[131.08227539 457.27856445]
[119.38304901 460.85433960]
[118.71326447 475.83938599]
[125.82663727 489.97128296]
[117.52874756 502.34036255]
[116.85896301 517.32543945]
[116.18917847 532.31042480]
[115.51939392 547.29547119]
[114.84960938 562.28051758]
[114.17982483 577.26556396]
[128.64370728 581.51519775]
[141.66993713 589.10339355]
[152.50119019 599.58898926]
[160.50775146 612.36236572]
[165.22412109 626.68084717]
[166.37609863 641.71203613]
[163.89671326 656.58197021]
[157.93011475 670.42620850]
[148.82318115 682.43988037]
[137.10539246 691.92443848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 200]
[15 199]
[16 198]
[17 197]
[18 196]
[19 195]
[21 193]
[22 192]
[28 183]
[29 182]
[30 181]
[31 180]
[33 178]
[36 173]
[37 172]
[39 170]
[40 169]
[41 168]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[47 156]
[51 155]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
[74 142]
[82 141]
[83 140]
[84 139]
[85 138]
[86 135]
[87 134]
[88 133]
[90 131]
[91 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
