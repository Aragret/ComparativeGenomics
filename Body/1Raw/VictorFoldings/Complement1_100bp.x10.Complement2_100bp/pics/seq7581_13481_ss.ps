%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[136.71585083 407.84051514]
[138.08497620 392.84655762]
[142.54199219 378.46499634]
[149.89202881 365.32458496]
[159.81381226 353.99975586]
[171.87356567 344.98556519]
[185.54411316 338.67605591]
[182.22186279 324.04858398]
[178.89959717 309.42114258]
[168.53558350 298.72363281]
[173.02420044 283.55252075]
[169.70193481 268.92507935]
[159.33792114 258.22756958]
[163.82653809 243.05645752]
[160.50427246 228.42900085]
[157.18202209 213.80154419]
[151.93530273 199.74906921]
[144.85818481 186.52354431]
[137.78108215 173.29801941]
[130.31333923 160.28906250]
[122.46159363 147.50822449]
[114.60983276 134.72737122]
[106.38102722 122.18597412]
[97.78246307 109.89513397]
[90.94866943 105.62057495]
[89.14897919 97.35668182]
[80.73435974 84.93918610]
[72.31974030 72.52169037]
[63.90512085 60.10419464]
[55.49050522 47.68669891]
[38.57923126 47.36279678]
[25.32489395 37.12444305]
[20.82992363 21.16333580]
[26.67512703 5.82348299]
[18.07656288 -6.46735525]
[19.94051361 8.41638374]
[17.17566681 23.15937042]
[10.04555225 36.35639572]
[-0.77023393 46.74960327]
[-14.24079990 53.34837723]
[-29.08221817 55.52376938]
[-43.87989807 53.06843185]
[-57.22341919 46.21639252]
[-67.84095764 35.62074280]
[-74.72052765 22.29139328]
[-77.20640564 7.49881268]
[-75.06165314 -7.34706354]
[-68.49069977 -20.83122253]
[-58.11983871 -31.66843796]
[-44.93755722 -38.82577896]
[-30.20031166 -41.62105179]
[-15.31275558 -39.78782654]
[-1.69388020 -33.50083542]
[9.35895920 -23.35843277]
[4.32204342 -37.48746109]
[-0.71487278 -51.61648941]
[-5.75178909 -65.74552155]
[-10.78870487 -79.87454987]
[-15.61649132 -65.67269897]
[-27.28941536 -56.25236130]
[-42.19049454 -54.53251648]
[-55.70246506 -61.04608917]
[-63.63850021 -73.77477264]
[-63.53953171 -88.77444458]
[-55.43622208 -101.39730072]
[-41.83947372 -107.73200226]
[-26.96238899 -105.81567383]
[-15.41464520 -96.24191284]
[-18.51875496 -110.91721344]
[-21.62286568 -125.59251404]
[-24.72697449 -140.26782227]
[-35.15260696 -152.16810608]
[-30.21658325 -166.22103882]
[-40.64221573 -178.12132263]
[-35.70618820 -192.17425537]
[-46.13182068 -204.07453918]
[-41.19579697 -218.12747192]
[-44.29990768 -232.80276489]
[-59.30233383 -231.91685486]
[-74.26922607 -233.27693176]
[-88.86621857 -236.85261536]
[-102.76720428 -242.56402588]
[-115.66163635 -250.28356934]
[-127.26144409 -259.83877563]
[-137.30747986 -271.01620483]
[-145.57531738 -283.56613159]
[-151.88026428 -297.20816040]
[-156.08143616 -311.63757324]
[-158.08499146 -326.53198242]
[-157.84617615 -341.55865479]
[-155.37031555 -356.38186646]
[-150.71273804 -370.67047119]
[-143.97746277 -384.10528564]
[-135.31500244 -396.38613892]
[-124.91883850 -407.23867798]
[-113.02124023 -416.42044067]
[-99.88801575 -423.72631836]
[-85.81255341 -428.99310303]
[-71.10930634 -432.10311890]
[-56.10675430 -432.98690796]
[-41.14005661 -431.62469482]
[-26.54357529 -428.04693604]
[-12.64340210 -422.33355713]
[0.24992929 -414.61218262]
[11.84837627 -405.05529785]
[21.89282417 -393.87646484]
[30.15888023 -381.32534790]
[36.46187210 -367.68240356]
[40.66099167 -353.25241089]
[42.66242981 -338.35772705]
[42.42147446 -323.33108521]
[39.94350433 -308.50820923]
[35.28388214 -294.22027588]
[28.54670525 -280.78643799]
[19.88248062 -268.50680542]
[9.48477554 -257.65576172]
[-2.41412425 -248.47567749]
[-15.54839230 -241.17166138]
[-29.62460518 -235.90687561]
[-26.52049446 -221.23158264]
[-16.31688881 -210.38096619]
[-21.03088760 -195.27836609]
[-10.82728195 -184.42774963]
[-15.54127979 -169.32514954]
[-5.33767509 -158.47453308]
[-10.05167294 -143.37193298]
[-6.94756269 -128.69662476]
[-3.84345269 -114.02132416]
[-0.73934245 -99.34601593]
[3.34032440 -84.91146851]
[8.37724018 -70.78244019]
[13.41415691 -56.65340805]
[18.45107269 -42.52437592]
[23.48798943 -28.39534760]
[30.36740112 -15.06591892]
[38.96596527 -2.77508116]
[52.27910995 -3.77621102]
[64.44606018 1.97787988]
[72.24303436 13.08088493]
[73.54594421 26.69414711]
[67.90799713 39.27208328]
[76.32261658 51.68957520]
[84.73723602 64.10707092]
[93.15185547 76.52456665]
[101.56647491 88.94206238]
[110.07330322 101.29656982]
[118.67186737 113.58740997]
[122.66929626 115.28283691]
[125.62229919 117.89900208]
[127.36966705 120.99449921]
[127.91011047 124.12092590]
[127.39067841 126.87561798]
[135.24243164 139.65646362]
[143.09419250 152.43730164]
[146.98362732 154.36766052]
[149.77566528 157.15495300]
[151.33569336 160.34896851]
[151.68908691 163.50201416]
[151.00660706 166.22090149]
[158.08372498 179.44644165]
[165.16082764 192.67196655]
[165.07873535 177.67218018]
[169.57591248 163.36221313]
[178.22372437 151.10597229]
[190.19790649 142.07165527]
[204.35717773 137.12036133]
[219.35192871 136.72399902]
[233.75299072 140.92036438]
[246.18772888 149.30947876]
[255.47094727 161.09175110]
[260.71783447 175.14416504]
[261.42828369 190.12733459]
[257.53457642 204.61314392]
[249.40783691 217.22093201]
[237.82266235 226.74897766]
[223.88327026 232.28913879]
[208.91828918 233.31336975]
[194.35406494 229.72402954]
[181.57876587 221.86323547]
[171.80947876 210.47927856]
[175.13172913 225.10673523]
[178.45399475 239.73419189]
[189.05564880 251.47793579]
[184.32939148 265.60281372]
[187.65165710 280.23025513]
[198.25331116 291.97399902]
[193.52706909 306.09887695]
[196.84931946 320.72634888]
[200.17158508 335.35379028]
[215.22639465 335.13903809]
[229.99681091 338.05944824]
[243.83709717 343.98733521]
[256.14224243 352.66357422]
[266.37432861 363.70886230]
[274.08602905 376.64035034]
[278.94021606 390.89273071]
[280.72470093 405.84295654]
[279.36148071 420.83746338]
[274.91012573 435.22076416]
[267.56524658 448.36407471]
[257.64791870 459.69281006]
[245.59170532 468.71176147]
[231.92364502 475.02664185]
[217.24122620 478.36135864]
[202.18632507 478.57019043]
[187.41706848 475.64398193]
[173.57910156 469.71066284]
[161.27737427 461.02957153]
[151.04965210 449.98028564]
[143.34304810 437.04574585]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 189]
[8 188]
[9 187]
[11 185]
[12 184]
[14 182]
[15 181]
[16 180]
[17 161]
[18 160]
[19 159]
[20 154]
[21 153]
[22 152]
[23 147]
[24 146]
[26 145]
[27 144]
[28 143]
[29 142]
[30 141]
[34 136]
[35 135]
[54 134]
[55 133]
[56 132]
[57 131]
[58 130]
[68 129]
[69 128]
[70 127]
[71 126]
[73 124]
[75 122]
[77 120]
[78 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
