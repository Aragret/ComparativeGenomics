%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[105.94449615 919.58966064]
[91.28975677 916.36798096]
[76.85868073 912.25885010]
[62.70495605 907.27758789]
[48.88124084 901.44268799]
[35.43895340 894.77593994]
[22.42810631 887.30206299]
[9.89709568 879.04888916]
[-2.10745978 870.04718018]
[-13.54090214 860.33032227]
[-24.36069679 849.93450928]
[-34.52659607 838.89843750]
[-44.00077820 827.26306152]
[-52.74800110 815.07183838]
[-60.73572540 802.36999512]
[-67.93423462 789.20477295]
[-74.31674194 775.62518311]
[-79.85951996 761.68182373]
[-84.54193878 747.42645264]
[-88.34658051 732.91210938]
[-91.25928497 718.19281006]
[-93.26923370 703.32336426]
[-94.36893463 688.35900879]
[-94.55429840 673.35546875]
[-93.82464600 658.36853027]
[-92.18267822 643.45397949]
[-89.63451385 628.66723633]
[-86.18962097 614.06329346]
[-81.86083221 599.69659424]
[-76.66423035 585.62054443]
[-70.61916351 571.88745117]
[-63.74811554 558.54840088]
[-56.07664490 545.65307617]
[-47.63328934 533.24945068]
[-38.44945908 521.38360596]
[-28.55932236 510.09970093]
[-17.99966812 499.43975830]
[-6.80978155 489.44338989]
[4.96871185 480.14779663]
[17.29199409 471.58755493]
[30.11422157 463.79452515]
[43.38769531 456.79769897]
[57.06303787 450.62307739]
[71.08937073 445.29364014]
[85.41452026 440.82925415]
[99.98519135 437.24645996]
[114.74718475 434.55862427]
[112.96472168 419.66491699]
[111.18225098 404.77117920]
[109.39978790 389.87747192]
[107.61732483 374.98376465]
[105.83485413 360.09002686]
[104.05239105 345.19631958]
[92.87061310 355.19470215]
[78.05705261 352.83706665]
[70.53172302 339.86132812]
[75.84200287 325.83276367]
[90.07336426 321.09268188]
[102.73409271 329.13391113]
[102.06430817 314.14886475]
[101.39452362 299.16381836]
[93.09663391 286.79473877]
[100.21000671 272.66284180]
[99.54022217 257.67779541]
[98.87043762 242.69276428]
[98.20065308 227.70771790]
[97.53086853 212.72268677]
[96.86108398 197.73764038]
[96.19129944 182.75260925]
[95.52151489 167.76756287]
[94.85173035 152.78253174]
[94.18194580 137.79748535]
[93.51216125 122.81245422]
[92.84237671 107.82741547]
[91.61539459 92.87767792]
[89.83293152 77.98396301]
[80.51056671 65.20100403]
[86.68064880 51.64447784]
[84.89817810 36.75075912]
[83.11571503 21.85704231]
[81.33325195 6.96332598]
[79.10813141 -7.87071800]
[76.44233704 -22.63193512]
[73.77654266 -37.39315414]
[71.11074829 -52.15436935]
[68.44495392 -66.91558838]
[53.39560699 -67.59749603]
[38.87546158 -71.61161041]
[25.61283493 -78.75657654]
[14.27297974 -88.67400360]
[5.42469501 -100.86643982]
[-0.48819169 -114.72232819]
[-3.16909266 -129.54664612]
[-2.48353529 -144.59582520]
[1.53409362 -159.11500549]
[8.68227100 -172.37588501]
[18.60244751 -183.71334839]
[30.79703140 -192.55867004]
[44.65434647 -198.46820068]
[59.47931671 -201.14550781]
[74.52832794 -200.45631409]
[89.04653168 -196.43516541]
[102.30568695 -189.28376770]
[113.64073944 -179.36085510]
[122.48311615 -167.16412354]
[128.38928223 -153.30537415]
[131.06300354 -138.47975159]
[130.37014771 -123.43090820]
[126.34548950 -108.91368866]
[119.19088745 -95.65625763]
[109.26521301 -84.32361603]
[97.06634521 -75.48419189]
[83.20616913 -69.58138275]
[85.87196350 -54.82016373]
[88.53775787 -40.05894852]
[91.20355225 -25.29773140]
[93.86934662 -10.53651333]
[96.09269714 -8.82921124]
[97.77371979 -6.13834238]
[98.53440094 -2.66605806]
[98.07683563 1.25250733]
[96.22696686 5.18086004]
[98.00942993 20.07457733]
[99.79190063 34.96829605]
[101.57436371 49.86201096]
[110.76924133 61.57967377]
[104.72664642 76.20149231]
[106.50911713 91.09521484]
[117.69089508 81.09681702]
[132.50445557 83.45446777]
[140.02978516 96.43019104]
[134.71949768 110.45876312]
[120.48813629 115.19884491]
[107.82741547 107.15763092]
[108.49720001 122.14266968]
[109.16698456 137.12770081]
[109.83676910 152.11274719]
[110.50655365 167.09777832]
[111.17633820 182.08282471]
[111.84612274 197.06785583]
[112.51590729 212.05290222]
[113.18569183 227.03793335]
[113.85547638 242.02297974]
[114.52526093 257.00802612]
[115.19504547 271.99304199]
[123.54084015 285.43395996]
[116.37956238 298.49404907]
[117.04934692 313.47906494]
[117.71913147 328.46411133]
[118.94610596 343.41384888]
[120.72856903 358.30755615]
[122.51103973 373.20129395]
[124.29350281 388.09500122]
[126.07597351 402.98870850]
[127.85843658 417.88244629]
[129.64089966 432.77615356]
[144.62025452 431.90457153]
[159.62489319 431.94781494]
[174.59898376 432.90573120]
[189.48681641 434.77471924]
[204.23301697 437.54788208]
[218.78273010 441.21487427]
[233.08181763 445.76205444]
[247.07710266 451.17248535]
[260.71649170 457.42608643]
[273.94931030 464.49957275]
[286.72625732 472.36663818]
[298.99981689 480.99798584]
[310.72436523 490.36151123]
[321.85626221 500.42242432]
[332.35409546 511.14328003]
[342.17880249 522.48413086]
[351.29385376 534.40289307]
[359.66534424 546.85516357]
[367.26211548 559.79467773]
[374.05590820 573.17315674]
[380.02145386 586.94104004]
[385.13656616 601.04693604]
[389.38220215 615.43841553]
[392.74258423 630.06201172]
[395.20520020 644.86322021]
[396.76089478 659.78704834]
[397.40386963 674.77795410]
[397.13174438 689.78021240]
[395.94552612 704.73791504]
[393.84960938 719.59552002]
[390.85183716 734.29766846]
[386.96331787 748.78979492]
[382.19854736 763.01782227]
[376.57522583 776.92895508]
[370.11431885 790.47137451]
[362.83978271 803.59472656]
[354.77874756 816.25018311]
[345.96118164 828.39062500]
[336.41986084 839.97100830]
[326.19030762 850.94812012]
[315.31057739 861.28118896]
[303.82113647 870.93176270]
[291.76470947 879.86395264]
[279.18618774 888.04449463]
[266.13235474 895.44299316]
[252.65173340 902.03192139]
[238.79449463 907.78674316]
[224.61221313 912.68609619]
[210.15760803 916.71166992]
[195.48448181 919.84857178]
[180.64741516 922.08514404]
[165.70158386 923.41296387]
[150.70260620 923.82720947]
[135.70628357 923.32623291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 156]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[53 150]
[59 149]
[60 148]
[61 147]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[71 137]
[72 136]
[73 135]
[74 134]
[75 128]
[76 127]
[78 125]
[79 124]
[80 123]
[81 122]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
