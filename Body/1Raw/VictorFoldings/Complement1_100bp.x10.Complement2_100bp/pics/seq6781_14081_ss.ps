%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[129.14817810 293.07800293]
[134.88154602 279.19522095]
[142.30973816 266.14053345]
[151.31558228 254.11979675]
[161.75703430 243.32261658]
[173.46943665 233.91926575]
[165.61769104 221.13842773]
[157.76593018 208.35758972]
[149.91416931 195.57673645]
[142.06242371 182.79589844]
[134.21066284 170.01506042]
[126.35890961 157.23422241]
[118.50715637 144.45336914]
[110.65539551 131.67253113]
[102.80364227 118.89168549]
[88.73545837 115.42291260]
[81.15090942 103.07702637]
[84.41551208 88.96006775]
[76.56375885 76.17922211]
[68.71200562 63.39838409]
[60.86024857 50.61754227]
[56.26931763 48.13350677]
[53.37928391 44.50018692]
[52.34309769 40.55793381]
[52.95801926 37.08601761]
[45.68478775 23.96732140]
[38.41156006 10.84862804]
[31.13833046 -2.27006626]
[23.86510086 -15.38876057]
[16.59187126 -28.50745392]
[3.10150146 -21.94109154]
[-10.71922493 -16.10202217]
[-24.83113098 -11.00679970]
[-39.19421768 -6.66986704]
[-53.76776505 -3.10351729]
[-68.51046753 -0.31785956]
[-83.38053894 1.67920971]
[-98.33581543 2.88202953]
[-113.33391571 3.28719044]
[-128.33232117 2.89354372]
[-143.28852844 1.70220566]
[-158.16012573 -0.28344703]
[-172.90496826 -3.05778575]
[-187.48124695 -6.61294651]
[-201.84765625 -10.93885136]
[-215.96347046 -16.02323723]
[-229.78868103 -21.85169411]
[-243.28408813 -28.40769958]
[-256.41143799 -35.67266846]
[-269.13351440 -43.62600708]
[-281.41427612 -52.24517441]
[-293.21890259 -61.50573730]
[-304.51394653 -71.38143921]
[-315.26736450 -81.84429932]
[-325.44866943 -92.86464691]
[-335.02902222 -104.41124725]
[-343.98126221 -116.45137024]
[-352.28002930 -128.95088196]
[-359.90176392 -141.87435913]
[-366.82485962 -155.18518066]
[-373.02972412 -168.84558105]
[-378.49877930 -182.81686401]
[-383.21649170 -197.05943298]
[-387.16946411 -211.53288269]
[-390.34655762 -226.19622803]
[-392.73873901 -241.00785828]
[-394.33920288 -255.92582703]
[-395.14340210 -270.90783691]
[-395.14913940 -285.91140747]
[-394.35632324 -300.89401245]
[-392.76721191 -315.81320190]
[-390.38632202 -330.62664795]
[-387.22039795 -345.29238892]
[-383.27841187 -359.76885986]
[-378.57156372 -374.01501465]
[-373.11315918 -387.99044800]
[-366.91870117 -401.65557861]
[-360.00570679 -414.97167969]
[-352.39382935 -427.90093994]
[-344.10458374 -440.40676880]
[-335.16152954 -452.45370483]
[-325.58996582 -464.00759888]
[-315.41702271 -475.03570557]
[-304.67160034 -485.50674438]
[-293.38409424 -495.39105225]
[-281.58651733 -504.66058350]
[-269.31231689 -513.28912354]
[-256.59628296 -521.25213623]
[-243.47447205 -528.52709961]
[-229.98405457 -535.09338379]
[-216.16329956 -540.93237305]
[-202.05136108 -546.02746582]
[-187.68824768 -550.36431885]
[-173.11466980 -553.93060303]
[-158.37194824 -556.71612549]
[-143.50186157 -558.71313477]
[-128.54658508 -559.91583252]
[-113.54847717 -560.32092285]
[-98.55007172 -559.92718506]
[-83.59387970 -558.73571777]
[-68.72229767 -556.75000000]
[-53.97747421 -553.97558594]
[-39.40121460 -550.42028809]
[-25.03483200 -546.09429932]
[-10.91904926 -541.00982666]
[2.90611863 -535.18127441]
[16.40148354 -528.62518311]
[29.52879143 -521.36016846]
[42.25083160 -513.40673828]
[54.53153992 -504.78747559]
[66.33610535 -495.52685547]
[77.63107300 -485.65106201]
[88.38442230 -475.18814087]
[98.56566620 -464.16772461]
[108.14594269 -452.62106323]
[117.09810638 -440.58090210]
[125.39678192 -428.08132935]
[133.01843262 -415.15777588]
[139.94146729 -401.84692383]
[146.14625549 -388.18649292]
[151.61520386 -374.21517944]
[156.33280945 -359.97256470]
[160.28572083 -345.49908447]
[163.46270752 -330.83575439]
[165.85478210 -316.02407837]
[167.45515442 -301.10610962]
[168.25927734 -286.12408447]
[168.26489258 -271.12051392]
[167.47198486 -256.13790894]
[165.88278198 -241.21875000]
[163.50180054 -226.40530396]
[160.33578491 -211.73957825]
[156.39372253 -197.26313782]
[151.68676758 -183.01702881]
[146.22828674 -169.04161072]
[140.03372192 -155.37652588]
[133.12066650 -142.06048584]
[125.50868988 -129.13125610]
[117.21938324 -116.62548065]
[108.27622986 -104.57859802]
[98.70459747 -93.02476501]
[88.53160858 -81.99673462]
[77.78610229 -71.52576447]
[66.49852753 -61.64153290]
[54.70090103 -52.37206268]
[42.42664719 -43.74362564]
[29.71056557 -35.78068542]
[36.98379517 -22.66198921]
[44.25702286 -9.54329586]
[51.53025436 3.57539845]
[58.80348206 16.69409180]
[66.07671356 29.81278610]
[73.64109039 42.76578522]
[81.49284363 55.54662704]
[89.34460449 68.32746887]
[97.19635773 81.10831451]
[111.26454163 84.57708740]
[118.84909058 96.92297363]
[115.58448792 111.03993225]
[123.43624115 123.82077789]
[131.28799438 136.60162354]
[139.13975525 149.38246155]
[146.99150085 162.16329956]
[154.84326172 174.94413757]
[162.69502258 187.72499084]
[170.54676819 200.50582886]
[178.39852905 213.28666687]
[186.25028992 226.06752014]
[199.93223572 219.87014771]
[214.28305054 215.43649292]
[229.07640076 212.83648682]
[244.07897949 212.11112976]
[259.05413818 213.27185059]
[273.76574707 216.30036926]
[287.98175049 221.14891052]
[301.47796631 227.74099731]
[314.04153442 235.97267151]
[325.47427368 245.71411133]
[335.59588623 256.81167603]
[344.24679565 269.09033203]
[351.29049683 282.35641479]
[356.61593628 296.40075684]
[360.13909912 311.00180054]
[361.80444336 325.92926025]
[361.58569336 340.94778442]
[359.48629761 355.82043457]
[355.53936768 370.31268311]
[349.80715942 384.19592285]
[342.38006592 397.25125122]
[333.37524414 409.27276611]
[322.93469238 420.07083130]
[311.22308350 429.47515869]
[298.42510986 437.33743286]
[284.74264526 443.53363037]
[270.39144897 447.96609497]
[255.59788513 450.56484985]
[240.59526062 451.28894043]
[225.62017822 450.12695312]
[210.90882874 447.09719849]
[196.69322205 442.24746704]
[183.19757080 435.65423584]
[170.63471985 427.42150879]
[159.20278931 417.67910767]
[149.08209229 406.58068848]
[140.43223572 394.30130005]
[133.38964844 381.03460693]
[128.06539917 366.98983765]
[124.54345703 352.38851929]
[122.87937164 337.46087646]
[123.09938812 322.44238281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 168]
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[15 159]
[18 156]
[19 155]
[20 154]
[21 153]
[25 152]
[26 151]
[27 150]
[28 149]
[29 148]
[30 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
