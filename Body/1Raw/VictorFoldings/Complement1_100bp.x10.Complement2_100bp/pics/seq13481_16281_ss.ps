%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[85.03070068 714.08752441]
[70.25984192 711.44720459]
[55.68391418 707.88464355]
[41.36045074 703.41387939]
[27.34597015 698.05249023]
[13.69578838 691.82177734]
[0.46377435 684.74627686]
[-12.29785061 676.85382080]
[-24.53872299 668.17565918]
[-36.21053314 658.74603271]
[-47.26721191 648.60205078]
[-57.66513443 637.78393555]
[-67.36325073 626.33416748]
[-76.32330322 614.29809570]
[-84.50991821 601.72320557]
[-91.89078522 588.65905762]
[-98.43678284 575.15722656]
[-104.12207794 561.27099609]
[-108.92422485 547.05517578]
[-112.82427216 532.56591797]
[-115.80683136 517.86035156]
[-117.86013794 502.99652100]
[-118.97608185 488.03311157]
[-119.15025330 473.02911377]
[-118.38197327 458.04382324]
[-116.67427063 443.13632202]
[-114.03388977 428.36547852]
[-110.47124481 413.78958130]
[-106.00039673 399.46615601]
[-100.63899231 385.45169067]
[-94.40818787 371.80154419]
[-87.33258057 358.56958008]
[-79.44008636 345.80798340]
[-70.76186371 333.56716919]
[-61.33214569 321.89538574]
[-51.18815994 310.83877563]
[-40.36994171 300.44091797]
[-28.92017746 290.74282837]
[-16.88405800 281.78286743]
[-4.30908680 273.59631348]
[8.75510979 266.21551514]
[22.25697327 259.66958618]
[36.14321518 253.98435974]
[50.35903931 249.18228149]
[64.84833527 245.28231812]
[79.55391693 242.29983521]
[94.41776276 240.24659729]
[93.30210876 225.28814697]
[84.63963318 213.17160034]
[91.32908630 198.83418274]
[90.21343994 183.87573242]
[89.09779358 168.91726685]
[87.98214722 153.95881653]
[86.86649323 139.00036621]
[80.96640015 152.79125977]
[71.30935669 164.26913452]
[58.73079300 172.44102478]
[44.31888962 176.59999084]
[29.32041168 176.38623047]
[15.03288174 171.81825256]
[2.69231367 163.29121399]
[-6.63371086 151.54280090]
[-12.13839722 137.58935547]
[-13.34553528 122.63800812]
[-10.15069485 107.98219299]
[-2.83026147 94.88977814]
[7.98247337 84.49339294]
[21.35210037 77.69243622]
[36.12201309 75.07524872]
[51.01446533 76.86824036]
[64.74111176 82.91631317]
[76.11446381 92.69623566]
[84.15060425 105.36195374]
[88.15390778 119.81426239]
[91.25801849 105.13896179]
[89.71247101 97.22796631]
[94.51913452 90.26902771]
[97.84139252 75.64156342]
[101.16365051 61.01410294]
[104.48590851 46.38664246]
[107.80817413 31.75918388]
[111.13043213 17.13172340]
[114.45269012 2.50426292]
[117.44746399 -12.19374084]
[120.11325836 -26.95495796]
[122.77905273 -41.71617508]
[125.44484711 -56.47739410]
[128.00068665 -71.25804901]
[130.44641113 -86.05731964]
[132.89213562 -100.85659027]
[135.33786011 -115.65586090]
[121.05619812 -120.33928680]
[107.65688324 -127.14801788]
[95.45401764 -135.92243958]
[84.73365021 -146.45686340]
[75.74707794 -158.50434875]
[68.70497131 -171.78250122]
[63.77239609 -185.98004150]
[61.06498718 -200.76416016]
[60.64620590 -215.78831482]
[62.52586746 -230.70030212]
[66.65991211 -245.15055847]
[72.95143127 -258.80035400]
[81.25294495 -271.32974243]
[91.36985016 -282.44497681]
[103.06499481 -291.88552856]
[116.06423187 -299.43008423]
[130.06283569 -304.90182495]
[144.73265076 -308.17242432]
[159.72981262 -309.16522217]
[174.70274353 -307.85699463]
[189.30049133 -304.27838135]
[203.18083191 -298.51327515]
[216.01840210 -290.69680786]
[227.51226807 -281.01220703]
[237.39300537 -269.68649292]
[245.42898560 -256.98516846]
[251.43183899 -243.20597839]
[255.26083374 -228.67192078]
[256.82626343 -213.72367859]
[256.09136963 -198.71166992]
[253.07339478 -183.98779297]
[247.84312439 -169.89721680]
[240.52311707 -156.77021790]
[231.28498840 -144.91452026]
[220.34527588 -134.60804749]
[207.96044922 -126.09239960]
[194.42080688 -119.56718445]
[180.04373169 -115.18536377]
[165.16625977 -113.04965973]
[150.13713074 -113.21012878]
[147.69140625 -98.41085815]
[145.24568176 -83.61158752]
[142.79995728 -68.81231689]
[144.81079102 -61.70047379]
[140.20606995 -53.81159592]
[137.54026794 -39.05038071]
[134.87448120 -24.28916359]
[132.20867920 -9.52794552]
[133.90794373 -6.43846893]
[134.19520569 -2.37244749]
[132.62779236 1.99750865]
[129.08015442 5.82652235]
[125.75788879 20.45398331]
[122.43563080 35.08144379]
[119.11337280 49.70890427]
[115.79111481 64.33636475]
[112.46884918 78.96382141]
[109.14659119 93.59128571]
[105.93331909 108.24307251]
[102.82920837 122.91837311]
[101.82495117 137.88471985]
[102.94059753 152.84317017]
[104.05624390 167.80162048]
[105.17189789 182.76007080]
[106.28754425 197.71853638]
[115.02982330 210.90499878]
[108.26056671 224.17250061]
[109.37621307 239.13095093]
[124.38018036 238.95654297]
[139.36549377 239.72459412]
[154.27301025 241.43205261]
[169.04389954 244.07220459]
[183.61985779 247.63462830]
[197.94337463 252.10525513]
[211.95790100 257.46643066]
[225.60815430 263.69702148]
[238.84024048 270.77243042]
[251.60194397 278.66473389]
[263.84289551 287.34274292]
[275.51480103 296.77227783]
[286.57159424 306.91610718]
[296.96963501 317.73416138]
[306.66787720 329.18377686]
[315.62805176 341.21975708]
[323.81478882 353.79458618]
[331.19580078 366.85867310]
[337.74194336 380.36044312]
[343.42736816 394.24658203]
[348.22967529 408.46234131]
[352.12988281 422.95156860]
[355.11257935 437.65710449]
[357.16604614 452.52090454]
[358.28213501 467.48434448]
[358.45648193 482.48831177]
[357.68835449 497.47360229]
[355.98080444 512.38110352]
[353.34057617 527.15197754]
[349.77807617 541.72790527]
[345.30737305 556.05139160]
[339.94613647 570.06591797]
[333.71545410 583.71612549]
[326.63998413 596.94818115]
[318.74765015 609.70983887]
[310.06954956 621.95074463]
[300.63995361 633.62261963]
[290.49606323 644.67938232]
[279.67794800 655.07733154]
[268.22830200 664.77551270]
[256.19226074 673.73565674]
[243.61738586 681.92230225]
[230.55326843 689.30322266]
[217.05146790 695.84930420]
[203.16528320 701.53466797]
[188.94952393 706.33691406]
[174.46026611 710.23706055]
[159.75471497 713.21966553]
[144.89088440 715.27307129]
[129.92747498 716.38909912]
[114.92350006 716.56329346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 159]
[48 158]
[50 156]
[51 155]
[52 154]
[53 153]
[54 152]
[74 151]
[75 150]
[77 149]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[84 139]
[85 138]
[86 137]
[87 136]
[88 134]
[89 133]
[90 132]
[91 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
