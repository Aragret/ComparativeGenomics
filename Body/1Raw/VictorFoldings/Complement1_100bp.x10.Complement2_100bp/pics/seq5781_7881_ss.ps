%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[115.65076447 749.57904053]
[114.31253052 734.63885498]
[105.47061157 722.65258789]
[111.94586182 708.21716309]
[110.60762787 693.27697754]
[109.26939392 678.33679199]
[107.93115997 663.39660645]
[96.37238312 654.07299805]
[94.80239868 638.94061279]
[104.66025543 626.87988281]
[103.32202148 611.93969727]
[101.98378754 596.99951172]
[100.64555359 582.05932617]
[89.79132843 568.26977539]
[97.67768097 551.62982178]
[96.11715698 536.71124268]
[87.09776306 524.85797119]
[93.35737610 510.32772827]
[80.54428101 505.60104370]
[70.97177887 495.76760864]
[66.54883575 482.70672607]
[68.19258881 468.94897461]
[75.63885498 457.18591309]
[87.48266602 449.74368286]
[86.14443207 434.80349731]
[84.80619812 419.86331177]
[83.46796417 404.92312622]
[82.12973022 389.98294067]
[73.89934540 402.52331543]
[60.23931122 408.72036743]
[45.38233566 406.65386963]
[33.93202209 396.96417236]
[29.43636894 382.65371704]
[33.28840256 368.15676880]
[44.29453278 357.96533203]
[59.04438782 355.23736572]
[72.96756744 360.81814575]
[81.74990082 372.97866821]
[74.58862305 359.91857910]
[82.93441772 346.47766113]
[83.60420227 331.49264526]
[84.27398682 316.50759888]
[84.94377136 301.52255249]
[85.61355591 286.53750610]
[86.28334045 271.55249023]
[86.95312500 256.56744385]
[72.10086823 251.99246216]
[58.92602158 243.72869873]
[48.32676315 232.33271790]
[41.02742386 218.57482910]
[37.52901077 203.38708496]
[38.07481766 187.80003357]
[42.63352203 172.87287903]
[50.90089798 159.62147522]
[62.32014465 148.94917297]
[76.11936188 141.58525085]
[91.36372375 138.03509521]
[91.81033325 123.04174805]
[92.25693512 108.04840088]
[92.59191132 93.05213928]
[92.81523895 78.05380249]
[93.03856659 63.05546570]
[93.26189423 48.05712891]
[93.48522186 33.05879211]
[82.75763702 21.76469803]
[83.19777679 6.55743265]
[94.03108215 -3.60008311]
[94.25440979 -18.59842110]
[94.47773743 -33.59675598]
[94.58940125 -48.59634399]
[94.58940125 -63.59634399]
[85.01471710 -79.32551575]
[94.37544250 -94.16949463]
[94.15211487 -109.16783142]
[93.92878723 -124.16616821]
[93.70545959 -139.16450500]
[93.48213196 -154.16284180]
[93.25880432 -169.16117859]
[90.20162201 -175.02336121]
[90.51660156 -180.69767761]
[93.25880432 -184.60783386]
[93.48213196 -199.60617065]
[93.70545959 -214.60450745]
[93.92878723 -229.60284424]
[94.04045105 -244.60243225]
[94.04045105 -259.60244751]
[94.04045105 -274.60244751]
[86.30315399 -288.40261841]
[94.04045105 -301.12988281]
[94.04045105 -316.12988281]
[85.48863220 -325.78540039]
[85.79743195 -338.27893066]
[94.25607300 -346.92636108]
[86.72509766 -360.84020996]
[94.65103149 -373.45086670]
[94.87435913 -388.44918823]
[91.87306213 -397.07647705]
[95.21432495 -403.66873169]
[95.66092682 -418.66207886]
[81.78221130 -424.86285400]
[71.33650970 -435.90621948]
[65.91671753 -450.10812378]
[66.34931946 -465.30291748]
[72.56833649 -479.17346191]
[83.62542725 -489.60461426]
[97.83445740 -495.00573730]
[113.02865601 -494.55313110]
[126.89101410 -488.31588745]
[137.30763245 -477.24508667]
[142.69003296 -463.02896118]
[142.21745300 -447.83535767]
[135.96195984 -433.98123169]
[124.87747192 -423.57919312]
[110.65428162 -418.21548462]
[110.20767212 -403.22213745]
[109.87269592 -388.22586060]
[109.64936829 -373.22753906]
[117.19631958 -360.38647461]
[109.25441742 -346.70303345]
[118.61514282 -331.85903931]
[109.04045105 -316.12988281]
[109.04045105 -301.12988281]
[116.77775574 -288.40261841]
[109.04045105 -274.60244751]
[109.04045105 -259.60244751]
[109.04045105 -244.60243225]
[112.18395233 -237.91362000]
[108.92712402 -229.37951660]
[108.70379639 -214.38117981]
[108.48046875 -199.38284302]
[108.25714111 -184.38450623]
[108.25714111 -169.38450623]
[108.48046875 -154.38616943]
[108.70379639 -139.38783264]
[108.92712402 -124.38949585]
[109.15045166 -109.39115906]
[109.37377930 -94.39282227]
[117.83242035 -85.74539948]
[118.14122772 -73.25186157]
[109.58940125 -63.59634399]
[109.58940125 -48.59634399]
[112.73290253 -41.90753174]
[109.47607422 -33.37342834]
[109.25274658 -18.37509346]
[109.02941895 -3.37675524]
[119.55548859 7.09880495]
[119.54266357 22.31243324]
[108.48355865 33.28211975]
[108.26023102 48.28045654]
[108.03690338 63.27879333]
[107.81357574 78.27713013]
[107.59024811 93.27546692]
[110.62862396 100.74144745]
[107.25028992 108.49501038]
[106.80368042 123.48835754]
[106.35707092 138.48170471]
[120.30036163 142.47129822]
[132.87236023 149.68258667]
[143.34207153 159.69102478]
[151.10198975 171.90959167]
[155.70333862 185.62321472]
[156.88204956 200.03062439]
[154.57389832 214.29110718]
[148.91796875 227.57366943]
[140.24833679 239.10536194]
[129.07426453 248.21635437]
[116.05035400 254.37875366]
[101.93816376 257.23721313]
[101.26837921 272.22225952]
[100.59859467 287.20730591]
[99.92881012 302.19235229]
[99.25902557 317.17736816]
[98.58924103 332.16241455]
[97.91945648 347.14746094]
[105.03282928 361.27935791]
[96.73493958 373.64843750]
[97.06991577 388.64471436]
[98.40814972 403.58489990]
[99.74638367 418.52508545]
[101.08461761 433.46527100]
[102.42285156 448.40545654]
[117.49358368 455.20727539]
[127.02309418 468.60443115]
[128.48759460 484.88546753]
[121.58169556 499.59820557]
[108.27597809 508.76721191]
[117.40699768 521.68756104]
[111.03575897 535.15069580]
[112.59628296 550.06927490]
[122.10621643 558.78271484]
[123.09884644 571.24060059]
[115.58573914 580.72113037]
[116.92397308 595.66125488]
[118.26220703 610.60144043]
[119.60044098 625.54162598]
[131.44479370 635.65844727]
[132.58912659 650.82897949]
[122.87134552 662.05841064]
[124.20957947 676.99859619]
[125.54781342 691.93878174]
[126.88604736 706.87896729]
[135.82368469 719.93377686]
[129.25271606 733.30059814]
[130.59094238 748.24078369]
[143.52163696 757.03460693]
[147.72479248 772.09674072]
[141.21582031 786.31530762]
[127.06803894 792.97668457]
[111.96161652 788.93566895]
[103.02933502 776.10021973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[2 203]
[4 201]
[5 200]
[6 199]
[7 198]
[10 195]
[11 194]
[12 193]
[13 192]
[15 189]
[16 188]
[18 186]
[24 181]
[25 180]
[26 179]
[27 178]
[28 177]
[38 176]
[40 174]
[41 173]
[42 172]
[43 171]
[44 170]
[45 169]
[46 168]
[57 156]
[58 155]
[59 154]
[60 152]
[61 151]
[62 150]
[63 149]
[64 148]
[67 145]
[68 144]
[69 143]
[70 141]
[71 140]
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[78 132]
[81 131]
[82 130]
[83 129]
[84 128]
[85 126]
[86 125]
[87 124]
[89 122]
[90 121]
[93 119]
[95 117]
[96 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
