%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[75.66972351 689.50646973]
[63.21119308 681.00732422]
[53.25834274 669.67633057]
[46.43681717 656.22576904]
[43.17543030 641.50115967]
[43.67918777 626.42810059]
[47.91642761 611.95410156]
[55.62078857 598.98901367]
[66.30797577 588.34783936]
[79.30617523 580.69946289]
[93.79831696 576.52465820]
[93.35170746 561.53131104]
[92.90510559 546.53796387]
[92.45849609 531.54461670]
[92.01188660 516.55126953]
[91.56528473 501.55792236]
[91.11867523 486.56457520]
[90.67207336 471.57122803]
[82.55926514 459.07995605]
[89.88224792 445.05554199]
[89.43564606 430.06219482]
[79.21360779 441.03988647]
[64.34268188 443.00344849]
[51.62165451 435.05514526]
[46.86640930 420.82885742]
[52.25098038 406.82861328]
[65.31361389 399.45516968]
[80.08224487 402.07955933]
[89.80551910 413.50366211]
[90.92116547 398.54522705]
[92.03681183 383.58676147]
[93.15246582 368.62832642]
[94.26811218 353.66986084]
[95.38375854 338.71139526]
[95.83036804 323.71804810]
[95.60704041 308.71972656]
[87.68110657 296.10906982]
[95.21208191 282.19522095]
[94.98875427 267.19686890]
[94.76542664 252.19854736]
[80.46224213 247.84196472]
[68.18931580 239.26609802]
[59.15577698 227.30050659]
[54.25636292 213.10943604]
[53.98277283 198.07853699]
[58.37438965 183.67962646]
[67.01316071 171.32649231]
[79.06337738 162.23612976]
[93.35250854 157.30882263]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[84.37723541 74.22607422]
[91.92418671 61.38501358]
[91.70085907 46.38667679]
[91.47753143 31.38833809]
[91.25420380 16.39000130]
[76.43688202 9.66832066]
[66.07131195 -2.79757738]
[62.19367218 -18.47954750]
[65.53100586 -34.22584152]
[75.36553192 -46.89453888]
[89.68825531 -53.98044968]
[89.24165344 -68.97380066]
[78.02045441 -79.77761841]
[77.78112030 -94.98936462]
[88.15005493 -105.62048340]
[87.70345306 -120.61383820]
[87.25684357 -135.60717773]
[86.81024170 -150.60054016]
[86.36363220 -165.59388733]
[85.91703033 -180.58723450]
[70.66775513 -183.32229614]
[56.32220459 -189.15763855]
[43.50302124 -197.83747864]
[32.76605606 -208.98260498]
[24.57629967 -222.10697937]
[19.28771782 -236.63893127]
[17.12797546 -251.94602966]
[18.18862152 -267.36264038]
[22.42122078 -282.21890259]
[29.63955307 -295.86965942]
[39.52780914 -307.72277832]
[51.65441132 -317.26452637]
[65.49083710 -324.08203125]
[80.43466949 -327.88107300]
[79.76488495 -342.86611938]
[79.09510040 -357.85113525]
[70.74930573 -371.29205322]
[77.91058350 -384.35214233]
[69.56478882 -397.79306030]
[76.72607422 -410.85311890]
[76.05628967 -425.83816528]
[61.52354813 -430.08999634]
[49.16024399 -438.83227539]
[40.30745316 -451.11669922]
[35.92546463 -465.61071777]
[36.48959732 -480.74215698]
[41.93866348 -494.86965942]
[51.68158722 -506.46078491]
[64.66152954 -514.25823975]
[79.47052002 -517.41613770]
[94.50219727 -515.59197998]
[108.12602997 -508.98370361]
[118.86421204 -498.30801392]
[125.55194092 -484.72299194]
[127.46378326 -469.70220947]
[124.39236450 -454.87503052]
[116.67083740 -441.84979248]
[105.13677979 -432.03936768]
[91.04132843 -426.50793457]
[91.71111298 -411.52291870]
[100.00899506 -399.15380859]
[92.89562225 -385.02191162]
[101.19351196 -372.65283203]
[94.08013916 -358.52093506]
[94.74992371 -343.53588867]
[95.41970825 -328.55084229]
[109.78892517 -326.32531738]
[123.44967651 -321.32974243]
[135.87327576 -313.75537109]
[146.57850647 -303.89337158]
[155.15025330 -292.12341309]
[161.25563049 -278.89938354]
[164.65689087 -264.73153687]
[165.22065735 -250.16711426]
[162.92320251 -235.76893616]
[157.85140991 -222.09385681]
[150.19949341 -209.67112732]
[140.26156616 -198.98194885]
[128.42031860 -190.44081116]
[115.13232422 -184.37942505]
[100.91037750 -181.03384399]
[101.35698700 -166.04049683]
[101.80358887 -151.04713440]
[102.25019836 -136.05378723]
[102.69680023 -121.06044006]
[103.14340973 -106.06709290]
[114.12673950 -96.07199097]
[114.79325104 -80.87296295]
[104.23500061 -69.42040253]
[104.68161011 -54.42705536]
[117.61698151 -49.41265488]
[127.69596863 -39.81651306]
[133.37408447 -27.06353378]
[133.76387024 -13.06572628]
[128.77349854 0.06445452]
[119.12552643 10.33289623]
[106.25254059 16.16667366]
[106.47586823 31.16501045]
[106.69919586 46.16334915]
[106.92252350 61.16168594]
[114.84845734 73.77234650]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[108.35084534 157.08549500]
[122.78034210 161.58517456]
[135.09587097 170.31272888]
[144.09861755 182.40318298]
[148.91699219 196.66496277]
[149.09104919 211.69732666]
[144.61631775 226.02798462]
[135.94305420 238.25723267]
[123.93090057 247.19470215]
[109.76377106 251.97521973]
[109.98709869 266.97354126]
[110.21042633 281.97189331]
[118.15232849 295.65533447]
[110.60537720 308.49639893]
[110.82870483 323.49472046]
[122.02613831 313.51388550]
[137.00872803 314.23641968]
[147.19375610 325.24844360]
[146.74679565 340.24179077]
[135.92387390 350.62756348]
[120.92485046 350.45632935]
[110.34221649 339.82705688]
[109.22656250 354.78552246]
[108.11091614 369.74395752]
[106.99526978 384.70242310]
[105.87962341 399.66085815]
[104.76396942 414.61932373]
[104.42899323 429.61557007]
[104.87560272 444.60894775]
[113.02035522 458.17260742]
[105.66542053 471.12460327]
[106.11203003 486.11798096]
[106.55863190 501.11132812]
[107.00524139 516.10467529]
[107.45184326 531.09802246]
[107.89845276 546.09136963]
[108.34505463 561.08471680]
[108.79166412 576.07806396]
[123.50659943 579.38287354]
[136.93699646 586.24401855]
[148.23860168 596.23022461]
[156.70100403 608.71374512]
[161.79223633 622.90985107]
[163.19226074 637.92620850]
[160.81307983 652.81884766]
[154.80424500 666.65161133]
[145.54347229 678.55487061]
[133.61291504 687.78051758]
[119.76251984 693.74859619]
[104.86293793 696.08386230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 198]
[12 197]
[13 196]
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[20 189]
[21 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[35 175]
[36 174]
[38 172]
[39 171]
[40 170]
[49 161]
[50 160]
[51 159]
[52 158]
[54 156]
[56 154]
[57 153]
[58 152]
[59 151]
[65 144]
[66 143]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[88 120]
[89 119]
[90 118]
[92 116]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
