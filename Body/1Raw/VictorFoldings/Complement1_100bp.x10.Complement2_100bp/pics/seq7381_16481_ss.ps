%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[206.16703796 282.40945435]
[214.58106995 269.97357178]
[224.29034424 258.52032471]
[213.96368408 247.64097595]
[203.63700867 236.76164246]
[193.31034851 225.88230896]
[178.93653870 221.97805786]
[175.04766846 206.64225769]
[164.72099304 195.76290894]
[154.39433289 184.88357544]
[144.06765747 174.00424194]
[145.98744202 188.88088989]
[140.30302429 202.76208496]
[128.50033569 212.01931763]
[113.66454315 214.23277283]
[99.67370605 208.82385254]
[90.18498230 197.20645142]
[87.67871094 182.41731262]
[92.81001282 168.32229614]
[104.23759460 158.60578918]
[118.97430420 155.80767822]
[133.16726685 160.65887451]
[124.56869507 148.36804199]
[115.97013092 136.07720947]
[107.37156677 123.78636932]
[98.77300262 111.49552917]
[98.94397736 126.49455261]
[92.20730591 139.89668274]
[80.06797791 148.70787048]
[65.23796082 150.95964050]
[51.03030777 146.14895630]
[40.61904907 135.35055542]
[36.33008575 120.97679901]
[39.12158203 106.23883820]
[48.36991501 94.42916107]
[62.00897980 88.18608856]
[76.99177551 88.90433502]
[89.97111511 96.42346191]
[83.49162292 82.89511871]
[77.01213074 69.36676788]
[70.53263092 55.83842468]
[63.65321732 42.50899506]
[56.37998962 29.39030075]
[49.10675812 16.27160645]
[41.83353043 3.15291309]
[33.98177338 -9.62792969]
[25.56715584 -22.04542542]
[11.42041779 -29.12923431]
[10.68593502 -44.00571823]
[2.27131605 -56.42321396]
[-6.14330244 -68.84071350]
[-14.55792141 -81.25820923]
[-22.97253990 -93.67570496]
[-36.14349365 -86.47356415]
[-49.93941879 -80.55603790]
[-64.23538208 -75.97670746]
[-78.90190125 -72.77703857]
[-93.80616760 -70.98602295]
[-108.81318665 -70.61987305]
[-123.78705597 -71.68190765]
[-138.59217834 -74.16250610]
[-153.09445190 -78.03919983]
[-167.16255188 -83.27688599]
[-180.66906738 -89.82813263]
[-193.49166870 -97.63359833]
[-205.51426697 -106.62260437]
[-216.62792969 -116.71373749]
[-226.73205566 -127.81560516]
[-235.73510742 -139.82768250]
[-243.55555725 -152.64115906]
[-250.12257385 -166.14001465]
[-255.37670898 -180.20198059]
[-259.27035522 -194.69970703]
[-261.76824951 -209.50190735]
[-262.84777832 -224.47453308]
[-262.49917603 -239.48197937]
[-260.72558594 -254.38832092]
[-257.54306030 -269.05856323]
[-252.98043823 -283.35986328]
[-247.07904053 -297.16271973]
[-239.89230347 -310.34207153]
[-231.48532104 -322.77859497]
[-221.93421936 -334.35968018]
[-211.32550049 -344.98040771]
[-199.75524902 -354.54461670]
[-187.32824707 -362.96566772]
[-174.15702820 -370.16732788]
[-160.36088562 -376.08435059]
[-146.06475830 -380.66317749]
[-131.39813232 -383.86230469]
[-116.49379730 -385.65277100]
[-101.48676300 -386.01837158]
[-86.51293182 -384.95581055]
[-71.70790863 -382.47467041]
[-57.20577240 -378.59744263]
[-43.13786697 -373.35925293]
[-29.63158989 -366.80749512]
[-16.80925941 -359.00155640]
[-4.78700256 -350.01211548]
[6.32630491 -339.92059326]
[16.43001747 -328.81835938]
[25.43263054 -316.80593872]
[33.25261307 -303.99218750]
[39.81914520 -290.49310303]
[45.07275772 -276.43093872]
[48.96587372 -261.93304443]
[51.46323395 -247.13076782]
[52.54222107 -232.15809631]
[52.19306564 -217.15068054]
[50.41893005 -202.24440002]
[47.23587418 -187.57426453]
[42.67273331 -173.27311707]
[36.77083206 -159.47050476]
[29.58361435 -146.29139709]
[21.17617607 -133.85517883]
[11.62465572 -122.27445221]
[1.01555562 -111.65410614]
[-10.55504417 -102.09031677]
[-2.14042568 -89.67282104]
[6.27419281 -77.25533295]
[14.68881130 -64.83783722]
[23.10342979 -52.42033768]
[36.64830017 -46.22471237]
[37.98465347 -30.46004295]
[46.39926910 -18.04254723]
[50.28599930 -32.53024292]
[63.20921707 -40.14538574]
[77.76592255 -36.52567291]
[85.61737061 -23.74464226]
[82.26589966 -9.12384892]
[69.63137817 -1.03874624]
[54.95222473 -4.12031651]
[62.22545242 8.99837780]
[69.49868011 22.11707115]
[76.77191162 35.23576736]
[79.42633820 36.13696671]
[81.88372040 38.14392471]
[83.72111511 41.18684769]
[84.54860687 45.04428101]
[84.06097412 49.35892868]
[90.54047394 62.88727570]
[97.01996613 76.41561890]
[103.49946594 89.94396210]
[111.06384277 102.89696503]
[119.66240692 115.18780518]
[128.26097107 127.47863770]
[136.85954285 139.76947021]
[145.45809937 152.06031799]
[154.94699097 163.67758179]
[165.27366638 174.55691528]
[175.60034180 185.43624878]
[185.92700195 196.31558228]
[201.03942871 200.99798584]
[204.18968201 215.55564880]
[214.51634216 226.43498230]
[224.84301758 237.31431580]
[235.16967773 248.19364929]
[247.11312866 239.09413147]
[259.97042847 231.33927917]
[273.59078979 225.02005005]
[287.81454468 220.21049500]
[302.47494507 216.96702576]
[317.40008545 215.32766724]
[332.41497803 215.31164551]
[347.34356689 216.91912842]
[362.01086426 220.13128662]
[376.24487305 224.91044617]
[389.87869263 231.20059204]
[402.75250244 238.92796326]
[414.71536255 248.00195312]
[425.62698364 258.31619263]
[435.35946655 269.74972534]
[443.79870605 282.16854858]
[450.84573364 295.42700195]
[456.41790771 309.36965942]
[460.44995117 323.83306885]
[462.89453125 338.64764404]
[463.72305298 353.63964844]
[462.92575073 368.63336182]
[460.51199341 383.45297241]
[456.51007080 397.92474365]
[450.96691895 411.87896729]
[443.94750977 425.15206909]
[435.53414917 437.58843994]
[425.82550049 449.04220581]
[414.93536377 459.37911987]
[402.99142456 468.47799683]
[390.13369751 476.23214722]
[376.51300049 482.55065918]
[362.28897095 487.35943604]
[347.62841797 490.60214233]
[332.70318604 492.24069214]
[317.68829346 492.25592041]
[302.75976562 490.64761353]
[288.09265137 487.43466187]
[273.85891724 482.65475464]
[260.22543335 476.36386108]
[247.35202026 468.63580322]
[235.38966370 459.56115723]
[224.47859192 449.24633789]
[214.74671936 437.81225586]
[206.30816650 425.39300537]
[199.26185608 412.13418579]
[193.69041443 398.19119263]
[189.65916443 383.72760010]
[187.21534729 368.91290283]
[186.38764954 353.92083740]
[187.18576050 338.92715454]
[189.60031128 324.10766602]
[193.60301208 309.63610840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 157]
[4 156]
[5 155]
[6 154]
[8 152]
[9 151]
[10 150]
[11 149]
[22 148]
[23 147]
[24 146]
[25 145]
[26 144]
[38 143]
[39 142]
[40 141]
[41 140]
[42 135]
[43 134]
[44 133]
[45 132]
[46 125]
[47 124]
[49 122]
[50 121]
[51 120]
[52 119]
[53 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
