%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[44.47262573 990.85736084]
[29.47823334 990.38995361]
[14.51091385 989.37518311]
[-0.40935931 987.81451416]
[-15.26267815 985.70996094]
[-30.02922440 983.06427002]
[-44.68929672 979.88110352]
[-59.22332764 976.16461182]
[-73.61193085 971.91979980]
[-87.83590698 967.15234375]
[-101.87627411 961.86853027]
[-115.71430206 956.07550049]
[-129.33152771 949.78094482]
[-142.70976257 942.99322510]
[-155.83117676 935.72143555]
[-168.67826843 927.97534180]
[-181.23387146 919.76513672]
[-193.48126221 911.10186768]
[-205.40406799 901.99707031]
[-216.98638916 892.46295166]
[-228.21278381 882.51214600]
[-239.06826782 872.15795898]
[-249.53836060 861.41424561]
[-259.60906982 850.29528809]
[-269.26696777 838.81597900]
[-278.49920654 826.99157715]
[-287.29339600 814.83789062]
[-295.63787842 802.37109375]
[-303.52145386 789.60791016]
[-310.93365479 776.56530762]
[-317.86453247 763.26068115]
[-324.30490112 749.71179199]
[-330.24612427 735.93676758]
[-335.68032837 721.95391846]
[-340.60018921 707.78192139]
[-344.99917603 693.43969727]
[-348.87142944 678.94641113]
[-352.21179199 664.32135010]
[-355.01574707 649.58404541]
[-357.27963257 634.75415039]
[-359.00036621 619.85150146]
[-360.17568970 604.89593506]
[-360.80401611 589.90740967]
[-360.88452148 574.90594482]
[-360.41708374 559.91156006]
[-359.40234375 544.94421387]
[-357.84161377 530.02398682]
[-355.73703003 515.17065430]
[-353.09136963 500.40411377]
[-349.90817261 485.74404907]
[-346.19168091 471.20999146]
[-341.94686890 456.82141113]
[-337.17935181 442.59744263]
[-331.89556885 428.55706787]
[-326.10250854 414.71905518]
[-319.80792236 401.10183716]
[-313.02020264 387.72360229]
[-305.74841309 374.60220337]
[-298.00225830 361.75512695]
[-289.79205322 349.19952393]
[-281.12878418 336.95214844]
[-272.02401733 325.02935791]
[-262.48983765 313.44702148]
[-252.53903198 302.22064209]
[-242.18486023 291.36517334]
[-231.44111633 280.89508057]
[-220.32215881 270.82440186]
[-208.84281921 261.16650391]
[-197.01840210 251.93428040]
[-184.86470032 243.14009094]
[-172.39793396 234.79563904]
[-159.63471985 226.91206360]
[-146.59210205 219.49989319]
[-133.28746033 212.56901550]
[-119.73858643 206.12866211]
[-105.96352386 200.18743896]
[-91.98066711 194.75328064]
[-77.80867767 189.83341980]
[-63.46645737 185.43444824]
[-48.97314453 181.56221008]
[-34.34807968 178.22187805]
[-19.61077881 175.41790771]
[-4.78090048 173.15405273]
[10.12176418 171.43331909]
[25.07733154 170.25801086]
[40.06584549 169.62969971]
[55.06730652 169.54920959]
[70.06169891 170.01666260]
[85.02901459 171.03143311]
[86.58953857 156.11283875]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[79.51674652 82.33812714]
[66.57749939 74.63163757]
[55.59774399 64.32343292]
[47.09101868 51.89565277]
[41.45520401 37.92956543]
[38.95389557 23.07838440]
[39.70408249 8.03673267]
[43.67067719 -6.49186659]
[50.66815186 -19.82788467]
[60.36923218 -31.34757042]
[72.32016754 -40.51213074]
[85.96200562 -46.89291763]
[100.65667725 -50.19149399]
[115.71689606 -50.25357819]
[130.43826294 -47.07626724]
[144.13224792 -40.80816650]
[156.15834045 -31.74245071]
[165.95405579 -20.30313683]
[173.06124878 -7.02526379]
[177.14749146 7.47013855]
[178.02166748 22.50509453]
[175.64288330 37.37639236]
[170.12240601 51.38846970]
[161.71842957 63.88596344]
[150.82403564 74.28433990]
[137.94876099 82.09725189]
[123.69482422 86.95926666]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[101.50814056 157.67335510]
[99.94762421 172.59196472]
[114.80094147 174.69650269]
[129.56748962 177.34211731]
[144.22756958 180.52526855]
[158.76161194 184.24171448]
[173.15022278 188.48649597]
[187.37420654 193.25395203]
[201.41459656 198.53770447]
[215.25262451 204.33071899]
[228.86985779 210.62527466]
[242.24812317 217.41294861]
[255.36955261 224.68469238]
[268.21664429 232.43081665]
[280.77227783 240.64096069]
[293.01968384 249.30419922]
[304.94250488 258.40893555]
[316.52484131 267.94308472]
[327.75125122 277.89385986]
[338.60678101 288.24798584]
[349.07687378 298.99169922]
[359.14761353 310.11062622]
[368.80554199 321.58993530]
[378.03778076 333.41433716]
[386.83203125 345.56799316]
[395.17651367 358.03475952]
[403.06011963 370.79794312]
[410.47235107 383.84054565]
[417.40325928 397.14514160]
[423.84365845 410.69400024]
[429.78491211 424.46905518]
[435.21911621 438.45187378]
[440.13900757 452.62387085]
[444.53805542 466.96606445]
[448.41033936 481.45938110]
[451.75070190 496.08441162]
[454.55471802 510.82171631]
[456.81860352 525.65161133]
[458.53939819 540.55426025]
[459.71475220 555.50982666]
[460.34310913 570.49835205]
[460.42364502 585.49975586]
[459.95623779 600.49420166]
[458.94149780 615.46148682]
[457.38082886 630.38177490]
[455.27627563 645.23510742]
[452.63064575 660.00164795]
[449.44744873 674.66174316]
[445.73098755 689.19573975]
[441.48620605 703.58435059]
[436.71875000 717.80834961]
[431.43496704 731.84869385]
[425.64193726 745.68676758]
[419.34738159 759.30395508]
[412.55969238 772.68225098]
[405.28793335 785.80364990]
[397.54180908 798.65075684]
[389.33163452 811.20635986]
[380.66839600 823.45373535]
[371.56362915 835.37658691]
[362.02947998 846.95892334]
[352.07870483 858.18530273]
[341.72454834 869.04083252]
[330.98083496 879.51092529]
[319.86187744 889.58160400]
[308.38256836 899.23956299]
[296.55816650 908.47180176]
[284.40447998 917.26599121]
[271.93774414 925.61047363]
[259.17453003 933.49407959]
[246.13192749 940.90625000]
[232.82731628 947.83715820]
[219.27844238 954.27758789]
[205.50340271 960.21881104]
[191.52055359 965.65301514]
[177.34857178 970.57287598]
[163.00636292 974.97192383]
[148.51306152 978.84417725]
[133.88800049 982.18450928]
[119.15069580 984.98852539]
[104.32082367 987.25238037]
[89.41816711 988.97314453]
[74.46260071 990.14849854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 129]
[90 128]
[91 127]
[92 126]
[93 125]
[95 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
