%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[177.67219543 748.70111084]
[164.49795532 741.52008057]
[151.76356506 733.58514404]
[139.51210022 724.92315674]
[127.78499603 715.56347656]
[116.62196350 705.53778076]
[106.06075287 694.88000488]
[96.13710785 683.62615967]
[86.88461304 671.81427002]
[78.33457184 659.48443604]
[70.51590729 646.67834473]
[63.45508575 633.43927002]
[57.17599487 619.81207275]
[51.69988251 605.84283447]
[47.04527664 591.57879639]
[43.22792816 577.06823730]
[40.26075363 562.36029053]
[38.15379333 547.50469971]
[36.91417313 532.55169678]
[36.54609299 517.55194092]
[37.05079651 502.55618286]
[38.42657471 487.61511230]
[40.66877365 472.77932739]
[43.76980591 458.09899902]
[47.71917725 443.62384033]
[52.50352478 429.40280151]
[58.10665894 415.48397827]
[64.50962830 401.91455078]
[71.69075012 388.74032593]
[79.62574768 376.00598145]
[88.28775024 363.75454712]
[97.64746094 352.02749634]
[107.67320251 340.86450195]
[118.33106232 330.30331421]
[129.58496094 320.37973022]
[141.39683533 311.12728882]
[153.72669983 302.57730103]
[166.53285217 294.75866699]
[179.77194214 287.69790649]
[173.49458313 274.07458496]
[167.21722412 260.45129395]
[160.93986511 246.82795715]
[148.58644104 238.50677490]
[149.83837891 222.73518372]
[143.56101990 209.11186218]
[137.28366089 195.48854065]
[121.27197266 190.34414673]
[113.78775024 174.90713501]
[119.90172577 158.51693726]
[107.42578125 150.38058472]
[108.44275665 134.59210205]
[101.96326447 121.06375885]
[95.48377228 107.53540802]
[92.70526886 106.28263855]
[90.32118988 103.99120331]
[88.71711731 100.80522919]
[88.21998596 97.00930023]
[89.04825592 93.00343323]
[83.38546753 79.11341095]
[77.24789429 72.34819794]
[77.74346924 64.97418213]
[72.28811646 51.00138092]
[66.83275604 37.02858353]
[54.60631561 26.98743248]
[57.18497849 12.31774330]
[51.72962189 -1.65505457]
[46.27426147 -15.62785244]
[40.81890488 -29.60065079]
[35.36354828 -43.57344818]
[29.90819168 -57.54624557]
[24.45283508 -71.51904297]
[23.16131973 -56.57474899]
[18.50339890 -42.31628418]
[10.72341728 -29.49162483]
[0.22949940 -18.77352333]
[-12.42786694 -10.72423267]
[-26.58469963 -5.76600122]
[-41.49836349 -4.15892792]
[-56.38651276 -5.98731613]
[-70.46814728 -11.15525341]
[-83.00457001 -19.39163780]
[-93.33815002 -30.26440811]
[-100.92680359 -43.20320129]
[-105.37245178 -57.52926636]
[-106.44187927 -72.49109650]
[-104.07898712 -87.30381775]
[-98.40772247 -101.19039154]
[-89.72560120 -113.42234039]
[-78.48806000 -123.35801697]
[-65.28459930 -130.47621155]
[-50.80784988 -134.40351868]
[-35.81723022 -134.93391418]
[-21.09911919 -132.03956604]
[-7.42559862 -125.87232971]
[4.48604536 -116.75571442]
[14.01095200 -105.16795349]
[20.65002251 -91.71536255]
[20.65002251 -106.71536255]
[20.65002251 -121.71536255]
[6.87615299 -128.29132080]
[-2.67377353 -140.19769287]
[-6.10361290 -155.07044983]
[-2.73236847 -169.95660400]
[6.77059698 -181.90049744]
[20.51846313 -188.53063965]
[35.78158188 -188.53063965]
[49.52944565 -181.90049744]
[59.03241348 -169.95660400]
[62.40365601 -155.07044983]
[58.97381592 -140.19769287]
[49.42388916 -128.29132080]
[35.65002060 -121.71536255]
[35.65002060 -106.71536255]
[35.65002060 -91.71536255]
[38.42563248 -76.97440338]
[43.88098907 -63.00160217]
[49.33634567 -49.02880478]
[54.79170227 -35.05600739]
[60.24706268 -21.08320999]
[65.70241547 -7.11041164]
[71.15777588 6.86238623]
[82.99401093 15.90410995]
[80.80555725 31.57322693]
[86.26091003 45.54602432]
[91.71627045 59.51882172]
[97.27549744 73.45062256]
[102.93827820 87.34064484]
[109.01211548 101.05591583]
[115.49160767 114.58425903]
[121.97110748 128.11260986]
[134.91050720 137.21658325]
[133.43006897 152.03742981]
[146.56451416 155.02087402]
[155.45277405 164.88035583]
[157.01640320 177.86639404]
[150.90696716 189.21118164]
[157.18432617 202.83450317]
[163.46168518 216.45782471]
[176.26411438 225.75343323]
[174.56318665 240.55059814]
[180.84054565 254.17391968]
[187.11790466 267.79724121]
[193.39526367 281.42056274]
[207.36445618 275.94427490]
[221.62843323 271.28948975]
[236.13893127 267.47195435]
[250.84684753 264.50460815]
[265.70242310 262.39746094]
[280.65536499 261.15765381]
[295.65512085 260.78936768]
[310.65090942 261.29388428]
[325.59197998 262.66949463]
[340.42779541 264.91149902]
[355.10815430 268.01235962]
[369.58337402 271.96154785]
[383.80447388 276.74572754]
[397.72335815 282.34869385]
[411.29287720 288.75146484]
[424.46716309 295.93243408]
[437.20162964 303.86727905]
[449.45318604 312.52911377]
[461.18035889 321.88870239]
[472.34347534 331.91430664]
[482.90475464 342.57202148]
[492.82849121 353.82580566]
[502.08108521 365.63754272]
[510.63122559 377.96731567]
[518.45001221 390.77337646]
[525.51092529 404.01239014]
[531.79016113 417.63955688]
[537.26635742 431.60876465]
[541.92108154 445.87277222]
[545.73858643 460.38327026]
[548.70587158 475.09118652]
[550.81292725 489.94677734]
[552.05267334 504.89974976]
[552.42089844 519.89947510]
[551.91632080 534.89526367]
[550.54064941 549.83636475]
[548.29858398 564.67218018]
[545.19769287 579.35247803]
[541.24841309 593.82769775]
[536.46417236 608.04876709]
[530.86114502 621.96765137]
[524.45831299 635.53710938]
[517.27728271 648.71136475]
[509.34240723 661.44580078]
[500.68051147 673.69732666]
[491.32089233 685.42443848]
[481.29522705 696.58752441]
[470.63748169 707.14880371]
[459.38363647 717.07250977]
[447.57186890 726.32501221]
[435.24206543 734.87512207]
[422.43597412 742.69384766]
[409.19692993 749.75469971]
[395.56973267 756.03387451]
[381.60049438 761.51000977]
[367.33648682 766.16467285]
[352.82595825 769.98211670]
[338.11801147 772.94934082]
[323.26242065 775.05633545]
[308.30944824 776.29602051]
[293.30972290 776.66418457]
[278.31393433 776.15954590]
[263.37286377 774.78381348]
[248.53706360 772.54168701]
[233.85673523 769.44073486]
[219.38156128 765.49139404]
[205.16049194 760.70709229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 143]
[40 142]
[41 141]
[42 140]
[44 138]
[45 137]
[46 136]
[49 132]
[51 130]
[52 129]
[53 128]
[58 127]
[59 126]
[61 125]
[62 124]
[63 123]
[65 121]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
