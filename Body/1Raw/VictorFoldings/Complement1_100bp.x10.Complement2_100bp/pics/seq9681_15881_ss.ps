%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[142.38212585 722.30285645]
[128.86021423 728.83264160]
[114.69219971 733.80731201]
[100.05628204 737.16436768]
[85.13651276 738.86163330]
[70.12052917 738.87762451]
[55.19717026 737.21228027]
[40.55411530 733.88647461]
[26.37551689 728.94207764]
[12.83968163 722.44122314]
[0.11683962 714.46563721]
[-11.63300610 705.11572266]
[-22.26208878 694.50903320]
[-31.63673592 682.77886963]
[-39.63905334 670.07287598]
[-46.16839981 656.55072021]
[-51.14266586 642.38256836]
[-54.49929428 627.74658203]
[-56.19606781 612.82672119]
[-56.21165466 597.81079102]
[-54.54585266 582.88745117]
[-51.21961212 568.24450684]
[-46.27476501 554.06604004]
[-39.77350235 540.53039551]
[-31.79757690 527.80780029]
[-22.44729805 516.05822754]
[-11.84025478 505.42947388]
[-0.10984258 496.05517578]
[12.59641647 488.05325317]
[26.11872864 481.52429199]
[40.28703308 476.55044556]
[54.92315292 473.19427490]
[69.84302521 471.49792480]
[84.85900879 471.48278809]
[99.78226471 473.14904785]
[103.10452271 458.52157593]
[106.42678070 443.89413452]
[109.74904633 429.26666260]
[113.07130432 414.63922119]
[116.39356232 400.01174927]
[117.62053680 385.06201172]
[116.72772217 370.08862305]
[115.83490753 355.11520386]
[114.94209290 340.14178467]
[103.66603851 330.47814941]
[102.54729462 315.30569458]
[112.75987244 303.54385376]
[111.86705780 288.57046509]
[110.97424316 273.59704590]
[110.08142853 258.62365723]
[109.18860626 243.65023804]
[107.85037231 228.71005249]
[106.06790924 213.81632996]
[104.28544617 198.92262268]
[102.50297546 184.02890015]
[100.72051239 169.13517761]
[98.93804932 154.24147034]
[89.74317169 142.52380371]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[81.46437836 80.20331573]
[80.28637695 67.76161194]
[87.65750122 58.17030716]
[86.09697723 43.25170135]
[84.53646088 28.33309746]
[82.97593689 13.41449261]
[81.41541290 -1.50411224]
[78.34791565 -5.72756529]
[77.31089783 -10.25281525]
[78.07929230 -14.25589085]
[80.13363647 -17.12155342]
[79.24082184 -32.09495926]
[78.34799957 -47.06836319]
[66.59093475 -37.75325012]
[51.94397354 -40.98843765]
[45.20430756 -54.38907242]
[51.34017563 -68.07669830]
[65.82843781 -71.96131134]
[77.98809814 -63.18076706]
[78.21142578 -78.17910767]
[63.71315765 -82.33066559]
[50.79362869 -90.08767700]
[40.33042908 -100.91622162]
[33.03248215 -114.07398224]
[29.39200592 -128.66111755]
[29.65133667 -143.68182373]
[33.78679276 -158.11230469]
[41.51069641 -170.97052002]
[52.29138565 -181.38307190]
[65.38980865 -188.64447021]
[79.91017914 -192.26501465]
[80.13350677 -207.26336670]
[80.35683441 -222.26170349]
[80.46850586 -237.26127625]
[80.46850586 -252.26127625]
[80.46850586 -267.26129150]
[66.41131592 -273.04608154]
[55.64144516 -283.77352905]
[49.80121231 -297.80780029]
[49.78121567 -313.00869751]
[55.58450317 -327.05828857]
[66.32611847 -337.81402588]
[80.36803436 -343.63580322]
[95.56896973 -343.63580322]
[109.61089325 -337.81402588]
[120.35250092 -327.05828857]
[126.15579224 -313.00869751]
[126.13579559 -297.80780029]
[120.29556274 -283.77352905]
[109.52568817 -273.04608154]
[95.46850586 -267.26129150]
[95.46850586 -252.26127625]
[95.46850586 -237.26127625]
[98.61200714 -230.57246399]
[95.35517120 -222.03837585]
[95.13184357 -207.04003906]
[94.90851593 -192.04168701]
[109.31465149 -187.99043274]
[122.19107056 -180.34225464]
[132.65696716 -169.61332703]
[139.99461365 -156.53085327]
[143.69857788 -141.98364258]
[143.51057434 -126.96187592]
[139.43739319 -112.48959351]
[131.75093079 -99.55495453]
[120.96996307 -89.04273987]
[107.82521057 -81.67382812]
[93.20976257 -77.95578003]
[92.98643494 -62.95743942]
[93.32141113 -47.96118164]
[94.21422577 -32.98777390]
[95.10704041 -18.01436806]
[96.33401489 -3.06463528]
[97.89453888 11.85396957]
[99.45506287 26.77257347]
[101.01558685 41.69117737]
[102.57611084 56.60978317]
[113.63443756 70.23624420]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[120.00184631 138.90248108]
[113.83176422 152.45899963]
[115.61422729 167.35272217]
[117.39669800 182.24642944]
[119.17916107 197.14015198]
[120.96162415 212.03387451]
[122.74409485 226.92758179]
[125.46872711 230.30847168]
[126.83806610 234.00839233]
[126.91824341 237.56211853]
[125.91968536 240.57366943]
[124.16201782 242.75741577]
[125.05483246 257.73083496]
[125.94764709 272.70422363]
[126.84046173 287.67764282]
[127.73327637 302.65103149]
[139.27117920 313.11596680]
[139.96331787 328.31384277]
[129.91549683 339.24899292]
[130.80831909 354.22238159]
[131.70112610 369.19580078]
[132.59394836 384.16918945]
[138.69871521 370.46768188]
[148.52557373 359.13485718]
[161.22441101 351.15115356]
[175.69664001 347.20721436]
[190.69026184 347.64425659]
[204.90820312 352.42443848]
[217.12045288 361.13427734]
[226.27052307 373.02023315]
[231.56684875 387.05407715]
[232.55125427 402.02175903]
[229.13856506 416.62838745]
[221.62402344 429.61035156]
[210.65769958 439.84460449]
[197.18829346 446.44573975]
[182.38105774 448.84274292]
[167.51693726 446.82821655]
[153.88186646 440.57644653]
[142.65538025 430.62826538]
[134.80870056 417.84432983]
[131.02102661 403.33401489]
[127.69876099 417.96145630]
[124.37650299 432.58892822]
[121.05424500 447.21640015]
[117.73198700 461.84384155]
[114.40972900 476.47131348]
[128.58862305 481.41488647]
[142.12484741 487.91494751]
[154.84815979 495.88970947]
[166.59857178 505.23895264]
[177.22828674 515.84503174]
[186.60363770 527.57458496]
[194.60670471 540.28015137]
[201.13687134 553.80187988]
[206.11198425 567.96972656]
[209.46948242 582.60552979]
[211.16714478 597.52526855]
[211.18363953 612.54125977]
[209.51872253 627.46466064]
[206.19335938 642.10778809]
[201.24935913 656.28656006]
[194.74890137 669.82257080]
[186.77374268 682.54565430]
[177.42416382 694.29577637]
[166.81776428 704.92517090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 191]
[36 190]
[37 189]
[38 188]
[39 187]
[40 186]
[41 166]
[42 165]
[43 164]
[44 163]
[47 160]
[48 159]
[49 158]
[50 157]
[51 156]
[52 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[59 144]
[60 143]
[62 141]
[65 139]
[66 138]
[67 137]
[68 136]
[69 135]
[73 134]
[74 133]
[75 132]
[81 131]
[82 130]
[93 119]
[94 118]
[95 117]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
