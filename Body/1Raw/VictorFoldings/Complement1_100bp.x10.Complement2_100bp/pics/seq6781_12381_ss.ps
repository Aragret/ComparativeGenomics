%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[45.67433548 514.97863770]
[34.62146378 525.12719727]
[22.93486023 534.53900146]
[10.66353607 543.17462158]
[-2.14103436 550.99774170]
[-15.42514515 557.97570801]
[-29.13307762 564.07910156]
[-43.20733643 569.28234863]
[-57.58888626 573.56372070]
[-72.21740723 576.90515137]
[-87.03153992 579.29272461]
[-101.96915436 580.71630859]
[-116.96759033 581.17004395]
[-131.96394348 580.65191650]
[-146.89529419 579.16418457]
[-161.69905090 576.71307373]
[-176.31309509 573.30889893]
[-190.67613220 568.96582031]
[-204.72792053 563.70220947]
[-218.40953064 557.53997803]
[-231.66355896 550.50512695]
[-244.43443298 542.62707520]
[-256.66857910 533.93890381]
[-268.31466675 524.47698975]
[-279.32388306 514.28106689]
[-289.64999390 503.39395142]
[-299.24975586 491.86123657]
[-308.08285522 479.73129272]
[-316.11227417 467.05505371]
[-323.30432129 453.88562012]
[-329.62881470 440.27828979]
[-335.05923462 426.29010010]
[-339.57281494 411.97973633]
[-343.15063477 397.40722656]
[-345.77764893 382.63366699]
[-347.44287109 367.72106934]
[-348.13931274 352.73193359]
[-347.86404419 337.72918701]
[-346.61822510 322.77569580]
[-344.40707397 307.93420410]
[-341.23986816 293.26696777]
[-337.12991333 278.83551025]
[-332.09439087 264.70034790]
[-326.15447998 250.92079163]
[-319.33508301 237.55461121]
[-311.66479492 224.65788269]
[-303.17578125 212.28471375]
[-293.90362549 200.48698425]
[-283.88729858 189.31417847]
[-273.16873169 178.81315613]
[-261.79290771 169.02798462]
[-249.80755615 159.99967957]
[-237.26293945 151.76612854]
[-224.21166992 144.36184692]
[-210.70848083 137.81791687]
[-196.81004333 132.16175842]
[-182.57461548 127.41712189]
[-168.06192017 123.60388947]
[-153.33283997 120.73806763]
[-138.44914246 118.83166504]
[-123.47325134 117.89267731]
[-108.46798706 117.92505646]
[-93.49629211 118.92865753]
[-78.62095642 120.89927673]
[-63.90438080 123.82863617]
[-49.40827942 127.70446777]
[-35.19346619 132.51049805]
[-21.31955528 138.22657776]
[-7.84474325 144.82872009]
[5.17445135 152.28924561]
[17.68342209 160.57685852]
[29.62970161 169.65679932]
[39.46028137 158.32720947]
[49.29086304 146.99761963]
[51.78792953 132.31382751]
[66.67620850 126.96127319]
[76.50679016 115.63168335]
[86.33737183 104.30208588]
[89.18103790 90.61248779]
[102.33303833 85.86733246]
[105.53324890 70.37316132]
[119.71838379 65.83098602]
[129.54896545 54.50139618]
[139.37954712 43.17180252]
[149.21012878 31.84220886]
[138.58937073 21.24106026]
[128.73399353 9.92486858]
[119.69200134 -2.05123758]
[111.50744629 -14.62891102]
[104.22021484 -27.74687386]
[97.86579895 -41.34121323]
[92.47515869 -55.34570312]
[88.07455444 -69.69211578]
[84.68544006 -84.31054688]
[82.32431030 -99.12978363]
[81.00267029 -114.07762909]
[80.72696686 -129.08125305]
[81.49854279 -144.06755066]
[83.31362915 -158.96353149]
[86.16339874 -173.69660950]
[90.03395081 -188.19500732]
[94.90644073 -202.38809204]
[100.75712585 -216.20671082]
[107.55749512 -229.58354187]
[115.27442932 -242.45341492]
[123.87032318 -254.75363159]
[133.30329895 -266.42425537]
[143.52740479 -277.40844727]
[154.49282837 -287.65267944]
[166.14614868 -297.10705566]
[178.43058777 -305.72546387]
[191.28628540 -313.46600342]
[204.65063477 -320.29089355]
[218.45849609 -326.16690063]
[232.64262390 -331.06539917]
[247.13389587 -334.96252441]
[261.86172485 -337.83929443]
[276.75436401 -339.68170166]
[291.73922729 -340.48074341]
[306.74331665 -340.23254395]
[321.69357300 -338.93832397]
[336.51712036 -336.60437012]
[351.14172363 -333.24206543]
[365.49618530 -328.86776733]
[379.51052856 -323.50280762]
[393.11651611 -317.17333984]
[406.24780273 -309.91015625]
[418.84045410 -301.74868774]
[430.83312988 -292.72866821]
[442.16735840 -282.89404297]
[452.78796387 -272.29275513]
[462.64318848 -260.97640991]
[471.68499756 -249.00018311]
[479.86938477 -236.42239380]
[487.15643311 -223.30432129]
[493.51065063 -209.70988464]
[498.90109253 -195.70532227]
[503.30148315 -181.35885620]
[506.69039917 -166.74037170]
[509.05130005 -151.92109680]
[510.37274170 -136.97323608]
[510.64822388 -121.96960449]
[509.87643433 -106.98331451]
[508.06112671 -92.08735657]
[505.21115112 -77.35432434]
[501.34039307 -62.85597992]
[496.46771240 -48.66296768]
[490.61682129 -34.84443283]
[483.81625366 -21.46769714]
[476.09912109 -8.59793377]
[467.50305176 3.70215917]
[458.06991577 15.37265491]
[447.84564209 26.35669518]
[436.88009644 36.60076523]
[425.22662354 46.05496216]
[412.94207764 54.67321777]
[400.08624268 62.41355133]
[386.72183228 69.23824310]
[372.91384888 75.11405945]
[358.72967529 80.01235962]
[344.23834229 83.90927887]
[329.51046753 86.78584290]
[314.61782837 88.62802887]
[299.63293457 89.42685699]
[284.62884521 89.17845154]
[269.67861938 87.88401031]
[254.85510254 85.54984283]
[240.23052979 82.18731689]
[225.87614441 77.81282806]
[211.86186218 72.44766998]
[198.25599670 66.11799622]
[185.12478638 58.85463715]
[172.53225708 50.69297791]
[160.53971863 41.67279053]
[150.70913696 53.00238037]
[140.87855530 64.33197784]
[131.04797363 75.66156769]
[128.55090332 90.34536743]
[113.66262817 95.69791412]
[110.81896210 109.38751221]
[97.66696167 114.13266754]
[87.83638000 125.46226501]
[78.00580597 136.79185486]
[74.80558777 152.28602600]
[60.62045670 156.82820129]
[50.78987503 168.15779114]
[40.95929337 179.48738098]
[51.63268280 190.03431702]
[61.60097885 201.25001526]
[70.82238007 213.08744812]
[79.25820923 225.49694824]
[86.87306976 238.42646790]
[93.63504028 251.82179260]
[99.51573944 265.62673950]
[104.49051666 279.78338623]
[108.53850555 294.23233032]
[111.64271545 308.91302490]
[113.79013824 323.76388550]
[114.97175598 338.72259521]
[115.18262482 353.72637939]
[114.42185211 368.71240234]
[112.69262695 383.61770630]
[110.00220490 398.37985229]
[106.36187744 412.93685913]
[101.78690338 427.22772217]
[96.29647827 441.19247437]
[89.91362762 454.77252197]
[82.66512299 467.91094971]
[74.58137512 480.55264282]
[65.69628143 492.64453125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 187]
[73 186]
[74 185]
[76 183]
[77 182]
[78 181]
[80 179]
[82 177]
[83 176]
[84 175]
[85 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
