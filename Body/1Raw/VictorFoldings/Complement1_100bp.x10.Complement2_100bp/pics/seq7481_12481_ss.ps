%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[108.43132019 518.04132080]
[102.57513428 504.21304321]
[98.36393738 489.79840088]
[95.85469818 474.99230957]
[95.08134460 459.99502563]
[96.05433655 445.00936890]
[98.76050568 430.23800659]
[103.16326904 415.88070679]
[109.20307922 402.13162231]
[116.79824829 389.17669678]
[125.84606934 377.19113159]
[136.22418213 366.33703613]
[147.79222107 356.76119995]
[160.39375305 348.59307861]
[173.85835266 341.94320679]
[168.82142639 327.81417847]
[163.78451538 313.68515015]
[158.74760437 299.55612183]
[153.54055786 294.31124878]
[153.74258423 285.17904663]
[148.91658020 270.97659302]
[137.49588013 261.41537476]
[140.38182068 245.85960388]
[135.55583191 231.65715027]
[130.72982788 217.45469666]
[119.30912781 207.89347839]
[122.19506836 192.33770752]
[109.95370483 188.31546021]
[102.14761353 177.82035828]
[101.80647278 164.55032349]
[109.27880096 153.34411621]
[104.66479492 139.07138062]
[100.05078125 124.79865265]
[95.43677521 110.52591705]
[90.74198914 124.77228546]
[79.61907196 134.83612061]
[64.97553253 138.08676147]
[50.63914490 133.67448425]
[40.35741806 122.75267029]
[36.81796646 108.17623901]
[40.94599533 93.75544739]
[51.66244507 83.25984192]
[66.16606140 79.43295288]
[80.66564178 83.27513123]
[91.37056732 93.78126526]
[88.92483521 78.98199463]
[86.47911072 64.18272400]
[79.20423126 77.30049896]
[66.04294586 84.49636841]
[51.07342529 83.54061890]
[38.93413544 74.72939301]
[33.38657379 60.79294968]
[36.14970398 46.04964066]
[46.36734772 35.06784821]
[60.87345123 31.25039482]
[75.17314148 35.78016281]
[84.83560944 47.25379181]
[76.69085693 33.69010544]
[84.04579163 20.73810577]
[83.59918213 5.74475670]
[83.15258026 -9.24859333]
[82.70597076 -24.24194336]
[82.25936890 -39.23529434]
[81.81275940 -54.22864151]
[81.03144073 -69.20828247]
[72.28916168 -82.39475250]
[79.05841827 -95.66224670]
[77.94277191 -110.62070465]
[76.82712555 -125.57915497]
[69.65818024 -112.40318298]
[57.53311157 -103.57240295]
[42.79306793 -100.79190826]
[28.28412628 -104.59856415]
[16.80773544 -114.25736237]
[10.57980633 -127.90335083]
[10.80285358 -142.90168762]
[17.43381119 -156.35644531]
[29.19234467 -165.66970825]
[43.80806732 -169.04324341]
[58.45890808 -165.82565308]
[70.31602478 -156.63822937]
[77.09030151 -143.25366211]
[78.65081787 -158.17227173]
[80.21134186 -173.09088135]
[81.77186584 -188.00947571]
[83.33238983 -202.92808533]
[68.73242950 -206.46708679]
[54.73445892 -211.92056274]
[41.58829498 -219.19117737]
[29.52854729 -228.14916992]
[18.77043152 -238.63470459]
[9.50594044 -250.46064758]
[1.90041029 -263.41592407]
[-3.91042900 -277.26934814]
[-7.82287693 -291.77371216]
[-9.76711082 -306.67013550]
[-9.70843315 -321.69277954]
[-7.64789200 -336.57354736]
[-3.62225986 -351.04690552]
[2.29662132 -364.85452271]
[10.00312233 -377.75000000]
[19.35971069 -389.50320435]
[30.19940948 -399.90435791]
[42.32876968 -408.76788330]
[55.53132629 -415.93557739]
[69.57146454 -421.27954102]
[84.19863129 -424.70437622]
[99.15177917 -426.14898682]
[114.16404724 -425.58758545]
[128.96752930 -423.03021240]
[143.29804993 -418.52243042]
[156.89984131 -412.14477539]
[169.53018188 -404.01101685]
[180.96366882 -394.26632690]
[190.99623108 -383.08462524]
[199.44886780 -370.66543579]
[206.17070007 -357.23037720]
[211.04179382 -343.01925659]
[213.97518921 -328.28567505]
[214.91856384 -313.29254150]
[213.85505676 -298.30749512]
[210.80366516 -283.59786987]
[205.81884766 -269.42623901]
[198.98954773 -256.04550171]
[190.43765259 -243.69445801]
[180.31578064 -232.59350586]
[168.80456543 -222.94076538]
[156.10943604 -214.90850830]
[142.45697021 -208.64006042]
[128.09078979 -204.24729919]
[113.26728058 -201.80862427]
[98.25099182 -201.36756897]
[96.69047546 -186.44895935]
[95.12995148 -171.53034973]
[93.56942749 -156.61174011]
[92.00890350 -141.69314575]
[91.78557587 -126.69480896]
[92.90122223 -111.73635101]
[94.01687622 -96.77790070]
[102.67935181 -84.66135406]
[95.98989105 -70.32392883]
[98.40867615 -67.75842285]
[99.70499420 -63.89389038]
[99.28185272 -59.27066040]
[96.80611420 -54.67525101]
[97.25271606 -39.68190002]
[97.69932556 -24.68854904]
[98.14592743 -9.69519901]
[98.59253693 5.29815054]
[99.03913879 20.29150009]
[107.15194702 32.78276062]
[99.82896423 46.80718231]
[101.27838135 61.73699188]
[103.72410583 76.53626251]
[106.16983795 91.33553314]
[109.70951080 105.91191101]
[114.32351685 120.18464661]
[118.93753052 134.45738220]
[123.55153656 148.73010254]
[139.26968384 156.40861511]
[144.46897888 172.75737000]
[136.39752197 187.51170349]
[148.16340637 198.08879089]
[144.93228149 212.62869263]
[149.75828552 226.83116150]
[154.58427429 241.03361511]
[166.35015869 251.61068726]
[163.11903381 266.15060425]
[167.94503784 280.35305786]
[172.87663269 294.51919556]
[177.91354370 308.64822388]
[182.95045471 322.77725220]
[187.98738098 336.90628052]
[202.62217712 333.53890991]
[217.54895020 331.89334106]
[232.56584167 331.99182129]
[247.46974182 333.83300781]
[262.05911255 337.39205933]
[276.13665771 342.62078857]
[289.51196289 349.44848633]
[302.00415039 357.78283691]
[313.44430542 367.51110840]
[323.67770386 378.50177002]
[332.56591797 390.60614014]
[339.98880005 403.66055298]
[345.84591675 417.48843384]
[350.05807495 431.90283203]
[352.56829834 446.70874023]
[353.34265137 461.70596313]
[352.37066650 476.69168091]
[349.66546631 491.46322632]
[345.26367188 505.82083130]
[339.22476196 519.57031250]
[331.63046265 532.52575684]
[322.58343506 544.51190186]
[312.20605469 555.36669922]
[300.63867188 564.94329834]
[288.03768921 573.11224365]
[274.57351685 579.76306152]
[260.42828369 584.80572510]
[245.79325867 588.17211914]
[230.86637878 589.81671143]
[215.84950256 589.71722412]
[200.94572449 587.87506104]
[186.35658264 584.31500244]
[172.27940369 579.08538818]
[158.90454102 572.25677490]
[146.41288757 563.92156982]
[134.97338867 554.19256592]
[124.74073792 543.20123291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 173]
[16 172]
[17 171]
[18 170]
[20 169]
[21 168]
[23 166]
[24 165]
[25 164]
[27 162]
[31 159]
[32 158]
[33 157]
[34 156]
[45 155]
[46 154]
[47 153]
[57 152]
[59 150]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[65 141]
[67 139]
[68 138]
[69 137]
[82 136]
[83 135]
[84 134]
[85 133]
[86 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
