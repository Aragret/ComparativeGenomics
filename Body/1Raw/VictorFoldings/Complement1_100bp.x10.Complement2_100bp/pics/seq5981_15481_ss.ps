%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[134.46745300 874.71319580]
[120.63891602 881.39648438]
[105.32256317 880.25415039]
[92.63842773 871.59344482]
[85.99847412 857.74401855]
[87.18881989 842.43133545]
[95.88926697 829.77441406]
[109.75943756 823.17785645]
[110.87508392 808.21942139]
[111.99073792 793.26098633]
[113.10638428 778.30255127]
[114.22203064 763.34405518]
[115.33768463 748.38562012]
[101.53536224 744.09564209]
[89.03087616 736.83184814]
[78.45575714 726.95715332]
[70.34497070 714.96649170]
[65.10981750 701.46203613]
[63.01712799 687.12274170]
[64.17562103 672.67034912]
[68.53029633 658.83312988]
[75.86499023 646.30908203]
[85.81316376 635.73071289]
[97.87615967 627.63317871]
[111.44824219 622.42712402]
[125.84698486 620.37786865]
[127.18521881 605.43768311]
[120.61424255 592.07086182]
[129.55187988 579.01599121]
[130.89012146 564.07580566]
[120.04713440 574.44067383]
[105.19859314 576.56689453]
[91.88262939 569.66143799]
[85.06576538 556.29992676]
[87.29052734 541.46582031]
[97.72713470 530.69189453]
[112.48298645 527.99658203]
[126.05451965 534.38513184]
[133.38011169 547.47589111]
[136.48422241 532.80059814]
[139.58833313 518.12530518]
[142.69244385 503.45001221]
[145.79655457 488.77468872]
[148.90066528 474.09939575]
[149.45887756 459.10980225]
[147.45486450 444.24426270]
[145.45085144 429.37872314]
[143.44683838 414.51321411]
[141.44282532 399.64767456]
[139.43881226 384.78216553]
[137.43479919 369.91662598]
[135.43078613 355.05108643]
[133.42677307 340.18557739]
[131.42276001 325.32003784]
[129.41874695 310.45449829]
[127.41472626 295.58898926]
[125.07923889 280.77191162]
[122.41344452 266.01068115]
[119.74765015 251.24948120]
[117.08185577 236.48826599]
[114.41606140 221.72705078]
[104.54003906 210.57745361]
[109.70160675 195.62188721]
[107.03581238 180.86067200]
[104.37001801 166.09945679]
[101.70422363 151.33824158]
[99.03842926 136.57701111]
[96.37263489 121.81580353]
[93.70683289 107.05458069]
[90.18663788 103.16586304]
[89.09580231 97.58164978]
[91.18828583 91.81463623]
[88.96316528 76.98059082]
[84.59536743 68.95811462]
[86.81705475 61.90929031]
[84.81304169 47.04376221]
[73.78136444 57.20752716]
[58.93434906 55.07068634]
[51.21665955 42.20844650]
[56.31749344 28.10236549]
[70.47669983 23.15092468]
[83.25574493 31.00275421]
[82.36293030 16.02934837]
[73.81794739 2.71417570]
[80.78398895 -10.45106411]
[79.89117432 -25.42446899]
[71.34619141 -38.73964310]
[78.31223297 -51.90488052]
[77.41941833 -66.87828827]
[68.30804443 -76.00767517]
[67.87268066 -88.49744415]
[75.80162048 -97.63300323]
[67.45582581 -111.07392120]
[74.61710358 -124.13398743]
[73.94731903 -139.11903381]
[65.60152435 -152.55995178]
[72.76280975 -165.62001038]
[58.57242203 -171.14747620]
[47.86169434 -181.97337341]
[42.48632431 -196.22207642]
[43.37762833 -211.42488098]
[50.38117981 -224.94783020]
[62.28357315 -234.44798279]
[77.02264404 -238.27938843]
[92.04476166 -235.77822876]
[104.74725342 -227.37782288]
[112.92933655 -214.53363037]
[115.17341614 -199.47096252]
[111.09068298 -184.79951477]
[101.38851166 -173.06121826]
[87.74784851 -166.28979492]
[96.04573059 -153.92071533]
[88.93235779 -139.78881836]
[89.60214233 -124.80377197]
[97.90003204 -112.43468475]
[90.78665924 -98.30278778]
[101.01431274 -84.04228210]
[92.39282227 -67.77110291]
[93.28563690 -52.79769897]
[101.76676178 -40.55352402]
[94.86457825 -26.31728554]
[95.75739288 -11.34387970]
[104.23851776 0.90029526]
[97.33633423 15.13653278]
[98.22915649 30.10993767]
[99.67857361 45.03974533]
[101.68258667 59.90527725]
[103.79721069 74.75547028]
[106.02232361 89.58951569]
[108.46805573 104.38878632]
[111.13385010 119.15000153]
[113.79964447 133.91122437]
[116.46543884 148.67243958]
[119.13123322 163.43365479]
[121.79702759 178.19487000]
[124.46282959 192.95608521]
[134.52952576 205.16151428]
[129.17727661 219.06124878]
[131.84307861 233.82246399]
[134.50886536 248.58367920]
[137.17466736 263.34490967]
[139.84045410 278.10610962]
[143.21357727 282.08972168]
[144.58430481 286.52529907]
[144.11576843 290.57446289]
[142.28025818 293.58496094]
[144.28427124 308.45050049]
[146.28828430 323.31600952]
[148.29229736 338.18154907]
[150.29631042 353.04708862]
[152.30032349 367.91259766]
[154.30433655 382.77813721]
[156.30834961 397.64367676]
[158.31236267 412.50918579]
[160.31637573 427.37472534]
[162.32038879 442.24023438]
[164.32440186 457.10577393]
[169.15281677 442.90414429]
[177.31852722 430.32156372]
[188.32217407 420.12747192]
[201.49090576 412.94522095]
[216.01943970 409.21405029]
[231.01934814 409.16207886]
[245.57339478 412.79251099]
[258.79156494 419.88333130]
[269.86560059 430.00094604]
[278.11828613 442.52664185]
[283.04498291 456.69448853]
[284.34442139 471.63809204]
[281.93713379 486.44366455]
[275.97033691 500.20584106]
[266.80889893 512.08306885]
[255.01303101 521.34899902]
[241.30407715 527.43707275]
[226.52032471 529.97497559]
[211.56582642 528.80749512]
[197.35504150 524.00604248]
[184.75697327 515.86425781]
[174.54199219 504.88000488]
[167.33474731 491.72494507]
[163.57597351 477.20352173]
[160.47186279 491.87881470]
[157.36775208 506.55410767]
[154.26364136 521.22943115]
[151.15953064 535.90472412]
[148.05541992 550.58001709]
[145.83030701 565.41406250]
[144.49206543 580.35424805]
[150.96733093 594.78967285]
[142.12541199 606.77593994]
[140.78717041 621.71612549]
[155.54516602 626.74127197]
[168.66850281 635.14111328]
[179.39987183 646.42578125]
[187.12115479 659.93939209]
[191.38906860 674.89758301]
[191.96057129 690.43353271]
[188.80679321 705.64782715]
[182.11431885 719.66070557]
[172.27427673 731.66284180]
[159.85945129 740.96228027]
[145.59091187 747.02410889]
[130.29612732 749.50128174]
[129.18048096 764.45971680]
[128.06483459 779.41815186]
[126.94918823 794.37664795]
[125.83354187 809.33508301]
[124.71788788 824.29351807]
[137.45606995 832.87457275]
[144.18272400 846.68212891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[13 203]
[26 191]
[27 190]
[29 188]
[30 187]
[39 186]
[40 185]
[41 184]
[42 183]
[43 182]
[44 181]
[45 157]
[46 156]
[47 155]
[48 154]
[49 153]
[50 152]
[51 151]
[52 150]
[53 149]
[54 148]
[55 147]
[56 146]
[57 142]
[58 141]
[59 140]
[60 139]
[61 138]
[63 136]
[64 135]
[65 134]
[66 133]
[67 132]
[68 131]
[69 130]
[72 129]
[73 128]
[75 127]
[76 126]
[82 125]
[83 124]
[85 122]
[86 121]
[88 119]
[89 118]
[92 116]
[94 114]
[95 113]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
