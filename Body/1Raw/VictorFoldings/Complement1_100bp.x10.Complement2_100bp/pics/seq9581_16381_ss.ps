%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[64.25988007 605.50225830]
[49.37197876 603.00164795]
[35.71129608 596.57604980]
[24.29155350 586.70227051]
[15.96016502 574.11297607]
[11.33537865 559.74237061]
[10.76038361 544.65686035]
[14.27784920 529.97595215]
[21.62675476 516.78894043]
[32.26176071 506.07452393]
[45.39368439 498.62768555]
[60.04804611 495.00109863]
[60.49465179 480.00772095]
[60.94125748 465.01437378]
[61.38786316 450.02102661]
[47.30809021 446.55407715]
[34.25482559 440.22570801]
[22.80263710 431.31170654]
[13.45621586 420.20169067]
[6.62811279 407.38211060]
[2.62054300 393.41500854]
[1.61200380 378.91326904]
[3.64932823 364.51385498]
[8.64551544 350.84970093]
[16.38344383 338.52203369]
[26.52530670 328.07376099]
[38.62735367 319.96566772]
[52.15931320 314.55609131]
[66.52761841 312.08502197]
[67.19740295 297.09997559]
[67.86718750 282.11492920]
[60.70590973 269.05487061]
[69.05170441 255.61395264]
[57.28005219 264.91061401]
[42.36703491 263.29757690]
[32.85550308 251.69883728]
[34.19409561 236.75868225]
[45.61600494 227.03552246]
[60.57824326 228.09921265]
[70.50944519 239.33953857]
[72.51345825 224.47399902]
[74.51747894 209.60847473]
[72.38565063 205.33479309]
[72.91589355 199.67654419]
[76.80885315 194.33271790]
[79.25457764 179.53344727]
[81.70030212 164.73417664]
[84.14603424 149.93490601]
[86.59175873 135.13563538]
[75.46408844 128.50056458]
[67.24834442 118.48304749]
[62.91959381 106.27194214]
[62.99156570 93.31647491]
[67.45571899 81.15422058]
[75.78224182 71.22859192]
[86.98294830 64.71756744]
[99.72852325 62.39388275]
[102.61380005 47.67399216]
[105.49906921 32.95410156]
[108.38433838 18.23420906]
[111.05014038 3.47299170]
[113.49586487 -11.32627869]
[108.11219788 -26.20333290]
[117.82112122 -37.49873352]
[120.26685333 -52.29800415]
[121.38249969 -67.25646210]
[121.15917206 -82.25479889]
[120.93584442 -97.25313568]
[120.71251678 -112.25147247]
[112.77060699 -125.93491364]
[120.31756592 -138.77597046]
[119.31330109 -153.74232483]
[117.53083801 -168.63603210]
[115.74837494 -183.52975464]
[113.96590424 -198.42347717]
[112.18344116 -213.31718445]
[97.16489410 -213.34190369]
[82.25883484 -215.17677307]
[67.68263245 -218.79504395]
[53.64886093 -224.14392090]
[40.36216736 -231.14543152]
[28.01631355 -239.69746399]
[16.79133415 -249.67530823]
[6.85092735 -260.93344116]
[-1.65994954 -273.30770874]
[-8.61718178 -286.61764526]
[-13.91931248 -300.66912842]
[-17.48902130 -315.25729370]
[-19.27425194 -330.16937256]
[-19.24896812 -345.18792725]
[-17.41354179 -360.09393311]
[-13.79473591 -374.66998291]
[-8.44532490 -388.70355225]
[-1.44331861 -401.98999023]
[7.10917282 -414.33554077]
[17.08742905 -425.56011963]
[28.34593773 -435.50012207]
[40.72051620 -444.01052856]
[54.03070831 -450.96725464]
[68.08241272 -456.26885986]
[82.67070770 -459.83804321]
[97.58286285 -461.62271118]
[112.60140991 -461.59686279]
[127.50733185 -459.76086426]
[142.08325195 -456.14154053]
[156.11662292 -450.79159546]
[169.40280151 -443.78909302]
[181.74801636 -435.23614502]
[192.97224426 -425.25744629]
[202.91181946 -413.99856567]
[211.42176819 -401.62368774]
[218.37800598 -388.31323242]
[223.67907715 -374.26132202]
[227.24769592 -359.67291260]
[229.03181458 -344.76068115]
[229.00540161 -329.74212646]
[227.16886902 -314.83627319]
[223.54896545 -300.26049805]
[218.19851685 -286.22732544]
[211.19551086 -272.94140625]
[202.64208984 -260.59652710]
[192.66299438 -249.37265015]
[181.40374756 -239.43350220]
[169.02853394 -230.92402649]
[155.71781921 -223.96827698]
[141.66572571 -218.66772461]
[127.07715607 -215.09965515]
[128.85961914 -200.20593262]
[130.64208984 -185.31222534]
[132.42456055 -170.41850281]
[134.20701599 -155.52478027]
[143.40892029 -167.37068176]
[158.04536438 -170.65312195]
[171.42477417 -163.87142944]
[177.43026733 -150.12609863]
[173.31620789 -135.70130920]
[160.96348572 -127.19188690]
[146.01960754 -128.48822021]
[135.31590271 -138.99929810]
[143.24183655 -126.38864136]
[135.71086121 -112.47480011]
[135.93418884 -97.47646332]
[136.15751648 -82.47812653]
[136.38084412 -67.47978973]
[144.32131958 -80.20569611]
[156.95050049 -88.29911804]
[171.82991028 -90.19734192]
[186.08656311 -85.53385162]
[196.96769714 -75.20908356]
[202.37236023 -61.21660233]
[201.25698853 -46.25812912]
[193.83694458 -33.22191238]
[181.54492188 -24.62504005]
[166.75431824 -22.12743568]
[152.32096863 -26.21134567]
[141.03172302 -36.08823395]
[135.06611633 -49.85227966]
[132.62039185 -35.05300903]
[138.17898560 -21.23449516]
[128.29513550 -8.88055134]
[125.84941101 5.91871929]
[127.85304260 10.25397873]
[127.15457153 15.89393997]
[123.10423279 21.11948204]
[120.21896362 35.83937454]
[117.33368683 50.55926514]
[114.44841766 65.27915192]
[128.15509033 75.06838989]
[136.21394348 89.85881805]
[137.00843811 106.68352509]
[130.37916565 122.16754150]
[117.65596008 133.20483398]
[101.39102936 137.58135986]
[98.94530487 152.38063049]
[96.49957275 167.17990112]
[94.05384827 181.97917175]
[91.60812378 196.77844238]
[89.38300323 211.61248779]
[87.37899017 226.47801208]
[85.37497711 241.34355164]
[84.03674316 256.28372192]
[91.15011597 270.41561890]
[82.85222626 282.78472900]
[82.18244171 297.76974487]
[81.51265717 312.75479126]
[96.50130463 316.84820557]
[110.20115662 324.16345215]
[121.93005371 334.33279419]
[131.10475159 346.84646606]
[137.26991272 361.07812500]
[140.12075806 376.31646729]
[139.51805115 391.80050659]
[135.49494934 406.75765991]
[128.25521851 420.44244385]
[118.16284943 432.17337036]
[105.72378540 441.36712646]
[91.56057739 447.56738281]
[76.38121033 450.46765137]
[75.93460846 465.46099854]
[75.48799896 480.45434570]
[75.04139709 495.44769287]
[89.45391846 499.94012451]
[102.11931610 508.15536499]
[112.09773254 519.48382568]
[118.64870453 533.08483887]
[121.28610992 547.94909668]
[119.81423187 562.97363281]
[114.34228516 577.04345703]
[105.27634430 589.11456299]
[93.28914642 598.29113770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 201]
[13 200]
[14 199]
[15 198]
[29 185]
[30 184]
[31 183]
[33 181]
[40 180]
[41 179]
[42 178]
[45 177]
[46 176]
[47 175]
[48 174]
[49 173]
[57 167]
[58 166]
[59 165]
[60 164]
[61 161]
[62 160]
[64 158]
[65 157]
[66 144]
[67 143]
[68 142]
[69 141]
[71 139]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
