%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[11.30867004 744.22320557]
[-2.45203233 750.20617676]
[-16.56449318 755.30426025]
[-30.97188568 759.49707031]
[-45.61619568 762.76763916]
[-60.43845367 765.10284424]
[-75.37898254 766.49328613]
[-90.37760925 766.93328857]
[-105.37395477 766.42114258]
[-120.30761719 764.95886230]
[-135.11846924 762.55242920]
[-149.74688721 759.21142578]
[-164.13394165 754.94940186]
[-178.22172546 749.78344727]
[-191.95349121 743.73437500]
[-205.27395630 736.82659912]
[-218.12948608 729.08789062]
[-230.46830750 720.54937744]
[-242.24073792 711.24548340]
[-253.39936829 701.21368408]
[-263.89929199 690.49432373]
[-273.69818115 679.13061523]
[-282.75662231 667.16827393]
[-291.03814697 654.65551758]
[-298.50936890 641.64270020]
[-305.14022827 628.18225098]
[-310.90402222 614.32830811]
[-315.77752686 600.13671875]
[-319.74111938 585.66461182]
[-322.77886963 570.97021484]
[-324.87850952 556.11273193]
[-326.03161621 541.15203857]
[-326.23352051 526.14831543]
[-325.48342896 511.16198730]
[-323.78436279 496.25341797]
[-321.14312744 481.48263550]
[-317.57040405 466.90908813]
[-313.08056641 452.59149170]
[-307.69165039 438.58746338]
[-301.42541504 424.95343018]
[-294.30706787 411.74429321]
[-286.36529541 399.01321411]
[-277.63201904 386.81146240]
[-268.14245605 375.18817139]
[-257.93481445 364.19015503]
[-247.05017090 353.86169434]
[-235.53236389 344.24438477]
[-223.42778015 335.37695312]
[-210.78515625 327.29507446]
[-197.65539551 320.03131104]
[-184.09138489 313.61492920]
[-170.14772034 308.07174683]
[-155.88056946 303.42410278]
[-141.34735107 299.69067383]
[-126.60662079 296.88653564]
[-111.71771240 295.02297974]
[-96.74058533 294.10745239]
[-81.73554230 294.14370728]
[-66.76301575 295.13156128]
[-51.88328171 297.06704712]
[-37.15626144 299.94238281]
[-22.64126015 303.74594116]
[-8.39672089 308.46246338]
[5.51999807 314.07293701]
[11.99949360 300.54461670]
[18.47899055 287.01626587]
[24.95848656 273.48791504]
[31.43798065 259.95956421]
[22.90876579 247.74818420]
[21.62853813 232.80772400]
[28.04089165 219.14215088]
[40.51435852 210.46405029]
[55.75622559 209.18623352]
[62.23571777 195.65789795]
[68.71521759 182.12954712]
[75.19470978 168.60119629]
[81.67420959 155.07286072]
[88.15370178 141.54450989]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[82.30841827 76.12604523]
[82.97492981 60.92702103]
[93.95825958 50.93192291]
[94.40486908 35.93857193]
[94.85147095 20.94522285]
[95.29808044 5.95187235]
[95.74468231 -9.04147720]
[95.74468231 -24.04147720]
[95.29808044 -39.03482819]
[94.85147095 -54.02817917]
[94.40486908 -69.02153015]
[93.95825958 -84.01487732]
[93.51165771 -99.00822449]
[93.06504822 -114.00157928]
[92.61844635 -128.99493408]
[78.39525604 -134.35862732]
[67.31076050 -144.76066589]
[61.05526352 -158.61480713]
[60.58268738 -173.80839539]
[65.96509552 -188.02452087]
[76.38170624 -199.09532166]
[90.24406433 -205.33258057]
[105.43826294 -205.78517151]
[119.64729309 -200.38406372]
[130.70437622 -189.95291138]
[136.92340088 -176.08235168]
[137.35600281 -160.88757324]
[131.93621826 -146.68566895]
[121.49051666 -135.64230347]
[107.61179352 -129.44152832]
[108.05840302 -114.44818115]
[108.50500488 -99.45483398]
[108.95161438 -84.46148682]
[109.39821625 -69.46813202]
[109.84482574 -54.47478485]
[110.29142761 -39.48143387]
[110.73803711 -24.48808289]
[112.68351746 -22.46985626]
[113.94677734 -19.55939484]
[114.18396759 -16.01268578]
[113.15016937 -12.20534992]
[110.73803711 -8.59487152]
[110.29142761 6.39847851]
[109.84482574 21.39182854]
[109.39821625 36.38517761]
[108.95161438 51.37852859]
[119.32054901 62.00964355]
[119.08121490 77.22139740]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[113.71707153 114.16429901]
[123.31570435 102.63753510]
[135.07446289 93.32456970]
[148.49339294 86.62139130]
[163.00187683 82.81302643]
[177.98304749 82.06140900]
[192.79985046 84.39849854]
[206.82231140 89.72492218]
[219.45416260 97.81419373]
[230.15829468 108.32235718]
[238.47956848 120.80259705]
[244.06416321 134.72424316]
[246.67460632 149.49534607]
[246.19992065 164.48783875]
[242.66026306 179.06420898]
[236.20616150 192.60469055]
[227.11203003 204.53352356]
[215.76457214 214.34347534]
[202.64628601 221.61744690]
[188.31495667 226.04611206]
[173.37997437 227.44119263]
[158.47637939 225.74336243]
[144.23786926 221.02479553]
[131.26988220 213.48614502]
[120.12380981 203.44796753]
[111.27360535 191.33706665]
[105.09558105 177.66841125]
[101.85241699 163.02320862]
[101.68204498 148.02400208]
[95.20255280 161.55235291]
[88.72306061 175.08070374]
[82.24356079 188.60903931]
[75.76406860 202.13739014]
[69.28456879 215.66574097]
[77.84268951 228.34271240]
[78.89945221 243.50120544]
[72.27094269 257.06326294]
[59.82730103 265.43057251]
[44.96632767 266.43905640]
[38.48683167 279.96740723]
[32.00733566 293.49575806]
[25.52783966 307.02410889]
[19.04834366 320.55245972]
[32.14300919 327.87927246]
[44.74661636 336.02185059]
[56.80841064 344.94741821]
[68.27982330 354.61999512]
[79.11466980 365.00070190]
[89.26931000 376.04766846]
[98.70285797 387.71646118]
[107.37733459 399.96008301]
[115.25780487 412.72921753]
[122.31253815 425.97244263]
[128.51312256 439.63644409]
[133.83460999 453.66622925]
[138.25553894 468.00524902]
[141.75813293 482.59582520]
[144.32829285 497.37915039]
[145.95564270 512.29571533]
[146.63365173 527.28546143]
[146.35958862 542.28802490]
[145.13453674 557.24304199]
[142.96345520 572.09020996]
[139.85507202 586.76983643]
[135.82191467 601.22271729]
[130.88020325 615.39068604]
[125.04985046 629.21673584]
[118.35433197 642.64520264]
[110.82061005 655.62188721]
[102.47901917 668.09472656]
[93.36314392 680.01330566]
[83.50969696 691.32977295]
[72.95834351 701.99847412]
[61.75159073 711.97650146]
[49.93454742 721.22369385]
[37.55480194 729.70275879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 177]
[65 176]
[66 175]
[67 174]
[68 173]
[73 168]
[74 167]
[75 166]
[76 165]
[77 164]
[78 163]
[79 134]
[80 133]
[82 131]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
