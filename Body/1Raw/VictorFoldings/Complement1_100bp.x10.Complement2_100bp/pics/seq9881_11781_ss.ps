%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[106.98108673 640.43499756]
[93.57180786 633.68048096]
[80.95645905 625.53887939]
[69.27799988 616.10247803]
[58.66874695 605.47821045]
[49.24890900 593.78637695]
[41.12522507 581.15948486]
[34.38973999 567.74066162]
[29.11877251 553.68188477]
[25.37204742 539.14251709]
[23.19201660 524.28717041]
[22.60338402 509.28433228]
[23.61281586 494.30392456]
[26.20887756 479.51565552]
[30.36215210 465.08712769]
[36.02558136 451.18182373]
[43.13499069 437.95727539]
[51.60982895 425.56335449]
[61.35406494 414.14050293]
[72.25729370 403.81811523]
[84.19597626 394.71316528]
[97.03482819 386.92883301]
[110.62838745 380.55331421]
[124.82261658 375.65881348]
[139.45669556 372.30084229]
[137.67422485 357.40713501]
[135.89175415 342.51342773]
[134.10929871 327.61968994]
[131.99467468 312.76950073]
[122.28574371 301.47409058]
[127.66941071 286.59704590]
[125.22367859 271.79779053]
[122.77795410 256.99850464]
[120.33222198 242.19923401]
[117.88649750 227.39996338]
[115.44077301 212.60069275]
[97.57008362 208.21144104]
[83.38108826 196.41406250]
[75.76181030 179.55177307]
[76.28839874 161.00450134]
[84.89931488 144.51130676]
[99.89875031 133.41670227]
[96.57649231 118.78924561]
[84.37232208 110.97870636]
[81.16312408 96.84904480]
[88.79605103 84.53301239]
[85.47379303 69.90554810]
[74.87213898 58.16180801]
[79.59838867 44.03694153]
[76.27612305 29.40948105]
[72.95386505 14.78202152]
[62.35221100 3.03827834]
[67.07846069 -11.08658695]
[64.01689148 -14.16566563]
[62.27005386 -17.70305252]
[61.82059860 -21.22915459]
[62.50043488 -24.32825661]
[64.02137756 -26.68301010]
[61.57565308 -41.48228073]
[59.12992477 -56.28155136]
[56.68419647 -71.08082581]
[54.23847198 -85.88009644]
[51.36559296 -89.13594055]
[49.83240509 -92.77102661]
[49.59362411 -96.31763458]
[50.45671844 -99.37077332]
[52.11512375 -101.63082886]
[50.55459976 -116.54943085]
[48.99407578 -131.46803284]
[47.43355179 -146.38664246]
[45.87303162 -161.30525208]
[44.31250763 -176.22384644]
[29.29905701 -176.20484924]
[14.36323071 -177.72969055]
[-0.33664575 -180.78216553]
[-14.64474487 -185.32995605]
[-28.40939140 -191.32482910]
[-41.48467636 -198.70324707]
[-53.73198700 -207.38697815]
[-65.02150726 -217.28399658]
[-75.23354340 -228.28936768]
[-84.25985718 -240.28643799]
[-92.00476837 -253.14802551]
[-98.38616180 -266.73779297]
[-103.33639526 -280.91168213]
[-106.80300140 -295.51943970]
[-108.74922180 -310.40621948]
[-109.15443420 -325.41421509]
[-108.01433563 -340.38433838]
[-105.34101868 -355.15786743]
[-101.16281891 -369.57821655]
[-95.52403259 -383.49252319]
[-88.48442078 -396.75329590]
[-80.11862183 -409.21994019]
[-70.51530457 -420.76034546]
[-59.77627945 -431.25210571]
[-48.01538467 -440.58407593]
[-35.35729218 -448.65728760]
[-21.93618202 -455.38616943]
[-7.89432812 -460.69937134]
[6.61941957 -464.54061890]
[21.45120621 -466.86917114]
[36.44380951 -467.66033936]
[51.43829346 -466.90573120]
[66.27571106 -464.61334229]
[80.79878235 -460.80749512]
[94.85354614 -455.52850342]
[108.29102325 -448.83236694]
[120.96875763 -440.79003906]
[132.75236511 -431.48678589]
[143.51693726 -421.02120972]
[153.14836121 -409.50427246]
[161.54452515 -397.05807495]
[168.61643982 -383.81448364]
[174.28913879 -369.91397095]
[178.50247192 -355.50384521]
[181.21179199 -340.73687744]
[182.38838196 -325.76959229]
[182.01976013 -310.76065063]
[180.10983276 -295.86917114]
[176.67884827 -281.25299072]
[171.76318359 -267.06707764]
[165.41493225 -253.46179199]
[157.70141602 -240.58135986]
[148.70436096 -228.56233215]
[138.51918030 -217.53208923]
[127.25382996 -207.60758972]
[115.02772522 -198.89401245]
[101.97046661 -191.48374939]
[88.22047424 -185.45533752]
[73.92350006 -180.87268066]
[59.23111343 -177.78437805]
[60.79163361 -162.86576843]
[62.35215759 -147.94715881]
[63.91268158 -133.02856445]
[65.47320557 -118.10995483]
[67.03372955 -103.19135284]
[69.03774261 -88.32582092]
[71.48346710 -73.52655029]
[73.92919922 -58.72727966]
[76.37492371 -43.92800903]
[78.82064819 -29.12873840]
[81.70592499 -14.40884686]
[92.06994629 -3.71135712]
[87.58132935 11.45976257]
[90.90358734 26.08722305]
[94.22584534 40.71468353]
[104.58986664 51.41217041]
[100.10124969 66.58329010]
[103.42350769 81.21075439]
[115.62767792 89.02129364]
[118.83687592 103.15095520]
[111.20394897 115.46698761]
[114.52620697 130.09445190]
[126.21321106 131.33078003]
[137.06970215 135.78036499]
[146.23257446 143.07780457]
[152.97660828 152.63175964]
[156.77191162 163.67285156]
[157.32548523 175.31561279]
[154.60391235 186.62954712]
[148.83502197 196.71342468]
[140.48902893 204.76707458]
[130.24003601 210.15496826]
[132.68577576 224.95423889]
[135.13150024 239.75350952]
[137.57722473 254.55278015]
[140.02294922 269.35205078]
[142.46867371 284.15130615]
[152.35253906 296.50527954]
[146.79394531 310.32376099]
[150.10737610 314.35714722]
[151.41191101 318.81265259]
[150.88314819 322.85437012]
[149.00300598 325.83724976]
[150.78547668 340.73095703]
[152.56794739 355.62466431]
[154.35040283 370.51840210]
[169.36360168 370.32821655]
[184.31195068 371.73492432]
[199.02609253 374.72262573]
[213.33927917 379.25741577]
[227.08937073 385.28796387]
[240.12052917 392.74591064]
[252.28512573 401.54675293]
[263.44531250 411.59075928]
[273.47463989 422.76416016]
[282.25946045 434.94030762]
[289.70025635 447.98126221]
[295.71270752 461.73925781]
[300.22869873 476.05841064]
[303.19702148 490.77645874]
[304.58410645 505.72665405]
[304.37417603 520.73956299]
[302.56961060 535.64514160]
[299.19091797 550.27441406]
[294.27630615 564.46173096]
[287.88153076 578.04620361]
[280.07901001 590.87402344]
[270.95715332 602.79980469]
[260.61929321 613.68835449]
[249.18264771 623.41644287]
[236.77671814 631.87365723]
[223.54211426 638.96435547]
[209.62879944 644.60803223]
[195.19439697 648.74084473]
[180.40248108 651.31597900]
[165.42063904 652.30419922]
[150.41862488 651.69427490]
[135.56645203 649.49316406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 178]
[26 177]
[27 176]
[28 175]
[29 171]
[31 169]
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[42 154]
[43 153]
[46 150]
[47 149]
[49 147]
[50 146]
[51 145]
[53 143]
[58 142]
[59 141]
[60 140]
[61 139]
[62 138]
[67 137]
[68 136]
[69 135]
[70 134]
[71 133]
[72 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
