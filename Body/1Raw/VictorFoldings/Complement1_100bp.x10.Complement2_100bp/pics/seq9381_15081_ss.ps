%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[152.77333069 602.72912598]
[151.69573975 587.74060059]
[152.81205750 572.75488281]
[156.09852600 558.09143066]
[161.48506165 544.06274414]
[168.85687256 530.96795654]
[178.05680847 519.08605957]
[188.88879395 508.67037964]
[201.12193298 499.94296265]
[214.49546814 493.08975220]
[209.66947937 478.88729858]
[204.84347534 464.68484497]
[200.01747131 450.48239136]
[195.19148254 436.27993774]
[190.36547852 422.07748413]
[185.53948975 407.87503052]
[181.72746277 404.99795532]
[179.68234253 399.69564819]
[180.78808594 393.17727661]
[169.65711975 383.28027344]
[173.00492859 367.81732178]
[168.60394287 353.47747803]
[164.20294189 339.13763428]
[159.80194092 324.79779053]
[155.40093994 310.45794678]
[150.89331055 296.15124512]
[146.27931213 281.87850952]
[141.24238586 267.74948120]
[135.78703308 253.77668762]
[130.33168030 239.80389404]
[124.87631989 225.83108521]
[119.42095947 211.85829163]
[117.02255249 226.66531372]
[109.20580292 239.46759033]
[97.13027191 248.36599731]
[82.58730316 252.04049683]
[67.73425293 249.94601440]
[54.77448273 242.39324951]
[45.63050079 230.50259399]
[41.65876007 216.03796387]
[43.44844437 201.14511108]
[50.73406601 188.03330994]
[62.43484497 178.64758301]
[76.81504059 174.38027954]
[91.74143982 175.86441040]
[104.99979401 182.87982178]
[114.62239075 194.38414001]
[112.17666626 179.58486938]
[109.73093414 164.78559875]
[107.28520966 149.98632812]
[103.74553680 135.40995789]
[99.13153076 121.13721466]
[94.51751709 106.86448669]
[91.93129730 105.25173187]
[89.87472534 102.66232300]
[88.71068573 99.29061127]
[88.72515106 95.46228790]
[90.08118439 91.60299683]
[86.32488251 77.08093262]
[78.78810120 90.05001068]
[64.72140503 95.25847626]
[50.55589676 90.32508087]
[42.76785660 77.50531769]
[44.91786957 62.66019821]
[56.02297974 52.57672119]
[71.00608063 51.86491394]
[83.01811981 60.85174561]
[73.31929016 48.35201645]
[79.08300781 34.61779785]
[76.74752045 19.80072784]
[74.30179596 5.00145721]
[71.85607147 -9.79781342]
[69.41033936 -24.59708405]
[66.96461487 -39.39635468]
[64.51888275 -54.19562531]
[62.07315826 -68.99489594]
[59.51732635 -83.77555084]
[56.85153198 -98.53676605]
[46.78483582 -110.74218750]
[52.13708115 -124.64192200]
[49.47128677 -139.40313721]
[44.26951599 -125.33396912]
[34.13619614 -114.27432251]
[20.57454300 -107.86483002]
[5.59634972 -107.05630493]
[-8.57645988 -111.96868134]
[-19.84143257 -121.87324524]
[-26.52747726 -135.30072021]
[-27.64275932 -150.25920105]
[-23.02183151 -164.52969360]
[-13.35018349 -175.99525452]
[-0.06254520 -182.95504761]
[14.86994076 -184.37661743]
[29.23213005 -180.04908752]
[40.89347458 -170.61441040]
[48.12350464 -157.47399902]
[48.57011032 -172.46734619]
[49.01671600 -187.46069336]
[49.46332169 -202.45404053]
[35.58460236 -208.65481567]
[25.13890076 -219.69818115]
[19.71911049 -233.90008545]
[20.15171051 -249.09486389]
[26.37073326 -262.96542358]
[37.42782211 -273.39657593]
[51.63685226 -278.79769897]
[66.83104706 -278.34509277]
[80.69340515 -272.10784912]
[91.11001587 -261.03704834]
[96.49242401 -246.82090759]
[96.01985168 -231.62731934]
[89.76435852 -217.77317810]
[78.67986298 -207.37113953]
[64.45667267 -202.00744629]
[64.01006317 -187.01409912]
[63.56346130 -172.02073669]
[63.11685562 -157.02738953]
[64.23250580 -142.06893921]
[66.89830017 -127.30772400]
[76.77431488 -116.15812683]
[71.61274719 -101.20256042]
[74.27854156 -86.44134521]
[78.56073761 -80.41767120]
[76.87242889 -71.44062042]
[79.31815338 -56.64135361]
[81.76388550 -41.84208298]
[84.20960999 -27.04281235]
[86.65534210 -12.24354076]
[89.10106659 2.55573010]
[91.54679108 17.35500145]
[95.73883057 23.44175911]
[93.91705322 32.39267731]
[103.45672607 43.83137894]
[97.85216522 58.62662888]
[100.84693909 73.32463074]
[104.60324097 87.84669495]
[108.79025269 102.25047302]
[113.40425873 116.52320862]
[118.01827240 130.79594421]
[122.71305847 116.54957581]
[133.83596802 106.48574066]
[148.47952271 103.23510742]
[162.81590271 107.64737701]
[173.09762573 118.56919098]
[176.63708496 133.14561462]
[172.50904846 147.56642151]
[161.79260254 158.06202698]
[147.28898621 161.88890076]
[132.78939819 158.04673767]
[122.08448029 147.54060364]
[124.53020477 162.33987427]
[126.97593689 177.13914490]
[129.42166138 191.93841553]
[133.39375305 206.40293884]
[138.84912109 220.37573242]
[144.30447388 234.34852600]
[149.75982666 248.32133484]
[155.21517944 262.29412842]
[158.69964600 264.88497925]
[160.95188904 268.12411499]
[161.91943359 271.54452515]
[161.70684814 274.71017456]
[160.55203247 277.26449585]
[165.16604614 291.53723145]
[170.78344727 298.74020386]
[169.74078369 306.05694580]
[174.14178467 320.39678955]
[178.54278564 334.73663330]
[182.94378662 349.07647705]
[187.34478760 363.41632080]
[198.79052734 374.33901978]
[195.12792969 388.77630615]
[199.74194336 403.04901123]
[204.56793213 417.25146484]
[209.39393616 431.45394897]
[214.21994019 445.65640259]
[219.04592896 459.85885620]
[223.87193298 474.06130981]
[228.69792175 488.26376343]
[243.47814941 485.55029297]
[258.49594116 485.01785278]
[273.43121338 486.67779541]
[287.96563721 490.49475098]
[301.78936768 496.38732910]
[314.60775757 504.22991943]
[326.14761353 513.85540771]
[336.16293335 525.05859375]
[344.44024658 537.60064697]
[350.80313110 551.21429443]
[355.11593628 565.60937500]
[357.28677368 580.47900391]
[357.26934814 595.50622559]
[355.06405640 610.37072754]
[350.71786499 624.75573730]
[344.32342529 638.35461426]
[336.01702881 650.87744141]
[325.97576904 662.05737305]
[314.41363525 671.65606689]
[301.57708740 679.46893311]
[287.73971558 685.32946777]
[273.19650269 689.11267090]
[258.25741577 690.73797607]
[243.24090576 690.17071533]
[228.46701050 687.42297363]
[214.25065613 682.55334473]
[200.89488220 675.66564941]
[188.68434143 666.90661621]
[177.87930298 656.46301270]
[168.71009827 644.55737305]
[161.37216187 631.44354248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 179]
[11 178]
[12 177]
[13 176]
[14 175]
[15 174]
[16 173]
[19 172]
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[26 164]
[27 163]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[47 153]
[48 152]
[49 151]
[50 150]
[51 139]
[52 138]
[53 137]
[58 136]
[59 135]
[67 134]
[69 132]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[75 125]
[76 124]
[77 122]
[78 121]
[80 119]
[81 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
