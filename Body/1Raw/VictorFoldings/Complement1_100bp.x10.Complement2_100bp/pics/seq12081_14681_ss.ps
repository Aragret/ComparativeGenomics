%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[51.76495361 720.54266357]
[36.75592422 720.33215332]
[21.82822800 718.75762939]
[7.10555744 715.83221436]
[-7.29008484 711.58001709]
[-21.23941040 706.03643799]
[-34.62683105 699.24731445]
[-47.34140396 691.26892090]
[-59.27778244 682.16735840]
[-70.33704376 672.01806641]
[-80.42755127 660.90515137]
[-89.46569824 648.92071533]
[-97.37657166 636.16400146]
[-104.09463501 622.74078369]
[-109.56420898 608.76226807]
[-113.73997498 594.34429932]
[-116.58732605 579.60632324]
[-118.08267212 564.67047119]
[-118.21362305 549.66058350]
[-116.97908783 534.70092773]
[-114.38930511 519.91546631]
[-110.46572876 505.42684937]
[-105.24086761 491.35504150]
[-98.75802612 477.81665039]
[-91.07092285 464.92385864]
[-82.24324799 452.78353882]
[-72.34816742 441.49627686]
[-61.46765900 431.15557861]
[-49.69189835 421.84716797]
[-37.11845398 413.64816284]
[-23.85152435 406.62649536]
[-10.00104237 400.84036255]
[4.31822205 396.33767700]
[18.98760986 393.15582275]
[33.88556671 391.32110596]
[48.88863754 390.84875488]
[49.78145218 375.87533569]
[50.67426682 360.90194702]
[51.56708527 345.92852783]
[52.45989990 330.95513916]
[50.70223236 328.77139282]
[49.70367050 325.75982666]
[49.78384781 322.20611572]
[51.15319061 318.50616455]
[53.87782288 315.12530518]
[55.66028976 300.23156738]
[57.44275284 285.33786011]
[51.27267075 271.78134155]
[60.59503937 258.99838257]
[58.71490479 256.01553345]
[58.18613815 251.97380066]
[59.49066544 247.51831055]
[62.80410767 243.48492432]
[65.24983978 228.68565369]
[67.69556427 213.88638306]
[70.14128876 199.08711243]
[72.58702087 184.28784180]
[75.03274536 169.48857117]
[62.23976898 177.32054138]
[47.62409592 173.94679260]
[39.55825043 161.29997253]
[42.66271210 146.62474060]
[55.15910721 138.32774353]
[69.88893127 141.16188049]
[78.41407013 153.50268555]
[82.17036438 138.98063660]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[98.15483093 66.75550842]
[98.76616669 62.15338516]
[100.88622284 58.67194748]
[103.81314850 56.70587921]
[100.46533966 41.24293137]
[111.59629822 31.34591103]
[115.99729919 17.00606346]
[120.39829254 2.66621661]
[117.05048370 -12.79673004]
[128.18144226 -22.69375038]
[127.70761108 -31.81588173]
[132.75617981 -37.21344757]
[137.37019348 -51.48617935]
[141.98420715 -65.75891113]
[138.86698914 -81.26998901]
[150.14405823 -91.00019073]
[154.75807190 -105.27292633]
[141.06513977 -111.43463135]
[128.13316345 -119.06529999]
[116.11912537 -128.07231140]
[105.16886902 -138.34631348]
[95.41532898 -149.76260376]
[86.97689056 -162.18258667]
[79.95599365 -175.45549011]
[74.43786621 -189.42021179]
[70.48950195 -203.90722656]
[68.15881348 -218.74067688]
[67.47410583 -233.74049377]
[68.44367981 -248.72457886]
[71.05577850 -263.51107788]
[75.27868652 -277.92044067]
[81.06113434 -291.77780151]
[88.33294678 -304.91494751]
[97.00583649 -317.17233276]
[106.97452545 -328.40124512]
[118.11800385 -338.46536255]
[130.30099487 -347.24246216]
[143.37562561 -354.62606812]
[157.18315125 -360.52648926]
[171.55599976 -364.87216187]
[186.31967163 -367.61026001]
[201.29495239 -368.70761108]
[216.30004883 -368.15084839]
[231.15283203 -365.94677734]
[245.67300415 -362.12210083]
[259.68426514 -356.72329712]
[273.01660156 -349.81585693]
[285.50808716 -341.48364258]
[297.00714111 -331.82781982]
[307.37417603 -320.96560669]
[316.48333740 -309.02883911]
[324.22402954 -296.16241455]
[330.50228882 -282.52252197]
[335.24191284 -268.27474976]
[338.38540649 -253.59204102]
[339.89453125 -238.65264893]
[339.75103760 -223.63789368]
[337.95663452 -208.73007202]
[334.53311157 -194.11013794]
[329.52200317 -179.95555115]
[322.98419189 -166.43815613]
[314.99899292 -153.72203064]
[305.66336060 -141.96153259]
[295.09063721 -131.29943848]
[283.40911865 -121.86516571]
[270.76065063 -113.77323914]
[257.29873657 -107.12188721]
[243.18682861 -101.99185181]
[228.59622192 -98.44541168]
[213.70402527 -96.52561188]
[198.69100952 -96.25575256]
[183.73944092 -97.63912201]
[169.03080750 -100.65891266]
[164.41679382 -86.38618469]
[167.86404419 -71.89598846]
[156.25694275 -61.14490509]
[151.64292908 -46.87217331]
[147.02891541 -32.59943771]
[142.52128601 -18.29275131]
[146.18389893 -3.85548639]
[134.73814392 7.06721449]
[130.33714294 21.40706253]
[125.93614960 35.74691010]
[129.59873962 50.18417358]
[118.15299988 61.10687637]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[96.69242859 142.73693848]
[92.93612671 157.25898743]
[89.83201599 171.93429565]
[87.38629150 186.73356628]
[84.94055939 201.53283691]
[82.49483490 216.33210754]
[80.04911041 231.13137817]
[77.60337830 245.93064880]
[75.48875427 260.78085327]
[81.53134155 275.40267944]
[72.33647156 287.12033081]
[70.55400848 302.01403809]
[68.77153778 316.90777588]
[67.43330383 331.84796143]
[66.54048920 346.82135010]
[65.64767456 361.79476929]
[64.75485992 376.76815796]
[63.86204147 391.74157715]
[78.70267487 393.99340820]
[93.27705383 397.58544922]
[107.46439362 402.48797607]
[121.14714813 408.66027832]
[134.21191406 416.05130005]
[146.55044556 424.59973145]
[158.06050110 434.23477173]
[168.64669800 444.87655640]
[178.22131348 456.43692017]
[186.70501709 468.82006836]
[194.02749634 481.92337036]
[200.12806702 495.63824463]
[204.95619202 509.85107422]
[208.47186279 524.44409180]
[210.64593506 539.29632568]
[211.46040344 554.28466797]
[210.90852356 569.28503418]
[208.99485779 584.17303467]
[205.73526001 598.82537842]
[201.15675354 613.12054443]
[195.29727173 626.94018555]
[188.20536804 640.16967773]
[179.93981934 652.69952393]
[170.56909180 664.42572021]
[160.17086792 675.25128174]
[148.83129883 685.08636475]
[136.64434814 693.84954834]
[123.71099854 701.46820068]
[110.13842773 707.87921143]
[96.03910828 713.02935791]
[81.52986908 716.87609863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[45 174]
[46 173]
[47 172]
[49 170]
[53 169]
[54 168]
[55 167]
[56 166]
[57 165]
[58 164]
[65 163]
[66 162]
[67 161]
[68 160]
[70 158]
[71 157]
[75 156]
[77 154]
[78 153]
[79 152]
[81 150]
[83 149]
[84 148]
[85 147]
[87 145]
[88 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
