%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[61.48183441 844.97595215]
[46.47837830 844.98339844]
[31.49510002 844.20562744]
[16.57305908 842.64471436]
[1.75315940 840.30499268]
[-12.92397881 837.19293213]
[-27.41812706 833.31689453]
[-41.68955612 828.68768311]
[-55.69915390 823.31787109]
[-69.40851593 817.22222900]
[-82.78006744 810.41741943]
[-95.77715302 802.92211914]
[-108.36415100 794.75689697]
[-120.50656891 785.94409180]
[-132.17111206 776.50787354]
[-143.32582092 766.47412109]
[-153.94012451 755.87036133]
[-163.98490906 744.72558594]
[-173.43266296 733.07037354]
[-182.25746155 720.93670654]
[-190.43516541 708.35778809]
[-197.94331360 695.36810303]
[-204.76133728 682.00329590]
[-210.87057495 668.29998779]
[-216.25425720 654.29571533]
[-220.89762878 640.02886963]
[-224.78796387 625.53857422]
[-227.91459656 610.86450195]
[-230.26898193 596.04693604]
[-231.84463501 581.12646484]
[-232.63725281 566.14392090]
[-232.64465332 551.14050293]
[-231.86682129 536.15722656]
[-230.30589294 521.23516846]
[-227.96614075 506.41528320]
[-224.85398865 491.73815918]
[-220.97795105 477.24401855]
[-216.34866333 462.97259521]
[-210.97880554 448.96304321]
[-204.88311768 435.25369263]
[-198.07827759 421.88217163]
[-190.58294678 408.88510132]
[-182.41767883 396.29812622]
[-173.60484314 384.15573120]
[-164.16859436 372.49121094]
[-154.13481140 361.33651733]
[-143.53099060 350.72225952]
[-132.38619995 340.67752075]
[-120.73096466 331.22979736]
[-108.59725189 322.40502930]
[-96.01831818 314.22735596]
[-83.02863312 306.71926880]
[-69.66380310 299.90127563]
[-55.96046829 293.79208374]
[-41.95618057 288.40844727]
[-27.68932533 283.76510620]
[-13.19900894 279.87481689]
[1.47505057 276.74822998]
[16.29263306 274.39389038]
[31.21312714 272.81826782]
[46.19563293 272.02569580]
[61.19908524 272.01834106]
[76.18235779 272.79623413]
[77.74288177 257.87762451]
[79.30340576 242.95901489]
[80.86392975 228.04040527]
[82.42445374 213.12181091]
[83.98497772 198.20320129]
[85.54550171 183.28459167]
[87.10601807 168.36599731]
[88.66654205 153.44738770]
[82.29531097 139.98422241]
[91.42632294 127.06388855]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[93.35250854 42.69117737]
[82.62491608 31.39708328]
[83.06505585 16.18981743]
[93.89836121 6.03230143]
[94.12168884 -8.96603584]
[86.59071350 -22.87987518]
[94.51664734 -35.49053955]
[86.98566437 -49.40438080]
[94.91159821 -62.01504517]
[95.13492584 -77.01338196]
[80.35326385 -79.77207947]
[66.25050354 -84.98937225]
[53.23241043 -92.51514435]
[41.67353821 -102.13286591]
[31.90646362 -113.56581116]
[24.21220207 -126.48503876]
[18.81213379 -140.51882935]
[15.86162949 -155.26339722]
[15.44557953 -170.29454041]
[17.57595634 -185.17974854]
[22.19146347 -199.49075317]
[29.15930557 -212.81582642]
[38.27899933 -224.77153015]
[49.28815842 -235.01391602]
[61.87002563 -243.24827576]
[75.66259766 -249.23768616]
[90.26902771 -252.80982971]
[105.26906586 -253.86192322]
[120.23112488 -252.36369324]
[134.72473145 -248.35824585]
[148.33285522 -241.96083069]
[160.66397095 -233.35551453]
[171.36329651 -222.78988647]
[180.12298584 -210.56794739]
[186.69099426 -197.04133606]
[190.87837219 -182.59924316]
[192.56460571 -167.65721130]
[191.70121765 -152.64512634]
[188.31301880 -137.99493408]
[182.49749756 -124.12814331]
[174.42199707 -111.44373322]
[164.31884766 -100.30665588]
[152.47874451 -91.03735352]
[139.24235535 -83.90251160]
[124.99050903 -79.10742950]
[110.13326263 -76.79005432]
[109.90993500 -61.79171753]
[117.45688629 -48.95065689]
[109.51498413 -35.26721191]
[117.06193542 -22.42615318]
[109.12002563 -8.74270821]
[108.89669800 6.25562906]
[119.42277527 16.73118973]
[119.40994263 31.94481850]
[108.35084534 42.91450500]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[118.80711365 102.67076874]
[133.76155090 103.83908081]
[143.61419678 115.14948273]
[142.72102356 130.12286377]
[131.59367371 140.18179321]
[116.60639954 139.56405640]
[106.34492493 128.62440491]
[112.60454559 143.15464783]
[103.58515167 155.00790405]
[102.02462769 169.92651367]
[100.46410370 184.84512329]
[98.90357971 199.76371765]
[97.34305573 214.68232727]
[95.78253174 229.60093689]
[94.22200775 244.51953125]
[92.66149139 259.43814087]
[91.10096741 274.35675049]
[105.92087555 276.69635010]
[120.59803772 279.80838013]
[135.09220886 283.68429565]
[149.36366272 288.31344604]
[163.37329102 293.68316650]
[177.08268738 299.77874756]
[190.45428467 306.58346558]
[203.45141602 314.07867432]
[216.03846741 322.24383545]
[228.18093872 331.05654907]
[239.84553528 340.49270630]
[251.00030518 350.52636719]
[261.61465454 361.13009644]
[271.65951538 372.27481079]
[281.10733032 383.92996216]
[289.93222046 396.06359863]
[298.10998535 408.64245605]
[305.61822510 421.63208008]
[312.43634033 434.99682617]
[318.54565430 448.70010376]
[323.92941284 462.70434570]
[328.57287598 476.97116089]
[332.46328735 491.46145630]
[335.59002686 506.13546753]
[337.94448853 520.95306396]
[339.52023315 535.87353516]
[340.31292725 550.85601807]
[340.32043457 565.85949707]
[339.54269409 580.84277344]
[337.98187256 595.76483154]
[335.64221191 610.58471680]
[332.53012085 625.26184082]
[328.65417480 639.75604248]
[324.02499390 654.02746582]
[318.65521240 668.03704834]
[312.55960083 681.74645996]
[305.75482178 695.11804199]
[298.25958252 708.11511230]
[290.09439087 720.70214844]
[281.28161621 732.84460449]
[271.84545898 744.50915527]
[261.81173706 755.66394043]
[251.20799255 766.27825928]
[240.06324768 776.32305908]
[228.40808105 785.77087402]
[216.27441406 794.59570312]
[203.69552612 802.77343750]
[190.70588684 810.28161621]
[177.34109497 817.09967041]
[163.63780212 823.20898438]
[149.63354492 828.59265137]
[135.36671448 833.23608398]
[120.87642670 837.12646484]
[106.20238495 840.25317383]
[91.38481903 842.60760498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 148]
[71 147]
[73 145]
[74 138]
[76 136]
[77 135]
[78 134]
[79 133]
[82 130]
[83 129]
[85 127]
[87 125]
[88 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
