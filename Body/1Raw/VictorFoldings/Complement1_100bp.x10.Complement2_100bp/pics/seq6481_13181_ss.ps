%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[99.73149872 530.14166260]
[87.96828461 539.53955078]
[74.50801086 546.28601074]
[59.93910980 550.08612061]
[44.89846802 550.77374268]
[30.04360199 548.31884766]
[16.02389908 542.82867432]
[3.45224118 534.54333496]
[-7.12179232 523.82495117]
[-15.23595047 511.14215088]
[-20.53551674 497.04931641]
[-22.78881836 482.16250610]
[-21.89734840 467.13259888]
[-17.90007782 452.61654663]
[-10.97175312 439.24896240]
[-1.41524923 427.61422729]
[10.35166550 418.22097778]
[23.81459045 411.47979736]
[38.38498688 407.68542480]
[53.42589569 407.00372314]
[47.86729813 393.18521118]
[57.75115585 380.83126831]
[60.19688034 366.03201294]
[62.64260864 351.23272705]
[65.08833313 336.43347168]
[67.53406525 321.63418579]
[69.97978973 306.83489990]
[72.42552185 292.03564453]
[74.87124634 277.23635864]
[77.31697083 262.43710327]
[79.76270294 247.63783264]
[82.20842743 232.83856201]
[84.54391479 218.02149963]
[86.76903534 203.18745422]
[87.66184998 188.21405029]
[87.21524048 173.22068787]
[86.76863861 158.22734070]
[78.28381348 170.59696960]
[64.79384613 177.15600586]
[49.82499313 176.18992615]
[37.29006577 167.95126343]
[30.46566582 154.59358215]
[31.13567734 139.60855103]
[39.12495804 126.91322327]
[52.34513474 119.82612610]
[67.34047699 120.19980621]
[80.19124603 127.93658447]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[92.66506195 72.05155182]
[88.26406097 57.71170425]
[83.86306763 43.37185669]
[79.46206665 29.03200912]
[75.06107330 14.69216251]
[70.66007233 0.35231495]
[66.25907135 -13.98753262]
[61.85807419 -28.32737923]
[57.45707703 -42.66722488]
[44.91051483 -47.56604004]
[37.58315659 -58.63492966]
[37.96319962 -71.70924377]
[45.68793488 -82.02223969]
[34.78084183 -88.90686798]
[31.59000206 -100.99001312]
[37.29864120 -111.65481567]
[33.32654572 -126.11933899]
[29.35444832 -140.58386230]
[25.38235092 -155.04838562]
[22.39964867 -140.34793091]
[15.61064148 -126.97222900]
[5.50543213 -115.88688660]
[-7.18647385 -107.89216614]
[-21.54883766 -103.56521606]
[-36.54482651 -103.21839905]
[-51.09186935 -106.87675476]
[-64.13980103 -114.27617645]
[-74.74668121 -124.88249969]
[-82.14678955 -137.93003845]
[-85.80590820 -152.47689819]
[-85.45987701 -167.47290039]
[-81.13367462 -181.83549500]
[-73.13962555 -194.52781677]
[-62.05481339 -204.63360596]
[-48.67947006 -211.42332458]
[-33.97916794 -214.40679932]
[-19.01513672 -213.36865234]
[-4.86764002 -208.38383484]
[7.44199991 -199.81221008]
[17.02513885 -188.27256775]
[23.19029617 -174.59684753]
[23.86008072 -189.58187866]
[24.52986526 -204.56692505]
[16.41771317 -214.59466553]
[17.28407669 -227.06195068]
[26.12040901 -235.32305908]
[27.01322556 -250.29646301]
[13.09301949 -256.29675293]
[2.06666040 -266.69845581]
[-4.73436594 -280.24548340]
[-6.48880196 -295.30197144]
[-2.98479104 -310.04977417]
[5.35453987 -322.70803833]
[17.52217674 -331.74816895]
[32.04881668 -336.07861328]
[47.18030167 -335.17636108]
[61.08942413 -329.15042114]
[72.09659576 -318.72842407]
[78.87264252 -305.16888428]
[80.59932709 -290.10919189]
[77.06814575 -275.36785889]
[68.70550537 -262.72500610]
[56.52122879 -253.70729065]
[41.98662949 -249.40364075]
[41.09381485 -234.43023682]
[49.78238678 -219.18309021]
[39.51490402 -203.89714050]
[38.84511948 -188.91209412]
[38.17533493 -173.92706299]
[39.84687424 -159.02047729]
[43.81896973 -144.55595398]
[47.79106903 -130.09143066]
[51.76316452 -115.62690735]
[64.89527893 -103.98584747]
[60.09171677 -86.20925140]
[75.16311646 -78.74656677]
[80.27459717 -62.37013245]
[71.79692841 -47.06822586]
[76.19792175 -32.72837830]
[80.59892273 -18.38853073]
[84.99991608 -4.04868317]
[89.40091705 10.29116440]
[93.80191803 24.63101196]
[98.20291138 38.97085953]
[102.60391235 53.31070709]
[107.00490570 67.65055084]
[109.39834595 52.84273529]
[114.77807617 38.84064484]
[122.91534424 26.23965836]
[133.46415710 15.57557583]
[145.97595215 7.30183840]
[159.91874695 1.77025020]
[174.69967651 -0.78398311]
[189.69026184 -0.25225395]
[204.25306702 3.34282827]
[217.76889038 9.84839916]
[229.66304016 18.98783684]
[239.42974854 30.37252998]
[246.65376282 43.51839447]
[251.02787781 57.86646271]
[252.36613464 72.80664825]
[250.61160278 87.70368195]
[245.83891296 101.92414093]
[238.25099182 114.86335754]
[228.17047119 125.97115326]
[216.02598572 134.77522278]
[202.33393860 140.90119934]
[187.67649841 144.08862305]
[172.67692566 144.20195007]
[157.97300720 141.23635864]
[144.18995667 135.31796265]
[131.91383362 126.69839478]
[121.66663361 115.74417877]
[113.88407135 102.92108917]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[101.76198578 157.78073120]
[102.20859528 172.77409363]
[102.65519714 187.76744080]
[110.40532684 174.92471313]
[122.91262054 166.64416504]
[137.76211548 164.52461243]
[152.08660889 168.97532654]
[163.12026978 179.13694763]
[168.73265076 193.04740906]
[167.84011841 208.02082825]
[160.61499023 221.16607666]
[148.45233154 229.94500732]
[133.70054626 232.66255188]
[119.20799255 228.79397583]
[107.77294159 219.08627319]
[101.60307312 205.41256714]
[99.37796021 220.24661255]
[101.19973755 229.19752502]
[97.00769806 235.28428650]
[94.56197357 250.08355713]
[92.11624146 264.88284302]
[89.67051697 279.68209839]
[87.22479248 294.48138428]
[84.77906036 309.28063965]
[82.33333588 324.07992554]
[79.88761139 338.87918091]
[77.44187927 353.67846680]
[74.99615479 368.47772217]
[72.55042267 383.27700806]
[77.93408966 398.15405273]
[68.22516632 409.44946289]
[82.24702454 414.93408203]
[94.82194519 423.21447754]
[105.40019226 433.92868042]
[113.51934052 446.60833740]
[118.82444763 460.69909668]
[121.08361053 475.58499146]
[120.19805145 490.61526489]
[116.20648956 505.13287354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 202]
[22 200]
[23 199]
[24 198]
[25 197]
[26 196]
[27 195]
[28 194]
[29 193]
[30 192]
[31 191]
[32 190]
[33 188]
[34 187]
[35 174]
[36 173]
[37 172]
[48 171]
[49 170]
[50 169]
[52 167]
[53 138]
[54 137]
[55 136]
[56 135]
[57 134]
[58 133]
[59 132]
[60 131]
[61 130]
[65 127]
[68 125]
[69 124]
[70 123]
[71 122]
[93 121]
[94 120]
[95 119]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
