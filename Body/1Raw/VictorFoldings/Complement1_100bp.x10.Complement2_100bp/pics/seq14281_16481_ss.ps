%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[110.15889740 699.41418457]
[96.45235443 693.30242920]
[83.25388336 686.15936279]
[70.64094543 678.02691650]
[58.68754578 668.95281982]
[47.46384048 658.99035645]
[37.03569412 648.19793701]
[27.46430397 636.63891602]
[18.80583763 624.38110352]
[11.11111069 611.49645996]
[4.42527580 598.06060791]
[-1.21242976 584.15234375]
[-5.76892138 569.85339355]
[-9.21745968 555.24755859]
[-11.53780651 540.42059326]
[-12.71634579 525.45947266]
[-12.74616051 510.45211792]
[-11.62707615 495.48645020]
[-9.36565971 480.65039062]
[-5.97518301 466.03097534]
[-1.47554243 451.71398926]
[4.10685635 437.78347778]
[10.73925304 424.32113647]
[18.38272476 411.40603638]
[26.99241829 399.11392212]
[36.51780319 387.51696777]
[46.90298843 376.68319702]
[58.08702087 366.67617798]
[70.00426483 357.55465698]
[82.58480072 349.37219238]
[95.75478363 342.17675781]
[109.43692780 336.01058960]
[123.55094910 330.90988159]
[138.01400757 326.90457153]
[135.12873840 312.18466187]
[132.24346924 297.46478271]
[129.35818481 282.74487305]
[126.47292328 268.02499390]
[116.61211395 261.01849365]
[114.08787537 248.77871704]
[120.78759003 237.75708008]
[118.12179565 222.99586487]
[115.23651886 208.27597046]
[112.13240814 193.60066223]
[109.02829742 178.92536926]
[105.92418671 164.25006104]
[102.82007599 149.57475281]
[92.61647034 138.72415161]
[97.33047485 123.62154388]
[94.22636414 108.94623566]
[89.93223572 94.57402802]
[84.47688293 80.60122681]
[79.02152252 66.62843323]
[73.56616974 52.65563202]
[68.11080933 38.68283463]
[53.00619888 36.27492523]
[41.21273041 26.69312859]
[35.83453751 12.58846855]
[38.22243881 -2.21537852]
[47.63626862 -13.75857258]
[42.18091202 -27.73137093]
[29.95447350 -37.77252197]
[32.53313446 -52.44221115]
[27.61858940 -56.86474228]
[25.92890358 -62.29079056]
[27.13018417 -66.91312408]
[22.09326744 -81.04215240]
[17.05635262 -95.17118073]
[12.01943588 -109.30020905]
[-0.73335487 -113.63391113]
[-8.54765797 -124.36457062]
[-8.75179386 -137.44281006]
[-1.49526155 -148.09045410]
[-6.32125902 -162.29290771]
[-11.14725685 -176.49536133]
[-15.97325420 -190.69781494]
[-20.79925156 -204.90026855]
[-35.66200638 -202.60470581]
[-50.69757843 -202.92507935]
[-65.44905853 -205.85166931]
[-79.46816254 -211.29556274]
[-92.32887268 -219.09127808]
[-103.64035034 -229.00195312]
[-113.05886841 -240.72640991]
[-120.29820251 -253.90832520]
[-125.13835907 -268.14715576]
[-127.43225098 -283.01016235]
[-127.11016846 -298.04571533]
[-124.18190002 -312.79684448]
[-118.73642731 -326.81533813]
[-110.93923950 -339.67517090]
[-101.02728271 -350.98550415]
[-89.30176544 -360.40270996]
[-76.11901855 -367.64053345]
[-61.87965012 -372.47909546]
[-47.01637650 -374.77130127]
[-31.98087692 -374.44750977]
[-17.23006058 -371.51754761]
[-3.21219110 -366.07049561]
[9.64674473 -358.27185059]
[20.95598030 -348.35861206]
[30.37183762 -336.63201904]
[37.60818100 -323.44845581]
[42.44510651 -309.20855713]
[44.73562622 -294.34500122]
[44.41013336 -279.30953979]
[41.47851944 -264.55905151]
[36.02986908 -250.54180908]
[28.22976494 -237.68376160]
[18.31524086 -226.37565613]
[6.58759117 -216.96112061]
[-6.59679651 -209.72627258]
[-1.77079880 -195.52381897]
[3.05519891 -181.32136536]
[7.88119650 -167.11891174]
[12.70719433 -152.91645813]
[28.09679031 -146.13418579]
[33.93441391 -130.00231934]
[26.14846611 -114.33712769]
[31.18538094 -100.20809937]
[36.22229767 -86.07907104]
[41.25921249 -71.95004272]
[46.50593185 -57.89756775]
[58.34216690 -48.85584641]
[56.15370941 -33.18672943]
[61.60906982 -19.21393013]
[76.35387421 -17.10291862]
[88.14071655 -7.83327341]
[93.74216461 6.18421984]
[91.56089783 21.22213364]
[82.08361053 33.22747803]
[87.53896332 47.20027542]
[92.99432373 61.17307281]
[98.44967651 75.14587402]
[103.90503693 89.11866760]
[107.27833557 74.50289154]
[116.98736572 63.06896591]
[130.86309814 57.37124634]
[145.80566406 58.68262482]
[158.47685242 66.71013641]
[166.04589844 79.66041565]
[166.82183838 94.64032745]
[160.63133240 108.30333710]
[148.85737610 117.59707642]
[134.13026428 120.44532013]
[119.74010468 116.21173859]
[108.90166473 105.84212494]
[112.00577545 120.51743317]
[122.43140411 132.41770935]
[117.49538422 146.47064209]
[120.59949493 161.14595032]
[123.70359802 175.82125854]
[126.80770874 190.49655151]
[129.91181946 205.17185974]
[134.03950500 210.33651733]
[134.82188416 215.96545410]
[132.88301086 220.33006287]
[135.54879761 235.09127808]
[147.76646423 248.86845398]
[141.19281006 265.13970947]
[144.07807922 279.85961914]
[146.96336365 294.57949829]
[149.84863281 309.29940796]
[152.73390198 324.01928711]
[167.63880920 322.26812744]
[182.63403320 321.66308594]
[197.63156128 322.20770264]
[212.54341125 323.89877319]
[227.28204346 326.72637939]
[241.76098633 330.67391968]
[255.89524841 335.71823120]
[269.60189819 341.82971191]
[282.80050659 348.97253418]
[295.41360474 357.10470581]
[307.36718750 366.17855835]
[318.59106445 376.14083862]
[329.01943970 386.93307495]
[338.59103394 398.49194336]
[347.24972534 410.74957275]
[354.94470215 423.63406372]
[361.63079834 437.06979370]
[367.26876831 450.97793579]
[371.82553101 465.27682495]
[375.27435303 479.88259888]
[377.59497070 494.70950317]
[378.77380371 509.67056274]
[378.80389404 524.67797852]
[377.68508911 539.64361572]
[375.42395020 554.47973633]
[372.03375244 569.09918213]
[367.53439331 583.41625977]
[361.95223999 597.34692383]
[355.32009888 610.80932617]
[347.67687988 623.72460938]
[339.06741333 636.01690674]
[329.54226685 647.61401367]
[319.15728760 658.44799805]
[307.97344971 668.45520020]
[296.05636597 677.57696533]
[283.47598267 685.75970459]
[270.30615234 692.95538330]
[256.62411499 699.12176514]
[242.51019287 704.22277832]
[228.04719543 708.22833252]
[213.32002258 711.11505127]
[198.41508484 712.86590576]
[183.41986084 713.47070312]
[168.42233276 712.92578125]
[153.51051331 711.23443604]
[138.77192688 708.40655518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[41 158]
[42 157]
[43 154]
[44 153]
[45 152]
[46 151]
[47 150]
[49 148]
[50 147]
[51 135]
[52 134]
[53 133]
[54 132]
[55 131]
[60 126]
[61 125]
[63 123]
[66 122]
[67 121]
[68 120]
[69 119]
[73 116]
[74 115]
[75 114]
[76 113]
[77 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
