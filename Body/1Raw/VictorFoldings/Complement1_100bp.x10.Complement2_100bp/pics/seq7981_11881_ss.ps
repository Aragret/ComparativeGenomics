%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[179.89363098 702.27612305]
[177.22784424 687.51489258]
[174.56204224 672.75372314]
[171.89625549 657.99249268]
[169.23045349 643.23126221]
[166.56465149 628.47003174]
[163.89886475 613.70880127]
[161.23306274 598.94763184]
[148.95252991 595.98004150]
[138.66865540 588.56097412]
[131.92985535 577.76391602]
[129.76721191 565.17413330]
[132.53681946 552.65594482]
[139.86175537 542.07672119]
[150.68287659 535.02813721]
[148.45776367 520.19409180]
[146.23265076 505.36001587]
[144.00752258 490.52597046]
[141.78240967 475.69192505]
[139.55729675 460.85791016]
[123.30844879 457.22045898]
[109.67301178 447.59982300]
[100.75904083 433.44879150]
[97.95793152 416.92321777]
[101.72722626 400.55346680]
[111.51622009 386.85720825]
[125.84617615 377.95190430]
[123.18038177 363.19070435]
[120.51458740 348.42947388]
[117.84879303 333.66827393]
[115.18299866 318.90704346]
[101.64688873 315.86697388]
[90.25591278 307.87213135]
[82.74883270 296.10253906]
[80.28690338 282.31741333]
[83.27432251 268.59222412]
[91.29231262 257.00619507]
[103.15748596 249.32737732]
[100.71176147 234.52810669]
[98.26603699 219.72883606]
[95.49042511 204.98786926]
[92.38631439 190.31257629]
[89.28220367 175.63726807]
[86.17809296 160.96197510]
[82.46721649 175.49569702]
[75.54680634 188.80389404]
[65.77989197 200.18841553]
[53.67883301 209.05207825]
[39.87842560 214.92988586]
[25.10260391 217.51351929]
[10.12648487 216.66743469]
[-4.26431656 212.43601990]
[-17.31488609 205.04124451]
[-28.34062004 194.87103271]
[-36.76312637 182.45889282]
[-42.14058304 168.45593262]
[-44.19089127 153.59671021]
[-42.80650330 138.66073608]
[-38.06003952 124.43150330]
[-30.20048714 111.65545654]
[-19.64014435 101.00279236]
[-6.93298674 93.03234100]
[7.25439548 88.16220856]
[22.17775917 86.64787292]
[37.05425644 88.56877136]
[51.10349274 93.82414246]
[63.58847427 102.13829803]
[73.85427094 113.07509613]
[81.36234283 126.06081390]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[101.92730713 42.33913040]
[104.26279449 27.52206230]
[106.48791504 12.68801975]
[108.71302795 -2.14602447]
[110.38457489 -17.05259895]
[111.50022125 -32.01105118]
[104.81076050 -46.34847641]
[113.47324371 -58.46502304]
[114.58889008 -73.42347717]
[115.70453644 -88.38192749]
[116.82018280 -103.34037781]
[105.66868591 -111.44191742]
[100.02129364 -123.89685059]
[101.25570679 -137.40780640]
[108.94298553 -148.45542908]
[120.98740387 -154.21511841]
[122.32563782 -169.15530396]
[123.66387177 -184.09548950]
[125.00210571 -199.03567505]
[115.14424133 -211.09637451]
[116.71423340 -226.22877502]
[128.27301025 -235.55241394]
[129.61123657 -250.49259949]
[130.94947815 -265.43280029]
[117.21409607 -271.84487915]
[106.50231934 -282.57028198]
[100.10765839 -296.31378174]
[98.80228424 -311.41583252]
[102.74384308 -326.05276489]
[111.45635986 -338.45712280]
[123.88775635 -347.13098145]
[138.53689575 -351.02697754]
[153.63479614 -349.67462158]
[167.35835266 -343.23721313]
[178.05033875 -332.49209595]
[184.41966248 -318.73684692]
[185.69720459 -303.63241577]
[181.72868347 -289.00274658]
[172.99331665 -276.61447144]
[160.54594421 -267.96353149]
[145.88966370 -264.09454346]
[144.55142212 -249.15437317]
[143.21319580 -234.21418762]
[152.93098450 -222.98474121]
[151.78665161 -207.81420898]
[139.94229126 -197.69744873]
[138.60404968 -182.75726318]
[137.26582336 -167.81707764]
[135.92758179 -152.87689209]
[148.63385010 -142.48323059]
[152.68176270 -126.40292358]
[146.28392029 -110.92491150]
[131.77864075 -102.22473145]
[130.66299438 -87.26628113]
[129.54734802 -72.30782318]
[128.43168640 -57.34937286]
[135.20095825 -44.08187866]
[126.45867157 -30.89540291]
[125.34302521 -15.93694973]
[138.23919678 -23.59780121]
[152.32263184 -18.43476677]
[157.21154785 -4.25384426]
[149.30200195 8.49131966]
[134.42463684 10.40546322]
[123.54707336 0.07909276]
[121.32196045 14.91313648]
[119.09683990 29.74718094]
[121.21333313 36.82830048]
[116.72657776 44.78485870]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[100.85339355 157.85786438]
[103.95750427 172.53315735]
[107.06161499 187.20846558]
[110.16572571 201.88375854]
[113.65596008 205.76516724]
[115.15813446 210.15797424]
[114.81037140 214.21926880]
[113.06530762 217.28311157]
[115.51103210 232.08238220]
[117.95675659 246.88165283]
[133.60723877 251.33094788]
[145.70733643 262.12127686]
[151.86836243 277.05453491]
[150.90376282 293.12167358]
[143.05734253 307.10906982]
[129.94421387 316.24124146]
[132.61000061 331.00247192]
[135.27580261 345.76367188]
[137.94160461 360.52490234]
[140.60739136 375.28610229]
[153.88067627 377.40252686]
[165.83566284 383.49560547]
[175.31532288 392.95986938]
[181.40705872 404.86437988]
[183.53056335 418.04425049]
[181.49301147 431.21463013]
[175.50657654 443.09597778]
[166.16638184 452.53836060]
[154.39134216 458.63278198]
[156.61645508 473.46682739]
[158.84156799 488.30087280]
[161.06668091 503.13491821]
[163.29180908 517.96893311]
[165.51692200 532.80297852]
[182.01742554 538.85003662]
[193.12582397 552.35241699]
[195.85154724 569.53308105]
[189.53279114 585.64471436]
[175.99427795 596.28179932]
[178.66007996 611.04302979]
[181.32588196 625.80426025]
[183.99166870 640.56549072]
[186.65747070 655.32666016]
[189.32325745 670.08789062]
[191.98905945 684.84912109]
[194.65484619 699.61035156]
[209.45649719 703.19238281]
[221.51756287 712.49029541]
[228.74838257 725.89306641]
[229.89617920 741.07867432]
[224.76208496 755.41607666]
[214.23562622 766.42126465]
[200.14056396 772.18743896]
[184.91896057 771.71569824]
[171.20803833 765.08764648]
[161.38331604 753.45172119]
[157.14697266 738.82391357]
[159.23297119 723.73852539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[3 196]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[20 181]
[27 172]
[28 171]
[29 170]
[30 169]
[31 168]
[38 162]
[39 161]
[40 160]
[41 156]
[42 155]
[43 154]
[44 153]
[70 152]
[71 151]
[72 150]
[74 148]
[75 147]
[76 146]
[77 145]
[78 143]
[79 142]
[80 141]
[81 135]
[82 134]
[84 132]
[85 131]
[86 130]
[87 129]
[92 125]
[93 124]
[94 123]
[95 122]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
