%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[68.64604187 795.57098389]
[53.64298630 795.43927002]
[38.66862869 794.50238037]
[23.76614952 792.76312256]
[8.97851276 790.22644043]
[-5.65164423 786.89965820]
[-20.08213806 782.79235840]
[-34.27136230 777.91638184]
[-48.17840576 772.28582764]
[-61.76317215 765.91687012]
[-74.98648834 758.82794189]
[-87.81023407 751.03948975]
[-100.19742584 742.57385254]
[-112.11235809 733.45556641]
[-123.52067566 723.71087646]
[-134.38948059 713.36785889]
[-144.68742371 702.45629883]
[-154.38484192 691.00775146]
[-163.45375061 679.05517578]
[-171.86801147 666.63305664]
[-179.60337830 653.77722168]
[-186.63751221 640.52465820]
[-192.95016479 626.91363525]
[-198.52311707 612.98339844]
[-203.34030151 598.77416992]
[-207.38783264 584.32678223]
[-210.65405273 569.68298340]
[-213.12953186 554.88494873]
[-214.80712891 539.97540283]
[-215.68200684 524.99731445]
[-215.75164795 509.99383545]
[-215.01585388 495.00823975]
[-213.47674561 480.08377075]
[-211.13874817 465.26342773]
[-208.00862122 450.58993530]
[-204.09538269 436.10559082]
[-199.41032410 421.85220337]
[-193.96691895 407.87084961]
[-187.78091431 394.20181274]
[-180.87010193 380.88455200]
[-173.25442505 367.95742798]
[-164.95584106 355.45770264]
[-155.99829102 343.42147827]
[-146.40757751 331.88339233]
[-136.21136475 320.87673950]
[-125.43904877 310.43325806]
[-114.12168884 300.58306885]
[-102.29192352 291.35455322]
[-89.98384857 282.77429199]
[-77.23296356 274.86709595]
[-64.07602692 267.65570068]
[-50.55097580 261.16094971]
[-36.69680023 255.40153503]
[-22.55345345 250.39405823]
[-8.16171169 246.15296936]
[6.43693113 242.69050598]
[21.20038223 240.01663208]
[36.08607483 238.13906860]
[51.05108643 237.06323242]
[66.05226898 236.79222107]
[81.04637909 237.32681274]
[82.38461304 222.38662720]
[83.72284698 207.44644165]
[85.06108093 192.50625610]
[86.39931488 177.56607056]
[75.07411194 165.13311768]
[76.26862335 148.01913452]
[89.73090363 136.84835815]
[90.84654999 121.88990784]
[91.96219635 106.93144989]
[92.18552399 91.93311310]
[91.51573944 76.94807434]
[90.84595490 61.96303558]
[87.61559296 56.19447708]
[87.76148224 50.51330185]
[90.38605499 46.52322769]
[90.16272736 31.52489090]
[89.93939972 16.52655411]
[89.71607208 1.52821660]
[81.77416229 -12.15522957]
[89.32111359 -24.99628830]
[89.09778595 -39.99462509]
[88.87445831 -54.99296188]
[73.96614075 -56.86061859]
[59.46285248 -60.78500748]
[45.64691544 -66.68974304]
[32.78725052 -74.45989227]
[21.13417816 -83.94419861]
[10.91453171 -94.95805359]
[2.32723689 -107.28706360]
[-4.46055126 -120.69123840]
[-9.31670666 -134.90968323]
[-12.14670277 -149.66560364]
[-12.89545250 -164.67178345]
[-11.54838276 -179.63612366]
[-8.13171196 -194.26733398]
[-2.71194935 -208.28062439]
[4.60540915 -221.40321350]
[13.67792892 -233.37968445]
[24.32901192 -243.97686768]
[36.35132980 -252.98854065]
[49.51086426 -260.23925781]
[63.55146027 -265.58786011]
[78.19982147 -268.93026733]
[93.17079926 -270.20144653]
[108.17299652 -269.37658691]
[122.91437531 -266.47177124]
[137.10800171 -261.54357910]
[150.47756958 -254.68789673]
[162.76287842 -246.03817749]
[173.72474670 -235.76280212]
[183.14984131 -224.06178284]
[190.85466003 -211.16287231]
[196.68923950 -197.31715393]
[200.54002380 -182.79415894]
[202.33204651 -167.87655640]
[202.03041077 -152.85473633]
[199.64100647 -138.02108765]
[195.21034241 -123.66437531]
[188.82466125 -110.06404114]
[180.60824585 -97.48481750]
[170.72105408 -86.17156982]
[159.35554504 -76.34451294]
[146.73292542 -68.19493103]
[133.09890747 -61.88146210]
[118.71890259 -57.52699280]
[103.87279510 -55.21628952]
[104.09612274 -40.21795273]
[104.31945038 -25.21961594]
[112.24538422 -12.60895061]
[104.71440887 1.30488884]
[104.93773651 16.30322647]
[105.16106415 31.30156326]
[105.38439178 46.29990005]
[105.83099365 61.29325104]
[106.50077820 76.27828979]
[107.17056274 91.26332855]
[116.53159332 79.54278564]
[130.96295166 75.45185852]
[145.08212280 80.51636505]
[153.62298584 92.84737396]
[153.40000916 107.84571075]
[144.49636841 119.91738129]
[130.23289490 124.55994415]
[115.92951965 120.04183960]
[106.92065430 108.04709625]
[105.80500793 123.00555420]
[104.68935394 137.96400452]
[114.59507751 147.09040833]
[117.39500427 160.06619263]
[112.28598785 172.10696411]
[101.33950043 178.90431213]
[100.00126648 193.84449768]
[98.66303253 208.78468323]
[97.32479858 223.72486877]
[95.98656464 238.66505432]
[110.83699036 240.80371094]
[125.55120850 243.73641968]
[140.08680725 247.45471191]
[154.40185547 251.94786072]
[168.45507812 257.20291138]
[182.20597839 263.20474243]
[195.61489868 269.93600464]
[208.64317322 277.37731934]
[221.25325012 285.50720215]
[233.40875244 294.30224609]
[245.07463074 303.73709106]
[256.21728516 313.78451538]
[266.80453491 324.41555786]
[276.80590820 335.59954834]
[286.19253540 347.30426025]
[294.93734741 359.49594116]
[303.01513672 372.13943481]
[310.40264893 385.19830322]
[317.07852173 398.63488770]
[323.02355957 412.41043091]
[328.22061157 426.48522949]
[332.65466309 440.81869507]
[336.31292725 455.36950684]
[339.18490601 470.09570312]
[341.26229858 484.95480347]
[342.53909302 499.90402222]
[343.01162720 514.90020752]
[342.67852783 529.90014648]
[341.54077148 544.86059570]
[339.60159302 559.73840332]
[336.86666870 574.49066162]
[333.34381104 589.07482910]
[329.04318237 603.44891357]
[323.97723389 617.57141113]
[318.16052246 631.40161133]
[311.60983276 644.89965820]
[304.34405518 658.02667236]
[296.38415527 670.74468994]
[287.75305176 683.01715088]
[278.47564697 694.80859375]
[268.57867432 706.08514404]
[258.09069824 716.81408691]
[247.04194641 726.96466064]
[235.46427917 736.50756836]
[223.39106750 745.41522217]
[210.85711670 753.66198730]
[197.89859009 761.22412109]
[184.55282593 768.07977295]
[170.85832214 774.20916748]
[156.85453796 779.59460449]
[142.58187866 784.22064209]
[128.08148193 788.07391357]
[113.39516449 791.14331055]
[98.56526947 793.41992188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 156]
[62 155]
[63 154]
[64 153]
[65 152]
[68 148]
[69 147]
[70 146]
[71 137]
[72 136]
[73 135]
[76 134]
[77 133]
[78 132]
[79 131]
[81 129]
[82 128]
[83 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
