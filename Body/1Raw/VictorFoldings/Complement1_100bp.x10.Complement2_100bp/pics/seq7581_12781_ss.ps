%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[197.75900269 294.53948975]
[190.48576355 281.42077637]
[183.21253967 268.30209351]
[175.84185791 255.23791504]
[168.37411499 242.22895813]
[160.90637207 229.22000122]
[153.43862915 216.21105957]
[145.97088623 203.20210266]
[138.50314331 190.19314575]
[135.21345520 188.92417908]
[132.37496948 185.99876404]
[130.75952148 181.64633179]
[131.00730896 176.43234253]
[124.12789154 163.10292053]
[117.24847412 149.77348328]
[104.53581238 142.01220703]
[105.08226013 126.20043945]
[98.20285034 112.87100983]
[90.92961884 99.75231934]
[83.26902008 86.85598755]
[75.60842133 73.95966339]
[70.86626434 88.19033051]
[57.51269531 95.02276611]
[43.19724655 90.54304504]
[36.12046051 77.31734467]
[40.33623505 62.92195511]
[53.42958832 55.60320663]
[67.89929962 59.55303574]
[61.41980362 46.02468872]
[54.94030762 32.49634171]
[48.46081161 18.96799660]
[41.98131561 5.43965197]
[26.55153084 -4.61038494]
[28.58177376 -22.04153633]
[21.90157890 -35.47191238]
[15.22138405 -48.90229034]
[8.54118919 -62.33266449]
[1.86099458 -75.76303864]
[-0.66852677 -60.97786331]
[-10.17550182 -49.37538528]
[-24.17482948 -43.98847580]
[-39.00711823 -46.22525024]
[-50.79524612 -55.50102997]
[-56.45782471 -69.39114380]
[-54.51466370 -84.26474762]
[-45.47370911 -96.23391724]
[-31.69823837 -102.16994476]
[-16.78913116 -100.52116394]
[-4.64414930 -91.71925354]
[-9.25815868 -105.99198914]
[-13.87216759 -120.26471710]
[-18.48617744 -134.53746033]
[-23.10018730 -148.81018066]
[-27.71419525 -163.08291626]
[-33.68576050 -176.84301758]
[-40.95898819 -189.96171570]
[-48.23221588 -203.08041382]
[-55.50544739 -216.19911194]
[-62.77867508 -229.31779480]
[-76.59829712 -223.44960022]
[-90.95561981 -219.05812073]
[-105.69332123 -216.19146729]
[-120.64994812 -214.88104248]
[-135.66160583 -215.14123535]
[-150.56384277 -216.96914673]
[-165.19335938 -220.34478760]
[-179.38986206 -225.23117065]
[-192.99783325 -231.57473755]
[-205.86816406 -239.30599976]
[-217.85984802 -248.34024048]
[-228.84147644 -258.57846069]
[-238.69273376 -269.90853882]
[-247.30569458 -282.20626831]
[-254.58599854 -295.33697510]
[-260.45385742 -309.15673828]
[-264.84500122 -323.51416016]
[-267.71130371 -338.25192261]
[-269.02133179 -353.20858765]
[-268.76080322 -368.22024536]
[-266.93252563 -383.12243652]
[-263.55651855 -397.75186157]
[-258.66979980 -411.94827271]
[-252.32589722 -425.55606079]
[-244.59432983 -438.42620850]
[-235.55979919 -450.41766357]
[-225.32128906 -461.39904785]
[-213.99099731 -471.25003052]
[-201.69303894 -479.86270142]
[-188.56216431 -487.14266968]
[-174.74226379 -493.01022339]
[-160.38473511 -497.40100098]
[-145.64688110 -500.26693726]
[-130.69020081 -501.57662964]
[-115.67855072 -501.31570435]
[-100.77641296 -499.48706055]
[-86.14705658 -496.11071777]
[-71.95078278 -491.22366333]
[-58.34311676 -484.87942505]
[-45.47316360 -477.14755249]
[-33.48192978 -468.11270142]
[-22.50079727 -457.87393188]
[-12.65008354 -446.54339600]
[-4.03771591 -434.24523926]
[3.24194288 -421.11419678]
[9.10913277 -407.29415894]
[13.49956989 -392.93652344]
[16.36515045 -378.19860840]
[17.67447662 -363.24188232]
[17.41320229 -348.23022461]
[15.58419228 -333.32812500]
[12.20748425 -318.69888306]
[7.32007647 -304.50271606]
[0.97551775 -290.89520264]
[-6.75667763 -278.02542114]
[-15.79179192 -266.03442383]
[-26.03083038 -255.05354309]
[-37.36161041 -245.20309448]
[-49.65998077 -236.59103394]
[-42.38675308 -223.47233582]
[-35.11352539 -210.35363770]
[-27.84029388 -197.23493958]
[-20.56706429 -184.11625671]
[-19.89659691 -199.10125732]
[-13.26211739 -212.55427551]
[-1.78164983 -222.20823669]
[12.61014366 -226.43626404]
[27.48799324 -224.52587891]
[40.34472275 -216.79901123]
[49.01374054 -204.55776978]
[52.03417206 -189.86500549]
[48.89701843 -175.19673157]
[40.13094711 -163.02481079]
[27.21319008 -155.40039062]
[12.32062149 -153.60836792]
[-2.03710151 -157.95068359]
[-13.44146252 -167.69692993]
[-8.82745266 -153.42419434]
[-4.21344376 -139.15145874]
[0.40056545 -124.87873077]
[5.01457453 -110.60599518]
[9.62858391 -96.33325958]
[15.29137039 -82.44323730]
[21.97156525 -69.01285553]
[28.65176010 -55.58248138]
[35.33195496 -42.15210724]
[42.01214981 -28.72173119]
[53.37630844 -24.57655716]
[59.05160141 -13.44216061]
[55.50966263 -1.03984404]
[61.98915863 12.48850155]
[68.46865082 26.01684761]
[74.94815063 39.54519272]
[81.42764282 53.07353973]
[88.50475311 66.29906464]
[96.16535187 79.19538879]
[103.82594299 92.09172058]
[106.70513153 93.09160614]
[109.28414154 95.16121674]
[111.16605377 98.19136810]
[111.99985504 101.92781830]
[111.53227997 105.99160004]
[118.41168976 119.32102966]
[131.61640930 128.03572083]
[130.57791138 142.89407349]
[137.45732117 156.22349548]
[144.33673096 169.55293274]
[151.51210022 182.72540283]
[158.97984314 195.73435974]
[166.44758606 208.74331665]
[173.91531372 221.75225830]
[181.38305664 234.76121521]
[188.85079956 247.77017212]
[195.83718872 253.65473938]
[196.33123779 261.02886963]
[203.60446167 274.14755249]
[210.87768555 287.26626587]
[225.07070923 282.29974365]
[239.89894104 279.80343628]
[254.93576050 279.84921265]
[269.74853516 282.43576050]
[283.91104126 287.48858643]
[297.01580811 294.86236572]
[308.68582153 304.34494019]
[318.58526611 315.66348267]
[326.42932129 328.49230957]
[331.99230957 342.46231079]
[335.11419678 357.17153931]
[335.70510864 372.19683838]
[333.74807739 387.10580444]
[329.29940796 401.46957397]
[322.48706055 414.87478638]
[313.50711060 426.93582153]
[302.61785889 437.30560303]
[290.13265991 445.68582153]
[276.41073608 451.83529663]
[261.84683228 455.57714844]
[246.86006165 456.80371094]
[231.88159180 455.47967529]
[217.34236145 451.64315796]
[203.66072083 445.40451050]
[191.23030090 436.94323730]
[180.40876770 426.50283813]
[171.50746155 414.38363647]
[164.78250122 400.93438721]
[160.42736816 386.54199219]
[158.56738281 371.62057495]
[159.25604248 356.59945679]
[162.47354126 341.91082764]
[168.12731934 327.97732544]
[176.05467224 315.19979858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[4 172]
[5 171]
[6 170]
[7 169]
[8 168]
[9 167]
[13 166]
[14 165]
[15 164]
[17 162]
[18 161]
[19 156]
[20 155]
[21 154]
[28 153]
[29 152]
[30 151]
[31 150]
[32 149]
[34 146]
[35 145]
[36 144]
[37 143]
[38 142]
[49 141]
[50 140]
[51 139]
[52 138]
[53 137]
[54 136]
[55 122]
[56 121]
[57 120]
[58 119]
[59 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
