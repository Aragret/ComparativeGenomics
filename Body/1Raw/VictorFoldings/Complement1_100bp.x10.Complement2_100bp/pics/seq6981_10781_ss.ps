%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[-9.54992771 215.01821899]
[-5.05710745 229.34025574]
[-1.86620414 244.00738525]
[-0.00290991 258.90148926]
[0.51777291 273.90264893]
[-0.30834809 288.89010620]
[-2.47462130 303.74316406]
[-5.96360493 318.34225464]
[-10.74720669 332.56982422]
[-16.78691292 346.31127930]
[-24.03409195 359.45605469]
[-32.43039322 371.89825439]
[-41.90821457 383.53771973]
[-52.39124298 394.28073120]
[-63.79507446 404.04080200]
[-76.02789307 412.73931885]
[-88.99120331 420.30627441]
[-102.58062744 426.68075562]
[-116.68675232 431.81140137]
[-131.19599915 435.65689087]
[-145.99154663 438.18630981]
[-160.95426941 439.37927246]
[-175.96369934 439.22619629]
[-190.89897156 437.72824097]
[-205.63984680 434.89755249]
[-220.06762695 430.75686646]
[-234.06616211 425.33953857]
[-247.52272034 418.68920898]
[-260.32897949 410.85937500]
[-272.38180542 401.91311646]
[-283.58416748 391.92245483]
[-293.84588623 380.96786499]
[-303.08428955 369.13748169]
[-311.22506714 356.52658081]
[-318.20257568 343.23672485]
[-323.96072388 329.37490845]
[-328.45312500 315.05273438]
[-331.64355469 300.38552856]
[-333.50640869 285.49136353]
[-334.02664185 270.49017334]
[-333.20004272 255.50274658]
[-331.03332520 240.64974976]
[-327.54388428 226.05076599]
[-322.75985718 211.82334900]
[-316.71972656 198.08206177]
[-309.47216797 184.93753052]
[-301.07546997 172.49557495]
[-291.59729004 160.85639954]
[-281.11395264 150.11370850]
[-269.70980835 140.35400391]
[-257.47671509 131.65583801]
[-244.51318359 124.08927155]
[-230.92356873 117.71522522]
[-216.81729126 112.58501434]
[-202.30792236 108.73994446]
[-187.51229858 106.21097565]
[-172.54954529 105.01847076]
[-157.54011536 105.17202759]
[-142.60488892 106.67041779]
[-127.86410522 109.50157166]
[-113.43644714 113.64270020]
[-99.43807983 119.06044769]
[-85.98171234 125.71120453]
[-73.17569733 133.54141235]
[-61.12313843 142.48803711]
[-49.92107773 152.47903442]
[-39.65970612 163.43395996]
[-30.42164803 175.26461792]
[-17.81933594 167.12940979]
[-5.21702528 158.99418640]
[7.38528681 150.85897827]
[19.98759842 142.72375488]
[26.48416138 129.32063293]
[42.27474213 128.33665466]
[54.87705231 120.20144653]
[57.75274658 105.63209534]
[70.41739655 97.20230865]
[85.67957306 100.31738281]
[92.23143768 87.96567535]
[106.18521118 87.08030701]
[118.78752136 78.94509125]
[126.80964661 62.37019348]
[144.35765076 62.18404770]
[156.83743286 53.86210632]
[169.31723022 45.54016113]
[181.79702759 37.21821594]
[194.27682495 28.89627266]
[197.54389954 23.14842796]
[202.48202515 20.33560753]
[207.25439453 20.51881409]
[219.97642517 12.57213020]
[232.69845581 4.62544584]
[236.32366943 -12.48820972]
[250.91705322 -21.50751495]
[267.19140625 -17.26674843]
[279.79373169 -25.40196419]
[292.39602661 -33.53718185]
[304.99835205 -41.67239761]
[317.60064697 -49.80761337]
[310.46261597 -63.00900269]
[304.36904907 -76.72383881]
[299.35662842 -90.86964417]
[295.45544434 -105.36134338]
[292.68902588 -120.11177063]
[291.07397461 -135.03222656]
[290.61999512 -150.03295898]
[291.32986450 -165.02377319]
[293.19924927 -179.91450500]
[296.21694946 -194.61558533]
[300.36480713 -209.03860474]
[305.61785889 -223.09683228]
[311.94451904 -236.70570374]
[319.30676270 -249.78338623]
[327.66030884 -262.25122070]
[336.95489502 -274.03421021]
[347.13461304 -285.06152344]
[358.13827515 -295.26681519]
[369.89968872 -304.58868408]
[382.34808350 -312.97113037]
[395.40866089 -320.36370850]
[409.00280762 -326.72192383]
[423.04882812 -332.00759888]
[437.46218872 -336.18890381]
[452.15621948 -339.24069214]
[467.04257202 -341.14462280]
[482.03170776 -341.88925171]
[497.03344727 -341.47009277]
[511.95761108 -339.88964844]
[526.71441650 -337.15744019]
[541.21514893 -333.28991699]
[555.37249756 -328.31030273]
[569.10144043 -322.24859619]
[582.31939697 -315.14120483]
[594.94677734 -307.03088379]
[606.90771484 -297.96643066]
[618.13024902 -288.00231934]
[628.54687500 -277.19854736]
[638.09497070 -265.62002563]
[646.71710205 -253.33639526]
[654.36138916 -240.42156982]
[660.98193359 -226.95320129]
[666.53881836 -213.01228333]
[670.99871826 -198.68266296]
[674.33471680 -184.05053711]
[676.52679443 -169.20388794]
[677.56182861 -154.23200989]
[677.43347168 -139.22494507]
[676.14257812 -124.27295685]
[673.69689941 -109.46596527]
[670.11114502 -94.89302063]
[665.40686035 -80.64177704]
[659.61236572 -66.79792786]
[652.76251221 -53.44474411]
[644.89843750 -40.66252899]
[636.06750488 -28.52816200]
[626.32281494 -17.11461830]
[615.72296143 -6.49054146]
[604.33166504 3.28017235]
[592.21746826 12.13876057]
[579.45318604 20.03194618]
[566.11566162 26.91225624]
[552.28509521 32.73831558]
[538.04461670 37.47507858]
[523.47985840 41.09406281]
[508.67849731 43.57350540]
[493.72949219 44.89848709]
[478.72277832 45.06104279]
[463.74856567 44.06019211]
[448.89697266 41.90196228]
[434.25726318 38.59932327]
[419.91751099 34.17214584]
[405.96395874 28.64705086]
[392.48052979 22.05726814]
[379.54827881 14.44243240]
[367.24505615 5.84833860]
[355.64477539 -3.67332625]
[344.81726074 -14.06529713]
[334.82760620 -25.26507378]
[325.73587036 -37.20529938]
[313.13357544 -29.07008362]
[300.53125000 -20.93486786]
[287.92895508 -12.79965305]
[275.32662964 -4.66443682]
[274.40231323 8.18761158]
[266.12081909 18.31179047]
[253.33218384 21.87004280]
[240.64514160 17.34748268]
[227.92311096 25.29416656]
[215.20108032 33.24085236]
[202.59877014 41.37606812]
[190.11897278 49.69800949]
[177.63917542 58.01995468]
[165.15937805 66.34189606]
[152.67958069 74.66384125]
[150.00193787 86.46031189]
[139.67292786 93.49559784]
[126.92273712 91.54740143]
[114.32042694 99.68261719]
[107.76856232 112.03432465]
[93.81478882 112.91969299]
[90.36988068 128.11082458]
[77.47345734 136.18156433]
[63.01226807 132.80375671]
[50.40995789 140.93898010]
[43.01199341 154.92399597]
[28.12281418 155.32606506]
[15.52050304 163.46128845]
[2.91819072 171.59649658]
[-9.68412113 179.73171997]
[-22.28643227 187.86694336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 210]
[69 209]
[70 208]
[71 207]
[72 206]
[74 204]
[75 203]
[78 200]
[80 198]
[81 197]
[83 194]
[84 193]
[85 192]
[86 191]
[87 190]
[90 189]
[91 188]
[92 187]
[95 183]
[96 182]
[97 181]
[98 180]
[99 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
