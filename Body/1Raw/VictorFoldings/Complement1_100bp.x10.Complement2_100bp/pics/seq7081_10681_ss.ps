%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[163.54205322 496.77697754]
[153.76025391 485.39999390]
[144.63174438 473.49246216]
[136.18525696 461.09182739]
[128.44735718 448.23709106]
[121.44242096 434.96871948]
[115.19245911 421.32846069]
[109.71715546 407.35919189]
[105.03372192 393.10491943]
[101.15691376 378.61044312]
[98.09890747 363.92141724]
[95.86933899 349.08404541]
[94.47521210 334.14498901]
[93.92092896 319.15124512]
[94.20822144 304.15002441]
[95.33618927 289.18853760]
[97.30127716 274.31381226]
[100.09731293 259.57266235]
[103.71549988 245.01148987]
[108.14443970 230.67608643]
[113.37020874 216.61158752]
[119.37636566 202.86221313]
[126.14400482 189.47125244]
[133.65184021 176.48080444]
[141.87623596 163.93177795]
[150.79133606 151.86363220]
[139.24502563 142.28851318]
[127.69873047 132.71339417]
[116.15242767 123.13826752]
[104.60612488 113.56314850]
[90.85643768 111.02590942]
[85.81875610 97.98315430]
[74.27245331 88.40803528]
[62.72615051 78.83291626]
[51.17984772 69.25779724]
[46.03381729 68.38288879]
[42.12848663 65.87257385]
[39.87904358 62.47330093]
[39.34423828 58.98814392]
[28.23700333 48.90700531]
[17.12977028 38.82586670]
[6.13656235 49.04463577]
[-5.68366098 58.29429245]
[-18.24573326 66.50819397]
[-31.45914268 73.62715912]
[-45.22868347 79.59989166]
[-59.45515060 84.38336182]
[-74.03603363 87.94309235]
[-88.86627197 90.25345612]
[-103.83901978 91.29778290]
[-118.84639740 91.06856537]
[-133.78027344 89.56744385]
[-148.53303528 86.80524445]
[-162.99839783 82.80185699]
[-177.07214355 77.58614349]
[-190.65284729 71.19566345]
[-203.64266968 63.67647934]
[-215.94802856 55.08275604]
[-227.48025513 45.47641754]
[-238.15625000 34.92667770]
[-247.89909363 23.50954819]
[-256.63858032 11.30729294]
[-264.31176758 -1.59216976]
[-270.86334229 -15.09589767]
[-276.24612427 -29.10659409]
[-280.42129517 -43.52331161]
[-283.35879517 -58.24217606]
[-285.03744507 -73.15713501]
[-285.44519043 -88.16072083]
[-284.57904053 -103.14482880]
[-282.44528198 -118.00151062]
[-279.05923462 -132.62370300]
[-274.44534302 -146.90606689]
[-268.63684082 -160.74568176]
[-261.67556763 -174.04284668]
[-253.61167908 -186.70173645]
[-244.50328064 -198.63116455]
[-234.41601562 -209.74514771]
[-223.42254639 -219.96363831]
[-211.60208130 -229.21298218]
[-199.03979492 -237.42655945]
[-185.82620239 -244.54518127]
[-172.05650330 -250.51756287]
[-157.82991028 -255.30065918]
[-143.24894714 -258.86001587]
[-128.41864014 -261.16998291]
[-113.44586182 -262.21392822]
[-98.43849182 -261.98434448]
[-83.50466156 -260.48281860]
[-68.75196838 -257.72024536]
[-54.28670883 -253.71649170]
[-40.21310425 -248.50041199]
[-26.63256073 -242.10957336]
[-13.64292526 -234.59005737]
[-1.33779180 -225.99601746]
[10.19418049 -216.38937378]
[20.86990166 -205.83937073]
[30.61245155 -194.42198181]
[39.35163116 -182.21949768]
[47.02447891 -169.31983948]
[53.57571030 -155.81594849]
[58.95811462 -141.80511475]
[63.13292313 -127.38828278]
[66.07004547 -112.66934967]
[67.74832153 -97.75434875]
[68.15566254 -82.75074768]
[67.28913879 -67.76666260]
[65.15497589 -52.91003799]
[61.76856613 -38.28792953]
[57.15430450 -24.00568581]
[51.34543991 -10.16621780]
[44.38381958 3.13076329]
[36.31960678 15.78944969]
[27.21090889 27.71863365]
[38.31814194 37.79977417]
[49.42537689 47.88091278]
[60.75497055 57.71149063]
[72.30126953 67.28661346]
[83.84757233 76.86173248]
[95.39387512 86.43685150]
[109.14356232 88.97409058]
[114.18124390 102.01684570]
[125.72754669 111.59196472]
[137.27384949 121.16708374]
[148.82014465 130.74220276]
[160.36645508 140.31732178]
[170.57653809 129.32308960]
[181.38700867 118.91863251]
[192.76385498 109.13669586]
[204.67129517 100.00804901]
[217.07183838 91.56142426]
[229.92648315 83.82339478]
[243.19477844 76.81830597]
[256.83499146 70.56819153]
[270.80416870 65.09272766]
[285.05841064 60.40914536]
[299.55282593 56.53216934]
[314.24182129 53.47399902]
[329.07919312 51.24426651]
[344.01821899 49.84997559]
[359.01193237 49.29552460]
[374.01315308 49.58264923]
[388.97470093 50.71044922]
[403.84942627 52.67537689]
[418.59060669 55.47124863]
[433.15182495 59.08926773]
[447.48727417 63.51805115]
[461.55181885 68.74366760]
[475.30126953 74.74966431]
[488.69232178 81.51715851]
[501.68283081 89.02484131]
[514.23193359 97.24910736]
[526.30023193 106.16407013]
[537.84960938 115.74167633]
[548.84381104 125.95179749]
[559.24822998 136.76231384]
[569.03009033 148.13919067]
[578.15869141 160.04666138]
[586.60528564 172.44723511]
[594.34326172 185.30191040]
[601.34832764 198.57023621]
[607.59838867 212.21046448]
[613.07379150 226.17968750]
[617.75732422 240.43392944]
[621.63421631 254.92835999]
[624.69232178 269.61737061]
[626.92205811 284.45474243]
[628.31628418 299.39379883]
[628.87066650 314.38751221]
[628.58349609 329.38873291]
[627.45562744 344.35025024]
[625.49066162 359.22497559]
[622.69470215 373.96615601]
[619.07666016 388.52734375]
[614.64782715 402.86276245]
[609.42211914 416.92730713]
[603.41607666 430.67672729]
[596.64855957 444.06774902]
[589.14080811 457.05825806]
[580.91650391 469.60733032]
[572.00152588 481.67556763]
[562.42382812 493.22491455]
[552.21368408 504.21908569]
[541.40313721 514.62347412]
[530.02618408 524.40527344]
[518.11871338 533.53387451]
[505.71810913 541.98040771]
[492.86340332 549.71832275]
[479.59503174 556.72332764]
[465.95480347 562.97332764]
[451.98556519 568.44866943]
[437.73129272 573.13214111]
[423.23684692 577.00903320]
[408.54782104 580.06707764]
[393.71044922 582.29669189]
[378.77139282 583.69091797]
[363.77767944 584.24523926]
[348.77645874 583.95800781]
[333.81494141 582.83007812]
[318.94021606 580.86505127]
[304.19906616 578.06909180]
[289.63787842 574.45092773]
[275.30245972 570.02203369]
[261.23794556 564.79632568]
[247.48854065 558.79022217]
[234.09754944 552.02264404]
[221.10708618 544.51483154]
[208.55801392 536.29052734]
[196.48983765 527.37542725]
[184.94052124 517.79772949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 126]
[27 125]
[28 124]
[29 123]
[30 122]
[32 120]
[33 119]
[34 118]
[35 117]
[39 116]
[40 115]
[41 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
