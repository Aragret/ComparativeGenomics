%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[211.07031250 456.23348999]
[203.60258484 443.22454834]
[196.13484192 430.21560669]
[188.66709900 417.20663452]
[181.19935608 404.19769287]
[173.53875732 391.30136108]
[165.68699646 378.52050781]
[157.83525085 365.73968506]
[149.88856506 353.01763916]
[141.84738159 340.35510254]
[133.80621338 327.69259644]
[125.76504517 315.03005981]
[117.72386932 302.36755371]
[119.30585480 317.28387451]
[117.98764038 332.22586060]
[113.81851959 346.63482666]
[106.95434570 359.97210693]
[97.65174866 371.73907471]
[86.25850677 381.49581909]
[73.20057678 388.87759399]
[58.96612549 393.60836792]
[44.08732605 395.51135254]
[29.12042999 394.51535034]
[14.62498569 390.65762329]
[1.14291763 384.08236694]
[-10.82173824 375.03543091]
[-20.82167435 363.85504150]
[-28.48303413 350.95916748]
[-33.51939392 336.82992554]
[-35.74246597 321.99557495]
[-35.06914139 307.01071167]
[-31.52458572 292.43551636]
[-25.24132156 278.81494141]
[-16.45425034 266.65814209]
[-5.49188280 256.41964722]
[7.23594332 248.48225403]
[21.25338936 243.14266968]
[36.03640366 240.60052490]
[51.03231049 240.95086670]
[65.68048096 244.18058777]
[79.43328094 250.16896057]
[91.77654266 258.69207764]
[102.24882507 269.43133545]
[110.45576477 281.97979736]
[108.67329407 267.08609009]
[106.89083099 252.19236755]
[105.10836029 237.29866028]
[101.97424316 233.69499207]
[101.07065582 228.08424377]
[103.50137329 221.93582153]
[102.16313934 206.99563599]
[100.82490540 192.05545044]
[99.48667145 177.11526489]
[98.14843750 162.17507935]
[96.81020355 147.23489380]
[95.47196960 132.29470825]
[86.63005066 120.30847931]
[93.10530853 105.87304688]
[90.52626801 103.00582886]
[89.22357941 99.01573181]
[89.67039490 94.49827576]
[92.05619049 90.23825073]
[91.38640594 75.25321198]
[82.41197205 65.98918152]
[82.16260529 53.49431992]
[90.22667694 44.47782135]
[89.78007507 29.48447227]
[89.33346558 14.49112129]
[88.88686371 -0.50222832]
[88.10553741 -15.48186588]
[86.98989105 -30.44031906]
[85.87424469 -45.39877319]
[84.75859070 -60.35722733]
[83.64294434 -75.31568146]
[68.78858185 -77.85212708]
[54.98134232 -83.86647797]
[43.02208328 -93.00514221]
[33.60334396 -104.73346710]
[27.26923370 -118.36697388]
[24.38401031 -133.11132812]
[25.11112595 -148.10865784]
[29.40397644 -162.48736572]
[37.00886536 -175.41290283]
[47.47998810 -186.13612366]
[60.20557022 -194.03672791]
[74.44359589 -198.65917969]
[65.70131683 -211.84564209]
[72.47058105 -225.11314392]
[71.35492706 -240.07159424]
[70.23928070 -255.03004456]
[69.12363434 -269.98849487]
[60.38135147 -283.17498779]
[67.15061188 -296.44247437]
[66.03496552 -311.40090942]
[51.38207245 -315.21820068]
[38.76395798 -323.58850098]
[29.54934120 -335.60388184]
[24.73775291 -349.96102905]
[24.85111618 -365.10253906]
[29.87713814 -379.38601685]
[39.27062988 -391.26208496]
[52.01266098 -399.44253540]
[66.72106171 -403.03994751]
[81.80038452 -401.66418457]
[95.61493683 -395.46441650]
[106.66621399 -385.11318970]
[113.75545502 -371.73330688]
[116.11367798 -356.77612305]
[113.48507690 -341.86407471]
[106.15478516 -328.61471558]
[94.91793060 -318.46524048]
[80.99341583 -312.51657104]
[82.10906219 -297.55810547]
[90.77154541 -285.44155884]
[84.08208466 -271.10415649]
[85.19773102 -256.14569092]
[86.31338501 -241.18724060]
[87.42903137 -226.22879028]
[96.09151459 -214.11224365]
[89.40205383 -199.77482605]
[104.16825104 -197.31561279]
[117.92502594 -191.39013672]
[129.87098694 -182.33885193]
[139.30912781 -170.68444824]
[145.68743896 -157.10162354]
[148.63124084 -142.37808228]
[147.96513367 -127.36885071]
[143.72351074 -112.94657898]
[136.14877319 -99.95082855]
[125.67745972 -89.13921356]
[112.91515350 -81.14322662]
[98.60140228 -76.43132782]
[99.71704865 -61.47287369]
[100.83269501 -46.51441956]
[101.94834137 -31.55596733]
[103.06399536 -16.59751511]
[105.48277283 -14.03200436]
[106.77909851 -10.16747379]
[106.35594940 -5.54424524]
[103.88021088 -0.94883430]
[104.32682037 14.04451561]
[104.77342224 29.03786659]
[105.22003174 44.03121567]
[115.23423767 58.44241333]
[106.37144470 74.58342743]
[107.04122925 89.56846619]
[108.04549408 104.53481293]
[116.98313141 117.58966827]
[110.41215515 130.95646667]
[111.75038910 145.89665222]
[113.08862305 160.83683777]
[114.42685699 175.77702332]
[115.76509094 190.71720886]
[117.10332489 205.65739441]
[118.44155884 220.59757996]
[120.00208282 235.51618958]
[121.78454590 250.40991211]
[123.56700897 265.30361938]
[125.34947968 280.19732666]
[130.38639832 294.32635498]
[138.42756653 306.98889160]
[146.46873474 319.65142822]
[154.50991821 332.31393433]
[162.55108643 344.97647095]
[169.79327393 350.54321289]
[170.61608887 357.88790894]
[178.46784973 370.66876221]
[186.31959534 383.44961548]
[191.94187927 386.92831421]
[194.56898499 391.96771240]
[194.20831299 396.72994995]
[201.67604065 409.73889160]
[209.14378357 422.74786377]
[216.61152649 435.75680542]
[224.07926941 448.76574707]
[238.17175293 443.52633667]
[252.93444824 440.67803955]
[267.96463013 440.29861450]
[282.85223389 442.39840698]
[297.19113159 446.92013550]
[310.59011841 453.74041748]
[322.68371582 462.67321777]
[333.14199829 473.47482300]
[341.67959595 485.85055542]
[348.06362915 499.46282959]
[352.11996460 513.94024658]
[353.73791504 528.88793945]
[352.87332153 543.89801025]
[349.54980469 558.56103516]
[343.85803223 572.47692871]
[335.95324707 585.26617432]
[326.05114746 596.57983398]
[314.42184448 606.10919189]
[301.38256836 613.59429932]
[287.28906250 618.83105469]
[272.52581787 621.67645264]
[257.49557495 622.05297852]
[242.60838318 619.95031738]
[228.27035522 615.42584229]
[214.87266541 608.60296631]
[202.78079224 599.66784668]
[192.32461548 588.86425781]
[183.78938293 576.48687744]
[177.40797424 562.87335205]
[173.35443115 548.39514160]
[171.73936462 533.44720459]
[172.60684204 518.43725586]
[175.93318176 503.77490234]
[181.62763977 489.86004639]
[189.53486633 477.07232666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[3 173]
[4 172]
[5 171]
[6 168]
[7 167]
[8 166]
[9 164]
[10 163]
[11 162]
[12 161]
[13 160]
[44 159]
[45 158]
[46 157]
[47 156]
[50 155]
[51 154]
[52 153]
[53 152]
[54 151]
[55 150]
[56 149]
[58 147]
[62 146]
[63 145]
[66 143]
[67 142]
[68 141]
[69 140]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[86 120]
[88 118]
[89 117]
[90 116]
[91 115]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
