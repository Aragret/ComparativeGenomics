%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[37.81138611 907.74090576]
[22.81385040 908.14025879]
[7.81429958 907.82550049]
[-7.15328646 906.79742432]
[-22.05500031 905.05828857]
[-36.85708618 902.61212158]
[-51.52601242 899.46435547]
[-66.02854919 895.62225342]
[-80.33184052 891.09436035]
[-94.40348053 885.89105225]
[-108.21160889 880.02410889]
[-121.72492981 873.50677490]
[-134.91284180 866.35382080]
[-147.74545288 858.58148193]
[-160.19371033 850.20733643]
[-172.22941589 841.25030518]
[-183.82530212 831.73083496]
[-194.95507812 821.67034912]
[-205.59356689 811.09167480]
[-215.71664429 800.01873779]
[-225.30139160 788.47674561]
[-234.32608032 776.49176025]
[-242.77027893 764.09088135]
[-250.61486816 751.30230713]
[-257.84204102 738.15490723]
[-264.43548584 724.67852783]
[-270.38018799 710.90374756]
[-275.66275024 696.86163330]
[-280.27117920 682.58410645]
[-284.19503784 668.10345459]
[-287.42541504 653.45251465]
[-289.95501709 638.66448975]
[-291.77810669 623.77276611]
[-292.89056396 608.81121826]
[-293.28988647 593.81372070]
[-292.97509766 578.81414795]
[-291.94699097 563.84655762]
[-290.20785522 548.94482422]
[-287.76162720 534.14276123]
[-284.61386108 519.47387695]
[-280.77166748 504.97134399]
[-276.24377441 490.66806030]
[-271.04043579 476.59640503]
[-265.17346191 462.78829956]
[-258.65606689 449.27499390]
[-251.50309753 436.08709717]
[-243.73072815 423.25451660]
[-235.35653687 410.80627441]
[-226.39953613 398.77056885]
[-216.87998962 387.17471313]
[-206.81947327 376.04495239]
[-196.24078369 365.40649414]
[-185.16787720 355.28344727]
[-173.62582397 345.69873047]
[-161.64079285 336.67407227]
[-149.23992920 328.22988892]
[-136.45130920 320.38534546]
[-123.30392456 313.15817261]
[-109.82754517 306.56478882]
[-96.05271149 300.62008667]
[-82.01061249 295.33755493]
[-67.73306274 290.72918701]
[-53.25241470 286.80535889]
[-38.60145950 283.57501221]
[-23.81339645 281.04544067]
[-8.92171955 279.22238159]
[6.03983450 278.10995483]
[21.03737450 277.71069336]
[36.03692245 278.02548218]
[51.00450516 279.05364990]
[65.90621185 280.79281616]
[68.35193634 265.99356079]
[62.79334259 252.17503357]
[72.67720032 239.82109070]
[75.12292480 225.02182007]
[77.56865692 210.22254944]
[80.01438141 195.42327881]
[82.46010590 180.62400818]
[84.57472992 165.77380371]
[78.40464783 152.21728516]
[87.72702026 139.43432617]
[89.50948334 124.54061127]
[91.29194641 109.64688873]
[92.63018036 94.70670319]
[93.52299500 79.73329926]
[94.41581726 64.75989532]
[95.30863190 49.78648758]
[95.19696045 34.78690338]
[86.45468140 21.60042953]
[93.22394562 8.33293533]
[92.10829163 -6.62551785]
[90.99264526 -21.58397102]
[87.23363495 -29.90909195]
[89.97343445 -36.77314758]
[89.08061981 -51.74655533]
[74.54602051 -56.05019379]
[62.36174393 -65.06790924]
[53.99909973 -77.71076965]
[50.46791840 -92.45209503]
[52.19460297 -107.51178741]
[58.97065353 -121.07131958]
[69.97782135 -131.49331665]
[83.88694763 -137.51927185]
[99.01843262 -138.42150879]
[113.54507446 -134.09109497]
[125.71270752 -125.05093384]
[134.05203247 -112.39268494]
[137.55604553 -97.64488220]
[135.80162048 -82.58839417]
[129.00059509 -69.04136658]
[117.97422791 -58.63967514]
[104.05402374 -52.63936996]
[104.94683838 -37.66596222]
[105.95109558 -22.69961929]
[107.06674957 -7.74116611]
[108.18239594 7.21728706]
[116.84487915 19.33383369]
[110.15541840 33.67125702]
[118.57160187 21.25481987]
[132.32238770 15.26183414]
[147.14694214 17.54928970]
[158.45172119 27.40839195]
[162.73382568 41.78419495]
[158.66636658 56.22219467]
[147.50973511 66.24862671]
[132.72088623 68.75668335]
[118.88234711 62.96922302]
[110.28203583 50.67930603]
[109.38922119 65.65270996]
[108.49640656 80.62611389]
[107.60359192 95.59952545]
[109.42616272 98.04241180]
[110.40015411 101.20246124]
[110.25822449 104.76662445]
[108.85242462 108.32752228]
[106.18566895 111.42935944]
[104.40319824 126.32307434]
[102.62073517 141.21679688]
[108.66332245 155.83860779]
[99.46845245 167.55627441]
[101.52433777 172.35423279]
[101.53332520 176.99678040]
[99.89739990 180.73025513]
[97.25937653 183.06973267]
[94.81365204 197.86900330]
[92.36792755 212.66827393]
[89.92219543 227.46754456]
[87.47647095 242.26681519]
[92.86013031 257.14385986]
[83.15120697 268.43927002]
[80.70548248 283.23855591]
[95.37442017 286.38619995]
[109.87697601 290.22830200]
[124.18028259 294.75607300]
[138.25195312 299.95932007]
[152.06010437 305.82623291]
[165.57345581 312.34350586]
[178.76139832 319.49639893]
[191.59405518 327.26867676]
[204.04235840 335.64279175]
[216.07809448 344.59970093]
[227.67401123 354.11917114]
[238.80384827 364.17959595]
[249.44238281 374.75823975]
[259.56552124 385.83108521]
[269.15029907 397.37304688]
[278.17504883 409.35803223]
[286.61929321 421.75885010]
[294.46395874 434.54739380]
[301.69119263 447.69473267]
[308.28466797 461.17108154]
[314.22946167 474.94586182]
[319.51208496 488.98791504]
[324.12057495 503.26544189]
[328.04449463 517.74609375]
[331.27493286 532.39697266]
[333.80462646 547.18505859]
[335.62777710 562.07672119]
[336.74029541 577.03826904]
[337.13967896 592.03576660]
[336.82498169 607.03533936]
[335.79690552 622.00292969]
[334.05783081 636.90466309]
[331.61169434 651.70672607]
[328.46398926 666.37567139]
[324.62185669 680.87823486]
[320.09405518 695.18151855]
[314.89077759 709.25317383]
[309.02383423 723.06134033]
[302.50653076 736.57464600]
[295.35360718 749.76257324]
[287.58129883 762.59521484]
[279.20715332 775.04351807]
[270.25021362 787.07922363]
[260.73071289 798.67510986]
[250.67025757 809.80493164]
[240.09161377 820.44342041]
[229.01873779 830.56652832]
[217.47674561 840.15130615]
[205.49174500 849.17602539]
[193.09092712 857.62023926]
[180.30233765 865.46484375]
[167.15498352 872.69207764]
[153.67864990 879.28552246]
[139.90382385 885.23028564]
[125.86175537 890.51287842]
[111.58422852 895.12133789]
[97.10359955 899.04522705]
[82.45265961 902.27563477]
[67.66460419 904.80529785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 151]
[72 150]
[74 148]
[75 147]
[76 146]
[77 145]
[78 144]
[79 140]
[81 138]
[82 137]
[83 136]
[84 131]
[85 130]
[86 129]
[87 128]
[88 118]
[90 116]
[91 115]
[92 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
