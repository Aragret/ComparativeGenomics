%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[83.26452637 618.90905762]
[68.26649475 619.39471436]
[53.27029037 618.85565186]
[38.34582901 617.29455566]
[23.56269455 614.71856689]
[8.98981476 611.13977051]
[-5.30486250 606.57476807]
[-19.25469017 601.04492188]
[-32.79462814 594.57604980]
[-45.86154175 587.19818115]
[-58.39451218 578.94586182]
[-70.33509827 569.85742188]
[-81.62763214 559.97534180]
[-92.21946716 549.34570312]
[-102.06120300 538.01800537]
[-111.10696411 526.04504395]
[-119.31457520 513.48272705]
[-126.64576721 500.38958740]
[-133.06636047 486.82666016]
[-138.54640198 472.85720825]
[-143.06036377 458.54635620]
[-146.58718872 443.96078491]
[-149.11042786 429.16857910]
[-150.61833191 414.23864746]
[-151.10386658 399.24060059]
[-150.56475830 384.24438477]
[-149.00350952 369.31994629]
[-146.42742920 354.53683472]
[-142.84852600 339.96395874]
[-138.28346252 325.66931152]
[-132.75352478 311.71954346]
[-126.28452301 298.17965698]
[-118.90660095 285.11276245]
[-110.65415192 272.57986450]
[-101.56567383 260.63934326]
[-91.68351746 249.34686279]
[-81.05377960 238.75511169]
[-69.72600555 228.91343689]
[-57.75302505 219.86776733]
[-45.19065094 211.66023254]
[-32.09745789 204.32913208]
[-18.53449440 197.90863037]
[-4.56499767 192.42868042]
[9.74589920 187.91481018]
[24.33147240 184.38809204]
[39.12371826 181.86494446]
[54.05366135 180.35714722]
[69.05169678 179.87171936]
[84.04789734 180.41093445]
[85.60842133 165.49232483]
[87.16894531 150.57371521]
[88.72946930 135.65512085]
[82.35823059 122.19195557]
[91.48924255 109.27161407]
[92.71622467 94.32188416]
[85.81404114 80.08564758]
[94.29516602 67.84146881]
[95.18798065 52.86806488]
[96.08079529 37.89466095]
[96.97360992 22.92125320]
[97.86642456 7.94784737]
[89.24493408 -8.32333469]
[99.47259521 -22.58383560]
[100.14237976 -37.56887436]
[100.81216431 -52.55391312]
[101.48194885 -67.53895569]
[86.58325958 -69.34072113]
[71.86350250 -72.26410675]
[57.40699387 -76.29236603]
[43.29654694 -81.40242004]
[29.61298180 -87.56500244]
[16.43467522 -94.74480438]
[3.83711505 -102.90071869]
[-8.10754108 -111.98601532]
[-19.33087540 -121.94864655]
[-29.76859856 -132.73156738]
[-39.36092758 -144.27299500]
[-48.05290985 -156.50683594]
[-55.79476929 -169.36300659]
[-62.54215240 -182.76786804]
[-68.25640869 -196.64462280]
[-72.90481567 -210.91381836]
[-76.46074677 -225.49368286]
[-78.90382385 -240.30073547]
[-80.22005463 -255.25015259]
[-80.40190887 -270.25628662]
[-79.44834137 -285.23321533]
[-77.36481476 -300.09512329]
[-74.16325378 -314.75689697]
[-69.86200714 -329.13452148]
[-64.48571014 -343.14569092]
[-58.06516266 -356.71014404]
[-50.63713074 -369.75015259]
[-42.24416733 -382.19104004]
[-32.93434906 -393.96151733]
[-22.76100159 -404.99423218]
[-11.78239632 -415.22592163]
[-0.06141863 -424.59799194]
[12.33479404 -433.05679321]
[25.33523560 -440.55386353]
[38.86544037 -447.04623413]
[52.84791183 -452.49673462]
[67.20255280 -456.87414551]
[81.84713745 -460.15338135]
[96.69779205 -462.31567383]
[111.66944122 -463.34863281]
[126.67633820 -463.24633789]
[141.63252258 -462.00936890]
[156.45231628 -459.64483643]
[171.05084229 -456.16625977]
[185.34446716 -451.59356689]
[199.25132751 -445.95297241]
[212.69177246 -439.27673340]
[225.58880615 -431.60314941]
[237.86854553 -422.97613525]
[249.46067810 -413.44512939]
[260.29876709 -403.06472778]
[270.32077026 -391.89437866]
[279.46926880 -379.99804688]
[287.69183350 -367.44390869]
[294.94140625 -354.30383301]
[301.17645264 -340.65313721]
[306.36123657 -326.56997681]
[310.46609497 -312.13504028]
[313.46746826 -297.43099976]
[315.34820557 -282.54205322]
[316.09750366 -267.55352783]
[315.71109009 -252.55125427]
[314.19119263 -237.62118530]
[311.54647827 -222.84881592]
[307.79214478 -208.31877136]
[302.94964600 -194.11427307]
[297.04672241 -180.31669617]
[290.11721802 -167.00506592]
[282.20083618 -154.25564575]
[273.34286499 -142.14143372]
[263.59408569 -130.73184204]
[253.01034546 -120.09221649]
[241.65223694 -110.28350830]
[229.58483887 -101.36189270]
[216.87725830 -93.37847900]
[203.60231018 -86.37899017]
[189.83599854 -80.40352631]
[175.65719604 -75.48630524]
[161.14712524 -71.65550232]
[146.38888550 -68.93305206]
[131.46701050 -67.33455658]
[116.46698761 -66.86917114]
[115.79720306 -51.88412857]
[115.12741852 -36.89908981]
[114.45763397 -21.91405106]
[122.38657379 -12.77849102]
[121.95120239 -0.28872651]
[112.83983612 8.84066391]
[111.94701385 23.81406975]
[111.05419922 38.78747559]
[110.16138458 53.76087952]
[109.26856995 68.73428345]
[116.23461151 81.89952850]
[107.68962860 95.21469879]
[109.81480408 98.43276978]
[110.51118469 102.57196808]
[109.39919281 106.97315979]
[106.40785217 110.83213806]
[112.66746521 125.36237335]
[103.64807129 137.21563721]
[102.08754730 152.13424683]
[100.52702332 167.05284119]
[98.96649933 181.97145081]
[113.74967194 184.54724121]
[128.32260132 188.12585449]
[142.61734009 192.69062805]
[156.56724548 198.22027588]
[170.10726929 204.68901062]
[183.17427063 212.06668091]
[195.70735168 220.31886292]
[207.64807129 229.40710449]
[218.94073486 239.28903198]
[229.53269958 249.91856384]
[239.37460327 261.24612427]
[248.42051697 273.21893311]
[256.62829590 285.78115845]
[263.95965576 298.87417603]
[270.38043213 312.43701172]
[275.86068726 326.40640259]
[280.37481689 340.71722412]
[283.90185547 355.30270386]
[286.42529297 370.09490967]
[287.93338013 385.02484131]
[288.41912842 400.02285767]
[287.88021851 415.01907349]
[286.31918335 429.94354248]
[283.74328613 444.72668457]
[280.16458130 459.29959106]
[275.59970093 473.59429932]
[270.06994629 487.54415894]
[263.60113525 501.08413696]
[256.22338867 514.15112305]
[247.97111511 526.68414307]
[238.88278198 538.62475586]
[229.00079346 549.91735840]
[218.37118530 560.50927734]
[207.04354858 570.35107422]
[195.07067871 579.39697266]
[182.50842285 587.60461426]
[169.41532898 594.93591309]
[155.85244751 601.35656738]
[141.88302612 606.83673096]
[127.57218933 611.35076904]
[112.98666382 614.87774658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 169]
[50 168]
[51 167]
[52 166]
[54 164]
[55 160]
[57 158]
[58 157]
[59 156]
[60 155]
[61 154]
[63 151]
[64 150]
[65 149]
[66 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
