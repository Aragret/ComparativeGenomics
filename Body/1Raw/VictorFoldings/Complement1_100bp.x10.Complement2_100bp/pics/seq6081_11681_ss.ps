%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[128.44895935 706.11322021]
[116.22908020 697.39746094]
[104.81533813 687.64984131]
[94.29459381 676.94458008]
[84.74692535 665.36303711]
[76.24499512 652.99346924]
[68.85350800 639.92999268]
[62.62871552 626.27197266]
[57.61799622 612.12341309]
[53.85948563 597.59191895]
[51.38178635 582.78820801]
[50.20375824 567.82489014]
[50.33436203 552.81579590]
[51.77261353 537.87524414]
[54.50755692 523.11682129]
[58.51838303 508.65301514]
[63.77456284 494.59378052]
[70.23609161 481.04617310]
[77.85379791 468.11325073]
[86.56970215 455.89349365]
[96.31747437 444.47988892]
[107.02291870 433.95932007]
[118.60456085 424.41180420]
[130.97425842 415.91006470]
[144.03787231 408.51873779]
[157.69596863 402.29415894]
[171.84461975 397.28363037]
[168.08831787 382.76156616]
[164.33201599 368.23950195]
[160.57571411 353.71743774]
[156.81941223 339.19537354]
[153.06311035 324.67333984]
[149.30680847 310.15127563]
[145.55050659 295.62921143]
[140.72451782 281.42675781]
[134.85556030 267.62258911]
[128.98658752 253.81840515]
[123.11763000 240.01422119]
[117.24867249 226.21003723]
[115.51742554 241.10980225]
[108.58522034 254.41184998]
[97.36411285 264.36608887]
[83.33042145 269.66284180]
[68.33053589 269.60525513]
[54.33793640 264.20089722]
[43.19359207 254.16078186]
[36.36373901 240.80589294]
[34.74695587 225.89328003]
[38.55595779 211.38494873]
[47.28961182 199.18974304]
[59.79884720 190.91212463]
[74.43786621 187.64115906]
[89.28064728 189.80722046]
[102.37437439 197.12530518]
[111.99750519 208.63467407]
[102.12149048 197.48506165]
[107.28305817 182.52951050]
[104.61726379 167.76829529]
[101.95146942 153.00708008]
[99.28566742 138.24584961]
[96.61987305 123.48464203]
[93.95407867 108.72341919]
[90.41440582 94.14704895]
[86.01341248 79.80719757]
[81.61241150 65.46735382]
[77.21141052 51.12750626]
[74.51231384 65.88266754]
[67.63727570 79.21435547]
[57.18106079 89.96923828]
[44.04823303 97.21691895]
[29.37491417 100.33039093]
[14.43049335 99.04031372]
[0.50781316 93.45829773]
[-11.18867588 84.06723022]
[-19.64711189 71.67953491]
[-24.13575172 57.36688232]
[-24.26628685 42.36745071]
[-20.02742386 27.97884178]
[-11.78586578 15.44581604]
[-0.25459036 5.85260534]
[13.56883144 0.02911833]
[28.48853683 -1.52085555]
[43.21381760 1.33677197]
[56.47079849 8.35478783]
[67.11260986 18.92606354]
[74.21743774 32.13276672]
[73.99411011 17.13442993]
[73.77078247 2.13609290]
[65.82887268 -11.54735279]
[73.37582397 -24.38841057]
[73.15249634 -39.38674927]
[65.21059418 -53.07019424]
[72.75754547 -65.91125488]
[58.09344482 -69.43475342]
[44.76669312 -76.49509430]
[33.61501312 -86.64846039]
[25.33941269 -99.25660706]
[20.46010208 -113.52696228]
[19.28380013 -128.56250000]
[21.88444710 -143.41804504]
[28.09856796 -157.15979004]
[37.53553391 -168.92390442]
[49.60213470 -177.97090149]
[63.53984833 -183.73205566]
[78.47254181 -185.84523010]
[93.46152496 -184.17759705]
[107.56459045 -178.83396912]
[119.89520264 -170.15025330]
[129.67825317 -158.67233276]
[136.29875183 -145.12168884]
[139.34056091 -130.35015869]
[138.61244202 -115.28627014]
[134.16017151 -100.87696075]
[126.26363373 -88.02801514]
[115.41920471 -77.54711914]
[102.30857086 -70.09312439]
[87.75588226 -66.13458252]
[95.68181610 -53.52391434]
[88.15083313 -39.61007690]
[88.37416077 -24.61173820]
[96.30009460 -12.00107479]
[88.76911926 1.91276515]
[88.99244690 16.91110229]
[89.21577454 31.90943909]
[91.55126190 46.72650909]
[95.95225525 61.06635666]
[100.35325623 75.40620422]
[104.75425720 89.74604797]
[110.88195038 76.05476379]
[123.82904816 68.48028564]
[138.76658630 69.84770203]
[150.12324524 79.64700317]
[153.66326904 94.22329712]
[148.06631470 108.13997650]
[135.41990662 116.20647430]
[120.44084167 115.41417694]
[108.71529388 106.05762482]
[111.38109589 120.81884766]
[114.04689026 135.58006287]
[116.71268463 150.34127808]
[119.37847900 165.10249329]
[122.04427338 179.86370850]
[132.11096191 192.06913757]
[126.75872040 205.96887207]
[131.05284119 220.34107971]
[136.92181396 234.14526367]
[142.79077148 247.94943237]
[148.65972900 261.75360107]
[154.52868652 275.55780029]
[157.93376160 260.94937134]
[168.11447144 249.93334961]
[182.40960693 245.38923645]
[197.08247375 248.50488281]
[208.29759216 258.46585083]
[213.12336731 272.66839600]
[210.29837036 287.39996338]
[200.56101990 298.80978394]
[186.45666504 303.91537476]
[171.67211914 301.38211060]
[160.07257080 291.87289429]
[163.82887268 306.39495850]
[167.58517456 320.91702271]
[171.34147644 335.43908691]
[175.09777832 349.96115112]
[178.85408020 364.48321533]
[182.61038208 379.00524902]
[186.36666870 393.52731323]
[201.17030334 391.04901123]
[216.13359070 389.87033081]
[231.14266968 390.00030518]
[246.08331299 391.43792725]
[260.84179688 394.17227173]
[275.30578613 398.18246460]
[289.36526489 403.43807983]
[302.91314697 409.89901733]
[315.84637451 417.51620483]
[328.06646729 426.23156738]
[339.48049927 435.97888184]
[350.00152588 446.68386841]
[359.54953003 458.26510620]
[368.05181885 470.63446045]
[375.44366455 483.69775391]
[381.66885376 497.35559082]
[386.67996216 511.50402832]
[390.43887329 526.03533936]
[392.91699219 540.83905029]
[394.09542847 555.80230713]
[393.96524048 570.81140137]
[392.52743530 585.75201416]
[389.79287720 600.51049805]
[385.78247070 614.97442627]
[380.52667236 629.03381348]
[374.06552124 642.58160400]
[366.44818115 655.51470947]
[357.73263550 667.73474121]
[347.98516846 679.14862061]
[337.28002930 689.66949463]
[325.69863892 699.21728516]
[313.32919312 707.71942139]
[300.26577759 715.11108398]
[286.60784912 721.33605957]
[272.45935059 726.34698486]
[257.92797852 730.10571289]
[243.12426758 732.58361816]
[228.16094971 733.76184082]
[213.15187073 733.63146973]
[198.21127319 732.19342041]
[183.45286560 729.45867920]
[168.98896790 725.44805908]
[154.92967224 720.19207764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 167]
[28 166]
[29 165]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
[55 144]
[57 142]
[58 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 128]
[64 127]
[65 126]
[66 125]
[86 124]
[87 123]
[88 122]
[90 120]
[91 119]
[93 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
