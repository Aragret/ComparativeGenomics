%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[91.47030640 1037.63171387]
[76.50979614 1036.50952148]
[61.61470413 1034.71728516]
[46.81501770 1032.25854492]
[32.14054871 1029.13830566]
[17.62084198 1025.36279297]
[3.28514194 1020.93975830]
[-10.83768082 1015.87792969]
[-24.71918488 1010.18756104]
[-38.33141327 1003.88018799]
[-51.64695740 996.96844482]
[-64.63899994 989.46624756]
[-77.28137207 981.38873291]
[-89.54861450 972.75213623]
[-101.41603088 963.57385254]
[-112.85971069 953.87237549]
[-123.85661316 943.66729736]
[-134.38459778 932.97906494]
[-144.42243958 921.82928467]
[-153.94995117 910.24041748]
[-162.94793701 898.23571777]
[-171.39826965 885.83941650]
[-179.28395081 873.07653809]
[-186.58906555 859.97265625]
[-193.29893494 846.55426025]
[-199.40002441 832.84832764]
[-204.88005066 818.88244629]
[-209.72798157 804.68475342]
[-213.93406677 790.28393555]
[-217.48980713 775.70886230]
[-220.38807678 760.98889160]
[-222.62300110 746.15380859]
[-224.19010925 731.23333740]
[-225.08624268 716.25756836]
[-225.30957031 701.25671387]
[-224.85968018 686.26092529]
[-223.73744202 671.30041504]
[-221.94514465 656.40533447]
[-219.48637390 641.60565186]
[-216.36610413 626.93115234]
[-212.59060669 612.41149902]
[-208.16748047 598.07580566]
[-203.10563660 583.95294189]
[-197.41528320 570.07147217]
[-191.10784912 556.45922852]
[-184.19607544 543.14373779]
[-176.69384766 530.15167236]
[-168.61630249 517.50933838]
[-159.97967529 505.24212646]
[-150.80139160 493.37472534]
[-141.09991455 481.93106079]
[-130.89479065 470.93417358]
[-120.20656586 460.40621948]
[-109.05677032 450.36837769]
[-97.46784973 440.84088135]
[-85.46315765 431.84292603]
[-73.06685638 423.39260864]
[-60.30391312 415.50695801]
[-47.20003510 408.20187378]
[-33.78160858 401.49203491]
[-20.07565689 395.39099121]
[-6.10978365 389.91098022]
[8.08788681 385.06304932]
[22.48876190 380.85702515]
[37.06383896 377.30130005]
[51.78376770 374.40304565]
[66.61890411 372.16815186]
[81.53936768 370.60107422]
[96.51512146 369.70498657]
[96.29179382 354.70663452]
[96.06846619 339.70831299]
[95.84513855 324.70996094]
[95.62181091 309.71163940]
[95.39848328 294.71328735]
[95.17515564 279.71496582]
[80.43803406 277.03329468]
[66.50283813 271.52615356]
[53.90585327 263.40350342]
[43.13222885 252.97590637]
[34.59734344 240.64279175]
[28.63076401 226.87713623]
[25.46352577 212.20721436]
[25.21918678 197.19648743]
[27.90901184 182.42181396]
[33.43146515 168.45138550]
[41.57603836 155.82283020]
[52.03128052 145.02252197]
[64.39670563 136.46685791]
[78.19812775 130.48620605]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[82.28800201 57.32630157]
[91.42668915 42.34460068]
[90.98007965 27.35125160]
[76.75688934 21.98754883]
[65.67239380 11.58551025]
[59.41690063 -2.26863170]
[58.94432449 -17.46221924]
[64.32673645 -31.67834091]
[74.74334717 -42.74914169]
[88.60570526 -48.98640823]
[103.79989624 -49.43899536]
[118.00892639 -44.03789139]
[129.06602478 -33.60672760]
[135.28503418 -19.73617554]
[135.71763611 -4.54139662]
[130.29785156 9.66051579]
[119.85214996 20.70387268]
[105.97342682 26.90464401]
[106.42003632 41.89799500]
[115.00648499 50.41852570]
[115.50126648 62.90607452]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[122.69989777 129.82357788]
[136.67326355 135.39065552]
[149.28794861 143.57435608]
[160.06011963 154.05859375]
[168.57707214 166.43904114]
[174.51303101 180.23886108]
[177.64155579 194.92687988]
[177.84425354 209.93824768]
[175.11520386 224.69595337]
[169.56112671 238.63316345]
[161.39721680 251.21492004]
[150.93884277 261.95864868]
[138.58927917 270.45278931]
[124.82423401 276.37237549]
[110.17349243 279.49163818]
[110.39682007 294.48995972]
[110.62014771 309.48831177]
[110.84347534 324.48663330]
[111.06680298 339.48498535]
[111.29013062 354.48330688]
[111.51345825 369.48165894]
[126.50924683 369.93145752]
[141.46975708 371.05361938]
[156.36485291 372.84582520]
[171.16455078 375.30450439]
[185.83903503 378.42471313]
[200.35874939 382.20010376]
[214.69447327 386.62316895]
[228.81730652 391.68490601]
[242.69883728 397.37521362]
[256.31109619 403.68255615]
[269.62664795 410.59423828]
[282.61874390 418.09640503]
[295.26113892 426.17388916]
[307.52841187 434.81042480]
[319.39587402 443.98864746]
[330.83956909 453.69006348]
[341.83651733 463.89511108]
[352.36453247 474.58328247]
[362.40243530 485.73303223]
[371.92999268 497.32189941]
[380.92800903 509.32653809]
[389.37841797 521.72277832]
[397.26412964 534.48571777]
[404.56930542 547.58953857]
[411.27920532 561.00793457]
[417.38034058 574.71380615]
[422.86044312 588.67968750]
[427.70840454 602.87731934]
[431.91455078 617.27813721]
[435.47036743 631.85321045]
[438.36868286 646.57312012]
[440.60366821 661.40826416]
[442.17083740 676.32873535]
[443.06701660 691.30444336]
[443.29040527 706.30535889]
[442.84054565 721.30114746]
[441.71838379 736.26165771]
[439.92614746 751.15673828]
[437.46743774 765.95642090]
[434.34719849 780.63092041]
[430.57177734 795.15063477]
[426.14868164 809.48632812]
[421.08691406 823.60913086]
[415.39660645 837.49066162]
[409.08923340 851.10290527]
[402.17749023 864.41845703]
[394.67532349 877.41052246]
[386.59780884 890.05291748]
[377.96124268 902.32019043]
[368.78302002 914.18756104]
[359.08157349 925.63128662]
[348.87649536 936.62823486]
[338.18829346 947.15618896]
[327.03854370 957.19409180]
[315.44967651 966.72161865]
[303.44500732 975.71960449]
[291.04873657 984.16998291]
[278.28582764 992.05566406]
[265.18197632 999.36083984]
[251.76356506 1006.07073975]
[238.05764771 1012.17181396]
[224.09179688 1017.65191650]
[209.89413452 1022.49987793]
[195.49328613 1026.70593262]
[180.91821289 1030.26171875]
[166.19830322 1033.16003418]
[151.36317444 1035.39501953]
[136.44270325 1036.96215820]
[121.46696472 1037.85827637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 141]
[70 140]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[90 120]
[91 119]
[93 117]
[94 116]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
