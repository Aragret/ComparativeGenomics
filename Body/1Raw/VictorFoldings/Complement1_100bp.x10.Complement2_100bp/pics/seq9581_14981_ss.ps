%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[115.96427917 699.54919434]
[101.12858582 701.90661621]
[86.11211395 702.30731201]
[71.17181396 700.74456787]
[56.56332397 697.24499512]
[42.53662109 691.86846924]
[29.33172035 684.70709229]
[17.17457390 675.88330078]
[6.27320576 665.54815674]
[-3.18584585 653.87847900]
[-11.04072475 641.07397461]
[-17.15702248 627.35369873]
[-21.43008423 612.95245361]
[-23.78678894 598.11663818]
[-24.18681145 583.10015869]
[-22.62330627 568.15991211]
[-19.12302971 553.55163574]
[-13.74587345 539.52514648]
[-6.58384848 526.32061768]
[2.24049330 514.16387939]
[12.57615662 503.26300049]
[24.24628448 493.80450439]
[37.05118561 485.95022583]
[50.77174759 479.83459473]
[65.17320251 475.56222534]
[80.00910950 473.20620728]
[95.02561951 472.80691528]
[96.58614349 457.88830566]
[98.14666748 442.96969604]
[99.70719147 428.05108643]
[101.26771545 413.13247681]
[102.82823944 398.21386719]
[104.38876343 383.29528809]
[98.01752472 369.83212280]
[107.14853668 356.91177368]
[108.70906067 341.99316406]
[109.71332550 327.02682495]
[110.15992737 312.03347778]
[110.60653687 297.04013062]
[111.05313873 282.04678345]
[111.49974823 267.05343628]
[103.43566895 258.03692627]
[103.68503571 245.54206848]
[112.65947723 236.27803040]
[111.87815094 221.29840088]
[109.65303802 206.46435547]
[107.42791748 191.63031006]
[105.09243011 176.81324768]
[102.64670563 162.01397705]
[87.73188019 160.84596252]
[73.52974701 156.14324951]
[60.86534500 148.17900085]
[50.47438049 137.41592407]
[42.96049500 124.47924042]
[38.76019669 110.12049103]
[38.11748123 95.17381287]
[41.06969452 80.50750732]
[47.44533539 66.97357178]
[56.87401581 55.35823059]
[68.80800629 46.33625412]
[82.55402374 40.43175507]
[80.10829926 25.63248253]
[77.66257477 10.83321190]
[75.21684265 -3.96605921]
[65.20513916 -12.09801006]
[63.47276306 -24.47470665]
[70.40826416 -34.38558197]
[68.18314362 -49.21962357]
[65.95803070 -64.05366516]
[63.73291016 -78.88771057]
[61.50779343 -93.72175598]
[59.28267670 -108.55580139]
[49.58384705 -121.05552673]
[55.34756470 -134.78974915]
[45.64873505 -147.28947449]
[51.41245270 -161.02369690]
[41.52258301 -165.02548218]
[34.24158478 -172.71275330]
[30.83456421 -182.65235901]
[31.85288048 -193.02906799]
[37.04608536 -201.97703552]
[45.41913223 -207.91529846]
[43.85860825 -222.83390808]
[42.29808426 -237.75250244]
[40.73756409 -252.67111206]
[39.17704010 -267.58972168]
[37.61651611 -282.50833130]
[36.05599213 -297.42694092]
[34.49547195 -312.34552002]
[32.93494797 -327.26412964]
[23.80393410 -340.18447876]
[30.17516899 -353.64764404]
[28.61464500 -368.56625366]
[13.85459709 -371.94555664]
[0.99286282 -379.93643188]
[-8.57541275 -391.67214966]
[-13.81233311 -405.87966919]
[-14.14983845 -421.01785278]
[-9.55131817 -435.44464111]
[-0.51558441 -447.59512329]
[11.97723293 -456.15130615]
[26.57200813 -460.18508911]
[41.68560791 -459.25888062]
[55.67861938 -453.47317505]
[67.03318787 -443.45556641]
[74.51766205 -430.29269409]
[77.32016754 -415.41235352]
[75.13671875 -400.42864990]
[68.20416260 -386.96691895]
[57.27447891 -376.48736572]
[43.53324890 -370.12677002]
[45.09377289 -355.20816040]
[54.11316681 -343.35488892]
[47.85355377 -328.82464600]
[49.41407394 -313.90606689]
[50.97459793 -298.98745728]
[52.53512192 -284.06884766]
[54.09564590 -269.15023804]
[55.65616608 -254.23164368]
[57.21669006 -239.31303406]
[58.77721405 -224.39442444]
[60.33773804 -209.47583008]
[76.33079529 -198.35214233]
[79.02846527 -178.75045776]
[66.24649811 -163.24882507]
[75.78617096 -151.81011963]
[70.18161011 -137.01486206]
[79.72128296 -125.57616425]
[74.11672211 -110.78091431]
[76.34183502 -95.94686890]
[78.56695557 -81.11283112]
[80.79206848 -66.27878571]
[83.01718903 -51.44474030]
[85.24230194 -36.61069870]
[96.89805603 -23.49161148]
[90.01611328 -6.41178656]
[92.46184540 8.38748455]
[94.90756989 23.18675423]
[97.35329437 37.98602676]
[112.26811981 39.15403748]
[126.47025299 43.85675812]
[139.13465881 51.82099152]
[149.52561951 62.58407974]
[157.03950500 75.52075958]
[161.23980713 89.87950897]
[161.88252258 104.82618713]
[158.93029785 119.49249268]
[152.55467224 133.02642822]
[143.12597656 144.64176941]
[131.19198608 153.66374207]
[117.44597626 159.56825256]
[119.89170074 174.36752319]
[124.37845612 182.32408142]
[122.26196289 189.40519714]
[124.48707581 204.23924255]
[126.71219635 219.07328796]
[132.58178711 205.26937866]
[143.50279236 194.98678589]
[157.63482666 189.95829773]
[172.59638977 191.03132629]
[185.86621094 198.02502441]
[195.20808411 209.76084900]
[199.04774475 224.26109314]
[196.73812866 239.08221436]
[188.66845703 251.72659302]
[176.19860840 260.06344604]
[161.42997742 262.68783569]
[146.85131836 259.15753174]
[134.91941833 250.06744385]
[127.64451599 236.94783020]
[136.50730896 253.08883667]
[126.49309540 267.50003052]
[126.04649353 282.49337769]
[125.59988403 297.48672485]
[125.15328217 312.48007202]
[124.70667267 327.47344971]
[137.24790955 319.24438477]
[151.54783630 323.77340698]
[157.06507874 337.72189331]
[149.73252869 350.80752563]
[134.95547485 353.38406372]
[123.62767029 343.55371094]
[122.06714630 358.47229004]
[128.32676697 373.00253296]
[119.30736542 384.85580444]
[117.74684143 399.77441406]
[116.18631744 414.69299316]
[114.62579346 429.61160278]
[113.06527710 444.53021240]
[111.50475311 459.44882202]
[109.94422913 474.36743164]
[124.55304718 477.86563110]
[138.58026123 483.24078369]
[151.78584290 490.40090942]
[163.94383240 499.22351074]
[174.84619141 509.55761719]
[184.30635071 521.22637939]
[192.16244507 534.03015137]
[198.28004456 547.74987793]
[202.55447388 562.15069580]
[204.91259766 576.98626709]
[205.31405640 592.00274658]
[203.75196838 606.94311523]
[200.25308228 621.55175781]
[194.87725830 635.57873535]
[187.71649170 648.78399658]
[178.89331055 660.94152832]
[168.55868530 671.84338379]
[156.88945007 681.30297852]
[144.08529663 689.15850830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 191]
[28 190]
[29 189]
[30 188]
[31 187]
[32 186]
[33 185]
[35 183]
[36 182]
[37 176]
[38 175]
[39 174]
[40 173]
[41 172]
[44 170]
[45 156]
[46 155]
[47 154]
[48 152]
[49 151]
[61 139]
[62 138]
[63 137]
[64 136]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[74 127]
[76 125]
[82 122]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
[92 112]
[93 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
