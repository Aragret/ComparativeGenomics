%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[158.22499084 712.68127441]
[144.32672119 707.03045654]
[130.72741699 700.69384766]
[117.46085358 693.68725586]
[104.56003571 686.02807617]
[92.05702972 677.73535156]
[79.98292542 668.82977295]
[68.36774445 659.33337402]
[57.24035645 649.26977539]
[46.62842941 638.66406250]
[36.55834579 627.54260254]
[27.05513763 615.93298340]
[18.14243698 603.86413574]
[9.84240150 591.36596680]
[2.17566419 578.46966553]
[-4.83871317 565.20721436]
[-11.18329144 551.61163330]
[-16.84229660 537.71667480]
[-21.80166054 523.55688477]
[-26.04905319 509.16757202]
[-29.57391357 494.58438110]
[-32.36748123 479.84359741]
[-34.42280579 464.98193359]
[-35.73478317 450.03628540]
[-36.30014801 435.04379272]
[-36.11749268 420.04177856]
[-35.18727875 405.06750488]
[-33.51181030 390.15823364]
[-31.09526062 375.35098267]
[-27.94363213 360.68261719]
[-24.06476212 346.18957520]
[-19.46829414 331.90789795]
[-14.16565514 317.87307739]
[-8.17002964 304.12002563]
[-1.49632239 290.68292236]
[5.83887386 277.59518433]
[13.81732273 264.88934326]
[22.41918945 252.59700012]
[31.62308502 240.74868774]
[41.40613174 229.37390137]
[51.74400330 218.50088501]
[62.61100006 208.15669250]
[73.98011017 198.36703491]
[85.82305145 189.15625000]
[98.11039734 180.54724121]
[110.81159973 172.56140137]
[123.89506531 165.21859741]
[117.21487427 151.78822327]
[110.53467560 138.35784912]
[103.85448456 124.92746735]
[97.17428589 111.49709320]
[96.10646057 126.45903778]
[89.46304321 139.90763855]
[78.22954559 149.84788513]
[64.07239532 154.80520630]
[49.09170914 154.04418945]
[35.50979233 147.67774963]
[25.34144211 136.65029907]
[20.09506798 122.59770203]
[20.54894257 107.60457611]
[26.63573265 93.89505005]
[37.45249939 83.50286865]
[51.39464569 77.96963501]
[66.39392853 78.11618042]
[80.22529602 83.92076874]
[90.83588409 94.52072906]
[87.07958984 79.99866486]
[83.32328796 65.47660828]
[79.56698608 50.95455170]
[75.81068420 36.43249130]
[72.05438232 21.91043091]
[68.29808044 7.38837194]
[53.40549088 9.33524704]
[38.38652802 9.43719292]
[23.46887970 7.69266605]
[8.87869263 4.12811184]
[-5.16285038 -1.20243168]
[-18.44288254 -8.21815491]
[-30.76008034 -16.81270218]
[-41.92772293 -26.85577965]
[-51.77650452 -38.19514084]
[-60.15712738 -50.65887833]
[-66.94253540 -64.05805206]
[-72.02987671 -78.18952942]
[-75.34201050 -92.83908081]
[-76.82874298 -107.78462219]
[-76.46752167 -122.79958344]
[-74.26383209 -137.65634155]
[-70.25107574 -152.12968445]
[-64.49008942 -166.00018311]
[-57.06820679 -179.05755615]
[-48.09794235 -191.10388184]
[-37.71528244 -201.95652771]
[-26.07762146 -211.45097351]
[-13.36138821 -219.44329834]
[0.24064361 -225.81230164]
[14.52227020 -230.46147156]
[29.26698685 -233.32031250]
[44.25126648 -234.34547424]
[59.24795151 -233.52143860]
[74.02970123 -230.86068726]
[88.37241364 -226.40354919]
[102.05867004 -220.21759033]
[114.88098907 -212.39660645]
[126.64498138 -203.05915833]
[137.17231750 -192.34678650]
[146.30339050 -180.42189026]
[153.89979553 -167.46525574]
[159.84635925 -153.67330933]
[164.05293274 -139.25511169]
[166.45574951 -124.42925262]
[167.01838684 -109.42048645]
[165.73229980 -94.45633698]
[162.61700439 -79.76367188]
[157.71972656 -65.56520844]
[151.11470032 -52.07621002]
[142.90205383 -39.50115204]
[133.20628357 -28.03067589]
[122.17439270 -17.83867073]
[109.97360992 -9.07964420]
[96.78890228 -1.88638091]
[82.82014465 3.63207150]
[86.57644653 18.15413094]
[90.33274078 32.67618942]
[94.08904266 47.19824982]
[97.84534454 61.72031021]
[101.60164642 76.24237061]
[105.35794830 90.76442719]
[110.60466766 104.81689453]
[117.28485870 118.24727631]
[123.96504974 131.67764282]
[130.64524841 145.10803223]
[137.32543945 158.53840637]
[151.07495117 152.53463745]
[165.10661316 147.22369385]
[179.38557434 142.61877441]
[193.87632751 138.73132324]
[208.54283142 135.57101440]
[223.34863281 133.14569092]
[238.25692749 131.46141052]
[253.23063660 130.52232361]
[268.23254395 130.33079529]
[283.22534180 130.88728333]
[298.17178345 132.19041443]
[313.03466797 134.23693848]
[327.77709961 137.02178955]
[342.36236572 140.53800964]
[356.75424194 144.77688599]
[370.91693115 149.72787476]
[384.81521606 155.37864685]
[398.41458130 161.71517944]
[411.68115234 168.72171021]
[424.58203125 176.38081360]
[437.08505249 184.67344666]
[449.15921021 193.57899475]
[460.77444458 203.07533264]
[471.90188599 213.13882446]
[482.51388550 223.74447632]
[492.58401489 234.86590576]
[502.08728027 246.47546387]
[511.00003052 258.54431152]
[519.30017090 271.04238892]
[526.96697998 283.93865967]
[533.98138428 297.20108032]
[540.32604980 310.79666138]
[545.98510742 324.69155884]
[550.94458008 338.85128784]
[555.19201660 353.24063110]
[558.71697998 367.82379150]
[561.51062012 382.56454468]
[563.56604004 397.42620850]
[564.87805176 412.37185669]
[565.44348145 427.36434937]
[565.26092529 442.36636353]
[564.33081055 457.34063721]
[562.65539551 472.24993896]
[560.23895264 487.05718994]
[557.08740234 501.72555542]
[553.20855713 516.21862793]
[548.61218262 530.50036621]
[543.30963135 544.53515625]
[537.31408691 558.28826904]
[530.64044189 571.72540283]
[523.30529785 584.81317139]
[515.32690430 597.51904297]
[506.72512817 609.81146240]
[497.52130127 621.65979004]
[487.73831177 633.03466797]
[477.40048218 643.90771484]
[466.53353882 654.25195312]
[455.16448975 664.04168701]
[443.32159424 673.25250244]
[431.03427124 681.86157227]
[418.33312988 689.84747314]
[405.24969482 697.19036865]
[391.81652832 703.87194824]
[378.06698608 709.87567139]
[364.03527832 715.18652344]
[349.75631714 719.79138184]
[335.26553345 723.67877197]
[320.59899902 726.83898926]
[305.79321289 729.26422119]
[290.88488770 730.94842529]
[275.91119385 731.88745117]
[260.90927124 732.07891846]
[245.91645813 731.52233887]
[230.97003174 730.21911621]
[216.10714722 728.17248535]
[201.36476135 725.38757324]
[186.77951050 721.87127686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 133]
[48 132]
[49 131]
[50 130]
[51 129]
[66 128]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[72 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
