%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[211.40600586 512.11767578]
[211.07449341 497.11016846]
[212.14976501 482.13760376]
[214.62237549 467.33148193]
[218.47061157 452.82199097]
[223.66064453 438.73660278]
[230.14685059 425.19912720]
[237.87225342 412.32852173]
[246.76895142 400.23788452]
[256.75872803 389.03347778]
[267.75384521 378.81378174]
[258.61505127 366.91915894]
[244.72541809 361.54071045]
[242.45310974 345.88354492]
[233.31430054 333.98892212]
[224.17550659 322.09426880]
[215.03669739 310.19964600]
[205.89788818 298.30502319]
[204.94622803 313.27478027]
[195.46640015 324.89944458]
[180.99414062 328.84329224]
[166.92724609 323.63534546]
[158.51234436 311.21804810]
[158.88795471 296.22274780]
[167.91400146 284.24230957]
[182.22398376 279.74517822]
[196.48158264 284.40930176]
[188.82098389 271.51296997]
[181.16038513 258.61666870]
[173.49978638 245.72033691]
[165.83918762 232.82400513]
[152.68710327 225.83316040]
[152.29145813 210.01689148]
[144.63085938 197.12057495]
[134.36862183 197.36021423]
[124.85855103 193.28663635]
[117.84307098 185.57327271]
[114.63764191 175.56683350]
[115.88447571 165.05242920]
[121.42516327 155.93516541]
[114.34805298 142.70964050]
[107.27095032 129.48411560]
[100.19384766 116.25858307]
[89.27091217 112.21743774]
[83.85260773 101.90806580]
[86.71881104 90.61974335]
[79.83940125 77.29031372]
[72.95999146 63.96088791]
[73.08397675 78.96037292]
[69.20989990 93.45146179]
[61.61744308 106.38802338]
[50.85470581 116.83615112]
[37.69865799 124.04159546]
[23.09904861 127.48419189]
[8.10983658 126.91539764]
[-6.18689489 122.37629700]
[-18.75905228 114.19455719]
[-28.69904137 102.96083069]
[-35.28928375 89.48609161]
[-38.05402756 74.74308014]
[-36.79368210 59.79612732]
[-31.59923172 45.72425079]
[-22.84566879 33.54331970]
[-11.16491985 24.13267899]
[2.59977007 18.17169762]
[17.45471764 16.09070015]
[32.32752991 18.03991699]
[46.14452744 23.87863159]
[57.90824890 33.18534470]
[66.77001190 45.28921509]
[64.32428741 30.48994255]
[61.87855911 15.69067287]
[59.43283081 0.89140159]
[56.98710251 -13.90786934]
[54.32130814 -28.66908646]
[51.32653427 -43.36709213]
[48.22242355 -58.04239273]
[45.11831284 -72.71769714]
[42.01420212 -87.39299774]
[31.64937592 -95.06979370]
[29.36607552 -107.35678864]
[35.85211563 -117.56746674]
[32.96684265 -132.28735352]
[22.71745872 -140.11761475]
[20.61734772 -152.43724060]
[27.25468826 -162.55021667]
[24.58889198 -177.31143188]
[9.54300499 -178.25201416]
[-4.84037256 -182.76664734]
[-17.72500801 -190.59286499]
[-28.36180496 -201.27565002]
[-36.13235474 -214.19392395]
[-40.58488846 -228.59664917]
[-41.46054077 -243.64645386]
[-38.70840454 -258.46838379]
[-32.48847961 -272.20068359]
[-23.16238976 -284.04498291]
[-11.27234077 -293.31265259]
[2.49039698 -299.46493530]
[17.32567596 -302.14410400]
[32.37099075 -301.19442749]
[46.75162888 -296.67105103]
[59.63151550 -288.83703613]
[70.26183319 -278.14779663]
[78.02455139 -265.22482300]
[82.46835327 -250.81939697]
[83.33487701 -235.76905823]
[80.57375336 -220.94882202]
[74.34551239 -207.22029114]
[65.01223755 -195.38165283]
[53.11657333 -186.12117004]
[39.35010910 -179.97723389]
[42.01590729 -165.21601868]
[54.05709076 -152.44978333]
[47.68673325 -135.17262268]
[50.57200623 -120.45273590]
[62.80192566 -107.86719513]
[56.68950653 -90.49710846]
[59.79361725 -75.82180786]
[62.89772415 -61.14650345]
[66.00183868 -46.47119904]
[70.46147919 -40.57769775]
[69.04119873 -31.55435944]
[72.43466187 -28.19378662]
[73.75305939 -22.66578102]
[71.78637695 -16.35359573]
[74.23210144 -1.55432582]
[76.67782593 13.24494457]
[79.12355804 28.04421616]
[81.56928253 42.84348679]
[86.28942108 57.08147430]
[93.16883087 70.41090393]
[100.04824066 83.74033356]
[114.39295197 92.43547821]
[113.41937256 109.18147278]
[120.49647522 122.40700531]
[127.57358551 135.63253784]
[134.65069580 148.85806274]
[154.16166687 153.65403748]
[163.70788574 170.98530579]
[157.52717590 189.45997620]
[165.18777466 202.35629272]
[178.88780212 210.26957703]
[178.73551941 225.16340637]
[186.39611816 238.05973816]
[194.05671692 250.95605469]
[201.71731567 263.85238647]
[209.37791443 276.74871826]
[217.79252625 289.16619873]
[226.93133545 301.06085205]
[236.07012939 312.95547485]
[245.20893860 324.85009766]
[254.34773254 336.74475098]
[268.89102173 342.97396851]
[270.50967407 357.78036499]
[279.64846802 369.67498779]
[292.35577393 361.68380737]
[305.75555420 354.91769409]
[319.73004150 349.43609619]
[334.15646362 345.28720093]
[348.90798950 342.50744629]
[363.85498047 341.12127686]
[378.86611938 341.14086914]
[393.80944824 342.56607056]
[408.55368042 345.38433838]
[422.96917725 349.57089233]
[436.92932129 355.08898926]
[450.31137085 361.89007568]
[462.99777222 369.91439819]
[474.87701416 379.09146118]
[485.84466553 389.34060669]
[495.80438232 400.57174683]
[504.66860962 412.68618774]
[512.35949707 425.57745361]
[518.80938721 439.13229370]
[523.96160889 453.23153687]
[527.77093506 467.75131226]
[530.20385742 482.56399536]
[531.23895264 497.53939819]
[530.86718750 512.54595947]
[529.09185791 527.45172119]
[525.92846680 542.12579346]
[521.40484619 556.43908691]
[515.56079102 570.26593018]
[508.44760132 583.48474121]
[500.12783813 595.97943115]
[490.67462158 607.64007568]
[480.17098999 618.36425781]
[468.70928955 628.05773926]
[456.39022827 636.63531494]
[443.32208252 644.02166748]
[429.61965942 650.15179443]
[415.40341187 654.97180176]
[400.79827881 658.43945312]
[385.93258667 660.52416992]
[370.93701172 661.20770264]
[355.94332886 660.48400879]
[341.08331299 658.35943604]
[326.48751831 654.85260010]
[312.28424072 649.99444580]
[298.59832764 643.82763672]
[285.55001831 636.40631104]
[273.25399780 627.79571533]
[261.81829834 618.07153320]
[251.34347534 607.31921387]
[241.92155457 595.63323975]
[233.63533020 583.11633301]
[226.55763245 569.87847900]
[220.75067139 556.03601074]
[216.26545715 541.71063232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 156]
[12 155]
[14 153]
[15 152]
[16 151]
[17 150]
[18 149]
[27 148]
[28 147]
[29 146]
[30 145]
[31 144]
[33 142]
[34 141]
[40 138]
[41 137]
[42 136]
[43 135]
[46 133]
[47 132]
[48 131]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[75 123]
[76 121]
[77 120]
[78 119]
[79 118]
[82 116]
[83 115]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
