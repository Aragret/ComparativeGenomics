%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[19.79816818 767.46289062]
[5.01766872 770.03918457]
[-9.87585545 771.85113525]
[-24.84290886 772.89398193]
[-39.84380341 773.16497803]
[-54.83875656 772.66339111]
[-69.78800964 771.39050293]
[-84.65190887 769.34979248]
[-99.39105225 766.54656982]
[-113.96634674 762.98834229]
[-128.33914185 758.68444824]
[-142.47131348 753.64642334]
[-156.32539368 747.88757324]
[-169.86465454 741.42315674]
[-183.05317688 734.27032471]
[-195.85600281 726.44799805]
[-208.23916626 717.97705078]
[-220.16983032 708.87982178]
[-231.61634827 699.18048096]
[-242.54840088 688.90472412]
[-252.93696594 678.07989502]
[-262.75448608 666.73455811]
[-271.97497559 654.89886475]
[-280.57394409 642.60424805]
[-288.52859497 629.88323975]
[-295.81784058 616.76959229]
[-302.42233276 603.29815674]
[-308.32458496 589.50451660]
[-313.50891113 575.42535400]
[-317.96160889 561.09796143]
[-321.67083740 546.56036377]
[-324.62677002 531.85113525]
[-326.82156372 517.00915527]
[-328.24942017 502.07391357]
[-328.90649414 487.08499146]
[-328.79110718 472.08209229]
[-327.90356445 457.10501099]
[-326.24615479 442.19351196]
[-323.82333374 427.38708496]
[-320.64151001 412.72500610]
[-316.70910645 398.24618530]
[-312.03659058 383.98898315]
[-306.63629150 369.99121094]
[-300.52258301 356.29003906]
[-293.71166992 342.92172241]
[-286.22158813 329.92175293]
[-278.07220459 317.32461548]
[-269.28515625 305.16369629]
[-259.88372803 293.47125244]
[-249.89283752 282.27828979]
[-239.33900452 271.61447144]
[-228.25019836 261.50811768]
[-216.65583801 251.98597717]
[-204.58666992 243.07333374]
[-192.07467651 234.79380798]
[-179.15306091 227.16937256]
[-165.85607910 220.22024536]
[-152.21899414 213.96482849]
[-138.27795410 208.41973877]
[-124.06996155 203.59967041]
[-109.63267517 199.51739502]
[-95.00437927 196.18374634]
[-80.22386169 193.60757446]
[-65.33032990 191.79570007]
[-50.36326981 190.75292969]
[-35.36237335 190.48202515]
[-20.36742401 190.98371887]
[-5.41817999 192.25665283]
[9.44571209 194.29748535]
[24.18483734 197.10078430]
[38.76010895 200.65911865]
[53.13287354 204.96304321]
[58.16979218 190.83401489]
[63.20670700 176.70498657]
[68.24362183 162.57595825]
[73.28054047 148.44692993]
[72.07925415 143.82460022]
[73.76894379 138.39854431]
[78.68348694 133.97601318]
[84.13884735 120.00321960]
[89.59420013 106.03041840]
[94.84091949 91.97795105]
[92.18690491 76.38093567]
[103.74868774 66.99081421]
[108.78560638 52.86178207]
[94.32115936 56.83416367]
[82.10768890 48.12606049]
[81.14850616 33.15675735]
[92.15068817 22.96107292]
[107.00383759 25.05488396]
[114.75859070 37.89306641]
[120.83242798 24.17780113]
[126.90626526 10.46253395]
[132.98010254 -3.25273275]
[120.08045197 -10.94405651]
[108.20196533 -20.13421631]
[97.51787567 -30.68919373]
[88.18397522 -42.45506668]
[80.33639526 -55.26025009]
[74.08955383 -68.91800690]
[69.53456879 -83.22917175]
[66.73785400 -97.98504639]
[65.74020386 -112.97044373]
[66.55615234 -127.96682739]
[69.17381287 -142.75550842]
[73.55500793 -157.12083435]
[79.63584900 -170.85330200]
[87.32765198 -183.75267029]
[96.51825714 -195.63079834]
[107.07363892 -206.31449890]
[118.83985901 -215.64796448]
[131.64533997 -223.49507141]
[145.30332947 -229.74139404]
[159.61466980 -234.29583740]
[174.37063599 -237.09199524]
[189.35606384 -238.08909607]
[204.35243225 -237.27258301]
[219.14100647 -234.65437317]
[233.50617981 -230.27264404]
[247.23841858 -224.19128418]
[260.13748169 -216.49899292]
[272.01528931 -207.30795288]
[282.69857788 -196.75216675]
[292.03161621 -184.98561096]
[299.87823486 -172.17984009]
[306.12405396 -158.52160645]
[310.67794800 -144.21009827]
[313.47357178 -129.45402527]
[314.47009277 -114.46855164]
[313.65301514 -99.47222137]
[311.03427124 -84.68373871]
[306.65200806 -70.31874084]
[300.57012939 -56.58672333]
[292.87734985 -43.68793869]
[283.68585205 -31.81048965]
[273.12969971 -21.12758255]
[261.36276245 -11.79500484]
[248.55670166 -3.94885445]
[234.89825439 2.29644871]
[220.58657837 6.84982967]
[205.83038330 9.64488697]
[190.84487915 10.64086056]
[175.84858704 9.82322598]
[161.06019592 7.20390749]
[146.69535828 2.82110119]
[140.62152100 16.53636742]
[134.54769897 30.25163460]
[128.47386169 43.96689987]
[122.91463470 57.89870071]
[117.87771606 72.02773285]
[120.89200592 86.61413574]
[108.96994781 97.01486206]
[110.08689117 102.13993835]
[108.25283813 107.52599335]
[103.56700134 111.48577881]
[98.11164093 125.45857239]
[92.65628815 139.43136597]
[87.40956879 153.48384094]
[82.37265015 167.61286926]
[77.33573914 181.74189758]
[72.29882050 195.87092590]
[67.26190186 209.99996948]
[81.11602020 215.75874329]
[94.65531921 222.22309875]
[107.84387970 229.37585449]
[120.64674377 237.19805908]
[133.02995300 245.66897583]
[144.96067810 254.76614380]
[156.40725708 264.46542358]
[167.33935547 274.74108887]
[177.72798157 285.56588745]
[187.54559326 296.91116333]
[196.76612854 308.74676514]
[205.36517334 321.04135132]
[213.31990051 333.76232910]
[220.60920715 346.87591553]
[227.21379089 360.34735107]
[233.11611938 374.14093018]
[238.30053711 388.22006226]
[242.75331116 402.54742432]
[246.46261597 417.08499146]
[249.41864014 431.79425049]
[251.61352539 446.63616943]
[253.04144287 461.57141113]
[253.69862366 476.56036377]
[253.58332825 491.56326294]
[252.69584656 506.54031372]
[251.03854370 521.45184326]
[248.61579895 536.25830078]
[245.43406677 550.92034912]
[241.50175476 565.39923096]
[236.82929993 579.65643311]
[231.42909241 593.65423584]
[225.31546021 607.35546875]
[218.50460815 620.72381592]
[211.01460266 633.72381592]
[202.86531067 646.32098389]
[194.07832336 658.48199463]
[184.67695618 670.17449951]
[174.68614197 681.36749268]
[164.13237000 692.03137207]
[153.04362488 702.13781738]
[141.44931030 711.65997314]
[129.38018799 720.57269287]
[116.86824036 728.85229492]
[103.94667053 736.47680664]
[90.64972687 743.42602539]
[77.01267242 749.68151855]
[63.07167816 755.22668457]
[48.86371231 760.04681396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 162]
[73 161]
[74 160]
[75 159]
[76 158]
[79 157]
[80 156]
[81 155]
[82 152]
[84 150]
[85 149]
[91 148]
[92 147]
[93 146]
[94 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
