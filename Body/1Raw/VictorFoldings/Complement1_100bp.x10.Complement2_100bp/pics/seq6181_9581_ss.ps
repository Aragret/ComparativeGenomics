%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[93.43100739 802.56311035]
[78.47009277 801.41650391]
[63.60814285 799.35107422]
[48.90152359 796.37469482]
[34.40603256 792.49853516]
[20.17665482 787.73742676]
[6.26736593 782.10931396]
[-7.26907063 775.63562012]
[-20.38130569 768.34094238]
[-33.01959991 760.25286865]
[-45.13601303 751.40203857]
[-56.68458176 741.82220459]
[-67.62149811 731.54949951]
[-77.90527344 720.62304688]
[-87.49690247 709.08422852]
[-96.35999298 696.97680664]
[-104.46092987 684.34674072]
[-111.76897430 671.24194336]
[-118.25641632 657.71209717]
[-123.89864349 643.80853271]
[-128.67425537 629.58404541]
[-132.56512451 615.09246826]
[-135.55650330 600.38891602]
[-137.63702393 585.52905273]
[-138.79882812 570.56933594]
[-139.03749084 555.56640625]
[-138.35209656 540.57727051]
[-136.74525452 525.65881348]
[-134.22306824 510.86752319]
[-130.79508972 496.25955200]
[-126.47434235 481.89031982]
[-121.27719879 467.81433105]
[-115.22337341 454.08499146]
[-108.33584595 440.75436401]
[-100.64073181 427.87301636]
[-92.16722107 415.48983765]
[-82.94745636 403.65179443]
[-73.01641846 392.40374756]
[-62.41177750 381.78842163]
[-51.17375946 371.84606934]
[-39.34498978 362.61437988]
[-26.97034454 354.12841797]
[-14.09676456 346.42031860]
[-0.77308339 339.51937866]
[12.95015717 333.45172119]
[27.02090073 328.24041748]
[41.38576889 323.90518188]
[55.99027634 320.46249390]
[70.77901459 317.92541504]
[85.69589233 316.30355835]
[100.68431854 315.60305786]
[100.90764618 300.60473633]
[101.13097382 285.60638428]
[101.35430145 270.60806274]
[101.57762909 255.60971069]
[101.80095673 240.61137390]
[102.02428436 225.61303711]
[102.24761200 210.61470032]
[94.70066071 197.77365112]
[102.64257050 184.09019470]
[101.74975586 169.11679077]
[99.74573517 154.25126648]
[90.37742615 142.67179871]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[84.92479706 44.31132507]
[77.77288818 57.49655151]
[65.03849030 65.42341614]
[50.05035400 66.01985931]
[36.72633743 59.12997437]
[28.54930687 46.55475235]
[27.65671730 31.58133316]
[34.28189087 18.12373161]
[46.69302368 9.69972992]
[61.64587402 8.51134396]
[75.23180389 14.86921406]
[83.89916992 27.11057663]
[76.36819458 13.19673824]
[84.29412842 0.58607346]
[84.51745605 -14.41226387]
[84.74078369 -29.41060066]
[84.96411133 -44.40893936]
[76.55699158 -54.19071579]
[77.05177307 -66.67826843]
[85.63822174 -75.19879913]
[86.08483124 -90.19214630]
[86.53143311 -105.18549347]
[86.97804260 -120.17884827]
[87.42464447 -135.17219543]
[87.42464447 -150.17219543]
[86.97804260 -165.16554260]
[86.53143311 -180.15888977]
[72.13141632 -184.89337158]
[60.22103119 -194.26986694]
[52.23852158 -207.15611267]
[49.14780807 -221.99603271]
[51.32211304 -236.99763489]
[58.49887466 -250.34941101]
[69.81147003 -260.43905640]
[83.89383698 -266.04821777]
[99.04547882 -266.49954224]
[113.43674469 -261.73852539]
[125.32982635 -252.34010315]
[133.28857422 -239.43916321]
[136.35194397 -224.59358215]
[134.14999390 -209.59600830]
[126.94863892 -196.25747681]
[115.61746979 -186.18869019]
[101.52478027 -180.60549927]
[101.97138977 -165.61215210]
[102.41799164 -150.61880493]
[104.36347961 -148.60057068]
[105.62673187 -145.69010925]
[105.86392212 -142.14340210]
[104.83013153 -138.33607483]
[102.41799164 -134.72558594]
[101.97138977 -119.73223877]
[101.52478027 -104.73889160]
[101.07817841 -89.74553680]
[100.63156891 -74.75218964]
[109.77025604 -59.77048874]
[99.96244812 -44.18561172]
[99.73912048 -29.18727303]
[99.51579285 -14.18893623]
[99.29246521 0.80940121]
[106.83941650 13.65045929]
[98.89750671 27.33390427]
[99.79032135 42.30731201]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[120.57882690 138.60037231]
[114.61126709 152.24725342]
[116.61528015 167.11277771]
[123.76718903 153.92755127]
[136.50158691 146.00068665]
[151.48971558 145.40423584]
[164.81373596 152.29412842]
[172.99076843 164.86935425]
[173.88336182 179.84277344]
[167.25819397 193.30036926]
[154.84706116 201.72438049]
[139.89421082 202.91276550]
[126.30827332 196.55488586]
[117.64090729 184.31352234]
[125.17188263 198.22737122]
[117.24594879 210.83802795]
[117.02262115 225.83636475]
[116.79929352 240.83470154]
[116.57596588 255.83303833]
[116.35263824 270.83139038]
[116.12931061 285.82971191]
[115.90598297 300.82806396]
[115.68265533 315.82638550]
[130.64358521 316.97283936]
[145.50555420 319.03811646]
[160.21220398 322.01437378]
[174.70773315 325.89038086]
[188.93716431 330.65136719]
[202.84649658 336.27929688]
[216.38301086 342.75286865]
[229.49531555 350.04745483]
[242.13368225 358.13540649]
[254.25018311 366.98605347]
[265.79885864 376.56582642]
[276.73587036 386.83837891]
[287.01974487 397.76473999]
[296.61148071 409.30346680]
[305.47470093 421.41079712]
[313.57574463 434.04077148]
[320.88394165 447.14550781]
[327.37152100 460.67529297]
[333.01388550 474.57879639]
[337.78961182 488.80328369]
[341.68063354 503.29479980]
[344.67214966 517.99835205]
[346.75283813 532.85815430]
[347.91476440 547.81787109]
[348.15359497 562.82080078]
[347.46832275 577.80993652]
[345.86163330 592.72845459]
[343.33959961 607.51971436]
[339.91177368 622.12774658]
[335.59115601 636.49700928]
[330.39416504 650.57305908]
[324.34048462 664.30242920]
[317.45306396 677.63311768]
[309.75808716 690.51458740]
[301.28469849 702.89782715]
[292.06503296 714.73596191]
[282.13412476 725.98413086]
[271.52957153 736.59954834]
[260.29165649 746.54199219]
[248.46298218 755.77380371]
[236.08842468 764.25988770]
[223.21492004 771.96813965]
[209.89129639 778.86920166]
[196.16812134 784.93695068]
[182.09742737 790.14843750]
[167.73260498 794.48382568]
[153.12812805 797.92663574]
[138.33941650 800.46386719]
[123.42255402 802.08587646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 161]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[60 152]
[61 141]
[62 140]
[64 138]
[65 137]
[67 135]
[68 134]
[69 133]
[70 132]
[81 131]
[83 129]
[84 128]
[85 127]
[86 126]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
