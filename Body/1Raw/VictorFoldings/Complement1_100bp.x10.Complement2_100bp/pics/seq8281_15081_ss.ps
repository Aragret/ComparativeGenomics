%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[173.97465515 497.60162354]
[172.19219971 482.70791626]
[170.40972900 467.81417847]
[168.62725830 452.92047119]
[166.84478760 438.02676392]
[165.06233215 423.13302612]
[161.14625549 416.86517334]
[163.36590576 408.00451660]
[161.80537415 393.08590698]
[160.24485779 378.16729736]
[157.57905579 363.40609741]
[153.82275391 348.88403320]
[150.06645203 334.36196899]
[146.20214844 319.86828613]
[142.23005676 305.40374756]
[138.25796509 290.93923950]
[127.42660522 280.71517944]
[131.23332214 265.35876465]
[120.40196991 255.13473511]
[124.20868683 239.77832031]
[120.23658752 225.31379700]
[116.26449585 210.84927368]
[113.89769745 209.34713745]
[111.98330688 206.81697083]
[110.91587067 203.42639160]
[111.02201843 199.48263550]
[112.51403809 195.40490723]
[109.40993500 180.72959900]
[99.20632935 169.87899780]
[103.92032623 154.77638245]
[100.81621552 140.10108948]
[97.71210480 125.42578125]
[94.60799408 110.75048065]
[91.28573608 96.12302399]
[87.74606323 81.54664612]
[76.97073364 69.96204376]
[81.48616791 55.76837921]
[77.94649506 41.19200516]
[64.93046570 28.16646576]
[70.52397919 11.53277779]
[66.76767731 -2.98928165]
[55.82106781 -14.41216755]
[60.12467194 -28.67148972]
[56.36837387 -43.19355011]
[52.61207199 -57.71560669]
[48.42506027 -72.11939240]
[43.81105042 -86.39212036]
[39.19704056 -100.66485596]
[34.58303070 -114.93759155]
[29.96902275 -129.21032715]
[26.69354057 -114.57231903]
[18.12864113 -102.25799561]
[5.54488134 -94.09411621]
[-9.19101620 -91.29173279]
[-23.89306831 -94.26657867]
[-36.38031006 -102.57733917]
[-44.80033875 -114.99116516]
[-47.90408707 -129.66654968]
[-45.23114014 -144.42646790]
[-37.17800522 -157.08139038]
[-24.93932152 -165.75402832]
[-10.33062458 -169.15785217]
[4.48097229 -166.78790283]
[17.29825783 -158.99578857]
[26.21904182 -146.93911743]
[24.65851784 -161.85771179]
[23.09799576 -176.77632141]
[15.05522823 -164.11480713]
[1.48897207 -157.71507263]
[-13.39712048 -159.56011963]
[-24.99043274 -169.07827759]
[-29.69864845 -183.32020569]
[-26.06287766 -197.87290955]
[-15.20970440 -208.22706604]
[-0.50209975 -211.17433167]
[13.50262356 -205.80146790]
[22.46504021 -193.77305603]
[22.91164589 -208.76640320]
[23.35825157 -223.75976562]
[23.80485725 -238.75311279]
[20.93234253 -247.42411804]
[24.37137985 -253.96589661]
[25.04116440 -268.95092773]
[25.26449203 -283.94927979]
[25.04116440 -298.94760132]
[24.81783676 -313.94595337]
[24.59450912 -328.94427490]
[24.37118149 -343.94262695]
[24.14785385 -358.94094849]
[9.33179951 -361.56414795]
[-4.71997452 -366.94412231]
[-17.49950600 -374.88641357]
[-28.54482269 -385.10391235]
[-37.45664215 -397.22729492]
[-43.91280746 -410.81823730]
[-47.67993546 -425.38552856]
[-48.62184525 -440.40249634]
[-46.70448685 -455.32629395]
[-41.99716949 -469.61746216]
[-34.67006302 -482.75939941]
[-24.98803711 -494.27697754]
[-13.30109119 -503.75387573]
[-0.03169913 -510.84753418]
[14.34045792 -515.30145264]
[29.29583359 -516.95471191]
[44.29380417 -515.74749756]
[58.79219818 -511.72341919]
[72.26691437 -505.02801514]
[84.23084259 -495.90325928]
[94.25149536 -484.67904663]
[101.96663666 -471.76110840]
[107.09736633 -457.61642456]
[109.45821381 -442.75631714]
[108.96383667 -427.71795654]
[105.63210297 -413.04498291]
[99.58345032 -399.26782227]
[91.03653717 -386.88449097]
[80.30033112 -376.34265137]
[67.76293945 -368.02340698]
[53.87757492 -362.22741699]
[39.14619064 -359.16427612]
[39.36951828 -344.16595459]
[39.59284592 -329.16760254]
[39.81617355 -314.16928101]
[40.03950119 -299.17092896]
[40.26282883 -284.17260742]
[42.17804718 -282.12564087]
[43.39783478 -279.19668579]
[43.58219147 -275.64685059]
[42.49182892 -271.85531616]
[40.02620316 -268.28115845]
[39.35641861 -253.29611206]
[38.79820633 -238.30650330]
[38.35160065 -223.31315613]
[37.90499496 -208.31980896]
[37.45838928 -193.32646179]
[38.01660156 -178.33683777]
[39.57712173 -163.41824341]
[41.13764572 -148.49963379]
[44.24175644 -133.82432556]
[48.85576630 -119.55159760]
[53.46977615 -105.27886963]
[58.08378601 -91.00613403]
[62.69779205 -76.73339844]
[65.12930298 -75.33843994]
[67.15475464 -72.89628601]
[68.37252808 -69.55675507]
[68.44258118 -65.61219025]
[67.13413239 -61.47190857]
[70.89043427 -46.94984818]
[74.64672852 -32.42779160]
[85.32466888 -22.04361916]
[81.28973389 -6.74558258]
[85.04603577 7.77647686]
[95.30639648 14.18362904]
[98.55467987 26.25145340]
[92.52286530 37.65233231]
[96.06253815 52.22870636]
[106.58468628 62.77070618]
[102.32243347 78.00697327]
[105.86210632 92.58335114]
[109.60752869 96.25565338]
[111.02880859 101.76503754]
[109.28329468 107.64636993]
[112.38740540 122.32167053]
[115.49151611 136.99697876]
[118.59562683 151.67227173]
[129.02125549 163.57255554]
[124.08523560 177.62550354]
[127.18934631 192.30079651]
[130.72901917 206.87716675]
[134.70111084 221.34170532]
[138.67320251 235.80622864]
[149.78868103 247.06486511]
[145.69784546 261.38668823]
[156.81330872 272.64532471]
[152.72248840 286.96713257]
[156.69458008 301.43167114]
[160.66667175 315.89617920]
[165.95684814 323.34277344]
[164.58851624 330.60568237]
[168.34481812 345.12771606]
[172.10112000 359.64978027]
[177.63554382 345.70812988]
[189.33773804 336.32418823]
[204.14880371 333.95089722]
[218.19714355 339.20867920]
[227.81057739 350.72308350]
[230.47613525 365.48434448]
[225.49708557 379.63388062]
[214.17492676 389.47302246]
[199.46925354 392.42984009]
[185.22407532 387.73144531]
[175.16345215 376.60678101]
[176.72398376 391.52539062]
[178.28450012 406.44400024]
[179.95603943 421.35055542]
[181.73851013 436.24429321]
[183.52098083 451.13800049]
[185.30343628 466.03170776]
[187.08590698 480.92544556]
[188.86837769 495.81915283]
[202.79048157 502.46585083]
[210.88958740 515.59625244]
[210.58131409 531.02056885]
[201.96400452 543.81683350]
[187.78742981 549.90191650]
[172.57528687 547.33404541]
[161.18168640 536.93261719]
[157.24232483 522.01672363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[5 198]
[6 197]
[8 196]
[9 195]
[10 194]
[11 183]
[12 182]
[13 181]
[14 179]
[15 178]
[16 177]
[18 175]
[20 173]
[21 172]
[22 171]
[27 170]
[28 169]
[30 167]
[31 166]
[32 165]
[33 164]
[34 161]
[35 160]
[37 158]
[38 157]
[40 154]
[41 153]
[43 151]
[44 150]
[45 149]
[46 144]
[47 143]
[48 142]
[49 141]
[50 140]
[65 139]
[66 138]
[67 137]
[77 136]
[78 135]
[79 134]
[80 133]
[82 132]
[83 131]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
