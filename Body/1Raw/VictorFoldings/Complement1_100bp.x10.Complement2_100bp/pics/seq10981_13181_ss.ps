%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[109.34605408 308.82037354]
[107.46807861 293.93112183]
[106.72153473 278.94244385]
[107.11071777 263.94024658]
[108.63338470 249.01045227]
[111.28081512 234.23857117]
[115.03785706 219.70921326]
[119.88298035 205.50561523]
[125.78842926 191.70913696]
[132.72038269 178.39878845]
[140.63914490 165.65081787]
[149.49932861 153.53823853]
[138.09686279 143.79228210]
[126.69440460 134.04631042]
[121.94766235 133.51956177]
[117.48143005 130.00532532]
[115.10314178 123.83643341]
[103.99590302 113.75529480]
[90.37322235 110.60662842]
[85.92295837 97.35193634]
[74.81571960 87.27079773]
[63.70848846 77.18965912]
[52.52651215 67.19149017]
[41.27042007 57.27683640]
[28.48468018 65.30210114]
[13.97026730 69.39527893]
[-1.09421694 69.23287964]
[-15.48800087 64.83660126]
[-28.04707336 56.57090759]
[-37.75831604 45.11281586]
[-43.84122849 31.39644051]
[-45.81064224 16.53685760]
[-43.51543427 1.73944843]
[-37.15005493 -11.79787922]
[-48.40615082 -21.71253014]
[-59.66224670 -31.62718201]
[-70.91834259 -41.54183197]
[-81.68069458 -31.08238602]
[-93.22122192 -21.48839760]
[-105.47051239 -12.81756878]
[-118.35488892 -5.12204647]
[-131.79687500 1.55188680]
[-145.71562195 7.16409254]
[-160.02742004 11.68081760]
[-174.64619446 15.07489777]
[-189.48402405 17.32592010]
[-204.45166016 18.42034721]
[-219.45912170 18.35159683]
[-234.41610718 17.12008286]
[-249.23269653 14.73321056]
[-263.81976318 11.20533562]
[-278.08956909 6.55767536]
[-291.95632935 0.81818157]
[-305.33657837 -5.97862673]
[-318.14993286 -13.79187298]
[-330.31924438 -22.57456589]
[-341.77139282 -32.27388763]
[-352.43746948 -42.83149719]
[-362.25332642 -54.18390656]
[-371.15994263 -66.26284027]
[-379.10372925 -78.99565125]
[-386.03695679 -92.30575562]
[-391.91784668 -106.11311340]
[-396.71112061 -120.33467865]
[-400.38790894 -134.88491821]
[-402.92608643 -149.67633057]
[-404.31039429 -164.61996460]
[-404.53253174 -179.62593079]
[-403.59112549 -194.60398865]
[-401.49188232 -209.46405029]
[-398.24740601 -224.11674500]
[-393.87716675 -238.47395325]
[-388.40753174 -252.44932556]
[-381.87133789 -265.95883179]
[-374.30789185 -278.92117310]
[-365.76269531 -291.25845337]
[-356.28717041 -302.89642334]
[-345.93826294 -313.76513672]
[-334.77822876 -323.79916382]
[-322.87420654 -332.93820190]
[-310.29776001 -341.12731934]
[-297.12451172 -348.31716919]
[-283.43374634 -354.46459961]
[-269.30773926 -359.53259277]
[-254.83149719 -363.49069214]
[-240.09204102 -366.31509399]
[-225.17805481 -367.98876953]
[-210.17921448 -368.50170898]
[-195.18572998 -367.85079956]
[-180.28778076 -366.03994751]
[-165.57495117 -363.08004761]
[-151.13572693 -358.98892212]
[-137.05696106 -353.79116821]
[-123.42332458 -347.51803589]
[-110.31681061 -340.20724487]
[-97.81623840 -331.90277100]
[-85.99679565 -322.65457153]
[-74.92956543 -312.51828003]
[-64.68110657 -301.55480957]
[-55.31305695 -289.83013916]
[-46.88175583 -277.41476440]
[-39.43791199 -264.38336182]
[-33.02629471 -250.81430054]
[-27.68546104 -236.78919983]
[-23.44753647 -222.39237976]
[-20.33800697 -207.71044922]
[-18.37557411 -192.83169556]
[-17.57203865 -177.84561157]
[-17.93223572 -162.84233093]
[-19.45399857 -147.91207886]
[-22.12817192 -133.14463806]
[-25.93867683 -118.62883759]
[-30.86259460 -104.45198059]
[-36.87031174 -90.69931793]
[-43.92569351 -77.45357513]
[-51.98631287 -64.79439545]
[-61.00369263 -52.79792786]
[-49.74759674 -42.88327789]
[-38.49150085 -32.96862793]
[-27.23540306 -23.05397606]
[-14.60977745 -31.07712173]
[-0.22041267 -35.22169495]
[14.76890659 -35.14360046]
[29.14336395 -30.84061050]
[41.73556519 -22.65327072]
[51.52035141 -11.23793125]
[57.69824600 2.48584008]
[59.76078033 17.40934563]
[57.53234100 32.32431412]
[51.18507004 46.02074051]
[62.44116592 55.93539429]
[69.53826904 57.99763870]
[73.78962708 66.08242798]
[84.89685822 76.16356659]
[96.00409698 86.24470520]
[109.62677765 89.39337158]
[114.07704163 102.64806366]
[125.18428040 112.72920227]
[136.44036865 122.64385223]
[147.84283447 132.38981628]
[159.24530029 142.13578796]
[169.83062744 131.49772644]
[181.19018555 121.69069672]
[193.25891113 112.77087402]
[205.96766663 104.78933716]
[219.24366760 97.79181671]
[233.01084900 91.81838989]
[247.19038391 86.90327454]
[261.70101929 83.07461548]
[276.45965576 80.35435486]
[291.38177490 78.75807190]
[306.38186646 78.29489899]
[321.37402344 78.96750641]
[336.27239990 80.77202606]
[350.99160767 83.69812775]
[365.44735718 87.72905731]
[379.55688477 92.84171295]
[393.23928833 99.00682068]
[406.41629028 106.18906403]
[419.01232910 114.34729767]
[430.95532227 123.43479919]
[442.17681885 133.39950562]
[452.61254883 144.18435669]
[462.20272827 155.72755432]
[470.89245605 167.96299744]
[478.63195801 180.82060242]
[485.37686157 194.22669983]
[491.08856201 208.10452271]
[495.73431396 222.37457275]
[499.28756714 236.95509338]
[501.72790527 251.76260376]
[503.04138184 266.71224976]
[503.22045898 281.71844482]
[502.26412964 296.69515991]
[500.17785645 311.55670166]
[496.97357178 326.21786499]
[492.66967773 340.59472656]
[487.29080200 354.60488892]
[480.86773682 368.16815186]
[473.43728638 381.20678711]
[465.04205322 393.64611816]
[455.73004150 405.41488647]
[445.55465698 416.44570923]
[434.57415771 426.67538452]
[422.85147095 436.04528809]
[410.45367432 444.50180054]
[397.45187378 451.99645996]
[383.92044067 458.48635864]
[369.93698120 463.93426514]
[355.58154297 468.30902100]
[340.93634033 471.58557129]
[326.08529663 473.74511719]
[311.11343384 474.77529907]
[296.10656738 474.67022705]
[281.15060425 473.43051147]
[266.33126831 471.06323242]
[251.73338318 467.58197021]
[237.44059753 463.00662231]
[223.53477478 457.36343384]
[210.09556580 450.68475342]
[197.19995117 443.00875854]
[184.92179871 434.37948608]
[173.33143616 424.84634399]
[162.49525452 414.46392822]
[152.47531128 403.29171753]
[143.32901001 391.39370728]
[135.10874939 378.83804321]
[127.86161041 365.69665527]
[121.62908936 352.04479980]
[116.44689941 337.96069336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[17 138]
[18 137]
[20 135]
[21 134]
[22 133]
[23 131]
[24 130]
[34 120]
[35 119]
[36 118]
[37 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
