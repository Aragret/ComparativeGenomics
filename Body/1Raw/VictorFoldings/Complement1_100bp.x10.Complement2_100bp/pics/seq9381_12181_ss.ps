%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[143.82418823 732.04351807]
[132.42140198 722.22198486]
[123.15403748 710.36437988]
[116.37831879 696.92651367]
[112.35468292 682.42492676]
[111.23778534 667.41699219]
[113.07055664 652.47955322]
[117.78255463 638.18676758]
[125.19265747 625.08801270]
[135.01603699 613.68682861]
[146.87512207 604.42138672]
[160.31407166 597.64782715]
[174.81632996 593.62658691]
[173.70068359 578.66809082]
[172.58502197 563.70965576]
[171.46937561 548.75122070]
[170.35372925 533.79272461]
[169.23808289 518.83428955]
[168.12243652 503.87582397]
[167.00679016 488.91738892]
[164.67129517 474.10031128]
[161.13162231 459.52392578]
[157.59194946 444.94757080]
[154.05227661 430.37118530]
[150.51260376 415.79479980]
[147.70790100 413.65802002]
[145.79881287 410.05654907]
[145.46247864 405.42620850]
[147.15582275 400.48861694]
[144.27055359 385.76873779]
[141.38526917 371.04885864]
[131.34434509 360.04751587]
[136.28268433 345.01678467]
[133.39739990 330.29687500]
[130.51213074 315.57699585]
[120.47120667 304.57565308]
[125.40953827 289.54492188]
[112.94349670 281.47439575]
[109.80773163 266.58743286]
[118.35736847 253.56661987]
[115.47209930 238.84672546]
[105.43117523 227.84539795]
[110.36949921 212.81465149]
[107.48423004 198.09475708]
[104.77772522 195.83485413]
[103.03136444 192.15174866]
[102.90212250 187.51100159]
[104.81424713 182.65394592]
[102.58912659 167.81990051]
[100.36401367 152.98587036]
[98.13889313 138.15182495]
[83.69316101 134.54145813]
[71.72542572 125.68215942]
[64.05429840 112.92020416]
[61.84548950 98.19488525]
[65.43465424 83.74387360]
[74.27637482 71.76314545]
[87.02706146 64.07329559]
[84.80194855 49.23925400]
[82.57682800 34.40520859]
[80.35170746 19.57116699]
[77.90598297 4.77189589]
[75.24018860 -9.98932171]
[72.57439423 -24.75053787]
[69.47028351 -39.42584229]
[65.93061066 -54.00221634]
[62.39093781 -68.57859039]
[51.61561203 -80.16319275]
[56.13103867 -94.35685730]
[52.59136581 -108.93323517]
[49.05169678 -123.50960541]
[45.51202393 -138.08598328]
[41.90776825 -141.86175537]
[40.27546692 -146.20788574]
[40.50216293 -150.27774048]
[42.15523148 -153.39216614]
[39.26995850 -168.11206055]
[29.02266121 -180.16624451]
[34.16736603 -194.14413452]
[31.28209305 -208.86402893]
[27.85003281 -212.79696655]
[26.41342545 -217.21165466]
[26.82162094 -221.26731873]
[28.61210823 -224.30484009]
[24.79914284 -229.70602417]
[24.35320282 -235.37155151]
[26.54842186 -239.61302185]
[24.76595688 -254.50672913]
[22.98348999 -269.40045166]
[21.20102501 -284.29415894]
[19.41855812 -299.18789673]
[4.51962328 -301.67755127]
[-9.07377911 -308.26510620]
[-20.25969505 -318.41656494]
[-28.13132858 -331.30895996]
[-32.05056381 -345.89718628]
[-31.69968796 -360.99862671]
[-27.10714149 -375.38909912]
[-18.64522171 -387.90197754]
[-6.99990082 -397.52297974]
[6.88478804 -403.47210693]
[21.88327599 -405.26708984]
[36.77970123 -402.76248169]
[50.36648178 -396.16125488]
[61.54219055 -385.99856567]
[69.40087128 -373.09826660]
[73.30545044 -358.50610352]
[72.93939972 -343.40502930]
[68.33239746 -329.01919556]
[59.85791397 -316.51480103]
[48.20293427 -306.90551758]
[34.31227493 -300.97033691]
[36.09474182 -286.07662964]
[37.87720871 -271.18292236]
[39.65967178 -256.28918457]
[41.44213867 -241.39547729]
[43.44615173 -226.52995300]
[46.00198364 -211.74929810]
[48.88725662 -197.02940369]
[58.92818069 -186.02809143]
[53.98985291 -170.99732971]
[56.87512589 -156.27745056]
[60.08839798 -141.62565613]
[63.62807083 -127.04927826]
[67.16773987 -112.47290802]
[70.70741272 -97.89653015]
[81.22956085 -87.35453033]
[76.96731567 -72.11826324]
[80.50698853 -57.54188919]
[84.04666138 -42.96551514]
[86.36768341 -41.39357376]
[88.20588684 -38.80753326]
[89.17189789 -35.38668060]
[88.94837952 -31.44782829]
[87.33560944 -27.41633415]
[90.00140381 -12.65511703]
[92.66719818 2.10610008]
[96.01025391 5.51682377]
[97.24620819 11.06384563]
[95.18575287 17.34605026]
[97.41087341 32.18009186]
[99.63598633 47.01413727]
[101.86110687 61.84817886]
[116.30683899 65.45854187]
[128.27458191 74.31784058]
[135.94569397 87.07979584]
[138.15451050 101.80511475]
[134.56535339 116.25612640]
[125.72362518 128.23686218]
[112.97293854 135.92669678]
[115.19805145 150.76074219]
[117.42317200 165.59478760]
[119.64829254 180.42883301]
[122.20412445 195.20948792]
[125.08939362 209.92938232]
[135.33668518 221.98356628]
[130.19198608 235.96145630]
[133.07725525 250.68133545]
[145.90983582 259.51098633]
[148.62623596 274.48016357]
[140.12942505 286.65963745]
[150.37672424 298.71383667]
[145.23202515 312.69171143]
[148.11729431 327.41162109]
[151.00257874 342.13150024]
[161.24986267 354.18569946]
[156.10516357 368.16357422]
[158.99043274 382.88345337]
[161.87571716 397.60336304]
[165.08898926 412.25512695]
[168.62866211 426.83151245]
[172.16833496 441.40789795]
[175.70800781 455.98425293]
[179.24768066 470.56063843]
[184.54341125 456.52658081]
[195.69299316 446.49227905]
[210.20555115 442.69946289]
[224.83895874 445.99542236]
[236.32406616 455.64382935]
[242.09507751 469.48925781]
[240.86274719 484.43853760]
[232.90234375 497.15200806]
[219.99227905 504.78942871]
[205.01667786 505.64456177]
[191.32112122 499.52639771]
[181.96524048 487.80172729]
[183.08088684 502.76019287]
[184.19653320 517.71862793]
[185.31217957 532.67712402]
[186.42784119 547.63555908]
[187.54348755 562.59399414]
[188.65913391 577.55242920]
[189.77478027 592.51092529]
[204.71310425 594.33642578]
[219.00816345 599.04150391]
[232.11048889 606.44525146]
[243.51646423 616.26306152]
[252.78765869 628.11767578]
[259.56771851 641.55328369]
[263.59606934 656.05358887]
[264.71780396 671.06121826]
[262.88989258 685.99926758]
[258.18249512 700.29351807]
[250.77664185 713.39465332]
[240.95695496 724.79901123]
[229.10087585 734.06829834]
[215.66412354 740.84619141]
[201.16316223 744.87219238]
[186.15539551 745.99151611]
[171.21765137 744.16119385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[18 188]
[19 187]
[20 186]
[21 174]
[22 173]
[23 172]
[24 171]
[25 170]
[29 169]
[30 168]
[31 167]
[33 165]
[34 164]
[35 163]
[37 161]
[40 158]
[41 157]
[43 155]
[44 154]
[48 153]
[49 152]
[50 151]
[51 150]
[58 143]
[59 142]
[60 141]
[61 140]
[62 137]
[63 136]
[64 135]
[65 130]
[66 129]
[67 128]
[69 126]
[70 125]
[71 124]
[72 123]
[76 122]
[77 121]
[79 119]
[80 118]
[84 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
