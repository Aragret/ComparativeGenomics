%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[97.50640106 1000.47528076]
[82.54015350 999.44079590]
[67.62645721 997.81579590]
[52.78859711 995.60290527]
[38.04975128 992.80548096]
[23.43292427 989.42803955]
[8.96094227 985.47576904]
[-5.34360027 980.95477295]
[-19.45836830 975.87225342]
[-33.36132050 970.23602295]
[-47.03075409 964.05499268]
[-60.44532394 957.33868408]
[-73.58408356 950.09771729]
[-86.42651367 942.34332275]
[-98.95256805 934.08758545]
[-111.14269257 925.34344482]
[-122.97784424 916.12457275]
[-134.43955994 906.44531250]
[-145.50991821 896.32080078]
[-156.17166138 885.76678467]
[-166.40811157 874.79986572]
[-176.20332336 863.43707275]
[-185.54196167 851.69616699]
[-194.40948486 839.59552002]
[-202.79202271 827.15399170]
[-210.67648315 814.39099121]
[-218.05056763 801.32647705]
[-224.90277100 787.98083496]
[-231.22238159 774.37487793]
[-236.99952698 760.52990723]
[-242.22518921 746.46746826]
[-246.89122009 732.20959473]
[-250.99034119 717.77850342]
[-254.51611328 703.19677734]
[-257.46307373 688.48712158]
[-259.82659912 673.67248535]
[-261.60299683 658.77606201]
[-262.78952026 643.82110596]
[-263.38427734 628.83093262]
[-263.38635254 613.82897949]
[-262.79577637 598.83862305]
[-261.61343384 583.88330078]
[-259.84115601 568.98638916]
[-257.48175049 554.17114258]
[-254.53889465 539.46063232]
[-251.01718140 524.87792969]
[-246.92208862 510.44567871]
[-242.26002502 496.18652344]
[-237.03826904 482.12265015]
[-231.26496887 468.27606201]
[-224.94915771 454.66836548]
[-218.10066223 441.32083130]
[-210.73020935 428.25424194]
[-202.84930420 415.48904419]
[-194.47023010 403.04516602]
[-185.60607910 390.94204712]
[-176.27069092 379.19854736]
[-166.47865295 367.83303833]
[-156.24525452 356.86325073]
[-145.58645630 346.30630493]
[-134.51890564 336.17871094]
[-123.05989075 326.49624634]
[-111.22730255 317.27407837]
[-99.03961182 308.52655029]
[-86.51585388 300.26733398]
[-73.67558289 292.50936890]
[-60.53883743 285.26470947]
[-47.12614059 278.54470825]
[-33.45842743 272.35986328]
[-19.55704308 266.71978760]
[-5.44369030 261.63330078]
[8.85959339 257.10836792]
[23.33047485 253.15205383]
[37.94636154 249.77050781]
[52.68442917 246.96903992]
[67.52166748 244.75199890]
[82.43491364 243.12286377]
[97.40087891 242.08416748]
[96.95426941 227.09082031]
[96.50765991 212.09747314]
[96.06105804 197.10412598]
[95.61444855 182.11077881]
[95.16784668 167.11743164]
[94.72123718 152.12406921]
[94.16303253 137.13446045]
[93.49324036 122.14942932]
[92.82345581 107.16439056]
[89.34608459 99.89249420]
[92.25693512 91.95159912]
[91.81033325 76.95825195]
[91.36372375 61.96489716]
[90.69393921 46.97985840]
[89.80112457 32.00645447]
[88.90830994 17.03304863]
[74.26343536 13.24056244]
[61.50836945 5.10647058]
[51.89271927 -6.57233191]
[46.35852432 -20.65167427]
[45.44797516 -35.75220871]
[49.25027084 -50.39453125]
[57.39291000 -63.14414597]
[69.07814789 -72.75196838]
[83.16120148 -78.27672577]
[98.26233673 -79.17716217]
[112.90211487 -75.36505127]
[125.64627075 -67.21387482]
[135.24626160 -55.52219772]
[140.76158142 -41.43545151]
[141.65190125 -26.33370972]
[137.82997131 -11.69649315]
[129.67025757 1.04219687]
[117.97215271 10.63435268]
[103.88171387 16.14023209]
[104.77452850 31.11363792]
[105.66734314 46.08704376]
[108.58141327 49.87086105]
[109.14944458 55.52544785]
[106.35707092 61.51829147]
[106.80368042 76.51164246]
[107.25028992 91.50498962]
[107.80849457 106.49460602]
[108.47827911 121.47964478]
[109.14807129 136.46467590]
[112.65754700 144.89802551]
[109.71459198 151.67747498]
[110.16119385 166.67082214]
[110.60780334 181.66416931]
[111.05440521 196.65751648]
[111.50101471 211.65086365]
[111.94761658 226.64422607]
[112.39422607 241.63757324]
[127.39547729 241.78363037]
[142.37924194 242.52221680]
[157.32214355 243.85220337]
[172.20083618 245.77148438]
[186.99208069 248.27706909]
[201.67279053 251.36506653]
[216.22003174 255.03062439]
[230.61111450 259.26803589]
[244.82356262 264.07067871]
[258.83517456 269.43106079]
[272.62408447 275.34082031]
[286.16873169 281.79071045]
[299.44799805 288.77066040]
[312.44116211 296.26980591]
[325.12789917 304.27639771]
[337.48843384 312.77792358]
[349.50341797 321.76116943]
[361.15414429 331.21206665]
[372.42242432 341.11587524]
[383.29061890 351.45709229]
[393.74179077 362.21963501]
[403.75961304 373.38665771]
[413.32843018 384.94073486]
[422.43331909 396.86380005]
[431.06005859 409.13726807]
[439.19519043 421.74200439]
[446.82598877 434.65826416]
[453.94055176 447.86590576]
[460.52777100 461.34429932]
[466.57736206 475.07241821]
[472.07986450 489.02883911]
[477.02673340 503.19171143]
[481.41018677 517.53900146]
[485.22341919 532.04821777]
[488.46044922 546.69677734]
[491.11627197 561.46179199]
[493.18667603 576.32025146]
[494.66845703 591.24884033]
[495.55929565 606.22430420]
[495.85781860 621.22332764]
[495.56353760 636.22241211]
[494.67694092 651.19812012]
[493.19940186 666.12713623]
[491.13320923 680.98614502]
[488.48159790 695.75195312]
[485.24868774 710.40142822]
[481.43957520 724.91174316]
[477.06018066 739.26025391]
[472.11734009 753.42456055]
[466.61880493 767.38250732]
[460.57308960 781.11236572]
[453.98968506 794.59259033]
[446.87887573 807.80224609]
[439.25170898 820.72070312]
[431.12017822 833.32769775]
[422.49691772 845.60363770]
[413.39541626 857.52929688]
[403.82986450 869.08605957]
[393.81521606 880.25592041]
[383.36709595 891.02142334]
[372.50183105 901.36572266]
[361.23635864 911.27276611]
[349.58831787 920.72692871]
[337.57586670 929.71356201]
[325.21774292 938.21862793]
[312.53326416 946.22882080]
[299.54223633 953.73162842]
[286.26495361 960.71533203]
[272.72213745 967.16906738]
[258.93490601 973.08276367]
[244.92480469 978.44708252]
[230.71372986 983.25378418]
[216.32385254 987.49523926]
[201.77763367 991.16497803]
[187.09780884 994.25708008]
[172.30726624 996.76690674]
[157.42912292 998.69036865]
[142.48661804 1000.02459717]
[127.50305176 1000.76745605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[85 123]
[86 122]
[87 121]
[89 120]
[90 119]
[91 118]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
