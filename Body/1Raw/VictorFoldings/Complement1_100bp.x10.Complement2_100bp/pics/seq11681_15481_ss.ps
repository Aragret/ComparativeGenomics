%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[67.29183960 684.35052490]
[52.23414993 686.62780762]
[37.55375290 682.57733154]
[25.79412460 672.90106201]
[18.99268532 659.27532959]
[18.32782745 644.06091309]
[23.91474342 629.89385986]
[34.78546524 619.22863770]
[49.05657578 613.91302490]
[49.94939041 598.93963623]
[50.84220505 583.96624756]
[51.73502350 568.99279785]
[52.40480804 554.00775146]
[52.85141373 539.01440430]
[53.29801941 524.02105713]
[53.07469177 509.02273560]
[52.18187332 494.04934692]
[51.28905869 479.07592773]
[50.39624405 464.10253906]
[49.50342941 449.12911987]
[42.66666031 462.48046875]
[31.29091072 472.25759888]
[17.06370163 477.01013184]
[2.09555888 476.03305054]
[-11.39308548 469.47131348]
[-21.40126991 458.29830933]
[-26.44434166 444.17147827]
[-25.77418900 429.18643188]
[-19.49022484 415.56616211]
[-8.52464008 405.33114624]
[5.49588776 399.99963379]
[20.49149704 400.36257935]
[34.23767471 406.36614990]
[44.69526291 417.11968994]
[50.31257629 431.02615356]
[52.53769302 416.19210815]
[54.76280975 401.35806274]
[56.98792648 386.52401733]
[59.21304321 371.68997192]
[61.43815994 356.85592651]
[63.66327667 342.02188110]
[65.88839722 327.18783569]
[51.38389206 322.04656982]
[38.15242767 314.17990112]
[26.70033264 303.88677979]
[17.46626091 291.55899048]
[10.80437946 277.66638184]
[6.97078180 262.73883057]
[6.11365509 247.34606934]
[8.26754189 232.07597351]
[13.35195827 217.51208496]
[21.17439842 204.21130371]
[31.43761826 192.68260193]
[43.75093842 183.36753845]
[57.64510727 176.62338257]
[72.59019470 172.70936584]
[88.01577759 171.77674866]
[90.01979065 156.91122437]
[91.24677277 141.96148682]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.75988007 57.59190750]
[94.20648956 42.59855652]
[79.20045471 38.14734650]
[65.86401367 29.97513771]
[55.10024261 18.64206505]
[47.63626099 4.92206812]
[43.97412109 -10.24995518]
[44.35703659 -25.84185600]
[48.75323868 -40.79445267]
[56.85852051 -54.09347534]
[68.11728668 -64.83837891]
[81.76064301 -72.30331421]
[96.85887909 -75.98615265]
[97.08220673 -90.98448944]
[97.30553436 -105.98282623]
[89.77455139 -119.89666748]
[97.70048523 -132.50733948]
[89.29336548 -142.28910828]
[89.78814697 -154.77665710]
[98.37460327 -163.29719543]
[98.82120514 -178.29054260]
[99.26781464 -193.28388977]
[96.39530182 -201.95491028]
[99.83433533 -208.49667358]
[100.50411987 -223.48171997]
[93.39074707 -237.61361694]
[101.68862915 -249.98269653]
[92.82584381 -266.12371826]
[102.84004974 -280.53491211]
[103.28665161 -295.52825928]
[103.73326111 -310.52160645]
[104.17986298 -325.51495361]
[89.81508636 -330.18719482]
[77.34928894 -338.71835327]
[67.79300690 -350.41683960]
[61.92093658 -364.33428955]
[60.20909882 -379.34249878]
[62.79625702 -394.22479248]
[69.47268677 -407.77478027]
[79.69716644 -418.89398193]
[92.64083099 -426.68103027]
[107.25440216 -430.50466919]
[122.35322571 -430.05493164]
[136.71330261 -425.36825562]
[149.17053223 -416.82458496]
[158.71504211 -405.11651611]
[164.57313538 -391.19317627]
[166.26989746 -376.18325806]
[163.66778564 -361.30355835]
[156.97775269 -347.76028442]
[146.74211121 -336.65136719]
[133.79061890 -328.87731934]
[119.17321777 -325.06835938]
[118.72660828 -310.07501221]
[118.28000641 -295.08166504]
[117.83339691 -280.08831787]
[125.89747620 -271.07180786]
[125.64810944 -258.57693481]
[116.67366791 -249.31291199]
[123.83495331 -236.25285339]
[115.48915863 -222.81193542]
[114.81937408 -207.82688904]
[114.26116180 -192.83728027]
[113.81455994 -177.84393311]
[113.36795044 -162.85058594]
[122.50663757 -147.86888123]
[112.69882202 -132.28401184]
[120.24578094 -119.44294739]
[112.30387115 -105.75949860]
[112.08054352 -90.76116180]
[111.85721588 -75.76282501]
[125.77424622 -72.06944275]
[138.40826416 -65.14278412]
[149.02023315 -55.38285065]
[156.98811340 -43.35556793]
[161.84342957 -29.75991058]
[163.29869080 -15.38732433]
[161.26452637 -1.07562804]
[155.85508728 12.33981037]
[147.38166809 24.07484055]
[136.33480835 33.44236374]
[123.35586548 39.89256287]
[109.19983673 43.04516220]
[108.75322723 58.03851318]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[106.24011993 142.40809631]
[117.09744263 132.05827332]
[132.05886841 130.98333740]
[144.28425598 139.67471313]
[148.18431091 154.15882874]
[141.97596741 167.81373596]
[128.49761963 174.39660645]
[113.91137695 170.89782715]
[104.88532257 158.91523743]
[102.88130951 173.78076172]
[116.76087189 178.42945862]
[129.54217529 185.55477905]
[140.78796387 194.91125488]
[150.11384583 206.17707825]
[157.20140076 218.96520996]
[161.80911255 232.83671570]
[163.78048706 247.31575012]
[163.04951477 261.90594482]
[159.64274597 276.10742188]
[153.67840576 289.43386841]
[145.36225891 301.42922974]
[134.98052979 311.68334961]
[122.89005280 319.84585571]
[109.50599670 325.63836670]
[95.28759766 328.86373901]
[80.72243500 329.41296387]
[78.49732208 344.24700928]
[76.27220154 359.08105469]
[74.04708862 373.91510010]
[71.82196808 388.74914551]
[69.59685516 403.58319092]
[67.37173462 418.41720581]
[65.14662170 433.25125122]
[64.47682953 448.23629761]
[65.36965179 463.20971680]
[66.26246643 478.18310547]
[67.15528107 493.15652466]
[68.04809570 508.12991333]
[78.78868866 497.65902710]
[93.78859711 497.71185303]
[104.45519257 508.25811768]
[104.67816162 523.25646973]
[94.32977295 534.11517334]
[79.33806610 534.61383057]
[68.29136658 524.46771240]
[67.84476471 539.46105957]
[67.39815521 554.45440674]
[70.19052887 560.44720459]
[69.62249756 566.10180664]
[66.70842743 569.88562012]
[65.81561279 584.85900879]
[64.92279816 599.83245850]
[64.02998352 614.80584717]
[77.56831360 621.77960205]
[87.09465027 633.66107178]
[90.95848846 648.39166260]
[88.49040222 663.41925049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 206]
[10 205]
[11 204]
[12 203]
[13 200]
[14 199]
[15 198]
[16 191]
[17 190]
[18 189]
[19 188]
[20 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[40 181]
[41 180]
[42 179]
[57 163]
[58 162]
[59 154]
[60 153]
[61 152]
[63 150]
[64 149]
[65 148]
[66 147]
[77 135]
[78 134]
[79 133]
[81 131]
[84 129]
[85 128]
[86 127]
[88 126]
[89 125]
[91 123]
[93 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
