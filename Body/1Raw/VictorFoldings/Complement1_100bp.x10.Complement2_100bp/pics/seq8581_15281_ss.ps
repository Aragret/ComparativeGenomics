%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[73.58312225 686.91461182]
[59.68349457 692.59936523]
[45.21787262 696.63201904]
[30.38189697 698.95806885]
[15.37620163 699.54595947]
[0.40372163 698.38775635]
[-14.33305550 695.49920654]
[-28.63483429 690.91925049]
[-42.30819702 684.70996094]
[-55.16822433 676.95520020]
[-67.04100800 667.75988770]
[-77.76597595 657.24835205]
[-87.19808197 645.56286621]
[-95.20977020 632.86126709]
[-101.69270325 619.31549072]
[-106.55918884 605.10870361]
[-109.74342346 590.43298340]
[-111.20233917 575.48675537]
[-110.91620636 560.47229004]
[-108.88890076 545.59259033]
[-105.14783478 531.04882812]
[-99.74360657 517.03771973]
[-92.74929047 503.74874878]
[-84.25949097 491.36169434]
[-74.38900757 480.04397583]
[-63.27134323 469.94873047]
[-51.05684280 461.21246338]
[-37.91069412 453.95330811]
[-24.01068497 448.26943970]
[-9.54479599 444.23776245]
[5.29133654 441.91275024]
[20.29707146 441.32586670]
[35.26947403 442.48501587]
[38.15474701 427.76513672]
[41.04001999 413.04525757]
[43.92529297 398.32534790]
[46.81056595 383.60546875]
[49.69583511 368.88555908]
[52.58110809 354.16567993]
[55.46638107 339.44580078]
[44.35762024 324.89550781]
[47.46543503 306.53100586]
[63.27626419 296.09396362]
[57.71766663 282.27545166]
[67.60152435 269.92150879]
[62.04292679 256.10299683]
[71.92678833 243.74905396]
[74.37251282 228.94978333]
[76.81823730 214.15051270]
[79.04335785 199.31646729]
[81.04737091 184.45094299]
[83.05138397 169.58540344]
[68.95590973 164.54183960]
[56.21684647 156.67822266]
[45.39082336 146.33813477]
[36.95085907 133.97338867]
[31.26572418 120.12421417]
[28.58382034 105.39575958]
[29.02233124 90.43154144]
[32.56209564 75.88539886]
[39.04845047 62.39290619]
[48.19798279 50.54359436]
[59.61091995 40.85520172]
[72.78858948 33.75104523]
[87.15522766 29.54152489]
[102.08308411 28.41057587]
[104.08709717 13.54504776]
[102.13226318 4.62224388]
[106.23320770 -1.52625346]
[108.45832825 -16.36029816]
[110.68344116 -31.19434166]
[112.90856171 -46.02838516]
[105.88365936 -56.84566879]
[108.04235840 -69.15516663]
[117.69018555 -76.45215607]
[120.13591003 -91.25142670]
[118.16921997 -97.56361389]
[119.48762512 -103.09161377]
[122.88108826 -106.45218658]
[117.94275665 -121.48294067]
[127.98368073 -132.48426819]
[130.86895752 -147.20414734]
[133.75422668 -161.92404175]
[136.63949585 -176.64393616]
[139.52476501 -191.36383057]
[142.41004944 -206.08372498]
[145.29531860 -220.80360413]
[148.18058777 -235.52349854]
[151.06585693 -250.24339294]
[136.83985901 -255.07083130]
[123.38423920 -261.75137329]
[110.93914795 -270.16586304]
[99.72668457 -280.16406250]
[89.94693756 -291.56756592]
[81.77445221 -304.17288208]
[75.35506439 -317.75503540]
[70.80333710 -332.07162476]
[68.20050812 -346.86718750]
[67.59301758 -361.87768555]
[68.99171448 -376.83517456]
[72.37163544 -391.47280884]
[77.67247009 -405.52926636]
[84.79959869 -418.75378418]
[93.62584686 -430.91027832]
[103.99369812 -441.78186035]
[115.71811676 -451.17449951]
[128.58987427 -458.92053223]
[142.37925720 -464.88177490]
[156.84016418 -468.95184326]
[171.71455383 -471.05804443]
[186.73695374 -471.16284180]
[201.63926697 -469.26434326]
[216.15556335 -465.39645386]
[230.02677917 -459.62817383]
[243.00534058 -452.06243896]
[254.85966492 -442.83428955]
[265.37817383 -432.10842896]
[274.37316895 -420.07623291]
[281.68408203 -406.95245361]
[287.18051147 -392.97128296]
[290.76431274 -378.38226318]
[292.37155151 -363.44570923]
[291.97354126 -348.42822266]
[289.57736206 -333.59777832]
[285.22583008 -319.21908569]
[278.99655151 -305.54867554]
[271.00073242 -292.83059692]
[261.38101196 -281.29174805]
[250.30912781 -271.13809204]
[237.98265076 -262.55081177]
[224.62153625 -255.68318176]
[210.46426392 -250.65774536]
[195.76347351 -247.56420898]
[180.78150940 -246.45774841]
[165.78575134 -247.35812378]
[162.90048218 -232.63822937]
[160.01521301 -217.91833496]
[157.12992859 -203.19844055]
[154.24465942 -188.47856140]
[151.35939026 -173.75866699]
[148.47412109 -159.03877258]
[145.58883667 -144.31887817]
[142.70356750 -129.59898376]
[147.84828186 -115.62110138]
[137.60098267 -103.56691742]
[134.93518066 -88.80570221]
[132.48945618 -74.00643158]
[139.54464722 -57.93809891]
[127.74260712 -43.80326843]
[125.51748657 -28.96922302]
[123.29236603 -14.13518047]
[121.06725311 0.69886369]
[118.95262909 15.54906082]
[116.94861603 30.41458893]
[131.04409790 35.45816040]
[143.78315735 43.32178116]
[154.60917664 53.66186523]
[163.04914856 66.02661896]
[168.73428345 79.87578583]
[171.41618347 94.60424042]
[170.97767639 109.56845856]
[167.43791199 124.11460114]
[160.95155334 137.60708618]
[151.80201721 149.45640564]
[140.38908386 159.14479065]
[127.21141052 166.24896240]
[112.84477234 170.45848083]
[97.91691589 171.58943176]
[95.91290283 186.45495605]
[93.90888977 201.32048035]
[96.06263733 207.57130432]
[94.90941620 213.13612366]
[91.61750793 216.59623718]
[89.17178345 231.39550781]
[86.72605896 246.19477844]
[92.10971832 261.07183838]
[82.40079498 272.36724854]
[87.78446198 287.24429321]
[78.07553864 298.53970337]
[86.74756622 306.67187500]
[90.38005829 317.86590576]
[88.18064117 329.30514526]
[80.80929565 338.16961670]
[70.18627167 342.33105469]
[67.30100250 357.05096436]
[64.41572571 371.77084351]
[61.53045654 386.49072266]
[58.64518356 401.21063232]
[55.75991058 415.93051147]
[52.87463760 430.65042114]
[49.98936462 445.37030029]
[64.29145050 449.94927979]
[77.96522522 456.15768433]
[90.82577515 463.91156006]
[102.69916534 473.10607910]
[113.42483521 483.61685181]
[122.85771942 495.30178833]
[130.87026978 508.00277710]
[137.35409546 521.54815674]
[142.22152710 535.75463867]
[145.40673828 550.43017578]
[146.86665344 565.37622070]
[146.58152771 580.39074707]
[144.55522156 595.27062988]
[140.81512451 609.81463623]
[135.41181946 623.82604980]
[128.41839600 637.11547852]
[119.92942047 649.50311279]
[110.05970001 660.82147217]
[98.94270325 670.91748047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[40 184]
[43 179]
[45 177]
[47 175]
[48 174]
[49 173]
[50 170]
[51 169]
[52 168]
[66 154]
[67 153]
[69 152]
[70 151]
[71 150]
[72 149]
[75 147]
[76 146]
[79 145]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[87 137]
[88 136]
[89 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
