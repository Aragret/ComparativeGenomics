%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[213.49212646 282.63085938]
[221.76582336 270.10174561]
[231.32443237 258.52310181]
[220.83692932 247.79873657]
[210.34942627 237.07435608]
[195.91908264 233.38453674]
[191.80232239 218.10832214]
[181.31481934 207.38394165]
[170.82731628 196.65956116]
[160.33981323 185.93518066]
[149.85231018 175.21080017]
[139.36480713 164.48643494]
[136.56649780 164.32031250]
[133.66539001 163.03572083]
[131.08779907 160.58798218]
[129.26837158 157.08737183]
[128.59605408 152.79762268]
[118.76547241 141.46803284]
[108.93489075 130.13844299]
[112.33715057 144.74749756]
[111.12109375 159.69813538]
[105.40261841 173.56532288]
[95.72677612 185.02734375]
[83.01581573 192.99172974]
[68.48124695 196.69934082]
[53.50842285 195.79679871]
[39.52445984 190.37013245]
[27.86221313 180.93656921]
[19.63325882 168.39526367]
[15.62192631 153.94157410]
[16.21055222 138.95312500]
[21.34302902 124.85853577]
[30.53016472 113.00119019]
[42.89630127 104.51127625]
[57.26277161 100.19798279]
[72.26026154 100.47243500]
[86.45930481 105.30847168]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[81.48483276 78.70519257]
[74.95546722 72.31729126]
[75.01125336 64.92684937]
[68.73389435 51.30353546]
[62.45653152 37.68021774]
[55.77633667 24.24984169]
[48.69923401 11.02431393]
[41.62212753 -2.20121360]
[26.76369286 -6.87718344]
[19.77490425 -20.39056587]
[24.32429504 -34.52699280]
[17.24718857 -47.75252151]
[10.17008400 -60.97805023]
[3.09297848 -74.20357513]
[-3.98412704 -87.42910767]
[-11.06123257 -100.65463257]
[-18.13833809 -113.88015747]
[-25.21544266 -127.10569000]
[-32.29254913 -140.33122253]
[-39.36965561 -153.55674744]
[-46.44675827 -166.78227234]
[-53.52386475 -180.00779724]
[-60.30359268 -166.62739563]
[-74.96016693 -163.43603516]
[-86.68931580 -172.78628540]
[-86.84473419 -187.78547668]
[-75.31186676 -197.37677002]
[-60.59363174 -194.49079895]
[-66.66746521 -208.20606995]
[-72.74130249 -221.92134094]
[-78.81513214 -235.63659668]
[-84.88896942 -249.35186768]
[-99.41539001 -245.48797607]
[-114.36741638 -243.94421387]
[-129.37686157 -244.75860596]
[-144.07408142 -247.91107178]
[-158.09716797 -253.32400513]
[-171.10076904 -260.86407471]
[-182.76466370 -270.34564209]
[-192.80162048 -281.53518677]
[-200.96447754 -294.15716553]
[-207.05220032 -307.90075684]
[-210.91488647 -322.42749023]
[-212.45742798 -337.37963867]
[-211.64179993 -352.38900757]
[-208.48811340 -367.08596802]
[-203.07403564 -381.10861206]
[-195.53288269 -394.11160278]
[-186.05035400 -405.77471924]
[-174.85998535 -415.81072998]
[-162.23733521 -423.97256470]
[-148.49324036 -430.05914307]
[-133.96618652 -433.92065430]
[-119.01390076 -435.46194458]
[-104.00460052 -434.64508057]
[-89.30789185 -431.49017334]
[-75.28570557 -426.07495117]
[-62.28335190 -418.53271484]
[-50.62102127 -409.04922485]
[-40.58590698 -397.85803223]
[-32.42513657 -385.23471069]
[-26.33967400 -371.49011230]
[-22.47938156 -356.96273804]
[-20.93932152 -342.01031494]
[-21.75741768 -327.00109863]
[-24.91352654 -312.30465698]
[-30.32992363 -298.28289795]
[-37.87322617 -285.28115845]
[-47.35767365 -273.61962891]
[-58.54970169 -263.58541870]
[-71.17369843 -255.42570496]
[-65.09986877 -241.71043396]
[-59.02603149 -227.99517822]
[-52.95219803 -214.27990723]
[-46.87836456 -200.56463623]
[-40.29833603 -187.08489990]
[-33.22123337 -173.85937500]
[-26.14412689 -160.63385010]
[-19.06702042 -147.40832520]
[-11.98991585 -134.18280029]
[-4.91281033 -120.95726776]
[2.16429520 -107.73173523]
[9.24140072 -94.50621033]
[16.31850624 -81.28068542]
[23.39561081 -68.05515289]
[30.47271729 -54.82962799]
[37.54982376 -41.60409927]
[51.83512115 -37.54629135]
[59.20071411 -24.23454285]
[54.84765625 -9.27831936]
[61.92475891 3.94720840]
[69.00186920 17.17273521]
[71.64257812 18.11335945]
[74.06980896 20.15667915]
[75.86169434 23.22662354]
[76.63166046 27.09594727]
[76.07984924 31.40285683]
[82.35720825 45.02617264]
[88.63456726 58.64949036]
[95.01317596 72.22569275]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[120.26448059 120.30786133]
[130.09506226 131.63745117]
[139.92564392 142.96705627]
[150.08918762 153.99893188]
[160.57669067 164.72331238]
[171.06419373 175.44769287]
[181.55169678 186.17205811]
[192.03919983 196.89643860]
[202.52670288 207.62081909]
[217.70716858 212.07771301]
[221.07380676 226.58685303]
[231.56130981 237.31123352]
[242.04879761 248.03561401]
[253.83802795 238.73796082]
[266.54876709 230.74612427]
[280.03695679 224.15065002]
[294.14984131 219.02627563]
[308.72741699 215.43106079]
[323.60461426 213.40574646]
[338.61276245 212.97326660]
[353.58187866 214.13854980]
[368.34231567 216.88836670]
[382.72683716 221.19157410]
[396.57244873 226.99940491]
[409.72229004 234.24604797]
[422.02734375 242.84941101]
[433.34820557 252.71199036]
[443.55654907 263.72204590]
[452.53677368 275.75485229]
[460.18707275 288.67401123]
[466.42077637 302.33319092]
[471.16726685 316.57757568]
[474.37277222 331.24581909]
[476.00094604 346.17166138]
[476.03335571 361.18603516]
[474.46960449 376.11877441]
[471.32745361 390.80068970]
[466.64248657 405.06542969]
[460.46777344 418.75140381]
[452.87329102 431.70346069]
[443.94509888 443.77490234]
[433.78436279 454.82891846]
[422.50619507 464.74026489]
[410.23840332 473.39666748]
[397.11996460 480.69998169]
[383.29953003 486.56753540]
[368.93371582 490.93276978]
[354.18527222 493.74627686]
[339.22134399 494.97613525]
[324.21145630 494.60845947]
[309.32568359 492.64736938]
[294.73269653 489.11511230]
[280.59783936 484.05169678]
[267.08129883 477.51449585]
[254.33618164 469.57760620]
[242.50694275 460.33090210]
[231.72760010 449.87921143]
[222.12028503 438.34094238]
[213.79386902 425.84683228]
[206.84268188 412.53845215]
[201.34548950 398.56658936]
[197.36459351 384.08956909]
[194.94508362 369.27139282]
[194.11439514 354.27999878]
[194.88191223 339.28521729]
[197.23895264 324.45700073]
[201.15881348 309.96331787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 156]
[4 155]
[5 154]
[7 152]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[17 146]
[18 145]
[19 144]
[38 143]
[40 141]
[41 140]
[43 139]
[44 138]
[45 137]
[46 132]
[47 131]
[48 130]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[68 115]
[69 114]
[70 113]
[71 112]
[72 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
