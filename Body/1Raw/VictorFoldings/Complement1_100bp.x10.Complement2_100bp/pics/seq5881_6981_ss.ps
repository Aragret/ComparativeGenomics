%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAA\
) } def
/len { sequence length } bind def

/coor [
[-40.37742615 697.28924561]
[-48.44218445 710.10479736]
[-60.23273849 719.60540771]
[-74.47013855 724.76049805]
[-89.61002350 725.01092529]
[-104.01012421 720.32952881]
[-116.10842896 711.22399902]
[-124.59259796 698.68218994]
[-128.54234314 684.06445312]
[-127.52922058 668.95642090]
[-121.66312408 654.99694824]
[-111.58036804 643.70019531]
[-98.37464905 636.29156494]
[-83.47842407 633.57470703]
[-81.25331116 618.74066162]
[-79.02819061 603.90661621]
[-76.80307770 589.07257080]
[-74.57795715 574.23852539]
[-83.61012268 562.45056152]
[-81.56485748 547.37506104]
[-69.13933563 537.98120117]
[-66.91421509 523.14715576]
[-64.68910217 508.31311035]
[-62.46398163 493.47906494]
[-60.23886490 478.64505005]
[-68.81495667 490.95156860]
[-80.05442047 500.88507080]
[-93.32160950 507.88375854]
[-107.86621094 511.55181885]
[-122.86564636 511.68179321]
[-137.47163391 508.26635742]
[-150.85812378 501.49865723]
[-162.26805115 491.76144409]
[-171.05613708 479.60537720]
[-176.72535706 465.71798706]
[-178.95509338 450.88461304]
[-177.61924744 435.94421387]
[-172.79336548 421.74172974]
[-164.75038147 409.08035278]
[-153.94515991 398.67617798]
[-140.98878479 391.11755371]
[-126.61401367 386.83203125]
[-111.63379669 386.06195068]
[-96.89533997 388.85083008]
[-83.23217773 395.04098511]
[-71.41703033 404.28231812]
[-62.11809540 416.05218506]
[-55.86127472 429.68493652]
[-53.00042725 444.40960693]
[-53.69751740 459.39447021]
[-46.42428970 446.27578735]
[-39.15105820 433.15707397]
[-31.87783051 420.03839111]
[-24.60460091 406.91967773]
[-27.63535690 395.20895386]
[-21.68327332 384.22003174]
[-9.45959282 380.10366821]
[-1.99185205 367.09472656]
[5.47588921 354.08578491]
[12.94363022 341.07681274]
[19.22099113 327.45352173]
[24.25790787 313.32446289]
[29.29482269 299.19543457]
[34.33174133 285.06640625]
[39.36865616 270.93737793]
[44.40557098 256.80834961]
[49.23157120 242.60591125]
[53.84557724 228.33317566]
[58.45958710 214.06044006]
[63.07359695 199.78770447]
[67.68760681 185.51496887]
[57.56856155 168.86807251]
[63.03910065 149.85290527]
[81.00326538 140.85467529]
[84.97536469 126.39014435]
[88.94746399 111.92562103]
[84.28909302 95.81115723]
[96.35169983 84.15484619]
[100.10800171 69.63278198]
[96.07307434 54.33474731]
[106.75100708 43.95057678]
[110.50730133 29.42851830]
[106.47237396 14.13048172]
[117.15030670 3.74630976]
[120.90660858 -10.77574921]
[119.51091003 -17.23822212]
[121.31723785 -22.62656212]
[124.99698639 -25.67098427]
[129.18399048 -40.07476425]
[133.26365662 -54.50931931]
[137.12796021 -69.00301361]
[140.88426208 -83.52507019]
[144.64056396 -98.04712677]
[146.42303467 -112.94084930]
[146.19970703 -127.93918610]
[145.97637939 -142.93751526]
[145.75305176 -157.93586731]
[145.52972412 -172.93420410]
[131.51020813 -178.88171387]
[121.12654877 -190.02171326]
[116.17780304 -204.42413330]
[117.52135468 -219.59367371]
[124.92443085 -232.90209961]
[137.10440063 -242.04367065]
[151.95101929 -245.43452454]
[166.89199829 -242.48721313]
[179.33874512 -233.71234131]
[187.13478088 -220.63021851]
[188.92939758 -205.50741577]
[184.41165161 -190.96403503]
[174.36428833 -179.51982117]
[160.52806091 -173.15753174]
[160.75138855 -158.15919495]
[160.97471619 -143.16084290]
[161.19804382 -128.16250610]
[161.42137146 -113.16417694]
[168.22773743 -126.53105164]
[178.78700256 -137.18478394]
[192.09274292 -144.10989380]
[206.87673950 -146.64636230]
[221.72985840 -144.55239868]
[235.23641968 -138.02760315]
[246.10903931 -127.69386292]
[253.31143188 -114.53614807]
[256.15707397 -99.80854797]
[254.37480164 -84.91481018]
[248.13442993 -71.27450562]
[238.03077698 -60.18775177]
[225.02684021 -52.71126175]
[210.36210632 -49.55764389]
[195.43429565 -51.02748489]
[181.66622925 -56.98068619]
[170.37020874 -66.84983063]
[162.62289429 -79.69425201]
[159.16262817 -94.29083252]
[155.40632629 -79.76876831]
[151.65002441 -65.24671173]
[153.01835632 -57.98382950]
[147.72817993 -50.53722382]
[148.98822021 -43.25477219]
[143.58778381 -35.88775635]
[139.40077209 -21.48397255]
[135.42866516 -7.01944876]
[131.67236328 7.50261068]
[135.97596741 21.76193237]
[125.02936554 33.18481827]
[121.27306366 47.70687866]
[125.57666779 61.96619797]
[114.63005829 73.38908386]
[110.87375641 87.91114807]
[116.16896057 98.28428650]
[113.16858673 109.53768158]
[103.41198730 115.89772034]
[99.43988800 130.36224365]
[95.46778870 144.82676697]
[102.89019775 152.49043274]
[106.43483734 162.46752930]
[105.52528381 172.93539429]
[100.39242554 182.01101685]
[92.02078247 188.08975220]
[81.96034241 190.12898254]
[77.34632874 204.40171814]
[72.73232269 218.67445374]
[68.11830902 232.94717407]
[63.50430298 247.21990967]
[64.51287842 253.75399780]
[62.38903046 259.02526855]
[58.53460312 261.84527588]
[53.49768448 275.97430420]
[48.46076965 290.10333252]
[43.42385483 304.23236084]
[38.38693619 318.36138916]
[33.35002136 332.49041748]
[45.24019241 323.34582520]
[59.90254593 320.18109131]
[74.50600433 323.60733032]
[86.23087311 332.96292114]
[92.81325531 346.44152832]
[92.98220825 361.44055176]
[86.70510101 375.06399536]
[75.19395447 384.68133545]
[60.67137527 388.43563843]
[45.94145584 385.60202026]
[33.84831238 376.72753906]
[26.72694206 363.52581787]
[25.95258331 348.54455566]
[18.48484230 361.55352783]
[11.01710033 374.56246948]
[3.54935908 387.57141113]
[4.02237558 405.97952271]
[-11.48590660 414.19293213]
[-18.75913620 427.31161499]
[-26.03236580 440.43029785]
[-33.30559540 453.54901123]
[-40.57882309 466.66769409]
[-45.40482330 480.87014771]
[-47.62994003 495.70419312]
[-49.85505676 510.53823853]
[-52.08017349 525.37231445]
[-54.30529022 540.20629883]
[-45.18277359 552.83239746]
[-47.65067673 567.84454346]
[-59.74391174 576.46362305]
[-61.96903229 591.29766846]
[-64.19414520 606.13171387]
[-66.41926575 620.96575928]
[-68.64437866 635.79980469]
[-55.20087433 642.76763916]
[-44.75003052 653.72479248]
[-38.42548370 667.48266602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[21 200]
[22 199]
[23 198]
[24 197]
[25 196]
[50 195]
[51 194]
[52 193]
[53 192]
[54 191]
[57 189]
[58 188]
[59 187]
[60 186]
[61 173]
[62 172]
[63 171]
[64 170]
[65 169]
[66 168]
[67 165]
[68 164]
[69 163]
[70 162]
[71 161]
[74 155]
[75 154]
[76 153]
[78 150]
[79 149]
[81 147]
[82 146]
[84 144]
[85 143]
[88 142]
[89 141]
[90 139]
[91 137]
[92 136]
[93 135]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
