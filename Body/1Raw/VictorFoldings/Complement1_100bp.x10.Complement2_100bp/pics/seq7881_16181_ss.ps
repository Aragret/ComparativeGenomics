%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[218.64094543 494.57217407]
[214.83148193 480.05505371]
[212.23385620 465.27288818]
[210.86579895 450.32672119]
[210.73669434 435.31863403]
[211.84738159 420.35113525]
[214.19029236 405.52648926]
[217.74942017 390.94595337]
[222.50045776 376.70910645]
[228.41093445 362.91326904]
[235.44049072 349.65261841]
[243.54110718 337.01776123]
[252.65742493 325.09500122]
[262.72720337 313.96578979]
[273.68164062 303.70614624]
[264.36676025 291.94891357]
[255.05186462 280.19165039]
[245.30589294 268.78918457]
[235.14234924 257.75732422]
[224.97880554 246.72543335]
[214.81526184 235.69355774]
[200.50117493 231.57574463]
[196.84106445 216.18373108]
[186.67752075 205.15184021]
[176.51397705 194.11996460]
[166.35041809 183.08808899]
[156.18687439 172.05621338]
[146.02333069 161.02433777]
[131.17704773 160.67314148]
[120.71260834 149.63003540]
[121.18163300 134.06027222]
[111.01808167 123.02838898]
[100.85453796 111.99651337]
[90.52787018 101.11717987]
[80.04036713 90.39279938]
[69.55286407 79.66841888]
[54.37239456 75.21153259]
[51.00575638 60.70239258]
[40.51825714 49.97801590]
[34.26512909 47.83093643]
[30.58712959 43.49857712]
[29.88409042 38.77472687]
[14.84304810 33.86783218]
[11.90989590 19.26489258]
[1.74634933 8.23301506]
[-13.29469395 3.32612205]
[-16.22784615 -11.27681923]
[-26.39139175 -22.30869675]
[-38.34825134 -13.23244953]
[-51.11373138 -5.33388662]
[-64.57221985 1.31546032]
[-78.60183716 6.65537214]
[-93.07551575 10.63748837]
[-107.86219025 13.22574615]
[-122.82794189 14.39670563]
[-137.83723450 14.13976097]
[-152.75411987 12.45724010]
[-167.44354248 9.36437988]
[-181.77244568 4.88919020]
[-195.61106873 -0.92779887]
[-208.83407593 -8.03390694]
[-221.32171631 -16.36478043]
[-232.96090698 -25.84496880]
[-243.64624023 -36.38861847]
[-253.28092957 -47.90023804]
[-261.77774048 -60.27558136]
[-269.05969238 -73.40256500]
[-275.06088257 -87.16231537]
[-279.72692871 -101.43020630]
[-283.01556396 -116.07703400]
[-284.89703369 -130.97015381]
[-285.35427856 -145.97467041]
[-284.38317871 -160.95471191]
[-281.99252319 -175.77461243]
[-278.20391846 -190.30015564]
[-273.05175781 -204.39979553]
[-266.58261108 -217.94583130]
[-258.85513306 -230.81559753]
[-249.93930054 -242.89253235]
[-239.91581726 -254.06727600]
[-228.87550354 -264.23861694]
[-216.91830444 -273.31442261]
[-204.15254211 -281.21252441]
[-190.69380188 -287.86135864]
[-176.66400146 -293.20077515]
[-162.19017029 -297.18234253]
[-147.40339661 -299.77008057]
[-132.43760681 -300.94049072]
[-117.42832947 -300.68298340]
[-102.51149750 -298.99993896]
[-87.82218933 -295.90652466]
[-73.49345398 -291.43081665]
[-59.65504456 -285.61334229]
[-46.43229294 -278.50674438]
[-33.94495010 -270.17541504]
[-22.30610466 -260.69479370]
[-11.62116146 -250.15075684]
[-1.98688805 -238.63879395]
[6.50946474 -226.26313782]
[13.79094982 -213.13587952]
[19.79162407 -199.37591553]
[24.45714378 -185.10784912]
[27.74525642 -170.46090698]
[29.62618065 -155.56773376]
[30.08288574 -140.56318665]
[29.11123466 -125.58318329]
[26.72002602 -110.76336670]
[22.93091583 -96.23796082]
[17.77822113 -82.13851166]
[11.30860424 -68.59270477]
[3.58065724 -55.72322464]
[-5.33563232 -43.64661407]
[-15.35951519 -32.47224426]
[-5.19596815 -21.44036674]
[9.11810970 -17.32254601]
[12.77822685 -1.93053186]
[22.94177437 9.10134506]
[37.25585175 13.21916485]
[40.91596985 28.61117935]
[51.24263763 39.49051285]
[61.73013687 50.21489334]
[76.16047668 53.90470505]
[80.27724457 69.18091583]
[90.76474762 79.90529633]
[101.25224304 90.62967682]
[106.34785461 91.87415314]
[110.38348389 95.88501740]
[111.88641357 101.83296967]
[122.04995728 112.86484528]
[132.21350098 123.89672089]
[147.76947021 124.70285034]
[157.91960144 136.03552246]
[157.05520630 150.86079407]
[167.21875000 161.89266968]
[177.38229370 172.92454529]
[187.54585266 183.95642090]
[197.70939636 194.98829651]
[207.87294006 206.02017212]
[222.91398621 210.92707825]
[225.84713745 225.53001404]
[236.01068115 236.56188965]
[246.17422485 247.59376526]
[256.33776855 258.62564087]
[259.55075073 243.97378540]
[272.94116211 237.21382141]
[286.63806152 243.32893372]
[290.54464722 257.81130981]
[281.78109741 269.98504639]
[266.80911255 270.87677002]
[276.12399292 282.63403320]
[285.43887329 294.39126587]
[297.93218994 286.07403564]
[311.06967163 278.81689453]
[324.76159668 272.66943359]
[338.91439819 267.67364502]
[353.43139648 263.86367798]
[368.21343994 261.26550293]
[383.15957642 259.89694214]
[398.16766357 259.76727295]
[413.13519287 260.87744141]
[427.95993042 263.21981812]
[442.54058838 266.77841187]
[456.77758789 271.52893066]
[470.57366943 277.43893433]
[483.83456421 284.46801758]
[496.46972656 292.56817627]
[508.39279175 301.68408203]
[519.52233887 311.75344849]
[529.78240967 322.70751953]
[539.10278320 334.47143555]
[547.41986084 346.96484375]
[554.67687988 360.10241699]
[560.82415771 373.79440308]
[565.81976318 387.94726562]
[569.62957764 402.46429443]
[572.22753906 417.24639893]
[573.59594727 432.19253540]
[573.72540283 447.20062256]
[572.61511230 462.16815186]
[570.27252197 476.99285889]
[566.71374512 491.57348633]
[561.96307373 505.81042480]
[556.05291748 519.60638428]
[549.02368164 532.86724854]
[540.92333984 545.50225830]
[531.80731201 557.42523193]
[521.73779297 568.55468750]
[510.78363037 578.81457520]
[499.01959229 588.13482666]
[486.52609253 596.45178223]
[473.38842773 603.70861816]
[459.69638062 609.85577393]
[445.54345703 614.85119629]
[431.02636719 618.66082764]
[416.24423218 621.25866699]
[401.29809570 622.62689209]
[386.28997803 622.75616455]
[371.32247925 621.64562988]
[356.49780273 619.30291748]
[341.91723633 615.74395752]
[327.68032837 610.99310303]
[313.88439941 605.08276367]
[300.62368774 598.05340576]
[287.98870850 589.95294189]
[276.06585693 580.83673096]
[264.93652344 570.76708984]
[254.67677307 559.81280518]
[245.35665894 548.04864502]
[237.03985596 535.55505371]
[229.78318787 522.41729736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 151]
[16 150]
[17 149]
[18 143]
[19 142]
[20 141]
[21 140]
[23 138]
[24 137]
[25 136]
[26 135]
[27 134]
[28 133]
[31 130]
[32 129]
[33 128]
[34 125]
[35 124]
[36 123]
[38 121]
[39 120]
[42 119]
[44 117]
[45 116]
[47 114]
[48 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
