%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[74.62857819 380.85284424]
[76.67764282 395.77761841]
[75.35374451 410.78411865]
[70.72328186 425.11962891]
[63.01851654 438.06506348]
[52.62591934 448.97109985]
[40.06677246 457.29067993]
[25.97104645 462.60653687]
[11.04576969 464.65197754]
[-3.96040869 463.32443237]
[-18.29478645 458.69049072]
[-31.23835564 450.98260498]
[-42.14187241 440.58737183]
[-50.45842361 428.02621460]
[-55.77085114 413.92919922]
[-57.81268692 399.00341797]
[-56.48151779 383.99755859]
[-51.84410477 369.66430664]
[-44.13306808 356.72259521]
[-33.73518753 345.82159424]
[-21.17201233 337.50808716]
[-7.07370949 332.19909668]
[7.85255575 330.16085815]
[22.85808945 331.49566650]
[27.47209930 317.22293091]
[32.08610916 302.95019531]
[36.70011520 288.67749023]
[41.31412506 274.40475464]
[45.92813492 260.13201904]
[33.93212128 247.78153992]
[29.82254601 230.97009277]
[34.81918716 214.30763245]
[47.63193130 202.41040039]
[64.79239655 198.62205505]
[68.97940826 184.21827698]
[73.05907440 169.78372192]
[77.03117371 155.31919861]
[81.00326538 140.85467529]
[84.97536469 126.39014435]
[88.94746399 111.92562103]
[84.28909302 95.81115723]
[96.35169983 84.15484619]
[100.10800171 69.63278198]
[103.75608826 55.08316422]
[105.53855133 40.18944550]
[105.53855133 25.18944740]
[105.53855133 10.18944740]
[105.53855133 -4.81055307]
[105.31522369 -19.80889130]
[104.86862183 -34.80223846]
[104.42201233 -49.79558945]
[103.97541046 -64.78894043]
[103.52880096 -79.78228760]
[88.53123474 -80.24178314]
[73.58877563 -81.60596466]
[58.75594330 -83.86986542]
[44.08686447 -87.02522278]
[29.63506508 -91.06052399]
[15.45327854 -95.96104431]
[1.59325290 -101.70890045]
[-11.89443779 -108.28311920]
[-24.96057701 -115.65971375]
[-37.55749130 -123.81175995]
[-49.63920975 -132.70951843]
[-61.16165161 -142.32052612]
[-72.08277130 -152.60971069]
[-82.36272430 -163.53953552]
[-91.96398926 -175.07008362]
[-100.85153198 -187.15933228]
[-108.99293518 -199.76312256]
[-116.35848236 -212.83549500]
[-122.92129517 -226.32873535]
[-128.65744019 -240.19361877]
[-133.54595947 -254.37954712]
[-137.56904602 -268.83474731]
[-140.71200562 -283.50650024]
[-142.96336365 -298.34121704]
[-144.31492615 -313.28485107]
[-144.76173401 -328.28277588]
[-144.30216980 -343.28036499]
[-142.93792725 -358.22280884]
[-140.67395020 -373.05563354]
[-137.51852417 -387.72470093]
[-133.48315430 -402.17648315]
[-128.58258057 -416.35824585]
[-122.83465576 -430.21823120]
[-116.26037598 -443.70590210]
[-108.88372040 -456.77200317]
[-100.73161316 -469.36886597]
[-91.83379364 -481.45056152]
[-82.22273254 -492.97296143]
[-71.93349457 -503.89401245]
[-61.00363541 -514.17395020]
[-49.47303009 -523.77514648]
[-37.38375092 -532.66259766]
[-24.77991486 -540.80395508]
[-11.70750999 -548.16943359]
[1.78576303 -554.73217773]
[15.65066814 -560.46826172]
[29.83661461 -565.35675049]
[44.29183960 -569.37976074]
[58.96359253 -572.52264404]
[73.79834747 -574.77392578]
[88.74195862 -576.12542725]
[103.73991394 -576.57214355]
[118.73747253 -576.11254883]
[133.67991638 -574.74822998]
[148.51274109 -572.48419189]
[163.18177795 -569.32867432]
[177.63354492 -565.29327393]
[191.81529236 -560.39257812]
[205.67526245 -554.64459229]
[219.16288757 -548.07025146]
[232.22895813 -540.69354248]
[244.82579041 -532.54138184]
[256.90744019 -523.64349365]
[268.42977905 -514.03240967]
[279.35079956 -503.74313354]
[289.63064575 -492.81320190]
[299.23181152 -481.28256226]
[308.11926270 -469.19323730]
[316.26052856 -456.58935547]
[323.62597656 -443.51693726]
[330.18865967 -430.02362061]
[335.92465210 -416.15869141]
[340.81304932 -401.97271729]
[344.83599854 -387.51748657]
[347.97882080 -372.84570312]
[350.23007202 -358.01095581]
[351.58148193 -343.06732178]
[352.02813721 -328.06936646]
[351.56845093 -313.07180786]
[350.20404053 -298.12936401]
[347.93994141 -283.29656982]
[344.78439331 -268.62753296]
[340.74887085 -254.17579651]
[335.84817505 -239.99407959]
[330.10012817 -226.13412476]
[323.52572632 -212.64653015]
[316.14892578 -199.58049011]
[307.99670410 -186.98368835]
[299.09878540 -174.90209961]
[289.48760986 -163.37979126]
[279.19827271 -152.45881653]
[268.26831055 -142.17901611]
[256.73764038 -132.57791138]
[244.64826965 -123.69052887]
[232.04435730 -115.54930878]
[218.97187805 -108.18394470]
[205.47854614 -101.62131500]
[191.61358643 -95.88536835]
[177.42759705 -90.99703217]
[162.97233582 -86.97415161]
[148.30055237 -83.83139801]
[133.46577454 -81.58023834]
[118.52215576 -80.22889709]
[118.96875763 -65.23554993]
[119.41536713 -50.24219513]
[119.86196899 -35.24884796]
[120.30857849 -20.25549698]
[123.10869598 -16.38659477]
[123.50811768 -10.71760273]
[120.53855133 -4.81055307]
[120.53855133 10.18944740]
[120.53855133 25.18944740]
[120.53855133 40.18944550]
[127.79655457 27.06232262]
[139.06100464 17.15716934]
[153.00859070 11.63763809]
[168.00073242 11.15215492]
[182.27616882 15.75775528]
[194.15786743 24.91337776]
[202.24995422 37.54342651]
[205.60177612 52.16413879]
[203.81958008 67.05789185]
[197.11271667 80.47497559]
[186.26913452 90.83916473]
[172.56268311 96.93288422]
[157.60362244 98.04026031]
[143.14930725 94.03118896]
[130.89781189 85.37664795]
[122.28843689 73.09337616]
[118.33246613 58.62283707]
[119.80876923 65.86454010]
[114.63005829 73.38908386]
[110.87375641 87.91114807]
[116.16896057 98.28428650]
[113.16858673 109.53768158]
[103.41198730 115.89772034]
[99.43988800 130.36224365]
[95.46778870 144.82676697]
[91.49569702 159.29129028]
[87.52359772 173.75581360]
[88.26882172 182.85978699]
[83.38319397 188.40527344]
[79.19618225 202.80906677]
[88.97859192 211.24018860]
[94.82446289 222.70321655]
[95.89681244 235.47917175]
[92.07155609 247.66714478]
[83.95066833 257.46710205]
[72.76778412 263.44573975]
[60.20087051 264.74603271]
[55.58686066 279.01873779]
[50.97285080 293.29147339]
[46.35884094 307.56420898]
[41.74483109 321.83694458]
[37.13082123 336.10968018]
[50.07812500 343.81130981]
[60.98667908 354.20126343]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 208]
[25 207]
[26 206]
[27 205]
[28 204]
[29 203]
[34 196]
[35 195]
[36 193]
[37 192]
[38 191]
[39 190]
[40 189]
[42 186]
[43 185]
[44 183]
[45 166]
[46 165]
[47 164]
[48 163]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
