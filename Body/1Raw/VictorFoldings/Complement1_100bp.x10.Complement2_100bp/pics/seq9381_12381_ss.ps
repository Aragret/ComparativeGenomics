%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[-12.38229752 430.57168579]
[-11.97869968 445.58413696]
[-13.35354424 460.53894043]
[-16.48753166 475.22616577]
[-21.33666229 489.43963623]
[-27.83286476 502.97976685]
[-35.88494110 515.65655518]
[-45.37985229 527.29199219]
[-56.18430710 537.72271729]
[-68.14662170 546.80230713]
[-81.09887695 554.40332031]
[-94.85923004 560.41906738]
[-109.23451233 564.76507568]
[-124.02291107 567.38031006]
[-139.01683044 568.22802734]
[-154.00578308 567.29644775]
[-168.77932739 564.59857178]
[-183.13008118 560.17224121]
[-196.85658264 554.07965088]
[-209.76612854 546.40631104]
[-221.67749023 537.26000977]
[-232.42344666 526.76898193]
[-241.85314941 515.08068848]
[-249.83421326 502.35906982]
[-256.25460815 488.78280640]
[-261.02416992 474.54244995]
[-264.07598877 459.83795166]
[-265.36718750 444.87567139]
[-264.87963867 429.86572266]
[-262.62020874 415.01879883]
[-258.62060547 400.54333496]
[-252.93698120 386.64251709]
[-245.64910889 373.51150513]
[-236.85931396 361.33462524]
[-226.69099426 350.28286743]
[-215.28689575 340.51132202]
[-202.80709839 332.15722656]
[-189.42681885 325.33779907]
[-175.33387756 320.14883423]
[-160.72613525 316.66311646]
[-145.80865479 314.92962646]
[-130.79084778 314.97268677]
[-115.88354492 316.79165649]
[-101.29602814 320.36105347]
[-87.23307037 325.63076782]
[-73.89210510 332.52676392]
[-65.47748566 320.10928345]
[-57.06286621 307.69177246]
[-59.03675842 295.75735474]
[-52.12802505 285.34326172]
[-39.58584595 282.33386230]
[-30.98728180 270.04302979]
[-22.38871765 257.75219727]
[-13.88189125 245.39768982]
[-5.46727276 232.98019409]
[2.94734597 220.56269836]
[11.36196423 208.14520264]
[19.77658272 195.72770691]
[19.47386360 192.21476746]
[20.85762787 188.38067627]
[24.06028557 185.01968384]
[28.85452461 182.95513916]
[30.25254631 168.12628174]
[44.70148468 161.68122864]
[53.66217804 149.65185547]
[62.62287521 137.62246704]
[71.58357239 125.59309387]
[80.54426575 113.56372070]
[89.50496674 101.53433990]
[98.01178741 89.17983246]
[106.05296326 76.51730347]
[114.09413910 63.85478210]
[122.13530731 51.19225693]
[107.51495361 54.54565811]
[94.10280609 47.82894135]
[88.03071594 34.11290359]
[92.07476044 19.66833115]
[104.38605499 11.09908676]
[119.33605194 12.32291412]
[130.08979797 22.78029633]
[131.73040771 37.69206238]
[141.04528809 25.93481064]
[150.36016846 14.17755890]
[159.67504883 2.42030787]
[161.93794250 -15.85428715]
[178.49304199 -21.67630959]
[187.63183594 -33.57094193]
[186.73310852 -46.43776321]
[194.58972168 -56.15668869]
[206.56568909 -57.86042786]
[209.07086182 -73.48204041]
[223.03901672 -78.65308380]
[232.35391235 -90.41033936]
[241.66879272 -102.16758728]
[250.53968811 -114.26333618]
[258.95431519 -126.68083191]
[267.36892700 -139.09832764]
[275.78353882 -151.51582336]
[284.19815063 -163.93331909]
[292.61279297 -176.35081482]
[281.28536987 -186.21221924]
[271.22924805 -197.36712646]
[262.59106445 -209.65286255]
[255.49679565 -222.89024353]
[250.04986572 -236.88626099]
[246.32972717 -251.43678284]
[244.39062500 -266.32965088]
[244.26083374 -281.34765625]
[245.94226074 -296.27178955]
[249.41038513 -310.88446045]
[254.61460876 -324.97250366]
[261.47906494 -338.33053589]
[269.90362549 -350.76370239]
[279.76547241 -362.09072876]
[290.92074585 -372.14642334]
[303.20678711 -380.78414917]
[316.44445801 -387.87796021]
[330.44067383 -393.32437134]
[344.99133301 -397.04394531]
[359.88427734 -398.98248291]
[374.90228271 -399.11172485]
[389.82635498 -397.42971802]
[404.43887329 -393.96105957]
[418.52673340 -388.75631714]
[431.88449097 -381.89135742]
[444.31738281 -373.46633911]
[455.64404297 -363.60406494]
[465.69931030 -352.44842529]
[474.33657837 -340.16204834]
[481.42987061 -326.92413330]
[486.87576294 -312.92770386]
[490.59481812 -298.37689209]
[492.53280640 -283.48388672]
[492.66146851 -268.46588135]
[490.97891235 -253.54185486]
[487.50970459 -238.92945862]
[482.30441284 -224.84179688]
[475.43896484 -211.48429871]
[467.01345825 -199.05174255]
[457.15078735 -187.72544861]
[445.99475098 -177.67057800]
[433.70806885 -169.03376770]
[420.46987915 -161.94097900]
[406.47326660 -156.49562073]
[391.92230225 -152.77711487]
[377.02923584 -150.83967590]
[362.01119995 -150.71157837]
[347.08724976 -152.39468384]
[332.47500610 -155.86444092]
[318.38751221 -161.07025146]
[305.03027344 -167.93620300]
[296.61566162 -155.51870728]
[288.20104980 -143.10121155]
[279.78640747 -130.68371582]
[271.37179565 -118.26621246]
[262.95718384 -105.84871674]
[277.95550537 -106.07234192]
[287.59915161 -94.58320618]
[284.77914429 -79.85066986]
[271.57434082 -72.73500824]
[257.71878052 -78.48163605]
[253.42604065 -92.85270691]
[244.11116028 -81.09545135]
[234.79627991 -69.33820343]
[232.95736694 -54.55754852]
[218.32293701 -48.54554749]
[216.70202637 -31.07157898]
[199.52647400 -24.43214035]
[190.38766479 -12.53750706]
[191.64772034 -0.50676107]
[184.13137817 9.47764683]
[171.43231201 11.73519039]
[162.11741638 23.49244118]
[152.80253601 35.24969482]
[143.48765564 47.00694275]
[134.79783630 59.23342896]
[126.75666046 71.89595795]
[118.71548462 84.55847931]
[110.67431641 97.22100830]
[125.65933990 96.55092621]
[135.64077759 107.74784088]
[133.26066589 122.55780792]
[120.27355957 130.06346130]
[106.25305176 124.73192596]
[101.53433990 110.49504089]
[92.57364655 122.52441406]
[83.61294556 134.55378723]
[74.65225220 146.58317566]
[65.69155884 158.61254883]
[56.73086166 170.64192200]
[54.69190979 186.33119202]
[40.88390350 191.91583252]
[32.19408035 204.14231873]
[23.77946091 216.55981445]
[15.36484146 228.97731018]
[6.95022297 241.39480591]
[-1.46439564 253.81230164]
[-3.68785191 262.67199707]
[-10.09788036 266.35076904]
[-18.69644356 278.64160156]
[-27.29500771 290.93243408]
[-28.46616745 309.30932617]
[-44.64537048 316.10638428]
[-53.05998993 328.52389526]
[-61.47460938 340.94137573]
[-50.12532425 350.77651978]
[-40.01896286 361.88497925]
[-31.29739952 374.11080933]
[-24.08307648 387.28237915]
[-18.47726631 401.21475220]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 205]
[47 204]
[48 203]
[51 201]
[52 200]
[53 199]
[54 197]
[55 196]
[56 195]
[57 194]
[58 193]
[62 192]
[64 190]
[65 189]
[66 188]
[67 187]
[68 186]
[69 185]
[70 179]
[71 178]
[72 177]
[73 176]
[81 175]
[82 174]
[83 173]
[84 172]
[86 169]
[87 168]
[90 166]
[92 164]
[93 163]
[94 162]
[95 156]
[96 155]
[97 154]
[98 153]
[99 152]
[100 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
