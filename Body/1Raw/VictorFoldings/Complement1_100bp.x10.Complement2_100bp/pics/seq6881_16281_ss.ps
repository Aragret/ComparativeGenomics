%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[139.55947876 637.43756104]
[152.33131409 629.08038330]
[150.32730103 614.21484375]
[148.32328796 599.34930420]
[146.31927490 584.48376465]
[144.31526184 569.61822510]
[142.31124878 554.75268555]
[140.30723572 539.88720703]
[138.30322266 525.02166748]
[126.33161926 522.50390625]
[115.68849945 516.42266846]
[107.40772247 507.35156250]
[102.29898834 496.15521240]
[100.86861420 483.90719604]
[103.26945496 471.78701782]
[109.28467560 460.96643066]
[118.34725952 452.49633789]
[129.59344482 447.20449829]
[128.25520325 432.26431274]
[126.91696930 417.32412720]
[125.57873535 402.38394165]
[116.73681641 390.39770508]
[123.21207428 375.96228027]
[121.87384033 361.02209473]
[120.53560638 346.08190918]
[119.19737244 331.14172363]
[117.85913849 316.20153809]
[116.52090454 301.26135254]
[115.07148743 286.33154297]
[113.51096344 271.41296387]
[111.95043945 256.49435425]
[110.38991547 241.57574463]
[108.82939148 226.65713501]
[107.04692841 211.76342773]
[105.04291534 196.89788818]
[103.03890228 182.03236389]
[101.03488922 167.16683960]
[99.03087616 152.30130005]
[89.66255951 140.72184753]
[95.48678589 126.01167297]
[93.48277283 111.14614868]
[88.68273926 125.35739899]
[80.66279602 138.03338623]
[69.87651825 148.45721436]
[56.93391418 156.03936768]
[42.56695557 160.35104370]
[27.58816338 161.14837646]
[12.84465981 158.38630676]
[-0.82974011 152.22100830]
[-12.66168118 143.00119019]
[-21.98200989 131.24826050]
[-28.26361656 117.62689972]
[-31.15124512 102.90747070]
[-30.48158836 87.92242432]
[-26.29251671 73.51924133]
[-18.82094193 60.51248932]
[-8.48941898 49.63776398]
[4.11775398 41.51008224]
[18.28758049 36.58910751]
[33.21868896 35.15314102]
[48.06665421 37.28339386]
[61.99174500 42.85939407]
[74.20643616 51.56578827]
[84.01992798 62.91018677]
[90.87722015 76.25100708]
[94.39062500 90.83483887]
[97.71288300 76.20737457]
[101.03514099 61.57991409]
[96.54652405 46.40879440]
[106.91054535 35.71130753]
[110.23280334 21.08384514]
[113.55506134 6.45638609]
[105.39689636 -6.81320572]
[108.97451782 -21.60020256]
[121.67531586 -29.29599380]
[124.99757385 -43.92345428]
[128.31983948 -58.55091476]
[131.64208984 -73.17837524]
[134.96435547 -87.80583191]
[137.18946838 -102.63987732]
[138.30511475 -117.59832764]
[139.30938721 -132.56468201]
[140.20219421 -147.53808594]
[141.09501648 -162.51148987]
[141.98782349 -177.48489380]
[127.71148682 -185.29002380]
[118.30179596 -198.49234009]
[115.60126495 -214.41928101]
[120.10051727 -229.87374878]
[130.85005188 -241.77589417]
[145.66014099 -247.77690125]
[146.32992554 -262.76193237]
[146.99971008 -277.74697876]
[138.13691711 -293.88800049]
[148.15112305 -308.29919434]
[148.59773254 -323.29254150]
[149.04432678 -338.28588867]
[134.79620361 -343.36981201]
[122.81769562 -352.60940552]
[114.28231812 -365.09951782]
[110.02629089 -379.61645508]
[110.46657562 -394.73800659]
[115.56003571 -408.98272705]
[124.80766296 -420.95504761]
[137.30348206 -429.48202515]
[151.82325745 -433.72833252]
[166.94451904 -433.27792358]
[181.18580627 -428.17492676]
[193.15193176 -418.91928101]
[201.67056274 -406.41775513]
[205.90713501 -391.89511108]
[205.44659424 -376.77416992]
[200.33404541 -362.53628540]
[191.07037354 -350.57638550]
[178.56314087 -342.06613159]
[164.03768921 -337.83929443]
[163.59107971 -322.84594727]
[163.14447021 -307.85260010]
[171.20854187 -298.83609009]
[170.95918274 -286.34121704]
[161.98474121 -277.07720947]
[161.31495667 -262.09216309]
[160.64517212 -247.10711670]
[173.17176819 -241.14451599]
[182.50910950 -230.82531738]
[187.22297668 -217.68533325]
[186.57057190 -203.69731140]
[180.61744690 -190.97467041]
[170.23246765 -181.45223999]
[156.96122742 -176.59207153]
[156.06842041 -161.61866760]
[155.17559814 -146.64526367]
[154.28279114 -131.67185974]
[157.02258301 -124.80780029]
[153.26358032 -116.48268127]
[152.14791870 -101.52423096]
[161.87358093 -112.94402313]
[175.97271729 -118.06403351]
[190.75984192 -115.54591370]
[202.36964417 -106.04788208]
[207.76733398 -92.05271149]
[205.54199219 -77.21870422]
[196.27531433 -65.42343140]
[182.38957214 -59.75014496]
[167.51446533 -61.68183517]
[155.53833008 -70.71356201]
[149.59181213 -84.48357391]
[146.26956177 -69.85611725]
[142.94729614 -55.22865295]
[139.62503052 -40.60119247]
[136.30278015 -25.97373390]
[144.43318176 -13.54666042]
[141.27230835 1.33499157]
[128.18252563 9.77864552]
[124.86026764 24.40610504]
[121.53800201 39.03356552]
[126.26425171 53.15843201]
[115.66260529 64.90217590]
[112.34033966 79.52963257]
[109.01808167 94.15709686]
[108.34829712 109.14213562]
[110.35231018 124.00765991]
[119.86396027 136.65040588]
[113.89640045 150.29728699]
[115.90041351 165.16282654]
[117.90442657 180.02835083]
[119.90843964 194.89387512]
[121.91246033 209.75939941]
[125.64458466 215.21676636]
[126.00612640 220.88830566]
[123.74800110 225.09661865]
[125.30852509 240.01521301]
[126.86904144 254.93382263]
[128.42956543 269.85241699]
[129.99009705 284.77102661]
[133.99531555 292.98052979]
[131.46109009 299.92312622]
[132.79933167 314.86331177]
[134.13755798 329.80349731]
[135.47579956 344.74368286]
[136.81402588 359.68386841]
[138.15226746 374.62405396]
[147.08990479 387.67892456]
[140.51892090 401.04571533]
[141.85716248 415.98590088]
[143.19538879 430.92608643]
[144.53363037 445.86627197]
[161.51414490 451.71655273]
[174.18617249 464.36895752]
[180.02813721 481.24020386]
[177.90625000 498.91436768]
[168.29428101 513.83428955]
[153.16874695 523.01763916]
[155.17276001 537.88317871]
[157.17677307 552.74871826]
[159.18078613 567.61425781]
[161.18479919 582.47973633]
[163.18881226 597.34527588]
[165.19282532 612.21081543]
[167.19683838 627.07635498]
[181.72578430 631.75317383]
[192.78080750 642.27691650]
[198.16690063 656.55810547]
[196.81468201 671.76123047]
[188.99263000 684.86761475]
[176.25379944 693.27508545]
[161.12751770 695.31420898]
[146.61709595 690.58026123]
[135.60360718 680.01306152]
[130.27378845 665.71075439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[6 196]
[7 195]
[8 194]
[9 193]
[18 187]
[19 186]
[20 185]
[21 184]
[23 182]
[24 181]
[25 180]
[26 179]
[27 178]
[28 177]
[29 175]
[30 174]
[31 173]
[32 172]
[33 171]
[34 168]
[35 167]
[36 166]
[37 165]
[38 164]
[40 162]
[41 161]
[66 160]
[67 159]
[68 158]
[70 156]
[71 155]
[72 154]
[75 151]
[76 150]
[77 149]
[78 148]
[79 147]
[80 136]
[81 135]
[82 133]
[83 132]
[84 131]
[85 130]
[91 123]
[92 122]
[93 121]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
