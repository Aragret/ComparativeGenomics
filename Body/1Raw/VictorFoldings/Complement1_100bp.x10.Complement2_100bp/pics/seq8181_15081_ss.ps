%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[92.62902069 423.93237305]
[92.18241119 408.93902588]
[91.73580933 393.94567871]
[91.28919983 378.95233154]
[90.84259796 363.95898438]
[90.39598846 348.96563721]
[81.80953979 340.44509888]
[81.31475830 327.95755005]
[89.72187805 318.17578125]
[87.46009064 315.47085571]
[86.39608765 311.53601074]
[87.09365845 306.94616699]
[89.83853149 302.50625610]
[90.28514099 287.51290894]
[82.93020630 274.56091309]
[91.07495880 260.99722290]
[91.52156830 246.00387573]
[91.96817017 231.01051331]
[81.59922791 220.37939453]
[81.83856964 205.16764832]
[93.05976105 194.36383057]
[85.70483398 181.41183472]
[93.84958649 167.84814453]
[94.29618835 152.85479736]
[94.18452454 137.85520935]
[93.51473999 122.87017822]
[92.84495544 107.88513947]
[90.95166016 93.00510406]
[87.84754944 78.32980347]
[84.74343872 63.65449905]
[74.31781006 51.75421143]
[79.25382996 37.70127869]
[74.41627502 29.95300102]
[76.21446991 22.78443909]
[73.32920074 8.06454659]
[70.44392395 -6.65534449]
[67.55865479 -21.37523651]
[63.58409500 -6.91138792]
[56.18179703 6.13491440]
[45.80441284 16.96588326]
[33.08652496 24.91920471]
[18.80583382 29.50852585]
[3.83561182 30.45320892]
[-10.90870857 27.69548798]
[-24.52550507 21.40399551]
[-36.18210602 11.96346283]
[-45.16570282 -0.04882047]
[-50.92694855 -13.89829826]
[-53.11354065 -28.73806953]
[-51.59177017 -43.66067886]
[-46.45468521 -57.75359726]
[-38.01642990 -70.15504456]
[-26.79300308 -80.10665894]
[-13.47072220 -86.99990082]
[1.13575161 -90.41324615]
[16.13322449 -90.13796997]
[30.60459900 -86.19090271]
[43.66493988 -78.81340027]
[54.51560593 -68.45661163]
[62.49307251 -55.75386047]
[67.10952759 -41.48188400]
[69.33464050 -56.31592941]
[71.55976105 -71.14997101]
[73.78487396 -85.98401642]
[72.05278778 -89.96570587]
[71.71208954 -93.89615631]
[72.57582855 -97.34425354]
[74.33621979 -99.98387909]
[76.60941315 -101.62422943]
[79.71352386 -116.29953003]
[82.81763458 -130.97483826]
[85.92174530 -145.65013123]
[84.63596344 -154.69361877]
[89.18286133 -160.52006531]
[92.50511932 -175.14753723]
[78.61520386 -169.48446655]
[65.45347595 -176.67953491]
[62.72227478 -191.42878723]
[72.43493652 -202.85963440]
[87.43164825 -202.54566956]
[96.65703583 -190.71995544]
[93.30922699 -206.18290710]
[104.44018555 -216.07992554]
[108.84118652 -230.41976929]
[113.24217987 -244.75962830]
[117.64318085 -259.09945679]
[122.04417419 -273.43933105]
[126.44517517 -287.77917480]
[112.67324066 -293.76361084]
[99.65795898 -301.25244141]
[87.56301880 -310.15145874]
[76.54051971 -320.34875488]
[66.72909546 -331.71606445]
[58.25211716 -344.11044312]
[51.21620178 -357.37603760]
[45.70983124 -371.34600830]
[41.80225372 -385.84466553]
[39.54261398 -400.68966675]
[38.95932388 -415.69430542]
[40.05972672 -430.66992188]
[42.82997513 -445.42816162]
[47.23523712 -459.78344727]
[53.22010803 -473.55520630]
[60.70932007 -486.57025146]
[69.60869598 -498.66491699]
[79.80631256 -509.68713379]
[91.17391968 -519.49822998]
[103.56855774 -527.97479248]
[116.83435822 -535.01031494]
[130.80448914 -540.51629639]
[145.30325317 -544.42340088]
[160.14833069 -546.68261719]
[175.15299988 -547.26544189]
[190.12858582 -546.16461182]
[204.88674927 -543.39392090]
[219.24188232 -538.98822021]
[233.01345825 -533.00292969]
[246.02828979 -525.51336670]
[258.12271118 -516.61358643]
[269.14459229 -506.41567993]
[278.95535278 -495.04776001]
[287.43157959 -482.65286255]
[294.46670532 -469.38687134]
[299.97222900 -455.41656494]
[303.87893677 -440.91769409]
[306.13769531 -426.07254028]
[306.72009277 -411.06784058]
[305.61877441 -396.09231567]
[302.84765625 -381.33422852]
[298.44152832 -366.97921753]
[292.45584106 -353.20782471]
[284.96585083 -340.19320679]
[276.06573486 -328.09906006]
[265.86746216 -317.07748413]
[254.49928284 -307.26708984]
[242.10412598 -298.79122925]
[228.83790588 -291.75650024]
[214.86744690 -286.25137329]
[200.36845398 -282.34509277]
[185.52325439 -280.08679199]
[170.51853943 -279.50485229]
[155.54301453 -280.60659790]
[140.78501892 -283.37817383]
[136.38401794 -269.03833008]
[131.98303223 -254.69847107]
[127.58203125 -240.35862732]
[123.18103027 -226.01878357]
[118.78002930 -211.67892456]
[122.44263458 -197.24166870]
[110.99688721 -186.31896973]
[107.13257599 -171.82527161]
[103.81031799 -157.19781494]
[100.59704590 -142.54602051]
[97.49293518 -127.87071991]
[94.38882446 -113.19541931]
[91.28471375 -98.52011871]
[88.61891937 -83.75889587]
[86.39379883 -68.92485809]
[84.16868591 -54.09081268]
[81.94356537 -39.25676727]
[82.27854156 -24.26050758]
[85.16381836 -9.54061699]
[88.04908752 5.17927456]
[90.93436432 19.89916611]
[93.92913818 34.59717178]
[104.13274384 45.44778061]
[99.41874695 60.55038834]
[102.52285004 75.22569275]
[105.62696075 89.90099335]
[111.33820343 76.03081512]
[122.78159332 66.33293915]
[137.40065002 62.97388458]
[151.92942810 66.70407867]
[163.12217712 76.69018555]
[168.47840881 90.70127869]
[166.80151367 105.60725403]
[158.46612549 118.07807159]
[145.33438110 125.32772064]
[130.33996582 125.73661041]
[116.83264160 119.21339417]
[107.82999420 107.21535492]
[108.49977875 122.20039368]
[109.16956329 137.18542480]
[121.06401825 128.04638672]
[135.66119385 131.49929810]
[142.20059204 144.99877930]
[135.86161804 158.59353638]
[121.31712341 162.26200867]
[109.28954315 153.30140686]
[108.84293365 168.29475403]
[116.16592407 182.31918335]
[108.05311584 194.81044006]
[118.61135864 206.26300049]
[117.94485474 221.46202087]
[106.96152496 231.45712280]
[106.51491547 246.45046997]
[106.06830597 261.44381714]
[113.39129639 275.46826172]
[105.27848816 287.95950317]
[104.83188629 302.95285034]
[104.72021484 317.95245361]
[114.52802277 333.53732300]
[105.38934326 348.51901245]
[105.83594513 363.51235962]
[106.28255463 378.50570679]
[106.72915649 393.49908447]
[107.17576599 408.49243164]
[107.62236786 423.48577881]
[114.13761902 439.13784790]
[100.90082550 449.73141479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[3 206]
[4 205]
[5 204]
[6 203]
[9 201]
[13 200]
[14 199]
[16 197]
[17 196]
[18 195]
[21 192]
[23 190]
[24 189]
[25 183]
[26 182]
[27 181]
[28 169]
[29 168]
[30 167]
[32 165]
[34 164]
[35 163]
[36 162]
[37 161]
[61 160]
[62 159]
[63 158]
[64 157]
[69 156]
[70 155]
[71 154]
[72 153]
[74 152]
[75 151]
[81 150]
[83 148]
[84 147]
[85 146]
[86 145]
[87 144]
[88 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
