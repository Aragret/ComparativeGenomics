%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[110.71245575 963.74957275]
[95.91316223 961.27935791]
[81.27732086 957.97583008]
[66.85181427 953.84954834]
[52.68286514 948.91375732]
[38.81584930 943.18426514]
[25.29519081 936.67944336]
[12.16420174 929.42004395]
[-0.53505725 921.42944336]
[-12.76190567 912.73315430]
[-24.47717667 903.35906982]
[-35.64334106 893.33715820]
[-46.22463226 882.69964600]
[-56.18715668 871.48046875]
[-65.49900055 859.71569824]
[-74.13032532 847.44287109]
[-82.05349731 834.70141602]
[-89.24312592 821.53216553]
[-95.67618561 807.97717285]
[-101.33206940 794.07995605]
[-106.19265747 779.88507080]
[-110.24237061 765.43786621]
[-113.46825409 750.78472900]
[-115.85997009 735.97253418]
[-117.40984344 721.04876709]
[-118.11292267 706.06121826]
[-117.96694946 691.05786133]
[-116.97239685 676.08685303]
[-115.13245392 661.19604492]
[-112.45300293 646.43316650]
[-108.94262695 631.84558105]
[-104.61257935 617.47991943]
[-99.47673035 603.38226318]
[-93.55152893 589.59771729]
[-86.85595703 576.17047119]
[-79.41146088 563.14355469]
[-71.24188232 550.55871582]
[-62.37340164 538.45617676]
[-52.83441925 526.87475586]
[-42.65549469 515.85156250]
[-31.86923790 505.42190552]
[-20.51019478 495.61917114]
[-8.61475277 486.47479248]
[3.77898002 478.01803589]
[16.63130569 470.27603149]
[29.90105057 463.27352905]
[43.54571152 457.03295898]
[57.52157974 451.57437134]
[71.78388214 446.91519165]
[86.28693390 443.07037354]
[100.98428345 440.05221558]
[115.82884216 437.87042236]
[114.49060822 422.93023682]
[113.15237427 407.99005127]
[111.81414032 393.04986572]
[102.97222137 381.06362915]
[109.44747925 366.62820435]
[108.10924530 351.68801880]
[106.77100372 336.74783325]
[93.59377289 333.96286011]
[81.71948242 327.57147217]
[72.11392212 318.08276367]
[65.56138611 306.25817871]
[62.60062790 293.05038452]
[63.48058319 279.52661133]
[68.13946533 266.78231812]
[76.20899200 255.85244751]
[87.04350281 247.62750244]
[99.77159119 242.78089905]
[98.87877655 227.80749512]
[97.98595428 212.83409119]
[97.09313965 197.86067200]
[88.25681305 189.59957886]
[87.39044952 177.13229370]
[95.50260162 167.10453796]
[94.83281708 152.11950684]
[94.16303253 137.13446045]
[93.49324036 122.14942932]
[92.82345581 107.16439056]
[89.34608459 99.89249420]
[92.25693512 91.95159912]
[91.81033325 76.95825195]
[91.25212097 61.96863937]
[90.58233643 46.98360062]
[89.91255188 31.99856186]
[89.01972961 17.02515602]
[80.27745056 3.83868027]
[87.04671478 -9.42881393]
[78.30443573 -22.61528969]
[85.07369232 -35.88278198]
[83.95804596 -50.84123611]
[82.84239197 -65.79969025]
[81.72674561 -80.75814056]
[66.98748016 -84.11155701]
[53.89230347 -91.66191101]
[43.60563660 -102.73782349]
[37.04216003 -116.35443878]
[34.78549194 -131.30097961]
[37.03629684 -146.24839783]
[43.59443283 -159.86758423]
[53.87675476 -170.94752502]
[66.96896362 -178.50302124]
[81.70691681 -181.86221313]
[96.78012085 -180.72642517]
[110.84826660 -175.19664001]
[122.66044617 -165.76457214]
[131.16630554 -153.26890564]
[135.60952759 -138.82075500]
[135.59501648 -123.70482635]
[131.12405396 -109.26522827]
[122.59420776 -96.78591919]
[110.76394653 -87.37654877]
[96.68519592 -81.87379456]
[97.80084991 -66.91533661]
[98.91649628 -51.95688629]
[100.03214264 -36.99843216]
[108.69462585 -24.88188553]
[102.00516510 -10.54446220]
[110.66764832 1.57208383]
[103.97818756 15.90950680]
[106.94826508 19.64951706]
[107.60042572 25.29502106]
[104.89759064 31.32877541]
[105.56737518 46.31381607]
[106.23715973 61.29885483]
[109.67619324 67.84062958]
[106.80368042 76.51164246]
[107.25028992 91.50498962]
[107.80849457 106.49460602]
[108.47827911 121.47964478]
[109.14807129 136.46467590]
[109.81785583 151.44972229]
[110.48764038 166.43475342]
[120.75511932 181.72070312]
[112.06655121 196.96786499]
[112.95936584 211.94126892]
[113.85218048 226.91467285]
[114.74499512 241.88807678]
[130.75042725 246.43438721]
[144.21134949 256.17053223]
[153.51115417 269.90551758]
[157.54039001 285.96948242]
[155.82913208 302.41659546]
[148.60168457 317.26083374]
[136.74739075 328.71575928]
[121.71118927 335.40960693]
[123.04942322 350.34979248]
[124.38765717 365.28997803]
[133.32530212 378.34481812]
[126.75432587 391.71163940]
[128.09255981 406.65182495]
[129.43078613 421.59201050]
[130.76902771 436.53219604]
[145.76502991 436.04107666]
[160.76478577 436.39916992]
[175.72027588 437.60531616]
[190.58357239 439.65563965]
[205.30705261 442.54354858]
[219.84358215 446.25982666]
[234.14656067 450.79257202]
[248.17021179 456.12722778]
[261.86956787 462.24676514]
[275.20080566 469.13150024]
[288.12115479 476.75946045]
[300.58926392 485.10617065]
[312.56518555 494.14489746]
[324.01055908 503.84667969]
[334.88873291 514.18041992]
[345.16482544 525.11309814]
[354.80596924 536.60961914]
[363.78121948 548.63311768]
[372.06188965 561.14520264]
[379.62142944 574.10571289]
[386.43560791 587.47314453]
[392.48260498 601.20471191]
[397.74304199 615.25634766]
[402.20007324 629.58306885]
[405.83944702 644.13903809]
[408.64947510 658.87762451]
[410.62118530 673.75152588]
[411.74822998 688.71319580]
[412.02700806 703.71466064]
[411.45663452 718.70782471]
[410.03894043 733.64471436]
[407.77844238 748.47753906]
[404.68240356 763.15863037]
[400.76074219 777.64111328]
[396.02600098 791.87854004]
[390.49334717 805.82525635]
[384.18054199 819.43664551]
[377.10778809 832.66906738]
[369.29769897 845.48016357]
[360.77536011 857.82885742]
[351.56802368 869.67565918]
[341.70523071 880.98254395]
[331.21850586 891.71331787]
[320.14151001 901.83367920]
[308.50967407 911.31109619]
[296.36029053 920.11529541]
[283.73226929 928.21801758]
[270.66604614 935.59332275]
[257.20349121 942.21759033]
[243.38775635 948.06964111]
[229.26304626 953.13067627]
[214.87463379 957.38446045]
[200.26861572 960.81744385]
[185.49176025 963.41857910]
[170.59141541 965.17956543]
[155.61531067 966.09472656]
[140.61141968 966.16113281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 153]
[53 152]
[54 151]
[55 150]
[57 148]
[58 147]
[59 146]
[69 138]
[70 137]
[71 136]
[72 135]
[75 133]
[76 132]
[77 131]
[78 130]
[79 129]
[81 128]
[82 127]
[83 125]
[84 124]
[85 123]
[86 120]
[88 118]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
