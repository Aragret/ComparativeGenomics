%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[136.52317810 445.99688721]
[135.17729187 431.04510498]
[135.30343628 416.03341675]
[136.90039062 401.10638428]
[139.95277405 386.40774536]
[144.43119812 372.07907104]
[150.29254150 358.25839233]
[157.48033142 345.07876587]
[165.92535400 332.66714478]
[175.54627991 321.14306641]
[186.25044250 310.61749268]
[197.93476868 301.19180298]
[189.70596313 288.65042114]
[181.47715759 276.10900879]
[173.24833679 263.56759644]
[165.01953125 251.02621460]
[156.79072571 238.48481750]
[150.49307251 234.61682129]
[148.53439331 225.69487000]
[140.49320984 213.03233337]
[138.93081665 227.95074463]
[129.63424683 239.72248840]
[115.48417664 244.69996643]
[100.86513519 241.34085083]
[90.30699921 230.68600464]
[87.08132172 216.03694153]
[92.18762207 201.93284607]
[104.04364014 192.74400330]
[118.97567749 191.31770325]
[132.35705566 198.09605408]
[126.07969666 184.47273254]
[119.80233765 170.84941101]
[117.22229004 169.75328064]
[114.92098236 167.56912231]
[113.31500244 164.39796448]
[112.77670288 160.48966980]
[113.58389282 156.22323608]
[108.12853241 142.25044250]
[102.67317963 128.27764893]
[97.31228638 123.19013977]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.21177673 63.08579636]
[72.96505737 49.03332520]
[67.71833801 34.98085403]
[62.47161865 20.92838097]
[55.27587891 34.08973694]
[40.92062378 38.44021988]
[27.62919807 31.48766708]
[23.01552963 17.21482468]
[29.72254181 3.79781961]
[43.90814972 -1.07747543]
[57.44555664 5.38102579]
[53.47346115 -9.08349800]
[49.50136566 -23.54802132]
[45.52926636 -38.01254654]
[42.69003296 -23.28370476]
[36.57400894 -9.58719921]
[27.50203514 2.35847974]
[15.95000362 11.92668629]
[2.52391410 18.61549187]
[-12.07192898 22.07401466]
[-27.07185555 22.12082672]
[-41.68899918 18.75347328]
[-55.15657806 12.14859867]
[-66.76810455 2.65268087]
[-75.91446686 -9.23614216]
[-82.11585236 -22.89420700]
[-85.04696655 -37.60504150]
[-84.55403900 -52.59693909]
[-80.66292572 -67.08345795]
[-73.57775116 -80.30466461]
[-63.67019272 -91.56700134]
[-51.45997238 -100.27967072]
[-37.58761978 -105.98561096]
[-22.78084946 -108.38552094]
[-7.81639433 -107.35348511]
[6.52073956 -102.94365692]
[19.47845459 -95.38735962]
[30.37701607 -85.08098602]
[38.64470673 -72.56518555]
[43.84821320 -58.49489975]
[45.40873337 -73.41350555]
[35.77913666 -82.83079529]
[33.36677933 -95.88418579]
[38.83203506 -107.76749420]
[49.97604752 -114.23591614]
[51.75851440 -129.12963867]
[52.65132904 -144.10304260]
[52.65132904 -159.10304260]
[52.65132904 -174.10304260]
[52.65132904 -189.10304260]
[52.65132904 -204.10304260]
[44.91403198 -217.90321350]
[52.65132904 -230.63047791]
[52.65132904 -245.63047791]
[38.59414291 -251.41528320]
[27.82427025 -262.14273071]
[21.98403931 -276.17700195]
[21.96404266 -291.37789917]
[27.76733017 -305.42749023]
[38.50894165 -316.18322754]
[52.55086136 -322.00500488]
[67.75180054 -322.00500488]
[81.79371643 -316.18322754]
[92.53533173 -305.42749023]
[98.33861542 -291.37789917]
[98.31861877 -276.17700195]
[92.47839355 -262.14273071]
[81.70851898 -251.41528320]
[67.65132904 -245.63047791]
[67.65132904 -230.63047791]
[75.38863373 -217.90321350]
[67.65132904 -204.10304260]
[67.65132904 -189.10304260]
[67.65132904 -174.10304260]
[67.65132904 -159.10304260]
[67.65132904 -144.10304260]
[77.52636719 -155.39390564]
[92.12601471 -158.83634949]
[106.00495148 -153.14643860]
[113.98668671 -140.44636536]
[113.09422302 -125.47293854]
[103.66043854 -113.81088257]
[89.20388794 -109.80984497]
[75.11651611 -114.96212769]
[66.65222931 -127.34716797]
[64.86976624 -112.45345306]
[75.81977081 -99.68880463]
[74.11624146 -82.61798859]
[60.32733917 -71.85298157]
[58.76681519 -56.93437576]
[59.99379349 -41.98464203]
[63.96588898 -27.52011871]
[67.93798065 -13.05559444]
[71.91007996 1.40892959]
[76.52409363 15.68166256]
[81.77080536 29.73413467]
[87.01752472 43.78660583]
[92.26424408 57.83907700]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.64597321 122.82228851]
[122.10133362 136.79508972]
[127.55669403 150.76788330]
[133.42564392 164.57205200]
[139.70301819 178.19537354]
[145.98037720 191.81869507]
[153.15574646 204.99116516]
[161.19691467 217.65368652]
[169.33212280 230.25599670]
[177.56092834 242.79740906]
[185.78974915 255.33880615]
[194.01855469 267.88021851]
[202.24736023 280.42160034]
[210.47616577 292.96301270]
[223.77429199 285.99691772]
[237.69119263 280.36782837]
[252.09283447 276.12994385]
[266.84051514 273.32409668]
[281.79220581 271.97732544]
[296.80389404 272.10253906]
[311.73104858 273.69860840]
[326.42984009 276.75012207]
[340.75878906 281.22769165]
[354.57983398 287.08819580]
[367.75988770 294.27517700]
[380.17199707 302.71948242]
[391.69668579 312.33969116]
[402.22286987 323.04324341]
[411.64926147 334.72698975]
[419.88500977 347.27844238]
[426.85086060 360.57672119]
[432.47967529 374.49374390]
[436.71725464 388.89544678]
[439.52279663 403.64318848]
[440.86929321 418.59490967]
[440.74374390 433.60659790]
[439.14739990 448.53372192]
[436.09558105 463.23245239]
[431.61773682 477.56130981]
[425.75695801 491.38223267]
[418.56970215 504.56213379]
[410.12515259 516.97412109]
[400.50469971 528.49859619]
[389.80096436 539.02453613]
[378.11700439 548.45068359]
[365.56539917 556.68621826]
[352.26696777 563.65179443]
[338.34985352 569.28033447]
[323.94805908 573.51763916]
[309.20025635 576.32287598]
[294.24850464 577.66906738]
[279.23681641 577.54321289]
[264.30975342 575.94659424]
[249.61105347 572.89447021]
[235.28230286 568.41632080]
[221.46150208 562.55529785]
[208.28172302 555.36773682]
[195.86993408 546.92297363]
[184.34565735 537.30224609]
[173.81987000 526.59832764]
[164.39396667 514.91418457]
[156.15870667 502.36239624]
[149.19340515 489.06384277]
[143.56515503 475.14660645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 160]
[13 159]
[14 158]
[15 157]
[16 156]
[17 155]
[19 154]
[20 153]
[30 152]
[31 151]
[32 150]
[37 149]
[38 148]
[39 147]
[41 146]
[43 144]
[44 143]
[45 142]
[46 141]
[47 140]
[48 139]
[55 138]
[56 137]
[57 136]
[58 135]
[84 134]
[85 133]
[89 130]
[90 129]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
