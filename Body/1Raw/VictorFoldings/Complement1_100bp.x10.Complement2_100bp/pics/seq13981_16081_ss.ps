%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[103.84111786 739.62670898]
[89.50492096 735.19342041]
[75.50874329 729.78161621]
[61.91928101 723.41705322]
[48.80130005 716.13012695]
[36.21730804 707.95556641]
[24.22727966 698.93225098]
[12.88835049 689.10327148]
[2.25455666 678.51538086]
[-7.62342691 667.21911621]
[-16.69852638 655.26824951]
[-24.92749596 642.71972656]
[-32.27111816 629.63342285]
[-38.69439697 616.07159424]
[-44.16672516 602.09899902]
[-48.66201782 587.78210449]
[-52.15886307 573.18920898]
[-54.64058685 558.38983154]
[-56.09536743 543.45446777]
[-56.51627350 528.45440674]
[-55.90129471 513.46093750]
[-54.25336456 498.54571533]
[-51.58033371 483.77969360]
[-47.89494324 469.23324585]
[-43.21475601 454.97573853]
[-37.56207275 441.07510376]
[-30.96383667 427.59756470]
[-23.45148468 414.60736084]
[-15.06082153 402.16641235]
[-5.83183050 390.33398438]
[4.19150591 379.16647339]
[14.96142292 368.71707153]
[26.42659569 359.03564453]
[38.53238678 350.16824341]
[51.22110748 342.15719604]
[64.43228912 335.04064941]
[78.10296631 328.85250854]
[92.16800690 323.62225342]
[106.56037140 319.37484741]
[121.21147919 316.13052368]
[118.98636627 301.29647827]
[116.76124573 286.46243286]
[114.53613281 271.62838745]
[104.10951996 266.99676514]
[97.14134979 257.81195068]
[95.45491028 246.28591919]
[99.58361816 235.26525879]
[108.61012268 227.52841187]
[106.82765961 212.63468933]
[105.04518890 197.74098206]
[103.26272583 182.84725952]
[101.48025513 167.95355225]
[99.58696747 153.07351685]
[97.58295441 138.20797729]
[95.57894135 123.34245300]
[93.57492828 108.47692871]
[90.47081757 93.80162048]
[86.28380585 79.39784241]
[82.09679413 64.99405670]
[77.90978241 50.59027481]
[73.18964386 36.35228729]
[67.94293213 22.29981613]
[55.86734390 12.07774353]
[58.66412735 -2.55192685]
[53.41740799 -16.60439873]
[48.17069244 -30.65686989]
[42.92397308 -44.70933914]
[28.34093285 -41.12444687]
[13.44031239 -39.25681686]
[-1.57637370 -39.13171005]
[-16.50604248 -40.75081635]
[-31.14678764 -44.09223938]
[-45.30060959 -49.11079407]
[-58.77609253 -55.73860168]
[-71.39099884 -63.88603592]
[-82.97472382 -73.44290924]
[-93.37061310 -84.27997589]
[-102.43807220 -96.25067902]
[-110.05446625 -109.19313049]
[-116.11681366 -122.93228912]
[-120.54310608 -137.28236389]
[-123.27349854 -152.04925537]
[-124.27104950 -167.03329468]
[-123.52228546 -182.03182983]
[-121.03732300 -196.84201050]
[-116.84976959 -211.26354980]
[-111.01625824 -225.10142517]
[-103.61568451 -238.16848755]
[-94.74812317 -250.28800964]
[-84.53350067 -261.29611206]
[-73.10996246 -271.04388428]
[-60.63199615 -279.39953613]
[-47.26835251 -286.25006104]
[-33.19976425 -291.50277710]
[-18.61648369 -295.08670044]
[-3.71573830 -296.95333862]
[11.30095673 -297.07745361]
[26.23051643 -295.45733643]
[40.87104034 -292.11492920]
[55.02452469 -287.09545898]
[68.49956512 -280.46673584]
[81.11392975 -272.31845093]
[92.69701385 -262.76080322]
[103.09217834 -251.92304993]
[112.15883636 -239.95175171]
[119.77437592 -227.00878906]
[125.83580017 -213.26922607]
[130.26113892 -198.91885376]
[132.99053955 -184.15177917]
[133.98710632 -169.16766357]
[133.23733521 -154.16918945]
[130.75138855 -139.35917664]
[126.56286621 -124.93791199]
[120.72843170 -111.10042572]
[113.32698059 -98.03386688]
[104.45861053 -85.91493225]
[94.24325562 -74.90752411]
[82.81906891 -65.16049957]
[70.34054565 -56.80568314]
[56.97644424 -49.95605850]
[62.22316360 -35.90358734]
[67.46987915 -21.85111618]
[72.71659851 -7.79864502]
[84.41690826 1.41830099]
[81.99539948 17.05309868]
[87.24211884 31.10556984]
[95.74870300 18.75089264]
[110.70025635 17.54628372]
[121.07505035 28.37973404]
[119.22517395 43.26522827]
[106.51428223 51.22973633]
[92.31356049 46.40326691]
[96.50057220 60.80704880]
[100.68758392 75.21083069]
[104.87459564 89.61460876]
[109.99147034 75.51434326]
[121.40909576 65.78614044]
[136.14292908 62.97293854]
[150.34158325 67.81009674]
[160.29356384 79.03319550]
[163.39746094 93.70854950]
[158.84190369 108.00004578]
[147.81770325 118.17192841]
[133.20657349 121.56528473]
[118.82782745 117.29311371]
[108.44045258 106.47290802]
[110.44446564 121.33843994]
[112.44847870 136.20396423]
[114.45249176 151.06950378]
[118.70036316 159.15611267]
[116.37397766 166.17108154]
[118.15644073 181.06478882]
[119.93891144 195.95851135]
[121.72137451 210.85223389]
[123.50383759 225.74594116]
[138.83285522 236.87857056]
[141.11756897 255.36351013]
[129.37017822 269.40325928]
[131.59529114 284.23730469]
[133.82040405 299.07135010]
[136.04553223 313.90539551]
[151.00372314 312.70831299]
[166.00886536 312.54608154]
[180.98945618 313.41943359]
[195.87408447 315.32427979]
[210.59182739 318.25146484]
[225.07257080 322.18710327]
[239.24726868 327.11239624]
[253.04838562 333.00387573]
[266.41015625 339.83346558]
[279.26892090 347.56866455]
[291.56338501 356.17257690]
[303.23495483 365.60415649]
[314.22799683 375.81854248]
[324.49014282 386.76699829]
[333.97250366 398.39736938]
[342.62985229 410.65423584]
[350.42098999 423.47918701]
[357.30871582 436.81109619]
[363.26025391 450.58642578]
[368.24725342 464.73956299]
[372.24588013 479.20300293]
[375.23715210 493.90786743]
[377.20678711 508.78405762]
[378.14541626 523.76068115]
[378.04852295 538.76641846]
[376.91659546 553.72967529]
[374.75503540 568.57922363]
[371.57412720 583.24420166]
[367.38903809 597.65484619]
[362.21972656 611.74237061]
[356.09082031 625.43969727]
[349.03149414 638.68157959]
[341.07540894 651.40484619]
[332.26049805 663.54888916]
[322.62875366 675.05584717]
[312.22607422 685.87084961]
[301.10205078 695.94244385]
[289.30966187 705.22253418]
[276.90515137 713.66699219]
[263.94757080 721.23547363]
[250.49871826 727.89196777]
[236.62268066 733.60473633]
[222.38555908 738.34661865]
[207.85520935 742.09490967]
[193.10089111 744.83184814]
[178.19290161 746.54425049]
[163.20228577 747.22412109]
[148.20048523 746.86816406]
[133.25900269 745.47802734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 161]
[41 160]
[42 159]
[43 158]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[53 149]
[54 148]
[55 147]
[56 146]
[57 135]
[58 134]
[59 133]
[60 132]
[61 126]
[62 125]
[64 123]
[65 122]
[66 121]
[67 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
