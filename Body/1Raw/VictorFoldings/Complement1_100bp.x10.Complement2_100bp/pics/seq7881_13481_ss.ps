%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[16.86518097 433.17514038]
[7.49130583 444.89099121]
[-2.55398822 456.03649902]
[-13.23607349 466.57327271]
[-24.51812744 476.46496582]
[-36.36125565 485.67749023]
[-48.72463608 494.17910767]
[-61.56564713 501.94049072]
[-74.84001923 508.93487549]
[-88.50199890 515.13818359]
[-102.50449371 520.52893066]
[-116.79921722 525.08868408]
[-131.33691406 528.80163574]
[-146.06744385 531.65502930]
[-160.94006348 533.63897705]
[-175.90345764 534.74664307]
[-190.90608215 534.97424316]
[-205.89620972 534.32098389]
[-220.82215881 532.78912354]
[-235.63247681 530.38397217]
[-250.27610779 527.11370850]
[-264.70257568 522.98974609]
[-278.86215210 518.02618408]
[-292.70602417 512.24017334]
[-306.18646240 505.65170288]
[-319.25701904 498.28344727]
[-331.87261963 490.16079712]
[-343.98974609 481.31176758]
[-355.56668091 471.76687622]
[-366.56350708 461.55899048]
[-376.94229126 450.72332764]
[-386.66723633 439.29724121]
[-395.70486450 427.32012939]
[-404.02401733 414.83325195]
[-411.59600830 401.87963867]
[-418.39471436 388.50399780]
[-424.39672852 374.75238037]
[-429.58132935 360.67224121]
[-433.93066406 346.31210327]
[-437.42974854 331.72146606]
[-440.06649780 316.95062256]
[-441.83184814 302.05047607]
[-442.71969604 287.07241821]
[-442.72695923 272.06808472]
[-441.85366821 257.08917236]
[-440.10281372 242.18731689]
[-437.48037720 227.41392517]
[-433.99548340 212.81988525]
[-429.66009521 198.45552063]
[-424.48916626 184.37036133]
[-418.50048828 170.61294556]
[-411.71478271 157.23069763]
[-404.15539551 144.26974487]
[-395.84835815 131.77479553]
[-386.82235718 119.78889465]
[-377.10848999 108.35337067]
[-366.74026489 97.50763702]
[-355.75335693 87.28909302]
[-344.18569946 77.73295593]
[-332.07714844 68.87216949]
[-319.46945190 60.73727798]
[-306.40606689 53.35632706]
[-292.93203735 46.75476074]
[-279.09378052 40.95533371]
[-264.93902588 35.97803879]
[-250.51657104 31.84003067]
[-235.87611389 28.55558014]
[-221.06814575 26.13600540]
[-206.14369202 24.58964920]
[-191.15420532 23.92183876]
[-176.15136719 24.13488197]
[-161.18688965 25.22803879]
[-146.31237793 27.19754410]
[-131.57907104 30.03660583]
[-117.03778076 33.73543930]
[-102.73863220 38.28129578]
[-88.73091125 43.65850067]
[-75.06291199 49.84851837]
[-61.78175354 56.83001328]
[-48.93321228 64.57891083]
[-36.56158447 73.06851196]
[-24.70951462 82.26953888]
[-13.41786098 92.15028381]
[-2.72554922 102.67667389]
[7.33056259 113.81243134]
[16.71580887 125.51916504]
[25.39783669 137.75651550]
[38.11987305 129.80984497]
[50.84190750 121.86315155]
[63.56394577 113.91646576]
[76.28598022 105.96978760]
[89.00801849 98.02310181]
[101.67053986 89.98192596]
[114.27285767 81.84671021]
[126.87516785 73.71149445]
[139.47747803 65.57627869]
[152.07978821 57.44106293]
[164.68209839 49.30584717]
[157.51959229 36.11813354]
[151.37496948 22.42649460]
[146.28343201 8.30935574]
[142.27413940 -6.15242195]
[139.37007141 -20.87599945]
[137.58784485 -35.77704239]
[136.93768311 -50.77019501]
[137.42329407 -65.76958466]
[139.04191589 -80.68928528]
[141.78425598 -95.44384003]
[145.63462830 -109.94873810]
[150.57096863 -124.12088776]
[156.56498718 -137.87911987]
[163.58236694 -151.14463806]
[171.58291626 -163.84143066]
[180.52079773 -175.89678955]
[190.34480286 -187.24166870]
[200.99868774 -197.81106567]
[212.42141724 -207.54443359]
[224.54756165 -216.38604736]
[237.30766296 -224.28524780]
[250.62861633 -231.19679260]
[264.43414307 -237.08108521]
[278.64514160 -241.90441895]
[293.18023682 -245.63917542]
[307.95617676 -248.26396179]
[322.88827515 -249.76374817]
[337.89105225 -250.12992859]
[352.87857056 -249.36039734]
[367.76495361 -247.45959473]
[382.46493530 -244.43838501]
[396.89431763 -240.31408691]
[410.97048950 -235.11030579]
[424.61276245 -228.85687256]
[437.74304199 -221.58958435]
[450.28607178 -213.35008240]
[462.17004395 -204.18556213]
[473.32687378 -194.14849854]
[483.69265747 -183.29641724]
[493.20803833 -171.69145203]
[501.81848145 -159.40007019]
[509.47467041 -146.49270630]
[516.13275146 -133.04327393]
[521.75463867 -119.12882233]
[526.30804443 -104.82904053]
[529.76690674 -90.22583771]
[532.11145020 -75.40287018]
[533.32824707 -60.44503403]
[533.41033936 -45.43801117]
[532.35717773 -30.46776581]
[530.17486572 -15.62004280]
[526.87585449 -0.97989053]
[522.47912598 13.36883354]
[517.00976562 27.34393883]
[510.49914551 40.86537552]
[502.98455811 53.85569763]
[494.50906372 66.24049377]
[485.12118530 77.94882202]
[474.87466431 88.91362000]
[463.82827759 99.07208252]
[452.04522705 108.36602020]
[439.59304810 116.74219513]
[426.54302979 124.15263367]
[412.96994019 130.55488586]
[398.95153809 135.91229248]
[384.56811523 140.19413757]
[369.90203857 143.37593079]
[355.03735352 145.43940735]
[340.05914307 146.37278748]
[325.05325317 146.17070007]
[310.10565186 144.83430481]
[295.30191040 142.37126160]
[280.72683716 138.79566956]
[266.46392822 134.12803650]
[252.59487915 128.39506531]
[239.19912720 121.62961578]
[226.35340881 113.87042999]
[214.13131714 105.16194916]
[202.60282898 95.55406952]
[191.83398438 85.10181427]
[181.88648987 73.86505890]
[172.81732178 61.90816116]
[160.21501160 70.04337311]
[147.61270142 78.17858887]
[135.01037598 86.31380463]
[122.40807343 94.44902039]
[109.80575562 102.58423615]
[105.27984619 109.25421906]
[96.95470428 110.74514008]
[84.23266602 118.69181824]
[71.51062775 126.63850403]
[58.78859329 134.58518982]
[46.06655884 142.53187561]
[33.34452057 150.47856140]
[40.53307724 163.64880371]
[46.93630981 177.21821594]
[52.53214645 191.14002991]
[57.30129623 205.36627197]
[61.22732162 219.84786987]
[64.29668427 234.53492737]
[66.49880981 249.37678528]
[67.82610321 264.32232666]
[68.27398682 279.31997681]
[67.84091949 294.31808472]
[66.52839661 309.26492310]
[64.34094238 324.10894775]
[61.28608704 338.79901123]
[57.37437057 353.28448486]
[52.61927795 367.51544189]
[47.03720093 381.44277954]
[40.64737701 395.01852417]
[33.47183990 408.19586182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[87 192]
[88 191]
[89 190]
[90 189]
[91 188]
[92 187]
[93 185]
[94 184]
[95 183]
[96 182]
[97 181]
[98 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
