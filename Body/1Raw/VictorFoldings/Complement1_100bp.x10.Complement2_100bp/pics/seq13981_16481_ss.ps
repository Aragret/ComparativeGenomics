%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[230.11833191 588.89520264]
[233.14999390 603.79077148]
[230.24569702 618.71166992]
[221.84832764 631.38256836]
[209.23841858 639.87133789]
[194.33888245 642.88342285]
[179.42181396 639.95947266]
[166.76193237 631.54541016]
[158.28979492 618.92437744]
[155.29733276 604.02087402]
[158.24087524 589.10766602]
[166.67155457 576.45886230]
[179.30375671 568.00335693]
[194.21116638 565.03051758]
[197.09643555 550.31060791]
[199.98170471 535.59069824]
[202.86697388 520.87084961]
[205.75224304 506.15093994]
[208.63752747 491.43103027]
[208.19091797 476.43768311]
[204.43461609 461.91561890]
[200.67831421 447.39358521]
[190.00038147 437.00939941]
[194.03530884 421.71136475]
[190.27900696 407.18930054]
[186.19934082 392.75476074]
[181.79833984 378.41491699]
[177.39735413 364.07504272]
[172.99635315 349.73519897]
[158.44940186 346.53338623]
[147.38464355 336.41275024]
[142.84127808 322.01745605]
[146.13497925 307.18344116]
[156.47892761 295.91622925]
[152.07792664 281.57638550]
[147.67694092 267.23654175]
[143.27593994 252.89668274]
[138.30828857 247.42456055]
[138.91787720 238.31048584]
[134.73086548 223.90670776]
[130.54385376 209.50292969]
[125.92984772 195.23019409]
[120.89292908 181.10116577]
[115.85601807 166.97213745]
[110.81909943 152.84309387]
[105.78218079 138.71406555]
[100.74526978 124.58504486]
[95.70835114 110.45600891]
[90.19811249 124.40725708]
[77.60214996 132.55230713]
[62.61844635 131.85324097]
[50.83555603 122.57081604]
[46.64820099 108.16713715]
[51.61816406 94.01441193]
[63.89177322 85.39127350]
[78.89127350 85.51392365]
[91.02291107 94.33757019]
[87.70064545 79.71011353]
[84.37838745 65.08264923]
[71.55773926 51.86476898]
[77.39827728 35.31620407]
[73.85860443 20.73982811]
[70.31893158 6.16345215]
[66.77925873 -8.41292286]
[63.23958969 -22.98929787]
[59.69991684 -37.56567383]
[56.16024399 -52.14204788]
[45.38491821 -63.72664642]
[49.90034866 -77.92031860]
[46.36067581 -92.49668884]
[35.58535004 -104.08129120]
[40.10077667 -118.27495575]
[29.51197815 -125.63974762]
[26.86386108 -137.85331726]
[33.04301453 -148.25257874]
[22.44136047 -159.99632263]
[27.16761017 -174.12118530]
[23.84535027 -188.74864197]
[11.69789791 -194.56706238]
[5.21409845 -206.15026855]
[6.56551123 -219.16011047]
[15.03589725 -228.87001038]
[11.93178749 -243.54530334]
[8.82767677 -258.22061157]
[5.72356701 -272.89590454]
[-9.33940792 -273.12945557]
[-23.97263145 -276.70944214]
[-37.44210815 -283.45639038]
[-49.07221603 -293.03176880]
[-58.27959442 -304.95535278]
[-64.60240173 -318.62905884]
[-67.72348785 -333.36697388]
[-67.48630524 -348.42990112]
[-63.90274811 -363.06225586]
[-57.15256500 -376.53009033]
[-47.57434464 -388.15789795]
[-35.64852524 -397.36236572]
[-21.97330093 -403.68188477]
[-7.23461628 -406.79937744]
[7.82824373 -406.55856323]
[22.45973206 -402.97146606]
[35.92593765 -396.21801758]
[47.55140305 -386.63696289]
[56.75300217 -374.70892334]
[63.06917953 -361.03216553]
[66.18312836 -346.29272461]
[65.93864441 -331.22991943]
[62.34799576 -316.59930420]
[55.59128571 -303.13473511]
[46.00743103 -291.51159668]
[34.07715225 -282.31289673]
[20.39886856 -276.00003052]
[23.50297928 -261.32470703]
[26.60709000 -246.64941406]
[29.71119881 -231.97410583]
[44.18580627 -223.41114807]
[48.06510544 -206.69989014]
[38.47281265 -192.07090759]
[41.79507065 -177.44345093]
[52.15909576 -166.74595642]
[47.67047501 -151.57482910]
[60.26969147 -139.35900879]
[54.67715073 -121.81462860]
[65.19929504 -111.27262878]
[60.93704987 -96.03636169]
[64.47672272 -81.45998383]
[74.99887085 -70.91799164]
[70.73661804 -55.68172073]
[74.27629089 -41.10534668]
[77.81596375 -26.52897072]
[81.35563660 -11.95259571]
[84.89530945 2.62377977]
[88.43498230 17.20015526]
[91.97465515 31.77653122]
[102.13848114 38.33573532]
[105.20673370 50.45058441]
[99.00585175 61.76039505]
[102.32810974 76.38785553]
[105.65036774 91.01531219]
[109.83737946 105.41909790]
[114.87429810 119.54812622]
[119.91120911 133.67715454]
[124.94812775 147.80618286]
[129.98504639 161.93521118]
[135.02195740 176.06423950]
[140.05888367 190.19326782]
[143.46464539 192.88671875]
[145.61946106 196.19146729]
[146.48474121 199.63917542]
[146.17799377 202.79710388]
[144.94763184 205.31591797]
[149.13464355 219.71969604]
[153.32165527 234.12347412]
[157.61578369 248.49568176]
[162.01678467 262.83554077]
[166.41778564 277.17538452]
[170.81878662 291.51522827]
[185.70245361 295.03988647]
[196.75061035 305.47232056]
[201.06484985 319.93792725]
[197.58250427 334.52316284]
[187.33619690 345.33419800]
[191.73719788 359.67407227]
[196.13819885 374.01391602]
[200.53918457 388.35375977]
[204.36178589 391.90829468]
[206.24987793 396.14956665]
[206.26583862 400.22570801]
[204.80107117 403.43301392]
[208.55737305 417.95507812]
[219.50398254 429.37796021]
[215.20037842 443.63726807]
[218.95668030 458.15933228]
[222.71298218 472.68139648]
[225.79597473 458.00164795]
[231.64642334 444.18960571]
[240.04562378 431.76168823]
[250.67955017 421.18246460]
[263.15063477 412.84750366]
[276.99267578 407.06835938]
[291.68811035 404.06112671]
[306.68762207 403.93823242]
[321.43038940 406.70425415]
[335.36526489 412.25579834]
[347.97125244 420.38528442]
[358.77709961 430.78881836]
[367.37881470 443.07745361]
[373.45480347 456.79177856]
[376.77792358 471.41903687]
[377.22393799 486.41241455]
[374.77618408 501.21133423]
[369.52615356 515.26257324]
[361.67010498 528.04077148]
[351.50177002 539.06823730]
[339.40130615 547.93273926]
[325.82107544 554.30273438]
[311.26879883 557.94024658]
[296.28854370 558.70916748]
[281.44030762 556.58081055]
[267.27923584 551.63470459]
[254.33473206 544.05578613]
[243.09075928 534.12738037]
[233.96766663 522.22070312]
[227.30653381 508.78082275]
[223.35740662 494.31631470]
[220.47213745 509.03619385]
[217.58686829 523.75610352]
[214.70159912 538.47601318]
[211.81632996 553.19586182]
[208.93104553 567.91577148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[18 206]
[19 205]
[20 174]
[21 173]
[22 172]
[24 170]
[25 169]
[26 165]
[27 164]
[28 163]
[29 162]
[34 157]
[35 156]
[36 155]
[37 154]
[39 153]
[40 152]
[41 151]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[57 139]
[58 138]
[59 137]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[69 126]
[70 125]
[72 123]
[75 121]
[77 119]
[78 118]
[82 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
