%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[147.73529053 764.67938232]
[133.66912842 759.45861816]
[119.90906525 753.47753906]
[106.49616241 746.75390625]
[93.47044373 739.30786133]
[80.87078094 731.16162109]
[68.73478699 722.33947754]
[57.09867096 712.86773682]
[45.99716568 702.77471924]
[35.46339798 692.09045410]
[25.52881050 680.84698486]
[16.22304535 669.07769775]
[7.57388020 656.81781006]
[-0.39287513 644.10388184]
[-7.65344381 630.97387695]
[-14.18615818 617.46697998]
[-19.97151947 603.62347412]
[-24.99226570 589.48468018]
[-29.23340988 575.09283447]
[-32.68229675 560.49084473]
[-35.32862854 545.72229004]
[-37.16451645 530.83129883]
[-38.18447113 515.86224365]
[-38.38545609 500.85983276]
[-37.76686859 485.86880493]
[-36.33055878 470.93395996]
[-34.08080673 456.09982300]
[-31.02432823 441.41067505]
[-27.17024803 426.91036987]
[-22.53006744 412.64218140]
[-17.11763382 398.64865112]
[-10.94909954 384.97158813]
[-4.04287434 371.65179443]
[3.58043027 358.72903442]
[11.89806366 346.24185181]
[20.88520241 334.22750854]
[30.51502419 322.72189331]
[40.75879288 311.75930786]
[51.58593369 301.37249756]
[62.96413422 291.59243774]
[74.85944366 282.44833374]
[87.23635101 273.96746826]
[100.05792236 266.17517090]
[113.28589630 259.09466553]
[126.88079071 252.74708557]
[140.80204773 247.15138245]
[135.97604370 232.94892883]
[131.15003967 218.74647522]
[126.32405090 204.54402161]
[121.49804688 190.34156799]
[116.36967468 185.01976013]
[116.70764160 175.89158630]
[112.09362793 161.61885071]
[107.47962189 147.34611511]
[96.20254517 137.61592102]
[99.31976318 122.10484314]
[94.70574951 107.83211517]
[90.69757843 104.44855499]
[88.87046814 99.06014252]
[90.17370605 93.06526947]
[85.98669434 78.66148376]
[81.37268829 64.38874817]
[76.33576965 50.25972366]
[70.50640106 43.22720718]
[71.33074951 35.88266754]
[66.50475311 21.68021393]
[61.67875290 7.47775745]
[52.80809784 19.57368469]
[37.82730865 20.33259583]
[27.77966499 9.19505215]
[30.07192039 -5.62876606]
[43.01430511 -13.21129036]
[57.06502533 -7.96415234]
[53.30872726 -22.48621178]
[49.55242538 -37.00827026]
[45.79612350 -51.53033066]
[42.03982544 -66.05239105]
[38.28352356 -80.57444763]
[23.31417274 -79.19071960]
[8.31671429 -80.22629547]
[-6.32038116 -83.65435028]
[-20.21797752 -89.38610077]
[-33.01609421 -97.27307892]
[-44.38323212 -107.11098480]
[-54.02494812 -118.64499664]
[-61.69150543 -131.57635498]
[-67.18431854 -145.57011414]
[-70.36110687 -160.26379395]
[-71.13959503 -175.27679443]
[-69.49960327 -190.22023010]
[-65.48362732 -204.70706177]
[-59.19567490 -218.36201477]
[-50.79862976 -230.83140564]
[-40.50999451 -241.79225159]
[-28.59626389 -250.96063232]
[-15.36603832 -258.09906006]
[-1.16200876 -263.02267456]
[13.64790440 -265.60388184]
[28.68008995 -265.77584839]
[43.54517746 -263.53411865]
[57.85812378 -258.93676758]
[71.24819183 -252.10284424]
[83.36854553 -243.20941162]
[93.90524292 -232.48681641]
[102.58535004 -220.21278381]
[109.18403625 -206.70524597]
[113.53038025 -192.31408691]
[115.51179504 -177.41206360]
[115.07696533 -162.38519287]
[112.23715210 -147.62268066]
[107.06591034 -133.50692749]
[99.69718933 -120.40356445]
[90.32185364 -108.65200043]
[79.18275452 -98.55662537]
[66.56842041 -90.37893677]
[52.80558395 -84.33074951]
[56.56188202 -69.80869293]
[60.31818390 -55.28663254]
[64.07448578 -40.76457214]
[67.83078766 -26.24251175]
[71.58708954 -11.72045326]
[75.88121033 2.65175962]
[80.70720673 16.85421562]
[85.53320312 31.05667114]
[90.46479797 45.22280502]
[95.50171661 59.35183716]
[97.97367859 60.67377853]
[100.07094574 63.05455017]
[101.38761139 66.35633850]
[101.57508087 70.29707336]
[100.39048004 74.47447205]
[104.57748413 88.87825775]
[108.97848511 103.21810150]
[113.59249115 117.49083710]
[125.19960022 128.24191284]
[121.75234985 142.73211670]
[126.36636353 157.00485229]
[130.98037720 171.27757263]
[135.70050049 185.51556396]
[140.52650452 199.71801758]
[145.35250854 213.92048645]
[150.17849731 228.12294006]
[155.00450134 242.32539368]
[169.45289612 238.28106689]
[184.10060120 235.03179932]
[198.90388489 232.58728027]
[213.81857300 230.95480347]
[228.80015564 230.13925171]
[243.80390930 230.14303589]
[258.78509521 230.96617126]
[273.69894409 232.60618591]
[288.50097656 235.05819702]
[303.14703369 238.31486511]
[317.59338379 242.36650085]
[331.79693604 247.20098877]
[345.71527100 252.80389404]
[359.30688477 259.15853882]
[372.53118896 266.24591064]
[385.34869385 274.04489136]
[397.72119141 282.53216553]
[409.61175537 291.68243408]
[420.98489380 301.46841431]
[431.80661011 311.86083984]
[442.04470825 322.82873535]
[451.66854858 334.33935547]
[460.64944458 346.35836792]
[468.96060181 358.84985352]
[476.57717896 371.77661133]
[483.47650146 385.09997559]
[489.63790894 398.78024292]
[495.04309082 412.77655029]
[499.67584229 427.04718018]
[503.52239990 441.54946899]
[506.57125854 456.24020386]
[508.81329346 471.07550049]
[510.24185181 486.01110840]
[510.85266113 501.00244141]
[510.64389038 516.00476074]
[509.61614990 530.97326660]
[507.77252197 545.86334229]
[505.11853027 560.63049316]
[501.66207886 575.23071289]
[497.41345215 589.62036133]
[492.38534546 603.75653076]
[486.59280396 617.59698486]
[480.05307007 631.10052490]
[472.78570557 644.22674561]
[464.81234741 656.93652344]
[456.15679932 669.19189453]
[446.84494019 680.95635986]
[436.90451050 692.19470215]
[426.36520386 702.87347412]
[415.25845337 712.96075439]
[403.61740112 722.42645264]
[391.47683716 731.24230957]
[378.87295532 739.38201904]
[365.84335327 746.82128906]
[352.42697144 753.53790283]
[338.66378784 759.51184082]
[324.59494019 764.72528076]
[310.26235962 769.16265869]
[295.70886230 772.81072998]
[280.97784424 775.65856934]
[266.11331177 777.69775391]
[251.15959167 778.92211914]
[236.16131592 779.32806396]
[221.16325378 778.91430664]
[206.21017456 777.68218994]
[191.34669495 775.63531494]
[176.61715698 772.77978516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 143]
[47 142]
[48 141]
[49 140]
[50 139]
[52 138]
[53 137]
[54 136]
[56 134]
[57 133]
[60 132]
[61 131]
[62 126]
[63 125]
[65 124]
[66 123]
[67 122]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
