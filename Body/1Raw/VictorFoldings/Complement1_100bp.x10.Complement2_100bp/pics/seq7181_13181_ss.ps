%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[78.97896576 528.77783203]
[65.44329071 522.28247070]
[52.64721680 514.42980957]
[40.72640228 505.30300903]
[29.80721092 494.99887085]
[20.00539017 483.62661743]
[11.42484665 471.30679321]
[4.15653849 458.16998291]
[-1.72248578 444.35543823]
[-6.14990568 430.00964355]
[-9.07878780 415.28463745]
[-10.47808456 400.33654785]
[-10.33296204 385.32376099]
[-8.64495945 370.40551758]
[-5.43197060 355.73986816]
[-0.72805423 341.48233032]
[5.41692495 327.78405762]
[12.93782711 314.79019165]
[21.75492668 302.63854980]
[31.77475548 291.45788574]
[42.89110184 281.36676025]
[54.98612213 272.47213745]
[67.93160248 264.86828613]
[81.59031677 258.63580322]
[95.81747437 253.84082031]
[110.46225739 250.53410339]
[108.67979431 235.64038086]
[106.89732361 220.74665833]
[97.70245361 209.02900696]
[103.74504089 194.40718079]
[101.96257782 179.51345825]
[100.18010712 164.61975098]
[90.98523712 152.90208435]
[97.02782440 138.28025818]
[95.24536133 123.38654327]
[93.46289062 108.49282837]
[89.59858704 93.99913025]
[83.72962952 80.19495392]
[77.86066437 66.39077759]
[61.42838287 64.55449677]
[48.23992920 54.73817062]
[41.83837509 39.69699478]
[43.88380814 23.57334518]
[53.72401047 10.75605774]
[47.65017700 -2.95920873]
[41.37281799 -16.58252525]
[34.89332199 -30.11087036]
[28.41382408 -43.63921738]
[21.93432808 -57.16756058]
[15.45483303 -70.69590759]
[8.97533703 -84.22425079]
[2.49584126 -97.75260162]
[-10.44356060 -106.85657501]
[-8.96312332 -121.67742920]
[-15.44261932 -135.20578003]
[-21.92211533 -148.73411560]
[-35.98622131 -143.48939514]
[-50.46384811 -139.52650452]
[-65.23842621 -136.87733459]
[-80.19099426 -135.56321716]
[-95.20117188 -135.59475708]
[-110.14808655 -136.97167969]
[-124.91139984 -139.68290710]
[-139.37225342 -143.70658875]
[-153.41419983 -149.01036072]
[-166.92417908 -155.55149841]
[-179.79344177 -163.27734375]
[-191.91833496 -172.12568665]
[-203.20124817 -182.02528381]
[-213.55133057 -192.89643860]
[-222.88526917 -204.65159607]
[-231.12788391 -217.19613647]
[-238.21282959 -230.42904663]
[-244.08305359 -244.24377441]
[-248.69128418 -258.52911377]
[-252.00042725 -273.16998291]
[-253.98384094 -288.04858398]
[-254.62553406 -303.04507446]
[-253.92036438 -318.03869629]
[-251.87400818 -332.90875244]
[-248.50292969 -347.53552246]
[-243.83428955 -361.80120850]
[-237.90565491 -375.59097290]
[-230.76477051 -388.79376221]
[-222.46913147 -401.30331421]
[-213.08552551 -413.01885986]
[-202.68952942 -423.84613037]
[-191.36480713 -433.69787598]
[-179.20257568 -442.49484253]
[-166.30075073 -450.16613770]
[-152.76319885 -456.65005493]
[-138.69892883 -461.89434814]
[-124.22118378 -465.85678101]
[-109.44652557 -468.50549316]
[-94.49391174 -469.81915283]
[-79.48374176 -469.78717041]
[-64.53686523 -468.40979004]
[-49.77363586 -465.69812012]
[-35.31290817 -461.67398071]
[-21.27112389 -456.36978149]
[-7.76133776 -449.82821655]
[5.10767603 -442.10198975]
[17.23229980 -433.25326538]
[28.51491356 -423.35333252]
[38.86467361 -412.48187256]
[48.19824600 -400.72640991]
[56.44048309 -388.18164062]
[63.52502060 -374.94851685]
[69.39482117 -361.13360596]
[74.00261688 -346.84814453]
[77.31130981 -332.20712280]
[79.29426575 -317.32849121]
[79.93550873 -302.33200073]
[79.22988892 -287.33837891]
[77.18307495 -272.46838379]
[73.81155396 -257.84173584]
[69.14246368 -243.57617188]
[63.21340942 -229.78659058]
[56.07212448 -216.58401489]
[47.77610397 -204.07472229]
[38.39214706 -192.35945129]
[27.99581146 -181.53251648]
[16.67079926 -171.68110657]
[4.50829649 -162.88453674]
[-8.39376926 -155.21360779]
[-1.91427338 -141.68527222]
[4.56522226 -128.15692139]
[17.04116821 -120.02058411]
[16.02418709 -104.23209381]
[22.50368309 -90.70375061]
[28.98317909 -77.17539978]
[35.46267319 -63.64705658]
[41.94216919 -50.11871338]
[48.42166519 -36.59036636]
[54.90116119 -23.06202126]
[59.02805710 -20.65831566]
[61.68877029 -15.63660240]
[61.36544418 -9.03304291]
[67.43927765 4.68222380]
[81.08507538 5.23842430]
[93.21821594 11.65056324]
[101.44425201 22.71769524]
[104.11209869 36.31404877]
[100.64517212 49.79724503]
[91.66484070 60.52182007]
[97.53380585 74.32599640]
[103.40276337 88.13017273]
[104.55216217 73.17427826]
[110.00293732 59.19968796]
[119.28353119 47.41535187]
[131.59107971 38.84073257]
[145.86087036 34.21761322]
[160.85841370 33.94594955]
[175.28627014 38.04923630]
[187.89628601 46.17250443]
[197.59757996 57.61300278]
[203.55087280 71.38101959]
[205.24116516 86.28547668]
[202.52221680 101.03699493]
[195.62925720 114.35942078]
[185.15858459 125.10022736]
[172.01600647 132.33023071]
[157.33851624 135.42396545]
[142.39584351 134.11378479]
[128.48068237 128.51304626]
[116.79684448 119.10625458]
[108.35661316 106.71035767]
[110.13907623 121.60408020]
[111.92153931 136.49780273]
[121.24391174 149.28076172]
[115.07382965 162.83728027]
[116.85629272 177.73100281]
[118.63875580 192.62471008]
[127.96112823 205.40766907]
[121.79104614 218.96420288]
[123.57350922 233.85791016]
[125.35597229 248.75163269]
[140.36747742 248.50910950]
[155.32435608 249.81140137]
[170.06803894 252.64468384]
[184.44226074 256.97894287]
[198.29464722 262.76821899]
[211.47833252 269.95114136]
[223.85357666 278.45156860]
[235.28918457 288.17941284]
[245.66395569 299.03152466]
[254.86788940 310.89285278]
[262.80343628 323.63772583]
[269.38644409 337.13098145]
[274.54714966 351.22958374]
[278.23086548 365.78411865]
[280.39852905 380.64028931]
[281.02713013 395.64056396]
[280.11004639 410.62600708]
[277.65698242 425.43771362]
[273.69393921 439.91867065]
[268.26293945 453.91537476]
[261.42153931 467.27947998]
[253.24227905 479.86932373]
[243.81184387 491.55139160]
[233.23022461 502.20190430]
[221.60955811 511.70791626]
[209.07307434 519.96868896]
[195.75363159 526.89666748]
[181.79243469 532.41833496]
[167.33749390 536.47528076]
[152.54202271 539.02435303]
[137.56285095 540.03863525]
[122.55879974 539.50738525]
[107.68889618 537.43615723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 177]
[27 176]
[28 175]
[30 173]
[31 172]
[32 171]
[34 169]
[35 168]
[36 167]
[37 147]
[38 146]
[39 145]
[44 139]
[45 138]
[46 135]
[47 134]
[48 133]
[49 132]
[50 131]
[51 130]
[52 129]
[54 127]
[55 126]
[56 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
