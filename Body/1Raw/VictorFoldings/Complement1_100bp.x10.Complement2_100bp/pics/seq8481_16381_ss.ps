%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[60.01005554 755.81024170]
[45.08997345 757.49499512]
[30.07519913 757.55670166]
[15.14177513 755.99462891]
[0.46478698 752.82708740]
[-13.78368473 748.09124756]
[-27.43658447 741.84259033]
[-40.33383942 734.15441895]
[-52.32423401 725.11682129]
[-63.26718903 714.83587646]
[-73.03440094 703.43194580]
[-81.51136017 691.03887939]
[-88.59867096 677.80194092]
[-94.21324921 663.87628174]
[-98.28925323 649.42517090]
[-100.77890015 634.61816406]
[-101.65300751 619.62872314]
[-100.90131378 604.63262939]
[-98.53263855 589.80572510]
[-94.57475281 575.32189941]
[-89.07405853 561.35083008]
[-82.09505463 548.05645752]
[-73.71956635 535.59460449]
[-64.04578400 524.11132812]
[-53.18713379 513.74133301]
[-41.27092361 504.60614014]
[-28.43687057 496.81292725]
[-14.83544254 490.45303345]
[-0.62611091 485.60101318]
[14.02452755 482.31375122]
[28.94470024 480.62979126]
[43.95947647 480.56890869]
[45.52000046 465.65029907]
[47.08052444 450.73171997]
[40.70928955 437.26855469]
[49.84030151 424.34820557]
[51.40082550 409.42959595]
[52.96134949 394.51098633]
[50.70322418 390.30267334]
[51.06476212 384.63113403]
[54.79689026 379.17379761]
[48.82933044 365.52691650]
[58.34098053 352.88415527]
[44.10844040 348.20709229]
[30.97421074 340.99240112]
[19.38630867 331.48452759]
[9.74031353 320.00613403]
[2.36585999 306.94717407]
[-2.48462534 292.75173950]
[-4.64456224 277.90274048]
[-4.03893995 262.90573120]
[-0.68691969 248.27146912]
[5.29876804 234.49873352]
[13.71561337 222.05712891]
[24.27817917 211.37121582]
[36.62777710 202.80593872]
[50.34465408 196.65423584]
[64.96225739 193.12692261]
[79.98310089 192.34556580]
[81.98711395 177.48004150]
[83.99112701 162.61451721]
[78.02356720 148.96763611]
[87.53521729 136.32489014]
[89.53923035 121.45935822]
[78.95397949 111.26928711]
[76.34077454 96.81051636]
[82.68946838 83.55989075]
[95.59523773 76.53662872]
[97.59925079 61.67110062]
[99.60326385 46.80557251]
[101.60728455 31.94004440]
[95.78305817 17.22987747]
[105.15137482 5.65041351]
[107.15538788 -9.21511459]
[109.15940094 -24.08064270]
[107.36822510 -28.03610229]
[106.96904755 -31.96104622]
[107.78134918 -35.42161942]
[109.50224304 -38.08716202]
[111.75076294 -39.76117325]
[114.63603210 -54.48106384]
[117.52130890 -69.20095825]
[120.40657806 -83.92084503]
[123.29185486 -98.64073944]
[125.07431793 -113.53445435]
[125.74410248 -128.51950073]
[126.41388702 -143.50453186]
[118.30173492 -153.53228760]
[119.16809845 -165.99957275]
[128.00444031 -174.26066589]
[128.89724731 -189.23406982]
[129.79006958 -204.20747375]
[130.23666382 -219.20083618]
[130.23666382 -234.20083618]
[130.23666382 -249.20083618]
[130.23666382 -264.20083618]
[130.23666382 -279.20083618]
[130.23666382 -294.20083618]
[130.23666382 -309.20083618]
[116.46279907 -315.77679443]
[106.91287231 -327.68316650]
[103.48303223 -342.55590820]
[106.85427856 -357.44207764]
[116.35724640 -369.38595581]
[130.10511780 -376.01611328]
[145.36822510 -376.01611328]
[159.11608887 -369.38595581]
[168.61906433 -357.44207764]
[171.99031067 -342.55590820]
[168.56047058 -327.68316650]
[159.01054382 -315.77679443]
[145.23666382 -309.20083618]
[145.23666382 -294.20083618]
[145.23666382 -279.20083618]
[145.23666382 -264.20083618]
[145.23666382 -249.20083618]
[145.23666382 -234.20083618]
[145.23666382 -219.20083618]
[147.12120056 -217.12557983]
[148.29724121 -214.17878723]
[148.42872620 -210.62658691]
[147.28204346 -206.85173035]
[144.76347351 -203.31466675]
[143.87065125 -188.34126282]
[142.97784424 -173.36785889]
[151.66641235 -158.12069702]
[141.39892578 -142.83474731]
[140.72914124 -127.84970856]
[140.05935669 -112.86466980]
[149.44068909 -124.56896973]
[163.38113403 -130.10649109]
[178.23667908 -128.02975464]
[190.12411499 -118.88160706]
[195.93611145 -105.05335236]
[194.15342712 -90.15966034]
[185.24203491 -78.09371185]
[171.53135681 -72.00951385]
[156.60534668 -73.49745941]
[144.36560059 -82.16860962]
[138.01174927 -95.75546265]
[135.12646484 -81.03557587]
[132.24119568 -66.31568146]
[129.35592651 -51.59579086]
[126.47065735 -36.87590027]
[124.02492523 -22.07662964]
[122.02091217 -7.21110106]
[120.01689911 7.65442705]
[125.98445892 21.30131149]
[116.47280884 33.94405746]
[114.46879578 48.80958557]
[112.46478271 63.67511368]
[110.46076965 78.54064178]
[121.04602051 88.73071289]
[123.65922546 103.18948364]
[117.31053162 116.44010925]
[104.40476227 123.46337128]
[102.40074921 138.32890320]
[108.22496796 153.03906250]
[98.85665894 164.61853027]
[96.85263824 179.48405457]
[94.84862518 194.34957886]
[109.12634277 199.08065796]
[122.28806305 206.35289001]
[133.88626099 215.91731262]
[143.52685547 227.44706726]
[150.88265991 240.54853821]
[155.70442200 254.77484131]
[157.82931519 269.64096069]
[157.18643188 284.64041138]
[153.79913330 299.26245117]
[147.78419495 313.00939941]
[139.34780884 325.41363525]
[128.77853394 336.05358887]
[116.43732452 344.56790161]
[102.74534607 350.66781616]
[88.16948700 354.14694214]
[73.20651245 354.88818359]
[79.03073120 369.59832764]
[69.66242218 381.17779541]
[67.87995148 396.07153320]
[66.31942749 410.99011230]
[64.75891113 425.90872192]
[71.01852417 440.43896484]
[61.99912643 452.29223633]
[60.43860626 467.21084595]
[58.87808228 482.12942505]
[73.55524445 485.29617310]
[87.80397034 490.03125000]
[101.45720673 496.27917480]
[114.35487366 503.96664429]
[126.34575653 513.00360107]
[137.28926086 523.28399658]
[147.05708313 534.68737793]
[155.53471375 547.07995605]
[162.62274170 560.31658936]
[168.23806763 574.24194336]
[172.31484985 588.69274902]
[174.80528259 603.49969482]
[175.68019104 618.48907471]
[174.92930603 633.48516846]
[172.56143188 648.31219482]
[168.60432434 662.79626465]
[163.10438538 676.76763916]
[156.12609863 690.06237793]
[147.75128174 702.52471924]
[138.07812500 714.00848389]
[127.22002411 724.37908936]
[115.30430603 733.51489258]
[102.47067261 741.30877686]
[88.86959076 747.66943359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 186]
[33 185]
[34 184]
[36 182]
[37 181]
[38 180]
[41 179]
[43 177]
[59 161]
[60 160]
[61 159]
[63 157]
[64 156]
[68 152]
[69 151]
[70 150]
[71 149]
[73 147]
[74 146]
[75 145]
[80 144]
[81 143]
[82 142]
[83 141]
[84 140]
[85 129]
[86 128]
[87 127]
[90 125]
[91 124]
[92 123]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
