%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[82.78112030 665.34240723]
[77.77890778 651.01263428]
[78.29489899 635.84368896]
[84.25931549 621.88696289]
[94.86551666 611.03002930]
[108.67910004 604.74121094]
[107.78628540 589.76776123]
[106.89347076 574.79437256]
[106.00065613 559.82098389]
[105.10784149 544.84753418]
[104.21502686 529.87414551]
[103.32220459 514.90075684]
[102.42938995 499.92733765]
[99.51532745 496.14352417]
[98.94728851 490.48895264]
[101.73966217 484.49609375]
[101.29305267 469.50274658]
[93.18024445 457.01147461]
[100.50323486 442.98706055]
[92.39042664 430.49578857]
[99.71341705 416.47137451]
[99.26680756 401.47802734]
[98.82020569 386.48468018]
[98.37359619 371.49133301]
[97.92699432 356.49798584]
[89.81417847 344.00671387]
[97.13716888 329.98229980]
[89.02436066 317.49102783]
[96.34735107 303.46661377]
[95.90074158 288.47326660]
[95.45413971 273.47991943]
[83.77389526 267.01351929]
[76.75781250 255.52793884]
[76.32978058 241.96746826]
[82.70848846 229.87074280]
[94.32242584 222.44732666]
[94.09909821 207.44898987]
[86.17317200 194.83831787]
[93.70414734 180.92448425]
[78.94280243 178.39007568]
[64.89841461 173.18667603]
[52.04914856 165.49142456]
[40.83250427 155.56632996]
[31.63037682 143.74934387]
[24.75608253 130.44277954]
[20.44367218 116.09970856]
[18.83997536 101.20848846]
[19.99959373 86.27611542]
[23.88304520 71.81101227]
[30.35810661 58.30567551]
[39.20431900 46.21994019]
[50.12048340 35.96529388]
[62.73493195 27.89088249]
[76.61817169 22.27162552]
[91.29751587 19.29884338]
[83.35560608 5.61539745]
[90.90255737 -7.22566080]
[82.96065521 -20.90910721]
[90.50760651 -33.75016403]
[90.28427887 -48.74850082]
[90.06095123 -63.74684143]
[89.83762360 -78.74517822]
[89.61429596 -93.74351501]
[81.34175873 -81.23091888]
[68.24665833 -73.91528320]
[53.25448227 -73.43095398]
[39.71451187 -79.88612366]
[30.65161705 -91.83869171]
[28.09046745 -106.61843109]
[32.60323334 -120.92349243]
[43.18174744 -131.55810547]
[57.46274948 -136.14646912]
[72.25582123 -133.66351318]
[84.25615692 -124.66396332]
[90.78285217 -111.15830231]
[93.00796509 -125.99234772]
[95.23308563 -140.82638550]
[97.45819855 -155.66043091]
[86.80442047 -169.53546143]
[89.43004608 -186.48895264]
[103.22768402 -196.10478210]
[105.23169708 -210.97030640]
[107.23571014 -225.83583069]
[101.41148376 -240.54600525]
[110.77980042 -252.12547302]
[112.78381348 -266.99099731]
[114.78782654 -281.85653687]
[116.01480103 -296.80624390]
[116.46141052 -311.79962158]
[116.90801239 -326.79296875]
[117.35462189 -341.78631592]
[117.68959808 -356.78256226]
[117.91292572 -371.78091431]
[117.91292572 -386.78091431]
[117.68959808 -401.77923584]
[117.46627045 -416.77758789]
[103.06656647 -421.46023560]
[90.96903229 -430.56674194]
[82.48591614 -443.10928345]
[78.53741455 -457.72735596]
[79.55181885 -472.83529663]
[85.41909790 -486.79428101]
[95.50280762 -498.09020996]
[108.70915222 -505.49771118]
[123.60560608 -508.21331787]
[138.57630920 -505.94244385]
[151.99734497 -498.93139648]
[162.41291809 -487.94073486]
[168.69320679 -474.16262817]
[170.15696716 -459.09158325]
[166.64544678 -444.36242676]
[158.53953552 -431.57287598]
[146.71850586 -422.11022949]
[132.46459961 -417.00091553]
[132.68792725 -402.00256348]
[132.91125488 -387.00424194]
[135.65345764 -383.09405518]
[135.96844482 -377.41976929]
[132.91125488 -371.55758667]
[132.68792725 -356.55923462]
[135.73149109 -349.82437134]
[132.34796143 -341.33969116]
[131.90136719 -326.34634399]
[131.45475769 -311.35299683]
[131.00814819 -296.35964966]
[141.86546326 -306.70947266]
[156.82690430 -307.78439331]
[169.05229187 -299.09301758]
[172.95233154 -284.60891724]
[166.74400330 -270.95401001]
[153.26565552 -264.37112427]
[138.67941284 -267.86990356]
[129.65335083 -279.85250854]
[127.64933777 -264.98696899]
[125.64532471 -250.12145996]
[131.61288452 -236.47456360]
[122.10123444 -223.83181763]
[120.09722137 -208.96629333]
[118.09320831 -194.10076904]
[127.26232147 -185.04776001]
[129.57762146 -172.17448425]
[123.97329712 -160.14109802]
[112.29224396 -153.43531799]
[110.06713104 -138.60127258]
[107.84201050 -123.76722717]
[105.61688995 -108.93318939]
[104.61263275 -93.96684265]
[104.83596039 -78.96850586]
[105.05928802 -63.97016907]
[105.28261566 -48.97182846]
[105.50594330 -33.97349167]
[113.43187714 -21.36282730]
[105.90090179 -7.44898844]
[113.82682800 5.16167593]
[106.29585266 19.07551575]
[121.05719757 21.60992050]
[135.10159302 26.81333160]
[147.95085144 34.50858307]
[159.16749573 44.43366623]
[168.36962891 56.25065994]
[175.24391174 69.55722046]
[179.55632019 83.90029144]
[181.16001892 98.79151154]
[180.00041199 113.72388458]
[176.11695862 128.18899536]
[169.64189148 141.69432068]
[160.79568481 153.78005981]
[149.87951660 164.03471375]
[137.26506042 172.10911560]
[123.38182831 177.72837830]
[108.70248413 180.70115662]
[116.64439392 194.38459778]
[109.09744263 207.22566223]
[109.32077026 222.22399902]
[123.28247833 231.77212524]
[128.74771118 247.60350037]
[123.74987030 263.41436768]
[110.44748688 273.03329468]
[110.89409637 288.02664185]
[111.34069824 303.01998901]
[119.48545074 316.58367920]
[112.13051605 329.53567505]
[120.27526855 343.09936523]
[112.92034149 356.05136108]
[113.36694336 371.04470825]
[113.81355286 386.03805542]
[114.26015472 401.03143311]
[114.70676422 416.02478027]
[122.85151672 429.58843994]
[115.49658203 442.54046631]
[123.64133453 456.10412598]
[116.28640747 469.05612183]
[116.73300934 484.04949951]
[117.40279388 499.03451538]
[118.29561615 514.00793457]
[119.18843079 528.98132324]
[120.08124542 543.95477295]
[120.97406006 558.92816162]
[121.86687469 573.90155029]
[122.75968933 588.87493896]
[123.65251160 603.84838867]
[138.11552429 608.45117188]
[149.93672180 617.97082520]
[157.51736450 631.11987305]
[159.83224487 646.12005615]
[156.56829834 660.94274902]
[148.16693115 673.58319092]
[135.76437378 682.33197021]
[121.03797150 686.00585938]
[105.97933960 684.10797119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 201]
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[16 193]
[17 192]
[19 190]
[21 188]
[22 187]
[23 186]
[24 185]
[25 184]
[27 182]
[29 180]
[30 179]
[31 178]
[36 174]
[37 173]
[39 171]
[55 155]
[57 153]
[59 151]
[60 150]
[61 149]
[62 148]
[63 147]
[75 146]
[76 145]
[77 144]
[78 143]
[81 139]
[82 138]
[83 137]
[85 135]
[86 134]
[87 133]
[88 125]
[89 124]
[90 123]
[91 122]
[92 120]
[93 119]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
