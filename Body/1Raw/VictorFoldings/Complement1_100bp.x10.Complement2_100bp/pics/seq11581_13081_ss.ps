%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[180.60592651 784.35815430]
[166.30659485 779.81835938]
[152.23217773 774.62304688]
[138.41270447 768.78326416]
[124.87769318 762.31146240]
[111.65601349 755.22149658]
[98.77587891 747.52850342]
[86.26477814 739.24884033]
[74.14940643 730.40014648]
[62.45563126 721.00146484]
[51.20839691 711.07269287]
[40.43170929 700.63507080]
[30.14856529 689.71087646]
[20.38091087 678.32348633]
[11.14959145 666.49707031]
[2.47430563 654.25695801]
[-5.62643242 641.62927246]
[-13.13533592 628.64093018]
[-20.03637886 615.31970215]
[-26.31483650 601.69390869]
[-31.95730782 587.79272461]
[-36.95175171 573.64575195]
[-41.28751373 559.28326416]
[-44.95533371 544.73583984]
[-47.94739151 530.03454590]
[-50.25729752 515.21075439]
[-51.88012695 500.29608154]
[-52.81240845 485.32238770]
[-53.05216217 470.32159424]
[-52.59886932 455.32577515]
[-51.45349884 440.36685181]
[-49.61849594 425.47683716]
[-47.09777832 410.68740845]
[-43.89672089 396.03021240]
[-40.02215958 381.53646851]
[-35.48235703 367.23715210]
[-30.28700829 353.16271973]
[-24.44719696 339.34329224]
[-17.97538757 325.80828857]
[-10.88538742 312.58660889]
[-3.19233060 299.70648193]
[5.08736706 287.19540405]
[13.93603611 275.08004761]
[23.33479309 263.38629150]
[33.26358032 252.13908386]
[43.70120621 241.36241150]
[54.62540436 231.07929993]
[66.01285553 221.31166077]
[77.83925629 212.08036804]
[90.07937622 203.40510559]
[102.70708466 195.30439758]
[115.69544220 187.79551697]
[129.01672363 180.89450073]
[122.73936462 167.27119446]
[116.46200562 153.64787292]
[110.18463898 140.02455139]
[103.90727997 126.40124512]
[97.62992096 112.77792358]
[90.94972229 99.34754944]
[83.87261963 86.12202454]
[76.79551697 72.89649200]
[69.71840668 59.67096710]
[56.38539886 51.15384293]
[57.20257568 36.28166962]
[50.12546921 23.05614281]
[36.08441544 28.39254189]
[21.47622299 31.88954544]
[6.54077053 33.48973083]
[-8.47668839 33.16681671]
[-23.32955170 30.92611313]
[-37.77392578 26.80440903]
[-51.57261658 20.86939049]
[-64.49903870 13.21851158]
[-76.34092712 3.97740984]
[-86.90383148 -6.70216846]
[-96.01429749 -18.64485550]
[-103.52272034 -31.65454102]
[-109.30580902 -45.51759338]
[-113.26859283 -60.00637054]
[-115.34600830 -74.88294983]
[-115.50393677 -89.90305328]
[-113.73978424 -104.82002258]
[-110.08252716 -119.38892365]
[-104.59221649 -133.37051392]
[-97.35900116 -146.53520203]
[-88.50167084 -158.66680908]
[-78.16565704 -169.56613159]
[-66.52069855 -179.05418396]
[-53.75800705 -186.97517395]
[-40.08715820 -193.19902039]
[-25.73264694 -197.62353516]
[-10.93018150 -200.17604065]
[4.07716751 -200.81465149]
[19.04296494 -199.52886963]
[33.72145844 -196.33979797]
[47.87161255 -191.29981995]
[61.26107407 -184.49168396]
[73.66997528 -176.02719116]
[84.89453888 -166.04534912]
[94.75046539 -154.71003723]
[103.07589722 -142.20742798]
[109.73413086 -128.74279785]
[114.61582947 -114.53725433]
[117.64083862 -99.82407379]
[118.75946808 -84.84485626]
[117.95336151 -69.84557343]
[115.23575592 -55.07252502]
[110.65127563 -40.76829910]
[104.27519226 -27.16778564]
[96.21222687 -14.49431705]
[86.59475708 -2.95600247]
[75.58072662 7.25768852]
[63.35099792 15.97903824]
[70.42810059 29.20456505]
[83.25491333 36.77571106]
[82.94393921 52.59386063]
[90.02104187 65.81938934]
[97.09814453 79.04491425]
[104.17525482 92.27044678]
[107.00691986 93.39789581]
[109.49094391 95.58059692]
[111.23567200 98.69176483]
[111.90180969 102.46171570]
[111.25323486 106.50056458]
[117.53059387 120.12387848]
[123.80796051 133.74719238]
[130.08531189 147.37051392]
[136.36268616 160.99383545]
[142.64004517 174.61714172]
[156.54119873 168.97459412]
[170.68811035 163.98005676]
[185.05059814 159.64421082]
[199.59800720 155.97628784]
[214.29928589 152.98414612]
[229.12306213 150.67414856]
[244.03771973 149.05122375]
[259.01141357 148.11885071]
[274.01217651 147.87901306]
[289.00802612 148.33219910]
[303.96691895 149.47747803]
[318.85696411 151.31239319]
[333.64639282 153.83302307]
[348.30361938 157.03398132]
[362.79739380 160.90846252]
[377.09674072 165.44816589]
[391.17120361 170.64343262]
[404.99069214 176.48315430]
[418.52572632 182.95487976]
[431.74743652 190.04479980]
[444.62759399 197.73777771]
[457.13873291 206.01739502]
[469.25415039 214.86599731]
[480.94796753 224.26467896]
[492.19522095 234.19338989]
[502.97195435 244.63095093]
[513.25512695 255.55508423]
[523.02282715 266.94247437]
[532.25421143 278.76882935]
[540.92956543 291.00888062]
[549.03033447 303.63653564]
[556.53930664 316.62484741]
[563.44042969 329.94610596]
[569.71893311 343.57183838]
[575.36145020 357.47299194]
[580.35595703 371.61993408]
[584.69177246 385.98242188]
[588.35968018 400.52984619]
[591.35174561 415.23114014]
[593.66174316 430.05493164]
[595.28460693 444.96957397]
[596.21697998 459.94326782]
[596.45678711 474.94403076]
[596.00354004 489.93988037]
[594.85827637 504.89877319]
[593.02331543 519.78881836]
[590.50262451 534.57824707]
[587.30163574 549.23547363]
[583.42712402 563.72924805]
[578.88739014 578.02856445]
[573.69213867 592.10302734]
[567.85235596 605.92248535]
[561.38061523 619.45751953]
[554.29064941 632.67919922]
[546.59765625 645.55932617]
[538.31799316 658.07049561]
[529.46942139 670.18585205]
[520.07067871 681.87963867]
[510.14193726 693.12689209]
[499.70437622 703.90362549]
[488.78021240 714.18676758]
[477.39279175 723.95446777]
[465.56643677 733.18579102]
[453.32635498 741.86114502]
[440.69866943 749.96185303]
[427.71035767 757.47082520]
[414.38909912 764.37188721]
[400.76333618 770.65039062]
[386.86215210 776.29284668]
[372.71520996 781.28735352]
[358.35272217 785.62310791]
[343.80529785 789.29095459]
[329.10400391 792.28308105]
[314.28021240 794.59301758]
[299.36557007 796.21588135]
[284.39187622 797.14819336]
[269.39108276 797.38793945]
[254.39526367 796.93469238]
[239.43635559 795.78936768]
[224.54631042 793.95440674]
[209.75689697 791.43371582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 129]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 119]
[60 118]
[61 117]
[62 116]
[64 114]
[65 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
