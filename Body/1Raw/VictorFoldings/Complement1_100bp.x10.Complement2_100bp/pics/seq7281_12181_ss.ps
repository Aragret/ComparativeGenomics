%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[159.52183533 496.35122681]
[159.20053101 481.34317017]
[160.30729675 466.37252808]
[162.83212280 451.57489014]
[166.75213623 437.08428955]
[172.03182983 423.03189087]
[178.62339783 409.54501343]
[186.46714783 396.74578857]
[195.49203491 384.75009155]
[205.61631775 373.66662598]
[216.74833679 363.59573364]
[207.78764343 351.56634521]
[198.82695007 339.53695679]
[189.86625671 327.50759888]
[180.90554810 315.47821045]
[171.94485474 303.44885254]
[173.55307007 318.36236572]
[169.40548706 332.77755737]
[160.11738586 344.55599976]
[147.06660461 351.95037842]
[132.18916321 353.86386108]
[117.69200897 350.01254272]
[105.72573090 340.96774292]
[98.06544495 328.07122803]
[95.84751892 313.23611450]
[99.40096283 298.66308594]
[108.19864655 286.51397705]
[120.93548584 278.59103394]
[135.72204590 276.06958008]
[150.36482239 279.32366943]
[162.69032288 287.86917114]
[156.41296387 274.24584961]
[148.84883118 287.19900513]
[134.02828979 289.51232910]
[122.87648010 279.48052979]
[123.61410522 264.49865723]
[135.69740295 255.61082458]
[150.21777344 259.36773682]
[144.97105408 245.31526184]
[139.72433472 231.26278687]
[128.02403259 222.04583740]
[130.44554138 206.41104126]
[125.19881439 192.35858154]
[119.91426849 187.19181824]
[119.98030090 178.05763245]
[114.94338226 163.92860413]
[109.90646362 149.79957581]
[104.86955261 135.67054749]
[99.83263397 121.54151154]
[94.79571533 107.41248322]
[91.58084869 105.28246307]
[89.32046509 101.74572754]
[88.62178040 97.26031494]
[89.86476898 92.53857422]
[85.46376801 78.19873047]
[81.06276703 63.85888290]
[76.02585602 49.72985458]
[70.36306763 35.83982468]
[64.70027924 21.94979858]
[52.32569885 12.09179401]
[54.68566513 -2.61466146]
[51.16301727 -5.15335083]
[48.86279678 -8.35858154]
[47.84442902 -11.76421452]
[48.00986481 -14.93269062]
[49.12651825 -17.50392151]
[44.30051804 -31.70637703]
[39.47452164 -45.90883255]
[27.70863724 -56.48590851]
[30.93976212 -71.02582550]
[26.11376381 -85.22827911]
[21.28776741 -99.43073273]
[19.18533897 -84.57880402]
[13.20450401 -70.82273102]
[3.77702236 -59.15557098]
[-8.41652775 -50.41959000]
[-22.49588394 -45.24544907]
[-37.44464111 -44.00666809]
[-52.18364334 -46.79267883]
[-65.64886475 -53.40235901]
[-76.86824036 -63.35854340]
[-85.03182983 -75.94249725]
[-89.55030060 -90.24575806]
[-90.09746552 -105.23577881]
[-86.63381195 -119.83040619]
[-79.40939331 -132.97604370]
[-68.94573975 -143.72369385]
[-55.99824142 -151.29748535]
[-41.50158310 -155.15063477]
[-26.50228882 -155.00502014]
[-12.08317566 -150.87110901]
[0.71483231 -143.04736328]
[10.96783352 -132.09857178]
[17.93605232 -118.81405640]
[17.71272469 -133.81239319]
[17.48939705 -148.81072998]
[17.26606941 -163.80906677]
[3.02300429 -169.05307007]
[-8.36132145 -179.09107971]
[-15.34727097 -192.56553650]
[-16.99005127 -207.65412903]
[-13.06749153 -222.31625366]
[-4.11008406 -234.56898499]
[8.67075443 -242.75521851]
[23.54652214 -245.76786804]
[38.50539017 -243.19946289]
[51.52429962 -235.39738464]
[60.84254456 -223.41677856]
[65.19991302 -208.87794495]
[64.00710297 -193.74713135]
[57.42543411 -180.07064819]
[46.34502411 -169.69813538]
[32.26440811 -164.03239441]
[32.48773575 -149.03405762]
[32.71106339 -134.03572083]
[32.93439102 -119.03738403]
[35.49022293 -104.25672913]
[40.31621933 -90.05427551]
[45.14221954 -75.85182190]
[56.56291580 -66.29059601]
[53.67697525 -50.73482895]
[58.50297546 -36.53237534]
[63.32897186 -22.32991982]
[68.57569122 -8.27744770]
[80.54523468 0.58704984]
[78.59030914 16.28701210]
[84.25309753 30.17704010]
[89.91587830 44.06706619]
[96.71656799 30.69729996]
[110.93592834 25.92133904]
[124.42846680 32.47507095]
[129.46504211 46.60422134]
[123.16047668 60.21496964]
[109.12631226 65.51046753]
[95.40261841 59.45788574]
[99.80361176 73.79772949]
[104.20461273 88.13758087]
[108.92474365 102.37556458]
[113.96166229 116.50460052]
[118.99858093 130.63362122]
[124.03549957 144.76264954]
[129.07241821 158.89169312]
[134.10932922 173.02072144]
[139.25128174 187.11186218]
[144.49800110 201.16432190]
[156.57359314 211.38639832]
[153.77680969 226.01606750]
[159.02352905 240.06854248]
[164.27024841 254.12101746]
[170.03627014 267.96850586]
[176.31364441 281.59182739]
[183.97424316 294.48812866]
[192.93493652 306.51751709]
[201.89562988 318.54690552]
[210.85632324 330.57626343]
[219.81701660 342.60565186]
[228.77770996 354.63504028]
[241.61393738 346.85195923]
[255.13188171 340.32431030]
[269.20910645 335.11120605]
[283.71810913 331.25982666]
[298.52755737 328.80508423]
[313.50323486 327.76922607]
[328.50961304 328.16156006]
[343.41070557 329.97860718]
[358.07162476 333.20388794]
[372.35955811 337.80816650]
[386.14514160 343.74978638]
[399.30349731 350.97491455]
[411.71548462 359.41809082]
[423.26864624 369.00292969]
[433.85842896 379.64254761]
[443.38885498 391.24063110]
[451.77365112 403.69213867]
[458.93688965 416.88427734]
[464.81369019 430.69760132]
[469.35079956 445.00701904]
[472.50717163 459.68292236]
[474.25418091 474.59240723]
[474.57601929 489.60043335]
[473.46981812 504.57110596]
[470.94552612 519.36883545]
[467.02603149 533.85961914]
[461.74685669 547.91217041]
[455.15579224 561.39929199]
[447.31250000 574.19885254]
[438.28805542 586.19482422]
[428.16415405 597.27868652]
[417.03250122 607.34997559]
[404.99392700 616.31756592]
[392.15740967 624.10015869]
[378.63925171 630.62731934]
[364.56182861 635.83990479]
[350.05267334 639.69073486]
[335.24316406 642.14495850]
[320.26742554 643.18029785]
[305.26107788 642.78735352]
[290.36001587 640.96978760]
[275.69921875 637.74401855]
[261.41146851 633.13916016]
[247.62609863 627.19708252]
[234.46800232 619.97143555]
[222.05633545 611.52783203]
[210.50350952 601.94256592]
[199.91412354 591.30255127]
[190.38410950 579.70410156]
[181.99977112 567.25231934]
[174.83702087 554.05993652]
[168.96073914 540.24633789]
[164.42413330 525.93676758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 157]
[12 156]
[13 155]
[14 154]
[15 153]
[16 152]
[31 151]
[32 150]
[38 149]
[39 148]
[40 147]
[42 145]
[43 144]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[50 138]
[54 137]
[55 136]
[56 135]
[57 128]
[58 127]
[59 126]
[61 124]
[66 123]
[67 122]
[68 121]
[70 119]
[71 118]
[72 117]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
