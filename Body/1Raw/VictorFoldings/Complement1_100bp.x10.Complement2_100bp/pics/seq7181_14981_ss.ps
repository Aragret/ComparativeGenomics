%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[87.60795593 427.52673340]
[72.78226471 425.06573486]
[58.48899078 420.42248535]
[45.04744339 413.70068359]
[32.75791931 405.05053711]
[21.89496803 394.66525269]
[12.70127296 382.77685547]
[5.38222361 369.65097046]
[0.10133144 355.58078003]
[-3.02342701 340.88067627]
[-3.92224360 325.87899780]
[-2.57503843 310.91094971]
[0.98809171 296.31088257]
[6.68754482 282.40499878]
[14.39599323 269.50393677]
[23.94122696 257.89590454]
[35.11000443 247.84027100]
[47.65280533 239.56163025]
[61.28942490 233.24496460]
[75.71521759 229.03138733]
[90.60789490 227.01501465]
[90.83122253 212.01667786]
[91.05455017 197.01834106]
[91.27787781 182.02000427]
[91.50120544 167.02166748]
[83.95425415 154.18060303]
[91.89615631 140.49716187]
[92.11948395 125.49882507]
[92.34281158 110.50048828]
[92.11948395 95.50215149]
[91.44969940 80.51711273]
[90.77991486 65.53207397]
[90.11013031 50.54703140]
[89.44034576 35.56199265]
[88.77056122 20.57695389]
[82.10595703 34.01507187]
[71.29502106 44.41333008]
[57.60782242 50.55014801]
[42.65231323 51.70458221]
[28.18545151 47.74100494]
[15.90679073 39.12506104]
[7.25881577 26.86894035]
[3.25748277 12.41247654]
[4.37286329 -2.54599714]
[10.47392464 -16.24917412]
[20.84391785 -27.08721924]
[34.26459122 -33.78688812]
[49.15929031 -35.56111526]
[63.77820969 -32.20145798]
[76.40392303 -24.10261345]
[85.55318451 -12.21602249]
[90.15135956 2.06344271]
[93.03662872 -12.65644836]
[95.92190552 -27.37634087]
[98.80717468 -42.09623337]
[101.69245148 -56.81612396]
[104.57772064 -71.53601074]
[107.46298981 -86.25590515]
[98.36625671 -74.32907104]
[87.01666260 -64.52159119]
[73.89678192 -57.25049973]
[59.56448746 -52.82496262]
[44.62919998 -51.43314743]
[29.72596931 -53.13424683]
[15.48849106 -57.85591888]
[2.52214909 -65.39740753]
[-8.62172031 -75.43802643]
[-17.46927452 -87.55086517]
[-23.64431190 -101.22086334]
[-26.88426590 -115.86677551]
[-27.05137253 -130.86584473]
[-24.13852692 -145.58030701]
[-18.26958084 -159.38449097]
[-9.69409084 -171.69143677]
[1.22331333 -181.97784424]
[14.01841640 -189.80635071]
[28.14716530 -194.84405518]
[43.00879669 -196.87675476]
[57.97138596 -195.81803894]
[72.39871979 -191.71292114]
[85.67733765 -184.73593140]
[97.24263000 -175.18376160]
[106.60282135 -163.46255493]
[113.35993195 -150.07070923]
[117.22663116 -135.57765198]
[118.03851318 -120.59963989]
[115.76100922 -105.77337646]
[124.35957336 -118.06420898]
[132.95812988 -130.35505676]
[141.55670166 -142.64588928]
[150.15525818 -154.93672180]
[158.75382996 -167.22756958]
[147.28749084 -176.91459656]
[136.74957275 -187.60418701]
[127.22737885 -199.20776367]
[118.79981232 -211.62916565]
[111.53672028 -224.76548767]
[105.49827576 -238.50784302]
[100.73452759 -252.74237061]
[97.28493500 -267.35113525]
[95.17810059 -282.21304321]
[94.43148041 -297.20495605]
[95.05124664 -312.20266724]
[97.03227997 -327.08187866]
[100.35815430 -341.71929932]
[105.00131226 -355.99362183]
[110.92327881 -369.78656006]
[118.07498169 -382.98385620]
[126.39716339 -395.47610474]
[135.82086182 -407.15982056]
[146.26797485 -417.93820190]
[157.65194702 -427.72186279]
[169.87843323 -436.42980957]
[182.84613037 -443.98983765]
[196.44757080 -450.33932495]
[210.57005310 -455.42565918]
[225.09655762 -459.20666504]
[239.90670776 -461.65100098]
[254.87776184 -462.73846436]
[269.88568115 -462.46002197]
[284.80609131 -460.81796265]
[299.51538086 -457.82592773]
[313.89163208 -453.50866699]
[327.81573486 -447.90197754]
[341.17227173 -441.05233765]
[353.85061646 -433.01647949]
[365.74566650 -423.86099243]
[376.75888062 -413.66177368]
[386.79901123 -402.50329590]
[395.78280640 -390.47805786]
[403.63586426 -377.68569946]
[410.29312134 -364.23220825]
[415.69937134 -350.22906494]
[419.80984497 -335.79232788]
[422.59045410 -321.04162598]
[424.01818848 -306.09918213]
[424.08120728 -291.08880615]
[422.77896118 -276.13488770]
[420.12231445 -261.36135864]
[416.13317871 -246.89062500]
[410.84469604 -232.84259033]
[404.30065918 -219.33367920]
[396.55526733 -206.47583008]
[387.67272949 -194.37559509]
[377.72668457 -183.13320923]
[366.79946899 -172.84187317]
[354.98171997 -163.58685303]
[342.37127686 -155.44482422]
[329.07272339 -148.48327637]
[315.19619751 -142.75988770]
[300.85668945 -138.32208252]
[286.17306519 -135.20663452]
[271.26693726 -133.43937683]
[256.26190186 -133.03492737]
[241.28222656 -133.99664307]
[226.45208740 -136.31657410]
[211.89434814 -139.97547913]
[197.72966003 -144.94305420]
[184.07537842 -151.17811584]
[171.04466248 -158.62899780]
[162.44610596 -146.33816528]
[153.84753418 -134.04731750]
[145.24897766 -121.75648499]
[136.65040588 -109.46564484]
[128.05184937 -97.17481232]
[122.18288422 -83.37063599]
[119.29761505 -68.65074158]
[116.41233826 -53.93085098]
[113.52706909 -39.21096039]
[110.64179230 -24.49106789]
[107.75652313 -9.77117634]
[104.87124634 4.94871521]
[103.75559998 19.90716934]
[104.42538452 34.89220810]
[105.09516907 49.87724686]
[105.76495361 64.86228180]
[106.43473816 79.84732056]
[107.10452271 94.83235931]
[109.17135620 97.07238770]
[110.46881866 100.11395264]
[110.69845581 103.67354584]
[109.67073822 107.36137390]
[107.34114838 110.72381592]
[107.11782074 125.72215271]
[106.89449310 140.72048950]
[114.42547607 154.63432312]
[106.49954224 167.24499512]
[106.27621460 182.24333191]
[106.05288696 197.24166870]
[105.82955933 212.24000549]
[105.60623169 227.23834229]
[120.43227386 229.69721985]
[134.72621155 234.33845520]
[148.16871643 241.05833435]
[160.45947266 249.70674133]
[171.32389832 260.09045410]
[180.51928711 271.97753906]
[187.84020996 285.10238647]
[193.12310791 299.17181396]
[196.24995422 313.87149048]
[197.15090942 328.87301636]
[195.80583191 343.84127808]
[192.24478149 358.44183350]
[186.54731750 372.34854126]
[178.84069824 385.25070190]
[169.29711914 396.86007690]
[158.12977600 406.91732788]
[145.58815002 415.19775391]
[131.95243835 421.51635742]
[117.52724457 425.73199463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[27 185]
[28 184]
[29 183]
[30 178]
[31 177]
[32 176]
[33 175]
[34 174]
[35 173]
[52 172]
[53 171]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[87 165]
[88 164]
[89 163]
[90 162]
[91 161]
[92 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
