%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[55.74958038 531.87786865]
[45.31093597 542.66186523]
[34.01740265 552.54693604]
[21.94612885 561.46569824]
[9.17957783 569.35711670]
[-4.19504309 576.16735840]
[-18.08637047 581.84985352]
[-32.39950943 586.36578369]
[-47.03668594 589.68426514]
[-61.89791107 591.78271484]
[-76.88166809 592.64678955]
[-91.88559723 592.27050781]
[-106.80721283 590.65649414]
[-121.54457092 587.81579590]
[-135.99700928 583.76776123]
[-150.06581116 578.54010010]
[-163.65484619 572.16845703]
[-176.67129517 564.69641113]
[-189.02624512 556.17498779]
[-200.63529968 546.66241455]
[-211.41915894 536.22363281]
[-221.30413818 524.92993164]
[-230.22274780 512.85858154]
[-238.11401367 500.09194946]
[-244.92407227 486.71722412]
[-250.60638428 472.82583618]
[-255.12214661 458.51263428]
[-258.44049072 443.87542725]
[-260.53875732 429.01419067]
[-261.40261841 414.03042603]
[-261.02618408 399.02648926]
[-259.41201782 384.10488892]
[-256.57110596 369.36755371]
[-252.52291870 354.91516113]
[-247.29505920 340.84643555]
[-240.92327881 327.25747681]
[-233.45106506 314.24111938]
[-224.92950439 301.88626099]
[-215.41677856 290.27731323]
[-204.97787476 279.49359131]
[-193.68409729 269.60873413]
[-181.61260986 260.69027710]
[-168.84587097 252.79916382]
[-155.47108459 245.98927307]
[-141.57963562 240.30711365]
[-127.26638031 235.79153442]
[-112.62912750 232.47335815]
[-97.76785278 230.37525940]
[-82.78407288 229.51158142]
[-67.78015137 229.88819885]
[-52.85857773 231.50256348]
[-38.12128067 234.34362793]
[-23.66893959 238.39199829]
[-9.60027313 243.62002563]
[3.98861122 249.99197388]
[11.45635223 236.98301697]
[18.92409325 223.97406006]
[26.39183426 210.96511841]
[33.85957718 197.95616150]
[41.32731628 184.94720459]
[48.79505920 171.93826294]
[45.93899155 160.18370056]
[52.05402374 149.28462219]
[64.33763885 145.35070801]
[71.99823761 132.45437622]
[79.65883636 119.55805206]
[87.31942749 106.66172028]
[87.68491364 92.68466949]
[99.78424072 85.67768097]
[107.44483948 72.78135681]
[115.10543823 59.88502502]
[122.76603699 46.98870087]
[130.42663574 34.09237289]
[135.56858826 20.00123215]
[138.01431274 5.20196104]
[140.46005249 -9.59731007]
[142.90577698 -24.39658165]
[145.35150146 -39.19585037]
[130.83537292 -43.01900482]
[116.74104309 -48.18468857]
[103.19236755 -54.64750290]
[90.30842590 -62.35064697]
[78.20243835 -71.22643280]
[66.98079681 -81.19684601]
[56.74211502 -92.17427826]
[47.57638168 -104.06224060]
[39.56414032 -116.75627899]
[32.77581024 -130.14482117]
[27.27104378 -144.11019897]
[23.09822083 -158.52970886]
[20.29401207 -173.27659607]
[18.88306046 -188.22128296]
[18.87776756 -203.23243713]
[20.27818108 -218.17811584]
[23.07199097 -232.92697144]
[27.23464394 -247.34941101]
[32.72956085 -261.31869507]
[39.50844955 -274.71200562]
[47.51173782 -287.41168213]
[56.66908646 -299.30612183]
[66.90002441 -310.29077148]
[78.11463165 -320.26910400]
[90.21435547 -329.15341187]
[103.09286499 -336.86563110]
[116.63697815 -343.33801270]
[130.72766113 -348.51361084]
[145.24108887 -352.34701538]
[160.04971313 -354.80447388]
[175.02339172 -355.86444092]
[190.03053284 -355.51757812]
[204.93923950 -353.76690674]
[219.61849976 -350.62786865]
[233.93931580 -346.12799072]
[247.77581787 -340.30685425]
[261.00643921 -333.21563721]
[273.51486206 -324.91659546]
[285.19116211 -315.48272705]
[295.93276978 -304.99691772]
[305.64526367 -293.55130005]
[314.24325562 -281.24645996]
[321.65124512 -268.19058228]
[327.80407715 -254.49835205]
[332.64770508 -240.29011536]
[336.13955688 -225.69075012]
[338.24893188 -210.82855225]
[338.95730591 -195.83413696]
[338.25845337 -180.83926392]
[336.15853882 -165.97572327]
[332.67596436 -151.37414551]
[327.84136963 -137.16284180]
[321.69723511 -123.46670532]
[314.29754639 -110.40610504]
[305.70736694 -98.09581757]
[296.00216675 -86.64403534]
[285.26721191 -76.15139008]
[273.59689331 -66.71009064]
[261.09375000 -58.40312576]
[247.86764526 -51.30348587]
[234.03485107 -45.47356796]
[219.71688843 -40.96460342]
[205.03962708 -37.81622314]
[190.13203430 -36.05609512]
[175.12512207 -35.69968414]
[160.15077209 -36.75012589]
[157.70504761 -21.95085335]
[155.25932312 -7.15158272]
[152.81358337 7.64768839]
[150.36785889 22.44695854]
[159.11039734 10.25810909]
[170.39695740 0.37815297]
[183.63548279 -6.67462730]
[198.13148499 -10.53025723]
[213.12454224 -10.98647690]
[227.82815552 -8.01935577]
[241.47099304 -1.78454113]
[253.33738708 7.39089966]
[262.80484009 19.02564240]
[269.37670898 32.50934982]
[272.70828247 47.13469696]
[272.62472534 62.13446426]
[269.13049316 76.72179413]
[262.40884399 90.13146973]
[252.81236267 101.66003418]
[240.84451294 110.70273590]
[227.13307190 116.78520203]
[212.39732361 119.58837128]
[197.41027832 118.96517944]
[182.95811462 114.94832611]
[169.79898071 107.74852753]
[158.62316895 97.74346924]
[150.01693726 85.45800018]
[144.43174744 71.53658295]
[142.16061401 56.70951843]
[143.32295227 41.75297165]
[135.66236877 54.64929581]
[128.00177002 67.54562378]
[120.34116364 80.44194794]
[112.68057251 93.33827972]
[112.31508636 107.31533051]
[100.21575928 114.32231903]
[92.55516052 127.21864319]
[84.89456177 140.11497498]
[77.23396301 153.01130676]
[77.43286133 171.42439270]
[61.80401230 179.40599060]
[54.33626938 192.41494751]
[46.86852646 205.42390442]
[39.40078735 218.43286133]
[31.93304634 231.44180298]
[24.46530533 244.45075989]
[16.99756432 257.45971680]
[29.35272026 265.98083496]
[40.96200180 275.49316406]
[51.74610519 285.93167114]
[61.63136292 297.22509766]
[70.55024719 309.29626465]
[78.44182587 322.06271362]
[85.25220490 335.43725586]
[90.93485260 349.32852173]
[95.45094299 363.64160156]
[98.76964569 378.27874756]
[100.86827087 393.13992310]
[101.73249054 408.12368774]
[101.35640717 423.12762451]
[99.74257660 438.04925537]
[96.90203857 452.78665161]
[92.85417938 467.23913574]
[87.62667084 481.30798340]
[81.25520325 494.89709473]
[73.78330994 507.91363525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 191]
[56 190]
[57 189]
[58 188]
[59 187]
[60 186]
[61 185]
[64 183]
[65 182]
[66 181]
[67 180]
[69 178]
[70 177]
[71 176]
[72 175]
[73 174]
[74 148]
[75 147]
[76 146]
[77 145]
[78 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
