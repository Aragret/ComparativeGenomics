%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[124.31723785 721.80957031]
[110.10514832 716.99938965]
[96.18795776 711.39288330]
[82.61024475 705.00799561]
[69.41550446 697.86517334]
[56.64600754 689.98724365]
[44.34265900 681.39953613]
[32.54486084 672.12951660]
[21.29041672 662.20690918]
[10.61537075 651.66345215]
[0.55392104 640.53289795]
[-8.86170197 628.85101318]
[-17.60133743 616.65509033]
[-25.63699150 603.98431396]
[-32.94292068 590.87915039]
[-39.49571991 577.38165283]
[-45.27440262 563.53509521]
[-50.26045990 549.38372803]
[-54.43791199 534.97296143]
[-57.79338455 520.34893799]
[-60.31612396 505.55853271]
[-61.99805450 490.64904785]
[-62.83378220 475.66830444]
[-62.82063293 460.66427612]
[-61.95864868 445.68502808]
[-60.25059128 430.77850342]
[-57.70193100 415.99252319]
[-54.32083511 401.37442017]
[-50.11812973 386.97097778]
[-45.10728073 372.82839966]
[-39.30433655 358.99197388]
[-32.72788620 345.50598145]
[-25.39900017 332.41366577]
[-17.34115219 319.75695801]
[-8.58015442 307.57641602]
[0.85592902 295.91101074]
[10.93687153 284.79815674]
[21.63038063 274.27340698]
[32.90219879 264.37051392]
[44.71622467 255.12118530]
[57.03461075 246.55505371]
[69.81789398 238.69955444]
[83.02513123 231.57986450]
[96.61401367 225.21876526]
[110.54100800 219.63665771]
[124.76151276 214.85140991]
[120.78941345 200.38688660]
[116.81732178 185.92236328]
[112.84522247 171.45783997]
[108.76555634 157.02328491]
[104.57854462 142.61950684]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[84.99069977 76.03522491]
[80.37668610 61.76248932]
[75.76268005 47.48975372]
[71.14867401 33.21702194]
[66.53466034 18.94428825]
[61.92065048 4.67155504]
[57.30664444 -9.60117817]
[42.65379333 -6.34104776]
[27.76004219 -4.46737242]
[12.75627995 -3.99661875]
[-2.22563601 -4.93292379]
[-17.05404091 -7.26805878]
[-31.59862137 -10.98150253]
[-45.73155594 -16.04062080]
[-59.32863617 -22.40095139]
[-72.27037811 -30.00659943]
[-84.44303894 -38.79072189]
[-95.73963928 -48.67612839]
[-106.06090546 -59.57593918]
[-115.31613922 -71.39436340]
[-123.42399597 -84.02754211]
[-130.31321716 -97.36444092]
[-135.92327881 -111.28787231]
[-140.20484924 -125.67545319]
[-143.12033081 -140.40075684]
[-144.64407349 -155.33436584]
[-144.76271057 -170.34503174]
[-143.47517395 -185.30087280]
[-140.79281616 -200.07040405]
[-136.73916626 -214.52386475]
[-131.34988403 -228.53422546]
[-124.67230988 -241.97834778]
[-116.76513672 -254.73809814]
[-107.69786072 -266.70132446]
[-97.55015564 -277.76290894]
[-86.41120148 -287.82562256]
[-74.37890625 -296.80105591]
[-61.55899048 -304.61029053]
[-48.06413269 -311.18472290]
[-34.01292801 -316.46658325]
[-19.52885628 -320.40945435]
[-4.73921061 -322.97866821]
[10.22603512 -324.15164185]
[25.23536301 -323.91809082]
[40.15686798 -322.28005981]
[54.85941696 -319.25192261]
[69.21379852 -314.86032104]
[83.09386444 -309.14382935]
[96.37763214 -302.15270996]
[108.94835663 -293.94836426]
[120.69557953 -284.60290527]
[131.51605225 -274.19848633]
[141.31466675 -262.82653809]
[150.00534058 -250.58697510]
[157.51167297 -237.58738708]
[163.76771545 -223.94200134]
[168.71849060 -209.77075195]
[172.32046509 -195.19816589]
[174.54199219 -180.35231018]
[175.36357117 -165.36367798]
[174.77795410 -150.36395264]
[172.79029846 -135.48498535]
[169.41809082 -120.85752106]
[164.69093323 -106.61012268]
[158.65037537 -92.86798859]
[151.34953308 -79.75189209]
[142.85253906 -67.37709808]
[133.23406982 -55.85235596]
[122.57865906 -45.27895737]
[110.97995758 -35.74981689]
[98.53987885 -27.34868240]
[85.36776733 -20.14938354]
[71.57937622 -14.21518707]
[76.19338226 0.05754591]
[80.80739594 14.33027935]
[85.42140198 28.60301208]
[90.03541565 42.87574768]
[94.64942169 57.14847946]
[99.26343536 71.42121124]
[103.03218842 74.35472870]
[104.99814606 79.68689728]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[118.98232269 138.43249512]
[123.16933441 152.83627319]
[128.56979370 160.20329285]
[127.30974579 167.48574829]
[131.28184509 181.95027161]
[135.25393677 196.41479492]
[139.22602844 210.87931824]
[153.89604187 207.73095703]
[168.72067261 205.41760254]
[183.65243530 203.94665527]
[198.64349365 203.32281494]
[213.64584351 203.54811096]
[228.61141968 204.62181091]
[243.49227905 206.54046631]
[258.24075317 209.29794312]
[272.80960083 212.88539124]
[287.15216064 217.29133606]
[301.22247314 222.50164795]
[314.97546387 228.49964905]
[328.36712646 235.26612854]
[341.35449219 242.77940369]
[353.89599609 251.01541138]
[365.95147705 259.94775391]
[377.48229980 269.54782104]
[388.45150757 279.78491211]
[398.82397461 290.62615967]
[408.56649780 302.03686523]
[417.64785767 313.98049927]
[426.03897095 326.41876221]
[433.71292114 339.31185913]
[440.64517212 352.61843872]
[446.81350708 366.29589844]
[452.19812012 380.30041504]
[456.78182983 394.58715820]
[460.54989624 409.11035156]
[463.49029541 423.82345581]
[465.59359741 438.67932129]
[466.85302734 453.63043213]
[467.26461792 468.62881470]
[466.82696533 483.62646484]
[465.54156494 498.57534790]
[463.41247559 513.42755127]
[460.44650269 528.13549805]
[456.65319824 542.65216064]
[452.04467773 556.93090820]
[446.63571167 570.92602539]
[440.44366455 584.59277344]
[433.48831177 597.88726807]
[425.79196167 610.76702881]
[417.37924194 623.19067383]
[408.27716064 635.11853027]
[398.51483154 646.51226807]
[388.12350464 657.33551025]
[377.13653564 667.55352783]
[365.58905029 677.13354492]
[353.51809692 686.04492188]
[340.96228027 694.25915527]
[327.96188354 701.74981689]
[314.55850220 708.49304199]
[300.79510498 714.46710205]
[286.71572876 719.65295410]
[272.36553955 724.03399658]
[257.79049683 727.59613037]
[243.03724670 730.32794189]
[228.15307617 732.22076416]
[213.18566895 733.26849365]
[198.18293762 733.46771240]
[183.19297791 732.81781006]
[168.26380920 731.32092285]
[153.44322205 728.98181152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 147]
[47 146]
[48 145]
[49 144]
[50 142]
[51 141]
[52 140]
[53 139]
[55 137]
[56 134]
[57 133]
[58 132]
[59 131]
[60 130]
[61 129]
[62 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
