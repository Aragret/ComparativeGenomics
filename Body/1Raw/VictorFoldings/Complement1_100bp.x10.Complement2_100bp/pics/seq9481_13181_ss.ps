%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[191.81706238 502.19338989]
[194.63066101 487.43643188]
[199.38613892 473.18621826]
[205.99859619 459.69702148]
[214.35005188 447.20956421]
[224.29145813 435.94668579]
[235.64540100 426.10943604]
[248.20924377 417.87335205]
[241.72975159 404.34500122]
[225.64324951 399.43954468]
[217.93002319 384.11569214]
[223.79928589 367.63626099]
[217.11909485 354.20590210]
[210.43890381 340.77551270]
[203.75871277 327.34515381]
[197.07850647 313.91476440]
[190.39831543 300.48437500]
[183.71812439 287.05401611]
[177.03793335 273.62362671]
[170.35772705 260.19326782]
[163.67753601 246.76287842]
[156.99734497 233.33250427]
[150.21734619 219.95223999]
[143.23890686 206.67439270]
[130.41209412 199.10324097]
[130.72306824 183.28509521]
[123.64595795 170.05957031]
[116.56885529 156.83403015]
[109.49175262 143.60850525]
[106.82409668 158.36938477]
[96.67774200 169.41708374]
[82.19664764 173.32833862]
[67.86794281 168.89122009]
[58.13151932 157.48060608]
[56.00432587 142.63220215]
[62.14549255 128.94694519]
[74.65211487 120.66537476]
[89.64887238 120.35360718]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[81.72945404 92.03828430]
[75.92572021 105.87000275]
[66.50498199 117.54261780]
[54.21021652 126.13555908]
[40.01102448 130.97116089]
[25.02722359 131.66806030]
[10.44049358 128.17129517]
[-2.59879327 120.75665283]
[-13.06230450 110.00886536]
[-20.12484360 96.77555084]
[-23.22943115 82.10034943]
[-22.13122368 67.14060211]
[-16.91683388 53.07610703]
[-7.99748611 41.01603699]
[3.92339993 31.91150856]
[17.90569305 26.48053551]
[32.84669495 25.15143204]
[47.56809235 28.02901459]
[60.90889359 34.88634491]
[71.81698608 45.18262863]
[79.43344879 58.10906219]
[78.54063416 43.13565445]
[77.64781189 28.16225052]
[76.75499725 13.18884468]
[75.86218262 -1.78456151]
[74.52394867 -16.72474670]
[72.74148560 -31.61846352]
[70.95901489 -46.51218033]
[69.17655182 -61.40589905]
[65.04955292 -69.55486298]
[67.48012543 -76.53441620]
[65.91960144 -91.45301819]
[56.78858566 -104.37335968]
[63.15982056 -117.83651733]
[54.02880859 -130.75685120]
[60.40004349 -144.22001648]
[58.83951950 -159.13862610]
[57.27899551 -174.05722046]
[55.71847153 -188.97583008]
[54.15795135 -203.89443970]
[39.14895248 -204.74658203]
[24.47104073 -207.99543762]
[10.50440884 -213.55685425]
[-2.38917446 -221.28677368]
[-13.87573433 -230.98498535]
[-23.65773964 -242.40025330]
[-31.48181534 -255.23692322]
[-37.14529800 -269.16247559]
[-40.50149155 -283.81622314]
[-41.46345901 -298.81857300]
[-40.00628281 -313.78097534]
[-36.16771317 -328.31579590]
[-30.04717064 -342.04660034]
[-21.80319786 -354.61773682]
[-11.64933109 -365.70355225]
[0.15141931 -375.01687622]
[13.29338646 -382.31652832]
[27.43616104 -387.41342163]
[42.21340942 -390.17547607]
[57.24237061 -390.53121948]
[72.13375092 -388.47137451]
[86.50183868 -384.04934692]
[99.97444916 -377.37966919]
[112.20262909 -368.63507080]
[122.86962128 -358.04208374]
[131.69914246 -345.87509155]
[138.46246338 -332.44921875]
[142.98442078 -318.11227417]
[145.14787292 -303.23559570]
[144.89678955 -288.20452881]
[142.23767090 -273.40841675]
[137.23937988 -259.23049927]
[130.03141785 -246.03802490]
[120.80044556 -234.17271423]
[109.78559875 -223.94190979]
[97.27217865 -215.61062622]
[83.58431244 -209.39462280]
[69.07655334 -205.45495605]
[70.63707733 -190.53634644]
[72.19760132 -175.61775208]
[73.75812531 -160.69914246]
[75.31864929 -145.78053284]
[84.33804321 -133.92727661]
[78.07842255 -119.39704132]
[87.09782410 -107.54377747]
[80.83820343 -93.01354218]
[82.39872742 -78.09494019]
[84.07026672 -63.18836594]
[85.85273743 -48.29464722]
[87.63520050 -33.40092850]
[89.41766357 -18.50721169]
[91.53544617 -16.67060089]
[93.05332947 -13.88444710]
[93.60599518 -10.37304211]
[92.91600037 -6.48865891]
[90.83558655 -2.67737746]
[91.72840118 12.29602814]
[92.62122345 27.26943398]
[93.51403809 42.24283981]
[94.40685272 57.21624756]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[122.71727753 136.53140259]
[129.79438782 149.75692749]
[136.87149048 162.98245239]
[143.94859314 176.20799255]
[157.28160095 184.72511292]
[156.46443176 199.59729004]
[163.27250671 205.68725586]
[163.54678345 213.07281494]
[170.26344299 219.26348877]
[170.42771912 226.65231323]
[177.10791016 240.08268738]
[183.78811646 253.51306152]
[190.46830750 266.94345093]
[197.14849854 280.37380981]
[203.82868958 293.80419922]
[210.50888062 307.23455811]
[217.18908691 320.66494751]
[223.86927795 334.09530640]
[230.54946899 347.52569580]
[237.22966003 360.95608521]
[250.40707397 363.74362183]
[259.44113159 373.46969604]
[261.19793701 386.43099976]
[255.25808716 397.86550903]
[261.73757935 411.39385986]
[276.03005981 406.76690674]
[290.81173706 404.08633423]
[305.81881714 403.39993286]
[320.78347778 404.72000122]
[335.43865967 408.02291870]
[349.52279663 413.24975586]
[362.78457642 420.30728149]
[374.98733521 429.06948853]
[385.91326904 439.38003540]
[395.36740112 451.05493164]
[403.18103027 463.88577271]
[409.21466064 477.64364624]
[413.36068726 492.08294678]
[415.54507446 506.94607544]
[415.72882080 521.96771240]
[413.90872192 536.87982178]
[410.11718750 551.41619873]
[404.42190552 565.31756592]
[396.92449951 578.33575439]
[387.75881958 590.23840332]
[377.08837891 600.81317139]
[365.10363770 609.87127686]
[352.01849365 617.25109863]
[338.06640625 622.82092285]
[323.49642944 626.48138428]
[308.56854248 628.16711426]
[293.54916382 627.84808350]
[278.70632935 625.52990723]
[264.30493164 621.25402832]
[250.60198975 615.09667969]
[237.84204102 607.16784668]
[226.25277710 597.60894775]
[216.04106140 586.59057617]
[207.38909912 574.30938721]
[200.45132446 560.98455811]
[195.35153198 546.85394287]
[192.18074036 532.16961670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 173]
[9 172]
[12 168]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[18 162]
[19 161]
[20 160]
[21 159]
[22 158]
[23 156]
[24 154]
[26 152]
[27 151]
[28 150]
[29 149]
[39 148]
[40 147]
[42 145]
[43 144]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 134]
[70 133]
[71 132]
[72 131]
[74 130]
[75 129]
[77 127]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
