%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[86.90515900 644.92535400]
[72.02069855 642.99291992]
[57.35746384 639.78808594]
[43.02401733 635.33459473]
[29.12648201 629.66534424]
[15.76774979 622.82244873]
[3.04672527 614.85644531]
[-8.94240665 605.82635498]
[-20.11088181 595.79907227]
[-30.37601089 584.84881592]
[-39.66179276 573.05657959]
[-47.89947891 560.50982666]
[-55.02807617 547.30133057]
[-60.99480820 533.52886963]
[-65.75550079 519.29455566]
[-69.27490234 504.70358276]
[-71.52696228 489.86413574]
[-72.49500275 474.88601685]
[-72.17185211 459.88009644]
[-70.55991364 444.95755005]
[-67.67111206 430.22879028]
[-63.52683640 415.80288696]
[-58.15777588 401.78665161]
[-51.60367966 388.28387451]
[-43.91307068 375.39450073]
[-35.14288712 363.21395874]
[-25.35806847 351.83245850]
[-14.63105202 341.33422852]
[-3.04126072 331.79702759]
[9.32549667 323.29147339]
[22.37765884 315.88049316]
[36.01859283 309.61898804]
[50.14730072 304.55331421]
[64.65917969 300.72097778]
[79.44678497 298.15036011]
[94.40063477 296.86047363]
[94.40063477 281.86047363]
[94.40063477 266.86047363]
[94.40063477 251.86047363]
[86.66333771 239.13320923]
[94.40063477 225.33303833]
[94.40063477 210.33303833]
[94.40063477 195.33303833]
[94.17730713 180.33468628]
[93.73070526 165.34133911]
[93.28409576 150.34799194]
[85.17128754 137.85673523]
[92.49427795 123.83231354]
[90.19246674 121.16135406]
[89.06999969 117.24279785]
[89.69915771 112.64307404]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[84.75199127 64.36303711]
[92.48928833 51.63576508]
[92.48928833 36.63576508]
[92.48928833 21.63576317]
[92.48928833 6.63576365]
[92.48928833 -8.36423683]
[84.75199127 -22.16440964]
[92.48928833 -34.89168167]
[84.75199127 -48.69185257]
[92.48928833 -61.41912460]
[92.48928833 -76.41912842]
[92.48928833 -91.41912842]
[92.48928833 -106.41912842]
[80.15810394 -108.74501038]
[68.39400482 -113.10223389]
[57.52896118 -119.36655426]
[47.86936569 -127.35997772]
[39.68739319 -136.85574341]
[33.21332169 -147.58476257]
[28.62905693 -159.24331665]
[26.06302452 -171.50155640]
[25.58656883 -184.01289368]
[27.21197128 -196.42379761]
[30.89213753 -208.38375854]
[36.52195740 -219.55519104]
[43.94131088 -229.62300110]
[52.93961716 -238.30343628]
[63.26182175 -245.35208130]
[74.61560822 -250.57075500]
[86.67970276 -253.81309509]
[99.11292267 -254.98861694]
[92.63767242 -269.42404175]
[101.47958374 -281.41027832]
[102.81781769 -296.35046387]
[104.15605164 -311.29064941]
[105.49428558 -326.23083496]
[106.83251953 -341.17102051]
[92.31321716 -345.09033203]
[78.69515228 -351.47149658]
[66.39216614 -360.12063599]
[55.77812958 -370.77490234]
[47.17559433 -383.11053467]
[40.84597778 -396.75262451]
[36.98163605 -411.28665161]
[35.69999695 -426.27093506]
[37.04001236 -441.25009155]
[40.96095657 -455.76895142]
[47.34367752 -469.38632202]
[55.99421310 -481.68832397]
[66.64968109 -492.30114746]
[78.98627472 -500.90228271]
[92.62910461 -507.23034668]
[107.16356659 -511.09304810]
[122.14798737 -512.37298584]
[137.12699890 -511.03128052]
[151.64541626 -507.10867310]
[165.26203918 -500.72439575]
[177.56306458 -492.07247925]
[188.17468262 -481.41580200]
[196.77441406 -469.07824707]
[203.10093689 -455.43469238]
[206.96199036 -440.89978027]
[208.24021912 -425.91522217]
[206.89682007 -410.93637085]
[202.97257996 -396.41839600]
[196.58676147 -382.80249023]
[187.93344116 -370.50244141]
[177.27557373 -359.89202881]
[164.93702698 -351.29370117]
[151.29275513 -344.96871948]
[136.75741577 -341.10934448]
[121.77270508 -339.83279419]
[120.43447113 -324.89260864]
[119.09623718 -309.95242310]
[117.75800323 -295.01223755]
[116.41976929 -280.07205200]
[122.99074554 -266.70523071]
[114.05310822 -253.65039062]
[130.83602905 -248.32127380]
[145.90002441 -239.18865967]
[158.39724731 -226.76245117]
[167.62336731 -211.73803711]
[173.05722046 -194.95738220]
[174.39030457 -177.36183167]
[171.54425049 -159.93933105]
[164.67543030 -143.66891479]
[154.16638184 -129.46572876]
[140.60447693 -118.12954712]
[124.74914551 -110.29972076]
[107.48928833 -106.41912842]
[107.48928833 -91.41912842]
[107.48928833 -76.41912842]
[107.48928833 -61.41912460]
[115.22659302 -48.69185257]
[107.48928833 -34.89168167]
[115.22659302 -22.16440964]
[107.48928833 -8.36423683]
[107.48928833 6.63576365]
[107.48928833 21.63576317]
[107.48928833 36.63576508]
[107.48928833 51.63576508]
[115.22659302 64.36303711]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[107.48762512 123.38570404]
[115.63237762 136.94938660]
[108.27745056 149.90138245]
[108.72405243 164.89474487]
[109.17066193 179.88809204]
[112.31478119 185.70410156]
[112.08432007 191.38247681]
[109.40063477 195.33303833]
[109.40063477 210.33303833]
[109.40063477 225.33303833]
[117.13793945 239.13320923]
[109.40063477 251.86047363]
[109.40063477 266.86047363]
[109.40063477 281.86047363]
[109.40063477 296.86047363]
[124.35448456 298.15036011]
[139.14208984 300.72097778]
[153.65397644 304.55331421]
[167.78268433 309.61898804]
[181.42361450 315.88049316]
[194.47578430 323.29147339]
[206.84254456 331.79702759]
[218.43232727 341.33422852]
[229.15934753 351.83245850]
[238.94416809 363.21395874]
[247.71434021 375.39450073]
[255.40495300 388.28387451]
[261.95904541 401.78665161]
[267.32812500 415.80288696]
[271.47238159 430.22879028]
[274.36117554 444.95755005]
[275.97314453 459.88009644]
[276.29626465 474.88601685]
[275.32824707 489.86413574]
[273.07617188 504.70358276]
[269.55679321 519.29455566]
[264.79608154 533.52886963]
[258.82934570 547.30133057]
[251.70075989 560.50982666]
[243.46307373 573.05657959]
[234.17729187 584.84881592]
[223.91215515 595.79907227]
[212.74368286 605.82635498]
[200.75454712 614.85644531]
[188.03352356 622.82244873]
[174.67478943 629.66534424]
[160.77725220 635.33459473]
[146.44381714 639.78808594]
[131.78057861 642.99291992]
[116.89611816 644.92535400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 175]
[37 174]
[38 173]
[39 172]
[41 170]
[42 169]
[43 168]
[44 165]
[45 164]
[46 163]
[48 161]
[52 160]
[53 158]
[54 157]
[56 155]
[57 154]
[58 153]
[59 152]
[60 151]
[62 149]
[64 147]
[65 146]
[66 145]
[67 144]
[85 132]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
