%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[84.08479309 564.88433838]
[71.02478790 557.47601318]
[58.84235001 548.69903564]
[47.68029785 538.65631104]
[37.66950989 527.46563721]
[28.92735100 515.25817871]
[21.55632210 502.17706299]
[15.64284229 488.37570190]
[11.25624657 474.01586914]
[8.44796467 459.26593018]
[7.25092125 444.29879761]
[7.67915249 429.29000854]
[9.72763634 414.41549683]
[13.37235641 399.84967041]
[18.57057953 385.76330566]
[25.26136017 372.32156372]
[33.36625290 359.68203735]
[42.79022598 347.99288940]
[53.42279816 337.39120483]
[65.13929749 328.00128174]
[77.80236816 319.93319702]
[91.26352692 313.28155518]
[105.36495209 308.12432861]
[119.94132233 304.52197266]
[117.93730927 289.65646362]
[115.93329620 274.79092407]
[113.59780884 259.97387695]
[110.93200684 245.21264648]
[108.15640259 230.47167969]
[105.27112579 215.75178528]
[102.38585663 201.03190613]
[94.09050751 213.52938843]
[79.73873138 217.89134216]
[65.89198303 212.12355042]
[58.88079453 198.86296082]
[61.91059113 184.17214966]
[73.59619141 174.76753235]
[88.59510040 174.94879150]
[100.05093384 184.63465881]
[98.71269989 169.69447327]
[97.37446594 154.75428772]
[83.28208160 152.20571899]
[70.33071136 146.09402466]
[59.40431976 136.83634949]
[51.24864197 125.06453705]
[46.42031479 111.58203888]
[45.24888229 97.30904388]
[47.81429291 83.21970367]
[53.94145584 70.27565002]
[63.21218491 59.36032867]
[74.99373627 51.21872330]
[88.48199463 46.40651321]
[87.36634827 31.44805908]
[86.25070190 16.48960686]
[85.13504791 1.53115320]
[84.01940155 -13.42730045]
[69.51412964 -22.12747765]
[63.11628342 -37.60548782]
[67.16418457 -53.68579483]
[79.87046051 -64.07946014]
[78.53222656 -79.01964569]
[77.19398499 -93.95983124]
[71.73625183 -79.98796082]
[63.01685333 -67.78254700]
[51.56898499 -58.08995819]
[38.09268188 -51.50290298]
[23.41203499 -48.42417526]
[8.42476654 -49.04204178]
[-5.95264673 -53.31872177]
[-18.84101868 -60.99269485]
[-29.45222282 -71.59469604]
[-37.13737488 -84.47640228]
[-41.42653275 -98.85009766]
[-42.05740356 -113.83682251]
[-38.99141693 -128.52014160]
[-32.41605759 -142.00215149]
[-22.73340607 -153.45843506]
[-10.53556633 -162.18841553]
[3.43156147 -167.65827942]
[18.31388283 -169.53350830]
[33.20133591 -167.69946289]
[47.18354797 -162.26829529]
[59.40550232 -153.57209778]
[69.11982727 -142.14265442]
[75.73247528 -128.67889404]
[78.83908844 -114.00409698]
[82.59539032 -128.52615356]
[86.35169220 -143.04821777]
[90.10799408 -157.57028198]
[93.86429596 -172.09233093]
[97.62059021 -186.61439514]
[93.58566284 -201.91242981]
[104.26359558 -212.29660034]
[108.01989746 -226.81866455]
[111.77619934 -241.34071350]
[115.53250122 -255.86277771]
[119.28880310 -270.38482666]
[123.04509735 -284.90689087]
[126.80139923 -299.42895508]
[113.28318787 -306.05035400]
[101.37477875 -315.25765991]
[91.56381226 -326.67385864]
[84.25205231 -339.83148193]
[79.73890686 -354.19174194]
[78.20917511 -369.16653442]
[79.72551727 -384.14270020]
[84.22582245 -398.50695801]
[91.52581787 -411.67111206]
[101.32656860 -423.09609985]
[113.22674561 -432.31405640]
[126.73902893 -438.94754028]
[141.31011963 -442.72488403]
[156.34332275 -443.49142456]
[171.22305298 -441.21575928]
[185.33998108 -435.99108887]
[198.11604309 -428.03137207]
[209.02804565 -417.66250610]
[217.62916565 -405.30914307]
[223.56719971 -391.47714233]
[226.59896851 -376.73287964]
[226.60032654 -361.68014526]
[223.57124329 -346.93533325]
[217.63572693 -333.10223389]
[209.03683472 -320.74731445]
[198.12670898 -310.37646484]
[185.35209656 -302.41442871]
[171.23611450 -297.18719482]
[156.35681152 -294.90884399]
[141.32345581 -295.67266846]
[137.56715393 -281.15060425]
[133.81085205 -266.62854004]
[130.05456543 -252.10647583]
[126.29825592 -237.58441162]
[122.54195404 -223.06236267]
[118.78565979 -208.54029846]
[123.08926392 -194.28097534]
[112.14265442 -182.85809326]
[108.38635254 -168.33602905]
[104.63005066 -153.81398010]
[100.87374878 -139.29191589]
[97.11744690 -124.76985168]
[93.36115265 -110.24779510]
[92.13417053 -95.29806519]
[93.47240448 -80.35787964]
[94.81063843 -65.41769409]
[106.85505676 -59.65799332]
[114.54233551 -48.61037445]
[115.77674866 -35.09942245]
[110.12935638 -22.64448547]
[98.97785950 -14.54294872]
[100.09350586 0.41550452]
[101.20915222 15.37395763]
[102.32479858 30.33241081]
[103.44045258 45.29086304]
[118.69491577 48.46917343]
[132.43882751 55.81121063]
[143.56164551 66.72373962]
[151.16464233 80.32501221]
[154.63351440 95.51604462]
[153.68794250 111.06938171]
[148.40434265 125.72830200]
[139.20964050 138.30834961]
[126.84676361 147.79306030]
[112.31465149 153.41606140]
[113.65288544 168.35624695]
[114.99111938 183.29643250]
[117.10574341 198.14662170]
[119.99102020 212.86651611]
[122.87628937 227.58641052]
[127.59795380 235.40585327]
[125.69322968 242.54684448]
[128.35902405 257.30807495]
[131.73214722 261.29168701]
[133.10287476 265.72726440]
[132.63433838 269.77639771]
[130.79882812 272.78692627]
[132.80284119 287.65243530]
[134.80685425 302.51797485]
[149.81678772 302.13180542]
[164.78047180 303.37075806]
[179.52249146 306.22036743]
[193.86999512 310.64715576]
[207.65473938 316.59927368]
[220.71514893 324.00692749]
[232.89805603 332.78326416]
[244.06065369 342.82534790]
[254.07203674 354.01550293]
[262.81484985 366.22247314]
[270.18658447 379.30319214]
[276.10079956 393.10424805]
[280.48818970 407.46383667]
[283.29724121 422.21362305]
[284.49511719 437.18069458]
[284.06768799 452.18948364]
[282.01998901 467.06411743]
[278.37606812 481.63012695]
[273.17858887 495.71676636]
[266.48852539 509.15890503]
[258.38433838 521.79888916]
[248.96098328 533.48852539]
[238.32897949 544.09075928]
[226.61297607 553.48132324]
[213.95034790 561.55010986]
[200.48954773 568.20245361]
[186.38839722 573.36047363]
[171.81222534 576.96356201]
[156.93193054 578.96954346]
[141.92198181 579.35491943]
[126.95834351 578.11517334]
[112.21648407 575.26477051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 178]
[25 177]
[26 176]
[27 172]
[28 171]
[29 169]
[30 168]
[31 167]
[39 166]
[40 165]
[41 164]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[60 145]
[61 144]
[62 143]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[93 135]
[94 134]
[95 133]
[96 132]
[97 131]
[98 130]
[99 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
