%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[78.35207367 858.95709229]
[63.35106277 858.28662109]
[48.51944733 855.94073486]
[34.04375839 851.94891357]
[20.10603714 846.36145020]
[6.88156939 839.24853516]
[-5.46333456 830.69964600]
[-16.77342415 820.82232666]
[-26.90646362 809.74072266]
[-35.73501968 797.59423828]
[-43.14805984 784.53564453]
[-49.05236435 770.72918701]
[-53.37367249 756.34838867]
[-56.05764389 741.57421875]
[-57.07052612 726.59246826]
[-56.39957809 711.59143066]
[-54.05323792 696.75988770]
[-50.06101608 682.28430176]
[-44.47311783 668.34680176]
[-37.35981369 655.12249756]
[-28.81056213 642.77789307]
[-18.93288231 631.46807861]
[-7.85099459 621.33538818]
[4.29573536 612.50720215]
[17.35454941 605.09454346]
[31.16121674 599.19061279]
[45.54210663 594.86975098]
[60.31636429 592.18621826]
[75.29818726 591.17376709]
[75.96797180 576.18878174]
[76.63775635 561.20373535]
[77.30754089 546.21868896]
[74.46585083 539.39617920]
[78.10049438 531.01599121]
[78.99331665 516.04260254]
[76.25350952 509.17855835]
[80.01252747 500.85342407]
[73.24327087 487.58593750]
[81.98554993 474.39944458]
[83.10119629 459.44100952]
[84.21684265 444.48254395]
[85.33248901 429.52410889]
[71.57092285 415.73519897]
[72.39979553 395.96612549]
[87.73324585 382.98287964]
[88.17984772 367.98953247]
[88.62645721 352.99615479]
[89.07305908 338.00280762]
[89.51966858 323.00946045]
[74.60093689 318.65612793]
[61.30451965 310.58944702]
[50.53676605 299.35250854]
[43.03340149 285.70483398]
[39.30925369 270.57086182]
[39.62293243 254.97740173]
[43.95888519 239.98403931]
[52.02805328 226.61100769]
[63.28713989 215.76986694]
[76.97518921 208.20132446]
[92.16500854 204.42460632]
[92.38833618 189.42626953]
[92.50000000 174.42668152]
[92.50000000 159.42668152]
[92.50000000 144.42668152]
[92.50000000 129.42668152]
[92.50000000 114.42668152]
[84.77587128 105.71007538]
[84.86257172 94.06388855]
[92.71562195 85.46325684]
[85.18464661 71.54941559]
[93.11058044 58.93875122]
[80.69324493 67.35361481]
[66.32747650 63.03799820]
[60.60317230 49.17321014]
[67.74008179 35.97985840]
[82.47714233 33.18358994]
[93.95005035 42.84420776]
[95.28828430 27.90402412]
[96.62651825 12.96383858]
[97.96475220 -1.97634649]
[95.61344147 -10.80296230]
[99.43575287 -17.12844467]
[100.99627686 -32.04705048]
[102.55680084 -46.96565247]
[91.29409027 -60.35112381]
[93.16008759 -77.40494537]
[106.51458740 -87.62728119]
[107.85282135 -102.56746674]
[109.19105530 -117.50765228]
[101.05783844 -134.02830505]
[111.70555115 -147.97798157]
[112.82120514 -162.93643188]
[113.93685150 -177.89488220]
[115.05249786 -192.85333252]
[116.16814423 -207.81178284]
[117.28379822 -222.77024841]
[110.59433746 -237.10766602]
[119.25682068 -249.22421265]
[120.37246704 -264.18267822]
[121.48811340 -279.14111328]
[107.76969147 -285.63491821]
[97.32630920 -296.64855957]
[91.57035065 -310.69253540]
[91.28025818 -325.86752319]
[96.49526978 -340.12121582]
[106.51008606 -351.52593994]
[119.97030640 -358.53930664]
[135.05552673 -360.21276855]
[149.72560120 -356.32003784]
[161.99652100 -347.38760376]
[170.20875549 -334.62344360]
[173.25166321 -319.75381470]
[170.71369934 -304.78976440]
[162.93812561 -291.75500488]
[150.97651672 -282.41241455]
[136.44656372 -278.02548218]
[135.33091736 -263.06701660]
[134.21527100 -248.10856628]
[140.98452759 -234.84106445]
[132.24224854 -221.65458679]
[131.12660217 -206.69613647]
[130.01095581 -191.73768616]
[128.89530945 -176.77923584]
[127.77965546 -161.82078552]
[126.66400909 -146.86231995]
[134.31742859 -137.49473572]
[133.51039124 -125.02347565]
[124.13124084 -116.16941833]
[122.79300690 -101.22923279]
[121.45477295 -86.28904724]
[131.01898193 -77.65449524]
[133.90678406 -64.89743042]
[128.84538269 -52.62581635]
[117.47540283 -45.40513229]
[115.91487885 -30.48652649]
[114.35435486 -15.56792068]
[112.90493774 -0.63811231]
[111.56670380 14.30207253]
[110.22846985 29.24225807]
[108.89023590 44.18244171]
[108.10891724 59.16207886]
[115.65586853 72.00313568]
[107.71395874 85.68658447]
[116.25928497 100.12104797]
[107.50000000 114.42668152]
[107.50000000 129.42668152]
[107.50000000 144.42668152]
[107.50000000 159.42668152]
[107.50000000 174.42668152]
[110.62940979 183.00831604]
[107.38667297 189.64959717]
[107.16334534 204.64793396]
[121.16448212 208.42948914]
[133.84245300 215.45278931]
[144.46002197 225.30424500]
[152.40098572 237.40592957]
[157.20600891 251.04953003]
[158.59909058 265.43777466]
[156.50350952 279.73104858]
[151.04595947 293.09634399]
[142.54898071 304.75585938]
[131.51179504 314.03219604]
[118.58108521 320.38781738]
[104.51301575 323.45608521]
[104.06641388 338.44943237]
[103.61980438 353.44277954]
[103.17319489 368.43612671]
[102.72659302 383.42947388]
[111.74783325 389.12518311]
[117.54674530 397.98406982]
[119.13306427 408.37094116]
[116.28681946 418.40145874]
[109.58605194 426.28405762]
[100.29094696 430.63973999]
[99.17530060 445.59820557]
[98.05964661 460.55664062]
[96.94400024 475.51510620]
[103.63346100 489.85253906]
[94.97097778 501.96908569]
[93.96672058 516.93542480]
[93.07390594 531.90881348]
[92.29257965 546.88848877]
[91.62279510 561.87347412]
[90.95301056 576.85852051]
[90.28322601 591.84356689]
[105.11498260 594.18859863]
[119.59091187 598.17950439]
[133.52896118 603.76617432]
[146.75386047 610.87829590]
[159.09927368 619.42639160]
[170.40995789 629.30310059]
[180.54365540 640.38409424]
[189.37294006 652.53002930]
[196.78675842 665.58813477]
[202.69189453 679.39428711]
[207.01405334 693.77478027]
[209.69891357 708.54882812]
[210.71269226 723.53051758]
[210.04263306 738.53155518]
[207.69718933 753.36328125]
[203.70582581 767.83905029]
[198.11875916 781.77697754]
[191.00625610 795.00164795]
[182.45773315 807.34680176]
[172.58073425 818.65716553]
[161.49945068 828.79052734]
[149.35325623 837.61944580]
[136.29487610 845.03289795]
[122.48856354 850.93762207]
[108.10793304 855.25933838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 185]
[30 184]
[31 183]
[32 182]
[34 181]
[35 180]
[37 179]
[39 177]
[40 176]
[41 175]
[42 174]
[45 168]
[46 167]
[47 166]
[48 165]
[49 164]
[60 152]
[61 151]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[69 143]
[71 141]
[77 140]
[78 139]
[79 138]
[80 137]
[82 136]
[83 135]
[84 134]
[87 130]
[88 129]
[89 128]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
