%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[131.84814453 395.48663330]
[131.98599243 410.57449341]
[128.21316528 425.18365479]
[120.78692627 438.31811523]
[110.21359253 449.08224487]
[97.21407318 456.74221802]
[82.67469788 460.77569580]
[67.58679199 460.90771484]
[52.97906876 457.12927246]
[39.84750366 449.69793701]
[29.08743095 439.12045288]
[21.43249321 426.11798096]
[17.40461540 411.57705688]
[17.27842331 396.48910522]
[21.06252289 381.88284302]
[28.49890709 368.75415039]
[39.08055115 357.99813843]
[52.08597946 350.34823608]
[66.62846375 346.32595825]
[81.71646881 346.20559692]
[85.47277069 331.68353271]
[89.22907257 317.16149902]
[92.98537445 302.63943481]
[96.74166870 288.11737061]
[100.49797058 273.59530640]
[101.94738770 258.66549683]
[101.05457306 243.69209290]
[100.16175842 228.71868896]
[99.26894379 213.74528503]
[98.37612915 198.77188110]
[84.99556732 192.22770691]
[76.63155365 179.78186035]
[75.61347198 164.72097778]
[82.31465912 151.08312988]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[87.46305847 58.68881607]
[81.59409332 44.88463974]
[75.72513580 31.08046341]
[69.85617065 17.27628517]
[62.97676086 3.94685674]
[55.12500381 -8.83398533]
[46.80306244 -21.31377983]
[38.02245712 -33.47523499]
[29.24185371 -45.63669205]
[20.46125031 -57.79814529]
[11.68064785 -69.95960236]
[2.90004468 -82.12105560]
[-5.88055849 -94.28251648]
[-14.66116142 -106.44396973]
[-27.65950012 -98.93170166]
[-41.35116196 -92.77301025]
[-55.59564590 -88.03110504]
[-70.24678040 -84.75463867]
[-85.15422058 -82.97723389]
[-100.16500092 -82.71713257]
[-115.12506866 -83.97699738]
[-129.88092041 -86.74390411]
[-144.28114319 -90.98946381]
[-158.17794800 -96.67010498]
[-171.42874146 -103.72753906]
[-183.89755249 -112.08934021]
[-195.45643616 -121.66970825]
[-205.98675537 -132.37033081]
[-215.38047791 -144.08139038]
[-223.54119873 -156.68272400]
[-230.38516235 -170.04502869]
[-235.84216309 -184.03117371]
[-239.85618591 -198.49763489]
[-242.38604736 -213.29597473]
[-243.40577698 -228.27433777]
[-242.90492249 -243.27900696]
[-240.88861084 -258.15600586]
[-237.37754822 -272.75271606]
[-232.40776062 -286.91931152]
[-226.03024292 -300.51040649]
[-218.31044006 -313.38656616]
[-209.32756042 -325.41564941]
[-199.17378235 -336.47424316]
[-187.95332336 -346.44882202]
[-175.78131104 -355.23703003]
[-162.78263855 -362.74874878]
[-149.09069824 -368.90682983]
[-134.84600830 -373.64810181]
[-120.19473267 -376.92391968]
[-105.28720856 -378.70068359]
[-90.27642822 -378.96011353]
[-75.31640625 -377.69958496]
[-60.56067657 -374.93203735]
[-46.16064835 -370.68585205]
[-32.26408768 -365.00457764]
[-19.01360130 -357.94656372]
[-6.54515600 -349.58422852]
[5.01329803 -340.00335693]
[15.54315376 -329.30227661]
[24.93635750 -317.59078979]
[33.09651947 -304.98907471]
[39.93989944 -291.62649536]
[45.39627838 -277.64010620]
[49.40966415 -263.17346191]
[51.93886948 -248.37500000]
[52.95794296 -233.39660645]
[52.45642853 -218.39195251]
[50.43947220 -203.51502991]
[46.92776489 -188.91848755]
[41.95735168 -174.75212097]
[35.57923126 -161.16130066]
[27.85885811 -148.28547668]
[18.87545013 -136.25679016]
[8.72119617 -125.19866180]
[-2.49970603 -115.22457123]
[6.28089714 -103.06311798]
[15.06150055 -90.90166473]
[23.84210396 -78.74020386]
[32.62270737 -66.57875061]
[41.40330887 -54.41729355]
[50.18391418 -42.25584030]
[58.96451569 -30.09438324]
[63.89583206 -44.26061630]
[77.99465179 -49.38148880]
[90.86784363 -41.68208694]
[93.02577972 -26.83812141]
[82.87770081 -15.79201126]
[67.90584564 -16.68574142]
[75.75759888 -3.90489864]
[76.95796967 -18.85679245]
[85.39190674 -31.26117134]
[98.85482025 -37.87556076]
[113.82751465 -36.97097397]
[126.39617920 -28.78387070]
[133.27539062 -15.45433807]
[132.66694641 -0.46668378]
[124.72987366 12.26135540]
[111.53892517 19.40269852]
[96.54216766 19.09061813]
[83.66034698 11.40732479]
[89.52931213 25.21150208]
[95.39826965 39.01567841]
[101.26723480 52.81985474]
[102.16259766 37.84660339]
[106.70484924 23.55087090]
[114.61622620 10.80685043]
[125.41295624 0.39384377]
[138.43479919 -7.05139065]
[152.88548279 -11.07357311]
[167.88131714 -11.42674637]
[182.50532532 -8.08931255]
[195.86323547 -1.26535892]
[207.13819885 8.62782860]
[215.64074707 20.98527718]
[220.85096741 35.05132294]
[222.45022583 49.96582794]
[220.34074402 64.81675720]
[214.65150452 78.69596863]
[205.73042297 90.75475311]
[194.12301636 100.25570679]
[180.53907776 106.61783600]
[165.80928040 109.45210266]
[150.83435059 108.58518982]
[136.53001404 104.07010651]
[123.77099609 96.18295288]
[113.33749390 85.40602875]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[123.63029480 148.61961365]
[131.90460205 161.36453247]
[132.68344116 176.43966675]
[125.85763550 189.79122925]
[113.34953308 197.87905884]
[114.24234772 212.85246277]
[115.13516235 227.82588196]
[116.02798462 242.79928589]
[116.92079926 257.77267456]
[122.88105774 244.00769043]
[132.29107666 232.32644653]
[144.47155762 223.57223511]
[158.54316711 218.37704468]
[173.49005127 217.11592102]
[188.23320007 219.87989807]
[201.70828247 226.46942139]
[212.94253540 236.40882874]
[221.12493896 248.98056030]
[225.66479492 263.27703857]
[226.23435974 278.26623535]
[222.79254150 292.86602783]
[215.58778381 306.02243042]
[205.14021301 316.78573608]
[192.20405579 324.37887573]
[177.71316528 328.25369263]
[162.71368408 328.13049316]
[148.28840637 324.01815796]
[135.47871399 316.21356201]
[125.20934296 305.28012085]
[118.22167206 292.00711060]
[115.02003479 277.35162354]
[111.26373291 291.87365723]
[107.50743103 306.39572144]
[103.75112915 320.91778564]
[99.99482727 335.43984985]
[96.23852539 349.96191406]
[109.37582397 357.38308716]
[120.14406586 367.95227051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 208]
[21 207]
[22 206]
[23 205]
[24 204]
[25 203]
[26 181]
[27 180]
[28 179]
[29 178]
[30 177]
[35 172]
[36 171]
[37 170]
[39 168]
[40 167]
[41 143]
[42 142]
[43 141]
[44 140]
[45 129]
[46 128]
[47 122]
[48 121]
[49 120]
[50 119]
[51 118]
[52 117]
[53 116]
[54 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
