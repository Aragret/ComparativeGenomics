%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[4.18280792 392.98287964]
[11.84877110 405.94619751]
[16.54835129 420.25451660]
[18.06174469 435.23861694]
[16.31816101 450.19769287]
[11.39915657 464.43206787]
[3.53479815 477.27600098]
[-6.90708208 488.12869263]
[-19.43809891 496.48260498]
[-33.47215271 501.94696045]
[-48.35284805 504.26623535]
[-63.38418579 503.33190918]
[-77.86312103 499.18771362]
[-91.11245728 492.02746582]
[-102.51248932 482.18603516]
[-111.53001404 470.12377930]
[-117.74327850 456.40481567]
[-120.86166382 441.67086792]
[-120.73932648 426.61102295]
[-117.38198090 411.92965698]
[-110.94667053 398.31344604]
[-101.73436737 386.39929199]
[-90.17595673 376.74438477]
[-76.81204987 369.80029297]
[-62.26770020 365.89187622]
[-47.22316742 365.20187378]
[-32.38211441 367.76257324]
[-26.71932793 353.87255859]
[-21.05654144 339.98251343]
[-22.07967567 336.60827637]
[-21.51929474 332.57083130]
[-19.08148956 328.61981201]
[-14.81826687 325.60784912]
[-8.54090595 311.98452759]
[-2.26354575 298.36120605]
[-3.96447968 283.56405640]
[8.83794308 274.26843262]
[15.11530399 260.64511108]
[21.39266396 247.02180481]
[21.33687782 239.63134766]
[27.86623955 233.24345398]
[26.38580322 218.42260742]
[39.32520294 209.31863403]
[45.80469894 195.79028320]
[52.28419495 182.26193237]
[58.76369095 168.73359680]
[65.24318695 155.20524597]
[63.76274872 140.38439941]
[76.70215607 131.28041077]
[83.18164825 117.75207520]
[89.66114044 104.22372437]
[96.03974915 90.64752197]
[94.78781128 74.87592316]
[107.14123535 66.55473328]
[113.41860199 52.93141937]
[111.30518341 34.63893509]
[126.01885986 25.07469559]
[132.09269714 11.35942936]
[138.16651917 -2.35583711]
[126.79348755 -15.22222137]
[122.20344543 -31.71230888]
[125.27321625 -48.49551010]
[135.33761597 -62.20395660]
[150.33277893 -70.10829926]
[167.21929932 -70.66109467]
[172.88208008 -84.55111694]
[178.54486084 -98.44114685]
[184.20765686 -112.33117676]
[188.71528625 -126.63786316]
[192.03753662 -141.26531982]
[195.35980225 -155.89277649]
[198.68206787 -170.52024841]
[192.48117065 -181.83004761]
[195.54942322 -193.94490051]
[205.71325684 -200.50410461]
[209.25292969 -215.08047485]
[212.79260254 -229.65686035]
[216.33227539 -244.23323059]
[219.87194824 -258.80960083]
[215.60969543 -274.04586792]
[226.13185120 -284.58786011]
[229.67150879 -299.16424561]
[233.21118164 -313.74063110]
[219.05520630 -318.74053955]
[205.47769165 -325.14694214]
[192.61798096 -332.89413452]
[180.60803223 -341.90258789]
[169.57109070 -352.07986450]
[159.62039185 -363.32150269]
[150.85807800 -375.51220703]
[143.37405396 -388.52682495]
[137.24510193 -402.23181152]
[132.53413391 -416.48657227]
[129.28948975 -431.14477539]
[127.54445648 -446.05603027]
[127.31694794 -461.06735229]
[128.60929871 -476.02465820]
[131.40823364 -490.77444458]
[135.68504333 -505.16543579]
[141.39585876 -519.04986572]
[148.48204041 -532.28533936]
[156.87089539 -544.73596191]
[166.47633362 -556.27398682]
[177.19978333 -566.78106689]
[188.93122864 -576.14929199]
[201.55024719 -584.28265381]
[214.92738342 -591.09759521]
[228.92533875 -596.52423096]
[243.40048218 -600.50683594]
[258.20428467 -603.00451660]
[273.18481445 -603.99176025]
[288.18835449 -603.45831299]
[303.06097412 -601.40972900]
[317.64999390 -597.86694336]
[331.80575562 -592.86645508]
[345.38299561 -586.45941162]
[358.24237061 -578.71166992]
[370.25192261 -569.70269775]
[381.28842163 -559.52490234]
[391.23861694 -548.28283691]
[400.00039673 -536.09179688]
[407.48385620 -523.07684326]
[413.61218262 -509.37155151]
[418.32254028 -495.11660767]
[421.56652832 -480.45825195]
[423.31091309 -465.54690552]
[423.53775024 -450.53558350]
[422.24475098 -435.57833862]
[419.44515991 -420.82864380]
[415.16772461 -406.43786621]
[409.45629883 -392.55368042]
[402.36953735 -379.31854248]
[393.98013306 -366.86828613]
[384.37417603 -355.33065796]
[373.65026855 -344.82406616]
[361.91842651 -335.45632935]
[349.29904175 -327.32354736]
[335.92160034 -320.50918579]
[321.92340088 -315.08319092]
[307.44808960 -311.10122681]
[292.64416504 -308.60415649]
[277.66360474 -307.61761475]
[262.66006470 -308.15170288]
[247.78756714 -310.20095825]
[244.24789429 -295.62457275]
[240.70822144 -281.04818726]
[245.22364807 -266.85452271]
[234.44831848 -255.26992798]
[230.90864563 -240.69355774]
[227.36897278 -226.11718750]
[223.82929993 -211.54080200]
[220.28962708 -196.96443176]
[226.13017273 -180.41586304]
[213.30952454 -167.19798279]
[209.98725891 -152.57052612]
[206.66500854 -137.94306946]
[203.34274292 -123.31560516]
[214.33435059 -133.52268982]
[228.78594971 -137.54154968]
[243.46900940 -134.47438049]
[255.10331726 -125.00637817]
[261.08972168 -111.25272369]
[260.09085083 -96.28601837]
[252.32983398 -83.44985962]
[239.54054260 -75.61188507]
[224.58010864 -74.52311707]
[210.79074097 -80.42678070]
[201.25300598 -92.00399017]
[198.09768677 -106.66838837]
[192.43489075 -92.77835846]
[186.77210999 -78.88833618]
[181.10932922 -64.99830627]
[190.57650757 -56.10357666]
[196.47204590 -44.49249649]
[198.07484436 -31.53725815]
[195.17262268 -18.77719879]
[188.08963013 -7.73591185]
[177.65065002 0.26069066]
[165.08502197 4.24357843]
[151.88179016 3.71799684]
[145.80795288 17.43326378]
[139.73411560 31.14853096]
[143.79757690 42.54216766]
[138.84960938 54.01829147]
[127.04191589 59.20877838]
[120.76455688 72.83209229]
[122.46549225 87.62925720]
[109.66306305 96.92488098]
[109.41806793 104.98171234]
[103.18949127 110.70322418]
[96.70999146 124.23156738]
[90.23049927 137.75991821]
[91.24748230 153.54840088]
[78.77153015 161.68473816]
[72.29203796 175.21308899]
[65.81253815 188.74143982]
[59.33304596 202.26977539]
[52.85354996 215.79812622]
[53.87053299 231.58660889]
[41.39458466 239.72294617]
[35.01597977 253.29916382]
[28.73862076 266.92248535]
[22.46125984 280.54580688]
[23.71319389 296.31738281]
[11.35977077 304.63858032]
[5.08240986 318.26190186]
[-1.19495094 331.88522339]
[-7.16651392 345.64532471]
[-12.82929993 359.53533936]
[-18.49208641 373.42535400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 210]
[28 209]
[29 208]
[33 207]
[34 206]
[35 205]
[37 203]
[38 202]
[39 201]
[41 200]
[43 198]
[44 197]
[45 196]
[46 195]
[47 194]
[49 192]
[50 191]
[51 190]
[52 188]
[54 186]
[55 185]
[57 182]
[58 181]
[59 180]
[65 172]
[66 171]
[67 170]
[68 169]
[69 157]
[70 156]
[71 155]
[72 154]
[75 152]
[76 151]
[77 150]
[78 149]
[79 148]
[81 146]
[82 145]
[83 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
