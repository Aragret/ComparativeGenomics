%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[145.14125061 677.17132568]
[132.42733765 669.20281982]
[120.22286224 660.47399902]
[108.57323456 651.01745605]
[97.52178955 640.86822510]
[87.10964203 630.06414795]
[77.37551880 618.64538574]
[68.35562897 606.65447998]
[60.08354568 594.13592529]
[52.59002304 581.13641357]
[45.90294647 567.70422363]
[40.04719162 553.88934326]
[35.04454041 539.74316406]
[30.91360474 525.31829834]
[27.66975021 510.66845703]
[25.32504654 495.84808350]
[23.88821411 480.91235352]
[23.36460114 465.91677856]
[23.75615120 450.91720581]
[25.06141281 435.96939087]
[27.27552414 421.12896729]
[30.39025497 406.45111084]
[34.39401245 391.99044800]
[39.27190781 377.80075073]
[45.00579071 363.93484497]
[51.57432938 350.44430542]
[58.95309448 337.37927246]
[67.11463165 324.78839111]
[76.02857971 312.71850586]
[85.66177368 301.21447754]
[95.97838593 290.31915283]
[106.94004059 280.07302856]
[118.50594330 270.51422119]
[130.63308716 261.67831421]
[143.27633667 253.59814453]
[156.38867188 246.30380249]
[149.90917969 232.77545166]
[143.42968750 219.24711609]
[136.95018005 205.71876526]
[124.47423553 197.58242798]
[125.49121857 181.79394531]
[122.89514160 180.73634338]
[120.56156921 178.58666992]
[118.90855408 175.43978882]
[118.31212616 171.53993225]
[119.05570221 167.26196289]
[113.39292145 153.37193298]
[107.73013306 139.48190308]
[102.06734467 125.59188080]
[96.40455627 111.70185852]
[94.92570496 126.62877655]
[88.96419525 140.39323425]
[79.08823395 151.68328857]
[66.23913574 159.42285156]
[51.64160156 162.87422180]
[36.68696976 161.70845032]
[22.80062485 156.03665161]
[11.30612087 146.39941406]
[3.29904175 133.71530151]
[-0.45742866 119.19328308]
[0.39475265 104.21750641]
[5.77436113 90.21537018]
[15.16864681 78.52146912]
[27.68220520 70.25038147]
[42.12232590 66.19046783]
[57.11266708 66.72868347]
[71.22444153 71.81373596]
[83.11261749 80.96093750]
[91.64456940 93.29947662]
[89.86209869 78.40576172]
[88.07963562 63.51203918]
[86.29717255 48.61832428]
[84.51470184 33.72460556]
[72.37438202 23.96497726]
[70.77887726 8.83523750]
[80.15800476 -2.67855740]
[78.37554169 -17.57227516]
[69.05317688 -30.35523415]
[75.22325897 -43.91175842]
[72.99813843 -58.74580383]
[70.33234406 -73.50701904]
[67.66654968 -88.26823425]
[65.00075531 -103.02945709]
[62.33495712 -117.79067230]
[59.66916275 -132.55189514]
[44.61977005 -133.00958252]
[29.99449730 -136.58660889]
[16.43269920 -143.12658691]
[4.52723742 -152.34361267]
[-5.20143175 -163.83477783]
[-12.32801247 -177.09771729]
[-16.54096031 -191.55262756]
[-17.65610504 -206.56762695]
[-15.62469673 -221.48631287]
[-10.53553867 -235.65649414]
[-2.61110830 -248.45872498]
[7.80217266 -259.33334351]
[20.24908066 -267.80496216]
[34.18548965 -273.50320435]
[49.00215912 -276.17901611]
[64.05136871 -275.71539307]
[78.67523193 -272.13262939]
[92.23445892 -265.58731079]
[104.13629150 -256.36560059]
[113.86044312 -244.87062073]
[120.98180389 -231.60487366]
[125.18906403 -217.14830017]
[126.29830170 -202.13287354]
[124.26102448 -187.21498108]
[119.16629028 -173.04679871]
[111.23682404 -160.24769592]
[100.81926727 -149.37718201]
[88.36902618 -140.91046143]
[74.43038177 -135.21768188]
[77.09617615 -120.45646667]
[79.76197052 -105.69525146]
[82.42776489 -90.93402863]
[85.09355927 -76.17281342]
[87.75935364 -61.41159821]
[89.98270416 -59.70429611]
[91.66372681 -57.01342773]
[92.42441559 -53.54114151]
[91.96684265 -49.62257767]
[90.11697388 -45.69422531]
[99.31184387 -33.97656250]
[93.26925659 -19.35474014]
[95.05172729 -4.46102333]
[106.88298035 4.51433277]
[108.90281677 19.59328842]
[99.40842438 31.94214058]
[101.19088745 46.83585739]
[102.97335052 61.72957611]
[104.75582123 76.62329102]
[106.53828430 91.51700592]
[110.29458618 106.03907013]
[115.95737457 119.92909241]
[121.62015533 133.81912231]
[127.28294373 147.70915222]
[132.94572449 161.59918213]
[139.01956177 175.31443787]
[151.95896912 184.41842651]
[150.47853088 199.23927307]
[156.95802307 212.76762390]
[163.43751526 226.29595947]
[169.91702271 239.82431030]
[183.81951904 234.17971802]
[198.04026794 229.39315796]
[212.52638245 225.48248291]
[227.22395325 222.46220398]
[242.07832336 220.34356689]
[257.03421021 219.13446045]
[272.03601074 218.83937073]
[287.02789307 219.45939636]
[301.95407104 220.99224854]
[316.75906372 223.43220520]
[331.38775635 226.77020264]
[345.78573608 230.99382019]
[359.89944458 236.08732605]
[373.67639160 242.03179932]
[387.06530762 248.80511475]
[400.01638794 256.38208008]
[412.48147583 264.73449707]
[424.41415405 273.83129883]
[435.77005005 283.63864136]
[446.50695801 294.12005615]
[456.58489990 305.23654175]
[465.96636963 316.94674683]
[474.61648560 329.20709229]
[482.50308228 341.97198486]
[489.59680176 355.19393921]
[495.87127686 368.82376099]
[501.30313110 382.81072998]
[505.87219238 397.10284424]
[509.56143188 411.64694214]
[512.35717773 426.38888550]
[514.24896240 441.27383423]
[515.22979736 456.24642944]
[515.29595947 471.25097656]
[514.44732666 486.23165894]
[512.68695068 501.13272095]
[510.02145386 515.89874268]
[506.46066284 530.47485352]
[502.01791382 544.80670166]
[496.70968628 558.84106445]
[490.55575562 572.52575684]
[483.57897949 585.80975342]
[475.80532837 598.64379883]
[467.26373291 610.97998047]
[457.98596191 622.77252197]
[448.00653076 633.97747803]
[437.36254883 644.55322266]
[426.09362793 654.46044922]
[414.24166870 663.66217041]
[401.85079956 672.12426758]
[388.96707153 679.81524658]
[375.63845825 686.70642090]
[361.91452026 692.77221680]
[347.84628296 697.99011230]
[333.48614502 702.34057617]
[318.88748169 705.80755615]
[304.10461426 708.37805176]
[289.19250488 710.04260254]
[274.20669556 710.79486084]
[259.20288086 710.63220215]
[244.23689270 709.55511475]
[229.36441040 707.56762695]
[214.64074707 704.67718506]
[200.12069702 700.89447021]
[185.85826111 696.23358154]
[171.90649414 690.71191406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 145]
[37 144]
[38 143]
[39 142]
[41 140]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[76 127]
[77 126]
[79 124]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
