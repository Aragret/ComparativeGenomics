%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[-21.22697449 482.27859497]
[-14.34915638 495.70831299]
[-11.18251705 510.46078491]
[-11.94296360 525.53009033]
[-16.57864761 539.88879395]
[-24.77350044 552.55792236]
[-35.96878433 562.67364502]
[-49.40118027 569.54632568]
[-64.15485382 572.70727539]
[-79.22386932 571.94097900]
[-93.58080292 567.29974365]
[-106.24676514 559.10003662]
[-116.35816956 547.90081787]
[-123.22561646 534.46575928]
[-126.38086700 519.71087646]
[-125.60877991 504.64215088]
[-120.96201324 490.28701782]
[-112.75737762 477.62423706]
[-101.55428314 467.51715088]
[-88.11658478 460.65487671]
[-73.36047363 457.50534058]
[-58.29205322 458.28323364]
[-53.67804337 444.01049805]
[-57.12528992 429.52032471]
[-45.51818848 418.76922607]
[-40.90417862 404.49649048]
[-36.29016876 390.22375488]
[-31.67615891 375.95101929]
[-27.06214905 361.67828369]
[-32.28888702 350.76922607]
[-28.56168747 338.84060669]
[-17.35805893 332.44989014]
[-12.53206062 318.24743652]
[-7.70606327 304.04498291]
[-2.88006544 289.84249878]
[1.94593215 275.64004517]
[6.77192974 261.43759155]
[11.59792709 247.23513794]
[-0.15477887 256.55575562]
[-14.76838684 259.93844604]
[-29.42123795 256.73001099]
[-41.28409576 247.55000305]
[-48.06642914 234.17091370]
[-48.45867538 219.17604065]
[-42.38509750 205.46066284]
[-31.01840973 195.67300415]
[-16.55333900 191.70289612]
[-1.78286564 194.31690979]
[10.44106388 203.01033020]
[17.75820160 216.10458374]
[18.75552368 231.07264709]
[26.02875328 217.95394897]
[33.30198288 204.83525085]
[40.57521057 191.71656799]
[47.84844208 178.59786987]
[55.12166977 165.47917175]
[62.39490128 152.36048889]
[69.66812897 139.24179077]
[76.94136047 126.12309265]
[76.34569550 111.24040222]
[89.80403900 102.92272949]
[96.38406372 89.44300079]
[102.25302887 75.63882446]
[100.53206635 59.91149139]
[112.63226318 51.22618484]
[118.50122070 37.42200851]
[124.37018585 23.61783218]
[130.23915100 9.81365490]
[136.10810852 -3.99052167]
[133.45098877 -22.21197128]
[147.87338257 -32.21005249]
[153.53616333 -46.10007858]
[159.19894409 -59.99010468]
[146.13383484 -52.62105942]
[131.15299988 -53.37905121]
[118.89841461 -62.02920532]
[113.16730499 -75.89118195]
[115.73550415 -90.66969299]
[125.80723572 -101.78545380]
[140.26167297 -105.79412842]
[154.61993408 -101.45359039]
[164.43295288 -90.10878754]
[166.66004944 -75.27479553]
[174.12779236 -88.28374481]
[181.59553528 -101.29270172]
[178.98583984 -113.92410278]
[185.47355652 -124.60554504]
[197.11454773 -127.89401245]
[204.77514648 -140.79034424]
[212.43574524 -153.68666077]
[200.29222107 -162.51048279]
[189.01467896 -172.41711426]
[178.69931030 -183.32206726]
[169.43414307 -195.13229370]
[161.29823303 -207.74702454]
[154.36097717 -221.05863953]
[148.68156433 -234.95356750]
[144.30845642 -249.31324768]
[141.27896118 -264.01519775]
[139.61892700 -278.93392944]
[139.34252930 -293.94219971]
[140.45210266 -308.91195679]
[142.93818665 -323.71545410]
[146.77958679 -338.22644043]
[151.94351196 -352.32107544]
[158.38591003 -365.87908936]
[166.05181885 -378.78485107]
[174.87583923 -390.92822266]
[184.78265381 -402.20559692]
[195.68778992 -412.52078247]
[207.49816895 -421.78576660]
[220.11303711 -429.92144775]
[233.42475891 -436.85848999]
[247.31977844 -442.53765869]
[261.67953491 -446.91055298]
[276.38153076 -449.93978882]
[291.30029297 -451.59957886]
[306.30856323 -451.87573242]
[321.27832031 -450.76589966]
[336.08178711 -448.27957153]
[350.59268188 -444.43792725]
[364.68722534 -439.27377319]
[378.24514771 -432.83114624]
[391.15078735 -425.16500854]
[403.29400635 -416.34082031]
[414.57122803 -406.43377686]
[424.88623047 -395.52850342]
[434.15100098 -383.71795654]
[442.28649902 -371.10296631]
[449.22329712 -357.79110718]
[454.90225220 -343.89599609]
[459.27487183 -329.53616333]
[462.30386353 -314.83413696]
[463.96340942 -299.91534424]
[464.23931885 -284.90704346]
[463.12924194 -269.93734741]
[460.64266968 -255.13391113]
[456.80078125 -240.62306213]
[451.63638306 -226.52861023]
[445.19354248 -212.97079468]
[437.52719116 -200.06529236]
[428.70278931 -187.92221069]
[418.79556274 -176.64515686]
[407.89010620 -166.33035278]
[396.07943726 -157.06576538]
[383.46429443 -148.93048096]
[370.15231323 -141.99389648]
[356.25711060 -136.31517029]
[341.89721680 -131.94279480]
[327.19512939 -128.91403198]
[312.27630615 -127.25474548]
[297.26800537 -126.97908783]
[282.29830933 -128.08941650]
[267.49493408 -130.57624817]
[252.98414612 -134.41836548]
[238.88977051 -139.58299255]
[225.33206177 -146.02607727]
[217.67147827 -133.12974548]
[210.01087952 -120.23341370]
[210.73902893 -102.69954681]
[194.60449219 -93.82495880]
[187.13674927 -80.81600189]
[179.66900635 -67.80705261]
[173.08897400 -54.32732010]
[167.42619324 -40.43729019]
[161.76339722 -26.54726410]
[166.16429138 -15.27966404]
[161.56019592 -3.66130853]
[149.91227722 1.87843919]
[144.04331970 15.68261623]
[138.17436218 29.48679352]
[132.30540466 43.29096985]
[126.43643951 57.09514618]
[128.57717896 71.83510590]
[116.05720520 81.50778198]
[110.18824005 95.31195831]
[124.06617737 89.61960602]
[138.39399719 94.05960846]
[146.62121582 106.60205078]
[144.98645020 121.51270294]
[134.23710632 131.97460938]
[119.28762817 133.20474243]
[106.97272491 124.64067841]
[102.92272949 110.19596100]
[102.99816132 126.01699066]
[90.06005096 133.39631653]
[82.78682709 146.51501465]
[75.51359558 159.63371277]
[68.24036407 172.75241089]
[60.96713638 185.87109375]
[53.69390488 198.98979187]
[46.42067719 212.10848999]
[39.14744568 225.22718811]
[31.87421799 238.34587097]
[25.80038261 252.06114197]
[20.97438622 266.26361084]
[16.14838791 280.46606445]
[11.32239056 294.66851807]
[6.49639225 308.87097168]
[1.67039478 323.07342529]
[-3.15560293 337.27587891]
[0.84940428 355.24923706]
[-12.78941631 366.29229736]
[-17.40342522 380.56503296]
[-22.01743507 394.83776855]
[-26.63144493 409.11050415]
[-31.24545288 423.38323975]
[-28.12823296 438.89431763]
[-39.40531158 448.62451172]
[-44.01932144 462.89724731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 210]
[23 209]
[25 207]
[26 206]
[27 205]
[28 204]
[29 203]
[32 201]
[33 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 195]
[51 194]
[52 193]
[53 192]
[54 191]
[55 190]
[56 189]
[57 188]
[58 187]
[59 186]
[61 184]
[62 176]
[63 175]
[65 173]
[66 172]
[67 171]
[68 170]
[69 169]
[71 166]
[72 165]
[73 164]
[83 163]
[84 162]
[85 161]
[88 159]
[89 158]
[90 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
