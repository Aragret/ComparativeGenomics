%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[131.32391357 855.85412598]
[116.46347046 853.79632568]
[101.70298767 851.11389160]
[87.06871796 847.81158447]
[72.58666229 843.89532471]
[58.28258514 839.37200928]
[44.18190765 834.24969482]
[30.30970383 828.53747559]
[16.69064140 822.24560547]
[3.34893012 815.38513184]
[-9.69170666 807.96832275]
[-22.40808487 800.00836182]
[-34.77759171 791.51940918]
[-46.77824020 782.51654053]
[-58.38868713 773.01580811]
[-69.58829498 763.03399658]
[-80.35714722 752.58898926]
[-90.67610168 741.69921875]
[-100.52680206 730.38415527]
[-109.89174652 718.66387939]
[-118.75428009 706.55920410]
[-127.09864044 694.09173584]
[-134.90998840 681.28350830]
[-142.17445374 668.15740967]
[-148.87910461 654.73675537]
[-155.01203918 641.04534912]
[-160.56231689 627.10754395]
[-165.52011108 612.94818115]
[-169.87657166 598.59240723]
[-173.62397766 584.06573486]
[-176.75566101 569.39404297]
[-179.26603699 554.60333252]
[-181.15066528 539.71990967]
[-182.40618896 524.77032471]
[-183.03036499 509.78106689]
[-183.02209473 494.77883911]
[-182.38139343 479.79028320]
[-181.10939026 464.84207153]
[-179.20834351 449.96075439]
[-176.68165588 435.17282104]
[-173.53379822 420.50457764]
[-169.77038574 405.98202515]
[-165.39808655 391.63107300]
[-160.42468262 377.47720337]
[-154.85903931 363.54556274]
[-148.71101379 349.86093140]
[-141.99157715 336.44763184]
[-134.71263123 323.32955933]
[-126.88716125 310.52996826]
[-118.52906036 298.07168579]
[-109.65318298 285.97680664]
[-100.27532196 274.26684570]
[-90.41214752 262.96264648]
[-80.08119202 252.08430481]
[-69.30082703 241.65115356]
[-58.09022141 231.68173218]
[-46.46930695 222.19377136]
[-34.45874023 213.20413208]
[-22.07987785 204.72882080]
[-9.35473061 196.78289795]
[3.69407678 189.38047791]
[17.04334450 182.53474426]
[30.66933823 176.25784302]
[44.54782867 170.56095886]
[58.65414810 165.45419312]
[72.96320343 160.94665527]
[87.44956970 157.04634094]
[102.08747101 153.76019287]
[99.42167664 138.99897766]
[96.75588226 124.23775482]
[94.09008789 109.47653961]
[91.31447601 94.73557281]
[88.42920685 80.01568604]
[78.17982483 72.18542480]
[76.07971191 59.86579132]
[82.71704865 49.75281525]
[80.05125427 34.99160004]
[77.38545990 20.23038292]
[74.71966553 5.46916485]
[59.69751358 5.90800810]
[44.77775192 4.10291338]
[30.29369354 0.09420615]
[16.56891823 -6.02855682]
[3.91004395 -14.12859058]
[-7.40012693 -24.02493858]
[-17.10892105 -35.49650955]
[-24.99943924 -48.28702927]
[-30.89540482 -62.11074829]
[-34.66510010 -76.65884399]
[-36.22431183 -91.60630035]
[-35.53820038 -106.61919403]
[-32.62209702 -121.36212158]
[-27.54114914 -135.50573730]
[-20.40886688 -148.73403931]
[-11.38458633 -160.75152588]
[-0.66991466 -171.28971863]
[11.49577904 -180.11318970]
[24.84070778 -187.02481079]
[39.06674194 -191.87017822]
[53.85606384 -194.54106140]
[68.87828064 -194.97775269]
[83.79778290 -193.17053223]
[98.28127289 -189.15977478]
[112.00517273 -183.03504944]
[124.66289520 -174.93321228]
[135.97164917 -165.03524780]
[145.67881775 -153.56230164]
[153.56752014 -140.77066040]
[159.46151733 -126.94609833]
[163.22914124 -112.39746857]
[164.78620911 -97.44978333]
[164.09796143 -82.43698883]
[161.17976379 -67.69447327]
[156.09680176 -53.55159378]
[148.96263123 -40.32429886]
[139.93664551 -28.30809593]
[129.22047424 -17.77143097]
[117.05352020 -8.94969749]
[103.70760345 -2.03997517]
[89.48088074 2.80336952]
[92.14667511 17.56458664]
[94.81247711 32.32580566]
[97.47827148 47.08702087]
[109.51945496 59.85325623]
[103.14909363 77.13040924]
[106.03437042 91.85030365]
[110.55198669 98.52590179]
[108.85130310 106.81073761]
[111.51709747 121.57196045]
[114.18289948 136.33317566]
[116.84869385 151.09439087]
[131.71138000 149.05290222]
[146.64691162 147.63978577]
[161.62873840 146.85754395]
[176.63023376 146.70759583]
[191.62471008 147.19018555]
[206.58551025 148.30445862]
[221.48602295 150.04844666]
[236.29978943 152.41902161]
[251.00044250 155.41200256]
[265.56185913 159.02204895]
[279.95812988 163.24275208]
[294.16366577 168.06658936]
[308.15325928 173.48500061]
[321.90194702 179.48834229]
[335.38534546 186.06594849]
[348.57949829 193.20611572]
[361.46087646 200.89616394]
[374.00665283 209.12240601]
[386.19445801 217.87022400]
[398.00265503 227.12406921]
[409.41024780 236.86747742]
[420.39694214 247.08311462]
[430.94323730 257.75283813]
[441.03033447 268.85769653]
[450.64031982 280.37789917]
[459.75613403 292.29296875]
[468.36154175 304.58175659]
[476.44122314 317.22241211]
[483.98086548 330.19241333]
[490.96701050 343.46871948]
[497.38726807 357.02777100]
[503.23022461 370.84539795]
[508.48547363 384.89706421]
[513.14367676 399.15780640]
[517.19653320 413.60223389]
[520.63690186 428.20465088]
[523.45861816 442.93914795]
[525.65667725 457.77947998]
[527.22711182 472.69927979]
[528.16723633 487.67205811]
[528.47528076 502.67111206]
[528.15075684 517.66986084]
[527.19427490 532.64154053]
[525.60742188 547.55963135]
[523.39312744 562.39758301]
[520.55523682 577.12896729]
[517.09887695 591.72760010]
[513.03021240 606.16754150]
[508.35635376 620.42315674]
[503.08569336 634.46905518]
[497.22760010 648.28027344]
[490.79248047 661.83227539]
[483.79177856 675.10095215]
[476.23794556 688.06268311]
[468.14437866 700.69445801]
[459.52551270 712.97381592]
[450.39666748 724.87884521]
[440.77404785 736.38854980]
[430.67477417 747.48229980]
[420.11679077 758.14044189]
[409.11889648 768.34405518]
[397.70062256 778.07495117]
[385.88229370 787.31585693]
[373.68487549 796.05029297]
[361.13012695 804.26275635]
[348.24029541 811.93865967]
[335.03836060 819.06439209]
[321.54772949 825.62719727]
[307.79244995 831.61547852]
[293.79696655 837.01855469]
[279.58612061 841.82678223]
[265.18524170 846.03173828]
[250.61987305 849.62579346]
[235.91593933 852.60266113]
[221.09959412 854.95697021]
[206.19717407 856.68463135]
[191.23515320 857.78253174]
[176.24015808 858.24865723]
[161.23884583 858.08227539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 131]
[69 130]
[70 129]
[71 128]
[72 126]
[73 125]
[76 123]
[77 122]
[78 121]
[79 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
