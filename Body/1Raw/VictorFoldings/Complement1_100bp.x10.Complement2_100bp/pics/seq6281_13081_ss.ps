%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[30.11777306 339.60223389]
[32.91526413 354.35372925]
[34.12889481 369.31896973]
[33.74491501 384.32846069]
[31.76767159 399.21209717]
[28.21957207 413.80123901]
[23.14081764 427.93060303]
[16.58895493 441.44003296]
[8.63822174 454.17651367]
[-0.62129456 465.99572754]
[-11.08467674 476.76370239]
[-22.63336563 486.35848999]
[-35.13650513 494.67135620]
[-48.45242691 501.60809326]
[-62.43025208 507.09011841]
[-76.91159821 511.05529785]
[-91.73238373 513.45874023]
[-106.72467804 514.27313232]
[-121.71859741 513.48931885]
[-136.54426575 511.11621094]
[-151.03367615 507.18063354]
[-165.02267456 501.72717285]
[-178.35275269 494.81765747]
[-190.87284851 486.53036499]
[-202.44111633 476.95919800]
[-212.92646790 466.21258545]
[-222.21011353 454.41235352]
[-230.18685913 441.69213867]
[-236.76631165 428.19610596]
[-241.87391663 414.07714844]
[-245.45181274 399.49530029]
[-247.45945740 384.61572266]
[-247.87411499 369.60705566]
[-246.69105530 354.63934326]
[-243.92370605 339.88217163]
[-239.60342407 325.50277710]
[-233.77915955 311.66406250]
[-226.51689148 298.52285767]
[-217.89892578 286.22802734]
[-208.02290344 274.91891479]
[-197.00073242 264.72363281]
[-184.95729065 255.75770569]
[-172.02903748 248.12275696]
[-158.36247253 241.90525818]
[-144.11245728 237.17568970]
[-129.44042969 233.98760986]
[-114.51264954 232.37716675]
[-99.49826050 232.36259460]
[-84.56739044 233.94406128]
[-69.88920593 237.10365295]
[-55.63002777 241.80557251]
[-41.95142365 247.99652100]
[-29.00838470 255.60636902]
[-16.94756317 264.54888916]
[-6.78401566 253.51701355]
[3.37953138 242.48513794]
[13.54307842 231.45326233]
[23.70662498 220.42138672]
[26.63977623 205.81843567]
[41.68082047 200.91154480]
[51.84436798 189.87966919]
[62.00791168 178.84779358]
[69.66851044 165.95146179]
[74.49450684 151.74900818]
[79.32050323 137.54655457]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[88.23491669 78.53868103]
[73.61655426 75.17662811]
[64.47926331 63.28083801]
[65.00049591 48.28989792]
[74.94194031 37.05746460]
[89.75852203 34.71885681]
[102.67627716 42.34325409]
[107.78940582 56.44673920]
[114.06676483 42.82342529]
[112.81483459 27.05182838]
[125.16825867 18.73064041]
[131.44561768 5.10732365]
[137.72297668 -8.51599216]
[144.00033569 -22.13930893]
[150.27769470 -35.76262283]
[137.25366211 -43.22401047]
[124.94004822 -51.80727386]
[113.43321228 -61.44524002]
[102.82321930 -72.06246948]
[93.19310760 -83.57588196]
[84.61824036 -95.89534760]
[77.16574097 -108.92446136]
[70.89392853 -122.56124878]
[65.85189056 -136.69898987]
[62.07909012 -151.22702026]
[59.60505295 -166.03163147]
[58.44914627 -180.99697876]
[58.62041092 -196.00592041]
[60.11750793 -210.94097900]
[62.92872620 -225.68530273]
[67.03205872 -240.12344360]
[72.39538574 -254.14245605]
[78.97673798 -267.63256836]
[86.72460938 -280.48825073]
[95.57835388 -292.60882568]
[105.46868896 -303.89950562]
[116.31819153 -314.27185059]
[128.04196167 -323.64474487]
[140.54823303 -331.94479370]
[153.73912048 -339.10702515]
[167.51141357 -345.07543945]
[181.75729370 -349.80328369]
[196.36528015 -353.25354004]
[211.22103882 -355.39923096]
[226.20829773 -356.22357178]
[241.20977783 -355.72009277]
[256.10803223 -353.89276123]
[270.78649902 -350.75582886]
[285.13027954 -346.33389282]
[299.02713013 -340.66152954]
[312.36825562 -333.78317261]
[325.04925537 -325.75262451]
[336.97088623 -316.63272095]
[348.03982544 -306.49487305]
[358.16949463 -295.41842651]
[367.28054810 -283.49005127]
[375.30169678 -270.80310059]
[382.17019653 -257.45687866]
[387.83224487 -243.55584717]
[392.24356079 -229.20880127]
[395.36962891 -214.52801514]
[397.18594360 -199.62838745]
[397.67831421 -184.62655640]
[396.84286499 -169.63990784]
[394.68615723 -154.78573608]
[391.22506714 -140.18031311]
[386.48669434 -125.93793488]
[380.50808716 -112.17007446]
[373.33605957 -98.98448181]
[365.02676392 -86.48435974]
[355.64520264 -74.76753998]
[345.26480103 -63.92572021]
[333.96682739 -54.04375458]
[321.83969116 -45.19898605]
[308.97827148 -37.46063995]
[295.48327637 -30.88927650]
[281.46032715 -25.53632927]
[267.01913452 -21.44369316]
[252.27275085 -18.64339638]
[237.33656311 -17.15735817]
[222.32749939 -16.99720764]
[207.36302185 -18.16419983]
[192.56024170 -20.64919853]
[178.03500366 -24.43275833]
[163.90101624 -29.48526382]
[157.62365723 -15.86194801]
[151.34629822 -2.23863149]
[145.06893921 11.38468456]
[138.79156494 25.00800133]
[140.49250793 39.80516434]
[127.69008636 49.10078430]
[121.41271973 62.72410202]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[93.52296448 142.37255859]
[88.69696045 156.57501221]
[83.87096405 170.77746582]
[94.47958374 160.17288208]
[107.03772736 151.96965027]
[121.01141357 146.51657104]
[135.80647278 144.04550171]
[150.79382324 144.66154480]
[165.33618164 148.33847046]
[178.81520081 154.91995239]
[190.65776062 164.12614441]
[200.36029053 175.56559753]
[207.51023865 188.75187683]
[211.80358887 203.12432861]
[213.05778503 218.07179260]
[211.21951294 232.95872498]
[206.36691284 247.15211487]
[198.70632935 260.04846191]
[188.56349182 271.09936523]
[176.36968994 279.83499146]
[162.64340210 285.88388062]
[147.96827698 288.98880005]
[132.96829224 289.01776123]
[118.28128815 285.96951294]
[104.53174591 279.97369385]
[92.30429840 271.28521729]
[82.11886597 260.27355957]
[74.40854645 247.40689087]
[69.50117493 233.23234558]
[67.60542297 218.35261536]
[68.80190277 203.40042114]
[73.03978729 189.01133728]
[62.87624359 200.04321289]
[52.71269608 211.07508850]
[49.05258179 226.46711731]
[34.73850250 230.58493042]
[24.57495499 241.61680603]
[14.41140842 252.64868164]
[4.24786186 263.68057251]
[-5.91568518 274.71243286]
[3.98342395 286.00137329]
[12.62649250 298.27856445]
[19.91558838 311.40490723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 207]
[55 206]
[56 205]
[57 204]
[58 203]
[60 201]
[61 200]
[62 199]
[63 170]
[64 169]
[65 168]
[66 167]
[67 166]
[69 164]
[70 163]
[78 162]
[79 161]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
