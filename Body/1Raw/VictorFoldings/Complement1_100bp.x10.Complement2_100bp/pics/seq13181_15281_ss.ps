%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[194.45610046 430.15243530]
[207.27832031 422.22436523]
[202.66430664 407.95162964]
[198.05030823 393.67892456]
[193.00173950 388.28134155]
[193.47555542 379.15921021]
[189.07456970 364.81936646]
[184.67356873 350.47952271]
[180.27256775 336.13967896]
[177.86209106 334.70867920]
[175.87322998 332.23663330]
[174.70530701 328.87933350]
[174.69398499 324.93417358]
[176.06394958 320.81381226]
[172.52427673 306.23745728]
[168.98460388 291.66107178]
[165.44493103 277.08468628]
[155.28109741 270.52548218]
[152.21284485 258.41064453]
[158.41372681 247.10083008]
[155.09147644 232.47337341]
[151.76921082 217.84591675]
[146.62725830 203.75477600]
[139.74783325 190.42533875]
[133.88676453 185.92317200]
[132.86689758 176.84585571]
[126.18670654 163.41548157]
[119.50651550 149.98509216]
[112.42940521 136.75956726]
[104.96166229 123.75061798]
[97.49392700 110.74166870]
[91.11558533 124.31800079]
[76.56052399 127.94432068]
[64.55818939 118.94743347]
[63.95625305 103.95951843]
[75.19844055 94.02909851]
[89.99607849 96.47557831]
[83.51658630 82.94722748]
[77.03708649 69.41888428]
[70.55759430 55.89053726]
[63.97756577 42.41080475]
[57.29737091 28.98042870]
[50.61717606 15.55005169]
[43.93698120 2.11967587]
[37.25678635 -11.31070042]
[20.54039192 -13.89106178]
[8.77273083 -25.80842018]
[6.45047522 -42.22697449]
[14.29269695 -56.64838409]
[7.41328430 -69.97781372]
[0.53387177 -83.30724335]
[-6.34554100 -96.63667297]
[-13.22495365 -109.96610260]
[-13.17115307 -94.96619415]
[-17.29013062 -80.54280853]
[-25.25704384 -67.83343506]
[-36.44359207 -57.84037781]
[-49.96755219 -51.35173798]
[-64.76237488 -48.87923431]
[-79.66127014 -50.61785889]
[-93.48925781 -56.43049622]
[-105.15579987 -65.85874176]
[-113.74082947 -78.15903473]
[-118.56729126 -92.36133575]
[-119.25454712 -107.34558105]
[-115.74839783 -121.93006134]
[-108.32536316 -134.96456909]
[-97.57083893 -145.42115784]
[-84.33298492 -152.47518921]
[-69.65579224 -155.57032776]
[-54.69675827 -154.46249390]
[-40.63561630 -149.23904419]
[-28.58129120 -140.31195068]
[-19.48273849 -128.38217163]
[-29.54943275 -140.58758545]
[-24.19718933 -154.48733521]
[-26.86298370 -169.24855042]
[-29.52877998 -184.00976562]
[-32.19457626 -198.77098083]
[-42.26126862 -210.97639465]
[-36.90902328 -224.87614441]
[-39.57482147 -239.63735962]
[-43.54690933 -244.92262268]
[-44.16133499 -250.57235718]
[-42.09337234 -254.87730408]
[-44.31848907 -269.71136475]
[-46.54360962 -284.54537964]
[-61.56597519 -285.67507935]
[-75.96016693 -290.11972046]
[-89.00418091 -297.65640259]
[-100.04373169 -307.90707397]
[-108.52507782 -320.35754395]
[-114.02280426 -334.38333130]
[-116.26113892 -349.28091431]
[-115.12781525 -364.30300903]
[-110.67967987 -378.69610596]
[-103.13984680 -391.73831177]
[-92.88651276 -402.77536011]
[-80.43397522 -411.25369263]
[-66.40685272 -416.74801636]
[-51.50873947 -418.98275757]
[-36.48691940 -417.84579468]
[-22.09488297 -413.39416504]
[-9.05452347 -405.85116577]
[1.98005795 -395.59515381]
[10.45537090 -383.14056396]
[15.94629765 -369.11212158]
[18.17741394 -354.21347046]
[17.03681183 -339.19192505]
[12.58169937 -324.80096436]
[5.03554535 -311.76242065]
[-5.22313929 -300.73034668]
[-17.67978287 -292.25802612]
[-31.70956421 -286.77050781]
[-29.48444748 -271.93646240]
[-27.25933075 -257.10241699]
[-24.81360245 -242.30314636]
[-22.14780617 -227.54193115]
[-12.27178860 -216.39233398]
[-17.43335724 -201.43678284]
[-14.76756191 -186.67556763]
[-12.10176659 -171.91433716]
[-9.43597126 -157.15312195]
[0.44004712 -146.00352478]
[-4.72152185 -131.04797363]
[0.10447586 -116.84551239]
[6.98388863 -103.51608276]
[13.86330128 -90.18665314]
[20.74271393 -76.85722351]
[27.62212563 -63.52779388]
[40.94967270 -62.74130249]
[52.23879623 -55.41328049]
[58.48250198 -43.36812973]
[57.95498657 -29.70283508]
[50.68716049 -17.99089432]
[57.36735535 -4.56051874]
[64.04755402 8.86985683]
[70.72774506 22.30023384]
[77.40794373 35.73060989]
[83.20133972 40.31954575]
[84.08593750 49.41104126]
[90.56542969 62.93938828]
[97.04492950 76.46773529]
[103.52442169 89.99607849]
[110.50287628 103.27392578]
[117.97061920 116.28287506]
[125.43836212 129.29182434]
[129.26860046 131.33712769]
[131.97642517 134.20631409]
[133.44064331 137.44535828]
[133.70001221 140.60754395]
[132.93688965 143.30490112]
[139.61708069 156.73527527]
[146.29727173 170.16564941]
[153.07727051 183.54592896]
[159.95668030 196.87536621]
[160.22846985 181.87782288]
[165.29328918 167.75877380]
[174.61662292 156.00822449]
[187.21456909 147.86622620]
[201.75761414 144.19206238]
[216.71102905 145.37342834]
[230.49671936 151.28569031]
[241.65985107 161.30488586]
[249.02235413 174.37368774]
[251.80726624 189.11289978]
[249.72065735 203.96705627]
[242.98274231 217.36857605]
[232.30459595 227.90315247]
[218.81311035 234.45904541]
[203.93206787 236.34440613]
[189.23190308 233.36026001]
[176.26396179 225.82153320]
[166.39666748 214.52365112]
[169.71893311 229.15110779]
[173.04119873 243.77857971]
[185.86184692 256.99645996]
[180.02130127 273.54501343]
[183.56097412 288.12139893]
[187.10064697 302.69778442]
[190.64031982 317.27413940]
[194.61241150 331.73867798]
[199.01341248 346.07852173]
[203.41441345 360.41836548]
[207.81541443 374.75820923]
[212.32304382 389.06491089]
[216.93704224 403.33764648]
[221.55105591 417.61038208]
[236.58772278 416.53237915]
[251.44531250 419.08489990]
[265.26004028 425.11953735]
[277.22869873 434.28549194]
[286.65548706 446.04980469]
[292.99230957 459.72854614]
[295.87078857 474.52642822]
[295.12353516 489.58316040]
[290.79403687 504.02334595]
[283.13394165 517.00744629]
[272.58868408 527.78057861]
[259.77127075 535.71643066]
[245.42692566 540.35357666]
[230.38960266 541.42242432]
[215.53355408 538.86090088]
[201.72250366 532.81787109]
[189.75939941 523.64471436]
[180.33973694 511.87466431]
[174.01119995 498.19207764]
[171.14170837 483.39245605]
[171.89807129 468.33618164]
[176.23634338 453.89862061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[4 186]
[6 185]
[7 184]
[8 183]
[9 182]
[14 181]
[15 180]
[16 179]
[17 178]
[20 176]
[21 175]
[22 174]
[23 156]
[24 155]
[26 154]
[27 153]
[28 152]
[29 147]
[30 146]
[31 145]
[37 144]
[38 143]
[39 142]
[40 141]
[41 139]
[42 138]
[43 137]
[44 136]
[45 135]
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[74 125]
[76 123]
[77 122]
[78 121]
[79 120]
[81 118]
[82 117]
[85 116]
[86 115]
[87 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
