%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[102.79550934 286.76293945]
[100.13837433 271.99417114]
[98.49530029 257.07852173]
[97.87393951 242.08549500]
[98.27719116 227.08502197]
[99.70317841 212.14704895]
[102.14524078 197.34120178]
[105.59201050 182.73652649]
[110.02740479 168.40110779]
[115.43074036 154.40180969]
[121.77684021 140.80386353]
[129.03610229 127.67070770]
[116.43378448 119.53549194]
[103.83147430 111.40027618]
[91.10943604 103.45359802]
[78.27050018 95.69720459]
[65.43155670 87.94081116]
[52.53523254 80.28021240]
[39.58223343 72.71583557]
[26.62923431 65.15145874]
[13.67623520 57.58707809]
[0.72323704 50.02270126]
[-12.22976112 42.45832062]
[-20.62799454 54.89342880]
[-29.82154274 66.75263977]
[-39.77104187 77.98517609]
[-50.43387985 88.54292297]
[-61.76440430 98.38068390]
[-73.71408844 107.45632172]
[-86.23176575 115.73098755]
[-99.26383209 123.16922760]
[-112.75448608 129.73921204]
[-126.64595032 135.41278076]
[-140.87873840 140.16566467]
[-155.39190674 143.97749329]
[-170.12332153 146.83195496]
[-185.00987244 148.71682739]
[-199.98783875 149.62402344]
[-214.99305725 149.54966736]
[-229.96128845 148.49407959]
[-244.82843018 146.46177673]
[-259.53082275 143.46147156]
[-274.00552368 139.50599670]
[-288.19049072 134.61230469]
[-302.02505493 128.80133057]
[-315.44995117 122.09798431]
[-328.40765381 114.53095245]
[-340.84271240 106.13265228]
[-352.70187378 96.93903351]
[-363.93435669 86.98946381]
[-374.49203491 76.32656097]
[-384.32971191 64.99598694]
[-393.40530396 53.04624557]
[-401.67987061 40.52851868]
[-409.11804199 27.49640846]
[-415.68795776 14.00571823]
[-421.36145020 0.11422085]
[-426.11422729 -14.11859989]
[-429.92599487 -28.63179588]
[-432.78036499 -43.36321640]
[-434.66513062 -58.24978638]
[-435.57223511 -73.22774506]
[-435.49780273 -88.23297119]
[-434.44213867 -103.20119476]
[-432.40972900 -118.06832886]
[-429.40933228 -132.77070618]
[-425.45379639 -147.24537659]
[-420.55999756 -161.43032837]
[-414.74896240 -175.26484680]
[-408.04553223 -188.68969727]
[-400.47842407 -201.64735413]
[-392.08004761 -214.08236694]
[-382.88635254 -225.94146729]
[-372.93673706 -237.17388916]
[-362.27377319 -247.73150635]
[-350.94311523 -257.56915283]
[-338.99331665 -266.64465332]
[-326.47555542 -274.91915894]
[-313.44338989 -282.35723877]
[-299.95266724 -288.92706299]
[-286.06112671 -294.60046387]
[-271.82827759 -299.35317993]
[-257.31506348 -303.16485596]
[-242.58363342 -306.01913452]
[-227.69705200 -307.90380859]
[-212.71908569 -308.81085205]
[-197.71386719 -308.73629761]
[-182.74565125 -307.68054199]
[-167.87852478 -305.64807129]
[-153.17616272 -302.64758301]
[-138.70152283 -298.69195557]
[-124.51659393 -293.79809570]
[-110.68210602 -287.98696899]
[-97.25730133 -281.28344727]
[-84.29968262 -273.71627808]
[-71.86472321 -265.31781006]
[-60.00567245 -256.12405396]
[-48.77331543 -246.17436218]
[-38.21575546 -235.51133728]
[-28.37819481 -224.18063354]
[-19.30276489 -212.23078918]
[-11.02832699 -199.71296692]
[-3.59031224 -186.68077087]
[2.97942686 -173.19000244]
[8.65275764 -159.29843140]
[13.40538692 -145.06555176]
[17.21696091 -130.55232239]
[20.07115936 -115.82086182]
[21.95576096 -100.93427277]
[22.86269379 -85.95629883]
[22.78807449 -70.95107269]
[21.73222160 -55.98286057]
[19.69965935 -41.11575317]
[16.69908905 -26.41341019]
[12.74336147 -11.93879604]
[7.84941387 2.24610901]
[2.03820443 16.08056259]
[-4.66538286 29.50532150]
[8.28761578 37.06970215]
[21.24061394 44.63407898]
[34.19361496 52.19845963]
[47.14661026 59.76283646]
[60.09960938 67.32721710]
[67.46086121 67.98580933]
[73.18795013 75.10187531]
[86.02689362 82.85826111]
[98.86582947 90.61465454]
[104.11072540 90.54343414]
[109.02216339 93.41589355]
[111.96669006 98.79796600]
[124.56900024 106.93318176]
[137.17131042 115.06839752]
[146.15093994 103.04579926]
[155.93009949 91.66401672]
[166.46318054 80.97612000]
[177.70106506 71.03195190]
[189.59136963 61.87786865]
[202.07867432 53.55655289]
[215.10472107 46.10680389]
[228.60879517 39.56335449]
[242.52792358 33.95671082]
[256.79721069 29.31302071]
[271.35015869 25.65393066]
[286.11886597 22.99650192]
[301.03448486 21.35312462]
[316.02749634 20.73146248]
[331.02798462 21.13441277]
[345.96600342 22.56009674]
[360.77188110 25.00186729]
[375.37664795 28.44833946]
[389.71212769 32.88344574]
[403.71154785 38.28650284]
[417.30960083 44.63232422]
[430.44293213 51.89131927]
[443.05023193 60.02964783]
[455.07278442 69.00935364]
[466.45449829 78.78858185]
[477.14230347 89.32173157]
[487.08639526 100.55969238]
[496.24041748 112.45006561]
[504.56164551 124.93741608]
[512.01129150 137.96351624]
[518.55468750 151.46763611]
[524.16119385 165.38679504]
[528.80480957 179.65612793]
[532.46380615 194.20909119]
[535.12115479 208.97781372]
[536.76440430 223.89346313]
[537.38598633 238.88647461]
[536.98291016 253.88694763]
[535.55712891 268.82495117]
[533.11529541 283.63082886]
[529.66870117 298.23553467]
[525.23352051 312.57101440]
[519.83032227 326.57040405]
[513.48443604 340.16842651]
[506.22534180 353.30166626]
[498.08694458 365.90893555]
[489.10714722 377.93142700]
[479.32785034 389.31307983]
[468.79461670 400.00082397]
[457.55661011 409.94482422]
[445.66616821 419.09875488]
[433.17877197 427.41992188]
[420.15261841 434.86947632]
[406.64843750 441.41275024]
[392.72924805 447.01922607]
[378.45986938 451.66271973]
[363.90689087 455.32159424]
[349.13815308 457.97885132]
[334.22250366 459.62200928]
[319.22949219 460.24346924]
[304.22900391 459.84033203]
[289.29101562 458.41442871]
[274.48516846 455.97247314]
[259.88046265 452.52581787]
[245.54501343 448.09051514]
[231.54566956 442.68725586]
[217.94769287 436.34124756]
[204.81448364 429.08209229]
[192.20727539 420.94357300]
[180.18486023 411.96371460]
[168.80326843 402.18432617]
[158.11558533 391.65103149]
[148.17164612 380.41296387]
[139.01780701 368.52246094]
[130.69674683 356.03500366]
[123.24725342 343.00878906]
[116.70407104 329.50457764]
[111.09770966 315.58535767]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 132]
[13 131]
[14 130]
[15 127]
[16 126]
[17 125]
[18 123]
[19 122]
[20 121]
[21 120]
[22 119]
[23 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
