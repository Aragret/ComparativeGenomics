%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[11.69511318 496.15863037]
[19.44629478 509.06649780]
[24.34402657 523.30395508]
[26.17420197 538.24865723]
[24.85680962 553.24725342]
[20.44944382 567.64410400]
[13.14477348 580.80981445]
[3.26212811 592.16882324]
[-8.76646519 601.22454834]
[-22.41516876 607.58117676]
[-37.08731842 610.96081543]
[-52.14151001 611.21563721]
[-66.91964722 608.33459473]
[-80.77568054 602.44354248]
[-93.10388947 593.80010986]
[-103.36534119 582.78210449]
[-111.11144257 569.87121582]
[-116.00357819 555.63183594]
[-117.82787323 540.68640137]
[-116.50457764 525.68829346]
[-112.09154510 511.29321289]
[-104.78170013 498.13040161]
[-94.89458466 486.77526855]
[-82.86242676 477.72424316]
[-69.21122742 471.37301636]
[-54.53775024 467.99917603]
[-39.48345566 467.75024414]
[-24.70645905 470.63711548]
[-18.83749771 456.83294678]
[-12.96853733 443.02877808]
[-7.09957695 429.22460938]
[-9.24032402 414.48464966]
[3.27965856 404.81195068]
[-3.67206192 389.49816895]
[2.72880197 373.58139038]
[18.97450829 367.09323120]
[24.63729477 353.20318604]
[30.30008125 339.31317139]
[35.96286774 325.42312622]
[32.64178085 308.19128418]
[47.28134155 297.02145386]
[52.73669815 283.04864502]
[57.13769531 268.70880127]
[60.45995712 254.08134460]
[63.78221512 239.45388794]
[67.10447693 224.82643127]
[70.42673492 210.19897461]
[73.64000702 195.54718018]
[76.74411774 180.87187195]
[71.80809021 166.81893921]
[82.23372650 154.91865540]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[105.45137787 27.61299896]
[108.00720978 12.83234596]
[110.45293427 -1.96692491]
[112.34622955 -16.84696007]
[113.68446350 -31.78714561]
[107.20920563 -46.22257614]
[116.05112457 -58.20880508]
[117.38935852 -73.14899445]
[110.91410065 -87.58441925]
[119.75601959 -99.57065582]
[121.09425354 -114.51084137]
[121.87557983 -129.49047852]
[122.09890747 -144.48881531]
[122.32223511 -159.48715210]
[122.54556274 -174.48548889]
[120.00167847 -179.04353333]
[119.50974274 -183.65994263]
[120.74839020 -187.54335022]
[123.12870026 -190.14459229]
[124.02151489 -205.11799622]
[124.91433716 -220.09140015]
[125.80715179 -235.06480408]
[126.69996643 -250.03820801]
[127.59278107 -265.01162720]
[127.03456879 -280.00122070]
[125.03055573 -294.86676025]
[123.02654266 -309.73226929]
[121.02252960 -324.59780884]
[119.01851654 -339.46334839]
[117.01450348 -354.32885742]
[102.03560638 -356.08483887]
[87.96429443 -361.51153564]
[75.68508911 -370.26779175]
[65.96988678 -381.80319214]
[59.42938995 -395.39263916]
[56.47473145 -410.18185425]
[57.29165268 -425.24118042]
[61.82879639 -439.62399292]
[69.80095673 -452.42614746]
[80.70699310 -462.84292603]
[93.86134338 -470.21951294]
[108.43711853 -474.09216309]
[123.51807404 -474.21749878]
[138.15620422 -470.58761597]
[151.43133545 -463.43069458]
[162.50900269 -453.19662476]
[170.69284058 -440.52871704]
[175.46839905 -426.22332764]
[176.53549194 -411.17965698]
[173.82705688 -396.34335327]
[167.51332092 -382.64709473]
[157.99118042 -370.95181274]
[145.85920715 -361.99267578]
[131.88003540 -356.33288574]
[133.88404846 -341.46734619]
[135.88806152 -326.60183716]
[137.89207458 -311.73629761]
[139.89608765 -296.87075806]
[141.90010071 -282.00524902]
[147.97456360 -295.72021484]
[159.04743958 -305.83908081]
[173.25277710 -310.65658569]
[188.19671631 -309.36093140]
[201.36093140 -302.17044067]
[210.52703857 -290.29684448]
[214.15039062 -275.74102783]
[211.62036133 -260.95593262]
[203.36332703 -248.43310547]
[190.77073669 -240.28285217]
[175.96467590 -237.87863159]
[161.44020081 -241.62559509]
[149.64495850 -250.89231873]
[142.56619263 -264.11880493]
[141.67337036 -249.14538574]
[140.78054810 -234.17198181]
[139.88774109 -219.19857788]
[138.99491882 -204.22517395]
[138.10211182 -189.25177002]
[137.54389954 -174.26216125]
[137.32057190 -159.26382446]
[137.09724426 -144.26548767]
[136.87391663 -129.26715088]
[149.29124451 -137.68200684]
[163.65701294 -133.36639404]
[169.38131714 -119.50160217]
[162.24441528 -106.30825043]
[147.50735474 -103.51198578]
[136.03443909 -113.17260742]
[134.69621277 -98.23242188]
[141.26718140 -84.86560822]
[132.32954407 -71.81076050]
[130.99130249 -56.87057114]
[137.56228638 -43.50376511]
[128.62464905 -30.44891167]
[127.28641510 -15.50872612]
[140.29521179 -22.97672272]
[154.30021667 -17.60457993]
[158.97744751 -3.35244036]
[150.87902832 9.27354908]
[135.97482300 10.96597862]
[125.25220490 0.47880256]
[122.80648041 15.27807331]
[124.81731415 22.38991928]
[120.21259308 30.27879524]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[101.75270844 149.20533752]
[100.35214996 154.71308899]
[96.90902710 158.02276611]
[101.62302399 173.12538147]
[91.41941833 183.97598267]
[88.31530762 198.65129089]
[89.60108948 207.69477844]
[85.05419159 213.52122498]
[81.73193359 228.14868164]
[78.40967560 242.77615356]
[75.08741760 257.40359497]
[71.76515961 272.03106689]
[83.07723236 262.18032837]
[97.77988434 259.20846558]
[112.02986908 263.89224243]
[122.10227203 275.00741577]
[125.36419678 289.64843750]
[120.96298218 303.98822021]
[110.04909515 314.27838135]
[95.47539520 317.82904053]
[81.05142212 313.71215820]
[70.54756165 303.00378418]
[66.70949554 288.50402832]
[61.25413895 302.47680664]
[65.70870972 314.58132935]
[60.87727356 326.10699463]
[49.85289383 331.08593750]
[44.19010925 344.97595215]
[38.52732086 358.86596680]
[32.86453629 372.75601196]
[39.48269272 384.48693848]
[38.15551376 397.69485474]
[29.59045601 407.58029175]
[17.08383560 410.68090820]
[18.80479431 426.40826416]
[6.70460033 435.09356689]
[0.83563930 448.89773560]
[-5.03332138 462.70190430]
[-10.90228271 476.50610352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 210]
[29 209]
[30 208]
[31 207]
[33 205]
[36 201]
[37 200]
[38 199]
[39 198]
[41 195]
[42 194]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[48 177]
[49 176]
[51 174]
[52 171]
[53 170]
[54 169]
[56 167]
[57 166]
[58 165]
[59 164]
[60 163]
[61 161]
[62 160]
[63 154]
[64 153]
[66 151]
[67 150]
[69 148]
[70 147]
[71 141]
[72 140]
[73 139]
[74 138]
[78 137]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
