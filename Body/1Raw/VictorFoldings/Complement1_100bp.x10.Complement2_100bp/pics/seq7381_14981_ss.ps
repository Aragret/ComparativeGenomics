%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[1.10528743 723.85614014]
[-7.08058739 736.44616699]
[-16.67275047 748.00067139]
[-27.54147720 758.36346436]
[-39.53978348 767.39434814]
[-52.50540161 774.97125244]
[-66.26299286 780.99163818]
[-80.62649536 785.37414551]
[-95.40165710 788.05950928]
[-110.38867188 789.01135254]
[-125.38484192 788.21679688]
[-140.18737793 785.68670654]
[-154.59608459 781.45520020]
[-168.41609192 775.57946777]
[-181.46051025 768.13909912]
[-193.55293274 759.23461914]
[-204.52981567 748.98645020]
[-214.24270630 737.53320312]
[-222.56025696 725.02984619]
[-229.36997986 711.64538574]
[-234.57978821 697.56079102]
[-238.11920166 682.96667480]
[-239.94038391 668.06030273]
[-240.01867676 653.04327393]
[-238.35304260 638.11871338]
[-234.96600342 623.48846436]
[-229.90336609 609.35040283]
[-223.23358154 595.89562988]
[-215.04685974 583.30615234]
[-205.45393372 571.75225830]
[-194.58451843 561.39025879]
[-182.58560181 552.36010742]
[-169.61947632 544.78411865]
[-155.86148071 538.76458740]
[-141.49769592 534.38305664]
[-126.72235107 531.69873047]
[-111.73527527 530.74786377]
[-96.73915100 531.54339600]
[-81.93679047 534.07452393]
[-67.52836609 538.30700684]
[-61.65940475 524.50280762]
[-55.79044724 510.69863892]
[-49.92148590 496.89447021]
[-44.46612930 482.92166138]
[-39.42921066 468.79263306]
[-34.39229584 454.66360474]
[-29.35537910 440.53457642]
[-24.31846237 426.40554810]
[-19.28154564 412.27651978]
[-19.99645424 404.92050171]
[-14.06302834 397.97555542]
[-8.81630993 383.92309570]
[-3.56959224 369.87063599]
[1.67712605 355.81814575]
[6.92384434 341.76568604]
[12.17056274 327.71322632]
[-1.30718982 319.52005005]
[-12.94408417 308.86630249]
[-22.29734802 296.15496826]
[-29.01063919 281.86734009]
[-32.82762527 266.54492188]
[-33.60176468 250.76870728]
[-31.30193901 235.13728333]
[-26.01369286 220.24409485]
[-17.93605804 206.65486145]
[-7.37406349 194.88618469]
[5.27278852 185.38581848]
[19.52562523 178.51565552]
[34.84434509 174.53800964]
[50.64807129 173.60548401]
[66.33719635 175.75521851]
[71.16319275 161.55276489]
[75.98918915 147.35031128]
[80.81518555 133.14785767]
[85.64118195 118.94539642]
[90.46718597 104.74294281]
[94.11527252 90.19332123]
[96.56099701 75.39405060]
[99.00672150 60.59477615]
[101.45245361 45.79550552]
[103.67756653 30.96146393]
[105.68157959 16.09593582]
[107.68560028 1.23040676]
[109.68961334 -13.63512135]
[102.50444031 -24.34661484]
[104.47962189 -36.68688965]
[114.01773834 -44.12671280]
[108.41317749 -58.92196274]
[117.95285034 -70.36066437]
[120.17797089 -85.19470978]
[122.40308380 -100.02874756]
[120.49096680 -104.88579559]
[120.62020111 -109.52655029]
[122.36656189 -113.20965576]
[125.07306671 -115.46955872]
[127.95834351 -130.18945312]
[130.84361267 -144.90934753]
[133.72888184 -159.62922668]
[119.91561127 -165.62985229]
[107.71549988 -174.45999146]
[97.69918060 -185.70666504]
[90.33513641 -198.84381104]
[85.96778870 -213.25701904]
[84.80140686 -228.27212524]
[86.89054871 -243.18687439]
[92.13750458 -257.30364990]
[100.29685974 -269.96221924]
[110.98699188 -280.57046509]
[123.70789337 -288.63226318]
[137.86459351 -293.77053833]
[152.79495239 -295.74499512]
[167.80065918 -294.46319580]
[182.17985535 -289.98519897]
[195.26000977 -282.52038574]
[206.42935181 -272.41787720]
[215.16543579 -260.15026855]
[221.05969238 -246.29125977]
[223.83642578 -231.48910522]
[223.36576843 -216.43611145]
[219.66972351 -201.83634949]
[212.92115784 -188.37265015]
[203.43572998 -176.67475891]
[191.65707397 -167.28979492]
[178.13612366 -160.65672302]
[163.50524902 -157.08576965]
[148.44877625 -156.74395752]
[145.56350708 -142.02406311]
[142.67823792 -127.30417633]
[139.79295349 -112.58428955]
[137.23712158 -97.80363464]
[135.01200867 -82.96958923]
[132.78689575 -68.13554382]
[138.55061340 -54.40132523]
[128.85177612 -41.90159225]
[136.14541626 -25.94008636]
[124.55513763 -11.63110733]
[122.55112457 3.23442054]
[120.54711151 18.09994888]
[118.54309845 32.96547699]
[120.67492676 37.23915863]
[120.14468384 42.89741516]
[116.25172424 48.24123383]
[113.80599213 63.04050446]
[111.36026764 77.83977509]
[108.91454315 92.63904572]
[119.27912140 81.79582977]
[133.46589661 76.92391205]
[148.30549622 79.11169434]
[160.48271179 87.87042999]
[167.27713013 101.24337769]
[167.17085266 116.24300385]
[160.18763733 129.51834106]
[147.88754272 138.10365295]
[133.01843262 140.08096313]
[118.90211487 135.00851440]
[108.69221497 124.01952362]
[104.66963959 109.56893921]
[99.84364319 123.77139282]
[95.01763916 137.97384644]
[90.19164276 152.17630005]
[85.36564636 166.37875366]
[80.53964996 180.58122253]
[92.99196625 187.53332520]
[104.03494263 196.55233765]
[113.32950592 207.35969543]
[120.59054565 219.62196350]
[125.59565735 232.96112061]
[128.19197083 246.96615601]
[128.30079651 261.20584106]
[125.92005920 275.24188232]
[121.12425232 288.64248657]
[114.06214905 300.99569702]
[104.95218658 311.92187500]
[94.07572174 321.08557129]
[81.76828766 328.20571899]
[68.40930176 333.06423950]
[54.41035843 335.51278687]
[40.20251083 335.47723389]
[26.22303391 332.95993042]
[20.97631454 347.01239014]
[15.72959709 361.06488037]
[10.48287868 375.11734009]
[5.23616076 389.16983032]
[-0.01055724 403.22229004]
[-5.15251684 417.31341553]
[-10.18943310 431.44247437]
[-15.22634888 445.57150269]
[-20.26326561 459.70053101]
[-25.30018234 473.82955933]
[-30.33709717 487.95858765]
[-29.40324020 492.19909668]
[-29.82493401 496.12167358]
[-31.33578491 499.33923340]
[-33.57104111 501.59094238]
[-36.11730957 502.76342773]
[-41.98626709 516.56762695]
[-47.85522842 530.37176514]
[-53.72418976 544.17596436]
[-40.67927170 551.61547852]
[-28.58625793 560.51916504]
[-17.60869026 570.76660156]
[-7.89503193 582.21917725]
[0.42335376 594.72198486]
[7.23396921 608.10601807]
[12.44470882 622.19018555]
[15.98510361 636.78411865]
[17.80727386 651.69036865]
[17.88657570 666.70733643]
[16.22193718 681.63201904]
[12.83587170 696.26251221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 198]
[41 197]
[42 196]
[43 195]
[44 190]
[45 189]
[46 188]
[47 187]
[48 186]
[49 185]
[51 184]
[52 183]
[53 182]
[54 181]
[55 180]
[56 179]
[71 162]
[72 161]
[73 160]
[74 159]
[75 158]
[76 157]
[77 145]
[78 144]
[79 143]
[80 142]
[81 139]
[82 138]
[83 137]
[84 136]
[87 134]
[89 132]
[90 131]
[91 130]
[95 129]
[96 128]
[97 127]
[98 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
