%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[86.24742889 550.46466064]
[73.51031494 542.50567627]
[61.84783554 533.04174805]
[51.43679810 522.21630859]
[42.43502426 510.19351196]
[34.97897720 497.15557861]
[29.18169785 483.30023193]
[25.13106346 468.83743286]
[22.88848305 453.98651123]
[22.48795509 438.97253418]
[23.93554878 424.02316284]
[27.20932007 409.36499023]
[32.25963974 395.22024536]
[39.00994873 381.80334473]
[47.35791016 369.31771851]
[57.17697144 357.95260620]
[68.31827545 347.88031006]
[80.61293030 339.25354004]
[93.87454987 332.20309448]
[107.90209198 326.83578491]
[122.48289490 323.23306274]
[120.70043182 308.33932495]
[118.91796112 293.44561768]
[117.13549805 278.55191040]
[115.35302734 263.65817261]
[113.57056427 248.76446533]
[104.37569427 237.04679871]
[110.41828156 222.42498779]
[108.63581848 207.53126526]
[106.85334778 192.63754272]
[105.07088470 177.74383545]
[95.87600708 166.02616882]
[101.91860199 151.40434265]
[99.58311462 136.58728027]
[96.69783783 121.86738586]
[93.81256866 107.14749908]
[90.23486328 103.31161499]
[89.06100464 97.74426270]
[91.06739044 91.94673157]
[88.62166595 77.14746094]
[86.17593384 62.34819412]
[83.73020935 47.54892349]
[78.98200989 61.77757645]
[70.11994934 73.87980652]
[57.98870087 82.70209503]
[43.74454117 87.40356445]
[28.74512482 87.53610229]
[14.42010784 83.08706665]
[2.13485670 74.48052216]
[-6.93967628 62.53678894]
[-11.93856430 48.39426041]
[-12.38534546 33.40091705]
[-8.23743534 18.98582458]
[0.10981394 6.52294254]
[11.86079597 -2.79984856]
[25.89548111 -8.09395981]
[40.87617111 -8.85478973]
[55.37500763 -5.00982046]
[68.01004791 3.07446861]
[77.57700348 14.62753582]
[83.16426849 28.54932213]
[84.72479248 13.63071728]
[86.28531647 -1.28788793]
[80.02569580 -15.81812477]
[89.04509735 -27.67138481]
[90.60562134 -42.58998871]
[92.16613770 -57.50859451]
[84.66522980 -68.00141144]
[86.27212524 -80.39502716]
[95.58450317 -88.11553192]
[97.36696625 -103.00924683]
[99.14943695 -117.90296173]
[91.51170349 -134.65846252]
[102.57003021 -148.28491211]
[104.13055420 -163.20352173]
[105.69107819 -178.12213135]
[107.25159454 -193.04072571]
[92.54153442 -196.03564453]
[78.18919373 -200.43630981]
[64.32859039 -206.20166016]
[51.08913803 -213.27784729]
[38.59445572 -221.59880066]
[26.96119690 -231.08683777]
[16.29799080 -241.65336609]
[6.70439243 -253.19973755]
[-1.73001921 -265.61810303]
[-8.92649364 -278.79257202]
[-14.81783867 -292.60009766]
[-19.34904480 -306.91174316]
[-22.47780800 -321.59393311]
[-24.17491150 -336.50952148]
[-24.42450905 -351.51931763]
[-23.22427368 -366.48309326]
[-20.58541107 -381.26116943]
[-16.53255844 -395.71557617]
[-11.10355854 -409.71136475]
[-4.34910059 -423.11779785]
[3.66774893 -435.80975342]
[12.87213612 -447.66870117]
[23.17812157 -458.58392334]
[34.48947906 -468.45352173]
[46.70059204 -477.18530273]
[59.69744492 -484.69778442]
[73.35869598 -490.92080688]
[87.55677795 -495.79623413]
[102.15913391 -499.27859497]
[117.02941895 -501.33532715]
[132.02877808 -501.94726562]
[147.01718140 -501.10867310]
[161.85469055 -498.82742310]
[176.40274048 -495.12472534]
[190.52549744 -490.03524780]
[204.09112549 -483.60644531]
[216.97294617 -475.89840698]
[229.05067444 -466.98303223]
[240.21156311 -456.94360352]
[250.35137939 -445.87384033]
[259.37545776 -433.87710571]
[267.19955444 -421.06542969]
[273.75061035 -407.55841064]
[278.96743774 -393.48217773]
[282.80136108 -378.96817017]
[285.21652222 -364.15188599]
[286.19046021 -349.17166138]
[285.71401978 -334.16738892]
[283.79165649 -319.27914429]
[280.44131470 -304.64593506]
[275.69430542 -290.40438843]
[269.59494019 -276.68750000]
[262.20013428 -263.62332153]
[253.57899475 -251.33384705]
[243.81196594 -239.93380737]
[232.99024963 -229.52966309]
[221.21492004 -220.21855164]
[208.59588623 -212.08740234]
[195.25099182 -205.21214294]
[181.30482483 -199.65696716]
[166.88760376 -195.47372437]
[152.13395691 -192.70150757]
[137.18161011 -191.36618042]
[122.17020416 -191.48020935]
[120.60968018 -176.56159973]
[119.04915619 -161.64300537]
[117.48863220 -146.72439575]
[124.85975647 -137.13308716]
[123.68175507 -124.69138336]
[114.04315186 -116.12049866]
[112.26068115 -101.22678375]
[110.47821808 -86.33306122]
[118.24385834 -70.59579468]
[107.08474731 -55.94807053]
[105.52422333 -41.02946854]
[103.96369934 -26.11086273]
[110.33493805 -12.64770412]
[101.20391846 0.27263504]
[99.64339447 15.19123936]
[98.08287048 30.10984421]
[98.52947998 45.10319519]
[100.97520447 59.90246582]
[103.42093658 74.70173645]
[105.86666107 89.50100708]
[108.53245544 104.26222229]
[111.41773224 118.98211670]
[114.30300140 133.70201111]
[124.71016693 122.89964294]
[139.65805054 124.14898682]
[148.12762451 136.52905273]
[143.87544250 150.91374207]
[130.03605652 156.69917297]
[116.81231689 149.62188721]
[126.13468170 162.40484619]
[119.96459961 175.96136475]
[121.74706268 190.85508728]
[123.52953339 205.74879456]
[125.31199646 220.64251709]
[134.63436890 233.42547607]
[128.46427917 246.98199463]
[130.24674988 261.87573242]
[132.02922058 276.76943970]
[133.81167603 291.66314697]
[135.59414673 306.55688477]
[137.37661743 321.45059204]
[152.39579773 321.51083374]
[167.29374695 323.41635132]
[181.84458923 327.13824463]
[195.82774353 332.62011719]
[209.03125000 339.77883911]
[221.25491333 348.50588989]
[232.31346130 358.66897583]
[242.03921509 370.11401367]
[250.28475952 382.66754150]
[256.92507935 396.13919067]
[261.85952759 410.32476807]
[265.01327515 425.00924683]
[266.33853149 439.96997070]
[265.81518555 454.98016357]
[263.45120239 469.81225586]
[259.28237915 484.24142456]
[253.37194824 498.04888916]
[245.80949402 511.02536011]
[236.70967102 522.97412109]
[226.21041870 533.71405029]
[214.47091675 543.08221436]
[201.66912842 550.93676758]
[187.99909973 557.15850830]
[173.66810608 561.65319824]
[158.89338684 564.35266113]
[143.89891052 565.21594238]
[128.91198730 564.23004150]
[114.15983582 561.40979004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[26 177]
[28 175]
[29 174]
[30 173]
[31 172]
[33 170]
[34 164]
[35 163]
[36 162]
[39 161]
[40 160]
[41 159]
[42 158]
[61 157]
[62 156]
[63 155]
[65 153]
[66 152]
[67 151]
[70 149]
[71 148]
[72 147]
[74 144]
[75 143]
[76 142]
[77 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
