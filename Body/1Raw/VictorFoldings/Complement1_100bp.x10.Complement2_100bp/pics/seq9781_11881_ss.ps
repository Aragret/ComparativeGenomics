%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[135.11219788 588.37658691]
[124.59125519 577.67602539]
[114.86048889 566.25207520]
[105.96949768 554.16308594]
[97.96358490 541.47064209]
[90.88354492 528.23937988]
[84.76544952 514.53674316]
[79.64048767 500.43255615]
[75.53476715 485.99871826]
[72.46921539 471.30871582]
[70.45944977 456.43746948]
[69.51570892 441.46072388]
[69.64280701 426.45483398]
[70.84009552 411.49624634]
[73.10147858 396.66116333]
[76.41542053 382.02520752]
[80.76504517 367.66296387]
[86.12818146 353.64761353]
[92.47750092 340.05056763]
[99.78064728 326.94113159]
[108.00041199 314.38610840]
[117.09490204 302.44946289]
[127.01776886 291.19201660]
[137.71846008 280.67117310]
[149.14244080 270.94049072]
[161.23149109 262.04959106]
[173.92401123 254.04377747]
[166.84690857 240.81825256]
[159.76980591 227.59272766]
[152.69270325 214.36720276]
[137.80151367 214.02328491]
[124.99666595 206.21995544]
[117.76918793 192.96742249]
[118.14803314 177.77685547]
[126.13156128 164.73037720]
[119.05445862 151.50485229]
[111.97734833 138.27932739]
[104.90024567 125.05379486]
[97.82314301 111.82826233]
[90.54991150 98.70957184]
[83.08216858 85.70062256]
[75.61442566 72.69166565]
[59.47989273 63.81708145]
[60.20804214 46.28320694]
[52.54744339 33.38687897]
[44.88684845 20.49055290]
[31.44788551 27.16936493]
[17.54739189 32.82519913]
[3.26310301 37.42642975]
[-11.32509518 40.94732285]
[-26.13562012 43.36818314]
[-41.08564377 44.67547989]
[-56.09155655 44.86189651]
[-71.06944275 43.92639160]
[-85.93553925 41.87419891]
[-100.60669708 38.71679306]
[-115.00088501 34.47183228]
[-129.03758240 29.16305733]
[-142.63832092 22.82015800]
[-155.72700500 15.47860336]
[-168.23045349 7.17945385]
[-180.07875061 -2.03087902]
[-191.20561218 -12.10088634]
[-201.54882812 -22.97425270]
[-211.05055237 -34.59016800]
[-219.65763855 -46.88367081]
[-227.32197571 -59.78601074]
[-234.00065613 -73.22502899]
[-239.65637207 -87.12557220]
[-244.25747681 -101.40990448]
[-247.77824402 -115.99813080]
[-250.19897461 -130.80868530]
[-251.50613403 -145.75871277]
[-251.69241333 -160.76463318]
[-250.75679016 -175.74250793]
[-248.70446777 -190.60858154]
[-245.54692078 -205.27970886]
[-241.30183411 -219.67385864]
[-235.99293518 -233.71052551]
[-229.64991760 -247.31118774]
[-222.30824280 -260.39981079]
[-214.00898743 -272.90319824]
[-204.79855347 -284.75140381]
[-194.72845459 -295.87817383]
[-183.85499573 -306.22131348]
[-172.23899841 -315.72293091]
[-159.94541931 -324.32989502]
[-147.04299927 -331.99411011]
[-133.60392761 -338.67269897]
[-119.70333099 -344.32827759]
[-105.41896057 -348.92926025]
[-90.83070374 -352.44989014]
[-76.02013397 -354.87048340]
[-61.07008743 -356.17752075]
[-46.06417084 -356.36367798]
[-31.08630180 -355.42791748]
[-16.22024536 -353.37545776]
[-1.54913926 -350.21780396]
[12.84496975 -345.97256470]
[26.88158226 -340.66354370]
[40.48220062 -334.32040405]
[53.57075882 -326.97863770]
[66.07406616 -318.67926025]
[77.92219543 -309.46871948]
[89.04888153 -299.39852905]
[99.39190674 -288.52496338]
[108.89342499 -276.90887451]
[117.50029755 -264.61523438]
[125.16439056 -251.71275330]
[131.84284973 -238.27362061]
[137.49832153 -224.37297058]
[142.09916687 -210.08856201]
[145.61967468 -195.50027466]
[148.04014587 -180.68968201]
[149.34704590 -165.73962402]
[149.53306580 -150.73370361]
[148.59716797 -135.75584412]
[146.54458618 -120.88980865]
[143.38677979 -106.21872711]
[139.14144897 -91.82465363]
[133.83230591 -77.78809357]
[127.48903656 -64.18753052]
[120.14714050 -51.09903336]
[111.84765625 -38.59580231]
[102.63700867 -26.74775314]
[92.56671143 -15.62115383]
[81.69306946 -5.27822447]
[70.07690430 4.22319078]
[57.78317261 12.82995605]
[65.44377136 25.72628212]
[73.10437012 38.62260818]
[84.74535370 41.91107559]
[91.23307037 52.59252167]
[88.62338257 65.22392273]
[96.09112549 78.23287964]
[103.55886078 91.24182892]
[108.18047333 93.72269440]
[111.08311462 98.61636353]
[111.04866791 104.75115967]
[118.12577057 117.97668457]
[125.20288086 131.20220947]
[132.27998352 144.42774963]
[139.35708618 157.65327454]
[154.64080811 158.24922180]
[167.48933411 166.36169434]
[174.50549316 179.72732544]
[173.89366150 194.71003723]
[165.91822815 207.29008484]
[172.99533081 220.51562500]
[180.07243347 233.74114990]
[187.14953613 246.96667480]
[200.85203552 240.84826660]
[214.95610046 235.72297668]
[229.38986206 231.61692810]
[244.07978821 228.55104065]
[258.95098877 226.54092407]
[273.92770386 225.59684753]
[288.93359375 225.72360229]
[303.89224243 226.92054749]
[318.72735596 229.18157959]
[333.36337280 232.49519348]
[347.72573853 236.84448242]
[361.74121094 242.20730591]
[375.33837891 248.55630493]
[388.44799805 255.85916138]
[401.00320435 264.07861328]
[412.94006348 273.17285156]
[424.19772339 283.09545898]
[434.71884155 293.79589844]
[444.44976807 305.21966553]
[453.34094238 317.30850220]
[461.34704590 330.00085449]
[468.42730713 343.23199463]
[474.54559326 356.93453979]
[479.67077637 371.03863525]
[483.77673340 385.47244263]
[486.84249878 400.16238403]
[488.85250854 415.03359985]
[489.79647827 430.01031494]
[489.66958618 445.01623535]
[488.47253418 459.97485352]
[486.21139526 474.80993652]
[482.89767456 489.44595337]
[478.54827881 503.80825806]
[473.18533325 517.82366943]
[466.83624268 531.42083740]
[459.53329468 544.53039551]
[451.31372070 557.08551025]
[442.21942139 569.02233887]
[432.29672241 580.27990723]
[421.59619141 590.80090332]
[410.17236328 600.53179932]
[398.08343506 609.42285156]
[385.39105225 617.42889404]
[372.15982056 624.50903320]
[358.45724487 630.62719727]
[344.35308838 635.75231934]
[329.91928101 639.85809326]
[315.22930908 642.92376709]
[300.35806274 644.93365479]
[285.38134766 645.87750244]
[270.37542725 645.75054932]
[255.41682434 644.55334473]
[240.58174133 642.29211426]
[225.94575500 638.97827148]
[211.58348083 634.62872314]
[197.56809998 629.26574707]
[183.97100830 622.91650391]
[170.86151123 615.61346436]
[158.30642700 607.39379883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 151]
[28 150]
[29 149]
[30 148]
[35 143]
[36 142]
[37 141]
[38 140]
[39 139]
[40 136]
[41 135]
[42 134]
[44 131]
[45 130]
[46 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
