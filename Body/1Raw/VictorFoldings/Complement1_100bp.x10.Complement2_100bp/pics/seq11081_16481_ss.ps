%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[24.38170815 767.08776855]
[9.93483829 771.14135742]
[-4.73417473 774.29791260]
[-19.56968498 776.54541016]
[-34.51541519 777.87536621]
[-49.51467133 778.28271484]
[-64.51055908 777.76593018]
[-79.44618988 776.32696533]
[-94.26490021 773.97131348]
[-108.91049194 770.70782471]
[-123.32740021 766.54888916]
[-137.46093750 761.51037598]
[-151.25749207 755.61132812]
[-164.66473389 748.87414551]
[-177.63179016 741.32440186]
[-190.10948181 732.99066162]
[-202.05047607 723.90460205]
[-213.40946960 714.10070801]
[-224.14338684 703.61608887]
[-234.21148682 692.49060059]
[-243.57560730 680.76641846]
[-252.20021057 668.48797607]
[-260.05258179 655.70190430]
[-267.10293579 642.45666504]
[-273.32452393 628.80249023]
[-278.69372559 614.79125977]
[-283.19021606 600.47601318]
[-286.79693604 585.91119385]
[-289.50015259 571.15191650]
[-291.28967285 556.25421143]
[-292.15866089 541.27459717]
[-292.10385132 526.26989746]
[-291.12542725 511.29705811]
[-289.22711182 496.41284180]
[-286.41613770 481.67370605]
[-282.70309448 467.13558960]
[-278.10214233 452.85360718]
[-272.63070679 438.88195801]
[-266.30950928 425.27365112]
[-259.16259766 412.08026123]
[-251.21701050 399.35189819]
[-242.50292969 387.13681030]
[-233.05340576 375.48132324]
[-222.90428162 364.42968750]
[-212.09405518 354.02380371]
[-200.66372681 344.30313110]
[-188.65667725 335.30456543]
[-176.11842346 327.06222534]
[-163.09655762 319.60739136]
[-149.64045715 312.96835327]
[-135.80116272 307.17025757]
[-121.63119507 302.23513794]
[-107.18428040 298.18170166]
[-92.51524353 295.02529907]
[-77.67971039 292.77792358]
[-62.73396301 291.44812012]
[-47.73470306 291.04092407]
[-32.73882294 291.55786133]
[-17.80320930 292.99697876]
[-2.98451543 295.35281372]
[11.66104317 298.61642456]
[26.07791138 302.77545166]
[31.11482811 288.64642334]
[36.15174484 274.51739502]
[33.13745499 259.93099976]
[45.05951309 249.53027344]
[42.04522324 234.94386292]
[53.96727753 224.54313660]
[59.00419617 210.41410828]
[64.04111481 196.28507996]
[69.07802582 182.15605164]
[74.11494446 168.02700806]
[79.15186310 153.89797974]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[102.03366852 57.18353653]
[105.35592651 42.55607605]
[108.56919861 27.90428925]
[111.67330933 13.22898674]
[106.95931244 -1.87362242]
[117.16291809 -12.72423077]
[120.15769196 -27.42223549]
[123.04296875 -42.14212799]
[125.92823792 -56.86201859]
[124.50795746 -65.88535309]
[128.96760559 -71.77886200]
[132.07171631 -86.45416260]
[135.17582703 -101.12946320]
[138.27993774 -115.80476379]
[141.38404846 -130.48007202]
[144.48815918 -145.15536499]
[130.53746033 -150.77224731]
[117.77416229 -158.72645569]
[106.58613586 -168.77629089]
[97.31336212 -180.61633301]
[90.23764038 -193.88681030]
[85.57398224 -208.18440247]
[83.46411133 -223.07466125]
[83.97215271 -238.10505676]
[87.08265686 -252.81886292]
[92.70111084 -266.76892090]
[100.65677643 -279.53131104]
[110.70787811 -290.71820068]
[122.54898071 -299.98962402]
[135.82025146 -307.06384277]
[150.11837769 -311.72589111]
[165.00886536 -313.83407593]
[180.03921509 -313.32431030]
[194.75265503 -310.21212769]
[208.70207214 -304.59210205]
[221.46356201 -296.63500977]
[232.64930725 -286.58261108]
[241.91940308 -274.74047852]
[248.99211121 -261.46841431]
[253.65252686 -247.16973877]
[255.75901794 -232.27902222]
[255.24757385 -217.24873352]
[252.13372803 -202.53562927]
[246.51211548 -188.58685303]
[238.55355835 -175.82626343]
[228.49990845 -164.64166260]
[216.65670776 -155.37290955]
[203.38383484 -148.30169678]
[189.08465576 -143.64291382]
[174.19367981 -141.53810120]
[159.16345215 -142.05125427]
[156.05934143 -127.37596130]
[152.95523071 -112.70065308]
[149.85112000 -98.02535248]
[146.74700928 -83.35005188]
[143.64289856 -68.67475128]
[140.64813232 -53.97674561]
[137.76286316 -39.25685501]
[134.87757874 -24.53696251]
[136.67578125 -17.36840057]
[131.83822632 -9.62012100]
[136.77424622 4.43281221]
[126.34861755 16.33309746]
[123.24450684 31.00839996]
[124.93576813 38.20293808]
[119.98339081 45.87833405]
[116.66112518 60.50579453]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[110.09686279 133.99317932]
[125.09635162 133.86981201]
[137.37037659 142.49237061]
[142.34100342 156.64485168]
[138.15434265 171.04873657]
[126.37188721 180.33172607]
[111.38822174 181.03149414]
[98.79187012 172.88705444]
[93.28089142 158.93490601]
[88.24397278 173.06393433]
[83.20705414 187.19296265]
[78.17014313 201.32199097]
[73.13322449 215.45101929]
[68.09630585 229.58004761]
[70.75032043 245.17706299]
[59.18854141 254.56718445]
[61.84255600 270.16418457]
[50.28077316 279.55432129]
[45.24385834 293.68334961]
[40.20693970 307.81237793]
[54.00355530 313.71130371]
[67.41085815 320.44833374]
[80.37799072 327.99798584]
[92.85575867 336.33157349]
[104.79684448 345.41751099]
[116.15593719 355.22131348]
[126.88995361 365.70581055]
[136.95817566 376.83120728]
[146.32240295 388.55532837]
[154.94712830 400.83367920]
[162.79962158 413.61968994]
[169.85009766 426.86486816]
[176.07180786 440.51892090]
[181.44117737 454.53012085]
[185.93780518 468.84530640]
[189.54464722 483.41012573]
[192.24803162 498.16937256]
[194.03767395 513.06707764]
[194.90681458 528.04663086]
[194.85215759 543.05133057]
[193.87388611 558.02416992]
[191.97572327 572.90844727]
[189.16487122 587.64758301]
[185.45199585 602.18572998]
[180.85118103 616.46777344]
[175.37986755 630.43945312]
[169.05882263 644.04785156]
[161.91201782 657.24127197]
[153.96656799 669.96972656]
[145.25260925 682.18493652]
[135.80320740 693.84051514]
[125.65418243 704.89227295]
[114.84406281 715.29821777]
[103.41383362 725.01904297]
[91.40686035 734.01770020]
[78.86869812 742.26013184]
[65.84690094 749.71514893]
[52.39086151 756.35430908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 172]
[63 171]
[64 170]
[66 168]
[68 166]
[69 165]
[70 164]
[71 163]
[72 162]
[73 161]
[74 152]
[75 151]
[76 150]
[78 148]
[79 147]
[80 146]
[81 145]
[82 143]
[83 142]
[85 140]
[86 138]
[87 137]
[88 136]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
