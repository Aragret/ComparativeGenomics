%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[82.99916077 570.30535889]
[71.06008148 561.19287109]
[60.33134079 550.68218994]
[50.97559357 538.93273926]
[43.13466644 526.12261963]
[36.92742920 512.44598389]
[32.44798279 498.11022949]
[29.76422691 483.33264160]
[28.91685486 468.33724976]
[29.91870880 453.35140991]
[32.75460052 438.60226440]
[37.38153839 424.31341553]
[43.72938156 410.70147705]
[51.70190048 397.97283936]
[61.17822647 386.32040405]
[72.01470184 375.92089844]
[84.04705811 366.93188477]
[97.09288025 359.48968506]
[110.95439148 353.70712280]
[125.42147064 349.67187500]
[123.19635010 334.83782959]
[120.97122955 320.00378418]
[118.74611664 305.16973877]
[116.52099609 290.33569336]
[114.29588318 275.50164795]
[112.07076263 260.66760254]
[109.84564972 245.83355713]
[102.37626648 258.84158325]
[89.10930634 265.84069824]
[74.15567780 264.66217041]
[62.14891815 255.67118835]
[56.80946350 241.65368652]
[59.79179382 226.95315552]
[70.17180634 216.12471008]
[84.73313904 212.52365112]
[98.96380615 217.26582336]
[108.45437622 228.88203430]
[108.23104858 213.88369751]
[108.00772095 198.88536072]
[107.67274475 183.88909912]
[107.22614288 168.89575195]
[106.66793060 153.90614319]
[105.99814606 138.92109680]
[102.56708527 124.31877899]
[96.49324799 110.60351562]
[90.31748199 96.93384552]
[84.04012299 83.31052399]
[77.76275635 69.68721008]
[72.59369659 65.56504059]
[70.58403778 60.24918365]
[71.50806427 55.56354523]
[65.63910675 41.75936890]
[59.77014160 27.95519066]
[53.90118408 14.15101433]
[47.82734680 0.43574727]
[41.54998779 -13.18756866]
[35.27262878 -26.81088448]
[28.99526596 -40.43420029]
[25.36277771 -42.81306458]
[22.92172813 -45.91238785]
[21.75230789 -49.26914978]
[21.77609825 -52.44185257]
[22.77682495 -55.06038284]
[8.57931995 -61.46886444]
[3.24586010 -75.71697998]
[9.44286251 -89.21263885]
[3.98750520 -103.18543243]
[-1.46785176 -117.15823364]
[-6.92320871 -131.13102722]
[-12.37856579 -145.10383606]
[-17.83392334 -159.07662964]
[-23.28927994 -173.04942322]
[-28.74463654 -187.02221680]
[-43.41522980 -183.75508118]
[-58.41262054 -182.76580811]
[-73.38525391 -184.07757568]
[-87.98214722 -187.65963745]
[-101.86112213 -193.42803955]
[-114.69684601 -201.24752808]
[-126.18843079 -210.93484497]
[-136.06648254 -222.26287842]
[-144.09947205 -234.96609497]
[-150.09906006 -248.74670410]
[-153.92463684 -263.28167725]
[-155.48652649 -278.23028564]
[-154.74809265 -293.24212646]
[-151.72665405 -307.96527100]
[-146.49304199 -322.05462646]
[-139.16993713 -335.17990112]
[-129.92901611 -347.03341675]
[-118.98687744 -357.33728027]
[-106.60002899 -365.85000610]
[-93.05884552 -372.37203979]
[-78.68074036 -376.75045776]
[-63.80276489 -378.88265991]
[-48.77367783 -378.71862793]
[-33.94577789 -376.26223755]
[-19.66665649 -371.57107544]
[-6.27103615 -364.75506592]
[5.92707062 -355.97402954]
[16.64172363 -345.43380737]
[25.62175369 -333.38143921]
[32.65665817 -320.09945679]
[37.58153152 -305.89926147]
[40.28092194 -291.11367798]
[40.69155121 -276.08929443]
[38.80380249 -261.17831421]
[34.66191864 -246.73031616]
[28.36299324 -233.08392334]
[20.05468369 -220.55905151]
[9.93174934 -209.44929504]
[-1.76851547 -200.01509094]
[-14.77183914 -192.47758484]
[-9.31648254 -178.50477600]
[-3.86112499 -164.53198242]
[1.59423196 -150.55918884]
[7.04958916 -136.58639526]
[12.50494576 -122.61359406]
[17.96030235 -108.64079285]
[23.41566086 -94.66799164]
[37.11754608 -88.94139862]
[42.84910202 -74.84870911]
[36.74962234 -60.51573944]
[42.61858368 -46.71156311]
[48.89594269 -33.08824539]
[55.17330551 -19.46492958]
[61.45066452 -5.84161329]
[65.54131317 -3.37673235]
[68.12696838 1.68403971]
[67.70536041 8.28205299]
[73.57431793 22.08622932]
[79.44328308 35.89040756]
[85.31224060 49.69458389]
[91.38607788 63.40985107]
[97.66343689 77.03316498]
[103.94079590 90.65648651]
[109.90612793 96.07749176]
[110.20851898 104.52967834]
[116.28234863 118.24494934]
[116.90528107 103.25788879]
[120.92188263 88.80565643]
[128.12144470 75.64639282]
[138.12631226 64.47040558]
[150.41163635 55.86396408]
[164.33294678 50.27854156]
[179.15997314 48.00714111]
[194.11491394 49.16891479]
[208.41326904 53.70291901]
[221.30496216 61.37130737]
[232.11373901 71.77181244]
[240.27256775 84.35884857]
[245.35346985 98.47212219]
[247.08990479 113.37127686]
[245.39079285 128.27473450]
[240.34526062 142.40068054]
[232.21798706 155.00811768]
[221.43530273 165.43566895]
[208.56285095 173.13632202]
[194.27590942 177.70613098]
[179.32392883 178.90536499]
[164.49125671 176.67111206]
[150.55598450 171.12057495]
[138.24914551 162.54493713]
[128.21632385 151.39404297]
[120.98318481 138.25131226]
[121.65296936 153.23635864]
[125.16244507 161.66970825]
[122.21949005 168.44914246]
[122.66609955 183.44248962]
[126.04962921 191.92715454]
[123.00605774 198.66203308]
[123.22938538 213.66036987]
[123.45271301 228.65870667]
[124.67968750 243.60844421]
[126.90480804 258.44247437]
[129.12992859 273.27651978]
[131.35504150 288.11056519]
[133.58015442 302.94461060]
[135.80528259 317.77865601]
[138.03039551 332.61270142]
[140.25550842 347.44674683]
[155.26983643 347.05978394]
[170.21791077 348.52087402]
[184.87310791 351.80789185]
[199.01329041 356.87100220]
[212.42407227 363.63342285]
[224.90216064 371.99267578]
[236.25839233 381.82199097]
[246.32060242 392.97241211]
[254.93626404 405.27484131]
[261.97473145 418.54284668]
[267.32934570 432.57522583]
[270.91891479 447.15927124]
[272.68902588 462.07391357]
[272.61282349 477.09301758]
[270.69146729 491.98892212]
[266.95413208 506.53582764]
[261.45742798 520.51312256]
[254.28468323 533.70904541]
[245.54464722 545.92340088]
[235.36981201 556.97119141]
[223.91444397 566.68475342]
[211.35217285 574.91699219]
[197.87347412 581.54296875]
[183.68264771 586.46234131]
[168.99484253 589.60052490]
[154.03271484 590.90985107]
[139.02308655 590.37054443]
[124.19351196 587.99084473]
[109.76879120 583.80670166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[27 174]
[37 173]
[38 172]
[39 171]
[40 169]
[41 168]
[42 166]
[43 165]
[44 139]
[45 138]
[46 136]
[47 135]
[48 134]
[51 133]
[52 132]
[53 131]
[54 130]
[55 127]
[56 126]
[57 125]
[58 124]
[63 123]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
