%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[84.76469421 632.71582031]
[70.06819153 629.59185791]
[55.94952011 624.45288086]
[42.68349075 617.39886475]
[30.52833557 608.56719971]
[19.72065735 598.12976074]
[10.47083187 586.28973389]
[2.95890856 573.27752686]
[-2.66889095 559.34649658]
[-6.30301905 544.76776123]
[-7.87273741 529.82513428]
[-7.34748983 514.80944824]
[-4.73750114 500.01303101]
[-0.09357547 485.72387695]
[6.49389219 472.22012329]
[14.89667416 459.76461792]
[24.95120811 448.59982300]
[36.46178055 438.94308472]
[49.20433426 430.98233032]
[62.93082809 424.87255859]
[77.37407684 420.73266602]
[92.25293732 418.64324951]
[92.25293732 403.64324951]
[84.51564026 390.91598511]
[92.25293732 377.11581421]
[84.51564026 364.38854980]
[92.25293732 350.58837891]
[84.51564026 337.86108398]
[92.25293732 324.06091309]
[92.25293732 309.06091309]
[92.25293732 294.06091309]
[92.25293732 279.06091309]
[84.51564026 266.33364868]
[92.25293732 252.53347778]
[92.25293732 237.53347778]
[92.25293732 222.53347778]
[92.25293732 207.53347778]
[84.51564026 194.80621338]
[92.25293732 181.00604248]
[92.25293732 166.00604248]
[92.25293732 151.00604248]
[84.51564026 138.27876282]
[92.25293732 124.47859192]
[92.25293732 109.47859192]
[85.24832153 122.74265289]
[74.53160095 133.23797607]
[61.12423325 139.96423340]
[46.30411911 142.28030396]
[31.48381424 139.96542358]
[18.07590103 133.24026489]
[7.35833454 122.74579620]
[0.35264498 109.48229980]
[-2.27343035 94.71396637]
[-0.26959029 79.84841919]
[6.17317152 66.30253601]
[16.44077301 55.36743927]
[29.55457115 48.08538437]
[44.26464081 45.15045547]
[59.16891479 46.84238434]
[72.84680939 52.99991226]
[83.99463654 63.03614426]
[91.54985809 75.99448395]
[94.79242706 90.64096832]
[98.76452637 76.17644501]
[102.73662567 61.71191788]
[106.70871735 47.24739456]
[97.77921295 32.20468140]
[102.40083313 15.68331814]
[117.24336243 7.77521324]
[120.99966431 -6.74684620]
[124.75596619 -21.26890564]
[128.51226807 -35.79096603]
[132.26856995 -50.31302261]
[124.14247894 -61.05459213]
[123.69316864 -74.32141113]
[130.86073303 -85.26252747]
[142.84098816 -90.00627136]
[146.81309509 -104.47079468]
[150.78518677 -118.93531799]
[154.64949036 -133.42901611]
[158.40579224 -147.95106506]
[162.16209412 -162.47312927]
[158.12716675 -177.77116394]
[168.80509949 -188.15533447]
[172.56140137 -202.67739868]
[167.23068237 -220.30308533]
[180.01037598 -232.32998657]
[183.55004883 -246.90635681]
[187.08972168 -261.48272705]
[190.62939453 -276.05911255]
[194.16906738 -290.63549805]
[196.06236267 -305.51553345]
[196.28569031 -320.51385498]
[196.50901794 -335.51220703]
[196.39735413 -350.51177979]
[195.95074463 -365.50512695]
[195.50413513 -380.49847412]
[195.05754089 -395.49182129]
[181.09397888 -401.65478516]
[171.19378662 -413.27154541]
[167.32266235 -428.03558350]
[170.24919128 -443.01550293]
[179.39233398 -455.23703003]
[192.93669128 -462.27355957]
[208.19303894 -462.72802734]
[222.13221741 -456.51013184]
[231.98658752 -444.85446167]
[235.79956055 -430.07528687]
[232.81405640 -415.10702515]
[223.62286377 -402.92156982]
[210.05088806 -395.93844604]
[210.49749756 -380.94509888]
[210.94409180 -365.95172119]
[211.39070129 -350.95837402]
[213.69252014 -348.28744507]
[214.81498718 -344.36886597]
[214.18582153 -339.76913452]
[211.50735474 -335.28887939]
[211.28402710 -320.29052734]
[211.06069946 -305.29220581]
[218.67691040 -318.21478271]
[230.40167236 -327.57052612]
[244.69239807 -332.12850952]
[259.66888428 -331.28906250]
[273.36074829 -325.16259766]
[283.96655273 -314.55520630]
[290.09091187 -300.86242676]
[290.92810059 -285.88580322]
[286.36798096 -271.59576416]
[277.01046753 -259.87243652]
[264.08673096 -252.25816345]
[249.29708862 -249.75479126]
[234.58740234 -252.69165039]
[221.89297485 -260.68234253]
[212.88397217 -272.67559814]
[208.74545288 -287.09582520]
[205.20578003 -272.51943970]
[201.66610718 -257.94305420]
[198.12643433 -243.36668396]
[194.58676147 -228.79031372]
[200.61039734 -218.30020142]
[197.78073120 -206.12741089]
[187.08345032 -198.92109680]
[183.32714844 -184.39903259]
[187.63075256 -170.13970947]
[176.68414307 -158.71682739]
[172.92785645 -144.19476318]
[169.17155457 -129.67271423]
[170.53987122 -122.40982819]
[165.24971008 -114.96321869]
[161.27761841 -100.49869537]
[157.30551147 -86.03417206]
[166.24084473 -71.78641510]
[162.02386475 -55.15716934]
[146.79061890 -46.55672455]
[143.03431702 -32.03466415]
[139.27803040 -17.51260567]
[135.52172852 -2.99054551]
[131.76542664 11.53151321]
[139.79379272 21.60994720]
[140.56294250 34.66714859]
[133.56838989 45.94929123]
[121.17324066 51.21949005]
[117.20114899 65.68401337]
[113.22904968 80.14853668]
[109.25695038 94.61306000]
[107.25293732 109.47859192]
[107.25293732 124.47859192]
[114.99024200 138.27876282]
[107.25293732 151.00604248]
[107.25293732 166.00604248]
[107.25293732 181.00604248]
[114.99024200 194.80621338]
[107.25293732 207.53347778]
[107.25293732 222.53347778]
[107.25293732 237.53347778]
[107.25293732 252.53347778]
[114.99024200 266.33364868]
[107.25293732 279.06091309]
[107.25293732 294.06091309]
[107.25293732 309.06091309]
[107.25293732 324.06091309]
[114.99024200 337.86108398]
[107.25293732 350.58837891]
[114.99024200 364.38854980]
[107.25293732 377.11581421]
[114.99024200 390.91598511]
[107.25293732 403.64324951]
[107.25293732 418.64324951]
[122.13179779 420.73266602]
[136.57505798 424.87255859]
[150.30154419 430.98233032]
[163.04409790 438.94308472]
[174.55467224 448.59982300]
[184.60920715 459.76461792]
[193.01199341 472.22012329]
[199.59945679 485.72387695]
[204.24337769 500.01303101]
[206.85336304 514.80944824]
[207.37861633 529.82513428]
[205.80889893 544.76776123]
[202.17477417 559.34649658]
[196.54696655 573.27752686]
[189.03504944 586.28973389]
[179.78521729 598.12976074]
[168.97753906 608.56719971]
[156.82238770 617.39886475]
[143.55636597 624.45288086]
[129.43768311 629.59185791]
[114.74118805 632.71582031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 189]
[23 188]
[25 186]
[27 184]
[29 182]
[30 181]
[31 180]
[32 179]
[34 177]
[35 176]
[36 175]
[37 174]
[39 172]
[40 171]
[41 170]
[43 168]
[44 167]
[63 166]
[64 165]
[65 164]
[66 163]
[69 159]
[70 158]
[71 157]
[72 156]
[73 155]
[77 152]
[78 151]
[79 150]
[80 148]
[81 147]
[82 146]
[84 144]
[85 143]
[87 140]
[88 139]
[89 138]
[90 137]
[91 136]
[92 120]
[93 119]
[94 118]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
