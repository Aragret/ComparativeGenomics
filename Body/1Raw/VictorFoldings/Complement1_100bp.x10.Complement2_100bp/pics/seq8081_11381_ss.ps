%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[42.22959137 649.83679199]
[27.25239754 650.89306641]
[12.24777603 650.35137939]
[-2.61425877 648.21783447]
[-17.16530800 644.51660156]
[-31.24049950 639.28967285]
[-44.68034744 632.59619141]
[-57.33257294 624.51202393]
[-69.05381012 615.12884521]
[-79.71125031 604.55285645]
[-89.18414307 592.90399170]
[-97.36514282 580.31414795]
[-104.16155243 566.92608643]
[-109.49637604 552.89141846]
[-113.30915833 538.36920166]
[-115.55669403 523.52398682]
[-116.21352386 508.52395630]
[-115.27220154 493.53909302]
[-112.74339294 478.73919678]
[-108.65575409 464.29193115]
[-103.05559540 450.36102295]
[-96.00637817 437.10430908]
[-87.58796692 424.67196655]
[-77.89575195 413.20492554]
[-67.03956604 402.83309937]
[-55.14239502 393.67395020]
[-42.33906174 385.83132935]
[-28.77462959 379.39407349]
[-14.60279560 374.43511963]
[0.01586236 371.01068115]
[14.91570377 369.15951538]
[29.92790222 368.90261841]
[31.26613617 353.96243286]
[32.60437012 339.02224731]
[22.70976830 350.29595947]
[8.53597260 355.20550537]
[-6.21202230 352.46749878]
[-17.67912483 342.79766846]
[-22.86786270 328.72369385]
[-20.42191124 313.92443848]
[-10.98063660 302.26843262]
[2.98803377 296.80252075]
[17.83272362 298.95547485]
[29.67306709 308.16452026]
[35.41390610 322.02151489]
[38.95357895 307.44515991]
[42.49325180 292.86877441]
[36.46961594 282.37866211]
[39.29927826 270.20587158]
[49.99655533 262.99957275]
[53.75285721 248.47750854]
[57.50915909 233.95544434]
[61.26545715 219.43338013]
[64.91354370 204.88375854]
[68.45321655 190.30738831]
[63.93778992 176.11372375]
[74.71311188 164.52911377]
[78.25278473 149.95274353]
[81.79245758 135.37637329]
[80.45086670 132.91500854]
[80.00341797 129.77392578]
[80.71388245 126.29102325]
[82.71897888 122.89336395]
[86.00108337 120.05052185]
[90.40208435 105.71067047]
[94.69620514 91.33846283]
[98.88321686 76.93467712]
[103.07022858 62.53089523]
[107.25724030 48.12711334]
[103.67958069 32.71572495]
[114.66195679 22.65407944]
[118.84896851 8.25029755]
[123.03598022 -6.15348434]
[127.22298431 -20.55726624]
[113.02062988 -15.73098850]
[100.31049347 -23.69669533]
[98.46202087 -38.58236694]
[108.83784485 -49.41483688]
[123.78927612 -48.20881271]
[132.29443359 -35.85496140]
[137.54115295 -49.90743256]
[135.11964417 -65.54222870]
[146.81994629 -74.75917816]
[152.06666565 -88.81164551]
[147.43237305 -100.84851074]
[152.09167480 -112.44483185]
[163.04071045 -117.58734131]
[168.49606323 -131.56013489]
[161.17997742 -147.45019531]
[167.49531555 -163.40110779]
[183.08001709 -169.72215271]
[188.32673645 -183.77462769]
[193.57345581 -197.82710266]
[180.27102661 -204.80194092]
[167.94769287 -213.38906860]
[156.79782104 -223.45304871]
[146.99725342 -234.83514404]
[138.70057678 -247.35585022]
[132.03862000 -260.81771851]
[127.11645508 -275.00839233]
[124.01171875 -289.70410156]
[122.77337646 -304.67306519]
[123.42095947 -319.67919922]
[125.94425201 -334.48580933]
[130.30346680 -348.85943604]
[136.42982483 -362.57333374]
[144.22674561 -375.41122437]
[153.57122803 -387.17062378]
[164.31590271 -397.66610718]
[176.29132080 -406.73211670]
[189.30860901 -414.22567749]
[203.16246033 -420.02859497]
[217.63438416 -424.04937744]
[232.49613953 -426.22457886]
[247.51333618 -426.51992798]
[262.44912720 -424.93072510]
[277.06793213 -421.48205566]
[291.13922119 -416.22830200]
[304.44107056 -409.25234985]
[316.76370239 -400.66418457]
[327.91271973 -390.59927368]
[337.71231079 -379.21633911]
[346.00796509 -366.69491577]
[352.66879272 -353.23251343]
[357.58975220 -339.04141235]
[360.69323730 -324.34542847]
[361.93032837 -309.37637329]
[361.28146362 -294.37030029]
[358.75692749 -279.56387329]
[354.39651489 -265.19064331]
[348.26901245 -251.47727966]
[340.47100830 -238.64004517]
[331.12551880 -226.88140869]
[320.37997437 -216.38684082]
[308.40377808 -207.32183838]
[295.38586426 -199.82936096]
[281.53152466 -194.02760315]
[267.05926514 -190.00804138]
[252.19732666 -187.83409119]
[237.18011475 -187.54002380]
[222.24446106 -189.13047791]
[207.62593079 -192.58038330]
[202.37921143 -178.52790833]
[197.13249207 -164.47543335]
[204.06878662 -153.61647034]
[203.47535706 -140.55009460]
[195.34503174 -130.05685425]
[182.46885681 -126.10478210]
[177.01350403 -112.13198090]
[180.59077454 -94.95146942]
[166.11914062 -83.56493378]
[160.87242126 -69.51245880]
[163.66920471 -54.88278961]
[151.59362793 -44.66071701]
[146.34690857 -30.60824394]
[141.62677002 -16.37025452]
[137.43975830 -1.96647334]
[133.25274658 12.43730831]
[129.06573486 26.84109116]
[132.94288635 41.22222519]
[121.66102600 52.31412506]
[117.47401428 66.71791077]
[113.28700256 81.12168884]
[109.09999084 95.52547455]
[110.05286407 103.52951050]
[104.74192810 110.11167145]
[100.34093475 124.45151520]
[96.36883545 138.91604614]
[92.82916260 153.49241638]
[89.28948975 168.06878662]
[93.55173492 183.30505371]
[83.02959442 193.84706116]
[79.48992157 208.42343140]
[80.50586700 217.50119019]
[75.78751373 223.18968201]
[72.03121948 237.71174622]
[68.27491760 252.23379517]
[64.51861572 266.75585938]
[69.84932709 284.38156128]
[57.06962967 296.40844727]
[53.52995682 310.98483276]
[49.99028397 325.56118774]
[47.54455566 340.36047363]
[46.20632172 355.30065918]
[44.86808777 370.24084473]
[59.59565353 373.16162109]
[73.92931366 377.63131714]
[87.70667267 383.59927368]
[100.77159882 390.99789429]
[112.97607422 399.74334717]
[124.18180847 409.73654175]
[134.26182556 420.86422729]
[143.10191345 433.00030518]
[150.60192871 446.00732422]
[156.67684937 459.73785400]
[161.25787354 474.03631592]
[164.29309082 488.74072266]
[165.74809265 503.68444824]
[165.60641479 518.69818115]
[163.86964417 533.61175537]
[160.55747986 548.25628662]
[155.70742798 562.46575928]
[149.37445068 576.07922363]
[141.63032532 588.94232178]
[132.56277466 600.90942383]
[122.27454376 611.84490967]
[110.88221741 621.62481689]
[98.51487732 630.13842773]
[85.31264496 637.28918457]
[71.42511749 642.99609375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 185]
[33 184]
[34 183]
[45 182]
[46 181]
[47 180]
[50 178]
[51 177]
[52 176]
[53 175]
[54 173]
[55 172]
[57 170]
[58 169]
[59 168]
[64 167]
[65 166]
[66 164]
[67 163]
[68 162]
[69 161]
[71 159]
[72 158]
[73 157]
[74 156]
[80 155]
[81 154]
[83 152]
[84 151]
[87 149]
[88 148]
[91 144]
[92 143]
[93 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
