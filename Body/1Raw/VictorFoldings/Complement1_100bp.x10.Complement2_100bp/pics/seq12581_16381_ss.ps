%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[92.41810608 646.33648682]
[78.99860382 639.61169434]
[66.23593140 631.71099854]
[54.23286057 622.69812012]
[43.08602905 612.64550781]
[32.88518524 601.63421631]
[23.71246719 589.75280762]
[15.64172554 577.09704590]
[8.73794365 563.76867676]
[3.05670714 549.87518311]
[-1.35624039 535.52832031]
[-4.46536779 520.84368896]
[-6.24564219 505.93939209]
[-6.68272972 490.93557739]
[-5.77311039 475.95294189]
[-3.52410841 461.11218262]
[0.04616806 446.53277588]
[4.90897274 432.33209229]
[11.02515221 418.62448120]
[18.34546280 405.52029419]
[26.81096268 393.12509155]
[36.35349274 381.53860474]
[46.89622116 370.85418701]
[58.35425949 361.15780640]
[70.63535309 352.52755737]
[83.64062500 345.03295898]
[97.26535797 338.73431396]
[111.39984894 333.68234253]
[125.93030548 329.91775513]
[123.48457336 315.11846924]
[121.03884888 300.31921387]
[118.59311676 285.51992798]
[116.14739227 270.72067261]
[113.70166779 255.92138672]
[110.92605591 241.18043518]
[107.82194519 226.50512695]
[104.71783447 211.82981873]
[101.61372375 197.15452576]
[91.41011810 186.30390930]
[96.12411499 171.20130920]
[93.02000427 156.52600098]
[88.63565063 170.87094116]
[79.66481018 182.89276123]
[67.16136932 191.17913818]
[52.59422302 194.75659180]
[37.67470169 193.20486450]
[24.15553474 186.70622253]
[13.62494564 176.02415466]
[7.32005310 162.41355896]
[5.98155117 147.47340393]
[9.76668549 132.95883179]
[18.23078346 120.57500458]
[30.37948799 111.77677155]
[44.78558350 107.59773254]
[59.75665665 108.52883148]
[73.53392029 114.46069336]
[84.49884033 124.69644928]
[91.36372375 138.03509521]
[91.81033325 123.04174805]
[92.25693512 108.04840088]
[92.59191132 93.05213928]
[92.81523895 78.05380249]
[93.03856659 63.05546570]
[92.92690277 48.05588150]
[92.48029327 33.06253433]
[92.03369141 18.06918335]
[91.58708191 3.07583332]
[91.14048004 -11.91751671]
[82.99572754 -25.48120308]
[90.35065460 -38.43320084]
[80.31189728 -53.87032700]
[89.22651672 -68.98642731]
[88.55673218 -83.97146606]
[87.88694000 -98.95650482]
[87.21715546 -113.94154358]
[72.49748993 -117.22279358]
[59.13916397 -124.19706726]
[48.04998779 -134.38363647]
[39.98181534 -147.08367920]
[35.47955322 -161.42826843]
[34.84437561 -176.43778992]
[38.11357880 -191.08882141]
[45.05845642 -204.38397217]
[55.20026779 -215.41973877]
[67.84326172 -223.44790649]
[82.12239075 -227.92630005]
[81.45260620 -242.91134644]
[80.78282166 -257.89639282]
[80.11303711 -272.88140869]
[79.44325256 -287.86645508]
[64.60406494 -290.43798828]
[50.66478729 -296.13980103]
[38.27737808 -304.70520020]
[28.02122116 -315.73358154]
[20.37601471 -328.70913696]
[15.69933796 -343.02496338]
[14.20992756 -358.01147461]
[15.97744751 -372.96774292]
[20.91922760 -387.19421387]
[28.80413055 -400.02551270]
[39.26336670 -410.86151123]
[51.80773544 -419.19534302]
[65.85051727 -424.63723755]
[80.73490143 -426.93270874]
[95.76472473 -425.97433472]
[110.23701477 -421.80694580]
[123.47486877 -414.62548828]
[134.85913086 -404.76586914]
[143.85734558 -392.68917847]
[150.04864502 -378.96029663]
[153.14344788 -364.22137451]
[152.99700928 -349.16174316]
[149.61618042 -334.48577881]
[143.15908813 -320.87988281]
[133.92771912 -308.98046875]
[122.35388184 -299.34405518]
[108.97887421 -292.42138672]
[94.42829132 -288.53625488]
[95.09807587 -273.55120850]
[95.76786041 -258.56616211]
[96.43764496 -243.58113098]
[97.10742950 -228.59608459]
[111.72915649 -225.40948486]
[125.03797913 -218.54127502]
[136.12390137 -208.45433044]
[144.22721863 -195.83177185]
[148.79049683 -181.53083801]
[149.49693298 -166.52450562]
[146.29238892 -151.83543396]
[139.38943481 -138.46623230]
[129.25328064 -127.33095551]
[116.57042694 -119.19271851]
[102.20219421 -114.61132812]
[102.87197876 -99.62628937]
[103.54177094 -84.64125061]
[104.21155548 -69.65621185]
[112.92391205 -61.26446915]
[113.60456085 -48.78566742]
[105.34400940 -38.87980652]
[113.45681763 -26.38854599]
[106.13382721 -12.36412239]
[106.58043671 2.62922740]
[107.02703857 17.62257767]
[107.47364807 32.61592865]
[107.92024994 47.60927582]
[110.22206116 50.28023148]
[111.34453583 54.19879150]
[110.71537018 58.79851532]
[108.03690338 63.27879333]
[107.81357574 78.27713013]
[107.59024811 93.27546692]
[110.62862396 100.74144745]
[107.25028992 108.49501038]
[106.80368042 123.48835754]
[106.35707092 138.48170471]
[107.69530487 153.42189026]
[110.79941559 168.09719849]
[121.22505188 179.99748230]
[116.28902435 194.05041504]
[119.39313507 208.72570801]
[122.49724579 223.40101624]
[125.60135651 238.07632446]
[129.09159851 241.95773315]
[130.59376526 246.35054016]
[130.24600220 250.41183472]
[128.50093079 253.47566223]
[130.94667053 268.27493286]
[133.39239502 283.07421875]
[135.83811951 297.87347412]
[138.28384399 312.67276001]
[140.72956848 327.47201538]
[155.69863892 326.36154175]
[170.70700073 326.59735107]
[185.63378906 328.17758179]
[200.35884094 331.08947754]
[214.76358032 335.30960083]
[228.73205566 340.80398560]
[242.15176392 347.52838135]
[254.91467285 355.42864990]
[266.91802979 364.44119263]
[278.06515503 374.49343872]
[288.26632690 385.50445557]
[297.43942261 397.38555908]
[305.51055908 410.04110718]
[312.41473389 423.36923218]
[318.09640503 437.26257324]
[322.50976562 451.60928345]
[325.61935425 466.29385376]
[327.40008545 481.19805908]
[327.83761597 496.20190430]
[326.92846680 511.18453979]
[324.67993164 526.02539062]
[321.11007690 540.60491943]
[316.24771118 554.80572510]
[310.13195801 568.51354980]
[302.81204224 581.61791992]
[294.34692383 594.01336670]
[284.80474854 605.60015869]
[274.26235962 616.28491211]
[262.80459595 625.98162842]
[250.52377319 634.61224365]
[237.51872253 642.10723877]
[223.89419556 648.40631104]
[209.75985718 653.45867920]
[195.22950745 657.22375488]
[180.42018127 659.67114258]
[165.45106506 660.78118896]
[150.44273376 660.54492188]
[135.51597595 658.96423340]
[120.79102325 656.05187988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
[35 162]
[36 161]
[37 160]
[38 159]
[40 157]
[41 156]
[58 155]
[59 154]
[60 153]
[61 151]
[62 150]
[63 149]
[64 145]
[65 144]
[66 143]
[67 142]
[68 141]
[70 139]
[72 136]
[73 135]
[74 134]
[75 133]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
