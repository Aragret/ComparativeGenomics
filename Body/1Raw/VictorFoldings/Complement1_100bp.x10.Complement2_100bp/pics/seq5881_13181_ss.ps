%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-10.01593781 926.92687988]
[-25.01054382 927.39587402]
[-40.01200485 927.27581787]
[-54.99718475 926.56689453]
[-69.94297791 925.27020264]
[-84.82633972 923.38775635]
[-99.62432861 920.92242432]
[-114.31411743 917.87805176]
[-128.87306213 914.25927734]
[-143.27870178 910.07171631]
[-157.50883484 905.32183838]
[-171.54151917 900.01696777]
[-185.35511780 894.16522217]
[-198.92832947 887.77569580]
[-212.24021912 880.85821533]
[-225.27026367 873.42340088]
[-237.99838257 865.48278809]
[-250.40493774 857.04858398]
[-262.47079468 848.13385010]
[-274.17736816 838.75225830]
[-285.50659180 828.91827393]
[-296.44100952 818.64709473]
[-306.96374512 807.95458984]
[-317.05856323 796.85717773]
[-326.70996094 785.37200928]
[-335.90298462 773.51678467]
[-344.62347412 761.30975342]
[-352.85800171 748.76977539]
[-360.59387207 735.91619873]
[-367.81915283 722.76885986]
[-374.52267456 709.34796143]
[-380.69415283 695.67419434]
[-386.32403564 681.76867676]
[-391.40365601 667.65289307]
[-395.92517090 653.34857178]
[-399.88159180 638.87774658]
[-403.26687622 624.26275635]
[-406.07574463 609.52612305]
[-408.30389404 594.69055176]
[-409.94790649 579.77899170]
[-411.00518799 564.81433105]
[-411.47415161 549.81970215]
[-411.35409546 534.81829834]
[-410.64514160 519.83306885]
[-409.34844971 504.88729858]
[-407.46597290 490.00393677]
[-405.00064087 475.20596313]
[-401.95623779 460.51617432]
[-398.33746338 445.95724487]
[-394.14987183 431.55160522]
[-389.39996338 417.32147217]
[-384.09506226 403.28878784]
[-378.24331665 389.47518921]
[-371.85375977 375.90200806]
[-364.93624878 362.59011841]
[-357.50143433 349.56008911]
[-349.56082153 336.83197021]
[-341.12661743 324.42541504]
[-332.21182251 312.35958862]
[-322.83020020 300.65301514]
[-312.99624634 289.32379150]
[-302.72506714 278.38940430]
[-292.03250122 267.86669922]
[-280.93508911 257.77185059]
[-269.44989014 248.12051392]
[-257.59466553 238.92750549]
[-245.38763428 230.20701599]
[-232.84767151 221.97250366]
[-219.99407959 214.23664856]
[-206.84667969 207.01138306]
[-193.42576599 200.30786133]
[-179.75202942 194.13641357]
[-165.84652710 188.50654602]
[-151.73072815 183.42695618]
[-137.42637634 178.90545654]
[-122.95555115 174.94903564]
[-108.34054565 171.56379700]
[-93.60391235 168.75492859]
[-78.76835632 166.52679443]
[-63.85676956 164.88282776]
[-48.89213181 163.82554626]
[-33.89752579 163.35658264]
[-18.89606667 163.47668457]
[-3.91088748 164.18563843]
[11.03490448 165.48236084]
[25.91826439 167.36485291]
[40.71624374 169.83021545]
[55.40602493 172.87463379]
[69.96495819 176.49343872]
[74.15196991 162.08966064]
[78.33897400 147.68586731]
[82.52598572 133.28208923]
[86.71299744 118.87831116]
[90.90000916 104.47452545]
[89.94713593 96.47048950]
[95.25807190 89.88832855]
[99.65906525 75.54848480]
[103.84607697 61.14469910]
[107.81817627 46.68017578]
[111.79026794 32.21565247]
[98.41509247 25.30202866]
[86.76985931 15.75832272]
[77.36366272 4.00174379]
[70.60769653 -9.45376110]
[66.79730225 -24.01997566]
[66.09906006 -39.06012726]
[68.54348755 -53.91672134]
[74.02371979 -67.94029999]
[82.30019379 -80.51780701]
[93.01110077 -91.09940338]
[105.68819427 -99.22251892]
[119.77729034 -104.53203583]
[134.66247559 -106.79584503]
[149.69303894 -105.91498566]
[164.21191406 -101.92797089]
[177.58436584 -95.00908661]
[189.22584534 -85.46080017]
[198.62741089 -73.70052338]
[205.37808228 -60.24235916]
[209.18273926 -45.67464447]
[209.87507629 -30.63422203]
[207.42480469 -15.77858734]
[201.93905640 -1.75716853]
[193.65762329 10.81707954]
[182.94256592 21.39446449]
[170.26226807 29.51258850]
[156.17108154 34.81656265]
[141.28500366 37.07451630]
[126.25479889 36.18774796]
[122.28269958 50.65227127]
[118.31060028 65.11679840]
[119.85234833 69.63697815]
[118.57091522 75.17366791]
[113.99891663 79.94947815]
[109.59791565 94.28932953]
[105.30379486 108.66153717]
[101.11678314 123.06532288]
[96.92977142 137.46910095]
[92.74275970 151.87287903]
[88.55574799 166.27667236]
[84.36873627 180.68045044]
[98.59888458 185.43029785]
[112.63158417 190.73516846]
[126.44519043 196.58685303]
[140.01841736 202.97636414]
[153.33032227 209.89381409]
[166.36039734 217.32856750]
[179.08853149 225.26914978]
[191.49510193 233.70330811]
[203.56098938 242.61804199]
[215.26759338 251.99961853]
[226.59683228 261.83355713]
[237.53128052 272.10467529]
[248.05403137 282.79718018]
[258.14889526 293.89459229]
[267.80029297 305.37973022]
[276.99334717 317.23492432]
[285.71389771 329.44192505]
[293.94845581 341.98187256]
[301.68435669 354.83541870]
[308.90966797 367.98278809]
[315.61322021 381.40368652]
[321.78472900 395.07739258]
[327.41464233 408.98287964]
[332.49429321 423.09866333]
[337.01583862 437.40298462]
[340.97232056 451.87380981]
[344.35763550 466.48880005]
[347.16653442 481.22540283]
[349.39474487 496.06097412]
[351.03875732 510.97253418]
[352.09609985 525.93719482]
[352.56512451 540.93176270]
[352.44506836 555.93322754]
[351.73617554 570.91839600]
[350.43951416 585.86419678]
[348.55706787 600.74755859]
[346.09176636 615.54559326]
[343.04739380 630.23535156]
[339.42864990 644.79431152]
[335.24111938 659.19995117]
[330.49127197 673.43011475]
[325.18637085 687.46276855]
[319.33465576 701.27636719]
[312.94515991 714.84960938]
[306.02767944 728.16149902]
[298.59289551 741.19158936]
[290.65231323 753.91967773]
[282.21813965 766.32629395]
[273.30337524 778.39215088]
[263.92178345 790.09869385]
[254.08784485 801.42797852]
[243.81669617 812.36236572]
[233.12417603 822.88513184]
[222.02677917 832.97998047]
[210.54161072 842.63134766]
[198.68640137 851.82440186]
[186.47940063 860.54492188]
[173.93945312 868.77947998]
[161.08587646 876.51538086]
[147.93850708 883.74066162]
[134.51760864 890.44421387]
[120.84387970 896.61566162]
[106.93839264 902.24560547]
[92.82260895 907.32519531]
[78.51827240 911.84674072]
[64.04745483 915.80322266]
[49.43246078 919.18847656]
[34.69582748 921.99737549]
[19.86028290 924.22558594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 141]
[90 140]
[91 139]
[92 138]
[93 137]
[94 136]
[96 135]
[97 134]
[98 131]
[99 130]
[100 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
