%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[-19.48767853 534.90319824]
[-30.12782097 545.48272705]
[-41.38732529 555.40045166]
[-53.22510910 564.62030029]
[-65.59797668 573.10852051]
[-78.46077728 580.83422852]
[-91.76657867 587.76922607]
[-105.46682739 593.88812256]
[-119.51153564 599.16870117]
[-133.84945679 603.59161377]
[-148.42825317 607.14074707]
[-163.19476318 609.80322266]
[-178.09507751 611.56921387]
[-193.07484436 612.43231201]
[-208.07937622 612.38940430]
[-223.05395508 611.44055176]
[-237.94392395 609.58935547]
[-252.69494629 606.84246826]
[-267.25320435 603.20996094]
[-281.56558228 598.70507812]
[-295.57986450 593.34423828]
[-309.24487305 587.14703369]
[-322.51077271 580.13604736]
[-335.32916260 572.33685303]
[-347.65325928 563.77795410]
[-359.43811035 554.49060059]
[-370.64068604 544.50854492]
[-381.22012329 533.86840820]
[-391.13781738 522.60882568]
[-400.35757446 510.77099609]
[-408.84576416 498.39810181]
[-416.57141113 485.53527832]
[-423.50631714 472.22943115]
[-429.62518311 458.52914429]
[-434.90567017 444.48443604]
[-439.32855225 430.14648438]
[-442.87762451 415.56765747]
[-445.53997803 400.80114746]
[-447.30590820 385.90081787]
[-448.16894531 370.92105103]
[-448.12594604 355.91650391]
[-447.17709351 340.94195557]
[-445.32580566 326.05197144]
[-442.57885742 311.30096436]
[-438.94628906 296.74273682]
[-434.44131470 282.43035889]
[-429.08041382 268.41613770]
[-422.88314819 254.75114441]
[-415.87210083 241.48527527]
[-408.07287598 228.66691589]
[-399.51391602 216.34286499]
[-390.22644043 204.55805969]
[-380.24438477 193.35552979]
[-369.60415649 182.77615356]
[-358.34454346 172.85850525]
[-346.50668335 163.63879395]
[-334.13375854 155.15066528]
[-321.27087402 147.42507935]
[-307.96499634 140.49023438]
[-294.26470947 134.37142944]
[-280.21994019 129.09100342]
[-265.88198853 124.66819763]
[-251.30314636 121.11917877]
[-236.53662109 118.45688629]
[-221.63629150 116.69103241]
[-206.65652466 115.82806396]
[-191.65197754 115.87113190]
[-176.67741394 116.82006836]
[-161.78746033 118.67142487]
[-147.03645325 121.41843414]
[-132.47822571 125.05107880]
[-118.16589355 129.55610657]
[-104.15167999 134.91706848]
[-90.48671722 141.11441040]
[-77.22087860 148.12551880]
[-64.40256500 155.92480469]
[-52.07854462 164.48382568]
[-40.29379654 173.77133179]
[-29.09131241 183.75344849]
[-18.51197433 194.39373779]
[-7.25587797 184.47908020]
[4.00021791 174.56442261]
[15.25631332 164.64978027]
[26.51240921 154.73512268]
[30.94886017 140.51657104]
[46.41877365 137.20109558]
[57.67486954 127.28645325]
[68.93096161 117.37180328]
[80.18705750 107.45714569]
[79.47822571 94.80206299]
[86.12588501 84.01029968]
[97.74703217 78.95039368]
[110.17580414 81.43620300]
[121.57826996 71.69023132]
[132.98072815 61.94426727]
[144.38319397 52.19830322]
[149.84642029 37.35028458]
[164.54840088 34.96259689]
[175.95086670 25.21663284]
[187.35333252 15.47066784]
[178.66242981 3.23242354]
[171.10356140 -9.73560524]
[164.73759460 -23.32900429]
[159.61575317 -37.43832779]
[155.77929688 -51.94997406]
[153.25910950 -66.74710083]
[152.07548523 -81.71056366]
[152.23796082 -96.71988678]
[153.74520874 -111.65422821]
[156.58511353 -126.39333344]
[160.73480225 -140.81852722]
[166.16085815 -154.81367493]
[172.81959534 -168.26608276]
[180.65740967 -181.06745911]
[189.61119080 -193.11470032]
[199.60882568 -204.31083679]
[210.56985474 -214.56568909]
[222.40599060 -223.79672241]
[235.02195740 -231.92961121]
[248.31616211 -238.89884949]
[262.18157959 -244.64833069]
[276.50656128 -249.13177490]
[291.17575073 -252.31307983]
[306.07107544 -254.16662598]
[321.07260132 -254.67747498]
[336.05950928 -253.84155273]
[350.91113281 -251.66555786]
[365.50793457 -248.16700745]
[379.73236084 -243.37409973]
[393.46987915 -237.32539368]
[406.60989380 -230.06961060]
[419.04660034 -221.66516113]
[430.67984009 -212.17973328]
[441.41598511 -201.68966675]
[451.16860962 -190.27944946]
[459.85910034 -178.04093933]
[467.41757202 -165.07267761]
[473.78314209 -151.47908020]
[478.90457153 -137.36959839]
[482.74057007 -122.85784149]
[485.26031494 -108.06063843]
[486.44348145 -93.09713745]
[486.28054810 -78.08782196]
[484.77282715 -63.15353012]
[481.93246460 -48.41451263]
[477.78234863 -33.98944092]
[472.35586548 -19.99445915]
[465.69671631 -6.54224920]
[457.85852051 6.25887680]
[448.90435791 18.30585098]
[438.90637207 29.50167465]
[427.94503784 39.75620651]
[416.10861206 48.98687744]
[403.49240112 57.11936951]
[390.19799805 64.08820343]
[376.33239746 69.83726501]
[362.00729370 74.32027435]
[347.33798218 77.50112915]
[332.44259644 79.35421753]
[317.44107056 79.86461639]
[302.45419312 79.02822876]
[287.60263062 76.85177612]
[273.00595093 73.35279083]
[258.78164673 68.55944061]
[245.04432678 62.51032257]
[231.90454102 55.25413895]
[219.46809387 46.84931183]
[207.83512878 37.36351776]
[197.09928894 26.87313080]
[185.69683838 36.61909485]
[174.29437256 46.36506271]
[169.64671326 60.51598358]
[154.12915039 63.60076523]
[142.72669983 73.34673309]
[131.32423401 83.09269714]
[119.92176819 92.83866119]
[119.00934601 109.31699371]
[106.54409790 120.13296509]
[90.10171509 118.71324158]
[78.84561920 128.62789917]
[67.58952332 138.54254150]
[56.33342361 148.45719910]
[51.09186172 163.38491821]
[36.42705917 165.99122620]
[25.17096519 175.90586853]
[13.91486931 185.82052612]
[2.65877342 195.73516846]
[-8.59732246 205.64982605]
[0.62255079 217.48756409]
[9.11085510 229.86039734]
[16.83661842 242.72315979]
[23.77165031 256.02893066]
[29.89064407 269.72915649]
[35.17127228 283.77383423]
[39.59426880 298.11172485]
[43.14348984 312.69052124]
[45.80598831 327.45700073]
[47.57205200 342.35733032]
[48.43522644 357.33706665]
[48.39237213 372.34161377]
[47.44364166 387.31619263]
[45.59249496 402.20617676]
[42.84568787 416.95721436]
[39.21324539 431.51550293]
[34.70841980 445.82788086]
[29.34765244 459.84219360]
[23.15049744 473.50723267]
[16.13957405 486.77316284]
[8.34046078 499.59158325]
[-0.21838225 511.91571045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 188]
[81 187]
[82 186]
[83 185]
[84 184]
[86 182]
[87 181]
[88 180]
[89 179]
[93 176]
[94 175]
[95 174]
[96 173]
[98 171]
[99 170]
[100 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
