%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[115.91764069 622.07092285]
[103.68360138 613.38031006]
[92.10853577 603.82965088]
[81.25281525 593.46862793]
[71.17301941 582.35125732]
[61.92170715 570.53552246]
[53.54711151 558.08306885]
[46.09289169 545.05877686]
[39.59791565 531.53057861]
[34.09603882 517.56890869]
[29.61595154 503.24667358]
[26.18100739 488.63848877]
[23.80911636 473.82055664]
[22.51264572 458.87005615]
[22.29835320 443.86499023]
[23.16735458 428.88360596]
[25.11512184 414.00393677]
[28.13150024 399.30361938]
[32.20075989 384.85928345]
[37.30169296 370.74624634]
[43.40769577 357.03805542]
[50.48693848 343.80618286]
[58.50251770 331.11965942]
[67.41263580 319.04458618]
[77.17083740 307.64392090]
[87.72625732 296.97708130]
[99.02385712 287.09976196]
[111.00473785 278.06335449]
[123.60643768 269.91503906]
[136.76324463 262.69729614]
[150.40658569 256.44772339]
[138.70628357 247.23078918]
[141.12779236 231.59599304]
[135.88107300 217.54351807]
[130.63435364 203.49104309]
[118.93404388 194.27409363]
[121.35555267 178.63929749]
[116.10883331 164.58682251]
[100.26142120 166.56489563]
[84.39895630 164.71136475]
[69.43452454 159.13293457]
[56.22948456 150.15072632]
[45.54395294 138.28173828]
[37.99300385 124.20920563]
[34.01128769 108.74314117]
[33.82798767 92.77380371]
[37.45366669 77.22042084]
[44.67961884 62.97827530]
[55.08990479 50.86715698]
[68.08528900 41.58421326]
[62.42250443 27.69418526]
[56.75971985 13.80415726]
[51.09693146 -0.08586924]
[45.43414688 -13.97589588]
[39.77135849 -27.86592293]
[25.48001671 -34.06231308]
[19.93501472 -48.22944641]
[25.93039894 -61.81587219]
[20.26761246 -75.70589447]
[7.89303017 -85.56390381]
[10.25299644 -100.27035522]
[4.59020948 -114.16038513]
[-1.07257712 -128.05041504]
[-15.49160480 -123.86599731]
[-30.26903915 -121.21172333]
[-45.24296951 -120.11667633]
[-60.24933243 -120.59285736]
[-75.12371063 -122.63504791]
[-89.70314026 -126.22086334]
[-103.82786560 -131.31103516]
[-117.34313965 -137.84976196]
[-130.10087585 -145.76544189]
[-141.96130371 -154.97131348]
[-152.79444885 -165.36651611]
[-162.48165894 -176.83717346]
[-170.91674805 -189.25759888]
[-178.00733948 -202.49168396]
[-183.67572021 -216.39447021]
[-187.85978699 -230.81359863]
[-190.51370239 -245.59109497]
[-191.60838318 -260.56506348]
[-191.13183594 -275.57141113]
[-189.08927917 -290.44573975]
[-185.50311279 -305.02508545]
[-180.41259766 -319.14968872]
[-173.87353516 -332.66479492]
[-165.95755005 -345.42233276]
[-156.75140381 -357.28253174]
[-146.35592651 -368.11544800]
[-134.88504028 -377.80236816]
[-122.46440887 -386.23715210]
[-109.23014069 -393.32742310]
[-95.32722473 -398.99545288]
[-80.90799713 -403.17916870]
[-66.13043213 -405.83273315]
[-51.15644836 -406.92706299]
[-36.15010834 -406.45013428]
[-21.27582741 -404.40722656]
[-6.69657755 -400.82070923]
[7.42790318 -395.72985840]
[20.94285965 -389.19046021]
[33.70021439 -381.27416992]
[45.56018829 -372.06771851]
[56.39284134 -361.67199707]
[66.07948303 -350.20086670]
[74.51397705 -337.78002930]
[81.60391998 -324.54559326]
[87.27162170 -310.64254761]
[91.45498657 -296.22320557]
[94.10818481 -281.44558716]
[95.20214081 -266.47155762]
[94.72486115 -251.46524048]
[92.68159485 -236.59100342]
[89.09471130 -222.01184082]
[84.00351715 -207.88748169]
[77.46379089 -194.37269592]
[69.54719543 -181.61552429]
[60.34045792 -169.75578308]
[49.94445801 -158.92337036]
[38.47309494 -149.23701477]
[26.05206299 -140.80282593]
[12.81744957 -133.71319580]
[18.48023605 -119.82317352]
[24.14302254 -105.93314362]
[36.11256409 -97.06864929]
[34.15763855 -81.36868286]
[39.82042694 -67.47866058]
[53.60605621 -61.95669937]
[59.54679489 -47.95090485]
[53.66138840 -33.52870941]
[59.32417297 -19.63868332]
[64.98696136 -5.74865580]
[70.64974976 8.14137077]
[76.31253052 22.03139877]
[81.97531891 35.92142487]
[95.75544739 33.57006073]
[109.72277832 34.14849854]
[123.26129913 37.63121796]
[135.77391052 43.86462402]
[146.70877075 52.57380295]
[155.58360291 63.37464523]
[162.00698853 75.79079437]
[165.69566345 89.27465820]
[166.48692322 103.23155212]
[164.34585571 117.04592133]
[159.36691284 130.10850525]
[151.76968384 141.84318542]
[141.88922119 151.73243713]
[130.16130066 159.34010315]
[135.40802002 173.39257812]
[147.48361206 183.61465454]
[144.68682861 198.24432373]
[149.93354797 212.29679871]
[155.18025208 226.34927368]
[167.25584412 236.57133484]
[164.45906067 251.20100403]
[178.85975647 246.97988892]
[193.52749634 243.80889893]
[208.38580322 241.70455933]
[223.35723877 240.67787170]
[238.36372375 240.73416138]
[253.32702637 241.87313843]
[268.16912842 244.08888245]
[282.81268311 247.36981201]
[297.18127441 251.69885254]
[311.20007324 257.05340576]
[324.79592896 263.40560913]
[337.89801025 270.72225952]
[350.43795776 278.96527100]
[362.35043335 288.09167480]
[373.57330322 298.05386353]
[384.04806519 308.79989624]
[393.72009277 320.27374268]
[402.53897095 332.41558838]
[410.45877075 345.16217041]
[417.43811035 358.44699097]
[423.44067383 372.20077515]
[428.43515015 386.35186768]
[432.39547729 400.82644653]
[435.30099487 415.54907227]
[437.13662720 430.44296265]
[437.89273071 445.43051147]
[437.56539917 460.43353271]
[436.15634155 475.37380981]
[433.67288208 490.17349243]
[430.12799072 504.75537109]
[425.54013062 519.04345703]
[419.93322754 532.96325684]
[413.33651733 546.44213867]
[405.78439331 559.40991211]
[397.31622314 571.79895020]
[387.97613525 583.54461670]
[377.81289673 594.58569336]
[366.87939453 604.86468506]
[355.23272705 614.32788086]
[342.93356323 622.92602539]
[330.04602051 630.61431885]
[316.63729858 637.35253906]
[302.77734375 643.10571289]
[288.53836060 647.84375000]
[273.99459839 651.54199219]
[259.22189331 654.18115234]
[244.29727173 655.74743652]
[229.29852295 656.23272705]
[214.30386353 655.63446045]
[199.39146423 653.95574951]
[184.63906860 651.20538330]
[170.12358093 647.39770508]
[155.92070007 642.55249023]
[142.10446167 636.69512939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 156]
[33 154]
[34 153]
[35 152]
[37 150]
[38 149]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[58 127]
[59 126]
[61 124]
[62 123]
[63 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
