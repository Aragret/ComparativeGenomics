%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[41.47157669 384.89334106]
[40.15430450 399.86703491]
[36.51073074 414.45028687]
[30.63058090 428.28393555]
[22.65865707 441.02737427]
[12.79127693 452.36672974]
[1.27143252 462.02279663]
[-11.61718941 469.75778198]
[-25.55719566 475.38119507]
[-40.20529938 478.75454712]
[-55.20077896 479.79479980]
[-70.17435455 478.47628784]
[-84.75729370 474.83151245]
[-98.59047699 468.95022583]
[-111.33324432 460.97723389]
[-122.67179871 451.10891724]
[-132.32691956 439.58828735]
[-140.06083679 426.69903564]
[-145.68309021 412.75854492]
[-149.05523682 398.11016846]
[-150.09423828 383.11459351]
[-148.77450562 368.14114380]
[-145.12852478 353.55850220]
[-139.24607849 339.72579956]
[-131.27206421 326.98370361]
[-121.40280914 315.64596558]
[-109.88137054 305.99179077]
[-96.99147034 298.25894165]
[-83.05053711 292.63781738]
[-68.40187836 289.26687622]
[-53.40622711 288.22912598]
[-38.43286514 289.55010986]
[-23.85052872 293.19729614]
[-17.98156738 279.39309692]
[-12.11260700 265.58892822]
[-6.24364614 251.78474426]
[-0.37468532 237.98057556]
[5.49427557 224.17639160]
[4.57195616 221.52923584]
[4.64264059 218.35722351]
[5.91148520 215.03677368]
[8.44373035 212.01150513]
[12.14543724 209.74185181]
[18.82563210 196.31147766]
[25.50582695 182.88108826]
[24.86233330 178.14875793]
[27.18483162 172.96194458]
[32.59008789 169.15475464]
[31.77291107 154.28257751]
[45.10592270 145.76545715]
[52.18302917 132.53993225]
[39.97996140 141.26261902]
[26.28779221 147.38833618]
[11.65186787 150.67311096]
[-3.34486651 150.98609924]
[-18.10509682 148.31483459]
[-32.04092789 142.76573181]
[-44.59730148 134.55978394]
[-55.27410507 124.02385712]
[-63.64608002 111.57756805]
[-69.37977600 97.71666718]
[-72.24682617 82.99320984]
[-72.13302612 67.99364471]
[-69.04292297 53.31538773]
[-63.09958649 39.54306793]
[-54.53973770 27.22523689]
[-43.70431137 16.85250664]
[-31.02488136 8.83801746]
[-17.00646210 3.50098491]
[-2.20740223 1.05398071]
[12.78285694 1.59446812]
[27.36725998 5.10091972]
[40.96491241 11.43367481]
[53.03423309 20.34050179]
[63.09449387 31.46664810]
[70.74501038 44.36895752]
[75.68105316 58.53354263]
[77.70603180 73.39623260]
[76.73929596 88.36504364]
[72.81933594 102.84378052]
[66.10452271 116.25223541]
[78.06685638 107.20223999]
[90.02919769 98.15223694]
[94.04647827 91.16410828]
[102.23767853 89.05812836]
[114.33342743 80.18723297]
[126.42918396 71.31633759]
[132.98162842 56.91577911]
[147.82046509 55.62818909]
[159.91622925 46.75729370]
[166.46867371 32.35673904]
[181.30751038 31.06914902]
[193.33689880 22.10845184]
[199.67420959 7.61193562]
[214.49224854 6.10356140]
[226.45457458 -2.94643879]
[238.41691589 -11.99643898]
[230.32891846 -24.63836479]
[223.25772095 -37.87590027]
[217.24694824 -51.62743378]
[212.33363342 -65.80817413]
[208.54808044 -80.33069611]
[205.91363525 -95.10546875]
[204.44653320 -110.04138947]
[204.15582275 -125.04637146]
[205.04328918 -140.02790833]
[207.10345459 -154.89363098]
[210.32363892 -169.55189514]
[214.68399048 -183.91230774]
[220.15759277 -197.88633728]
[226.71072388 -211.38784790]
[234.30297852 -224.33357239]
[242.88754272 -236.64370728]
[252.41149902 -248.24234009]
[262.81610107 -259.05798340]
[274.03723145 -269.02392578]
[286.00570679 -278.07876587]
[298.64770508 -286.16662598]
[311.88531494 -293.23770142]
[325.63693237 -299.24832153]
[339.81771851 -304.16149902]
[354.34027100 -307.94689941]
[369.11508179 -310.58120728]
[384.05099487 -312.04815674]
[399.05599976 -312.33871460]
[414.03753662 -311.45108032]
[428.90322876 -309.39077759]
[443.56146240 -306.17044067]
[457.92181396 -301.80993652]
[471.89581299 -296.33618164]
[485.39724731 -289.78292847]
[498.34289551 -282.19052124]
[510.65292358 -273.60583496]
[522.25146484 -264.08178711]
[533.06701660 -253.67704773]
[543.03283691 -242.45581055]
[552.08752441 -230.48725891]
[560.17529297 -217.84516907]
[567.24621582 -204.60748291]
[573.25671387 -190.85583496]
[578.16973877 -176.67498779]
[581.95501709 -162.15238953]
[584.58911133 -147.37756348]
[586.05590820 -132.44161987]
[586.34631348 -117.43662262]
[585.45855713 -102.45510101]
[583.39807129 -87.58941650]
[580.17761230 -72.93122864]
[575.81695557 -58.57089996]
[570.34307861 -44.59697723]
[563.78967285 -31.09560966]
[556.19714355 -18.15003967]
[547.61230469 -5.84008503]
[538.08813477 5.75836086]
[527.68328857 16.57378769]
[516.46197510 26.53951645]
[504.49331665 35.59410095]
[491.85113525 43.68171692]
[478.61340332 50.75250244]
[464.86169434 56.76285934]
[450.68078613 61.67573547]
[436.15814209 65.46083832]
[421.38330078 68.09483337]
[406.44732666 69.56147766]
[391.44235229 69.85173798]
[376.46081543 68.96380615]
[361.59515381 66.90317535]
[346.93701172 63.68254471]
[332.57672119 59.32176590]
[318.60284424 53.84772873]
[305.10156250 47.29418182]
[292.15606689 39.70153046]
[279.84619141 31.11658859]
[268.24786377 21.59228134]
[257.43252563 11.18733501]
[247.46691895 -0.03410191]
[235.50457764 9.01589775]
[223.54223633 18.06589890]
[218.06054688 31.91509819]
[202.38690186 34.07078934]
[198.94921875 40.61328125]
[190.17840576 43.16490173]
[184.49113464 56.93095016]
[168.78712463 58.85304642]
[156.69136047 67.72393799]
[151.00408936 81.48999023]
[135.30007935 83.41208649]
[123.20432281 92.28298187]
[111.10857391 101.15387726]
[99.07919312 110.11457062]
[87.11685944 119.16457367]
[75.15451813 128.21456909]
[65.40855408 139.61703491]
[58.33144760 152.84255981]
[58.64242172 168.66072083]
[45.81561661 176.23185730]
[38.93620300 189.56129456]
[32.25600815 202.99166870]
[25.57581329 216.42204285]
[19.29845238 230.04536438]
[13.42949200 243.84953308]
[7.56053066 257.65371704]
[1.69156992 271.45788574]
[-4.17739105 285.26205444]
[-10.04635143 299.06625366]
[2.69773293 307.03710938]
[14.03791618 316.90356445]
[23.69493484 328.42260742]
[31.43097878 341.31057739]
[37.05553818 355.25012207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 205]
[34 204]
[35 203]
[36 202]
[37 201]
[38 200]
[43 199]
[44 198]
[45 197]
[48 196]
[50 194]
[51 193]
[81 192]
[82 191]
[83 190]
[85 189]
[86 188]
[87 187]
[89 185]
[90 184]
[92 182]
[93 180]
[95 178]
[96 177]
[97 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
