%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[123.26451874 921.75567627]
[108.32733917 920.36407471]
[93.45487976 918.39782715]
[78.66924286 915.85992432]
[63.99240112 912.75408936]
[49.44614792 909.08496094]
[35.05210114 904.85797119]
[20.83164787 900.07934570]
[6.80591154 894.75634766]
[-7.00426769 888.89672852]
[-20.57837296 882.50927734]
[-33.89623642 875.60339355]
[-46.93807220 868.18945312]
[-59.68450546 860.27844238]
[-72.11660004 851.88208008]
[-84.21587372 843.01281738]
[-95.96437073 833.68389893]
[-107.34461975 823.90911865]
[-118.33971405 813.70306396]
[-128.93333435 803.08081055]
[-139.10971069 792.05828857]
[-148.85375977 780.65167236]
[-158.15098572 768.87811279]
[-166.98757935 756.75494385]
[-175.35041809 744.30029297]
[-183.22705078 731.53253174]
[-190.60581970 718.47076416]
[-197.47572327 705.13433838]
[-203.82656860 691.54309082]
[-209.64891052 677.71716309]
[-214.93412781 663.67712402]
[-219.67434692 649.44384766]
[-223.86251831 635.03845215]
[-227.49243164 620.48236084]
[-230.55868530 605.79718018]
[-233.05674744 591.00476074]
[-234.98286438 576.12707520]
[-236.33421326 561.18615723]
[-237.10877991 546.20428467]
[-237.30538940 531.20373535]
[-236.92378235 516.20672607]
[-235.96449280 501.23553467]
[-234.42897034 486.31246948]
[-232.31948853 471.45965576]
[-229.63919067 456.69915771]
[-226.39204407 442.05294800]
[-222.58287048 427.54272461]
[-218.21734619 413.19009399]
[-213.30194092 399.01635742]
[-207.84396362 385.04257202]
[-201.85153198 371.28948975]
[-195.33354187 357.77758789]
[-188.29966736 344.52688599]
[-180.76037598 331.55712891]
[-172.72685242 318.88751221]
[-164.21104431 306.53692627]
[-155.22560120 294.52371216]
[-145.78387451 282.86566162]
[-135.89988708 271.58013916]
[-125.58831787 260.68392944]
[-114.86450195 250.19317627]
[-103.74435425 240.12350464]
[-92.24441528 230.48983765]
[-80.38175964 221.30651855]
[-68.17400360 212.58717346]
[-55.63930130 204.34477234]
[-42.79626846 196.59155273]
[-29.66398239 189.33901978]
[-16.26195717 182.59797668]
[-2.61010242 176.37840271]
[11.27129745 170.68957520]
[25.36161995 165.53993225]
[39.63993073 160.93711853]
[54.08501434 156.88796997]
[68.67541504 153.39851379]
[83.38945007 150.47392273]
[98.20526123 148.11856079]
[96.42279816 133.22483826]
[94.64032745 118.33112335]
[83.31495667 109.29331207]
[81.59315491 94.90645599]
[90.46595001 83.45133972]
[88.68348694 68.55762482]
[86.90101624 53.66390610]
[84.78639221 38.81370544]
[82.34066772 24.01443672]
[79.89494324 9.21516514]
[77.44921112 -5.58410549]
[75.00348663 -20.38337708]
[59.99597931 -22.01963425]
[45.98688126 -27.64526367]
[34.01575470 -36.84280014]
[24.97093964 -48.92973328]
[19.52362061 -63.00912476]
[18.07802582 -78.03619385]
[20.74142647 -92.89583588]
[27.31618309 -106.48535919]
[37.31440353 -117.79633331]
[49.99415207 -125.98941040]
[64.41451263 -130.45661926]
[79.50538635 -130.86643982]
[94.14694214 -127.18847656]
[107.25267792 -119.69566345]
[117.85005951 -108.94400787]
[125.15268707 -95.73135376]
[128.61866760 -81.03816986]
[127.99078369 -65.95478821]
[123.31564331 -51.60050201]
[114.94017029 -39.04048157]
[103.48587799 -29.20677567]
[89.80275726 -22.82910347]
[92.24848175 -8.02983284]
[94.69421387 6.76943779]
[97.13993835 21.56870842]
[99.58566284 36.36798096]
[102.22368622 38.70746613]
[103.85961151 42.44093323]
[103.85062408 47.08347702]
[101.79473877 51.88143921]
[103.57720184 66.77515411]
[105.35967255 81.66887665]
[116.68504333 90.70668793]
[118.40684509 105.09354401]
[109.53404999 116.54866028]
[111.31651306 131.44238281]
[113.09898376 146.33609009]
[128.05218506 145.12873840]
[143.04081726 144.49853516]
[158.04258728 144.44642639]
[173.03523254 144.97248840]
[187.99645996 146.07594299]
[202.90405273 147.75515747]
[217.73585510 150.00761414]
[232.46984863 152.82998657]
[247.08412170 156.21807861]
[261.55697632 160.16683960]
[275.86688232 164.67042542]
[289.99261475 169.72213745]
[303.91317749 175.31446838]
[317.60787964 181.43910217]
[331.05636597 188.08695984]
[344.23867798 195.24815369]
[357.13522339 202.91203308]
[369.72683716 211.06723022]
[381.99484253 219.70161438]
[393.92095947 228.80236816]
[405.48748779 238.35595703]
[416.67727661 248.34820557]
[427.47366333 258.76425171]
[437.86062622 269.58862305]
[447.82272339 280.80526733]
[457.34515381 292.39746094]
[466.41375732 304.34805298]
[475.01510620 316.63922119]
[483.13638306 329.25274658]
[490.76553345 342.16986084]
[497.89120483 355.37139893]
[504.50283813 368.83773804]
[510.59060669 382.54888916]
[516.14544678 396.48443604]
[521.15911865 410.62371826]
[525.62420654 424.94570923]
[529.53399658 439.42910767]
[532.88275146 454.05245972]
[535.66546631 468.79397583]
[537.87799072 483.63180542]
[539.51708984 498.54385376]
[540.58026123 513.50799561]
[541.06597900 528.50201416]
[540.97351074 543.50360107]
[540.30297852 558.49047852]
[539.05535889 573.44036865]
[537.23254395 588.33105469]
[534.83721924 603.14050293]
[531.87298584 617.84655762]
[528.34423828 632.42755127]
[524.25616455 646.86163330]
[519.61486816 661.12750244]
[514.42724609 675.20385742]
[508.70101929 689.06988525]
[502.44467163 702.70495605]
[495.66751099 716.08874512]
[488.37960815 729.20141602]
[480.59176636 742.02349854]
[472.31561279 754.53594971]
[463.56338501 766.72015381]
[454.34811401 778.55798340]
[444.68350220 790.03192139]
[434.58386230 801.12487793]
[424.06423950 811.82037354]
[413.14025879 822.10253906]
[401.82812500 831.95605469]
[390.14468384 841.36633301]
[378.10726929 850.31933594]
[365.73376465 858.80181885]
[353.04257202 866.80114746]
[340.05249023 874.30541992]
[326.78289795 881.30358887]
[313.25347900 887.78509521]
[299.48428345 893.74041748]
[285.49584961 899.16070557]
[271.30889893 904.03790283]
[256.94454956 908.36468506]
[242.42411804 912.13476562]
[227.76919556 915.34240723]
[213.00152588 917.98291016]
[198.14308167 920.05230713]
[183.21591187 921.54760742]
[168.24221802 922.46655273]
[153.24423218 922.80773926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 126]
[78 125]
[79 124]
[82 121]
[83 120]
[84 119]
[85 115]
[86 114]
[87 113]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
