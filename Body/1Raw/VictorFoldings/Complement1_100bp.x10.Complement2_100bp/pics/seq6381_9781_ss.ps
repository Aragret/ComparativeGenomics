%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[60.09453201 773.54327393]
[45.11487198 774.41821289]
[30.10993385 774.33160400]
[15.14137554 773.28381348]
[0.27070597 771.27905273]
[-14.44096756 768.32574463]
[-28.93319130 764.43585205]
[-43.14641190 759.62542725]
[-57.02222824 753.91424561]
[-70.50361633 747.32580566]
[-83.53517914 739.88714600]
[-96.06336212 731.62878418]
[-108.03669739 722.58471680]
[-119.40596771 712.79211426]
[-130.12446594 702.29119873]
[-140.14814758 691.12512207]
[-149.43580627 679.33972168]
[-157.94929504 666.98352051]
[-165.65362549 654.10717773]
[-172.51713562 640.76373291]
[-178.51161194 627.00793457]
[-183.61244202 612.89636230]
[-187.79866028 598.48693848]
[-191.05305481 583.83892822]
[-193.36224365 569.01245117]
[-194.71676636 554.06854248]
[-195.11103821 539.06854248]
[-194.54344177 524.07409668]
[-193.01631165 509.14682007]
[-190.53593445 494.34805298]
[-187.11247253 479.73861694]
[-182.76000977 465.37854004]
[-177.49644470 451.32684326]
[-171.34339905 437.64123535]
[-164.32614136 424.37799072]
[-156.47352600 411.59158325]
[-147.81781006 399.33456421]
[-138.39456177 387.65731812]
[-128.24252319 376.60781860]
[-117.40338135 366.23147583]
[-105.92169952 356.57089233]
[-93.84465027 347.66580200]
[-81.22186279 339.55279541]
[-68.10520172 332.26522827]
[-54.54857254 325.83297729]
[-40.60768509 320.28256226]
[-26.33982086 315.63671875]
[-11.80361176 311.91458130]
[2.94121051 309.13143921]
[17.83405495 307.29873657]
[32.81372452 306.42398071]
[47.81866074 306.51074219]
[62.78720856 307.55874634]
[64.79122162 292.69320679]
[66.79523468 277.82769775]
[68.79924774 262.96215820]
[70.80326080 248.09663391]
[72.80727386 233.23109436]
[62.33767319 224.94680786]
[57.28818893 212.47094727]
[59.07689667 199.02215576]
[67.34259796 188.12734985]
[80.01149750 182.69691467]
[82.23661804 167.86286926]
[84.46173096 153.02882385]
[86.68685150 138.19477844]
[74.46179962 131.36688232]
[65.29730988 120.77989960]
[60.29167557 107.70259857]
[60.04479218 93.70220184]
[64.58623505 80.45655060]
[73.37175751 69.55303192]
[85.34847260 62.29835892]
[99.08106995 59.56194305]
[101.52679443 44.76267242]
[103.97251892 29.96339989]
[103.74919128 14.96506214]
[100.86392212 0.24517101]
[97.97865295 -14.47472000]
[95.09337616 -29.19461250]
[84.84607697 -41.24879837]
[89.99078369 -55.22668457]
[87.10550690 -69.94657898]
[84.22023773 -84.66646576]
[81.33496857 -99.38636017]
[66.27849579 -99.72816467]
[51.64762497 -103.29912567]
[38.12666702 -109.93219757]
[26.34801674 -119.31716156]
[16.86258698 -131.01504517]
[10.11402607 -144.47874451]
[6.41797781 -159.07852173]
[5.94731236 -174.13150024]
[8.72404385 -188.93365479]
[14.61829948 -202.79266357]
[23.35439491 -215.06028748]
[34.52372742 -225.16276550]
[47.60388184 -232.62759399]
[61.98308563 -237.10560608]
[76.98878479 -238.38737488]
[91.91915131 -236.41294861]
[106.07585144 -231.27467346]
[118.79675293 -223.21287537]
[129.48687744 -212.60459900]
[137.64624023 -199.94604492]
[142.89318848 -185.82926941]
[144.98233032 -170.91452026]
[143.81596375 -155.89941406]
[139.44860840 -141.48620605]
[132.08456421 -128.34906006]
[122.06824493 -117.10239410]
[109.86813354 -108.27225494]
[96.05485535 -102.27162933]
[98.94013214 -87.55174255]
[101.82540131 -72.83184814]
[104.71067047 -58.11195755]
[114.75160217 -47.11063385]
[109.81327057 -32.07988358]
[112.69853973 -17.35999298]
[115.58381653 -2.64010167]
[118.46908569 12.07979012]
[122.41474152 -2.39196920]
[129.66596985 -15.52283478]
[139.81269836 -26.57019234]
[152.28105164 -34.90925980]
[166.36590576 -40.06842422]
[181.27067566 -41.75590897]
[196.15245056 -39.87627792]
[210.16957092 -34.53583527]
[222.52929688 -26.03660583]
[232.53265381 -14.85926342]
[239.61387634 -1.63594246]
[243.37251282 12.88551521]
[243.59596252 27.88385010]
[240.27160645 42.51083374]
[233.58746338 55.93924332]
[223.92152405 67.40962982]
[211.82048035 76.27329254]
[197.96867371 82.02894592]
[183.14950562 84.35108185]
[168.20106506 83.10836792]
[153.96878052 78.37109375]
[141.25752258 70.40717316]
[130.78620911 59.66699219]
[123.14701080 46.75797653]
[118.77178955 32.40912628]
[116.32606506 47.20839691]
[113.88034058 62.00766754]
[127.38325500 70.23024750]
[136.70291138 83.00066376]
[140.41555786 98.36802673]
[137.95404053 113.98470306]
[129.69438171 127.46496582]
[116.89839935 136.74949646]
[101.52089691 140.41989136]
[99.29577637 155.25393677]
[97.07065582 170.08798218]
[94.84554291 184.92202759]
[107.06361389 196.61880493]
[109.87442780 213.12942505]
[102.36553192 227.91381836]
[87.67280579 235.23510742]
[85.66879272 250.10064697]
[83.66477966 264.96615601]
[81.66075897 279.83169556]
[79.65674591 294.69723511]
[77.65273285 309.56274414]
[92.36444092 312.51596069]
[106.85671234 316.40567017]
[121.06998444 321.21591187]
[134.94586182 326.92691040]
[148.42732239 333.51522827]
[161.45896912 340.95376587]
[173.98724365 349.21197510]
[185.96067810 358.25592041]
[197.33006287 368.04840088]
[208.04867554 378.54919434]
[218.07247925 389.71517944]
[227.36027527 401.50045776]
[235.87390137 413.85656738]
[243.57836914 426.73278809]
[250.44201660 440.07617188]
[256.43664551 453.83190918]
[261.53762817 467.94345093]
[265.72399902 482.35281372]
[268.97857666 497.00079346]
[271.28793335 511.82720947]
[272.64260864 526.77111816]
[273.03704834 541.77111816]
[272.46963501 556.76556396]
[270.94265747 571.69287109]
[268.46243286 586.49163818]
[265.03915405 601.10113525]
[260.68685913 615.46124268]
[255.42343140 629.51300049]
[249.27053833 643.19866943]
[242.25343323 656.46203613]
[234.40095520 669.24853516]
[225.74537659 681.50561523]
[216.32226562 693.18298340]
[206.17033386 704.23260498]
[195.33131409 714.60906982]
[183.84973145 724.26977539]
[171.77278137 733.17498779]
[159.15008545 741.28814697]
[146.03350830 748.57586670]
[132.47695923 755.00823975]
[118.53612518 760.55883789]
[104.26831055 765.20483398]
[89.73214722 768.92712402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[58 162]
[63 158]
[64 157]
[65 156]
[66 155]
[74 148]
[75 147]
[76 146]
[77 121]
[78 120]
[79 119]
[80 118]
[82 116]
[83 115]
[84 114]
[85 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
