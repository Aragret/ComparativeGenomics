%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[119.31127167 679.17474365]
[105.78115082 672.68670654]
[92.69938660 665.33642578]
[80.12082672 657.15484619]
[68.09825134 648.17614746]
[56.68207550 638.43811035]
[45.92018890 627.98150635]
[35.85773087 616.85021973]
[26.53690147 605.09088135]
[17.99680138 592.75292969]
[10.27324772 579.88800049]
[3.39863873 566.55017090]
[-2.59819245 552.79528809]
[-7.69209242 538.68103027]
[-11.86169624 524.26672363]
[-15.08951378 509.61270142]
[-17.36200714 494.78048706]
[-18.66964340 479.83227539]
[-19.00694084 464.83074951]
[-18.37248039 449.83889771]
[-16.76892662 434.91952515]
[-14.20300484 420.13522339]
[-10.68547630 405.54806519]
[-6.23109579 391.21914673]
[-0.85854638 377.20861816]
[5.40963745 363.57525635]
[12.54716396 350.37622070]
[20.52409744 337.66687012]
[29.30697632 325.50054932]
[38.85896683 313.92822266]
[49.13999939 302.99847412]
[60.10695267 292.75714111]
[71.71382904 283.24719238]
[83.91194153 274.50848389]
[96.65013123 266.57769775]
[109.87496948 259.48809814]
[123.53098297 253.26937866]
[137.56089783 247.94767761]
[133.15989685 233.60783386]
[122.02893066 223.71081543]
[125.37674713 208.24786377]
[114.24578857 198.35084534]
[117.59359741 182.88789368]
[113.19259644 168.54804993]
[108.79160309 154.20820618]
[104.39060211 139.86836243]
[99.98960114 125.52851105]
[95.58860779 111.18865967]
[90.97459412 96.91593170]
[86.14859772 82.71347046]
[81.32260132 68.51101685]
[76.49660492 54.30856323]
[71.67060852 40.10610580]
[66.95844269 35.46854019]
[65.51272583 29.97245789]
[66.91920471 25.40837479]
[62.51820755 11.06852722]
[58.11721039 -3.27132010]
[53.71620941 -17.61116791]
[48.78461838 -31.77730179]
[43.32926178 -45.75009918]
[37.87390518 -59.72289658]
[23.41537666 -55.68190765]
[8.62633991 -53.10062408]
[-6.34622002 -52.00469971]
[-21.35349655 -52.40502548]
[-36.24633789 -54.29762650]
[-50.87672424 -57.66368866]
[-65.09925079 -62.46975708]
[-78.77256775 -68.66806793]
[-91.76077271 -76.19702148]
[-103.93478394 -84.98178101]
[-115.17360687 -94.93505096]
[-125.36553955 -105.95789337]
[-134.40930176 -117.94075775]
[-142.21498108 -130.76455688]
[-148.70501709 -144.30184937]
[-153.81491089 -158.41806030]
[-157.49388123 -172.97291565]
[-159.70533752 -187.82176208]
[-160.42733765 -202.81700134]
[-159.65266418 -217.80961609]
[-157.38905334 -232.65058899]
[-153.65898132 -247.19242859]
[-148.49952698 -261.29061890]
[-141.96197510 -274.80502319]
[-134.11128235 -287.60131836]
[-125.02548981 -299.55233765]
[-114.79489136 -310.53930664]
[-103.52117157 -320.45303345]
[-91.31637573 -329.19497681]
[-78.30179596 -336.67825317]
[-64.60679626 -342.82849121]
[-50.36746979 -347.58456421]
[-35.72534561 -350.89920044]
[-20.82594872 -352.73947144]
[-5.81735897 -353.08706665]
[9.15125847 -351.93856812]
[23.93113518 -349.30532837]
[38.37537766 -345.21356201]
[52.34042740 -339.70394897]
[65.68749237 -332.83120728]
[78.28392029 -324.66366577]
[90.00450897 -315.28250122]
[100.73278809 -304.78094482]
[110.36212158 -293.26336670]
[118.79680634 -280.84423828]
[125.95301056 -267.64700317]
[131.75961304 -253.80279541]
[136.15892029 -239.44923401]
[139.10717773 -224.72897339]
[140.57510376 -209.78828430]
[140.54809570 -194.77569580]
[139.02644348 -179.84039307]
[136.02525330 -165.13082886]
[131.57435608 -150.79318237]
[125.71799469 -136.96995544]
[118.51435852 -123.79853821]
[110.03506470 -111.40982819]
[100.36436462 -99.92696381]
[89.59838104 -89.46405792]
[77.84412384 -80.12511444]
[65.21839905 -72.00293732]
[51.84670258 -65.17825317]
[57.30205917 -51.20545578]
[62.75741577 -37.23265839]
[71.07911682 -49.71261597]
[86.01107025 -51.13969803]
[96.54601288 -40.46191406]
[94.91796112 -25.55052757]
[82.32706451 -17.39765930]
[68.05606079 -22.01216507]
[72.45705414 -7.67231798]
[76.85805511 6.66752911]
[81.25905609 21.00737572]
[85.87306213 35.28010941]
[90.69905853 49.48256683]
[95.52505493 63.68502045]
[100.35105133 77.88747406]
[105.17705536 92.08993530]
[109.23516083 95.41344452]
[111.14229584 100.77405548]
[109.92845154 106.78766632]
[114.32945251 121.12751007]
[118.73044586 135.46736145]
[123.13144684 149.80720520]
[127.53244781 164.14704895]
[131.93344116 178.48690796]
[143.37919617 189.40960693]
[139.71659851 203.84686279]
[151.16233826 214.76956177]
[147.49974060 229.20683289]
[151.90074158 243.54667664]
[166.50050354 240.08174133]
[181.29393005 237.56910706]
[196.21897888 236.01933289]
[211.21304321 235.43890381]
[226.21324158 235.83026123]
[241.15664673 237.19175720]
[255.98057556 239.51768494]
[270.62286377 242.79827881]
[285.02209473 247.01980591]
[299.11785889 252.16453552]
[312.85104370 258.21087646]
[326.16403198 265.13351440]
[339.00103760 272.90338135]
[351.30813599 281.48788452]
[363.03378296 290.85104370]
[374.12875366 300.95355225]
[384.54650879 311.75305176]
[394.24337769 323.20422363]
[403.17864990 335.25909424]
[411.31488037 347.86703491]
[418.61795044 360.97521973]
[425.05722046 374.52862549]
[430.60565186 388.47042847]
[435.23999023 402.74212646]
[438.94079590 417.28390503]
[441.69256592 432.03472900]
[443.48373413 446.93273926]
[444.30682373 461.91543579]
[444.15832520 476.91998291]
[443.03890991 491.88348389]
[440.95324707 506.74310303]
[437.91009521 521.43658447]
[433.92221069 535.90228271]
[429.00631714 550.07946777]
[423.18307495 563.90875244]
[416.47683716 577.33203125]
[408.91580200 590.29315186]
[400.53164673 602.73760986]
[391.35952759 614.61328125]
[381.43795776 625.87030029]
[370.80850220 636.46148682]
[359.51577759 646.34246826]
[347.60714722 655.47174072]
[335.13253784 663.81097412]
[322.14428711 671.32525635]
[308.69689941 677.98309326]
[294.84674072 683.75646973]
[280.65191650 688.62121582]
[266.17196655 692.55694580]
[251.46762085 695.54711914]
[236.60055542 697.57922363]
[221.63314819 698.64471436]
[206.62814331 698.73913574]
[191.64849854 697.86206055]
[176.75704956 696.01721191]
[162.01623535 693.21234131]
[147.48789978 689.45910645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 153]
[39 152]
[41 150]
[43 148]
[44 147]
[45 146]
[46 145]
[47 144]
[48 143]
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[56 135]
[57 134]
[58 133]
[59 132]
[60 126]
[61 125]
[62 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
