%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[95.19152069 345.20700073]
[91.25363922 330.72579956]
[88.40896606 315.99078369]
[86.67340088 301.08441162]
[86.05664062 286.09002686]
[86.56214905 271.09146118]
[88.18709564 256.17263794]
[90.92239380 241.41694641]
[94.75273895 226.90692139]
[99.65671539 212.72372437]
[105.60689545 198.94665527]
[112.57000732 185.65277100]
[120.50710297 172.91642761]
[129.37380981 160.80882263]
[139.12051392 149.39770508]
[128.47450256 138.83065796]
[117.82849884 128.26361084]
[107.18248749 117.69655609]
[92.69305420 117.64553070]
[82.40935516 107.43810272]
[82.25046539 92.94945526]
[71.60445404 82.38240051]
[63.30919647 78.55794525]
[60.88007355 71.57788849]
[50.39257431 60.85350800]
[39.90507507 50.12912750]
[29.41757202 39.40474701]
[18.93007088 28.68036842]
[7.58864689 38.50433350]
[-4.32524300 47.62559128]
[-16.76812553 56.01086426]
[-29.69459915 63.62955475]
[-43.05749512 70.45385742]
[-56.80805588 76.45888519]
[-70.89610291 81.62271118]
[-85.27023315 85.92649078]
[-99.87799072 89.35453796]
[-114.66607666 91.89433289]
[-129.58053589 93.53660583]
[-144.56694031 94.27536774]
[-159.57061768 94.10791779]
[-174.53680420 93.03488159]
[-189.41088867 91.06015778]
[-204.13861084 88.19095612]
[-218.66622925 84.43775177]
[-232.94073486 79.81423950]
[-246.91001892 74.33728790]
[-260.52313232 68.02687836]
[-273.73040771 60.90604019]
[-286.48361206 53.00075531]
[-298.73626709 44.33987427]
[-310.44363403 34.95499420]
[-321.56295776 24.88036156]
[-332.05374146 14.15273857]
[-341.87765503 2.81126904]
[-350.99884033 -9.10266304]
[-359.38406372 -21.54558563]
[-367.00271606 -34.47209549]
[-373.82693481 -47.83502197]
[-379.83190918 -61.58560944]
[-384.99566650 -75.67367554]
[-389.29937744 -90.04782867]
[-392.72735596 -104.65560150]
[-395.26708984 -119.44370270]
[-396.90930176 -134.35816956]
[-397.64797974 -149.34458923]
[-397.48046875 -164.34825134]
[-396.40734863 -179.31443787]
[-394.43255615 -194.18852234]
[-391.56329346 -208.91622925]
[-387.81002808 -223.44381714]
[-383.18643188 -237.71830750]
[-377.70941162 -251.68756104]
[-371.39895630 -265.30065918]
[-364.27804565 -278.50787354]
[-356.37271118 -291.26107788]
[-347.71176147 -303.51367188]
[-338.32684326 -315.22097778]
[-328.25216675 -326.34027100]
[-317.52447510 -336.83099365]
[-306.18298340 -346.65487671]
[-294.26898193 -355.77600098]
[-281.82601929 -364.16116333]
[-268.89947510 -371.77975464]
[-255.53652954 -378.60391235]
[-241.78591919 -384.60882568]
[-227.69781494 -389.77252197]
[-213.32365417 -394.07617188]
[-198.71586609 -397.50405884]
[-183.92774963 -400.04373169]
[-169.01327515 -401.68585205]
[-154.02685547 -402.42449951]
[-139.02319336 -402.25689697]
[-124.05701447 -401.18371582]
[-109.18293762 -399.20886230]
[-94.45524597 -396.33953857]
[-79.92766571 -392.58618164]
[-65.65320587 -387.96255493]
[-51.68396759 -382.48544312]
[-38.07091141 -376.17492676]
[-24.86371231 -369.05395508]
[-12.11056519 -361.14855957]
[0.14199790 -352.48757935]
[11.84926701 -343.10256958]
[22.96852303 -333.02783203]
[33.45919418 -322.30010986]
[43.28299713 -310.95855713]
[52.40409088 -299.04455566]
[60.78919220 -286.60153198]
[68.40769958 -273.67495728]
[75.23182678 -260.31198120]
[81.23665619 -246.56132507]
[86.40028381 -232.47320557]
[90.70387268 -218.09902954]
[94.13171387 -203.49121094]
[96.67129517 -188.70309448]
[98.31336212 -173.78860474]
[99.05191803 -158.80218506]
[98.88426208 -143.79852295]
[97.81101227 -128.83235168]
[95.83608246 -113.95829010]
[92.96668243 -99.23060608]
[89.21327209 -84.70304108]
[84.58956146 -70.42861176]
[79.11241150 -56.45939255]
[72.80181122 -42.84636688]
[65.68079376 -29.63920021]
[57.77533340 -16.88608932]
[49.11428070 -4.63356733]
[39.72923660 7.07365799]
[29.65445137 18.19286728]
[40.14195251 28.91724777]
[50.62945175 39.64162827]
[61.11695480 50.36600876]
[71.60445404 61.09038544]
[82.17150116 71.73639679]
[92.81751251 82.30344391]
[107.30694580 82.35446930]
[117.59064484 92.56189728]
[117.74953461 107.05054474]
[128.39553833 117.61759949]
[139.04154968 128.18464661]
[149.68756104 138.75169373]
[161.02581787 128.92030334]
[173.06706238 119.96371460]
[185.74397278 111.93201447]
[198.98565674 104.87013245]
[212.71804810 98.81755066]
[226.86434937 93.80812836]
[241.34544373 89.86986542]
[256.08035278 87.02480316]
[270.98669434 85.28884125]
[285.98107910 84.67169189]
[300.97964478 85.17680359]
[315.89852905 86.80135345]
[330.65429688 89.53625488]
[345.16439819 93.36621857]
[359.34774780 98.26982117]
[373.12496948 104.21963501]
[386.41903687 111.18239594]
[399.15557861 119.11915588]
[411.26342773 127.98553467]
[422.67480469 137.73194885]
[433.32592773 148.30387878]
[443.15722656 159.64221191]
[452.11370850 171.68354797]
[460.14529419 184.36053467]
[467.20706177 197.60227966]
[473.25952148 211.33471680]
[478.26879883 225.48106384]
[482.20693970 239.96220398]
[485.05187988 254.69714355]
[486.78771973 269.60348511]
[487.40472412 284.59786987]
[486.89947510 299.59643555]
[485.27481079 314.51528931]
[482.53976440 329.27102661]
[478.70968628 343.78112793]
[473.80593872 357.96441650]
[467.85601807 371.74157715]
[460.89312744 385.03558350]
[452.95626831 397.77209473]
[444.08978271 409.87982178]
[434.34326172 421.29113770]
[423.77124023 431.94216919]
[412.43280029 441.77334595]
[400.39138794 450.72973633]
[387.71435547 458.76119995]
[374.47253418 465.82284546]
[360.74005127 471.87518311]
[346.59365845 476.88436890]
[332.11248779 480.82235718]
[317.37753296 483.66717529]
[302.47116089 485.40286255]
[287.47677612 486.01974487]
[272.47821045 485.51437378]
[257.55935669 483.88955688]
[242.80364990 481.15441895]
[228.29359436 477.32418823]
[214.11035156 472.42034912]
[200.33322144 466.47027588]
[187.03927612 459.50729370]
[174.30285645 451.57028198]
[162.19519043 442.70370483]
[150.78398132 432.95709229]
[140.13304138 422.38497925]
[130.30194092 411.04644775]
[121.34568024 399.00497437]
[113.31432343 386.32785034]
[106.25278473 373.08596802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 143]
[16 142]
[17 141]
[18 140]
[21 137]
[22 136]
[24 135]
[25 134]
[26 133]
[27 132]
[28 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
