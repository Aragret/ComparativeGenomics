%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[26.48005676 442.28387451]
[24.57758331 457.17828369]
[21.04812050 471.77301025]
[15.93450928 485.89089966]
[9.29882622 499.36050415]
[1.22162163 512.01837158]
[-8.19905376 523.71087646]
[-18.84884071 534.29602051]
[-30.59846306 543.64532471]
[-43.30529022 551.64532471]
[-56.81507111 558.19885254]
[-70.96381378 563.22644043]
[-85.57975769 566.66693115]
[-100.48548889 568.47869873]
[-115.50006104 568.63964844]
[-130.44120789 567.14788818]
[-145.12754822 564.02154541]
[-159.38082886 559.29846191]
[-173.02801514 553.03607178]
[-185.90344238 545.31036377]
[-197.85079956 536.21508789]
[-208.72508240 525.86071777]
[-218.39427185 514.37292480]
[-226.74099731 501.89111328]
[-233.66394043 488.56683350]
[-239.07905579 474.56185913]
[-242.92062378 460.04614258]
[-245.14198303 445.19595337]
[-245.71620178 430.19149780]
[-244.63627625 415.21493530]
[-241.91534424 400.44808960]
[-237.58641052 386.07022095]
[-231.70205688 372.25582886]
[-224.33367920 359.17260742]
[-215.57073975 346.97943115]
[-205.51960754 335.82424927]
[-194.30230713 325.84249878]
[-182.05499268 317.15533447]
[-168.92634583 309.86825562]
[-155.07571411 304.06967163]
[-140.67126465 299.83001709]
[-125.88782501 297.20071411]
[-110.90486908 296.21371460]
[-95.90427399 296.88095093]
[-81.06812286 299.19439697]
[-66.57652283 303.12588501]
[-52.60539246 308.62777710]
[-39.32431793 315.63320923]
[-30.90970039 303.21572876]
[-30.17521667 288.33923340]
[-16.02847862 281.25543213]
[-7.61386013 268.83792114]
[0.80075842 256.42044067]
[9.21537685 244.00294495]
[17.62999535 231.58544922]
[25.48175049 218.80459595]
[32.75498199 205.68591309]
[40.02820969 192.56721497]
[47.30144119 179.44851685]
[46.70578003 164.56582642]
[60.16411972 156.24815369]
[67.43734741 143.12947083]
[74.71057892 130.01077271]
[81.98381042 116.89207458]
[89.25703430 103.77338409]
[75.40882874 109.53767395]
[60.62421036 107.00486755]
[49.48436356 96.95977783]
[45.44108582 82.51498413]
[49.74723816 68.14636993]
[61.06850433 58.30620575]
[75.89687347 56.04356766]
[89.63761139 62.05955887]
[98.03299713 74.49006653]
[98.48156738 89.48360443]
[107.44226837 77.45422363]
[116.40296173 65.42485046]
[125.36365509 53.39547348]
[117.70909119 39.03784180]
[117.08434296 22.83742714]
[123.56375885 8.03954411]
[135.80366516 -2.41359782]
[151.32066345 -6.46784544]
[166.99534607 -3.36063051]
[175.77593994 -15.52208614]
[184.55654907 -27.68354225]
[193.33715820 -39.84499741]
[192.05572510 -52.67935562]
[199.61949158 -62.62789536]
[211.53941345 -64.68744659]
[220.50010681 -76.71682739]
[222.53906250 -92.40609741]
[236.34707642 -97.99073792]
[245.30776978 -110.02011108]
[254.26846313 -122.04949188]
[263.22915649 -134.07887268]
[265.26809692 -149.76814270]
[279.07611084 -155.35278320]
[288.03680420 -167.38215637]
[296.99749756 -179.41152954]
[286.05526733 -189.69575500]
[276.35671997 -201.16029358]
[268.02822876 -213.65567017]
[261.17846680 -227.01898193]
[255.89666748 -241.07601929]
[252.25170898 -255.64352417]
[250.29112244 -270.53158569]
[250.04045105 -285.54605103]
[251.50297546 -300.49124146]
[254.65962219 -315.17230225]
[259.46923828 -329.39782715]
[265.86914062 -342.98236084]
[273.77584839 -355.74877930]
[283.08633423 -367.53067017]
[293.67916870 -378.17440796]
[305.41625977 -387.54125977]
[318.14462280 -395.50909424]
[331.69830322 -401.97406006]
[345.90060425 -406.85183716]
[360.56634521 -410.07882690]
[375.50436401 -411.61300659]
[390.51989746 -411.43432617]
[405.41714478 -409.54513550]
[420.00198364 -405.97009277]
[434.08416748 -400.75573730]
[447.48019409 -393.97012329]
[460.01535034 -385.70166016]
[471.52624512 -376.05816650]
[481.86282349 -365.16537476]
[490.89031982 -353.16528320]
[498.49099731 -340.21432495]
[504.56585693 -326.48138428]
[509.03561401 -312.14544678]
[511.84201050 -297.39343262]
[512.94848633 -282.41766357]
[512.34063721 -267.41339111]
[510.02633667 -252.57621765]
[506.03579712 -238.09957886]
[500.42102051 -224.17219543]
[493.25518799 -210.97564697]
[484.63174438 -198.68199158]
[474.66311646 -187.45147705]
[463.47927856 -177.43054199]
[451.22601318 -168.74980164]
[438.06307983 -161.52244568]
[424.16204834 -155.84269714]
[409.70419312 -151.78460693]
[394.87799072 -149.40106201]
[379.87670898 -148.72315979]
[364.89593506 -149.75971985]
[350.13098145 -152.49723816]
[335.77435303 -156.90002441]
[322.01318359 -162.91067505]
[309.02688599 -170.45083618]
[300.06619263 -158.42146301]
[291.10549927 -146.39207458]
[289.70745850 -131.56323242]
[275.25854492 -125.11817169]
[266.29785156 -113.08879089]
[257.33715820 -101.05941772]
[248.37644958 -89.03003693]
[246.97842407 -74.20118713]
[232.52949524 -67.75612640]
[223.56880188 -55.72674942]
[222.46885681 -38.21226883]
[205.49861145 -31.06439400]
[196.71800232 -18.90293884]
[187.93740845 -6.74148321]
[179.15679932 5.41997242]
[186.35919189 17.27719307]
[188.50509644 31.02735710]
[185.23789978 44.59956360]
[177.01878357 55.93696594]
[165.06193542 63.30847168]
[151.15524292 65.57303619]
[137.39303589 62.35616684]
[128.43234253 74.38554382]
[119.47164154 86.41492462]
[110.51094818 98.44429779]
[102.37573242 111.04661560]
[95.10250092 124.16530609]
[87.82926941 137.28399658]
[80.55604553 150.40269470]
[73.28281403 163.52139282]
[73.35824585 179.34242249]
[60.42013168 186.72175598]
[53.14690399 199.84043884]
[45.87367630 212.95913696]
[38.60044479 226.07783508]
[53.28053284 222.99642944]
[65.91466522 231.08213806]
[69.26544189 245.70309448]
[61.41337585 258.48376465]
[46.85649872 262.10275269]
[33.93364334 254.48699951]
[30.04749107 240.00006104]
[21.63287163 252.41755676]
[13.21825409 264.83505249]
[4.80363512 277.25256348]
[-3.61098337 289.67004395]
[-4.94733620 305.43472290]
[-18.49220467 311.63034058]
[-26.90682411 324.04785156]
[-15.47809315 333.78680420]
[-5.19011450 344.72390747]
[3.83222532 356.72644043]
[11.47940350 369.64865112]
[17.65859032 383.33370972]
[22.29477692 397.61550903]
[25.33168411 412.32061768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 203]
[49 202]
[51 200]
[52 199]
[53 198]
[54 197]
[55 196]
[56 189]
[57 188]
[58 187]
[59 186]
[61 184]
[62 183]
[63 182]
[64 181]
[65 180]
[75 179]
[76 178]
[77 177]
[78 176]
[84 169]
[85 168]
[86 167]
[87 166]
[90 164]
[91 163]
[93 161]
[94 160]
[95 159]
[96 158]
[98 156]
[99 155]
[100 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
