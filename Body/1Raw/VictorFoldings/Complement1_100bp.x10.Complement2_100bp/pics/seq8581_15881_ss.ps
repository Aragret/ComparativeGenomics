%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[114.21548462 669.52667236]
[99.35762787 671.72833252]
[84.34098816 672.05041504]
[69.40239716 670.48779297]
[54.77745819 667.06512451]
[40.69683456 661.83642578]
[27.38259125 654.88415527]
[15.04471493 646.31793213]
[3.87779212 636.27288818]
[-5.94205952 624.90747070]
[-14.25996590 612.40081787]
[-20.94474220 598.95025635]
[-25.89096069 584.76794434]
[-29.02060890 570.07751465]
[-30.28433228 555.11071777]
[-29.66219902 540.10351562]
[-27.16401863 525.29260254]
[-22.82919121 510.91162109]
[-16.72608757 497.18737793]
[-8.95095730 484.33627319]
[0.37357169 472.56103516]
[11.10043907 462.04736328]
[23.06046677 452.96102905]
[36.06502533 445.44540405]
[49.90901947 439.61901855]
[64.37410736 435.57369995]
[79.23214722 433.37329102]
[94.24881744 433.05249023]
[95.80934143 418.13388062]
[97.36986542 403.21527100]
[98.93038940 388.29669189]
[100.49091339 373.37808228]
[101.82914734 358.43789673]
[102.94479370 343.47943115]
[104.06044006 328.52099609]
[101.42314148 321.61688232]
[105.30568695 313.34866333]
[106.64392090 298.40847778]
[107.98215485 283.46829224]
[107.75882721 268.46997070]
[105.97635651 253.57623291]
[104.19389343 238.68252563]
[102.41143036 223.78880310]
[100.62895966 208.89508057]
[98.84649658 194.00137329]
[97.06403351 179.10765076]
[95.28156281 164.21392822]
[93.49909973 149.32022095]
[85.03573608 161.70454407]
[70.94860840 166.85749817]
[56.49187088 162.85714722]
[47.05752945 151.19554138]
[46.16435623 136.22215271]
[54.14548492 123.52169800]
[68.02415466 117.83112335]
[82.62396240 121.27288055]
[92.50000000 132.56434631]
[92.50000000 117.56434631]
[82.32884216 107.24475861]
[82.32884216 92.75524139]
[92.50000000 82.43565369]
[92.50000000 67.43565369]
[92.50000000 52.43565369]
[92.50000000 37.43565369]
[89.53043365 31.52860451]
[89.92986298 25.85961151]
[92.72998047 21.99071121]
[93.17658234 6.99736023]
[93.62319183 -7.99598980]
[94.06979370 -22.98933983]
[94.51640320 -37.98268890]
[94.96300507 -52.97603989]
[95.40961456 -67.96939087]
[94.62828827 -82.94902802]
[92.62427521 -97.81455231]
[90.62026215 -112.68008423]
[88.61624908 -127.54560852]
[77.58457184 -117.38184357]
[62.73755646 -119.51868439]
[55.01986694 -132.38092041]
[60.12069702 -146.48699951]
[74.27990723 -151.43844604]
[87.05895233 -143.58662415]
[86.16613770 -158.56002808]
[85.27332306 -173.53343201]
[84.38050842 -188.50683594]
[75.83552551 -201.82200623]
[82.80156708 -214.98724365]
[81.90875244 -229.96064758]
[81.01593018 -244.93405151]
[66.15425110 -247.39947510]
[52.21399307 -253.11058044]
[39.89438248 -261.78094482]
[29.81337357 -272.97561646]
[22.47662354 -286.13311768]
[18.25214195 -300.59347534]
[17.35182762 -315.63131714]
[19.82083702 -330.49240112]
[25.53532791 -344.43127441]
[34.20866394 -356.74877930]
[45.40579224 -366.82708740]
[58.56507111 -374.16064453]
[73.02643585 -378.38162231]
[88.06451416 -379.27828979]
[102.92499542 -376.80569458]
[116.86248779 -371.08782959]
[129.17788696 -362.41149902]
[139.25347900 -351.21191406]
[146.58384705 -338.05087280]
[150.80131531 -323.58847046]
[151.69435120 -308.55020142]
[149.21813965 -293.69030762]
[143.49688721 -279.75421143]
[134.81759644 -267.44088745]
[123.61557770 -257.36804199]
[110.45275116 -250.04084778]
[95.98934174 -245.82687378]
[96.88215637 -230.85346985]
[97.77497101 -215.88006592]
[106.25609589 -203.63589478]
[99.35391235 -189.39965820]
[100.24672699 -174.42623901]
[101.13954163 -159.45283508]
[102.03235626 -144.47943115]
[103.48178101 -129.54962158]
[105.48579407 -114.68409729]
[107.48980713 -99.81856537]
[109.49382019 -84.95304108]
[116.22085571 -98.36001587]
[128.35383606 -107.17991638]
[143.18223572 -109.44235229]
[157.39334106 -104.64188385]
[167.81236267 -93.85095978]
[172.11166382 -79.48029327]
[169.33074951 -64.74032593]
[160.09091187 -52.92401123]
[146.45634460 -46.67113876]
[131.47303772 -47.37861252]
[118.48830414 -54.88838959]
[110.40296173 -67.52278137]
[109.95635986 -52.52943420]
[109.50975037 -37.53608322]
[109.06314850 -22.54273415]
[108.61653900 -7.54938364]
[108.16993713 7.44396639]
[107.72332764 22.43731689]
[107.50000000 37.43565369]
[107.50000000 52.43565369]
[107.50000000 67.43565369]
[107.50000000 82.43565369]
[117.67115784 92.75524139]
[117.67115784 107.24475861]
[107.50000000 117.56434631]
[107.50000000 132.56434631]
[108.39281464 147.53775024]
[110.17528534 162.43147278]
[111.95774841 177.32518005]
[113.74021149 192.21890259]
[115.52268219 207.11262512]
[117.30514526 222.00633240]
[119.08760834 236.90005493]
[120.87007904 251.79377747]
[122.65254211 266.68750000]
[128.68251038 252.95288086]
[139.45614624 242.51597595]
[153.37524414 236.92506409]
[168.37501526 237.00949097]
[182.23030090 242.75672913]
[192.88577271 253.31423950]
[198.76074219 267.11587524]
[198.98370361 282.11419678]
[193.52157593 296.08435059]
[183.18463135 306.95391846]
[169.50630188 313.11047363]
[154.51567078 313.64074707]
[140.43652344 308.46603394]
[129.35742188 298.35397339]
[122.92234039 284.80651855]
[121.58410645 299.74670410]
[120.24587250 314.68688965]
[119.01889801 329.63662720]
[117.90324402 344.59509277]
[116.78759766 359.55352783]
[119.30958557 365.66510010]
[118.48963165 371.28866577]
[115.40951538 374.93859863]
[113.84899139 389.85720825]
[112.28846741 404.77581787]
[110.72794342 419.69439697]
[109.16741943 434.61300659]
[123.79264832 438.03442383]
[137.87371826 443.26193237]
[151.18853760 450.21310425]
[163.52713013 458.77825928]
[174.69490051 468.82238770]
[184.51571655 480.18701172]
[192.83467102 492.69293213]
[199.52058411 506.14291382]
[204.46798706 520.32482910]
[207.59887695 535.01495361]
[208.86386108 549.98168945]
[208.24299622 564.98895264]
[205.74606323 579.80004883]
[201.41244507 594.18139648]
[195.31048584 607.90618896]
[187.53643799 620.75793457]
[178.21290588 632.53393555]
[167.48692322 643.04852295]
[155.52766418 652.13586426]
[142.52372742 659.65258789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 190]
[29 189]
[30 188]
[31 187]
[32 186]
[33 183]
[34 182]
[35 181]
[37 180]
[38 179]
[39 178]
[40 163]
[41 162]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[47 156]
[48 155]
[57 154]
[58 153]
[61 150]
[62 149]
[63 148]
[64 147]
[67 146]
[68 145]
[69 144]
[70 143]
[71 142]
[72 141]
[73 140]
[74 128]
[75 127]
[76 126]
[77 125]
[83 124]
[84 123]
[85 122]
[86 121]
[88 119]
[89 118]
[90 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
