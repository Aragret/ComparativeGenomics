%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[205.35540771 174.47042847]
[192.07756042 167.49197388]
[178.79971313 160.51351929]
[165.52186584 153.53506470]
[152.24401855 146.55661011]
[138.96617126 139.57815552]
[125.68833160 132.59970093]
[134.38819885 144.81904602]
[139.52066040 158.91365051]
[140.71519470 173.86601257]
[137.88558960 188.59671021]
[131.23609924 202.04231262]
[121.24675751 213.23217773]
[108.63871002 221.35850525]
[94.32213593 225.83462524]
[79.33056641 226.33743286]
[64.74625397 222.83061218]
[51.62205124 215.56733704]
[40.90540314 205.07192993]
[33.36996078 192.10208130]
[29.55970955 177.59408569]
[29.74971581 162.59527588]
[33.92626190 148.18846130]
[41.78784180 135.41366577]
[52.76691818 125.19309998]
[66.07090759 118.26461029]
[80.73937225 115.12837219]
[95.71339417 116.01078033]
[109.91302490 120.84866333]
[99.42552185 110.12428284]
[91.98622131 107.02117157]
[88.86319733 99.16130066]
[78.53652954 88.28195953]
[68.20986176 77.40262604]
[57.88319016 66.52329254]
[49.70547867 62.45354843]
[47.48525620 55.40426254]
[37.32170868 44.37238693]
[27.15816307 33.34050751]
[15.39222622 42.65581512]
[2.96305156 51.06579971]
[-10.05985069 58.52342987]
[-23.60364914 64.98699951]
[-37.59260178 70.42035675]
[-51.94847870 74.79312134]
[-66.59098816 78.08083344]
[-81.43824768 80.26511383]
[-96.40722656 81.33374786]
[-111.41420746 81.28074646]
[-126.37525940 80.10641479]
[-141.20672607 77.81732178]
[-155.82565308 74.42626953]
[-170.15028381 69.95221710]
[-184.10050964 64.42018890]
[-197.59831238 57.86111832]
[-210.56822205 50.31169510]
[-222.93768311 41.81412888]
[-234.63752747 32.41595078]
[-245.60232544 22.16971779]
[-255.77076721 11.13272858]
[-265.08596802 -0.63329023]
[-273.49584961 -13.06253910]
[-280.95336914 -26.08550644]
[-287.41680908 -39.62936401]
[-292.85003662 -53.61836243]
[-297.22268677 -67.97428131]
[-300.51028442 -82.61682129]
[-302.69442749 -97.46409607]
[-303.76290894 -112.43308258]
[-303.70977783 -127.44006348]
[-302.53530884 -142.40110779]
[-300.24609375 -157.23254395]
[-296.85491943 -171.85144043]
[-292.38073730 -186.17604065]
[-286.84857178 -200.12622070]
[-280.28939819 -213.62396240]
[-272.73986816 -226.59379578]
[-264.24218750 -238.96319580]
[-254.84390259 -250.66294861]
[-244.59757996 -261.62765503]
[-233.56050110 -271.79602051]
[-221.79438782 -281.11111450]
[-209.36506653 -289.52087402]
[-196.34204102 -296.97827148]
[-182.79812622 -303.44158936]
[-168.80906677 -308.87472534]
[-154.45312500 -313.24722290]
[-139.81054688 -316.53466797]
[-124.96325684 -318.71868896]
[-109.99426270 -319.78707886]
[-94.98728180 -319.73379517]
[-80.02624512 -318.55920410]
[-65.19482422 -316.26986694]
[-50.57596207 -312.87854004]
[-36.25140762 -308.40423584]
[-22.30127716 -302.87194824]
[-8.80358410 -296.31265259]
[4.16618538 -288.76300049]
[16.53549957 -280.26522827]
[28.23518181 -270.86682129]
[39.19980240 -260.62039185]
[49.36804581 -249.58323669]
[58.68304062 -237.81704712]
[67.09269714 -225.38766479]
[74.54998016 -212.36456299]
[81.01319122 -198.82058716]
[86.44618225 -184.83149719]
[90.81856537 -170.47549438]
[94.10589600 -155.83290100]
[96.28977966 -140.98558044]
[97.35801697 -126.01657867]
[97.30461884 -111.00960541]
[96.12989044 -96.04857635]
[93.84040833 -81.21717834]
[90.44896698 -66.59834290]
[85.97453308 -52.27383041]
[80.44213867 -38.32374573]
[73.88271332 -24.82611275]
[66.33293915 -11.85640907]
[57.83505249 0.51283032]
[48.43656540 12.21243000]
[38.19004059 23.17696190]
[48.35358810 34.20883942]
[58.51713562 45.24071503]
[68.76252747 56.19662476]
[79.08919525 67.07595825]
[89.41586304 77.95529175]
[99.74253082 88.83462524]
[110.14990234 99.63678741]
[120.63740540 110.36116791]
[132.66677856 119.32186127]
[145.94462585 126.30031586]
[159.22247314 133.27876282]
[172.50032043 140.25721741]
[185.77816772 147.23567200]
[199.05601501 154.21412659]
[212.33386230 161.19258118]
[220.38929749 148.52886963]
[229.46299744 136.57363892]
[239.49296570 125.40854645]
[250.41069031 115.10986328]
[262.14157104 105.74794006]
[274.60552979 97.38673401]
[287.71734619 90.08335114]
[301.38751221 83.88769531]
[315.52261353 78.84207916]
[330.02612305 74.98097229]
[344.79891968 72.33074951]
[359.74014282 70.90952301]
[374.74768066 70.72698975]
[389.71902466 71.78440094]
[404.55191040 74.07453918]
[419.14505005 77.58175659]
[433.39868164 82.28208923]
[447.21548462 88.14343262]
[460.50106812 95.12575531]
[473.16467285 103.18134308]
[485.11981201 112.25518799]
[496.28479004 122.28528595]
[506.58334351 133.20312500]
[515.94512939 144.93414307]
[524.30615234 157.39817810]
[531.60937500 170.51010132]
[537.80487061 184.18032837]
[542.85034180 198.31550598]
[546.71130371 212.81904602]
[549.36132812 227.59188843]
[550.78234863 242.53311157]
[550.96472168 257.54064941]
[549.90710449 272.51199341]
[547.61682129 287.34484863]
[544.10943604 301.93792725]
[539.40893555 316.19152832]
[533.54742432 330.00823975]
[526.56494141 343.29376221]
[518.50921631 355.95727539]
[509.43521118 367.91229248]
[499.40496826 379.07714844]
[488.48703003 389.37554932]
[476.75588989 398.73721313]
[464.29174805 407.09811401]
[451.17974854 414.40118408]
[437.50942993 420.59652710]
[423.37420654 425.64178467]
[408.87063599 429.50256348]
[394.09774780 432.15243530]
[379.15652466 433.57330322]
[364.14895630 433.75546265]
[349.17764282 432.69769287]
[334.34478760 430.40719604]
[319.75177002 426.89965820]
[305.49822998 422.19897461]
[291.68157959 416.33731079]
[278.39614868 409.35467529]
[265.73272705 401.29876709]
[253.77783203 392.22463989]
[242.61309814 382.19427490]
[232.31480408 371.27618408]
[222.95329285 359.54495239]
[214.59252930 347.08071899]
[207.28962708 333.96862793]
[201.09445190 320.29824829]
[196.04934692 306.16296387]
[192.18875122 291.65933228]
[189.53906250 276.88641357]
[188.11836243 261.94515991]
[187.93637085 246.93760681]
[188.99432373 231.96629333]
[191.28498840 217.13348389]
[194.79272461 202.54049683]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 134]
[5 133]
[6 132]
[7 131]
[29 130]
[30 129]
[32 128]
[33 127]
[34 126]
[35 125]
[37 124]
[38 123]
[39 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
