%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[164.60748291 532.68695068]
[168.53379822 518.17883301]
[174.62884521 504.44018555]
[182.74975586 491.79299927]
[192.70616150 480.53375244]
[204.26467896 470.92639160]
[217.15432739 463.19613647]
[211.49154663 449.30609131]
[205.82876587 435.41607666]
[200.16596985 421.52606201]
[188.19642639 412.66156006]
[190.15135193 396.96157837]
[184.48857117 383.07156372]
[178.82577515 369.18154907]
[172.02510071 382.55130005]
[157.80574036 387.32727051]
[144.31320190 380.77352905]
[139.27662659 366.64437866]
[145.58117676 353.03363037]
[159.61534119 347.73812866]
[173.33905029 353.79071045]
[168.93804932 339.45086670]
[164.53704834 325.11102295]
[160.13604736 310.77117920]
[155.73504639 296.43133545]
[145.19883728 290.48870850]
[141.41493225 278.57797241]
[146.93165588 266.91912842]
[142.74464417 252.51535034]
[138.55763245 238.11155701]
[134.37062073 223.70777893]
[129.86299133 209.40109253]
[125.03699493 195.19863892]
[120.21099854 180.99618530]
[115.38499451 166.79373169]
[110.55899811 152.59127808]
[96.75727844 141.75248718]
[100.49423981 123.72149658]
[95.45732880 109.59246826]
[89.58836365 95.78828430]
[82.90817261 82.35791016]
[76.22797394 68.92753601]
[69.54778290 55.49715805]
[62.86758804 42.06678391]
[56.24384308 35.77680588]
[56.18959045 28.38635063]
[49.71009445 14.85800457]
[34.58309555 11.94595242]
[24.19280624 0.81512600]
[22.37063026 -14.12286854]
[29.60733414 -27.11394691]
[23.12783813 -40.64229202]
[16.64834213 -54.17063904]
[2.01352191 -59.50540924]
[-4.36489201 -73.31737518]
[0.81118524 -87.23656464]
[-5.66831064 -100.76490784]
[-12.14780617 -114.29325867]
[-18.62730217 -127.82160187]
[-22.93489647 -130.76977539]
[-25.43125534 -134.68403625]
[-26.05168533 -138.71270752]
[-25.07890129 -142.10180664]
[-30.94786263 -155.90599060]
[-35.99190521 -160.18023682]
[-37.84239578 -165.55355835]
[-36.77927017 -170.20960999]
[-42.23462677 -184.18241882]
[-47.68998337 -198.15521240]
[-53.14533997 -212.12800598]
[-54.65234756 -197.20390320]
[-60.24950790 -183.28730774]
[-69.49540710 -171.47572327]
[-81.66088104 -162.70068359]
[-95.78649902 -157.65422058]
[-110.75826263 -156.73431396]
[-125.39543915 -160.01350403]
[-138.54367065 -167.23320007]
[-149.16604614 -177.82400513]
[-156.42481995 -190.95069885]
[-159.74755859 -205.57804871]
[-158.87220764 -220.55249023]
[-153.86779785 -234.69305420]
[-145.12898254 -246.88458252]
[-133.34497070 -256.16558838]
[-119.44509125 -261.80413818]
[-104.52553558 -263.35556030]
[-89.76293182 -260.69744873]
[-76.32151031 -254.03952026]
[-65.26132202 -243.90678406]
[-57.45325851 -231.09518433]
[-58.56890488 -246.05363464]
[-59.68455505 -261.01208496]
[-74.42382050 -264.36550903]
[-87.51899719 -271.91586304]
[-97.80566406 -282.99176025]
[-104.36914062 -296.60836792]
[-106.62580872 -311.55490112]
[-104.37500763 -326.50231934]
[-97.81687164 -340.12152100]
[-87.53454590 -351.20147705]
[-74.44233704 -358.75695801]
[-59.70438385 -362.11614990]
[-44.63118362 -360.98037720]
[-30.56303024 -355.45059204]
[-18.75085640 -346.01852417]
[-10.24499226 -333.52285767]
[-5.80177307 -319.07467651]
[-5.81628752 -303.95877075]
[-10.28724480 -289.51916504]
[-18.81708908 -277.03985596]
[-30.64735413 -267.63049316]
[-44.72610092 -262.12774658]
[-43.61045074 -247.16928101]
[-42.49480438 -232.21083069]
[-39.17254257 -217.58335876]
[-33.71718597 -203.61056519]
[-28.26182938 -189.63777161]
[-22.80647278 -175.66497803]
[-17.14368629 -161.77494812]
[-11.27472496 -147.97076416]
[-5.09895658 -134.30110168]
[1.38053918 -120.77275085]
[7.86003494 -107.24440765]
[14.33953094 -93.71606445]
[28.42939186 -89.02442932]
[35.19323730 -75.39706421]
[30.17668915 -60.65013504]
[36.65618515 -47.12178802]
[43.13568115 -33.59344101]
[57.79400253 -31.08914185]
[68.29111481 -20.30606842]
[70.45121002 -5.23333073]
[63.23844147 8.37850952]
[69.71793365 21.90685463]
[76.29796600 35.38658905]
[82.97815704 48.81696320]
[89.65835571 62.24734116]
[96.33854675 75.67771912]
[103.01874542 89.10809326]
[106.83209991 74.60091400]
[118.37092590 65.01678467]
[133.33152771 63.93036270]
[146.13397217 71.74684906]
[152.00326538 85.55088043]
[148.75030518 100.19390869]
[137.58834839 110.21443939]
[122.68055725 111.87506104]
[109.58635712 104.55554962]
[114.62327576 118.68457794]
[125.92080688 124.90779877]
[129.82519531 136.77960205]
[124.76145935 147.76527405]
[129.58744812 161.96772766]
[134.41345215 176.17018127]
[139.23945618 190.37263489]
[144.06544495 204.57510376]
[147.99218750 208.01425171]
[150.00572205 212.19743347]
[150.14302063 216.27127075]
[148.77439880 219.52076721]
[152.96141052 233.92456055]
[157.14842224 248.32833862]
[161.33543396 262.73211670]
[174.92008972 275.16348267]
[170.07490540 292.03033447]
[174.47589111 306.37017822]
[178.87689209 320.71002197]
[183.27789307 335.04986572]
[187.67889404 349.38970947]
[192.71580505 363.51873779]
[198.37860107 377.40878296]
[204.04138184 391.29879761]
[216.41596985 401.15679932]
[214.05599976 415.86325073]
[219.71878052 429.75329590]
[225.38157654 443.64331055]
[231.04435730 457.53335571]
[245.66468811 454.04815674]
[260.64569092 452.83569336]
[275.63616943 453.92437744]
[290.28479004 457.28872681]
[304.24810791 462.84985352]
[317.19882202 470.47738647]
[328.83337402 479.99252319]
[338.87899780 491.17224121]
[347.10021973 503.75442505]
[353.30432129 517.44421387]
[357.34588623 531.92059326]
[359.13015747 546.84429932]
[358.61529541 561.86547852]
[355.81341553 576.63195801]
[350.79013062 590.79766846]
[343.66326904 604.03051758]
[334.59985352 616.02032471]
[323.81234741 626.48596191]
[311.55358887 635.18218994]
[298.11102295 641.90509033]
[283.79971313 646.49707031]
[268.95510864 648.85052490]
[253.92524719 648.91027832]
[239.06242371 646.67492676]
[224.71504211 642.19689941]
[211.21942139 635.58111572]
[198.89193726 626.98266602]
[188.02154541 616.60308838]
[178.86306763 604.68579102]
[171.63119507 591.51000977]
[166.49545288 577.38470459]
[163.57621765 562.64093018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 178]
[8 177]
[9 176]
[10 175]
[12 173]
[13 172]
[14 171]
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[28 164]
[29 163]
[30 162]
[31 161]
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[38 150]
[39 149]
[40 140]
[41 139]
[42 138]
[43 137]
[44 136]
[46 135]
[47 134]
[51 130]
[52 129]
[53 128]
[56 125]
[57 124]
[58 123]
[59 122]
[63 121]
[64 120]
[67 119]
[68 118]
[69 117]
[70 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
