%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[93.20639038 434.54412842]
[89.30490112 449.17483521]
[80.86215210 461.74459839]
[68.79395294 470.88992310]
[54.40937805 475.61886597]
[39.26875305 475.41839600]
[25.01441956 470.31027222]
[13.19258308 460.84863281]
[5.08558798 448.05975342]
[1.57281959 433.33090210]
[3.03531694 418.25973511]
[9.31443882 404.48107910]
[19.72907448 393.48953247]
[33.14952087 386.47738647]
[48.12002945 384.20523071]
[50.78582382 369.44403076]
[48.88109589 362.30300903]
[53.60276031 354.48358154]
[56.48803329 339.76370239]
[59.37330627 325.04379272]
[62.25857925 310.32391357]
[65.14385223 295.60400391]
[68.02912140 280.88412476]
[70.80473328 266.14315796]
[73.14022064 251.32609558]
[75.14423370 236.46055603]
[77.14824677 221.59503174]
[79.15225983 206.72950745]
[81.15627289 191.86398315]
[70.39752960 178.93771362]
[72.35502625 161.89414978]
[86.30268097 151.33563232]
[88.08514404 136.44192505]
[89.86761475 121.54820251]
[91.65007782 106.65448761]
[91.87340546 91.65615082]
[90.53517151 76.71596527]
[89.19693756 61.77577972]
[85.71221161 56.15721512]
[85.60428619 50.47519302]
[88.04806519 46.37190628]
[87.15525055 31.39850044]
[83.52059937 23.01833725]
[86.36229706 16.19583321]
[85.69251251 1.21079385]
[85.02272797 -13.77424526]
[76.67693329 -27.21516418]
[83.83821106 -40.27523041]
[83.16842651 -55.26026917]
[67.88011932 -57.76799011]
[53.44928360 -63.38910675]
[40.50229263 -71.87712097]
[29.60058403 -82.86115265]
[21.21633148 -95.86213684]
[15.71197605 -110.31373596]
[13.32457256 -125.58698273]
[14.15557098 -141.01768494]
[18.16651344 -155.93530273]
[25.18080521 -169.69203186]
[34.89149094 -181.69105530]
[46.87468719 -191.41227722]
[60.60807800 -198.43504333]
[75.49369049 -202.45616150]
[74.60086823 -217.42956543]
[73.70805359 -232.40296936]
[72.81523895 -247.37637329]
[71.92242432 -262.34979248]
[70.91816711 -277.31613159]
[69.80251312 -292.27456665]
[68.68686676 -307.23303223]
[67.57122040 -322.19149780]
[66.45556641 -337.14993286]
[51.44773865 -337.52893066]
[36.55222321 -339.40032959]
[21.91706276 -342.74560547]
[7.68771553 -347.53143311]
[-5.99439907 -353.71029663]
[-18.99329758 -361.22076416]
[-31.17979050 -369.98822021]
[-42.43275452 -379.92547607]
[-52.64035416 -390.93383789]
[-61.70113754 -402.90383911]
[-69.52505493 -415.71652222]
[-76.03433990 -429.24453735]
[-81.16429901 -443.35348511]
[-84.86395264 -457.90310669]
[-87.09653473 -472.74877930]
[-87.83984375 -487.74298096]
[-87.08650208 -502.73669434]
[-84.84399414 -517.58087158]
[-81.13460541 -532.12799072]
[-75.99520111 -546.23352051]
[-69.47686768 -559.75720215]
[-61.64437866 -572.56463623]
[-52.57559204 -584.52856445]
[-42.36063004 -595.53009033]
[-31.10101700 -605.45983887]
[-18.90866280 -614.21911621]
[-5.90474129 -621.72088623]
[7.78150463 -627.89056396]
[22.01405144 -632.66687012]
[36.65144348 -636.00238037]
[51.54821014 -637.86383057]
[66.55628967 -638.23278809]
[81.52652740 -637.10552979]
[96.31013489 -634.49334717]
[110.76017761 -630.42211914]
[124.73304749 -624.93237305]
[138.08987427 -618.07861328]
[150.69790649 -609.92895508]
[162.43182373 -600.56451416]
[173.17501831 -590.07818604]
[182.82072449 -578.57434082]
[191.27305603 -566.16723633]
[198.44802856 -552.98016357]
[204.27430725 -539.14422607]
[208.69401550 -524.79693604]
[211.66320801 -510.08087158]
[213.15237427 -495.14230347]
[213.14672852 -480.12966919]
[211.64630127 -465.19223022]
[208.66603088 -450.47839355]
[204.23553467 -436.13442993]
[198.39883423 -422.30288696]
[191.21392822 -409.12124634]
[182.75225830 -396.72048950]
[173.09790039 -385.22390747]
[162.34681702 -374.74569702]
[150.60583496 -365.39004517]
[137.99168396 -357.24990845]
[124.62969971 -350.40621948]
[110.65270233 -344.92700195]
[96.19959259 -340.86666870]
[81.41402435 -338.26559448]
[82.52967072 -323.30712891]
[83.64531708 -308.34869385]
[84.76097107 -293.39022827]
[85.87661743 -278.43176270]
[89.50890350 -271.99530029]
[86.89582825 -263.24258423]
[87.78864288 -248.26919556]
[88.68146515 -233.29577637]
[89.57427979 -218.32237244]
[90.46709442 -203.34896851]
[104.86785126 -201.33761597]
[118.60147095 -196.54597473]
[131.13645935 -189.15742493]
[141.98733521 -179.45588684]
[150.73336792 -167.81488037]
[157.03495789 -154.68319702]
[160.64677429 -140.56758118]
[161.42732239 -126.01314545]
[159.34449768 -111.58235931]
[154.47686768 -97.83328247]
[147.01075745 -85.29801178]
[137.23307800 -74.46205902]
[125.52030945 -65.74556732]
[112.32402802 -59.48700714]
[98.15346527 -55.93005371]
[98.82324982 -40.94501495]
[107.12113953 -28.57592583]
[100.00776672 -14.44402981]
[100.67755127 0.54100871]
[101.34733582 15.52604771]
[102.12865448 30.50568581]
[103.02146912 45.47909164]
[104.13712311 60.43754578]
[105.47535706 75.37773132]
[106.81359100 90.31791687]
[113.24980927 76.76892853]
[124.32941437 66.65743256]
[138.40881348 61.48340607]
[153.39941406 62.01439285]
[167.07743835 68.17162323]
[177.41384888 79.04170227]
[182.87528992 93.01212311]
[182.65159607 108.01045227]
[176.77595520 121.81178284]
[166.11996460 132.36875916]
[152.26438904 138.11534119]
[137.26461792 138.19902039]
[123.34578705 132.60742188]
[112.57266235 122.16999817]
[106.54379272 108.43695068]
[104.76132965 123.33066559]
[102.97885895 138.22438049]
[101.19639587 153.11810303]
[110.68472290 162.67771912]
[112.90245819 175.76557922]
[107.26088715 187.56620789]
[96.02180481 193.86799622]
[94.01779175 208.73352051]
[92.01377869 223.59904480]
[90.00976562 238.46458435]
[88.00575256 253.33010864]
[89.98997498 258.15814209]
[89.92984009 262.80029297]
[88.23851013 266.50900269]
[85.56594849 268.80895996]
[87.12041473 277.81015015]
[82.74901581 283.76940918]
[79.86373901 298.48928833]
[76.97846985 313.20916748]
[74.09319305 327.92907715]
[71.20792389 342.64895630]
[68.32265472 357.36886597]
[65.54704285 372.10980225]
[62.88124466 386.87103271]
[76.11133575 394.23605347]
[86.23130798 405.49948120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 208]
[16 207]
[18 206]
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[24 199]
[25 195]
[26 194]
[27 193]
[28 192]
[29 191]
[32 187]
[33 186]
[34 185]
[35 184]
[36 169]
[37 168]
[38 167]
[41 166]
[42 165]
[44 164]
[45 163]
[46 162]
[48 160]
[49 159]
[63 144]
[64 143]
[65 142]
[66 141]
[67 140]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
