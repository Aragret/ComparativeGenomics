%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[24.45504761 654.62469482]
[16.10913086 667.10314941]
[6.58028316 678.70349121]
[-4.03972578 689.31396484]
[-15.64861679 698.83239746]
[-28.13458824 707.16711426]
[-41.37738800 714.23779297]
[-55.24947739 719.97644043]
[-69.61726379 724.32769775]
[-84.34236145 727.24975586]
[-99.28296661 728.71435547]
[-114.29518890 728.70745850]
[-129.23443604 727.22912598]
[-143.95684814 724.29357910]
[-158.32063293 719.92913818]
[-172.18745422 714.17779541]
[-185.42375183 707.09490967]
[-197.90206909 698.74871826]
[-209.50221252 689.21966553]
[-220.11248779 678.59942627]
[-229.63067627 666.99035645]
[-237.96513367 654.50421143]
[-245.03558350 641.26129150]
[-250.77394104 627.38903809]
[-255.12492371 613.02117920]
[-258.04666138 598.29602051]
[-259.51095581 583.35540771]
[-259.50378418 568.34320068]
[-258.02514648 553.40393066]
[-255.08930969 538.68157959]
[-250.72456360 524.31793213]
[-244.97291565 510.45120239]
[-237.88978577 497.21505737]
[-229.54336548 484.73690796]
[-220.01405334 473.13693237]
[-209.39363098 462.52688599]
[-197.78434753 453.00894165]
[-185.29804993 444.67471313]
[-172.05496216 437.60452271]
[-158.18264771 431.86645508]
[-143.81469727 427.51574707]
[-129.08947754 424.59432983]
[-114.14880371 423.13031006]
[-99.13658905 423.13778687]
[-84.19739532 424.61672974]
[-69.47509766 427.55285645]
[-55.11148834 431.91790771]
[-41.24490356 437.66979980]
[-34.16779709 424.44427490]
[-27.09069252 411.21875000]
[-20.01358604 397.99322510]
[-13.03513432 384.71539307]
[-6.15572214 371.38595581]
[0.72369057 358.05651855]
[6.89945889 344.38684082]
[12.35481644 330.41406250]
[17.81017303 316.44125366]
[23.26552963 302.46847534]
[13.85169792 290.92526245]
[11.46379566 276.12142944]
[16.84198952 262.01675415]
[28.63545990 252.43496704]
[43.74007034 250.02705383]
[49.19542694 236.05426025]
[54.65078354 222.08145142]
[60.10614014 208.10865784]
[65.56150055 194.13586426]
[70.28163147 179.89787292]
[74.25373077 165.43334961]
[78.22582245 150.96882629]
[82.19792175 136.50430298]
[86.17001343 122.03977966]
[75.78779602 109.52835846]
[74.85865021 93.29682159]
[83.74533081 79.68237305]
[98.97824860 74.00045776]
[102.73455048 59.47839737]
[106.49085236 44.95633698]
[110.24715424 30.43427849]
[114.00345612 15.91222000]
[117.75975800 1.39016056]
[121.08201599 -13.23729992]
[123.96728516 -27.95719147]
[126.85256195 -42.67708206]
[129.73783875 -57.39697266]
[132.62310791 -72.11686707]
[135.06883240 -86.91613770]
[137.07284546 -101.78166199]
[131.24862671 -116.49182892]
[140.61694336 -128.07128906]
[134.79270935 -142.78146362]
[144.16102600 -154.36093140]
[146.16503906 -169.22645569]
[148.16905212 -184.09197998]
[149.39602661 -199.04171753]
[149.84263611 -214.03506470]
[150.28924561 -229.02841187]
[150.73583984 -244.02177429]
[151.18244934 -259.01510620]
[137.30372620 -265.21588135]
[126.85803223 -276.25924683]
[121.43824005 -290.46115112]
[121.87084198 -305.65594482]
[128.08985901 -319.52648926]
[139.14695740 -329.95764160]
[153.35598755 -335.35876465]
[168.55018616 -334.90615845]
[182.41253662 -328.66891479]
[192.82914734 -317.59811401]
[198.21156311 -303.38198853]
[197.73898315 -288.18838501]
[191.48348999 -274.33425903]
[180.39898682 -263.93222046]
[166.17579651 -258.56851196]
[165.72920227 -243.57516479]
[165.28259277 -228.58181763]
[164.83598328 -213.58845520]
[164.38937378 -198.59510803]
[175.24670410 -208.94491577]
[190.20812988 -210.01986694]
[202.43351746 -201.32849121]
[206.33357239 -186.84437561]
[200.12522888 -173.18945312]
[186.64688110 -166.60659790]
[172.06063843 -170.10537720]
[163.03457642 -182.08796692]
[161.03056335 -167.22244263]
[159.02655029 -152.35691833]
[164.99411011 -138.71002197]
[155.48246765 -126.06728363]
[161.45002747 -112.42039490]
[151.93836975 -99.77764893]
[149.93435669 -84.91212463]
[151.52473450 -82.60369873]
[152.29653931 -79.52620697]
[151.95227051 -75.98828888]
[150.31153870 -72.40045929]
[147.34300232 -69.23159027]
[144.45771790 -54.51169968]
[141.57244873 -39.79180908]
[138.68717957 -25.07191849]
[135.80191040 -10.35202694]
[137.25205994 -7.95303202]
[137.83932495 -4.83506250]
[137.28507996 -1.32390571]
[135.43370056 2.15990210]
[132.28181458 5.14646101]
[128.52551270 19.66851997]
[124.76921082 34.19057846]
[121.01290894 48.71263885]
[117.25661469 63.23469925]
[113.50031281 77.75675964]
[122.69639587 87.27624512]
[126.01946259 100.08818054]
[122.60962677 112.87729645]
[113.34923553 122.33423615]
[100.63454437 126.01187134]
[96.66244507 140.47639465]
[92.69034576 154.94091797]
[88.71825409 169.40544128]
[84.74615479 183.86996460]
[97.73917389 176.37454224]
[112.53173828 178.86053467]
[122.36087799 190.19137573]
[122.73284912 205.18675232]
[113.47759247 216.99099731]
[98.82648468 220.20736694]
[85.47781372 213.36535645]
[79.53429413 199.59121704]
[74.07894135 213.56401062]
[68.62358093 227.53681946]
[63.16822433 241.50961304]
[57.71286774 255.48240662]
[67.19015503 267.48776245]
[69.37142181 282.52566528]
[63.76997375 296.54315186]
[51.98313141 305.81280518]
[37.23832703 307.92382812]
[31.78297043 321.89660645]
[26.32761383 335.86941528]
[20.87225723 349.84222412]
[34.57455826 343.73919678]
[49.02822113 347.75064087]
[57.62522507 360.04254150]
[56.43513489 374.99526978]
[46.00204086 385.77258301]
[31.09582138 387.44726562]
[18.53139114 379.25366211]
[14.05311966 364.93594360]
[7.17370701 378.26538086]
[0.29429469 391.59478760]
[-0.86060107 400.65591431]
[-6.78805923 405.07034302]
[-13.86516476 418.29586792]
[-20.94227028 431.52139282]
[-28.01937485 444.74691772]
[-15.54072857 453.09259033]
[-3.94019938 462.62118530]
[6.67048883 473.24099731]
[16.18914795 484.84970093]
[24.52410316 497.33551025]
[31.59508514 510.57815552]
[37.33399200 524.45013428]
[41.68555832 538.81781006]
[44.60786819 553.54284668]
[46.07278442 568.48345947]
[46.06619263 583.49566650]
[44.58815765 598.43493652]
[41.65291977 613.15740967]
[37.28874207 627.52130127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 196]
[49 195]
[50 194]
[51 193]
[52 191]
[53 190]
[54 189]
[55 181]
[56 180]
[57 179]
[58 178]
[63 173]
[64 172]
[65 171]
[66 170]
[67 169]
[68 161]
[69 160]
[70 159]
[71 158]
[72 157]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[87 133]
[88 132]
[90 130]
[92 128]
[93 127]
[94 126]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
