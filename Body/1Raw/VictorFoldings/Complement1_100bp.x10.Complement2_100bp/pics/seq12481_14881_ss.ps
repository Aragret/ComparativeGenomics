%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[73.71721649 378.31594849]
[68.69793701 392.61920166]
[59.08695602 404.34118652]
[46.04485321 412.06640625]
[31.14652443 414.86206055]
[16.19101524 412.39050293]
[2.98427629 404.95022583]
[-6.87891531 393.43966675]
[-12.20753098 379.24874878]
[-12.35811424 364.09115601]
[-7.31248093 349.79718018]
[2.32008338 338.09292603]
[15.37639999 330.39172363]
[30.27985573 327.62356567]
[32.72558212 312.82427979]
[35.17131042 298.02502441]
[37.61703873 283.22573853]
[40.06276703 268.42648315]
[28.95426178 278.50622559]
[14.17760658 281.08505249]
[0.31150728 275.36392212]
[-8.34747505 263.11560059]
[-9.11626053 248.13529968]
[-1.75663209 235.06488037]
[11.45094872 227.95434570]
[26.41397095 229.00695801]
[38.49597549 237.89656067]
[43.95325089 251.86888123]
[48.35424805 237.52903748]
[52.75524521 223.18917847]
[57.15624237 208.84933472]
[51.76766968 198.01930237]
[55.31685257 186.03651428]
[66.42409515 179.47967529]
[71.03810120 165.20695496]
[67.59085846 150.71675110]
[79.19795990 139.96566772]
[83.81196594 125.69293976]
[88.42597961 111.42020416]
[83.75758362 100.75027466]
[87.42245483 89.69541931]
[97.54031372 83.92738342]
[102.36631012 69.72492981]
[107.19230652 55.52247238]
[112.01830292 41.32001495]
[116.84430695 27.11756134]
[121.67030334 12.91510487]
[126.49629974 -1.28735042]
[121.50567627 -13.18089771]
[125.81764221 -24.91080284]
[136.60870361 -30.37702179]
[141.64562988 -44.50605011]
[146.68254089 -58.63507843]
[151.71945190 -72.76410675]
[146.90646362 -84.73064423]
[151.39259338 -96.39505005]
[162.26383972 -101.69999695]
[167.51055908 -115.75247192]
[172.75727844 -129.80494690]
[178.00399780 -143.85740662]
[183.25071716 -157.90988159]
[180.82920837 -173.54467773]
[192.52952576 -182.76162720]
[178.79568481 -188.80357361]
[165.42916870 -195.61972046]
[152.47358704 -203.18783569]
[139.97119141 -211.48323059]
[127.96276093 -220.47883606]
[116.48746490 -230.14532471]
[105.58273315 -240.45115662]
[95.28413391 -251.36271667]
[85.62525940 -262.84442139]
[76.63761139 -274.85882568]
[68.35051727 -287.36672974]
[60.79100418 -300.32733154]
[53.98372269 -313.69833374]
[47.95088196 -327.43618774]
[42.71215820 -341.49603271]
[38.28464127 -355.83203125]
[34.68276978 -370.39739990]
[31.91829681 -385.14462280]
[30.00023651 -400.02563477]
[28.93484497 -414.99188232]
[28.72559738 -429.99453735]
[29.37317848 -444.98468018]
[30.87547302 -459.91339111]
[33.22758102 -474.73199463]
[36.42183304 -489.39215088]
[40.44781113 -503.84603882]
[45.29237747 -518.04650879]
[50.93973541 -531.94726562]
[57.37145996 -545.50292969]
[64.56657410 -558.66931152]
[72.50160980 -571.40344238]
[81.15068054 -583.66387939]
[90.48558807 -595.41046143]
[100.47586060 -606.60504150]
[111.08893585 -617.21093750]
[122.29017639 -627.19372559]
[134.04306030 -636.52075195]
[146.30923462 -645.16156006]
[159.04872131 -653.08807373]
[172.21992493 -660.27435303]
[185.77992249 -666.69696045]
[199.68444824 -672.33502197]
[213.88818359 -677.17004395]
[228.34477234 -681.18634033]
[243.00706482 -684.37072754]
[257.82723999 -686.71289062]
[272.75695801 -688.20520020]
[287.74752808 -688.84271240]
[302.75003052 -688.62335205]
[317.71554565 -687.54797363]
[332.59527588 -685.61987305]
[347.34066772 -682.84552002]
[361.90359497 -679.23388672]
[376.23663330 -674.79675293]
[390.29293823 -669.54858398]
[404.02673340 -663.50653076]
[417.39318848 -656.69030762]
[430.34872437 -649.12207031]
[442.85104370 -640.82659912]
[454.85940552 -631.83087158]
[466.33462524 -622.16430664]
[477.23928833 -611.85839844]
[487.53781128 -600.94671631]
[497.19659424 -589.46496582]
[506.18414307 -577.45050049]
[514.47113037 -564.94250488]
[522.03051758 -551.98187256]
[528.83770752 -538.61077881]
[534.87042236 -524.87292480]
[540.10906982 -510.81301880]
[544.53649902 -496.47698975]
[548.13824463 -481.91159058]
[550.90258789 -467.16433716]
[552.82055664 -452.28329468]
[553.88580322 -437.31704712]
[554.09490967 -422.31439209]
[553.44720459 -407.32427979]
[551.94482422 -392.39556885]
[549.59259033 -377.57699585]
[546.39825439 -362.91683960]
[542.37213135 -348.46298218]
[537.52746582 -334.26254272]
[531.88000488 -320.36184692]
[525.44818115 -306.80621338]
[518.25292969 -293.63989258]
[510.31781006 -280.90579224]
[501.66864014 -268.64547729]
[492.33364868 -256.89895630]
[482.34329224 -245.70448303]
[471.73013306 -235.09861755]
[460.52880859 -225.11593628]
[448.77584839 -215.78901672]
[436.50961304 -207.14826965]
[423.77008057 -199.22187805]
[410.59878540 -192.03570557]
[397.03875732 -185.61317444]
[383.13418579 -179.97526550]
[368.93041992 -175.14033508]
[354.47378540 -171.12417603]
[339.81146240 -167.93988037]
[324.99127197 -165.59782410]
[310.06155396 -164.10566711]
[295.07098389 -163.46826172]
[280.06848145 -163.68769836]
[265.10296631 -164.76324463]
[250.22325134 -166.69142151]
[235.47789001 -169.46589661]
[220.91496277 -173.07765198]
[206.58198547 -177.51490784]
[209.37876892 -162.88523865]
[197.30319214 -152.66316223]
[192.05647278 -138.61068726]
[186.80975342 -124.55821991]
[181.56303406 -110.50575256]
[176.31631470 -96.45327759]
[180.14898682 -79.32793427]
[165.84848022 -67.72719574]
[160.81156921 -53.59816360]
[155.77465820 -39.46913528]
[150.73773193 -25.34010506]
[154.82495117 -8.27371788]
[140.69876099 3.53864717]
[135.87275696 17.74110222]
[131.04675293 31.94355774]
[126.22076416 46.14601517]
[121.39476776 60.34846878]
[116.56876373 74.55092621]
[111.74276733 88.75337982]
[115.43373108 105.11654663]
[102.69870758 116.03421021]
[98.08470154 130.30694580]
[93.47069550 144.57968140]
[96.58791351 160.09075928]
[85.31083679 169.82095337]
[80.69682312 184.09368896]
[84.96898651 202.00541687]
[71.49609375 213.25033569]
[67.09509277 227.59017944]
[62.69409561 241.93002319]
[58.29309845 256.26986694]
[54.86203766 270.87219238]
[52.41630936 285.67147827]
[49.97058105 300.47073364]
[47.52485275 315.27001953]
[45.07912827 330.06927490]
[58.29955673 337.48522949]
[68.18394470 348.97760010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 208]
[15 207]
[16 206]
[17 205]
[18 204]
[28 203]
[29 202]
[30 201]
[31 200]
[34 198]
[35 197]
[37 195]
[38 194]
[39 193]
[42 191]
[43 190]
[44 189]
[45 188]
[46 187]
[47 186]
[48 185]
[51 183]
[52 182]
[53 181]
[54 180]
[57 178]
[58 177]
[59 176]
[60 175]
[61 174]
[63 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
