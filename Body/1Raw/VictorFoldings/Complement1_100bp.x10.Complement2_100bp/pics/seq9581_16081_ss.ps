%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[98.92898560 744.37310791]
[87.01525116 735.24700928]
[75.83507538 725.23571777]
[65.45407104 714.39794922]
[55.93315125 702.79730225]
[47.32819366 690.50189209]
[39.68970108 677.58380127]
[33.06249237 664.11895752]
[27.48546219 650.18627930]
[22.99133873 635.86755371]
[19.60649490 621.24682617]
[17.35079575 606.40991211]
[16.23747826 591.44378662]
[16.27307701 576.43640137]
[17.45738029 561.47583008]
[19.78344154 546.64971924]
[23.23760796 532.04522705]
[27.79960823 517.74798584]
[33.44267273 503.84194946]
[40.13368607 490.40866089]
[47.83337784 477.52697754]
[56.49656677 465.27252197]
[66.07241058 453.71719360]
[76.50471497 442.92877197]
[87.73225403 432.97061157]
[99.68914795 423.90112305]
[112.30522919 415.77355957]
[125.50644684 408.63558960]
[139.21534729 402.52911377]
[134.17842102 388.40008545]
[129.14151001 374.27105713]
[124.10459137 360.14202881]
[119.06767273 346.01300049]
[117.03012085 360.87396240]
[110.75723267 374.49935913]
[100.79167938 385.71041870]
[87.99557495 393.53726196]
[73.47591400 397.30282593]
[58.48879242 396.68133545]
[44.33074951 391.72656250]
[32.22659302 382.86715698]
[23.22345543 370.86950684]
[18.10019875 356.77154541]
[17.30003357 341.79290771]
[20.89218330 327.22937012]
[28.56589317 314.34085083]
[39.65730667 304.24230957]
[53.20690918 297.80737305]
[68.04252625 295.59274292]
[82.88072205 297.79000854]
[96.43784332 304.20907593]
[107.54107666 314.29461670]
[115.22852325 327.17089844]
[114.33570862 312.19750977]
[113.44289398 297.22409058]
[112.21591949 282.27435303]
[110.65539551 267.35574341]
[109.09487152 252.43714905]
[107.53434753 237.51853943]
[96.47602081 223.89208984]
[104.11375427 207.13659668]
[102.33128357 192.24287415]
[98.41522217 185.97500610]
[100.63485718 177.11436462]
[99.07433319 162.19575500]
[97.51380920 147.27714539]
[88.49441528 135.42388916]
[94.75403595 120.89365387]
[93.19351196 105.97504425]
[90.57206726 103.14654541]
[89.21012115 99.17628479]
[89.58962250 94.65267944]
[91.91173553 90.35760498]
[91.01892090 75.38420105]
[90.12610626 60.41079330]
[86.81021118 54.69097137]
[86.87150574 49.00825119]
[89.43637085 44.97954559]
[88.98976898 29.98619652]
[88.54315948 14.99284554]
[88.09655762 -0.00050407]
[87.31523132 -14.98014164]
[86.19958496 -29.93859482]
[85.08393860 -44.89704895]
[83.96828461 -59.85550308]
[82.74131012 -74.80523682]
[81.40307617 -89.74542236]
[80.06484222 -104.68560791]
[78.61542511 -119.61541748]
[69.48441315 -132.53575134]
[75.85564423 -145.99891663]
[74.29512024 -160.91751099]
[59.46254730 -163.83059692]
[46.14837646 -170.98771667]
[35.53649521 -181.75244141]
[28.57051086 -195.16760254]
[25.86982918 -210.04032898]
[27.67459679 -225.04812622]
[33.82432938 -238.85653687]
[43.77220154 -250.23771667]
[56.63365555 -258.17965698]
[71.26506042 -261.97616577]
[86.36539459 -261.28967285]
[100.59194946 -256.18121338]
[112.67971802 -247.10501099]
[121.55384827 -234.86813354]
[126.42527771 -220.55867004]
[126.86082458 -205.44902039]
[122.82176971 -190.88270569]
[114.66725922 -178.15495300]
[103.12239075 -168.39753723]
[89.21372986 -162.47804260]
[90.77425385 -147.55943298]
[99.79364777 -135.70617676]
[93.53402710 -121.17593384]
[97.35633850 -114.85045624]
[95.00502777 -106.02384186]
[96.34326172 -91.08365631]
[97.68149567 -76.14347076]
[101.40921021 -69.76177979]
[98.92674255 -60.97114944]
[100.04238892 -46.01269531]
[101.15803528 -31.05424309]
[102.27368927 -16.09579086]
[104.69246674 -13.53028011]
[105.98879242 -9.66574955]
[105.56564331 -5.04252100]
[103.08990479 -0.44711000]
[103.53651428 14.54623985]
[103.98311615 29.53959084]
[104.42972565 44.53293991]
[105.09951019 59.51797867]
[105.99232483 74.49138641]
[106.88513947 89.46479034]
[108.11211395 104.41452026]
[109.67263794 119.33312988]
[118.80364990 132.25346375]
[112.43241882 145.71662903]
[113.99294281 160.63522339]
[115.55346680 175.55383301]
[117.22500610 190.46040344]
[119.00746918 205.35412598]
[128.64607239 213.92501831]
[129.82408142 226.36671448]
[122.45295715 235.95802307]
[124.01347351 250.87663269]
[125.57399750 265.79522705]
[127.13452148 280.71383667]
[130.20201111 284.93728638]
[131.23904419 289.46252441]
[130.47064209 293.46560669]
[128.41630554 296.33126831]
[129.30911255 311.30468750]
[130.20193481 326.27807617]
[133.19670105 340.97610474]
[138.23362732 355.10513306]
[143.27053833 369.23416138]
[148.30744934 383.36318970]
[153.34437561 397.49221802]
[167.82460022 393.54940796]
[182.56416321 390.72665405]
[197.47656250 389.04049683]
[212.47428894 388.50082397]
[227.46929932 389.11077881]
[242.37362671 390.86682129]
[257.09979248 393.75863647]
[271.56140137 397.76925659]
[285.67355347 402.87515259]
[299.35342407 409.04632568]
[312.52078247 416.24658203]
[325.09832764 424.43368530]
[337.01220703 433.55953979]
[348.19259644 443.57064819]
[358.57379150 454.40823364]
[368.09494019 466.00869751]
[376.70013428 478.30395508]
[384.33886719 491.22186279]
[390.96633911 504.68661499]
[396.54360962 518.61920166]
[401.03802490 532.93780518]
[404.42312622 547.55847168]
[406.67910767 562.39538574]
[407.79272461 577.36138916]
[407.75741577 592.36877441]
[406.57339478 607.32946777]
[404.24758911 622.15551758]
[400.79370117 636.76013184]
[396.23199463 651.05743408]
[390.58917236 664.96362305]
[383.89843750 678.39703369]
[376.19897461 691.27880859]
[367.53601074 703.53344727]
[357.96038818 715.08898926]
[347.52828979 725.87762451]
[336.30093384 735.83599854]
[324.34420776 744.90570068]
[311.72830200 753.03350830]
[298.52722168 760.17169189]
[284.81845093 766.27844238]
[270.68240356 771.31781006]
[256.20211792 775.26037598]
[241.46249390 778.08282471]
[226.55006409 779.76873779]
[211.55233765 780.30810547]
[196.55732727 779.69787598]
[181.65303040 777.94152832]
[166.92691040 775.04943848]
[152.46539307 771.03857422]
[138.35333252 765.93237305]
[124.67356873 759.76098633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 159]
[30 158]
[31 157]
[32 156]
[33 155]
[53 154]
[54 153]
[55 152]
[56 148]
[57 147]
[58 146]
[59 145]
[61 142]
[62 141]
[64 140]
[65 139]
[66 138]
[68 136]
[69 135]
[73 134]
[74 133]
[75 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 124]
[83 123]
[84 122]
[85 121]
[86 119]
[87 118]
[88 117]
[89 115]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
