%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[78.38029480 751.69097900]
[63.39248657 751.02105713]
[48.45255661 749.64935303]
[33.59334183 747.57891846]
[18.84750366 744.81427002]
[4.24745989 741.36151123]
[-10.17469692 737.22814941]
[-24.38726234 732.42333984]
[-38.35899734 726.95764160]
[-52.05918121 720.84307861]
[-65.45771027 714.09307861]
[-78.52511597 706.72247314]
[-91.23268890 698.74749756]
[-103.55248260 690.18560791]
[-115.45742798 681.05572510]
[-126.92134094 671.37780762]
[-137.91903687 661.17321777]
[-148.42631531 650.46435547]
[-158.42010498 639.27471924]
[-167.87843323 627.62896729]
[-176.78050232 615.55273438]
[-185.10673523 603.07244873]
[-192.83883667 590.21563721]
[-199.95982361 577.01055908]
[-206.45402527 563.48620605]
[-212.30715942 549.67230225]
[-217.50637817 535.59924316]
[-222.04025269 521.29791260]
[-225.89880371 506.79983521]
[-229.07354736 492.13681030]
[-231.55752563 477.34112549]
[-233.34524536 462.44525146]
[-234.43281555 447.48193359]
[-234.81781006 432.48410034]
[-234.49940491 417.48471069]
[-233.47830200 402.51675415]
[-231.75672913 387.61306763]
[-229.33848572 372.80648804]
[-226.22886658 358.12951660]
[-222.43473816 343.61444092]
[-217.96441650 329.29315186]
[-212.82772827 315.19714355]
[-207.03598022 301.35739136]
[-200.60189819 287.80432129]
[-193.53962708 274.56771851]
[-185.86468506 261.67672729]
[-177.59394836 249.15960693]
[-168.74559021 237.04393005]
[-159.33906555 225.35630798]
[-149.39506531 214.12245178]
[-138.93542480 203.36701965]
[-127.98316193 193.11369324]
[-116.56233215 183.38497925]
[-104.69804382 174.20230103]
[-92.41638947 165.58580017]
[-79.74435425 157.55444336]
[-66.70980072 150.12590027]
[-53.34138107 143.31646729]
[-39.66847992 137.14112854]
[-25.72115326 131.61344910]
[-11.53006172 126.74560547]
[2.87359953 122.54827118]
[17.45816803 119.03068542]
[32.19158554 116.20057678]
[47.04146194 114.06417084]
[61.97515106 112.62615967]
[76.95983124 111.88970947]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[95.06175232 42.51866531]
[95.73153687 27.53362465]
[96.40132141 12.54858589]
[97.07110596 -2.43645287]
[82.21464539 -4.59614992]
[67.64705658 -8.22435951]
[53.51311493 -13.28502178]
[39.95329666 -19.72784233]
[27.10236931 -27.48878479]
[15.08805084 -36.49071503]
[4.02975178 -46.64416885]
[-5.96262407 -57.84823227]
[-14.78976440 -69.99155426]
[-22.36393929 -82.95343781]
[-28.60987282 -96.60506439]
[-33.46548462 -110.81076050]
[-36.88251877 -125.42932129]
[-38.82701492 -140.31547546]
[-39.27964401 -155.32127380]
[-38.23591232 -170.29756165]
[-35.70619202 -185.09550476]
[-31.71562004 -199.56802368]
[-26.30386353 -213.57128906]
[-19.52470589 -226.96612549]
[-11.44552231 -239.61940002]
[-2.14661217 -251.40536499]
[8.27960682 -262.20687866]
[19.72951126 -271.91656494]
[32.08930588 -280.43795776]
[45.23614502 -287.68637085]
[59.03937149 -293.58972168]
[73.36179352 -298.08935547]
[88.06107330 -301.14056396]
[102.99111176 -302.71301270]
[118.00352478 -302.79107666]
[132.94911194 -301.37399292]
[147.67932129 -298.47579956]
[162.04776001 -294.12536621]
[175.91163635 -288.36587524]
[189.13314819 -281.25460815]
[201.58090210 -272.86221313]
[213.13116455 -263.27212524]
[223.66914368 -252.57962036]
[233.09013367 -240.89100647]
[241.30046082 -228.32243347]
[248.21856689 -214.99882507]
[253.77566528 -201.05259705]
[257.91653442 -186.62236023]
[260.60000610 -171.85151672]
[261.79943848 -156.88690186]
[261.50289917 -141.87721252]
[259.71331787 -126.97164154]
[256.44848633 -112.31832886]
[251.74087524 -98.06291199]
[245.63726807 -84.34706116]
[238.19830322 -71.30710602]
[229.49792480 -59.07264328]
[219.62260437 -47.76526642]
[208.67050171 -37.49736023]
[196.75045776 -28.37096596]
[183.98092651 -20.47679520]
[170.48884583 -13.89330387]
[156.40829468 -8.68592358]
[141.87922668 -4.90640974]
[127.04603577 -2.59232450]
[112.05614471 -1.76666772]
[111.38636017 13.21837139]
[110.71657562 28.20340919]
[110.04679108 43.18844986]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[121.88754272 113.89784241]
[136.74676514 115.96822357]
[151.49261475 118.73281860]
[166.09266663 122.18554688]
[180.51484680 126.31881714]
[194.72743225 131.12355042]
[208.69918823 136.58917236]
[222.39939880 142.70367432]
[235.79795837 149.45362854]
[248.86540222 156.82417297]
[261.57299805 164.79913330]
[273.89285278 173.36094666]
[285.79782104 182.49081421]
[297.26177979 192.16865540]
[308.25952148 202.37321472]
[318.76684570 213.08204651]
[328.76068115 224.27160645]
[338.21905518 235.91729736]
[347.12118530 247.99353027]
[355.44747925 260.47375488]
[363.17962646 273.33053589]
[370.30065918 286.53558350]
[376.79492188 300.05993652]
[382.64813232 313.87380981]
[387.84741211 327.94683838]
[392.38134766 342.24813843]
[396.23995972 356.74618530]
[399.41476440 371.40921021]
[401.89880371 386.20489502]
[403.68658447 401.10076904]
[404.77423096 416.06405640]
[405.15927124 431.06188965]
[404.84094238 446.06127930]
[403.81991577 461.02926636]
[402.09838867 475.93292236]
[399.68020630 490.73953247]
[396.57064819 505.41650391]
[392.77658081 519.93157959]
[388.30633545 534.25292969]
[383.16970825 548.34893799]
[377.37802124 562.18872070]
[370.94400024 575.74182129]
[363.88177490 588.97845459]
[356.20687866 601.86950684]
[347.93621826 614.38665771]
[339.08789062 626.50231934]
[329.68142700 638.19000244]
[319.73748779 649.42388916]
[309.27789307 660.17938232]
[298.32565308 670.43273926]
[286.90487671 680.16149902]
[275.04064941 689.34423828]
[262.75900269 697.96081543]
[250.08702087 705.99218750]
[237.05249023 713.42083740]
[223.68409729 720.23034668]
[210.01123047 726.40570068]
[196.06391907 731.93347168]
[181.87284851 736.80133057]
[167.46920776 740.99877930]
[152.88465881 744.51641846]
[138.15126038 747.34655762]
[123.30138397 749.48303223]
[108.36769867 750.92114258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 146]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
