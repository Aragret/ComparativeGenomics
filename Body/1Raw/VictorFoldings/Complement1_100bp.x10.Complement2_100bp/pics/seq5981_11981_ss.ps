%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[129.49974060 751.37762451]
[115.47211456 746.05126953]
[101.79899597 739.87152100]
[88.53224945 732.86175537]
[75.72218323 725.04858398]
[63.41741180 716.46154785]
[51.66460037 707.13336182]
[40.50833511 697.09936523]
[29.99093246 686.39758301]
[20.15229225 675.06866455]
[11.02973366 663.15551758]
[2.65786290 650.70343018]
[-4.93156290 637.75952148]
[-11.70975399 624.37298584]
[-17.65099716 610.59454346]
[-22.73275757 596.47650146]
[-26.93575478 582.07238770]
[-30.24404907 567.43682861]
[-32.64508820 552.62542725]
[-34.12976456 537.69427490]
[-34.69244766 522.70001221]
[-34.33100128 507.69958496]
[-33.04679871 492.74984741]
[-30.84470940 477.90753174]
[-27.73308754 463.22894287]
[-23.72373581 448.76971436]
[-18.83186340 434.58474731]
[-13.07602692 420.72784424]
[-6.47806168 407.25155640]
[0.93700504 394.20700073]
[9.14104462 381.64367676]
[18.10293770 369.60922241]
[27.78868484 358.14929199]
[38.16154861 347.30734253]
[49.18217850 337.12457275]
[60.80876923 327.63952637]
[72.99722290 318.88821411]
[85.70129395 310.90383911]
[98.87279510 303.71667480]
[112.46176147 297.35403442]
[126.41665649 291.83996582]
[140.68452454 287.19546509]
[130.00659180 276.81127930]
[134.04151917 261.51324463]
[130.28521729 246.99119568]
[126.52892303 232.46913147]
[122.77262115 217.94706726]
[119.01631927 203.42501831]
[108.33838654 193.04084778]
[112.37331390 177.74281311]
[108.61701202 163.22074890]
[104.86071014 148.69868469]
[94.18277740 138.31451416]
[98.21771240 123.01647949]
[94.46141052 108.49442291]
[89.55445862 102.09954834]
[90.75900269 93.72817230]
[80.17020416 86.36338043]
[77.52208710 74.14981079]
[83.70124054 63.75055313]
[80.37898254 49.12309265]
[76.94792175 34.52077103]
[73.40824890 19.94439507]
[62.63292313 8.35979652]
[67.14835358 -5.83387089]
[63.60867691 -20.41024590]
[59.63658142 -34.87477112]
[55.23558426 -49.21461868]
[50.83458710 -63.55446243]
[46.43358994 -77.89431000]
[42.03258896 -92.23416138]
[27.23463631 -89.66048431]
[12.23079872 -88.96183014]
[-2.74228835 -90.14921570]
[-17.44847870 -93.20391846]
[-31.65583611 -98.07775116]
[-45.14028931 -104.69385529]
[-57.68916702 -112.94787598]
[-69.10455322 -122.70964050]
[-79.20642090 -133.82519531]
[-87.83544159 -146.11923218]
[-94.85552216 -159.39785767]
[-100.15594482 -173.45162964]
[-103.65312195 -188.05892944]
[-105.29189301 -202.98934937]
[-105.04640961 -218.00744629]
[-102.92054749 -232.87632751]
[-98.94783020 -247.36152649]
[-93.19091797 -261.23455811]
[-85.74060822 -274.27664185]
[-76.71439362 -286.28210449]
[-66.25463867 -297.06155396]
[-54.52630997 -306.44503784]
[-41.71437073 -314.28451538]
[-28.02088928 -320.45635986]
[-13.66183186 -324.86325073]
[1.13633871 -327.43566895]
[16.14023399 -328.13308716]
[31.11322212 -326.94442749]
[45.81915665 -323.88848877]
[60.02610397 -319.01345825]
[73.50999451 -312.39620972]
[86.05818176 -304.14114380]
[97.47274780 -294.37841797]
[107.57367706 -283.26202393]
[116.20166016 -270.96725464]
[123.22062683 -257.68804932]
[128.51986694 -243.63381958]
[132.01580811 -229.02622986]
[133.65332031 -214.09565735]
[133.40658569 -199.07759094]
[131.27946472 -184.20887756]
[127.30553436 -169.72402954]
[121.54745483 -155.85147095]
[114.09604645 -142.81001282]
[105.06882477 -130.80532837]
[94.60816193 -120.02674103]
[82.87903595 -110.64426422]
[70.06643677 -102.80586243]
[56.37243652 -96.63515472]
[60.77343369 -82.29531097]
[65.17443085 -67.95545959]
[69.57543182 -53.61561584]
[73.97643280 -39.27576828]
[76.38690186 -37.84476471]
[78.37577057 -35.37271881]
[79.54368591 -32.01543045]
[79.55500793 -28.07025909]
[78.18505096 -23.94991875]
[81.72472382 -9.37354279]
[92.24687195 1.16845584]
[87.98462677 16.40472221]
[91.52429962 30.98109818]
[96.15743256 36.73920822]
[95.00643921 45.80083466]
[98.32870483 60.42829514]
[110.92791748 72.64412689]
[105.33538055 90.18849945]
[108.98346710 104.73812103]
[112.73976898 119.26017761]
[123.68637848 130.68305969]
[119.38277435 144.94238281]
[123.13907623 159.46444702]
[126.89537048 173.98651123]
[137.84197998 185.40939331]
[133.53837585 199.66871643]
[137.29467773 214.19078064]
[141.05097961 228.71282959]
[144.80728149 243.23489380]
[148.56358337 257.75695801]
[159.51019287 269.17984009]
[155.20658875 283.43914795]
[169.93701172 280.58291626]
[184.81533813 278.63891602]
[199.78511047 277.61453247]
[214.78956604 277.51364136]
[229.77175903 278.33663940]
[244.67488098 280.08038330]
[259.44238281 282.73828125]
[274.01824951 286.30026245]
[288.34719849 290.75277710]
[302.37487793 296.07894897]
[316.04806519 302.25857544]
[329.31488037 309.26821899]
[342.12503052 317.08129883]
[354.42987061 325.66815186]
[366.18276978 334.99621582]
[377.33914185 345.03012085]
[387.85665894 355.73178101]
[397.69540405 367.06063843]
[406.81808472 378.97366333]
[415.19006348 391.42568970]
[422.77963257 404.36950684]
[429.55795288 417.75601196]
[435.49932861 431.53439331]
[440.58123779 445.65237427]
[444.78436279 460.05645752]
[448.09280396 474.69195557]
[450.49398804 489.50335693]
[451.97882080 504.43450928]
[452.54162598 519.42871094]
[452.18032837 534.42919922]
[450.89627075 549.37890625]
[448.69433594 564.22125244]
[445.58285522 578.89990234]
[441.57363892 593.35913086]
[436.68191528 607.54412842]
[430.92620850 621.40112305]
[424.32839966 634.87750244]
[416.91345215 647.92211914]
[408.70953369 660.48553467]
[399.74777222 672.52008057]
[390.06213379 683.98010254]
[379.68936157 694.82214355]
[368.66882324 705.00500488]
[357.04232788 714.49017334]
[344.85397339 723.24157715]
[332.14999390 731.22607422]
[318.97854614 738.41339111]
[305.38964844 744.77618408]
[291.43481445 750.29034424]
[277.16699219 754.93499756]
[262.64028931 758.69250488]
[247.90983582 761.54864502]
[233.03149414 763.49249268]
[218.06170654 764.51672363]
[203.05725098 764.61743164]
[188.07505798 763.79431152]
[173.17195129 762.05041504]
[158.40447998 759.39233398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 152]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[50 144]
[51 143]
[52 142]
[54 140]
[55 139]
[57 138]
[60 136]
[61 135]
[62 133]
[63 132]
[65 130]
[66 129]
[67 124]
[68 123]
[69 122]
[70 121]
[71 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
