%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[66.44275665 736.74420166]
[51.67933655 739.43743896]
[36.75592804 741.01989746]
[21.75599480 741.48272705]
[6.76341867 740.82324219]
[-8.13795280 739.04522705]
[-22.86478424 736.15856934]
[-37.33471680 732.17950439]
[-51.46682739 727.13018799]
[-65.18208313 721.03887939]
[-78.40377808 713.93963623]
[-91.05797577 705.87219238]
[-103.07390594 696.88165283]
[-114.38437653 687.01831055]
[-124.92611694 676.33734131]
[-134.64018250 664.89837646]
[-143.47225952 652.76550293]
[-151.37294006 640.00653076]
[-158.29803467 626.69281006]
[-164.20883179 612.89880371]
[-169.07226562 598.70166016]
[-172.86114502 584.18072510]
[-175.55427551 569.41729736]
[-177.13658142 554.49389648]
[-177.59924316 539.49395752]
[-176.93965149 524.50140381]
[-175.16149902 509.60003662]
[-172.27473450 494.87322998]
[-168.29550171 480.40332031]
[-163.24606323 466.27127075]
[-157.15463257 452.55606079]
[-150.05529785 439.33441162]
[-141.98774719 426.68029785]
[-132.99711609 414.66442871]
[-123.13367462 403.35406494]
[-112.45257568 392.81240845]
[-101.01356506 383.09844971]
[-88.88060760 374.26647949]
[-76.12155914 366.36590576]
[-62.80777740 359.44091797]
[-49.01371765 353.53024292]
[-34.81652069 348.66693115]
[-20.29558182 344.87820435]
[-5.53211403 342.18521118]
[9.39132023 340.60302734]
[24.39126396 340.14050293]
[39.38382721 340.80023193]
[54.28516769 342.57849121]
[57.17044067 327.85861206]
[60.05571365 313.13870239]
[62.83132553 298.39776611]
[65.49711609 283.63653564]
[68.16291809 268.87530518]
[53.80645752 257.81808472]
[47.01858521 240.92465210]
[49.75872040 222.83981323]
[61.35369873 208.58331299]
[78.66047668 202.15661621]
[80.66448975 187.29109192]
[82.66850281 172.42556763]
[84.67251587 157.56004333]
[86.67652893 142.69450378]
[80.70896912 129.04762268]
[90.22062683 116.40487671]
[81.51935577 104.81893158]
[83.45516968 90.45930481]
[94.91384888 81.59111023]
[95.91810608 66.62476349]
[95.91810608 51.62476349]
[95.91810608 36.62476349]
[95.91810608 21.62476349]
[95.91810608 6.62476301]
[95.91810608 -8.37523651]
[86.34342194 -24.10441017]
[95.70414734 -38.94839096]
[95.48081970 -53.94672775]
[95.25749207 -68.94506836]
[86.11719513 -57.05158234]
[72.03408051 -51.88768387]
[57.37195206 -55.05345535]
[46.67403793 -65.56795502]
[43.25519943 -80.17314148]
[48.17480087 -94.34344482]
[59.90844727 -103.68804169]
[74.82034302 -105.31140900]
[88.28987885 -98.71052551]
[96.14343262 -85.93049622]
[90.10084534 -100.55231476]
[99.29572296 -112.26998138]
[101.07818604 -127.16369629]
[102.86064911 -142.05741882]
[104.64311981 -156.95112610]
[106.42558289 -171.84484863]
[92.07009125 -176.34312439]
[78.78569794 -183.40284729]
[67.02487183 -192.78353882]
[57.18816757 -204.16572571]
[49.61063004 -217.16169739]
[44.55034256 -231.32885742]
[42.17966080 -246.18464661]
[42.57932663 -261.22308350]
[45.73572922 -275.93200684]
[51.54136276 -289.81036377]
[59.79848480 -302.38552856]
[70.22586823 -313.22915649]
[82.46835327 -321.97192383]
[96.10897064 -328.31607056]
[110.68312073 -332.04553223]
[125.69441986 -333.03323364]
[140.63159180 -331.24557495]
[154.98585510 -326.74340820]
[168.26835632 -319.68011475]
[180.02665710 -310.29626465]
[189.86029053 -298.91143799]
[197.43432617 -285.91339111]
[202.49078369 -271.74487305]
[204.85746765 -256.88845825]
[204.45375061 -241.85011292]
[201.29338074 -227.14205933]
[195.48400879 -213.26525879]
[187.22349548 -200.69232178]
[176.79319763 -189.85150146]
[164.54835510 -181.11203003]
[150.90602112 -174.77156067]
[136.33087158 -171.04605103]
[121.31929779 -170.06237793]
[119.53683472 -155.16867065]
[117.75437164 -140.27494812]
[115.97190094 -125.38123322]
[114.18943787 -110.48751068]
[120.35951996 -96.93099213]
[111.03715515 -84.14803314]
[110.25582886 -69.16839600]
[110.47915649 -54.17005539]
[110.70248413 -39.17171860]
[119.16112518 -30.52429390]
[119.46993256 -18.03075981]
[110.91810608 -8.37523651]
[110.91810608 6.62476301]
[110.91810608 21.62476349]
[110.91810608 36.62476349]
[110.91810608 51.62476349]
[110.91810608 66.62476349]
[120.23447418 54.86868668]
[134.39291382 49.91503525]
[149.00627136 53.29875183]
[159.54646301 63.97135925]
[162.74746704 78.62583160]
[157.61743164 92.72132111]
[145.74595642 101.89018250]
[130.81155396 103.29135132]
[117.44178772 96.49066162]
[109.77937317 83.59512329]
[118.48064423 95.18106842]
[116.54483032 109.54069519]
[105.08615112 118.40888977]
[110.91036987 133.11906433]
[101.54206085 144.69851685]
[99.53804779 159.56405640]
[97.53403473 174.42958069]
[95.53002167 189.29510498]
[93.52600861 204.16062927]
[103.90092468 210.22770691]
[111.60020447 219.41131592]
[115.73990631 230.62078857]
[115.85702515 242.53504944]
[111.96118927 253.75834656]
[104.53076172 262.98373413]
[94.45426178 269.14526367]
[82.92413330 271.54110718]
[80.25833893 286.30233765]
[77.59254456 301.06353760]
[79.14700317 310.06472778]
[74.77560425 316.02398682]
[71.89033508 330.74386597]
[69.00505829 345.46377563]
[83.47505951 349.44262695]
[97.60726166 354.49169922]
[111.32262421 360.58276367]
[124.54444885 367.68173218]
[137.19879150 375.74896240]
[149.21487427 384.73925781]
[160.52551270 394.60241699]
[171.06744385 405.28323364]
[180.78172302 416.72198486]
[189.61399841 428.85470581]
[197.51490784 441.61355591]
[204.44024658 454.92715454]
[210.35128784 468.72106934]
[215.21496582 482.91812134]
[219.00410461 497.43896484]
[221.69749451 512.20233154]
[223.28005981 527.12573242]
[223.74298096 542.12567139]
[223.08366394 557.11828613]
[221.30577087 572.01965332]
[218.41926575 586.74652100]
[214.44029236 601.21649170]
[209.39109802 615.34863281]
[203.29991150 629.06396484]
[196.20080566 642.28570557]
[188.13348389 654.93994141]
[179.14306641 666.95599365]
[169.27981567 678.26654053]
[158.59890747 688.80834961]
[147.16006470 698.52252197]
[135.02726746 707.35473633]
[122.26835632 715.25549316]
[108.95469666 722.18072510]
[95.16073608 728.09167480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 176]
[49 175]
[50 174]
[51 172]
[52 171]
[53 170]
[58 162]
[59 161]
[60 160]
[61 159]
[62 158]
[64 156]
[67 153]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[75 135]
[76 134]
[77 133]
[87 132]
[89 130]
[90 129]
[91 128]
[92 127]
[93 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
