%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[95.43240356 208.46408081]
[101.58214569 222.18002319]
[105.51039886 236.68917847]
[107.12043762 251.63421631]
[106.37261200 266.64712524]
[103.28533936 281.35818481]
[97.93463898 295.40512085]
[90.45227814 308.44201660]
[81.02252960 320.14782715]
[69.87759399 330.23431396]
[57.29193115 338.45303345]
[43.57547760 344.60165405]
[29.06600571 348.52871704]
[14.12083244 350.13751221]
[-0.89200854 349.38845825]
[-15.60281181 346.29995728]
[-29.64930916 340.94808960]
[-42.68559647 333.46466064]
[-54.39063644 324.03396606]
[-64.47618866 312.88818359]
[-72.69388580 300.30184937]
[-78.84136200 286.58486938]
[-82.76721954 272.07510376]
[-84.37479401 257.12979126]
[-83.62448883 242.11700439]
[-80.53479004 227.40644836]
[-75.18177032 213.36039734]
[-67.69726562 200.32473755]
[-58.26557922 188.62046814]
[-47.11898041 178.53582764]
[-34.53196335 170.31916809]
[-20.81449318 164.17283630]
[-6.30437565 160.24816895]
[8.64106369 158.64183044]
[23.65377998 159.39337158]
[38.36407471 162.48428345]
[52.40968704 167.83847046]
[59.87742996 154.82951355]
[67.34516907 141.82055664]
[74.81291199 128.81161499]
[82.28065491 115.80265808]
[89.74839783 102.79370117]
[96.32842255 89.31396484]
[101.99121094 75.42394257]
[107.65399170 61.53391647]
[113.31678009 47.64388657]
[118.97956848 33.75386047]
[105.34757233 27.48963547]
[92.00179291 20.63675308]
[78.96762848 13.20825768]
[66.26990509 5.21828938]
[53.93277740 -3.31794190]
[41.97974014 -12.38418674]
[30.43354607 -21.96318817]
[19.31616974 -32.03670883]
[8.64877701 -42.58557892]
[-1.54832673 -53.58971024]
[-11.25573158 -65.02816010]
[-20.45495796 -76.87915802]
[-29.12849426 -89.12014008]
[-37.25983047 -101.72780609]
[-44.83348846 -114.67815399]
[-51.83505249 -127.94654083]
[-58.25119400 -141.50770569]
[-64.06969452 -155.33581543]
[-69.27948761 -169.40457153]
[-73.87064362 -183.68719482]
[-77.83443451 -198.15647888]
[-81.16331482 -212.78489685]
[-83.85093689 -227.54458618]
[-85.89219666 -242.40747070]
[-87.28319550 -257.34524536]
[-88.02130127 -272.32946777]
[-88.10509491 -287.33163452]
[-87.53442383 -302.32315063]
[-86.31037903 -317.27554321]
[-84.43527985 -332.16030884]
[-81.91270447 -346.94909668]
[-78.74745178 -361.61376953]
[-74.94554138 -376.12643433]
[-70.51421356 -390.45944214]
[-65.46191406 -404.58554077]
[-59.79824448 -418.47778320]
[-53.53399658 -432.10977173]
[-46.68109131 -445.45553589]
[-39.25257492 -458.48968506]
[-31.26258278 -471.18740845]
[-22.72632980 -483.52450562]
[-13.66006470 -495.47753906]
[-4.08104372 -507.02371216]
[5.99249792 -518.14105225]
[16.54138374 -528.80847168]
[27.54553604 -539.00555420]
[38.98400497 -548.71289062]
[50.83501434 -557.91210938]
[63.07601166 -566.58563232]
[75.68369293 -574.71691895]
[88.63405609 -582.29058838]
[101.90245056 -589.29211426]
[115.46362305 -595.70825195]
[129.29174805 -601.52673340]
[143.36051941 -606.73651123]
[157.64314270 -611.32763672]
[172.11244202 -615.29138184]
[186.74085999 -618.62023926]
[201.50054932 -621.30786133]
[216.36343384 -623.34906006]
[231.30120850 -624.74005127]
[246.28544617 -625.47814941]
[261.28759766 -625.56188965]
[276.27914429 -624.99121094]
[291.23150635 -623.76715088]
[306.11627197 -621.89196777]
[320.90505981 -619.36938477]
[335.56973267 -616.20410156]
[350.08239746 -612.40216064]
[364.41540527 -607.97082520]
[378.54147339 -602.91851807]
[392.43371582 -597.25482178]
[406.06567383 -590.99053955]
[419.41143799 -584.13763428]
[432.44558716 -576.70904541]
[445.14328003 -568.71905518]
[457.48037720 -560.18280029]
[469.43338013 -551.11651611]
[480.97955322 -541.53747559]
[492.09689331 -531.46386719]
[502.76425171 -520.91497803]
[512.96130371 -509.91082764]
[522.66864014 -498.47232056]
[531.86785889 -486.62130737]
[540.54132080 -474.38031006]
[548.67266846 -461.77261353]
[556.24627686 -448.82223511]
[563.24774170 -435.55380249]
[569.66387939 -421.99264526]
[575.48229980 -408.16448975]
[580.69207764 -394.09570312]
[585.28314209 -379.81307983]
[589.24688721 -365.34378052]
[592.57574463 -350.71536255]
[595.26330566 -335.95565796]
[597.30450439 -321.09277344]
[598.69543457 -306.15499878]
[599.43353271 -291.17077637]
[599.51727295 -276.16860962]
[598.94653320 -261.17706299]
[597.72241211 -246.22470093]
[595.84729004 -231.33995056]
[593.32464600 -216.55116272]
[590.15936279 -201.88648987]
[586.35742188 -187.37384033]
[581.92602539 -173.04083252]
[576.87365723 -158.91477966]
[571.20996094 -145.02253723]
[564.94567871 -131.39057922]
[558.09271240 -118.04483032]
[550.66412354 -105.01071167]
[542.67413330 -92.31302643]
[534.13781738 -79.97594452]
[525.07147217 -68.02295685]
[515.49243164 -56.47681046]
[505.41885376 -45.35948944]
[494.86993408 -34.69215012]
[483.86575317 -24.49510384]
[472.42724609 -14.78775978]
[460.57620239 -5.58859491]
[448.33517456 3.08487773]
[435.72747803 11.21614838]
[422.77706909 18.78973961]
[409.50866699 25.79123306]
[395.94747925 32.20730209]
[382.11932373 38.02573395]
[368.05053711 43.23544693]
[353.76788330 47.82653427]
[339.29858398 51.79024887]
[324.67013550 55.11904907]
[309.91043091 57.80659485]
[295.04754639 59.84777451]
[280.10977173 61.23870087]
[265.12554932 61.97672653]
[250.12338257 62.06044388]
[235.13185120 61.48969650]
[220.17947388 60.26557159]
[205.29473877 58.39039612]
[190.50595093 55.86774063]
[175.84127808 52.70240784]
[161.32864380 48.90042496]
[146.99565125 44.46902466]
[132.86959839 39.41664886]
[127.20681000 53.30667496]
[121.54402161 67.19670105]
[115.88123322 81.08673096]
[110.21845245 94.97675323]
[123.28356171 87.60771179]
[138.26440430 88.36569977]
[150.51898193 97.01585388]
[156.25009155 110.87783051]
[153.68190002 125.65634155]
[143.61016846 136.77210999]
[129.15573120 140.78077698]
[114.79747009 136.44023132]
[104.98443604 125.09544373]
[102.75734711 110.26144409]
[95.28960419 123.27039337]
[87.82186127 136.27934265]
[80.35412598 149.28829956]
[72.88638306 162.29725647]
[65.41864014 175.30621338]
[77.12523651 184.73500061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 209]
[38 208]
[39 207]
[40 206]
[41 205]
[42 204]
[43 194]
[44 193]
[45 192]
[46 191]
[47 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
