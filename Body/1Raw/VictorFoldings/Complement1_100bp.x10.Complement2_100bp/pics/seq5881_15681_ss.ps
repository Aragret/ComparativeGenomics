%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[78.85608673 587.19372559]
[67.67002869 597.28430176]
[54.51881409 604.63232422]
[40.06209183 608.86914062]
[25.02501106 609.78234863]
[10.16182232 607.32604980]
[-3.78194165 601.62347412]
[-16.10686874 592.96069336]
[-26.19474220 581.77221680]
[-33.53956223 568.61920166]
[-37.77291489 554.16143799]
[-38.68245697 539.12414551]
[-36.22256470 524.26153564]
[-30.51662827 510.31918335]
[-21.85085106 497.99636841]
[-10.65990734 487.91119385]
[2.49486971 480.56954956]
[16.95364189 476.33972168]
[31.99116516 475.43380737]
[34.43689346 460.63455200]
[36.88262177 445.83526611]
[39.32834625 431.03601074]
[37.32471085 426.70074463]
[38.02318192 421.06079102]
[42.07352066 415.83523560]
[44.95879364 401.11535645]
[47.84406662 386.39544678]
[39.34727097 374.21597290]
[42.06365585 359.24679565]
[54.89624023 350.41714478]
[57.78151321 335.69726562]
[51.29547501 325.48660278]
[53.57877350 313.19958496]
[63.94359970 305.52279663]
[67.04771423 290.84750366]
[70.15182495 276.17218018]
[57.02188873 283.42510986]
[42.57144165 279.40209961]
[35.07835007 266.40774536]
[38.83499908 251.88577271]
[51.68940735 244.15504456]
[66.27799225 247.64407349]
[74.24357605 260.35324097]
[78.64457703 246.01339722]
[83.04557037 231.67355347]
[87.44657135 217.33370972]
[90.00240326 202.55305481]
[90.67218781 187.56800842]
[91.34197235 172.58297729]
[92.01175690 157.59793091]
[92.68154144 142.61289978]
[93.35132599 127.62785339]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[83.24195099 74.94937134]
[90.20799255 61.78413391]
[89.31517792 46.81072617]
[88.42235565 31.83732033]
[87.52954102 16.86391449]
[86.63672638 1.89050937]
[85.74391174 -13.08289623]
[74.20601654 -23.54782677]
[73.51387787 -38.74570847]
[83.56169128 -49.68083572]
[82.66887665 -64.65424347]
[81.77606201 -79.62764740]
[80.88324738 -94.60105133]
[79.99043274 -109.57445526]
[71.87765503 -96.95768738]
[58.58896255 -89.99991608]
[43.59797668 -90.51988983]
[30.82331085 -98.38169098]
[23.60422897 -111.53025818]
[23.82778358 -126.52859497]
[31.43553734 -139.45616150]
[44.43884277 -146.93373108]
[59.43866348 -147.00668335]
[72.51408386 -139.65594482]
[80.24697876 -126.80384827]
[81.58521271 -141.74403381]
[79.15449524 -147.89245605]
[80.05809021 -153.50320435]
[83.19220734 -157.10687256]
[84.97467041 -172.00057983]
[78.93208313 -186.62240601]
[88.12695312 -198.34007263]
[82.08436584 -212.96188354]
[91.27923584 -224.67955017]
[93.06170654 -239.57327271]
[94.84416962 -254.46697998]
[96.62663269 -269.36071777]
[82.23046112 -273.71057129]
[68.80842590 -280.49435425]
[56.76840591 -289.50598145]
[46.47629547 -300.47152710]
[38.24485016 -313.05783081]
[32.32421875 -326.88232422]
[28.89432144 -341.52496338]
[28.05938911 -356.54077148]
[29.84479332 -371.47338867]
[34.19628143 -385.86907959]
[40.98161316 -399.29034424]
[49.99458694 -411.32934570]
[60.96131516 -421.62020874]
[73.54853058 -429.85021973]
[87.37371826 -435.76928711]
[102.01674652 -439.19754028]
[117.03263092 -440.03076172]
[131.96505737 -438.24365234]
[146.36024475 -433.89053345]
[159.78074646 -427.10369873]
[171.81872559 -418.08935547]
[182.10835266 -407.12145996]
[190.33692932 -394.53329468]
[196.25442505 -380.70745850]
[199.68099976 -366.06402588]
[200.51252747 -351.04803467]
[198.72373962 -336.11581421]
[194.36898804 -321.72113037]
[187.58061218 -308.30139160]
[178.56491089 -296.26443481]
[167.59584045 -285.97607422]
[155.00675964 -277.74890137]
[141.18023682 -271.83297729]
[126.53643036 -268.40805054]
[111.52035522 -267.57824707]
[109.73788452 -252.68452454]
[107.95542145 -237.79080200]
[106.17295837 -222.89707947]
[112.34304047 -209.34056091]
[103.02066803 -196.55760193]
[109.19075012 -183.00108337]
[99.86838531 -170.21812439]
[98.08592224 -155.32440186]
[96.52539825 -140.40579224]
[95.18716431 -125.46561432]
[94.96383667 -110.46726990]
[95.85665131 -95.49386597]
[96.74946594 -80.52046204]
[97.64228058 -65.54705811]
[98.53510284 -50.57365036]
[109.81115723 -40.90999985]
[110.92990112 -25.73755455]
[100.71731567 -13.97571182]
[101.61013031 0.99769348]
[102.50294495 15.97109890]
[103.39576721 30.94450569]
[104.28858185 45.91791153]
[105.18139648 60.89131546]
[113.66252136 73.13549042]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[118.10372925 100.45827484]
[132.90959167 98.05282593]
[145.86163330 105.61885071]
[151.03834534 119.69725800]
[146.07299805 133.85160828]
[133.23568726 141.61070251]
[118.39546967 139.42718506]
[108.33636475 128.29763794]
[107.66658020 143.28268433]
[106.99679565 158.26771545]
[106.32701111 173.25276184]
[105.65722656 188.23779297]
[104.98744202 203.22283936]
[112.68967438 190.35133362]
[124.11136627 180.62791443]
[138.04716492 175.07870483]
[153.02636719 174.28933716]
[167.46821594 178.34310913]
[179.84861755 186.81221008]
[188.86102295 198.80288696]
[193.55435181 213.04974365]
[193.43328857 228.04925537]
[188.51063538 242.21849060]
[179.30586243 254.06214905]
[166.79037476 262.33032227]
[152.28498840 266.15048218]
[137.32046509 265.11944580]
[123.47605133 259.34603882]
[112.21279144 249.43951416]
[104.71931458 236.44537354]
[101.78641510 221.73469543]
[97.38542175 236.07455444]
[92.98442078 250.41439819]
[88.58342743 264.75424194]
[84.82712555 279.27630615]
[81.72301483 293.95159912]
[78.61890411 308.62689209]
[84.73132324 325.99697876]
[72.50140381 338.58255005]
[69.61612701 353.30242920]
[78.16576385 366.32324219]
[75.02999878 381.21020508]
[62.56395721 389.28073120]
[59.67868805 404.00061035]
[56.79341507 418.72052002]
[54.12761688 433.48171997]
[51.68189240 448.28100586]
[49.23616409 463.08026123]
[46.79043579 477.87954712]
[60.73696136 483.57534790]
[73.06608582 492.23214722]
[83.15937805 503.41577148]
[90.51057434 516.56518555]
[94.75093079 531.02087402]
[95.66776276 546.05773926]
[93.21507263 560.92156982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 203]
[20 202]
[21 201]
[22 200]
[25 199]
[26 198]
[27 197]
[30 194]
[31 193]
[34 191]
[35 190]
[36 189]
[43 188]
[44 187]
[45 186]
[46 185]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[53 154]
[55 152]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[80 137]
[81 136]
[84 135]
[85 134]
[87 132]
[89 130]
[90 129]
[91 128]
[92 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
