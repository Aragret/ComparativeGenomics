%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[97.47415924 547.86938477]
[82.96501160 551.79174805]
[68.02714539 553.45324707]
[53.01071930 552.81488037]
[38.26774979 549.89166260]
[24.14382553 544.75207520]
[10.97003651 537.51666260]
[-0.94480771 528.35491943]
[-11.32140541 517.48175049]
[-19.91651344 505.15191650]
[-26.52865219 491.65451050]
[-31.00282097 477.30590820]
[-33.23414230 462.44247437]
[-33.17030716 447.41262817]
[-30.81281281 432.56866455]
[-26.21692467 418.25860596]
[-19.49037361 404.81784058]
[-10.79084301 392.56146240]
[-0.32225987 381.77679443]
[11.66997623 372.71661377]
[24.90475082 365.59335327]
[39.07181931 360.57391357]
[53.83908844 357.77603149]
[68.86038971 357.26525879]
[70.64286041 342.37155151]
[72.42532349 327.47781372]
[74.20779419 312.58410645]
[68.03771210 299.02758789]
[77.36007690 286.24462891]
[79.14253998 271.35092163]
[80.59195709 256.42111206]
[81.70761108 241.46264648]
[82.82325745 226.50419617]
[83.93890381 211.54573059]
[77.16964722 198.27824402]
[85.91192627 185.09176636]
[74.44606018 175.62223816]
[70.71064758 161.04449463]
[76.34123230 146.89706421]
[89.37324524 138.68287659]
[90.48889923 123.72442627]
[91.60454559 108.76597595]
[83.52249146 121.40245056]
[71.81636810 130.78149414]
[57.72153091 135.91331482]
[42.72545242 136.25634766]
[28.41070557 131.77438354]
[16.28795624 122.94042206]
[7.63654757 110.68672180]
[3.36948442 96.30645752]
[3.93707943 81.31719971]
[9.27943325 67.30080414]
[18.83275414 55.73646164]
[31.58885765 47.84457779]
[46.20156097 44.45800400]
[61.12875366 45.93413544]
[74.79512787 52.11719131]
[85.75844574 62.35465622]
[92.86171722 75.56614685]
[95.35531616 90.35762024]
[100.18131256 76.15516663]
[105.00730896 61.95270920]
[109.83331299 47.75025177]
[114.65930939 33.54779816]
[119.48530579 19.34534264]
[124.09931183 5.07260847]
[128.50032043 -9.26723862]
[132.90130615 -23.60708618]
[137.30230713 -37.94693375]
[141.70330811 -52.28678131]
[145.78297424 -66.72133636]
[149.53927612 -81.24339294]
[145.50434875 -96.54142761]
[156.18228149 -106.92559814]
[159.93858337 -121.44766235]
[147.85964966 -130.63325500]
[140.23829651 -143.70834351]
[138.20896912 -158.66479492]
[142.05006409 -173.21929932]
[151.14613342 -185.16192627]
[164.08631897 -192.69168091]
[178.88305664 -194.68804932]
[182.63935852 -209.21009827]
[186.39566040 -223.73216248]
[180.53425598 -235.22158813]
[183.96185303 -247.23970032]
[194.31646729 -253.49339294]
[198.28857422 -267.95791626]
[202.26066589 -282.42242432]
[206.23275757 -296.88696289]
[192.36111450 -302.64721680]
[179.32081604 -310.10064697]
[167.31753540 -319.12976074]
[156.54058838 -329.59210205]
[147.15994263 -341.32269287]
[139.32354736 -354.13650513]
[133.15498352 -367.83148193]
[128.75154114 -382.19158936]
[126.18267822 -396.99038696]
[125.48889923 -411.99444580]
[126.68114471 -426.96716309]
[129.74061584 -441.67236328]
[134.61906433 -455.87811279]
[141.23954773 -469.36041260]
[149.49765015 -481.90661621]
[159.26312256 -493.31884766]
[170.38195801 -503.41708374]
[182.67878723 -512.04211426]
[195.95968628 -519.05786133]
[210.01518250 -524.35375977]
[224.62361145 -527.84619141]
[239.55456543 -529.48010254]
[254.57258606 -529.22973633]
[269.44076538 -527.09906006]
[283.92468262 -523.12164307]
[297.79583740 -517.36022949]
[310.83551025 -509.90567017]
[322.83804321 -500.87557983]
[333.61410522 -490.41232300]
[342.99374390 -478.68093872]
[350.82907104 -465.86645508]
[356.99649048 -452.17095947]
[361.39871216 -437.81048584]
[363.96633911 -423.01147461]
[364.65884399 -408.00735474]
[363.46533203 -393.03475952]
[360.40463257 -378.32980347]
[355.52499390 -364.12445068]
[348.90338135 -350.64270020]
[340.64422607 -338.09719849]
[330.87777710 -326.68579102]
[319.75811768 -316.58847046]
[307.46054077 -307.96450806]
[294.17904663 -300.94982910]
[280.12310791 -295.65515137]
[265.51440430 -292.16397095]
[250.58329773 -290.53131104]
[235.56530762 -290.78292847]
[220.69728088 -292.91485596]
[216.72518921 -278.45034790]
[212.75309753 -263.98580933]
[208.78099060 -249.52128601]
[214.12623596 -232.80616760]
[200.91772461 -219.97586060]
[197.16142273 -205.45379639]
[193.40512085 -190.93174744]
[205.37805176 -182.01109314]
[213.04423523 -169.15126038]
[215.20870972 -154.29595947]
[211.51083374 -139.70442200]
[202.48391724 -127.60778809]
[189.47854614 -119.86804962]
[174.46063232 -117.69136047]
[170.70433044 -103.16929626]
[175.00794983 -88.90998077]
[164.06134033 -77.48709106]
[160.30503845 -62.96503067]
[161.76980591 -59.75772858]
[161.75384521 -55.68160248]
[159.86575317 -51.44033051]
[156.04315186 -47.88578033]
[151.64215088 -33.54593658]
[147.24116516 -19.20608711]
[142.84016418 -4.86624050]
[138.43916321 9.47360706]
[139.84564209 14.03768921]
[138.39993286 19.53377342]
[133.68775940 24.17133904]
[128.86177063 38.37379456]
[124.03576660 52.57625198]
[119.20977020 66.77870941]
[114.38377380 80.98116302]
[109.55776978 95.18361664]
[106.56299591 109.88162231]
[105.44734955 124.84007263]
[104.33170319 139.79852295]
[116.00102997 149.85501099]
[119.47067261 164.68116760]
[113.61411285 178.54351807]
[100.87037659 186.20741272]
[107.55983734 200.54484558]
[98.89736176 212.66139221]
[97.78170776 227.61984253]
[96.66606140 242.57829285]
[95.55041504 257.53674316]
[97.81848907 262.23812866]
[98.03477478 266.87564087]
[96.56718445 270.67843628]
[94.03625488 273.13336182]
[92.25379181 288.02709961]
[98.29637909 302.64892578]
[89.10150909 314.36657715]
[87.31904602 329.26028442]
[85.53657532 344.15402222]
[83.75411224 359.04772949]
[98.23065948 363.08877563]
[111.92063141 369.29238892]
[124.50312805 377.51318359]
[135.68319702 387.55841064]
[145.19874573 399.19262695]
[152.82673645 412.14306641]
[158.38833618 426.10620117]
[161.75318909 440.75466919]
[162.84242249 455.74514771]
[161.63049316 470.72619629]
[158.14579773 485.34664917]
[152.47006226 499.26376343]
[144.73628235 512.15130615]
[135.12579346 523.70721436]
[123.86385345 533.66058350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 195]
[25 194]
[26 193]
[27 192]
[29 190]
[30 189]
[31 185]
[32 184]
[33 183]
[34 182]
[36 180]
[40 176]
[41 175]
[42 174]
[60 173]
[61 172]
[62 171]
[63 170]
[64 169]
[65 168]
[66 165]
[67 164]
[68 163]
[69 162]
[70 161]
[71 157]
[72 156]
[74 154]
[75 153]
[82 146]
[83 145]
[84 144]
[87 142]
[88 141]
[89 140]
[90 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
