%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[151.82987976 301.83584595]
[154.20895386 287.01507568]
[157.92591858 272.47207642]
[162.94996643 258.32730103]
[169.23945618 244.69801331]
[176.74229431 231.69712830]
[185.39627075 219.43240356]
[195.12969971 208.00543213]
[184.64219666 197.28105164]
[170.21186829 193.59124756]
[166.09509277 178.31503296]
[155.60758972 167.59065247]
[145.12010193 156.86627197]
[134.63259888 146.14189148]
[124.14509583 135.41751099]
[113.65759277 124.69313049]
[103.17008972 113.96875000]
[89.75897217 110.01482391]
[86.10552979 96.51875305]
[70.53246307 96.17613983]
[60.04941940 85.15069580]
[60.47202301 70.30626678]
[49.44014359 60.14271927]
[37.89384079 50.56760025]
[26.34753990 40.99248123]
[14.80123901 31.41736221]
[3.25493741 21.84224129]
[-8.29136372 12.26712227]
[-18.59730911 23.17337799]
[-29.58760262 33.38965607]
[-41.21614838 42.87310791]
[-53.43416977 51.58395386]
[-66.19042206 59.48566055]
[-79.43139648 66.54508209]
[-93.10156250 72.73260498]
[-107.14357758 78.02228546]
[-121.49855042 82.39192963]
[-136.10626221 85.82321930]
[-150.90544128 88.30175018]
[-165.83401489 89.81712341]
[-180.82939148 90.36299896]
[-195.82862854 89.93708038]
[-210.76885986 88.54115295]
[-225.58738708 86.18106842]
[-240.22207642 82.86672974]
[-254.61154175 78.61203766]
[-268.69540405 73.43483734]
[-282.41464233 67.35684204]
[-295.71163940 60.40355301]
[-308.53070068 52.60412598]
[-320.81799316 43.99127960]
[-332.52200317 34.60113907]
[-343.59365845 24.47308922]
[-353.98651123 13.64961147]
[-363.65695190 2.17610216]
[-372.56445312 -9.89931297]
[-380.67160034 -22.52598572]
[-387.94442749 -35.65095520]
[-394.35244751 -49.21916962]
[-399.86871338 -63.17371750]
[-404.47015381 -77.45606995]
[-408.13745117 -92.00632477]
[-410.85522461 -106.76345062]
[-412.61206055 -121.66554260]
[-413.40060425 -136.65010071]
[-413.21752930 -151.65428162]
[-412.06362915 -166.61514282]
[-409.94372559 -181.46994019]
[-406.86672974 -196.15635681]
[-402.84552002 -210.61280823]
[-397.89697266 -224.77864075]
[-392.04187012 -238.59445190]
[-385.30471802 -252.00227356]
[-377.71383667 -264.94589233]
[-369.30102539 -277.37100220]
[-360.10156250 -289.22549438]
[-350.15405273 -300.45965576]
[-339.50024414 -311.02633667]
[-328.18475342 -320.88122559]
[-316.25512695 -329.98303223]
[-303.76135254 -338.29351807]
[-290.75582886 -345.77786255]
[-277.29312134 -352.40466309]
[-263.42968750 -358.14611816]
[-249.22367859 -362.97814941]
[-234.73469543 -366.88049316]
[-220.02351379 -369.83676147]
[-205.15180969 -371.83459473]
[-190.18197632 -372.86560059]
[-175.17678833 -372.92544556]
[-160.19920349 -372.01385498]
[-145.31204224 -370.13470459]
[-130.57774353 -367.29583740]
[-116.05809784 -363.50915527]
[-101.81401825 -358.79058838]
[-87.90524292 -353.15988159]
[-74.39011383 -346.64065552]
[-61.32531357 -339.26028442]
[-48.76564789 -331.04971313]
[-36.76379395 -322.04333496]
[-25.37009048 -312.27899170]
[-14.63232994 -301.79760742]
[-4.59554911 -290.64315796]
[4.69815445 -278.86239624]
[13.20979881 -266.50479126]
[20.90368271 -253.62213135]
[27.74753571 -240.26844788]
[33.71265411 -226.49978638]
[38.77401352 -212.37385559]
[42.91038513 -197.94995117]
[46.10442352 -183.28852844]
[48.34273148 -168.45112610]
[49.61591339 -153.49993896]
[49.91863632 -138.49769592]
[49.24962997 -123.50731659]
[47.61169815 -108.59168243]
[45.01171112 -93.81335449]
[41.46057510 -79.23432159]
[36.97318649 -64.91572571]
[31.56836319 -50.91762161]
[25.26877785 -37.29873276]
[18.10085106 -24.11617851]
[10.09465027 -11.42525101]
[1.28375554 0.72082031]
[12.83005714 10.29594040]
[24.37635803 19.87105942]
[35.92266083 29.44618034]
[47.46896362 39.02129745]
[59.01526260 48.59642029]
[57.53405762 33.66973114]
[65.88993073 21.21262741]
[80.26268768 16.92033005]
[94.08129883 22.75521660]
[101.02808380 36.04965973]
[97.92706299 50.72561264]
[86.19598389 60.07343674]
[71.19640350 59.81876755]
[86.04656219 59.72777176]
[96.83515167 70.45442200]
[96.82991028 86.03125000]
[110.24102783 89.98517609]
[113.89447021 103.48124695]
[124.38197327 114.20562744]
[134.86947632 124.93000793]
[145.35697937 135.65438843]
[155.84448242 146.37876892]
[166.33197021 157.10314941]
[176.81947327 167.82752991]
[191.99995422 172.28440857]
[195.36657715 186.79354858]
[205.85408020 197.51792908]
[217.49555969 188.04211426]
[229.95050049 179.66416931]
[243.11569214 172.45355225]
[256.88204956 166.47000122]
[271.13546753 161.76307678]
[285.75787354 158.37181091]
[300.62805176 156.32429504]
[315.62283325 155.63749695]
[330.61795044 156.31710815]
[345.48913574 158.35748291]
[360.11315918 161.74174500]
[374.36883545 166.44181824]
[388.13806152 172.41877747]
[401.30670166 179.62307739]
[413.76565552 187.99504089]
[425.41168213 197.46527100]
[436.14828491 207.95532227]
[445.88644409 219.37823486]
[454.54553223 231.63937378]
[462.05377197 244.63713074]
[468.34893799 258.26379395]
[473.37887573 272.40646362]
[477.10186768 286.94793701]
[479.48712158 301.76773071]
[480.51483154 316.74301147]
[480.17651367 331.74969482]
[478.47494507 346.66345215]
[475.42422485 361.36065674]
[471.04962158 375.71957397]
[465.38745117 389.62118530]
[458.48455811 402.95028687]
[450.39816284 415.59646606]
[441.19528198 427.45489502]
[430.95220947 438.42733765]
[419.75375366 448.42285156]
[407.69277954 457.35861206]
[394.86917114 465.16055298]
[381.38922119 471.76406860]
[367.36462402 477.11441040]
[352.91162109 481.16723633]
[338.14993286 483.88897705]
[323.20190430 485.25708008]
[308.19140625 485.26019287]
[293.24279785 483.89831543]
[278.47998047 481.18270874]
[264.02526855 477.13589478]
[249.99845886 471.79138184]
[236.51576233 465.19348145]
[223.68891907 457.39685059]
[211.62422180 448.46612549]
[200.42161560 438.47528076]
[190.17396545 427.50711060]
[180.96617126 415.65249634]
[172.87452698 403.00967407]
[165.96609497 389.68344116]
[160.29811096 375.78417969]
[155.91755676 361.42709351]
[152.86073303 346.73114014]
[151.15295410 331.81811523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 151]
[9 150]
[11 148]
[12 147]
[13 146]
[14 145]
[15 144]
[16 143]
[17 142]
[19 140]
[22 137]
[23 129]
[24 128]
[25 127]
[26 126]
[27 125]
[28 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
