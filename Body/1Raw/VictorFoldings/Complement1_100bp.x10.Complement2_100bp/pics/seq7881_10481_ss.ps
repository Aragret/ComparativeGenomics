%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[84.69686890 565.53503418]
[71.22545624 572.15893555]
[57.17762375 577.45178223]
[42.68453979 581.36407471]
[27.88151932 583.85931396]
[12.90678120 584.91412354]
[-2.09985781 584.51879883]
[-16.99828148 582.67694092]
[-31.64938164 579.40570068]
[-45.91636276 574.73571777]
[-59.66601944 568.71057129]
[-72.76996613 561.38647461]
[-85.10585022 552.83190918]
[-96.55849457 543.12658691]
[-107.02096558 532.36126709]
[-116.39558411 520.63641357]
[-124.59481049 508.06152344]
[-131.54208374 494.75396729]
[-137.17254639 480.83804321]
[-141.43363953 466.44363403]
[-144.28553772 451.70516968]
[-145.70166016 436.76028442]
[-145.66874695 421.74847412]
[-144.18713379 406.80990601]
[-141.27064514 392.08410645]
[-136.94650269 377.70852661]
[-131.25508118 363.81741333]
[-124.24952698 350.54043579]
[-115.99525452 338.00158691]
[-106.56932831 326.31796265]
[-96.05976105 315.59860229]
[-84.56468201 305.94363403]
[-72.19141388 297.44317627]
[-59.05548477 290.17660522]
[-45.27954865 284.21179199]
[-30.99223137 279.60440063]
[-16.32693100 276.39746094]
[-1.42057633 274.62091064]
[13.58765125 274.29135132]
[28.55762100 275.41183472]
[43.34955978 277.97192383]
[47.32165527 263.50741577]
[43.23082733 249.18559265]
[54.34629440 237.92695618]
[58.31838989 223.46243286]
[54.22756195 209.14060974]
[65.34302521 197.88197327]
[69.31512451 183.41744995]
[73.28721619 168.95292664]
[60.31500244 162.39533997]
[48.87616730 153.42687988]
[39.41269684 142.39407349]
[32.29025269 129.72319031]
[27.78403473 115.90385437]
[26.06815720 101.47000122]
[27.20892143 86.97935486]
[31.16225052 72.99180603]
[37.77539062 60.04782486]
[46.79281616 48.64755249]
[57.86610794 39.23147583]
[70.56740570 32.16342545]
[84.40594482 27.71650505]
[98.84702301 26.06253433]
[113.33264160 27.26542282]
[109.75498199 11.85403252]
[120.73735809 1.79238689]
[124.92436981 -12.61139488]
[129.11137390 -27.01517677]
[133.29838562 -41.41896057]
[137.48539734 -55.82274246]
[141.67240906 -70.22652435]
[145.85942078 -84.63030243]
[132.22640991 -78.37403107]
[118.11520386 -83.46066284]
[111.60934448 -96.97634888]
[116.43568420 -111.17868805]
[129.82946777 -117.93193817]
[144.11814880 -113.36753082]
[151.11640930 -100.10110474]
[148.92794800 -115.77022552]
[160.76419067 -124.81195068]
[166.21954346 -138.78474426]
[171.67489624 -152.75753784]
[177.13024902 -166.73034668]
[182.58561707 -180.70314026]
[188.04096985 -194.67593384]
[193.49632263 -208.64872742]
[198.95169067 -222.62153625]
[204.40704346 -236.59432983]
[209.86239624 -250.56712341]
[215.31774902 -264.53991699]
[202.04281616 -271.55944824]
[189.65458679 -280.04647827]
[178.31457520 -289.89035034]
[168.17063904 -300.96276855]
[159.35499573 -313.11932373]
[151.98258972 -326.20159912]
[146.14953613 -340.03897095]
[141.93188477 -354.45108032]
[139.38461304 -369.25006104]
[138.54093933 -384.24291992]
[139.41186523 -399.23422241]
[141.98600769 -414.02853394]
[146.22984314 -428.43295288]
[152.08802795 -442.25973511]
[159.48417664 -455.32858276]
[168.32189941 -467.46911621]
[178.48594666 -478.52307129]
[189.84381104 -488.34631348]
[202.24743652 -496.81082153]
[215.53511047 -503.80621338]
[229.53359985 -509.24130249]
[244.06040955 -513.04522705]
[258.92614746 -515.16833496]
[273.93698120 -515.58306885]
[288.89727783 -514.28393555]
[303.61193848 -511.28790283]
[317.88916016 -506.63400269]
[331.54281616 -500.38293457]
[344.39486694 -492.61618042]
[356.27777100 -483.43499756]
[367.03665161 -472.95910645]
[376.53118896 -461.32504272]
[384.63763428 -448.68450928]
[391.25030518 -435.20227051]
[396.28295898 -421.05410767]
[399.67004395 -406.42449951]
[401.36734009 -391.50415039]
[401.35275269 -376.48757935]
[399.62643433 -361.57055664]
[396.21096802 -346.94754028]
[391.15081787 -332.80920410]
[384.51196289 -319.33984375]
[376.38098145 -306.71508789]
[366.86383057 -295.09948730]
[356.08465576 -284.64453125]
[344.18389893 -275.48645020]
[331.31677246 -267.74468994]
[317.65103149 -261.52017212]
[303.36477661 -256.89401245]
[288.64431763 -253.92657471]
[273.68154907 -252.65652466]
[258.67150879 -253.10040283]
[243.80993652 -255.25244141]
[229.29055786 -259.08456421]
[223.83518982 -245.11177063]
[218.37983704 -231.13897705]
[212.92448425 -217.16616821]
[207.46913147 -203.19337463]
[202.01376343 -189.22058105]
[196.55841064 -175.24778748]
[191.10305786 -161.27497864]
[185.64768982 -147.30218506]
[180.19233704 -133.32939148]
[174.73698425 -119.35659027]
[177.31564331 -104.68690491]
[165.08920288 -94.64575195]
[160.26321411 -80.44329071]
[156.07620239 -66.03951263]
[151.88919067 -51.63573074]
[147.70217896 -37.23194885]
[143.51516724 -22.82816505]
[139.32815552 -8.42438412]
[135.14114380 5.97939825]
[139.01828003 20.36053276]
[127.73642731 31.45243263]
[141.34429932 38.69153595]
[153.15582275 48.59439087]
[162.65782166 60.73072815]
[169.43743896 74.57324982]
[173.20013428 89.52052307]
[173.78239441 104.92311096]
[171.15893555 120.11179352]
[165.44374084 134.42665100]
[156.88513184 147.24574280]
[145.85496521 158.01206970]
[132.83247375 166.25788879]
[118.38346100 171.62490845]
[103.13572693 173.87994385]
[87.75174713 172.92501831]
[83.77964783 187.38954163]
[79.80754852 201.85406494]
[83.61426544 217.21047974]
[72.78291321 227.43452454]
[68.81082153 241.89904785]
[72.61753845 257.25546265]
[61.78617859 267.47949219]
[57.81408310 281.94403076]
[71.83898163 287.29730225]
[85.28173828 293.97921753]
[98.01683044 301.92736816]
[109.92534637 311.06753540]
[120.89611053 321.31439209]
[130.82667542 332.57223511]
[139.62434387 344.73599243]
[147.20693970 357.69204712]
[153.50367737 371.31945801]
[158.45578003 385.49099731]
[162.01699829 400.07431030]
[164.15406799 414.93328857]
[164.84704590 429.92910767]
[164.08947754 444.92184448]
[161.88841248 459.77145386]
[158.26441956 474.33929443]
[153.25132751 488.48934937]
[146.89593506 502.08953857]
[139.25759888 515.01281738]
[130.40762329 527.13854980]
[120.42865753 538.35351562]
[109.41385651 548.55303955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 188]
[42 187]
[44 185]
[45 184]
[47 182]
[48 181]
[49 180]
[64 166]
[66 164]
[67 163]
[68 162]
[69 161]
[70 160]
[71 159]
[72 158]
[79 157]
[81 155]
[82 154]
[83 153]
[84 152]
[85 151]
[86 150]
[87 149]
[88 148]
[89 147]
[90 146]
[91 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
