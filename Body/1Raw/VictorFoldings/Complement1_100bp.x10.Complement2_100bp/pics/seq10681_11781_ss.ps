%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[122.39577484 316.34072876]
[121.05754089 301.40054321]
[119.71930695 286.46035767]
[118.38107300 271.52017212]
[117.04283905 256.57998657]
[108.20092010 244.59375000]
[114.67617798 230.15832520]
[113.33794403 215.21813965]
[111.99971008 200.27795410]
[110.66147614 185.33776855]
[108.32598877 170.52070618]
[105.00373077 155.89324951]
[101.68147278 141.26577759]
[98.35920715 126.63832092]
[95.03694916 112.01086426]
[91.28064728 97.48880005]
[87.09364319 83.08502197]
[82.90663147 68.68123627]
[78.71961975 54.27745819]
[74.53260803 39.87367630]
[70.34559631 25.46989250]
[65.83796692 11.16320705]
[61.01196671 -3.03924894]
[56.18597031 -17.24170494]
[51.35997391 -31.44416046]
[46.42837906 -45.61029434]
[41.39146423 -59.73932648]
[36.35454559 -73.86835480]
[31.31763077 -87.99738312]
[16.96060371 -83.64276886]
[2.41130519 -79.98150635]
[-12.29679966 -77.02201843]
[-27.12988281 -74.77111816]
[-42.05382538 -73.23397827]
[-57.03430557 -72.41413116]
[-72.03686523 -72.31346130]
[-87.02700043 -72.93220520]
[-101.97022247 -74.26894379]
[-116.83217621 -76.32058716]
[-131.57867432 -79.08243561]
[-146.17579651 -82.54812622]
[-160.58996582 -86.70968628]
[-174.78802490 -91.55754852]
[-188.73733521 -97.08055878]
[-202.40580750 -103.26601410]
[-215.76199341 -110.09969330]
[-228.77517700 -117.56587982]
[-241.41543579 -125.64739227]
[-253.65368652 -134.32563782]
[-265.46179199 -143.58067322]
[-276.81259155 -153.39120483]
[-287.67996216 -163.73466492]
[-298.03890991 -174.58728027]
[-307.86563110 -185.92405701]
[-317.13748169 -197.71893311]
[-325.83319092 -209.94479370]
[-333.93273926 -222.57351685]
[-341.41748047 -235.57603455]
[-348.27020264 -248.92245483]
[-354.47515869 -262.58209229]
[-360.01806641 -276.52349854]
[-364.88616943 -290.71463013]
[-369.06829834 -305.12286377]
[-372.55480957 -319.71502686]
[-375.33767700 -334.45755005]
[-377.41052246 -349.31655884]
[-378.76858521 -364.25787354]
[-379.40872192 -379.24710083]
[-379.32943726 -394.24978638]
[-378.53097534 -409.23144531]
[-377.01513672 -424.15756226]
[-374.78540039 -438.99383545]
[-371.84689331 -453.70614624]
[-368.20639038 -468.26065063]
[-363.87225342 -482.62387085]
[-358.85446167 -496.76278687]
[-353.16455078 -510.64486694]
[-346.81561279 -524.23815918]
[-339.82226562 -537.51141357]
[-332.20056152 -550.43414307]
[-323.96801758 -562.97656250]
[-315.14361572 -575.10986328]
[-305.74765015 -586.80609131]
[-295.80169678 -598.03845215]
[-285.32864380 -608.78094482]
[-274.35256958 -619.00903320]
[-262.89877319 -628.69909668]
[-250.99353027 -637.82885742]
[-238.66427612 -646.37725830]
[-225.93933105 -654.32476807]
[-212.84797668 -661.65307617]
[-199.42033386 -668.34521484]
[-185.68727112 -674.38592529]
[-171.68037415 -679.76123047]
[-157.43188477 -684.45880127]
[-142.97453308 -688.46783447]
[-128.34161377 -691.77905273]
[-113.56675720 -694.38494873]
[-98.68395996 -696.27941895]
[-83.72743988 -697.45819092]
[-68.73160553 -697.91851807]
[-53.73094940 -697.65936279]
[-38.75997162 -696.68127441]
[-23.85310173 -694.98651123]
[-9.04463005 -692.57897949]
[5.63138294 -689.46429443]
[20.14118385 -685.64947510]
[34.45139694 -681.14343262]
[48.52910995 -675.95642090]
[62.34194183 -670.10040283]
[75.85812378 -663.58892822]
[89.04657745 -656.43688965]
[101.87694550 -648.66076660]
[114.31974030 -640.27838135]
[126.34633636 -631.30908203]
[137.92906189 -621.77355957]
[149.04129028 -611.69360352]
[159.65745544 -601.09246826]
[169.75314331 -589.99450684]
[179.30513000 -578.42529297]
[188.29144287 -566.41143799]
[196.69142151 -553.98052979]
[204.48574829 -541.16119385]
[211.65647888 -527.98291016]
[218.18713379 -514.47595215]
[224.06269836 -500.67144775]
[229.26963806 -486.60110474]
[233.79598999 -472.29730225]
[237.63133240 -457.79290771]
[240.76686096 -443.12133789]
[243.19535828 -428.31628418]
[244.91123962 -413.41183472]
[245.91053772 -398.44226074]
[246.19099426 -383.44198608]
[245.75192261 -368.44552612]
[244.59436035 -353.48733521]
[242.72096252 -338.60186768]
[240.13603210 -323.82333374]
[236.84550476 -309.18572998]
[232.85697937 -294.72271729]
[228.17961121 -280.46759033]
[222.82415771 -266.45309448]
[216.80294800 -252.71148682]
[210.12980652 -239.27435303]
[202.82011414 -226.17263794]
[194.89065552 -213.43644714]
[186.35968018 -201.09507751]
[177.24681091 -189.17691040]
[167.57301331 -177.70936584]
[157.36051941 -166.71882629]
[146.63284302 -156.23056030]
[135.41462708 -146.26870728]
[123.73170471 -136.85615540]
[111.61093140 -128.01455688]
[99.08018494 -119.76426697]
[86.16828918 -112.12425232]
[72.90494537 -105.11207581]
[59.32065201 -98.74387360]
[45.44665909 -93.03430176]
[50.48357773 -78.90527344]
[55.52049255 -64.77623749]
[60.55740738 -50.64721298]
[65.76445007 -45.40235519]
[65.56243134 -36.27015686]
[70.38842773 -22.06770325]
[75.21442413 -7.86524677]
[80.04042053 6.33720875]
[83.02458954 8.21526337]
[85.24736023 11.63203430]
[85.99544525 16.21391869]
[84.74937439 21.28288269]
[88.93638611 35.68666458]
[93.12339783 50.09044647]
[97.31040955 64.49422455]
[101.49742126 78.89801025]
[105.68443298 93.30179596]
[108.22148895 94.99082947]
[110.20005035 97.64032745]
[111.26319122 101.04520416]
[111.13474274 104.87139130]
[109.66441345 108.68860626]
[112.98667145 123.31606293]
[116.30892944 137.94352722]
[119.63118744 152.57098389]
[122.95345306 167.19844055]
[129.43464661 153.67091370]
[142.14428711 145.70442200]
[157.14416504 145.76748657]
[169.78637695 153.84054565]
[176.15362549 167.42208862]
[174.27291870 182.30371094]
[164.72705078 193.87420654]
[150.47387695 198.54830933]
[135.92991638 194.87770081]
[125.60166168 183.99954224]
[126.93989563 198.93972778]
[128.27813721 213.87991333]
[129.61636353 228.82009888]
[138.55400085 241.87493896]
[131.98303223 255.24176025]
[133.32125854 270.18194580]
[134.65950012 285.12213135]
[135.99772644 300.06231689]
[137.33596802 315.00250244]
[150.26664734 323.79632568]
[154.46981812 338.85842896]
[147.96083069 353.07699585]
[133.81304932 359.73840332]
[118.70663452 355.69735718]
[109.77435303 342.86193848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[2 203]
[3 202]
[4 201]
[5 200]
[7 198]
[8 197]
[9 196]
[10 195]
[11 185]
[12 184]
[13 183]
[14 182]
[15 181]
[16 176]
[17 175]
[18 174]
[19 173]
[20 172]
[21 171]
[22 167]
[23 166]
[24 165]
[25 164]
[26 162]
[27 161]
[28 160]
[29 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
