%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[50.53555679 382.90591431]
[42.54700851 395.60748291]
[33.78425980 407.78784180]
[24.28121376 419.39984131]
[14.07463264 430.39855957]
[3.20400596 440.74148560]
[-8.28861046 450.38858032]
[-20.35875320 459.30252075]
[-32.95972443 467.44879150]
[-46.04277420 474.79592896]
[-59.55728531 481.31549072]
[-73.45097351 486.98220825]
[-87.67008209 491.77423096]
[-102.15960693 495.67297363]
[-116.86348724 498.66336060]
[-131.72483826 500.73382568]
[-146.68615723 501.87634277]
[-161.68957520 502.08654785]
[-176.67703247 501.36355591]
[-191.59054565 499.71020508]
[-206.37242126 497.13287354]
[-220.96546936 493.64154053]
[-235.31323242 489.24972534]
[-249.36021423 483.97439575]
[-263.05203247 477.83596802]
[-276.33575439 470.85821533]
[-289.16000366 463.06808472]
[-301.47509766 454.49575806]
[-313.23342896 445.17440796]
[-324.38952637 435.14004517]
[-334.90020752 424.43151855]
[-344.72479248 413.09027100]
[-353.82528687 401.16018677]
[-362.16650391 388.68737793]
[-369.71615601 375.72015381]
[-376.44500732 362.30862427]
[-382.32708740 348.50469971]
[-387.33956909 334.36181641]
[-391.46310425 319.93466187]
[-394.68173218 305.27905273]
[-396.98300171 290.45169067]
[-398.35797119 275.50991821]
[-398.80139160 260.51159668]
[-398.31149292 245.51470947]
[-396.89019775 230.57730103]
[-394.54299927 215.75714111]
[-391.27896118 201.11157227]
[-387.11074829 186.69726562]
[-382.05444336 172.56997681]
[-376.12960815 158.78436279]
[-369.35922241 145.39375305]
[-361.76940918 132.44998169]
[-353.38958740 120.00308990]
[-344.25216675 108.10124969]
[-334.39245605 96.79051208]
[-323.84863281 86.11462402]
[-312.66149902 76.11489868]
[-300.87432861 66.83001709]
[-288.53271484 58.29590225]
[-275.68441772 50.54557419]
[-262.37911987 43.60901260]
[-248.66833496 37.51305771]
[-234.60508728 32.28129578]
[-220.24377441 27.93395996]
[-205.63996887 24.48787689]
[-190.85017395 21.95637512]
[-175.93161011 20.34925079]
[-160.94198608 19.67271805]
[-145.93930054 19.92939758]
[-130.98158264 21.11829567]
[-116.12673187 23.23481178]
[-101.43218994 26.27075768]
[-86.95481873 30.21438789]
[-72.75062561 35.05044556]
[-58.87456512 40.76021957]
[-45.38032532 47.32162476]
[-32.32011032 54.70926666]
[-19.74444771 62.89457321]
[-7.70199060 71.84587097]
[3.76067066 81.52853394]
[14.59918880 91.90509796]
[24.77163124 102.93540955]
[34.23864365 114.57681274]
[42.96360016 126.78425598]
[55.68563461 118.83757019]
[68.40766907 110.89088440]
[81.12970734 102.94420624]
[84.49365234 88.85058594]
[96.78273773 81.17433929]
[110.92360687 84.33376312]
[123.64564514 76.38707733]
[136.36767578 68.44039154]
[149.03021240 60.39921951]
[161.63252258 52.26400375]
[174.23483276 44.12878799]
[186.83714294 35.99357224]
[199.43945312 27.85835648]
[212.04176331 19.72314072]
[204.87925720 6.53542566]
[198.73463440 -7.15621376]
[193.64309692 -21.27335358]
[189.63380432 -35.73513031]
[186.72973633 -50.45870972]
[184.94750977 -65.35974884]
[184.29734802 -80.35290527]
[184.78295898 -95.35228729]
[186.40158081 -110.27198792]
[189.14392090 -125.02655029]
[192.99429321 -139.53144836]
[197.93061829 -153.70359802]
[203.92465210 -167.46183777]
[210.94203186 -180.72734070]
[218.94258118 -193.42414856]
[227.88044739 -205.47950745]
[237.70446777 -216.82437134]
[248.35835266 -227.39376831]
[259.78109741 -237.12715149]
[271.90722656 -245.96876526]
[284.66732788 -253.86796570]
[297.98828125 -260.77951050]
[311.79379272 -266.66378784]
[326.00482178 -271.48712158]
[340.53991699 -275.22189331]
[355.31582642 -277.84667969]
[370.24795532 -279.34646606]
[385.25073242 -279.71261597]
[400.23822021 -278.94311523]
[415.12460327 -277.04229736]
[429.82458496 -274.02108765]
[444.25399780 -269.89678955]
[458.33013916 -264.69302368]
[471.97241211 -258.43957520]
[485.10269165 -251.17228699]
[497.64575195 -242.93278503]
[509.52972412 -233.76826477]
[520.68652344 -223.73121643]
[531.05230713 -212.87911987]
[540.56768799 -201.27415466]
[549.17816162 -188.98278809]
[556.83435059 -176.07542419]
[563.49243164 -162.62599182]
[569.11425781 -148.71153259]
[573.66766357 -134.41174316]
[577.12658691 -119.80854797]
[579.47113037 -104.98557281]
[580.68792725 -90.02774048]
[580.76995850 -75.02072144]
[579.71685791 -60.05047607]
[577.53454590 -45.20275116]
[574.23553467 -30.56259918]
[569.83874512 -16.21387482]
[564.36944580 -2.23876977]
[557.85882568 11.28266907]
[550.34423828 24.27298927]
[541.86871338 36.65778351]
[532.48083496 48.36611176]
[522.23431396 59.33091354]
[511.18792725 69.48937225]
[499.40490723 78.78330994]
[486.95269775 87.15949249]
[473.90267944 94.56993103]
[460.32962036 100.97218323]
[446.31121826 106.32958221]
[431.92776489 110.61143494]
[417.26171875 113.79322052]
[402.39700317 115.85670471]
[387.41882324 116.79007721]
[372.41293335 116.58798981]
[357.46530151 115.25159454]
[342.66156006 112.78855133]
[328.08648682 109.21296692]
[313.82357788 104.54532623]
[299.95452881 98.81235504]
[286.55880737 92.04690552]
[273.71307373 84.28771973]
[261.49096680 75.57924652]
[249.96249390 65.97135925]
[239.19364929 55.51910782]
[229.24615479 44.28234863]
[220.17698669 32.32545090]
[207.57466125 40.46066666]
[194.97235107 48.59588242]
[182.37004089 56.73109818]
[169.76773071 64.86631775]
[157.16542053 73.00153351]
[153.25065613 79.27021790]
[144.31436157 81.16242981]
[131.59233093 89.10911560]
[118.87029266 97.05579376]
[115.50634766 111.14941406]
[103.21726227 118.82566071]
[89.07639313 115.66623688]
[76.35435486 123.61292267]
[63.63232040 131.55960083]
[50.91028214 139.50628662]
[58.05312729 152.70198059]
[64.36177826 166.31622314]
[69.81183624 180.29632568]
[74.38220215 194.58822632]
[78.05520630 209.13661194]
[80.81663513 223.88520813]
[82.65580750 238.77694702]
[83.56559753 253.75422668]
[83.54249573 268.75909424]
[82.58659363 283.73348999]
[80.70157623 298.61950684]
[77.89475250 313.35952759]
[74.17696381 327.89651489]
[69.56261444 342.17428589]
[64.06954193 356.13754272]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[84 195]
[85 194]
[86 193]
[87 192]
[90 189]
[91 188]
[92 187]
[93 185]
[94 184]
[95 183]
[96 182]
[97 181]
[98 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
