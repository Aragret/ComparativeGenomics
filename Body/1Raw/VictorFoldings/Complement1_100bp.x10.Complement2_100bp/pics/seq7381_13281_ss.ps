%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[92.69844055 604.34112549]
[82.00446320 615.23156738]
[67.64142609 620.39550781]
[52.46113205 618.80761719]
[39.47763443 610.78314209]
[31.26881790 597.91546631]
[29.46454430 582.75933838]
[34.42305756 568.32409668]
[45.15983963 557.47589111]
[59.54309845 552.36859131]
[61.10362244 537.44995117]
[62.66414261 522.53137207]
[64.22467041 507.61276245]
[65.78518677 492.69415283]
[67.34571075 477.77554321]
[56.38165283 471.49801636]
[48.57744980 461.50323486]
[45.12033463 449.25430298]
[46.55788422 436.56130981]
[52.71165848 425.31381226]
[62.69846725 417.19970703]
[75.05698395 413.45181274]
[77.06099701 398.58627319]
[79.06501007 383.72073364]
[81.06902313 368.85522461]
[75.10146332 355.20834351]
[84.61311340 342.56558228]
[77.53082275 332.75906372]
[79.07874298 320.35794067]
[88.96826172 312.07785034]
[91.19337463 297.24380493]
[93.41849518 282.40975952]
[95.64360809 267.57571411]
[97.86872864 252.74166870]
[98.65004730 237.76202393]
[97.98026276 222.77699280]
[97.31047821 207.79194641]
[96.64069366 192.80691528]
[95.97090912 177.82186890]
[95.30112457 162.83683777]
[94.63134003 147.85179138]
[93.96155548 132.86676025]
[93.29177094 117.88172150]
[82.66996765 108.02659607]
[82.02297211 93.55152130]
[91.72319031 82.78806305]
[91.05340576 67.80302429]
[90.38362122 52.81798935]
[89.71383667 37.83295059]
[88.82102203 22.85954285]
[87.70536804 7.90108967]
[86.58972168 -7.05736399]
[85.47407532 -22.01581764]
[79.57397461 -8.22491932]
[69.91693115 3.25295091]
[57.33837509 11.42484283]
[42.92646790 15.58380604]
[27.92799187 15.37004948]
[13.64046097 10.80206394]
[1.29989254 2.27502632]
[-8.02613258 -9.47338867]
[-13.53081894 -23.42682648]
[-14.73795605 -38.37817383]
[-11.54311562 -53.03399277]
[-4.22268248 -66.12640381]
[6.59005260 -76.52278900]
[19.95968056 -83.32374573]
[34.72959137 -85.94094086]
[49.62204742 -84.14794159]
[63.34869385 -78.09986877]
[74.72204590 -68.31994629]
[82.75818634 -55.65422821]
[86.76148224 -41.20191956]
[89.86559296 -55.87722397]
[92.42142487 -70.65787506]
[94.42543793 -85.52340698]
[96.42945862 -100.38893127]
[98.43347168 -115.25446320]
[100.43748474 -130.11999512]
[102.44149780 -144.98551941]
[92.95207214 -133.36868286]
[79.59493256 -126.54322815]
[64.62099457 -125.65935516]
[50.55363083 -130.86601257]
[39.76343918 -141.28578186]
[34.06875229 -155.16276550]
[34.42922974 -170.15843201]
[40.78412247 -183.74575806]
[52.06251907 -193.63504028]
[66.36381531 -198.15974426]
[81.27798462 -196.55740356]
[94.29173279 -189.09802246]
[103.21201324 -177.03863525]
[106.53562927 -162.40982056]
[111.36162567 -176.61227417]
[116.18762207 -190.81472778]
[120.90776062 -205.05271912]
[125.52176666 -219.32545471]
[130.13577271 -233.59819031]
[116.87825012 -240.70295715]
[105.10251617 -250.06094360]
[95.18711090 -261.37130737]
[87.45078278 -274.27050781]
[82.14221954 -288.34384155]
[79.43206024 -303.13894653]
[79.40744019 -318.18017578]
[82.06913757 -332.98406982]
[87.33159637 -347.07473755]
[95.02565002 -359.99917603]
[104.90396881 -371.34194946]
[116.64900208 -380.73843384]
[129.88319397 -387.88656616]
[144.18112183 -392.55657959]
[159.08317566 -394.59832764]
[174.11029053 -393.94619751]
[188.77943420 -390.62115479]
[202.61904907 -384.73004150]
[215.18423462 -376.46231079]
[226.07109070 -366.08364868]
[234.92964172 -353.92776489]
[241.47511292 -340.38534546]
[245.49710083 -325.89178467]
[246.86631775 -310.91296387]
[245.53874207 -295.93038940]
[241.55706787 -281.42572021]
[235.04927063 -267.86517334]
[226.22456360 -255.68467712]
[215.36660767 -245.27580261]
[202.82444763 -236.97314453]
[189.00128174 -231.04360962]
[174.34143066 -227.67778015]
[159.31617737 -226.98387146]
[144.40850830 -228.98417664]
[139.79449463 -214.71144104]
[135.18049622 -200.43872070]
[136.11410522 -193.10726929]
[130.39007568 -185.98873901]
[125.56407928 -171.78628540]
[120.73808289 -157.58383179]
[117.30702209 -142.98150635]
[115.30300903 -128.11598206]
[113.29899597 -113.25045013]
[111.29498291 -98.38491821]
[109.29096985 -83.51939392]
[107.28695679 -68.65386200]
[120.61624908 -75.53353882]
[134.36740112 -69.54139709]
[138.40357971 -55.09462357]
[129.74946594 -42.84283829]
[114.78453827 -41.81760788]
[104.54090118 -52.77311325]
[101.43679047 -38.09780884]
[100.43252563 -23.13146591]
[101.54817963 -8.17301273]
[102.66382599 6.78544092]
[103.77947235 21.74389458]
[106.74954987 25.48390388]
[107.40171051 31.12940788]
[104.69887543 37.16316223]
[105.36865997 52.14820099]
[106.03844452 67.13323975]
[106.70822906 82.11827850]
[117.33003235 91.97340393]
[117.97702789 106.44847870]
[108.27680969 117.21193695]
[108.94659424 132.19697571]
[109.61637878 147.18200684]
[110.28616333 162.16705322]
[110.95594788 177.15208435]
[111.62573242 192.13713074]
[112.29551697 207.12216187]
[112.96530151 222.10720825]
[113.63508606 237.09223938]
[120.90891266 223.97387695]
[132.84040833 214.88325500]
[147.41889954 211.35227966]
[162.18763733 213.97601318]
[174.65786743 222.31228638]
[182.72811890 234.95629883]
[185.03840637 249.77732849]
[181.19940186 264.27774048]
[171.85806274 276.01397705]
[158.58856201 283.00827026]
[143.62704468 284.08200073]
[129.49478149 279.05413818]
[118.57331085 268.77206421]
[112.70277405 254.96678162]
[110.47765350 269.80084229]
[108.25254059 284.63485718]
[106.02742004 299.46890259]
[103.80230713 314.30294800]
[110.93777466 331.27844238]
[99.47863770 344.56961060]
[105.30286407 359.27975464]
[95.93454742 370.85922241]
[93.93053436 385.72476196]
[91.92652130 400.59030151]
[89.92250824 415.45581055]
[104.07921600 425.86834717]
[110.97710419 441.93475342]
[108.79878998 459.19335938]
[98.23386383 472.90084839]
[82.26432037 479.33605957]
[80.70379639 494.25466919]
[79.14327240 509.17327881]
[77.58274841 524.09185791]
[76.02222443 539.01049805]
[74.46170044 553.92907715]
[87.47669983 561.90234375]
[95.73612976 574.73760986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 208]
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[22 198]
[23 197]
[24 196]
[25 195]
[27 193]
[30 191]
[31 190]
[32 189]
[33 188]
[34 187]
[35 173]
[36 172]
[37 171]
[38 170]
[39 169]
[40 168]
[41 167]
[42 166]
[43 165]
[46 162]
[47 161]
[48 160]
[49 159]
[50 156]
[51 155]
[52 154]
[53 153]
[73 152]
[74 151]
[75 145]
[76 144]
[77 143]
[78 142]
[79 141]
[80 140]
[94 139]
[95 138]
[96 137]
[97 135]
[98 134]
[99 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
