%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[27.23662949 378.25048828]
[25.39552498 393.15209961]
[21.95403862 407.76727295]
[16.95252228 421.92468262]
[10.44961548 435.45831299]
[2.52156186 448.20950317]
[-6.73868704 460.02877808]
[-17.22255898 470.77752686]
[-28.80713654 480.32974243]
[-41.35659790 488.57342529]
[-54.72380066 495.41192627]
[-68.75202942 500.76507568]
[-83.27680969 504.57006836]
[-98.12783813 506.78234863]
[-113.13099670 507.37594604]
[-128.11039734 506.34390259]
[-142.89038086 503.69833374]
[-157.29768372 499.47024536]
[-171.16339111 493.70919800]
[-184.32492065 486.48278809]
[-196.62797546 477.87567139]
[-207.92828369 467.98880005]
[-218.09338379 456.93811035]
[-227.00407410 444.85311890]
[-234.55589294 431.87554932]
[-240.66029358 418.15756226]
[-245.24571228 403.85995483]
[-248.25837708 389.15039062]
[-249.66296387 374.20132446]
[-249.44302368 359.18804932]
[-247.60110474 344.28656006]
[-244.15884399 329.67156982]
[-239.15655518 315.51443481]
[-232.65292358 301.98114014]
[-224.72418213 289.23034668]
[-215.46330261 277.41159058]
[-204.97885132 266.66339111]
[-193.39375305 257.11181641]
[-180.84385681 248.86880493]
[-167.47628784 242.03102112]
[-153.44776917 236.67864990]
[-138.92279053 232.87442017]
[-124.07163239 230.66294861]
[-109.06844330 230.07015991]
[-94.08910370 231.10299683]
[-79.30925751 233.74935913]
[-64.90217590 237.97822571]
[-51.03678131 243.74000549]
[-37.87564087 250.96714783]
[-29.27707672 238.67631531]
[-20.67851257 226.38546753]
[-12.07994843 214.09463501]
[-3.48138428 201.80380249]
[5.11717939 189.51295471]
[13.71574402 177.22212219]
[22.31430817 164.93128967]
[8.66444874 171.15071106]
[-6.32357693 171.74993896]
[-20.42638588 166.64007568]
[-31.55191040 156.57913208]
[-38.04974365 143.05958557]
[-38.95597458 128.08697510]
[-34.13616180 113.88242340]
[-24.30530357 102.55307007]
[-10.92174625 95.77956390]
[4.02914000 94.56671906]
[18.32947922 99.09444427]
[29.85790062 108.69107819]
[36.90423203 121.93302917]
[38.42319107 136.85592651]
[34.19033432 151.24433899]
[45.14624405 140.99894714]
[56.10215378 130.75355530]
[67.05805969 120.50817108]
[78.01396942 110.26277924]
[88.96987915 100.01738739]
[74.29451752 96.91356659]
[67.43505096 83.57386017]
[73.44802856 69.83180237]
[87.90090942 65.81752777]
[100.13955688 74.49021149]
[101.14271545 89.45513153]
[112.83029938 80.05298615]
[124.51787567 70.65083313]
[130.42077637 55.97205734]
[145.18731689 54.02316284]
[156.87490845 44.62100983]
[162.77780151 29.94223595]
[177.54434204 27.99334145]
[168.94044495 15.69934940]
[161.17692566 2.85813284]
[154.28842163 -10.47295666]
[148.30574036 -24.23437881]
[143.25558472 -38.36466980]
[139.16049194 -52.80072021]
[136.03878784 -67.47805786]
[133.90438843 -82.33112335]
[132.76684570 -97.29358673]
[132.63121033 -112.29861450]
[133.49812317 -127.27919006]
[135.36369324 -142.16841125]
[138.21958923 -156.89978027]
[142.05305481 -171.40750122]
[146.84696960 -185.62675476]
[152.57994080 -199.49407959]
[159.22633362 -212.94750977]
[166.75648499 -225.92695618]
[175.13674927 -238.37446594]
[184.32971191 -250.23442078]
[194.29429626 -261.45388794]
[204.98602295 -271.98272705]
[216.35711670 -281.77392578]
[228.35679626 -290.78372192]
[240.93147278 -298.97195435]
[254.02497864 -306.30197144]
[267.57885742 -312.74105835]
[281.53253174 -318.26049805]
[295.82369995 -322.83557129]
[310.38854980 -326.44589233]
[325.16201782 -329.07531738]
[340.07812500 -330.71212769]
[355.07025146 -331.34896851]
[370.07144165 -330.98303223]
[385.01467896 -329.61593628]
[399.83322144 -327.25378418]
[414.46090698 -323.90713501]
[428.83239746 -319.59094238]
[442.88351440 -314.32446289]
[456.55148315 -308.13125610]
[469.77523804 -301.03894043]
[482.49578857 -293.07919312]
[494.65625000 -284.28759766]
[506.20236206 -274.70339966]
[517.08251953 -264.36941528]
[527.24810791 -253.33177185]
[536.65380859 -241.63980103]
[545.25756836 -229.34570312]
[553.02093506 -216.50437927]
[559.90924072 -203.17321777]
[565.89178467 -189.41171265]
[570.94177246 -175.28135681]
[575.03668213 -160.84526062]
[578.15820312 -146.16787720]
[580.29241943 -131.31478882]
[581.42974854 -116.35231018]
[581.56518555 -101.34728241]
[580.69812012 -86.36671448]
[578.83233643 -71.47751617]
[575.97625732 -56.74618530]
[572.14257812 -42.23851776]
[567.34851074 -28.01931190]
[561.61535645 -14.15206814]
[554.96881104 -0.69872582]
[547.43847656 12.28063011]
[539.05804443 24.72802925]
[529.86499023 36.58787918]
[519.90020752 47.80721283]
[509.20837402 58.33591461]
[497.83715820 68.12696838]
[485.83737183 77.13663483]
[473.26257324 85.32468414]
[460.16897583 92.65454102]
[446.61505127 99.09347534]
[432.66128540 104.61271667]
[418.37005615 109.18762207]
[403.80514526 112.79776001]
[389.03164673 115.42700195]
[374.11550903 117.06361389]
[359.12338257 117.70027161]
[344.12222290 117.33414459]
[329.17901611 115.96686554]
[314.36047363 113.60453033]
[299.73281860 110.25770569]
[285.36138916 105.94132996]
[271.31036377 100.67468262]
[257.64245605 94.48128510]
[244.41877747 87.38880157]
[231.69834900 79.42890930]
[219.53799438 70.63716125]
[207.99200439 61.05281448]
[197.11198425 50.71868515]
[186.94650269 39.68092346]
[181.87957764 53.68719482]
[166.27705383 56.30859375]
[154.58947754 65.71074677]
[149.52255249 79.71701050]
[133.92002869 82.33840942]
[122.23244476 91.74056244]
[110.54486847 101.14271545]
[99.21527100 110.97329712]
[88.25936127 121.21868896]
[77.30345154 131.46408081]
[66.34754181 141.70947266]
[55.39163589 151.95486450]
[44.43572617 162.20025635]
[34.60514450 173.52984619]
[26.00658226 185.82067871]
[17.40801811 198.11152649]
[8.80945396 210.40235901]
[0.21088962 222.69319153]
[-8.38767433 234.98403931]
[-16.98623848 247.27487183]
[-25.58480263 259.56570435]
[-14.28395462 269.45196533]
[-4.11826515 280.50213623]
[4.79307795 292.58663940]
[12.34559345 305.56378174]
[18.45073128 319.28146362]
[23.03691483 333.57882690]
[26.05036926 348.28820801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 203]
[50 202]
[51 201]
[52 200]
[53 199]
[54 198]
[55 197]
[56 196]
[71 195]
[72 194]
[73 193]
[74 192]
[75 191]
[76 190]
[82 189]
[83 188]
[84 187]
[86 185]
[87 184]
[89 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
