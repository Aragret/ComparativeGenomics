%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[88.94602203 660.53338623]
[74.16498566 657.87683105]
[59.80191422 653.49066162]
[46.05843353 647.43646240]
[33.12748718 639.79925537]
[21.19060135 630.68627930]
[10.41535378 620.22534180]
[0.95301086 608.56341553]
[-7.06359053 595.86419678]
[-13.52190971 582.30590820]
[-18.33128166 568.07897949]
[-21.42419243 553.38305664]
[-22.75721931 538.42443848]
[-22.31164932 523.41320801]
[-20.09373856 508.56002808]
[-16.13462257 494.07342529]
[-10.48988247 480.15676880]
[-3.23875928 467.00543213]
[5.51695108 454.80404663]
[15.65433216 443.72387695]
[27.03107071 433.92050171]
[39.48745728 425.53152466]
[52.84862137 418.67474365]
[66.92699432 413.44638062]
[81.52493286 409.91983032]
[96.43751526 408.14465332]
[96.43751526 393.14465332]
[96.43751526 378.14465332]
[86.85681915 363.44168091]
[96.19626617 347.57168579]
[95.97293854 332.57336426]
[95.74961090 317.57501221]
[81.84184265 312.14331055]
[71.04396820 301.77261353]
[65.02297974 288.02081299]
[64.72491455 272.97091675]
[70.22632599 258.91574097]
[80.71788025 248.00839233]
[94.62327576 241.93257141]
[94.39994812 226.93423462]
[94.17662048 211.93589783]
[93.95329285 196.93756104]
[93.72996521 181.93922424]
[93.50663757 166.94088745]
[93.28330994 151.94255066]
[93.05998230 136.94421387]
[92.83665466 121.94587708]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[92.50000000 76.72462463]
[84.76270294 62.92445374]
[92.50000000 50.19718170]
[84.76270294 36.39701080]
[92.50000000 23.66973877]
[92.50000000 8.66973782]
[92.50000000 -6.33026171]
[92.27667236 -21.32859993]
[91.83006287 -36.32194901]
[91.38346100 -51.31529999]
[90.93685150 -66.30864716]
[75.94339752 -66.93283844]
[61.03267670 -68.62506104]
[46.28067017 -71.37670135]
[31.76254845 -75.17372894]
[17.55229568 -79.99679565]
[3.72232556 -85.82132721]
[-9.65688801 -92.61764526]
[-22.51716614 -100.35110474]
[-34.79297638 -108.98231506]
[-46.42176437 -118.46728516]
[-57.34426498 -128.75767517]
[-67.50482941 -139.80105591]
[-76.85167694 -151.54115295]
[-85.33717346 -163.91812134]
[-92.91807556 -176.86892700]
[-99.55577087 -190.32752991]
[-105.21641541 -204.22538757]
[-109.87117004 -218.49166870]
[-113.49632263 -233.05364990]
[-116.07338715 -247.83715820]
[-117.58924103 -262.76684570]
[-118.03614807 -277.76663208]
[-117.41184998 -292.76007080]
[-115.71950531 -307.67077637]
[-112.96775818 -322.42276001]
[-109.17062378 -336.94085693]
[-104.34744263 -351.15109253]
[-98.52280426 -364.98101807]
[-91.72638702 -378.36016846]
[-83.99282074 -391.22039795]
[-75.36151886 -403.49612427]
[-65.87646484 -415.12484741]
[-55.58598709 -426.04727173]
[-44.54253006 -436.20773315]
[-32.80236435 -445.55450439]
[-20.42532158 -454.03991699]
[-7.47446918 -461.62069702]
[5.98419762 -468.25830078]
[19.88209534 -473.91882324]
[34.14840317 -478.57348633]
[48.71041870 -482.19851685]
[63.49394608 -484.77548218]
[78.42363739 -486.29119873]
[93.42342377 -486.73800659]
[108.41687012 -486.11358643]
[123.32756805 -484.42114258]
[138.07952881 -481.66928101]
[152.59759521 -477.87203979]
[166.80776978 -473.04873657]
[180.63766479 -467.22399902]
[194.01676941 -460.42745972]
[206.87692261 -452.69381714]
[219.15260315 -444.06240845]
[230.78125000 -434.57727051]
[241.70359802 -424.28671265]
[251.86398315 -413.24316406]
[261.21066284 -401.50292969]
[269.69595337 -389.12582397]
[277.27667236 -376.17492676]
[283.91415405 -362.71618652]
[289.57458496 -348.81826782]
[294.22912598 -334.55191040]
[297.85403442 -319.98986816]
[300.43087769 -305.20632935]
[301.94650269 -290.27661133]
[302.39318848 -275.27682495]
[301.76864624 -260.28338623]
[300.07608032 -245.37271118]
[297.32412720 -230.62075806]
[293.52676392 -216.10272217]
[288.70336914 -201.89259338]
[282.87850952 -188.06274414]
[276.08187866 -174.68368530]
[268.34811401 -161.82359314]
[259.71664429 -149.54797363]
[250.23139954 -137.91941833]
[239.94075012 -126.99714661]
[228.89714050 -116.83683777]
[217.15682983 -107.49026489]
[204.77966309 -99.00505066]
[191.82868958 -91.42443848]
[178.36991882 -84.78705597]
[164.47193909 -79.12673187]
[150.20556641 -74.47230530]
[135.64349365 -70.84748840]
[120.85992432 -68.27075958]
[105.93020630 -66.75525665]
[106.37680817 -51.76190567]
[106.82341766 -36.76855469]
[107.27001953 -21.77520561]
[110.07013702 -17.90630531]
[110.46956635 -12.23731136]
[107.50000000 -6.33026171]
[107.50000000 8.66973782]
[107.50000000 23.66973877]
[115.23729706 36.39701080]
[107.50000000 50.19718170]
[115.23729706 62.92445374]
[107.50000000 76.72462463]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[107.83499146 121.72254944]
[108.05831909 136.72088623]
[108.28164673 151.71922302]
[108.50497437 166.71755981]
[108.72830200 181.71589661]
[108.95162964 196.71423340]
[109.17495728 211.71257019]
[109.39828491 226.71090698]
[109.62162018 241.70924377]
[123.70175171 247.36836243]
[134.51341248 257.95849609]
[140.43084717 271.84365845]
[140.58100891 286.89572144]
[134.97213745 300.82073975]
[124.48782349 311.50830078]
[110.74794769 317.35168457]
[110.97127533 332.35003662]
[111.19460297 347.34835815]
[119.88923645 356.87548828]
[119.76647186 369.37222290]
[111.43751526 378.14465332]
[111.43751526 393.14465332]
[111.43751526 408.14465332]
[126.35009766 409.91983032]
[140.94804382 413.44638062]
[155.02641296 418.67474365]
[168.38757324 425.53152466]
[180.84396362 433.92050171]
[192.22070312 443.72387695]
[202.35807800 454.80404663]
[211.11378479 467.00543213]
[218.36491394 480.15676880]
[224.00965881 494.07342529]
[227.96876526 508.56002808]
[230.18667603 523.41320801]
[230.63224792 538.42443848]
[229.29922485 553.38305664]
[226.20631409 568.07897949]
[221.39694214 582.30590820]
[214.93861389 595.86419678]
[206.92201233 608.56341553]
[197.45967102 620.22534180]
[186.68443298 630.68627930]
[174.74754333 639.79925537]
[161.81658936 647.43646240]
[148.07312012 653.49066162]
[133.71003723 657.87683105]
[118.92900848 660.53338623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 185]
[27 184]
[28 183]
[30 180]
[31 179]
[32 178]
[39 171]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[46 164]
[47 163]
[48 162]
[50 161]
[51 160]
[53 158]
[55 156]
[56 155]
[57 154]
[58 151]
[59 150]
[60 149]
[61 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
