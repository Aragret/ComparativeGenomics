%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[124.36301422 605.69506836]
[113.52689362 595.30645752]
[103.72736359 583.93481445]
[95.05315399 571.68316650]
[87.58283234 558.66247559]
[81.38404846 544.99060059]
[76.51294708 530.79144287]
[73.01363373 516.19348145]
[70.91780090 501.32901001]
[70.24443817 486.33264160]
[70.99963379 471.34017944]
[73.17655182 456.48736572]
[76.75547791 441.90875244]
[81.70399475 427.73635864]
[87.97729492 414.09851074]
[95.51856232 401.11877441]
[104.25950623 388.91464233]
[114.12094879 377.59664917]
[125.01359558 367.26733398]
[136.83879089 358.02020264]
[149.48945618 349.93899536]
[162.85099792 343.09695435]
[176.80242920 337.55599976]
[172.61541748 323.15219116]
[168.42842102 308.74841309]
[163.81440735 294.47567749]
[158.77748108 280.34664917]
[153.74057007 266.21762085]
[148.70365906 252.08859253]
[143.66673279 237.95956421]
[138.62982178 223.83053589]
[124.66825867 213.19844055]
[128.13635254 195.11381531]
[122.88963318 181.06134033]
[117.64291382 167.00886536]
[112.39620209 152.95639038]
[100.69589233 143.73945618]
[103.11740112 128.10466003]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[70.41056061 67.78289795]
[72.77053070 53.07644272]
[67.10774231 39.18641663]
[61.44495392 25.29638863]
[55.78216934 11.40636253]
[50.11938095 -2.48366475]
[43.84202194 -16.10698128]
[36.96260834 -29.43641090]
[30.08319664 -42.76583862]
[23.20378494 -56.09526825]
[16.32437134 -69.42469788]
[3.11964655 -78.13938904]
[4.15815592 -92.99774170]
[-2.72125649 -106.32717133]
[-9.60066891 -119.65660095]
[-14.94864273 -123.54385376]
[-17.19365883 -128.76466370]
[-16.47978020 -133.48689270]
[-22.95927620 -147.01524353]
[-29.43877220 -160.54357910]
[-35.91826630 -174.07192993]
[-36.39870834 -159.07962036]
[-41.22004318 -144.87559509]
[-49.96518326 -132.68861389]
[-61.87758255 -123.57297516]
[-75.92670441 -118.31729126]
[-90.89715576 -117.37622070]
[-105.49384308 -120.83118439]
[-118.45400238 -128.38327026]
[-128.65646362 -139.37918091]
[-135.21859741 -152.86763000]
[-137.57272339 -167.68174744]
[-135.51518250 -182.53996277]
[-129.22396851 -196.15689087]
[-119.24333954 -207.35452271]
[-106.43671417 -215.16416931]
[-91.91200256 -218.91020203]
[-76.92573547 -218.26855469]
[-62.77436829 -213.29473877]
[-50.68214035 -204.41903687]
[-41.69682312 -192.41238403]
[-44.14254761 -207.21165466]
[-46.58827591 -222.01092529]
[-49.03400421 -236.81019592]
[-51.47973251 -251.60946655]
[-66.51419067 -252.63989258]
[-80.90558624 -257.11029053]
[-93.87779999 -264.77960205]
[-104.73126984 -275.23422241]
[-112.88067627 -287.91033936]
[-117.88652802 -302.12432861]
[-119.47886658 -317.10971069]
[-117.57182312 -332.05828857]
[-112.26824188 -346.16390991]
[-103.85413361 -358.66589355]
[-92.78327179 -368.89001465]
[-79.65267944 -376.28488159]
[-65.17047882 -380.45175171]
[-50.11767960 -381.16583252]
[-35.30605698 -378.38870239]
[-21.53438568 -372.27005005]
[-9.54535198 -363.13989258]
[0.01448883 -351.49060059]
[6.62958717 -337.95037842]
[9.94319916 -323.24948120]
[9.77662659 -308.18066406]
[6.13885117 -293.55661011]
[-0.77394569 -280.16595459]
[-10.58896542 -268.73080444]
[-22.77689743 -259.86791992]
[-36.68046188 -254.05519104]
[-34.23473358 -239.25592041]
[-31.78900528 -224.45664978]
[-29.34327888 -209.65737915]
[-26.89755058 -194.85810852]
[-22.38992119 -180.55142212]
[-15.91042614 -167.02308655]
[-9.43093014 -153.49473572]
[-2.95143461 -139.96638489]
[3.72876000 -126.53601837]
[10.60817242 -113.20658875]
[17.48758507 -99.87715912]
[30.20024872 -92.11587524]
[29.65380096 -76.30410767]
[36.53321457 -62.97468185]
[43.41262436 -49.64525223]
[50.29203796 -36.31582260]
[57.17145157 -22.98639297]
[62.75222778 -36.90957260]
[76.48879242 -42.93507767]
[90.51222229 -37.61122513]
[96.78926086 -23.98775673]
[91.72412872 -9.86881828]
[78.21836853 -3.34237599]
[64.00940704 -8.14645100]
[69.67219543 5.74357557]
[75.33498383 19.63360214]
[80.99777222 33.52362823]
[86.66055298 47.41365814]
[98.63009644 56.27815628]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[116.53191376 112.81793976]
[118.30220032 118.21823120]
[117.16986847 122.85793304]
[129.24545288 133.08000183]
[126.44866943 147.70967102]
[131.69538879 161.76214600]
[136.94210815 175.81462097]
[142.18882751 189.86709595]
[153.57775879 195.92141724]
[157.65846252 207.73376465]
[152.75885010 218.79362488]
[157.79577637 232.92265320]
[162.83268738 247.05168152]
[167.86959839 261.18072510]
[172.90652466 275.30975342]
[177.94343567 289.43878174]
[181.34921265 292.13223267]
[183.50401306 295.43698120]
[184.36929321 298.88467407]
[184.06254578 302.04260254]
[182.83219910 304.56140137]
[187.01921082 318.96517944]
[191.20622253 333.36898804]
[205.95396423 330.56741333]
[220.90124512 329.18045044]
[235.91267395 329.22058105]
[250.85232544 330.68746948]
[265.58486938 333.56787109]
[279.97692871 337.83563232]
[293.89810181 343.45214844]
[307.22238159 350.36654663]
[319.82904053 358.51617432]
[331.60394287 367.82727051]
[342.44042969 378.21548462]
[352.24038696 389.58676147]
[360.91503906 401.83810425]
[368.38583374 414.85855103]
[374.58511353 428.53018188]
[379.45672607 442.72918701]
[382.95657349 457.32699585]
[385.05294800 472.19137573]
[385.72686768 487.18774414]
[384.97219849 502.18023682]
[382.79583740 517.03314209]
[379.21743774 531.61187744]
[374.26943970 545.78442383]
[367.99664307 559.42248535]
[360.45584106 572.40252686]
[351.71533203 584.60699463]
[341.85430908 595.92535400]
[330.96203613 606.25506592]
[319.13717651 615.50262451]
[306.48681641 623.58422852]
[293.12551880 630.42681885]
[279.17428589 635.96826172]
[264.75946045 640.15850830]
[250.01162720 642.95953369]
[235.06430054 644.34594727]
[220.05285645 644.30523682]
[205.11326599 642.83782959]
[190.38082886 639.95690918]
[175.98893738 635.68859863]
[162.06794739 630.07159424]
[148.74394226 623.15673828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 169]
[24 168]
[25 167]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[31 157]
[33 154]
[34 153]
[35 152]
[36 151]
[38 149]
[39 146]
[41 144]
[42 143]
[44 141]
[45 140]
[46 139]
[47 138]
[48 137]
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[55 124]
[56 123]
[57 122]
[60 121]
[61 120]
[62 119]
[63 118]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
