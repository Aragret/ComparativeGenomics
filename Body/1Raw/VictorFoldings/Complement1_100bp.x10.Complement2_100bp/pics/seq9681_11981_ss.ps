%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[96.89881897 603.75836182]
[85.11920929 594.46246338]
[73.99404907 584.39251709]
[63.57408142 573.59448242]
[53.90686417 562.11767578]
[45.03650665 550.01434326]
[37.00347519 537.33984375]
[29.84443092 524.15191650]
[23.59203339 510.51080322]
[18.27481461 496.47869873]
[13.91703320 482.11962891]
[10.53857517 467.49911499]
[8.15485477 452.68389893]
[6.77674866 437.74154663]
[6.41054487 422.74026489]
[7.05791473 407.74847412]
[8.71590328 392.83459473]
[11.37694645 378.06665039]
[15.02890205 363.51205444]
[19.65510750 349.23721313]
[25.23445320 335.30725098]
[31.74148178 321.78573608]
[39.14650345 308.73434448]
[47.41573334 296.21264648]
[56.51143265 284.27780151]
[66.39211273 272.98419189]
[77.01267242 262.38342285]
[88.32466125 252.52380371]
[100.27647400 243.45037842]
[112.81356049 235.20449829]
[125.87872314 227.82382202]
[119.39923096 214.29548645]
[112.91973114 200.76713562]
[106.44023895 187.23878479]
[99.96073914 173.71044922]
[99.79621124 188.70954895]
[96.45449066 203.33256531]
[90.08760071 216.91427612]
[80.98518372 228.83677673]
[69.56135559 238.55769348]
[56.33581543 245.63476562]
[41.91024017 249.74606323]
[26.94089317 250.70452881]
[12.10878181 248.46656799]
[-1.91133106 243.13398743]
[-14.48162460 234.94937134]
[-25.03023338 224.28509521]
[-33.07726669 211.62629700]
[-38.25664139 197.54887390]
[-40.33272552 182.69323730]
[-39.21107101 167.73522949]
[-34.94271088 153.35534668]
[-27.72182274 140.20776367]
[-17.87691116 128.89062500]
[-5.85585117 119.91876984]
[7.79447746 113.70037079]
[22.45307541 110.51831055]
[37.45307541 110.51736450]
[52.11207581 113.69756317]
[65.76319122 119.91423035]
[77.78539276 128.88456726]
[87.63173676 140.20045471]
[94.85596466 153.35112000]
[94.18618011 138.36607361]
[93.51638794 123.38103485]
[92.84660339 108.39599609]
[80.95215607 117.53503418]
[66.35498047 114.08213043]
[59.81557846 100.58264160]
[66.15455627 86.98788452]
[80.69905090 83.31941223]
[92.72663116 92.28002167]
[93.17323303 77.28667450]
[93.61984253 62.29332352]
[90.74732971 53.62230682]
[94.18636322 47.08053207]
[91.44326782 38.36771393]
[94.97931671 31.87786484]
[95.87213135 16.90445900]
[96.76494598 1.93105316]
[81.96974945 -0.63451833]
[67.55484772 -4.84052515]
[53.70151520 -10.63407326]
[40.58397675 -17.94230080]
[28.36719704 -26.67329979]
[17.20482063 -36.71726990]
[7.23722029 -47.94789886]
[-1.41024709 -60.22394562]
[-8.62883186 -73.39102936]
[-14.32775307 -87.28355408]
[-18.43533897 -101.72681427]
[-20.89993477 -116.53916168]
[-21.69054413 -131.53433228]
[-20.79722595 -146.52372742]
[-18.23121071 -161.31884766]
[-14.02477360 -175.73362732]
[-8.23081112 -189.58679199]
[-0.92219120 -202.70410156]
[7.80917406 -214.92062378]
[17.85347748 -226.08270264]
[29.08440208 -236.04995728]
[41.36070633 -244.69706726]
[54.52800369 -251.91525269]
[68.42070007 -257.61376953]
[82.86408234 -261.72091675]
[97.67651367 -264.18505859]
[112.67169952 -264.97521973]
[127.66107178 -264.08145142]
[142.45611572 -261.51501465]
[156.87077332 -257.30813599]
[170.72375488 -251.51376343]
[183.84085083 -244.20474243]
[196.05711365 -235.47302246]
[207.21888733 -225.42837524]
[217.18580627 -214.19715881]
[225.83255005 -201.92059326]
[233.05033875 -188.75308228]
[238.74842834 -174.86021423]
[242.85516357 -160.41670227]
[245.31886292 -145.60420227]
[246.10858154 -130.60899353]
[245.21437073 -115.61965179]
[242.64746094 -100.82468414]
[238.44017029 -86.41015625]
[232.64537048 -72.55734253]
[225.33596802 -59.44046021]
[216.60386658 -47.22446442]
[206.55889893 -36.06298828]
[195.32737732 -26.09639740]
[183.05055237 -17.45003128]
[169.88282776 -10.23262691]
[155.98979187 -4.53495312]
[141.54615784 -0.42866182]
[126.73358917 2.03460479]
[111.73835754 2.82386899]
[110.84553528 17.79727554]
[109.95272064 32.77067947]
[109.17140198 47.75031662]
[108.61318970 62.73992920]
[108.16658020 77.73327637]
[107.71997833 92.72663116]
[107.83164215 107.72621155]
[108.50142670 122.71125031]
[109.17121887 137.69628906]
[109.84100342 152.68133545]
[113.48908997 167.23094177]
[119.96858215 180.75929260]
[126.44808197 194.28764343]
[132.92758179 207.81597900]
[139.40707397 221.34432983]
[153.34725952 215.79060364]
[167.63058472 211.19064331]
[182.19187927 207.56546021]
[196.96467590 204.93156433]
[211.88157654 203.30099487]
[226.87454224 202.68118286]
[241.87513733 203.07496643]
[256.81491089 204.48054504]
[271.62573242 206.89149475]
[286.23999023 210.29681396]
[300.59103394 214.68098450]
[314.61334229 220.02400208]
[328.24295044 226.30145264]
[341.41769409 233.48474121]
[354.07742310 241.54104614]
[366.16436768 250.43365479]
[377.62341309 260.12194824]
[388.40228271 270.56173706]
[398.45175171 281.70541382]
[407.72598267 293.50207520]
[416.18264771 305.89794922]
[423.78320312 318.83642578]
[430.49291992 332.25854492]
[436.28121948 346.10296631]
[441.12164307 360.30661011]
[444.99218750 374.80459595]
[447.87509155 389.53082275]
[449.75729370 404.41809082]
[450.63012695 419.39843750]
[450.48965454 434.40353394]
[449.33651733 449.36492920]
[447.17596436 464.21435547]
[444.01785278 478.88403320]
[439.87658691 493.30700684]
[434.77108765 507.41754150]
[428.72463989 521.15118408]
[421.76480103 534.44531250]
[413.92337036 547.23925781]
[405.23611450 559.47460938]
[395.74264526 571.09564209]
[385.48632812 582.04919434]
[374.51391602 592.28533936]
[362.87551880 601.75744629]
[350.62417603 610.42218018]
[337.81585693 618.24011230]
[324.50894165 625.17547607]
[310.76419067 631.19665527]
[296.64431763 636.27624512]
[282.21374512 640.39093018]
[267.53826904 643.52209473]
[252.68492126 645.65533447]
[237.72143555 646.78100586]
[222.71609497 646.89385986]
[207.73736572 645.99346924]
[192.85360718 644.08392334]
[178.13270569 641.17395020]
[163.64184570 637.27679443]
[149.44714355 632.41021729]
[135.61335754 626.59649658]
[122.20362091 619.86212158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 150]
[32 149]
[33 148]
[34 147]
[35 146]
[63 145]
[64 144]
[65 143]
[66 142]
[72 141]
[73 140]
[74 139]
[76 138]
[78 137]
[79 136]
[80 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
