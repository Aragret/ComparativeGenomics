%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[112.95106506 697.25000000]
[100.97967529 688.17077637]
[90.38842010 677.51379395]
[81.38346863 665.48645020]
[74.14010620 652.32287598]
[68.79932404 638.27929688]
[65.46508026 623.62908936]
[64.20227814 608.65740967]
[65.03549957 593.65570068]
[67.94852448 578.91589355]
[72.88465118 564.72503662]
[79.74779510 551.35931396]
[88.40435791 539.07879639]
[98.68585205 528.12268066]
[110.39213562 518.70410156]
[123.29534149 511.00650024]
[137.14430237 505.17965698]
[151.66944885 501.33697510]
[149.88699341 486.44323730]
[148.10452271 471.54953003]
[146.32205200 456.65582275]
[144.53959656 441.76208496]
[142.75712585 426.86837769]
[138.84106445 420.60049438]
[141.06069946 411.73986816]
[139.50016785 396.82125854]
[130.30377197 388.96295166]
[128.88159180 376.54678345]
[136.53788757 366.16680908]
[135.19964600 351.22662354]
[133.86141968 336.28643799]
[124.78303528 328.29211426]
[123.54586029 315.85614014]
[131.35585022 305.59130859]
[130.24020386 290.63284302]
[128.79078674 275.70303345]
[126.45529938 260.88598633]
[123.57002258 246.16607666]
[120.68475342 231.44619751]
[117.79947662 216.72630310]
[114.80470276 202.02828979]
[111.70059204 187.35299683]
[108.59648132 172.67768860]
[96.18054199 160.27561951]
[102.03366852 142.81646729]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[79.90247345 100.86814880]
[64.92401886 100.06441498]
[56.08959198 87.94200134]
[59.91160202 73.43710327]
[73.57260132 67.24217987]
[87.00119781 73.92260742]
[84.77607727 59.08856583]
[80.40827942 51.06608963]
[82.62996674 44.01726532]
[80.62595367 29.15173912]
[78.62194061 14.28621006]
[68.85679626 5.85977888]
[67.49369049 -6.56301069]
[74.72119141 -16.26299477]
[72.93872833 -31.15671158]
[71.15626526 -46.05043030]
[69.37379456 -60.94414520]
[60.05142975 -73.72710419]
[66.22151184 -87.28363037]
[64.43904877 -102.17734528]
[62.65658188 -117.07106781]
[57.15609741 -103.11596680]
[47.47264099 -91.66037750]
[34.62812805 -83.91321564]
[19.97806931 -80.69207001]
[5.06852055 -82.33687592]
[-8.52707672 -88.67404938]
[-19.37394714 -99.03481293]
[-26.32739258 -112.32576752]
[-28.65360451 -127.14429474]
[-26.10708618 -141.92655945]
[-18.95658302 -155.11254883]
[-7.95670080 -165.31071472]
[5.73171473 -171.44482422]
[20.66409302 -172.86752319]
[35.26458359 -169.42868042]
[47.99236298 -161.49119568]
[57.50423813 -149.89273071]
[62.79643631 -135.85713196]
[64.80045319 -150.72265625]
[66.80446625 -165.58818054]
[68.80847931 -180.45372009]
[70.81249237 -195.31924438]
[64.98827362 -210.02940369]
[74.35658264 -221.60887146]
[76.36059570 -236.47439575]
[74.40575409 -245.39720154]
[78.50670624 -251.54570007]
[80.73181915 -266.37976074]
[82.95693970 -281.21377563]
[69.11886597 -287.22796631]
[57.30950165 -296.61950684]
[48.33402252 -308.74810791]
[42.80439377 -322.78683472]
[41.09763718 -337.77847290]
[43.33011627 -352.70089722]
[49.34962463 -366.53665161]
[58.74573517 -378.34237671]
[70.87781525 -387.31317139]
[84.91866302 -392.83737183]
[99.91096497 -394.53836060]
[114.83251953 -392.30010986]
[128.66593933 -386.27526855]
[140.46804810 -376.87460327]
[149.43415833 -364.73904419]
[154.95294189 -350.69607544]
[156.64813232 -335.70312500]
[154.40412903 -320.78244019]
[148.37393188 -306.95132446]
[138.96870422 -295.15286255]
[126.82971191 -286.19143677]
[112.78459167 -280.67807007]
[97.79098511 -278.98867798]
[95.56586456 -264.15463257]
[93.34075165 -249.32058716]
[91.22612762 -234.47038269]
[89.22211456 -219.60485840]
[95.18967438 -205.95797729]
[85.67801666 -193.31523132]
[83.67400360 -178.44970703]
[81.66999054 -163.58416748]
[79.66597748 -148.71864319]
[77.66196442 -133.85311890]
[77.55030060 -118.85353088]
[79.33276367 -103.95981598]
[81.11522675 -89.06609344]
[90.31010437 -77.34843445]
[84.26751709 -62.72661209]
[86.04998016 -47.83289337]
[87.83244324 -32.93917847]
[89.61491394 -18.04545975]
[100.87489319 -4.58515549]
[93.48747253 12.28219604]
[95.49148560 27.14772415]
[97.49549866 42.01325226]
[99.61012268 56.86344910]
[101.83524323 71.69749451]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.66112518 139.49420166]
[127.13910675 147.01582336]
[129.60508728 159.26747131]
[123.27178955 169.57357788]
[126.37590027 184.24888611]
[129.48001099 198.92417908]
[134.31756592 206.67247009]
[132.51937866 213.84103394]
[135.40464783 228.56091309]
[138.28991699 243.28080750]
[141.17518616 258.00070190]
[151.58235168 247.19833374]
[166.53022766 248.44767761]
[174.99981689 260.82775879]
[170.74763489 275.21243286]
[156.90823364 280.99786377]
[143.68450928 273.92056274]
[146.81454468 278.09790039]
[147.91882324 282.60720825]
[147.21009827 286.62127686]
[145.19865417 289.51721191]
[146.31430054 304.47564697]
[157.03234863 319.44912720]
[148.80160522 334.94821167]
[150.13983154 349.88839722]
[151.47807312 364.82858276]
[162.41786194 379.64083862]
[154.41877747 395.26074219]
[155.97929382 410.17935181]
[157.65084839 425.08590698]
[159.43330383 439.97964478]
[161.21577454 454.87335205]
[162.99824524 469.76705933]
[164.78070068 484.66076660]
[166.56317139 499.55450439]
[181.58489990 499.86102295]
[196.41775513 502.25527954]
[210.77302551 506.69064331]
[224.37127686 513.08074951]
[236.94781494 521.30126953]
[248.25782776 531.19219971]
[258.08117676 542.56091309]
[266.22662354 555.18615723]
[272.53564453 568.82226562]
[276.88540649 583.20367432]
[279.19125366 598.05053711]
[279.40832520 613.07385254]
[277.53234863 627.98107910]
[273.59985352 642.48217773]
[267.68740845 656.29486084]
[259.91009521 669.15014648]
[250.41929626 680.79791260]
[239.39973450 691.01141357]
[227.06593323 699.59185791]
[213.65797424 706.37219238]
[199.43682861 711.22039795]
[184.67932129 714.04217529]
[169.67272949 714.78253174]
[154.70913696 713.42712402]
[140.07983398 710.00225830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 185]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[25 179]
[26 178]
[29 176]
[30 175]
[31 174]
[34 172]
[35 171]
[36 167]
[37 161]
[38 160]
[39 159]
[40 158]
[41 156]
[42 155]
[43 154]
[45 151]
[46 150]
[47 149]
[49 147]
[55 146]
[56 145]
[58 144]
[59 143]
[60 142]
[63 140]
[64 139]
[65 138]
[66 137]
[68 135]
[69 134]
[70 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[94 126]
[95 125]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
