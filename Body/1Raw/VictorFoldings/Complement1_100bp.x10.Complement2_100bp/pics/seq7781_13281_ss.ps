%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[84.83016968 686.01232910]
[76.33815002 673.54040527]
[71.36437225 659.29528809]
[70.24795532 644.24816895]
[73.06501007 629.42498779]
[79.62347412 615.83642578]
[89.47618103 604.40893555]
[101.95134735 595.92175293]
[116.19840240 590.95349121]
[115.08275604 575.99505615]
[113.96710968 561.03656006]
[112.85146332 546.07812500]
[98.12805176 539.41979980]
[88.71733856 526.16857910]
[87.26506805 509.88644409]
[94.26194000 495.00897217]
[107.88394165 485.63705444]
[106.54570770 470.69686890]
[105.20747375 455.75668335]
[91.85296631 445.53433228]
[89.98697662 428.48049927]
[101.24967957 415.09503174]
[99.68915558 400.17645264]
[98.12863159 385.25784302]
[96.56811523 370.33923340]
[94.47791290 368.47128296]
[93.00167847 365.66284180]
[92.50135803 362.14361572]
[93.24910736 358.26992798]
[95.38603210 354.49005127]
[94.71624756 339.50500488]
[86.41835785 327.13592529]
[93.53173065 313.00402832]
[92.86194611 298.01898193]
[80.51962280 295.52139282]
[69.04103088 290.32220459]
[59.00968170 282.68151855]
[50.93649292 272.98355103]
[45.23371506 261.71749878]
[42.19392014 249.45271301]
[41.97498322 236.81007385]
[44.59188461 224.43041992]
[49.91575623 212.94218445]
[57.68021393 202.92938232]
[67.49470520 194.90199280]
[78.86412048 189.27000427]
[91.21381378 186.32240295]
[83.66686249 173.48135376]
[91.60876465 159.79791260]
[91.83209229 144.79956055]
[92.05541992 129.80122375]
[80.01972961 123.49507141]
[71.86203766 112.62872314]
[69.16567993 99.31124115]
[72.45400238 86.12744904]
[81.08876801 75.63619232]
[93.39404297 69.87374878]
[93.84064484 54.88039780]
[94.28725433 39.88705063]
[94.73385620 24.89369965]
[87.41087341 10.86927700]
[95.52368164 -1.62198400]
[95.63534546 -16.62156868]
[95.41201782 -31.61990547]
[95.18869019 -46.61824417]
[94.96536255 -61.61658096]
[94.74203491 -76.61492157]
[93.51506042 -91.56465149]
[91.28994751 -106.39869690]
[81.59111786 -118.89842224]
[87.35483551 -132.63264465]
[85.12971497 -147.46669006]
[82.90460205 -162.30073547]
[67.79241180 -169.89796448]
[60.26108551 -184.85725403]
[63.10177994 -201.19409180]
[74.99980927 -212.50401306]
[72.55408478 -227.30328369]
[70.10835266 -242.10255432]
[67.66262817 -256.90182495]
[57.77877045 -269.25576782]
[63.33736801 -283.07427979]
[60.89163971 -297.87356567]
[45.85218048 -298.10678101]
[31.09609604 -301.02188110]
[17.09773827 -306.52511597]
[4.30709219 -314.43960571]
[-6.86467314 -324.51092529]
[-16.05843163 -336.41534424]
[-22.97864342 -349.77011108]
[-27.40285301 -364.14599609]
[-29.18883705 -379.08087158]
[-28.27918625 -394.09460449]
[-24.70314217 -408.70458984]
[-18.57565689 -422.44116211]
[-10.09370804 -434.86279297]
[0.47004795 -445.57009888]
[12.77602863 -454.21896362]
[26.42864799 -460.53131104]
[40.98903275 -464.30422974]
[55.98912048 -465.41647339]
[70.94673157 -463.83224487]
[85.38102722 -459.60250854]
[98.82801819 -452.86318970]
[110.85542297 -443.83096313]
[121.07662964 -432.79614258]
[129.16305542 -420.11352539]
[134.85475159 -406.19070435]
[137.96876526 -391.47531128]
[138.40499878 -376.44036865]
[136.14941406 -361.56918335]
[131.27452087 -347.33981323]
[123.93702698 -334.20965576]
[114.37281036 -322.60079956]
[102.88931274 -312.88644409]
[89.85569000 -305.37881470]
[75.69091034 -300.31927490]
[78.13664246 -285.52001953]
[87.84555817 -274.22460938]
[82.46189880 -259.34756470]
[84.90762329 -244.54827881]
[87.35335541 -229.74900818]
[89.79907990 -214.94973755]
[102.23852539 -210.10182190]
[110.72619629 -199.65655518]
[112.96208191 -186.27482605]
[108.25669098 -173.43435669]
[97.73863983 -164.52584839]
[99.96376038 -149.69180298]
[102.18887329 -134.85775757]
[111.72855377 -123.41905975]
[106.12398529 -108.62380981]
[108.34910583 -93.78977203]
[115.81848145 -106.79778290]
[129.08544922 -113.79690552]
[144.03907776 -112.61838531]
[156.04583740 -103.62740326]
[161.38528442 -89.60990143]
[158.40295410 -74.90937042]
[148.02294922 -64.08091736]
[133.46160889 -60.47986221]
[119.23094940 -65.22203064]
[109.74037170 -76.83824921]
[109.96369934 -61.83990860]
[110.18702698 -46.84157181]
[110.41035461 -31.84323311]
[110.63368225 -16.84489632]
[112.89547729 -14.13996601]
[113.95948029 -10.20512867]
[113.26190186 -5.61528301]
[110.51702881 -1.17537808]
[117.87196350 11.77661991]
[109.72721100 25.34030533]
[109.28060150 40.33365631]
[108.83399963 55.32700729]
[108.38739014 70.32035828]
[122.17838287 78.56757355]
[129.94912720 92.63255310]
[129.59028625 108.69739532]
[121.19925690 122.40136719]
[107.05376434 130.02455139]
[106.83043671 145.02288818]
[106.60710907 160.02124023]
[114.13808441 173.93507385]
[106.21215057 186.54573059]
[122.94520569 191.86361694]
[137.21693420 202.06088257]
[147.64952087 216.13995361]
[153.23979187 232.72914124]
[153.45570374 250.21624756]
[148.28700256 266.90530396]
[138.24511719 281.18099976]
[124.31259155 291.66500854]
[107.84698486 297.34918213]
[108.51676941 312.33422852]
[116.86256409 325.77514648]
[109.70128632 338.83520508]
[110.37107086 353.82025146]
[111.48671722 368.77871704]
[113.04724121 383.69732666]
[114.60776520 398.61590576]
[116.16828918 413.53451538]
[127.53826141 420.75521851]
[132.59967041 433.02682495]
[129.71186829 445.78387451]
[120.14765930 454.41842651]
[121.48589325 469.35861206]
[122.82412720 484.29879761]
[135.80203247 489.51770020]
[145.22029114 499.77014160]
[149.28289795 513.01678467]
[147.25154114 526.65576172]
[139.57901001 538.03387451]
[127.80991364 544.96246338]
[128.92556763 559.92089844]
[130.04121399 574.87939453]
[131.15686035 589.83782959]
[145.98329163 592.63769531]
[159.57943726 599.18041992]
[171.01829529 609.01989746]
[179.51994324 621.48522949]
[184.50471497 635.72650146]
[185.63275146 650.77276611]
[182.82714844 665.59814453]
[176.27917480 679.19177246]
[166.43530273 690.62683105]
[153.96669006 699.12365723]
[139.72348022 704.10290527]
[124.67678070 705.22515869]
[109.85251617 702.41381836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 197]
[10 196]
[11 195]
[12 194]
[17 188]
[18 187]
[19 186]
[22 182]
[23 181]
[24 180]
[25 179]
[30 178]
[31 177]
[33 175]
[34 174]
[47 165]
[49 163]
[50 162]
[51 161]
[57 156]
[58 155]
[59 154]
[60 153]
[62 151]
[63 147]
[64 146]
[65 145]
[66 144]
[67 143]
[68 133]
[69 132]
[71 130]
[72 129]
[73 128]
[77 123]
[78 122]
[79 121]
[80 120]
[82 118]
[83 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
