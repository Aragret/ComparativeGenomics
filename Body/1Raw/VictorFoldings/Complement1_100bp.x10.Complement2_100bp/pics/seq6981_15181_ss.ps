%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[52.09167862 612.89068604]
[51.70283127 628.19122314]
[44.23787308 641.55285645]
[31.41219139 649.90515137]
[16.17303658 651.32873535]
[2.02225399 645.49664307]
[-7.78841019 633.74890137]
[-11.00453758 618.78509521]
[-6.88708401 604.04382324]
[3.61778808 592.91247559]
[18.09613609 587.94903564]
[20.32125473 573.11499023]
[22.54637146 558.28094482]
[20.42987633 551.19982910]
[24.91663170 543.24322510]
[27.36235809 528.44396973]
[29.80808640 513.64471436]
[32.25381470 498.84542847]
[34.69953918 484.04617310]
[37.14526749 469.24688721]
[39.59099579 454.44763184]
[34.03239822 440.62911987]
[43.91625595 428.27517700]
[36.86106873 412.20684814]
[48.66310501 398.07202148]
[50.88822174 383.23797607]
[53.11333847 368.40393066]
[55.33845520 353.56988525]
[49.57473755 339.83566284]
[59.27356720 327.33593750]
[61.49868393 312.50189209]
[63.61330795 297.65170288]
[65.61732483 282.78616333]
[63.39563370 275.73733521]
[67.76343536 267.71487427]
[69.98854828 252.88081360]
[72.21366882 238.04676819]
[74.43878174 223.21272278]
[76.55340576 208.36253357]
[69.47111511 198.55601501]
[71.01903534 186.15489197]
[80.90855408 177.87478638]
[83.13367462 163.04074097]
[85.35878754 148.20669556]
[87.58390808 133.37266541]
[89.80902100 118.53861237]
[92.03414154 103.70457458]
[90.43677521 101.10881805]
[89.74859619 97.87448120]
[90.20793915 94.33718872]
[91.92581940 90.91590881]
[94.85868073 88.06436157]
[97.96279144 73.38906097]
[101.06689453 58.71375656]
[102.73844147 43.80718231]
[102.96176910 28.80884552]
[103.18509674 13.81050682]
[103.40842438 -1.18783009]
[103.18509674 -16.18616676]
[102.51531219 -31.17120552]
[101.84552002 -46.15624619]
[101.17573547 -61.14128494]
[100.50595093 -76.12631989]
[97.69528198 -80.52487183]
[96.92944336 -85.10382080]
[97.93474579 -89.05406189]
[100.15601349 -91.79236603]
[100.15601349 -106.79236603]
[100.15601349 -121.79236603]
[89.61166382 -111.12387848]
[74.68886566 -109.60395813]
[62.21012878 -117.92748260]
[57.88056183 -132.28906250]
[63.67958450 -146.12277222]
[76.95596313 -153.10401917]
[91.63991547 -150.04107666]
[101.01873016 -138.33253479]
[102.57925415 -153.25112915]
[104.13977814 -168.16973877]
[105.70030212 -183.08834839]
[107.26082611 -198.00694275]
[108.37647247 -212.96539307]
[101.26309967 -227.09729004]
[109.56098938 -239.46638489]
[110.23077393 -254.45143127]
[103.11740112 -268.58331299]
[111.41528320 -280.95242310]
[108.71244812 -286.98617554]
[109.36460876 -292.63168335]
[112.33468628 -296.37167358]
[113.45033264 -311.33013916]
[114.56598663 -326.28857422]
[115.68163300 -341.24703979]
[107.30334473 -357.64477539]
[117.74218750 -371.75143433]
[118.63500977 -386.72482300]
[104.31555939 -391.48043823]
[91.71540833 -399.78097534]
[81.69366455 -411.06045532]
[74.93360901 -424.54986572]
[71.89617157 -439.32946777]
[72.78843689 -454.39154053]
[77.54957581 -468.70913696]
[85.85496521 -481.30609131]
[97.13832855 -491.32348633]
[110.63034058 -498.07833862]
[125.41110992 -501.11004639]
[140.47283936 -500.21197510]
[154.78862000 -495.44531250]
[167.38235474 -487.13507080]
[177.39538574 -475.84783936]
[184.14501953 -462.35321045]
[187.17103577 -447.57125854]
[186.26713562 -432.50988770]
[181.49494934 -418.19595337]
[173.17984009 -405.60543823]
[161.88874817 -395.59674072]
[148.39151001 -388.85232544]
[133.60841370 -385.83200073]
[132.71559143 -370.85861206]
[140.50764465 -361.60601807]
[139.88636780 -349.12411499]
[130.64009094 -340.13137817]
[129.52442932 -325.17294312]
[128.40878296 -310.21447754]
[127.29313660 -295.25604248]
[126.40032196 -280.28262329]
[133.56159973 -267.22256470]
[125.21581268 -253.78163147]
[124.54602814 -238.79660034]
[131.70730591 -225.73652649]
[123.36151123 -212.29560852]
[125.15149689 -210.13827515]
[126.19478607 -207.14192200]
[126.16752625 -203.58740234]
[124.85342407 -199.86749268]
[122.17942810 -196.44642639]
[120.61890411 -181.52781677]
[119.05838776 -166.60920715]
[117.49786377 -151.69061279]
[115.93733978 -136.77200317]
[115.15601349 -121.79236603]
[115.15601349 -106.79236603]
[115.15601349 -91.79236603]
[115.49098969 -76.79610443]
[116.16077423 -61.81106949]
[116.83055878 -46.82603073]
[117.50035095 -31.84099197]
[118.17013550 -16.85595322]
[120.14544678 -14.86691475]
[121.45189667 -11.97558308]
[121.74186707 -8.43279839]
[120.76487732 -4.61049414]
[118.40676117 -0.96450239]
[118.18343353 14.03383541]
[117.96010590 29.03217316]
[117.73677826 44.03050995]
[125.77852631 31.36835098]
[138.22994995 23.00401306]
[152.99275208 20.34703255]
[167.57914734 23.84515953]
[179.53108215 32.90889740]
[186.83444214 46.01084518]
[188.25846863 60.94309616]
[183.56320190 75.18930817]
[173.53987122 86.34873199]
[159.87757874 92.54082489]
[144.87867737 92.72209167]
[131.07072449 86.86200714]
[120.78062439 75.94808197]
[115.74220276 61.81786728]
[112.63809204 76.49317169]
[109.53398132 91.16847229]
[106.86818695 105.92968750]
[104.64306641 120.76373291]
[102.41795349 135.59777832]
[100.19283295 150.43182373]
[97.96771240 165.26586914]
[95.74259949 180.09991455]
[102.87806702 197.07537842]
[91.41893768 210.36654663]
[93.37377167 219.28935242]
[89.27282715 225.43785095]
[87.04770660 240.27189636]
[84.82259369 255.10592651]
[82.59747314 269.93997192]
[80.48284912 284.79016113]
[78.47883606 299.65570068]
[80.43367767 308.57852173]
[76.33272552 314.72698975]
[74.10761261 329.56103516]
[79.71217346 344.35629272]
[70.17250061 355.79501343]
[67.94738007 370.62902832]
[65.72226715 385.46307373]
[63.49715042 400.29711914]
[70.52204895 411.11441040]
[68.36334991 423.42391968]
[58.71552658 430.72088623]
[64.09918976 445.59796143]
[54.39026642 456.89337158]
[51.94453812 471.69262695]
[49.49880981 486.49191284]
[47.05308533 501.29116821]
[44.60735703 516.09045410]
[42.16162872 530.88970947]
[39.71590042 545.68896484]
[37.38041306 560.50604248]
[35.15529633 575.34008789]
[32.93017960 590.17413330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 210]
[12 209]
[13 208]
[15 207]
[16 206]
[17 205]
[18 204]
[19 203]
[20 202]
[21 201]
[23 199]
[25 196]
[26 195]
[27 194]
[28 193]
[30 191]
[31 190]
[32 188]
[33 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 181]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[52 173]
[53 172]
[54 171]
[55 157]
[56 156]
[57 155]
[58 154]
[59 149]
[60 148]
[61 147]
[62 146]
[63 145]
[67 144]
[68 143]
[69 142]
[77 141]
[78 140]
[79 139]
[80 138]
[81 137]
[82 132]
[84 130]
[85 129]
[87 127]
[90 126]
[91 125]
[92 124]
[93 123]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
