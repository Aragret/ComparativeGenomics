%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[100.44523621 426.96469116]
[113.15749359 418.88098145]
[108.12058258 404.75195312]
[103.08366394 390.62292480]
[98.04674530 376.49389648]
[93.00983429 362.36486816]
[89.99803162 360.53146362]
[87.72463226 357.14816284]
[86.90841675 352.57791138]
[88.07888031 347.49096680]
[83.67787933 333.15112305]
[79.27688599 318.81127930]
[74.87588501 304.47143555]
[72.46997833 319.27722168]
[67.17189026 333.31039429]
[59.19263458 346.01202393]
[48.85002899 356.87622070]
[36.55601120 365.47024536]
[22.80024719 371.45178223]
[8.13062477 374.58264160]
[-6.86856937 374.73806763]
[-21.59992409 371.91192627]
[-35.47669601 366.21673584]
[-47.94617844 357.87933350]
[-58.51171494 347.23184204]
[-66.75248718 334.69830322]
[-72.34026337 320.77792358]
[-75.05249786 306.02517700]
[-74.78114319 291.02761841]
[-71.53701782 276.38262939]
[-65.44934082 262.67349243]
[-56.76057053 250.44627380]
[-45.81678391 240.18792725]
[-33.05386353 232.30708313]
[-18.98015404 227.11759949]
[-4.15620613 224.82618713]
[10.82754803 225.52410889]
[25.37431335 229.18356323]
[38.90469360 235.65881348]
[50.87978363 244.69192505]
[60.82262039 255.92314148]
[68.33718109 268.90509033]
[73.12322998 283.11666870]
[75.12724304 268.25115967]
[76.79878235 253.34457397]
[78.13701630 238.40438843]
[71.56604004 225.03758240]
[80.50367737 211.98272705]
[81.84191132 197.04254150]
[79.30769348 190.09996033]
[83.31291199 181.89044189]
[84.87343597 166.97184753]
[86.43395996 152.05323792]
[79.06283569 142.46192932]
[80.24083710 130.02023315]
[89.87944031 121.44934082]
[91.66191101 106.55562592]
[92.88888550 91.60589600]
[93.55867004 76.62085724]
[94.22845459 61.63581467]
[94.89823914 46.65077591]
[95.56802368 31.66573715]
[95.67968750 16.66615295]
[95.23308563 1.67280304]
[94.78647614 -13.32054710]
[94.22827148 -28.31015587]
[93.55848694 -43.29519653]
[90.32811737 -49.06375504]
[90.47401428 -54.74493027]
[93.09857941 -58.73500443]
[92.87525177 -73.73333740]
[92.65192413 -88.73167419]
[92.42859650 -103.73001862]
[92.20526886 -118.72835541]
[78.11760712 -131.39532471]
[77.76838684 -150.01763916]
[90.91265106 -162.75907898]
[90.24286652 -177.74411011]
[89.57308197 -192.72915649]
[88.90329742 -207.71418762]
[88.23351288 -222.69923401]
[76.85269928 -233.33477783]
[76.38690948 -248.54129028]
[86.59642029 -259.32559204]
[85.92663574 -274.31063843]
[85.25685120 -289.29568481]
[84.02987671 -304.24542236]
[82.24741364 -319.13912964]
[80.46494293 -334.03283691]
[78.68247986 -348.92657471]
[76.90001678 -363.82028198]
[62.00107956 -366.30993652]
[48.40767670 -372.89752197]
[37.22175980 -383.04895020]
[29.35012817 -395.94137573]
[25.43089104 -410.52960205]
[25.78176880 -425.63104248]
[30.37431526 -440.02148438]
[38.83623505 -452.53439331]
[50.48155594 -462.15536499]
[64.36624146 -468.10449219]
[79.36473083 -469.89950562]
[94.26116180 -467.39486694]
[107.84793854 -460.79364014]
[119.02364349 -450.63095093]
[126.88232422 -437.73065186]
[130.78691101 -423.13848877]
[130.42085266 -408.03741455]
[125.81385803 -393.65158081]
[117.33937073 -381.14718628]
[105.68438721 -371.53793335]
[91.79373169 -365.60275269]
[93.57619476 -350.70901489]
[95.35866547 -335.81530762]
[97.14112854 -320.92160034]
[98.92359161 -306.02786255]
[110.10536957 -316.02627563]
[124.91893005 -313.66860962]
[132.44425964 -300.69290161]
[127.13397980 -286.66433716]
[112.90261841 -281.92425537]
[100.24188995 -289.96545410]
[100.91167450 -274.98043823]
[101.58145905 -259.99539185]
[112.71238708 -250.16491699]
[113.60511780 -234.97750854]
[103.21855164 -223.36901855]
[103.88833618 -208.38397217]
[104.55812073 -193.39894104]
[105.22790527 -178.41389465]
[105.89768982 -163.42886353]
[115.78587341 -157.73762512]
[121.76068878 -147.87774658]
[122.23886871 -136.23880005]
[116.98603058 -125.70747375]
[107.20360565 -118.95168304]
[107.42693329 -103.95334625]
[107.65026093 -88.95500183]
[107.87358856 -73.95666504]
[108.09691620 -58.95833206]
[108.54352570 -43.96498108]
[109.21331024 -28.97994232]
[112.65234375 -22.43816566]
[109.77983093 -13.76715279]
[110.22643280 1.22619712]
[110.67304230 16.21954727]
[122.70223999 7.25861406]
[137.24638367 10.92846298]
[143.58407593 24.52381897]
[137.04339600 38.02268982]
[122.44589996 41.47421265]
[110.55306244 32.33552170]
[109.88327789 47.32056046]
[109.21349335 62.30559921]
[108.54370880 77.29064178]
[107.87392426 92.27568054]
[120.53628540 84.23425293]
[134.76719666 88.97568512]
[140.07615662 103.00476074]
[132.54959106 115.97976685]
[117.73581696 118.33602142]
[106.55562592 108.33808899]
[104.77316284 123.23181152]
[112.41088867 139.98730469]
[101.35256195 153.61375427]
[99.79203796 168.53236389]
[98.23152161 183.45097351]
[96.78209686 198.38078308]
[95.44386292 213.32096863]
[101.91912079 227.75639343]
[93.07720184 239.74263000]
[91.73896790 254.68281555]
[93.93679810 259.41741943]
[94.08400726 264.05764771]
[92.55996704 267.83816528]
[89.99277496 270.25515747]
[87.98875427 285.12069702]
[89.21573639 300.07043457]
[93.61672974 314.41027832]
[98.01773071 328.75012207]
[102.41872406 343.08996582]
[107.13886261 357.32794189]
[112.17578125 371.45700073]
[117.21269226 385.58602905]
[122.24961090 399.71505737]
[127.28652954 413.84408569]
[142.24566650 412.06307983]
[157.22599792 413.65600586]
[171.47612000 418.54290771]
[184.28125000 426.47866821]
[194.99908447 437.06524658]
[203.09202576 449.77163696]
[208.15412903 463.96044922]
[209.93150330 478.92001343]
[208.33496094 493.89996338]
[203.44461060 508.14889526]
[195.50573730 520.95208740]
[184.91656494 531.66735840]
[172.20822144 539.75726318]
[158.01817322 544.81591797]
[143.05816650 546.58966064]
[128.07861328 544.98950195]
[113.83085632 540.09570312]
[101.02957916 532.15368652]
[90.31687164 521.56195068]
[82.23008728 508.85162354]
[77.17485809 494.66036987]
[75.40474701 479.69992065]
[77.00853729 464.72076416]
[81.90579224 450.47418213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[10 181]
[11 180]
[12 179]
[13 178]
[43 177]
[44 176]
[45 172]
[46 171]
[48 169]
[49 168]
[51 167]
[52 166]
[53 165]
[56 163]
[57 162]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[63 146]
[64 145]
[65 144]
[66 142]
[67 141]
[70 140]
[71 139]
[72 138]
[73 137]
[74 136]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[84 124]
[85 123]
[86 122]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
