%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[9.95484257 301.78094482]
[10.91555023 316.76037598]
[10.52963161 331.76562500]
[8.80019379 346.67584229]
[5.74116135 361.37103271]
[1.37716496 375.73284912]
[-4.25665855 389.64566040]
[-11.11494827 402.99746704]
[-19.14248466 415.68069458]
[-28.27463341 427.59332275]
[-38.43786240 438.63934326]
[-49.55035019 448.72988892]
[-61.52261734 457.78366089]
[-74.25827026 465.72781372]
[-87.65476227 472.49835205]
[-101.60424042 478.04077148]
[-115.99438477 482.31042480]
[-130.70932007 485.27297974]
[-145.63059998 486.90454102]
[-160.63804626 487.19201660]
[-175.61083984 486.13302612]
[-190.42845154 483.73614502]
[-204.97154236 480.02069092]
[-219.12301636 475.01651001]
[-232.76896667 468.76394653]
[-245.79948425 461.31332397]
[-258.10968018 452.72467041]
[-269.60043335 443.06707764]
[-280.17919922 432.41833496]
[-289.76083374 420.86416626]
[-298.26818848 408.49761963]
[-305.63275146 395.41827393]
[-311.79519653 381.73141479]
[-316.70599365 367.54724121]
[-320.32550049 352.97998047]
[-322.62466431 338.14691162]
[-323.58489990 323.16744995]
[-323.19851685 308.16220093]
[-321.46862793 293.25201416]
[-318.40914917 278.55691528]
[-314.04470825 264.19525146]
[-308.41046143 250.28260803]
[-301.55178833 236.93103027]
[-293.52386475 224.24803162]
[-284.39132690 212.33570862]
[-274.22778320 201.28997803]
[-263.11499023 191.19978333]
[-251.14242554 182.14636230]
[-238.40653992 174.20260620]
[-225.00984192 167.43247986]
[-211.06019592 161.89048767]
[-196.66992188 157.62126160]
[-181.95487976 154.65916443]
[-167.03356934 153.02804565]
[-152.02610779 152.74104309]
[-137.05332947 153.80047607]
[-122.23580933 156.19779968]
[-107.69283295 159.91372681]
[-93.54149628 164.91831970]
[-79.89575195 171.17131042]
[-66.86544800 178.62231445]
[-54.55551910 187.21136475]
[-43.06507111 196.86930847]
[-32.48661804 207.51837158]
[-20.94031715 197.94325256]
[-16.08249474 183.86309814]
[-0.52072632 181.00968933]
[11.02557564 171.43457031]
[22.57187653 161.85945129]
[34.11817932 152.28433228]
[45.30015182 142.28616333]
[56.10231018 131.87878418]
[59.89944458 117.47631836]
[75.20588684 113.47338867]
[86.00804138 103.06600952]
[90.06169128 89.68470001]
[103.58458710 86.13182831]
[104.63694000 81.91916656]
[106.76142120 78.59484863]
[109.54710388 76.38682556]
[112.55125427 75.36618805]
[115.35322571 75.45038605]
[126.75569153 65.70442200]
[138.15815735 55.95845413]
[149.56062317 46.21249008]
[150.94508362 30.69730186]
[162.64764404 20.97593880]
[177.43046570 22.39143753]
[188.83293152 12.64547253]
[187.74966431 -2.72113824]
[195.82803345 -15.62824249]
[209.79238892 -21.23724365]
[224.20928955 -17.59157372]
[229.67251587 -32.43959045]
[244.37449646 -34.82727814]
[255.77696228 -44.57324219]
[267.17944336 -54.31921005]
[278.58187866 -64.06517792]
[269.83239746 -76.26026917]
[262.14865112 -89.15344238]
[255.58602905 -102.65180206]
[250.19178772 -116.65808868]
[246.00482178 -131.07138062]
[243.05526733 -145.78784180]
[241.36437988 -160.70141602]
[240.94436646 -175.70466614]
[241.79824829 -190.68948364]
[243.91986084 -205.54789734]
[247.29391479 -220.17286682]
[251.89611816 -234.45899963]
[257.69329834 -248.30335999]
[264.64367676 -261.60623169]
[272.69720459 -274.27172852]
[281.79580688 -286.20858765]
[291.87399292 -297.33084106]
[302.85906982 -307.55831909]
[314.67196655 -316.81735229]
[327.22750854 -325.04119873]
[340.43527222 -332.17065430]
[354.20007324 -338.15429688]
[368.42276001 -342.94903564]
[383.00079346 -346.52032471]
[397.82922363 -348.84243774]
[412.80111694 -349.89865112]
[427.80868530 -349.68133545]
[442.74374390 -348.19204712]
[457.49868774 -345.44155884]
[471.96722412 -341.44964600]
[486.04510498 -336.24508667]
[499.63085938 -329.86538696]
[512.62664795 -322.35650635]
[524.93884277 -313.77252197]
[536.47863770 -304.17535400]
[547.16302490 -293.63406372]
[556.91491699 -282.22467041]
[565.66406250 -270.02935791]
[573.34747314 -257.13598633]
[579.90979004 -243.63745117]
[585.30364990 -229.63102722]
[589.49023438 -215.21762085]
[592.43939209 -200.50109863]
[594.12988281 -185.58747864]
[594.54956055 -170.58421326]
[593.69525146 -155.59942627]
[591.57330322 -140.74105835]
[588.19885254 -126.11618042]
[583.59625244 -111.83016205]
[577.79876709 -97.98593903]
[570.84802246 -84.68326569]
[562.79418945 -72.01798248]
[553.69525146 -60.08134460]
[543.61676025 -48.95935822]
[532.63140869 -38.73215866]
[520.81829834 -29.47343636]
[508.26254272 -21.24990082]
[495.05459595 -14.12080193]
[481.28964233 -8.13750744]
[467.06683350 -3.34312844]
[452.48867798 0.22779194]
[437.66021729 2.54952455]
[422.68829346 3.60534072]
[407.68072510 3.38763356]
[392.74572754 1.89797127]
[377.99084473 -0.85291278]
[363.52239990 -4.84519815]
[349.44467163 -10.05011940]
[335.85906982 -16.43017578]
[322.86346436 -23.93939590]
[310.55151367 -32.52367401]
[299.01193237 -42.12116623]
[288.32785034 -52.66271210]
[276.92538452 -42.91674423]
[265.52291870 -33.17078018]
[254.12046814 -23.42481422]
[249.47282410 -9.27389240]
[233.95526123 -6.18911028]
[235.31176758 8.61959934]
[227.59693909 21.54033089]
[213.58944702 27.51055527]
[198.57890320 24.04793549]
[187.17643738 33.79389954]
[186.27299500 48.61683655]
[174.84811401 58.66306305]
[159.30657959 57.61495209]
[147.90411377 67.36091614]
[136.50166321 77.10688019]
[125.09919739 86.85284424]
[113.99195862 96.93399048]
[109.93830872 110.31529999]
[96.41541290 113.86817169]
[85.61325836 124.27554321]
[81.04347992 139.42240906]
[66.50968170 142.68093872]
[55.70752716 153.08831787]
[70.42747498 155.97329712]
[77.48478699 169.20939636]
[71.67707825 183.03945923]
[57.28556824 187.26846313]
[44.91915131 178.77896118]
[43.69329834 163.83062744]
[32.14699554 173.40574646]
[20.60069466 182.98088074]
[9.05439377 192.55599976]
[3.37070179 207.32102966]
[-11.36519814 209.48956299]
[-22.91149902 219.06468201]
[-14.40377903 231.43095398]
[-7.03882360 244.51008606]
[-0.87593383 258.19677734]
[4.03526974 272.38076782]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 206]
[65 205]
[67 203]
[68 202]
[69 201]
[70 200]
[71 194]
[72 193]
[74 191]
[75 190]
[77 188]
[82 187]
[83 186]
[84 185]
[85 184]
[88 181]
[89 180]
[93 176]
[95 174]
[96 173]
[97 172]
[98 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
