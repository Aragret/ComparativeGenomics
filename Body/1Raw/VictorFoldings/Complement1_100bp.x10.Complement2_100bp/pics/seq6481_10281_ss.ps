%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[97.56293488 517.16131592]
[82.54297638 516.48999023]
[67.83840179 513.35540771]
[53.85036850 507.84320068]
[40.96046829 500.10366821]
[29.52035522 490.34796143]
[19.84212303 478.84222412]
[12.18980026 465.90036011]
[6.77214766 451.87542725]
[3.73696327 437.15002441]
[3.16704893 422.12588501]
[5.07795238 407.21286011]
[9.41754246 392.81777954]
[16.06743240 379.33340454]
[24.84620857 367.12753296]
[35.51437759 356.53320312]
[47.78091049 347.83941650]
[61.31115723 341.28332520]
[75.73600769 337.04382324]
[90.66194916 335.23651123]
[91.33173370 320.25149536]
[92.00151825 305.26644897]
[92.67130280 290.28140259]
[85.51001740 277.22134399]
[93.85581207 263.78042603]
[94.52559662 248.79537964]
[95.19538116 233.81033325]
[95.86516571 218.82530212]
[96.53495789 203.84025574]
[88.60601044 194.70469666]
[89.04138184 182.21493530]
[98.15275574 173.08554077]
[99.04557037 158.11213684]
[99.93838501 143.13873291]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[76.05947876 63.38951111]
[80.78572845 49.26464844]
[77.46347046 34.63718796]
[63.35713577 28.44707108]
[55.69020081 15.29140663]
[57.22180557 0.32082948]
[67.15609741 -10.74478912]
[63.83383560 -25.37224960]
[60.51157379 -39.99971008]
[57.18931580 -54.62717056]
[53.86705399 -69.25463104]
[50.54479599 -83.88208771]
[47.22253799 -98.50955200]
[43.90027618 -113.13700867]
[40.83870316 -116.21608734]
[39.09186935 -119.75347137]
[38.64241409 -123.27957916]
[39.32225037 -126.37867737]
[40.84319305 -128.73342896]
[30.95933723 -141.08737183]
[36.51793289 -154.90588379]
[34.07220840 -169.70515442]
[31.62648010 -184.50442505]
[16.66873360 -183.27209473]
[1.66031253 -183.26306152]
[-13.29890537 -184.47738647]
[-28.10936737 -186.90701294]
[-42.67250824 -190.53573608]
[-56.89141464 -195.33943176]
[-70.67146301 -201.28613281]
[-83.92093658 -208.33624268]
[-96.55167389 -216.44285583]
[-108.47961426 -225.55203247]
[-119.62537384 -235.60314941]
[-129.91477966 -246.52929688]
[-139.27937317 -258.25778198]
[-147.65679932 -270.71054077]
[-154.99134827 -283.80471802]
[-161.23416138 -297.45315552]
[-166.34373474 -311.56503296]
[-170.28604126 -326.04644775]
[-173.03486633 -340.80099487]
[-174.57189941 -355.73049927]
[-174.88690186 -370.73562622]
[-173.97779846 -385.71649170]
[-171.85063171 -400.57339478]
[-168.51956177 -415.20751953]
[-164.00674438 -429.52139282]
[-158.34222412 -443.41979980]
[-151.56369019 -456.81027222]
[-143.71626282 -469.60363770]
[-134.85215759 -481.71481323]
[-125.03037262 -493.06317139]
[-114.31626892 -503.57321167]
[-102.78113556 -513.17492676]
[-90.50174713 -521.80450439]
[-77.55982971 -529.40447998]
[-64.04149628 -535.92425537]
[-50.03672409 -541.32049561]
[-35.63870621 -545.55718994]
[-20.94326019 -548.60626221]
[-6.04818678 -550.44732666]
[8.94739056 -551.06817627]
[23.94367599 -550.46472168]
[38.84086990 -548.64086914]
[53.53983688 -545.60882568]
[67.94274902 -541.38879395]
[81.95376587 -536.00878906]
[95.47962952 -529.50463867]
[108.43034363 -521.91967773]
[120.71971130 -513.30432129]
[132.26594543 -503.71594238]
[142.99221802 -493.21835327]
[152.82714844 -481.88134766]
[161.70526123 -469.78045654]
[169.56750488 -456.99615479]
[176.36152649 -443.61355591]
[182.04214478 -429.72171021]
[186.57151794 -415.41305542]
[189.91954041 -400.78283691]
[192.06390381 -385.92840576]
[192.99035645 -370.94860840]
[192.69271851 -355.94311523]
[191.17297363 -341.01184082]
[188.44123840 -326.25411987]
[184.51570129 -311.76815796]
[179.42247009 -297.65036011]
[173.19544983 -283.99472046]
[165.87608337 -270.89205933]
[157.51306152 -258.42959595]
[148.16207886 -246.69027710]
[137.88531494 -235.75222778]
[126.75120544 -225.68821716]
[114.83381653 -216.56523132]
[102.21247101 -208.44400024]
[88.97116852 -201.37854004]
[75.19801331 -195.41590881]
[60.98468018 -190.59574890]
[46.42575073 -186.95016479]
[48.87147903 -172.15089417]
[51.31720352 -157.35162354]
[61.02612686 -146.05621338]
[55.64246368 -131.17916870]
[58.52773666 -116.45926666]
[61.84999847 -101.83181000]
[65.17225647 -87.20434570]
[68.49451447 -72.57688904]
[71.81677246 -57.94942856]
[75.13903809 -43.32196808]
[78.46129608 -28.69450951]
[81.78355408 -14.06704807]
[95.52316284 -8.37835979]
[103.37128448 4.46184683]
[102.13936615 19.63866234]
[92.09092712 31.31492805]
[95.41318512 45.94238663]
[105.77721405 56.63987732]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[117.12792969 110.35319519]
[124.97549438 97.56977844]
[136.20265198 87.62238312]
[149.83816528 81.37155151]
[164.70240784 79.35805511]
[179.50949097 81.75607300]
[192.97843933 88.35815430]
[203.94406128 98.59315491]
[211.45770264 111.57564545]
[214.86938477 126.18250275]
[213.88395691 141.15010071]
[208.58665466 155.18357849]
[199.43576050 167.06892395]
[187.22291565 175.77789307]
[173.00465393 180.55711365]
[158.01098633 180.99311829]
[143.53903198 177.04818726]
[130.84074402 169.06361389]
[121.01467133 157.73011780]
[114.91178894 144.03155518]
[114.01897430 159.00495911]
[113.12615967 173.97836304]
[121.74765015 190.24954224]
[111.51999664 204.51005554]
[110.85020447 219.49508667]
[110.18041992 234.48013306]
[109.51063538 249.46516418]
[108.84085083 264.45019531]
[115.95422363 278.58209229]
[107.65634155 290.95120239]
[106.98655701 305.93621826]
[106.31677246 320.92126465]
[105.64698792 335.90631104]
[120.35216522 339.03802490]
[134.34126282 344.54754639]
[147.23265076 352.28460693]
[158.67463684 362.03808594]
[168.35508728 373.54196167]
[176.00990295 386.48233032]
[181.43026733 400.50622559]
[184.46829224 415.23104858]
[185.04109192 430.25509644]
[183.13305664 445.16848755]
[178.79624939 459.56439209]
[172.14895630 473.05004883]
[163.37252808 485.25759888]
[152.70640564 495.85400391]
[140.44154358 504.55017090]
[126.91255951 511.10885620]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 194]
[21 193]
[22 192]
[23 191]
[25 189]
[26 188]
[27 187]
[28 186]
[29 185]
[32 183]
[33 182]
[34 181]
[35 161]
[36 160]
[38 158]
[39 157]
[41 155]
[42 154]
[46 150]
[47 149]
[48 148]
[49 147]
[50 146]
[51 145]
[52 144]
[53 143]
[58 142]
[60 140]
[61 139]
[62 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
