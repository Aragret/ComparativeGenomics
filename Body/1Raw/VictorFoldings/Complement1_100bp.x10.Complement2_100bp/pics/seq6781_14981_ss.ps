%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[70.76619720 587.49261475]
[71.74394989 572.21838379]
[79.71791077 559.15411377]
[92.85570526 551.30194092]
[91.96289062 536.32855225]
[91.07007599 521.35510254]
[90.17726135 506.38171387]
[89.28444672 491.40832520]
[88.28018188 476.44198608]
[87.16453552 461.48352051]
[86.04888916 446.52505493]
[74.63020325 437.03036499]
[73.28569031 421.87625122]
[83.32202148 409.96368408]
[82.20637512 395.00521851]
[80.86814117 380.06503296]
[79.30761719 365.14642334]
[77.74709320 350.22781372]
[76.18656921 335.30923462]
[69.06333923 348.50994873]
[56.67313004 356.96472168]
[41.78394699 358.78463745]
[27.72206688 353.56320190]
[17.62895393 342.46682739]
[13.75943565 327.97454834]
[16.97797012 313.32391357]
[26.56552887 301.78793335]
[40.38022995 295.94378662]
[55.33582687 297.09704590]
[68.09120941 304.99011230]
[75.79679108 317.85961914]
[76.68960571 302.88623047]
[77.58242798 287.91281128]
[78.47524261 272.93939209]
[68.65819550 264.59344482]
[65.39183807 251.92802429]
[70.08563232 239.51113892]
[81.23558044 231.95513916]
[82.35122681 216.99668884]
[83.46688080 202.03822327]
[84.58252716 187.07977295]
[85.69817352 172.12132263]
[83.06087494 165.21723938]
[86.94342041 156.94900513]
[88.28165436 142.00881958]
[80.76854706 132.52832031]
[81.76117706 120.07045746]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[94.47799683 57.19044876]
[91.15573120 42.56298828]
[87.83347321 27.93552780]
[82.88108826 20.26013184]
[84.57235718 13.06559181]
[81.46824646 -1.60971045]
[78.36413574 -16.28501320]
[75.26002502 -30.96031570]
[62.29036331 -35.62706757]
[53.39084625 -46.01057053]
[50.80482483 -59.32905579]
[55.10277939 -72.08333588]
[65.06072998 -80.97610474]
[54.81343079 -93.03029633]
[59.95813751 -107.00817871]
[57.07286453 -121.72807312]
[54.18759155 -136.44796753]
[51.30231857 -151.16786194]
[48.41704559 -165.88774109]
[45.53177261 -180.60763550]
[42.64649963 -195.32752991]
[39.76122665 -210.04742432]
[36.87595367 -224.76731873]
[33.99068451 -239.48719788]
[23.74338341 -251.54139709]
[28.88808823 -265.51928711]
[26.00281715 -280.23916626]
[23.11754417 -294.95904541]
[20.23227119 -309.67895508]
[17.34699821 -324.39883423]
[14.37845612 -327.56771851]
[12.73771858 -331.15554810]
[12.39344883 -334.69345093]
[13.16525459 -337.77093506]
[14.75563431 -340.07937622]
[12.75162029 -354.94488525]
[10.74760723 -369.81042480]
[1.23595417 -382.45318604]
[7.20351601 -396.10006714]
[5.19950247 -410.96557617]
[-9.71323204 -413.43576050]
[-23.23459435 -420.19329834]
[-34.16227341 -430.63729858]
[-41.52458954 -443.83911133]
[-44.66688919 -458.62481689]
[-43.30976486 -473.67968750]
[-37.57388306 -487.66510010]
[-27.96928024 -499.33740234]
[-15.34999180 -507.65875244]
[-0.83811319 -511.88922119]
[14.27596760 -511.65261841]
[28.64831543 -506.97000122]
[41.00095367 -498.25772095]
[50.23549271 -486.29049683]
[55.53080368 -472.13241577]
[56.41603088 -457.04241943]
[52.81246185 -442.36230469]
[45.04051971 -429.39743042]
[33.79128647 -419.30056763]
[20.06503105 -412.96960449]
[22.06904411 -398.10406494]
[31.43735695 -386.52459717]
[25.61313438 -371.81445312]
[27.61714935 -356.94891357]
[29.62116241 -342.08337402]
[32.06689072 -327.28411865]
[34.95216370 -312.56420898]
[37.83743668 -297.84432983]
[40.72270584 -283.12445068]
[43.60797882 -268.40454102]
[53.64890671 -257.40322876]
[48.71057510 -242.37248230]
[51.59584808 -227.65258789]
[54.48112106 -212.93269348]
[57.36639023 -198.21279907]
[60.25166321 -183.49290466]
[63.13693619 -168.77302551]
[66.02220917 -154.05313110]
[68.90748596 -139.33323669]
[71.79275513 -124.61334229]
[74.67802429 -109.89345551]
[84.71895599 -98.89212799]
[79.78062439 -83.86138153]
[94.88307190 -77.42759705]
[103.25863647 -63.11635590]
[101.43553925 -46.46770477]
[89.93533325 -34.06442642]
[93.03944397 -19.38912201]
[96.14355469 -4.71382046]
[99.24765778 9.96148205]
[102.46093750 24.61326981]
[105.78319550 39.24073029]
[109.10545349 53.86819077]
[112.68809509 39.30231476]
[119.87197113 26.13447952]
[130.18060303 15.23805809]
[142.93026733 7.33577204]
[157.27531433 2.95175052]
[172.26429749 2.37677050]
[186.90303040 5.64896822]
[200.22059631 12.55131054]
[211.33369446 22.62598991]
[219.50521851 35.20478821]
[224.19319153 49.45339966]
[225.08666992 64.42676544]
[222.12638855 79.13175964]
[215.50869751 92.59304810]
[205.67253113 103.91778564]
[193.27027893 112.35485840]
[179.12454224 117.34465027]
[164.17355347 118.55622101]
[149.40895081 115.90920258]
[135.81002808 109.57916260]
[124.27876282 99.98594666]
[115.57995605 87.76584625]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[114.07606506 129.55746460]
[103.22183990 143.34704590]
[101.88360596 158.28723145]
[100.65663147 173.23696899]
[99.54097748 188.19541931]
[98.42533112 203.15388489]
[97.30968475 218.11233521]
[96.19403076 233.07078552]
[107.85028076 246.11499023]
[106.49287415 263.21679688]
[93.44864655 273.83221436]
[92.55583191 288.80563354]
[91.66301727 303.77902222]
[90.77020264 318.75244141]
[91.10517883 333.74868774]
[92.66569519 348.66729736]
[94.22621918 363.58590698]
[95.78674316 378.50451660]
[99.35472870 384.07055664]
[99.54724884 389.75036621]
[97.16482544 393.88955688]
[98.28047943 408.84802246]
[109.97290039 419.14001465]
[110.89123535 434.32589722]
[101.00733948 445.40942383]
[102.12298584 460.36785889]
[103.23863983 475.32632446]
[106.99765015 483.65142822]
[104.25785065 490.51550293]
[105.15066528 505.48889160]
[106.04347992 520.46234131]
[106.93629456 535.43572998]
[107.82911682 550.40911865]
[121.80690765 556.64447021]
[131.27680969 568.66864014]
[134.06268311 583.71844482]
[129.52438354 598.33563232]
[118.70475769 609.16125488]
[104.09008026 613.70770264]
[89.03870392 610.93017578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[9 197]
[10 196]
[11 195]
[14 192]
[15 191]
[16 188]
[17 187]
[18 186]
[19 185]
[31 184]
[32 183]
[33 182]
[34 181]
[38 178]
[39 177]
[40 176]
[41 175]
[42 174]
[44 173]
[45 172]
[48 170]
[50 168]
[51 167]
[52 144]
[53 143]
[54 142]
[56 141]
[57 140]
[58 139]
[59 138]
[64 134]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[86 116]
[87 115]
[88 114]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
