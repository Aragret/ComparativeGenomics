%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[139.00956726 737.74792480]
[125.29432678 731.66198730]
[111.98398590 724.73510742]
[99.13003540 716.99414062]
[86.78220367 708.46905518]
[74.98825836 699.19274902]
[63.79383469 689.20117188]
[53.24224091 678.53302002]
[43.37429428 667.22943115]
[34.22817993 655.33428955]
[25.83927917 642.89349365]
[18.24004555 629.95526123]
[11.45987988 616.56958008]
[5.52501440 602.78833008]
[0.45841041 588.66473389]
[-3.72033095 574.25341797]
[-6.99504280 559.61029053]
[-9.35305595 544.79180908]
[-10.78524685 529.85546875]
[-11.28607559 514.85894775]
[-10.85360432 499.86026001]
[-9.48950577 484.91751099]
[-7.19905806 470.08847046]
[-3.99112177 455.43054199]
[0.12189163 441.00036621]
[5.12406969 426.85382080]
[10.99606037 413.04562378]
[17.71514511 399.62921143]
[25.25532913 386.65646362]
[33.58744049 374.17758179]
[42.67924500 362.24084473]
[52.49556351 350.89242554]
[62.99842453 340.17626953]
[74.14719391 330.13375854]
[85.89873505 320.80383301]
[98.20758057 312.22253418]
[111.02612305 304.42306519]
[124.30474854 297.43560791]
[137.99211121 291.28720093]
[152.03523254 286.00164795]
[147.63423157 271.66180420]
[143.23323059 257.32196045]
[138.83222961 242.98210144]
[134.43122864 228.64225769]
[123.30027771 218.74523926]
[126.64808655 203.28228760]
[122.24708557 188.94244385]
[117.63307953 174.66970825]
[112.80708313 160.46725464]
[107.98108673 146.26480103]
[103.15509033 132.06234741]
[91.73439026 122.50112152]
[94.62033081 106.94535065]
[92.01038361 105.37128448]
[89.91548920 102.81277466]
[88.70137787 99.45877075]
[88.65884399 95.63065338]
[89.95726013 91.75160217]
[85.98516846 77.28707886]
[74.86969757 66.02843475]
[78.96052551 51.70661926]
[74.98843384 37.24209595]
[69.69826508 29.79549217]
[71.06658936 22.53260803]
[67.31028748 8.01054859]
[63.55398941 -6.51151037]
[52.60737991 -17.93439674]
[56.91098404 -32.19371796]
[43.57560349 -40.24389648]
[39.97305298 -55.02484131]
[47.72985077 -67.68847656]
[43.97354889 -82.21053314]
[40.21725082 -96.73259735]
[36.46094894 -111.25465393]
[32.70464706 -125.77671051]
[28.94834709 -140.29876709]
[14.00724411 -138.69213867]
[-1.00856233 -139.27815247]
[-15.77900887 -142.04432678]
[-29.98926353 -146.93171692]
[-43.33643341 -153.83612061]
[-55.53602219 -162.61039734]
[-66.32799530 -173.06750488]
[-75.48232269 -184.98455811]
[-82.80387878 -198.10754395]
[-88.13659668 -212.15673828]
[-91.36682129 -226.83268738]
[-92.42569733 -241.82258606]
[-91.29064941 -256.80688477]
[-87.98587036 -271.46621704]
[-82.58181000 -285.48812866]
[-75.19364929 -298.57373047]
[-65.97886658 -310.44412231]
[-55.13388062 -320.84622192]
[-42.88985443 -329.55838013]
[-29.50776100 -336.39486694]
[-15.27284908 -341.20996094]
[-0.48853344 -343.90103149]
[14.53005791 -344.41070557]
[29.46280098 -342.72814941]
[43.99140549 -338.88922119]
[57.80619431 -332.97570801]
[70.61270142 -325.11367798]
[82.13795471 -315.47073364]
[92.13629150 -304.25241089]
[100.39460754 -291.69781494]
[106.73686218 -278.07452393]
[111.02787781 -263.67297363]
[113.17619324 -248.80007935]
[113.13600922 -233.77290344]
[110.90818024 -218.91172791]
[106.54020691 -204.53330994]
[100.12518311 -190.94415283]
[91.79985046 -178.43388367]
[81.74165344 -167.26919556]
[70.16499329 -157.68801880]
[57.31661987 -149.89460754]
[43.47040558 -144.05506897]
[47.22670746 -129.53302002]
[50.98300934 -115.01095581]
[54.73930740 -100.48889923]
[58.49560928 -85.96683502]
[62.25191116 -71.44477844]
[75.17621613 -64.13054657]
[79.19251251 -49.45662689]
[71.43304443 -35.95001984]
[82.11097717 -25.56584740]
[78.07604980 -10.26781082]
[81.83235168 4.25424814]
[85.58865356 18.77630806]
[89.45295715 33.27000046]
[93.42504883 47.73452377]
[104.25640869 57.95856476]
[100.44969177 73.31497955]
[104.42178345 87.77950287]
[108.82278442 102.11935425]
[120.58866882 112.69642639]
[117.35754395 127.23634338]
[122.18354034 141.43879700]
[127.00953674 155.64125061]
[131.83554077 169.84370422]
[136.54769897 174.48127747]
[137.99342346 179.97735596]
[136.58692932 184.54144287]
[140.98793030 198.88128662]
[152.43368530 209.80398560]
[148.77108765 224.24125671]
[153.17207336 238.58110046]
[157.57307434 252.92094421]
[161.97407532 267.26080322]
[166.37507629 281.60064697]
[180.96549988 278.09838867]
[195.74545288 275.50997925]
[210.65771484 273.84542847]
[225.64462280 273.11120605]
[240.64819336 273.31015015]
[255.61036682 274.44146729]
[270.47326660 276.50079346]
[285.17938232 279.48016357]
[299.67181396 283.36804199]
[313.89453125 288.14938354]
[327.79244995 293.80572510]
[341.31185913 300.31512451]
[354.40039062 307.65246582]
[367.00747681 315.78930664]
[379.08428955 324.69418335]
[390.58413696 334.33267212]
[401.46252441 344.66741943]
[411.67733765 355.65850830]
[421.18908691 367.26339722]
[429.96096802 379.43716431]
[437.95901489 392.13272095]
[445.15234375 405.30096436]
[451.51306152 418.89096069]
[457.01660156 432.85009766]
[461.64166260 447.12438965]
[465.37033081 461.65859985]
[468.18820190 476.39651489]
[470.08438110 491.28112793]
[471.05151367 506.25479126]
[471.08584595 521.25964355]
[470.18728638 536.23760986]
[468.35928345 551.13073730]
[465.60891724 565.88134766]
[461.94680786 580.43249512]
[457.38714600 594.72784424]
[451.94757080 608.71203613]
[445.64913940 622.33099365]
[438.51617432 635.53204346]
[430.57632446 648.26403809]
[421.86026001 660.47784424]
[412.40176392 672.12615967]
[402.23736572 683.16387939]
[391.40640259 693.54833984]
[379.95080566 703.23937988]
[367.91488647 712.19946289]
[355.34518433 720.39392090]
[342.29037476 727.79107666]
[328.80090332 734.36236572]
[314.92901611 740.08221436]
[300.72836304 744.92864990]
[286.25387573 748.88281250]
[271.56155396 751.92950439]
[256.70825195 754.05682373]
[241.75140381 755.25665283]
[226.74890137 755.52429199]
[211.75878906 754.85870361]
[196.83905029 753.26245117]
[182.04742432 750.74169922]
[167.44110107 747.30627441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 151]
[41 150]
[42 149]
[43 148]
[44 147]
[46 145]
[47 144]
[48 141]
[49 140]
[50 139]
[51 138]
[53 136]
[58 135]
[59 134]
[61 132]
[62 131]
[64 130]
[65 129]
[66 128]
[68 126]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
