%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[77.27937317 484.43319702]
[79.32263947 469.49075317]
[85.01850891 455.52624512]
[94.00892639 443.41741943]
[105.72875214 433.92550659]
[119.44126129 427.64715576]
[116.77546692 412.88592529]
[114.10967255 398.12472534]
[111.44387817 383.36349487]
[101.56785583 372.21389771]
[106.72942352 357.25833130]
[96.85340881 346.10873413]
[102.01497650 331.15316772]
[95.45895386 344.64459229]
[83.09120941 353.13220215]
[68.14465332 354.39727783]
[54.52627945 348.10922241]
[45.79589081 335.91168213]
[44.23559189 320.99304199]
[50.25324631 307.25302124]
[62.27584457 298.28323364]
[77.16072083 296.42837524]
[91.01699066 302.17324829]
[100.22232056 314.01538086]
[99.77571106 299.02203369]
[99.32910919 284.02868652]
[98.88249969 269.03533936]
[98.43589783 254.04199219]
[88.42169189 239.63079834]
[97.28448486 223.48977661]
[96.61469269 208.50473022]
[95.94490814 193.51969910]
[95.27512360 178.53465271]
[94.60533905 163.54962158]
[85.89298248 155.15788269]
[85.21233368 142.67907715]
[93.47288513 132.77320862]
[93.02628326 117.77986145]
[82.55238342 107.76768494]
[82.12097931 93.28458405]
[91.98036957 82.66674042]
[91.53376007 67.67339325]
[91.08715820 52.68004227]
[90.64054871 37.68669510]
[90.19394684 22.69334412]
[87.78180695 19.08286476]
[86.74801636 15.27552986]
[86.98520660 11.72882080]
[88.24845886 8.81835842]
[90.19394684 6.80013180]
[90.64054871 -8.19321823]
[91.08715820 -23.18656731]
[91.53376007 -38.17991638]
[91.98036957 -53.17326736]
[89.09509277 -67.89315796]
[83.02126312 -81.60842896]
[76.94742584 -95.32369232]
[70.61115265 -101.90316010]
[70.88695526 -109.28866577]
[65.01799774 -123.09284973]
[59.14903259 -136.89701843]
[52.91141891 -143.57009888]
[53.29714966 -150.95068359]
[47.63436508 -164.84071350]
[35.25978088 -174.69871521]
[37.61974716 -189.40516663]
[31.95696068 -203.29519653]
[26.29417419 -217.18522644]
[20.63138771 -231.07525635]
[6.10029078 -227.26707458]
[-8.80356503 -225.38821411]
[-23.82515526 -225.47084045]
[-38.70744324 -227.51351929]
[-53.19577026 -231.48130798]
[-67.04222107 -237.30632019]
[-80.00987244 -244.88887024]
[-91.87682343 -254.09922791]
[-102.44001770 -264.77975464]
[-111.51869965 -276.74774170]
[-118.95752716 -289.79837036]
[-124.62921143 -303.70834351]
[-128.43670654 -318.23959351]
[-130.31484985 -333.14355469]
[-130.23152161 -348.16513062]
[-128.18812561 -363.04733276]
[-124.21963501 -377.53546143]
[-118.39396667 -391.38165283]
[-110.81079865 -404.34893799]
[-101.59988403 -416.21545410]
[-90.91883850 -426.77813721]
[-78.95043182 -435.85623169]
[-65.89945221 -443.29446411]
[-51.98921967 -448.96548462]
[-37.45776367 -452.77227783]
[-22.55372810 -454.64971924]
[-7.53214455 -454.56567383]
[7.34994793 -452.52154541]
[21.83789635 -448.55239868]
[35.68379593 -442.72604370]
[48.65072250 -435.14227295]
[60.51679611 -425.93078613]
[71.07897186 -415.24923706]
[80.15651703 -403.28039551]
[87.59410095 -390.22906494]
[93.26446533 -376.31857300]
[97.07057190 -361.78692627]
[98.94730377 -346.88281250]
[98.86253357 -331.86123657]
[96.81772614 -316.97921753]
[92.84786224 -302.49145508]
[87.02087402 -288.64584351]
[79.43647003 -275.67929077]
[70.22442627 -263.81365967]
[59.54237747 -253.25198364]
[47.57310104 -244.17500305]
[34.52141190 -236.73803711]
[40.18420029 -222.84800720]
[45.84698868 -208.95797729]
[51.50977325 -195.06796265]
[63.47931671 -186.20346069]
[61.52439117 -170.50349426]
[67.18717957 -156.61346436]
[72.95320892 -142.76599121]
[78.82217407 -128.96180725]
[84.69113159 -115.15763092]
[90.66269684 -101.39752960]
[96.73652649 -87.68225861]
[102.81036377 -73.96699524]
[103.45858765 -88.95298004]
[106.97872162 -103.53408813]
[113.23916626 -117.16518402]
[122.00585938 -129.33666992]
[132.95106506 -139.59350586]
[145.66557312 -147.55221558]
[159.67405701 -152.91526794]
[174.45278931 -155.48217773]
[189.44926453 -155.15695190]
[204.10282898 -151.95176697]
[217.86563110 -145.98643494]
[230.22315979 -137.48399353]
[240.71340942 -126.76230621]
[248.94419861 -114.22220612]
[254.60780334 -100.33251190]
[257.49249268 -85.61251068]
[257.49044800 -70.61251068]
[254.60168457 -55.89329910]
[248.93424988 -42.00516891]
[240.69999695 -29.46733665]
[230.20680237 -18.74853706]
[217.84692383 -10.24950218]
[204.08247375 -4.28797197]
[189.42802429 -1.08682454]
[174.43147278 -0.76573646]
[159.65344238 -3.33671188]
[145.64643860 -8.70363331]
[132.93411255 -16.66585350]
[121.99174500 -26.92570114]
[113.22840881 -39.09960175]
[106.97371674 -52.72666168]
[106.52711487 -37.73331070]
[106.08050537 -22.73996162]
[105.63390350 -7.74661207]
[105.18729401 7.24673796]
[105.18729401 22.24673843]
[105.63390350 37.24008942]
[106.08050537 52.23343658]
[106.52711487 67.22679138]
[106.97371674 82.22013855]
[117.44761658 92.23231506]
[117.87902069 106.71541595]
[108.01963043 117.33325958]
[108.46623993 132.32659912]
[118.50499725 147.76373291]
[109.59037781 162.87983704]
[110.26016235 177.86486816]
[110.92994690 192.84991455]
[111.59973145 207.83494568]
[112.26952362 222.81999207]
[121.24395752 232.08403015]
[121.49332428 244.57888794]
[113.42924500 253.59538269]
[113.87585449 268.58874512]
[114.32245636 283.58209229]
[114.76906586 298.57543945]
[115.21566772 313.56878662]
[116.77619171 328.48739624]
[126.84288788 340.69281006]
[121.49064636 354.59255981]
[131.55734253 366.79797363]
[126.20509338 380.69769287]
[128.87089539 395.45892334]
[131.53668213 410.22012329]
[134.20248413 424.98135376]
[149.24484253 426.06674194]
[163.54443359 430.85971069]
[176.20237732 439.05892944]
[186.42297363 450.14901733]
[193.56375122 463.43286133]
[197.17582703 478.07537842]
[197.03216553 493.15618896]
[193.14176941 507.72723389]
[185.74920654 520.87261963]
[175.31918335 531.76599121]
[162.50732422 539.72253418]
[148.11901855 544.24218750]
[133.05870056 545.04083252]
[118.27309418 542.06817627]
[104.69162750 535.51116943]
[93.16803741 525.78192139]
[84.42671204 513.49212646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 193]
[7 192]
[8 191]
[9 190]
[11 188]
[13 186]
[24 185]
[25 184]
[26 183]
[27 182]
[28 181]
[30 178]
[31 177]
[32 176]
[33 175]
[34 174]
[37 172]
[38 171]
[41 168]
[42 167]
[43 166]
[44 165]
[45 164]
[50 163]
[51 162]
[52 161]
[53 160]
[54 159]
[55 128]
[56 127]
[57 126]
[59 125]
[60 124]
[61 123]
[63 122]
[64 121]
[66 119]
[67 118]
[68 117]
[69 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
