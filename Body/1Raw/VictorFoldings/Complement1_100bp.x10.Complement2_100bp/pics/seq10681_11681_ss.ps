%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[213.24002075 198.70280457]
[201.55244446 189.30065918]
[189.86486816 179.89851379]
[172.40344238 178.14755249]
[165.89205933 160.92304993]
[154.06578064 151.69595337]
[142.23951721 142.46885681]
[130.41323853 133.24176025]
[118.58697510 124.01465607]
[106.76070404 114.78755951]
[90.09369659 112.89357758]
[83.96987915 97.27706909]
[90.69747162 110.68376923]
[94.53223419 125.18531036]
[95.31111908 140.16506958]
[93.00099945 154.98611450]
[87.70011139 169.01823425]
[79.63384247 181.66479492]
[69.14517975 192.38804626]
[56.68010712 200.73202515]
[42.76864624 206.34193420]
[28.00231552 208.97926331]
[13.00898933 208.53186035]
[-1.57380903 205.01873779]
[-15.12601089 198.58929443]
[-27.07137108 189.51689148]
[-36.90196609 178.18731689]
[-44.19979095 165.08229065]
[-48.65454483 150.75904846]
[-50.07680511 135.82662964]
[-48.40609741 120.91996002]
[-43.71346283 106.67288208]
[-36.19842911 93.69119263]
[-26.18054581 82.52687836]
[-14.08577538 73.65464020]
[-0.42839324 67.45174408]
[14.21088123 64.18193817]
[29.20957756 63.98424911]
[43.92994690 66.86708832]
[57.74606705 72.70787811]
[70.07060242 81.25836945]
[62.79737473 68.13967896]
[55.52414703 55.02098465]
[48.25091553 41.90229034]
[33.04784012 42.69464111]
[19.06534958 36.83145905]
[9.05607414 25.52506065]
[4.96519184 11.05351353]
[7.55256414 -3.69826388]
[16.25224304 -15.81358719]
[8.97901344 -28.93228149]
[1.70578396 -42.05097580]
[-5.56744528 -55.16967010]
[-12.84067535 -68.28836060]
[-20.11390495 -81.40705872]
[-27.38713455 -94.52574921]
[-41.14810944 -88.52738953]
[-55.41695786 -83.86427307]
[-70.06446075 -80.57862091]
[-84.95795441 -78.70020294]
[-99.96257019 -78.24601746]
[-114.94241333 -79.22019196]
[-129.76182556 -81.61389160]
[-144.28659058 -85.40544128]
[-158.38517761 -90.56050873]
[-171.92990112 -97.03240204]
[-184.79808044 -104.76251221]
[-196.87318420 -113.68083191]
[-208.04586792 -123.70659637]
[-218.21495056 -134.74900818]
[-227.28831482 -146.70805359]
[-235.18379211 -159.47543335]
[-241.82989502 -172.93553162]
[-247.16642761 -186.96643066]
[-251.14505005 -201.44107056]
[-253.72975159 -216.22836304]
[-254.89709473 -231.19439697]
[-254.63653564 -246.20361328]
[-252.95042419 -261.12011719]
[-249.85401917 -275.80877686]
[-245.37538147 -290.13659668]
[-239.55505371 -303.97381592]
[-232.44575500 -317.19512939]
[-224.11187744 -329.68075562]
[-214.62887573 -341.31765747]
[-204.08265686 -352.00045776]
[-192.56871033 -361.63235474]
[-180.19131470 -370.12619019]
[-167.06257629 -377.40499878]
[-153.30139160 -383.40283203]
[-139.03236389 -388.06546021]
[-124.38475037 -391.35055542]
[-109.49118042 -393.22845459]
[-94.48654938 -393.68206787]
[-79.50673676 -392.70736694]
[-64.68741608 -390.31311035]
[-50.16278458 -386.52102661]
[-36.06439209 -381.36544800]
[-22.51991081 -374.89306641]
[-9.65200806 -367.16247559]
[2.42277813 -358.24371338]
[13.59509659 -348.21755981]
[23.76376534 -337.17477417]
[32.83669281 -325.21539307]
[40.73171234 -312.44772339]
[47.37732315 -298.98739624]
[52.71334457 -284.95629883]
[56.69144440 -270.48150635]
[59.27559662 -255.69412231]
[60.44240189 -240.72805786]
[60.18129349 -225.71884155]
[58.49463272 -210.80239868]
[55.39769745 -196.11384583]
[50.91852951 -181.78619385]
[45.09770203 -167.94918823]
[37.98792267 -154.72814941]
[29.65358543 -142.24281311]
[20.17016792 -130.60624695]
[9.62355423 -119.92385101]
[-1.89074075 -110.29235077]
[-14.26844025 -101.79898071]
[-6.99521065 -88.68029022]
[0.27801904 -75.56159210]
[7.55124855 -62.44289780]
[14.82447815 -49.32420349]
[22.09770775 -36.20551300]
[29.37093735 -23.08681679]
[44.25528336 -24.04688263]
[58.13752747 -18.42614365]
[68.24410248 -7.28979874]
[72.53075409 7.18931627]
[70.09590149 22.15455818]
[61.36960983 34.62905884]
[68.64283752 47.74775314]
[75.91606903 60.86644745]
[83.18930054 73.98514557]
[93.01988220 85.31473541]
[104.63150024 84.41384125]
[113.86689758 91.50952148]
[115.98780060 102.96128845]
[127.81407166 112.18839264]
[139.64033508 121.41548920]
[151.46661377 130.64257812]
[163.29287720 139.86968994]
[175.11915588 149.09678650]
[187.99230957 148.29386902]
[197.65248108 156.22261047]
[199.26701355 168.21092224]
[210.95458984 177.61308289]
[222.64218140 187.01522827]
[233.16972351 176.31245422]
[244.71061707 166.71109009]
[257.15017700 158.30654907]
[270.36474609 151.18237305]
[284.22299194 145.40937805]
[298.58718872 141.04490662]
[313.31454468 138.13235474]
[328.25875854 136.70066833]
[343.27124023 136.76408386]
[358.20278931 138.32196045]
[372.90502930 141.35882568]
[387.23184204 145.84448242]
[401.04083252 151.73435974]
[414.19473267 158.96992493]
[426.56283569 167.47924805]
[438.02221680 177.17776489]
[448.45898438 187.96910095]
[457.76937866 199.74597168]
[465.86090088 212.39137268]
[472.65313721 225.77957153]
[478.07855225 239.77755737]
[482.08325195 254.24618530]
[484.62741089 269.04165649]
[485.68576050 284.01690674]
[485.24777222 299.02313232]
[483.31781006 313.91119385]
[479.91503906 328.53308105]
[475.07330322 342.74349976]
[468.84069824 356.40121460]
[461.27917480 369.37048340]
[452.46389771 381.52239990]
[442.48245239 392.73623657]
[431.43408203 402.90045166]
[419.42852783 411.91412354]
[406.58520508 419.68759155]
[393.03167725 426.14364624]
[378.90267944 431.21810913]
[364.33862305 434.86053467]
[349.48428345 437.03472900]
[334.48727417 437.71908569]
[319.49664307 436.90679932]
[304.66140747 434.60595703]
[290.12896729 430.83938599]
[276.04379272 425.64456177]
[262.54583740 419.07312012]
[249.76927185 411.19033813]
[237.84107971 402.07458496]
[226.87982178 391.81646729]
[216.99443054 380.51788330]
[208.28314209 368.29119873]
[200.83255005 355.25787354]
[194.71669006 341.54748535]
[189.99636841 327.29626465]
[186.71847534 312.64587402]
[184.91560364 297.74191284]
[184.60566711 282.73248291]
[185.79174805 267.76681519]
[188.46205139 252.99359131]
[192.59004211 238.55966187]
[198.13468933 224.60847473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 140]
[12 137]
[41 136]
[42 135]
[43 134]
[44 133]
[50 127]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
