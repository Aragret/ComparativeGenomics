%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[124.82173157 400.59286499]
[135.13345337 389.52380371]
[148.36198425 382.18481445]
[145.47671509 367.46490479]
[142.59143066 352.74502563]
[132.55050659 341.74368286]
[137.48884583 326.71295166]
[134.60357666 311.99304199]
[131.71829224 297.27316284]
[128.83302307 282.55328369]
[125.94775391 267.83337402]
[115.90682983 256.83206177]
[120.84516144 241.80130005]
[110.80423737 230.79998779]
[115.74256134 215.76922607]
[105.70163727 204.76791382]
[110.63996887 189.73716736]
[107.75469971 175.01727295]
[104.86942291 160.29737854]
[92.63950348 147.71183777]
[98.75192261 130.34175110]
[95.64781189 115.66644287]
[84.11772156 103.48313141]
[89.49098969 87.59275055]
[86.16873169 72.96529388]
[82.84647369 58.33782959]
[79.52421570 43.71037292]
[76.20195007 29.08291054]
[63.38130569 15.86502647]
[69.22184753 -0.68353891]
[65.68217468 -15.25991440]
[62.14249802 -29.83629036]
[57.52783966 -15.56376648]
[47.56775665 -4.34785318]
[33.94069290 1.92137063]
[18.94305229 2.18743134]
[5.10220003 -3.59450698]
[-5.24943733 -14.45008659]
[-10.36742687 -28.54995155]
[-9.38929844 -43.51802444]
[-2.47988272 -56.83192825]
[9.19646168 -66.24803162]
[23.67206573 -70.17955017]
[38.50753784 -67.96396637]
[51.20283508 -59.97463989]
[59.61921310 -47.55637360]
[58.94942474 -62.54141235]
[58.27964020 -77.52645111]
[49.93384933 -90.96736908]
[57.09512711 -104.02743530]
[56.42534256 -119.01247406]
[55.75555801 -133.99751282]
[54.97423553 -148.97715759]
[54.08142090 -163.95056152]
[50.97731018 -178.62585449]
[45.73059082 -192.67832947]
[40.48387527 -206.73080444]
[35.23715591 -220.78327942]
[23.16156960 -231.00534058]
[25.95835495 -245.63502502]
[20.71163559 -259.68750000]
[15.46491814 -273.73995972]
[10.21819973 -287.79241943]
[4.97148132 -301.84490967]
[-0.27523670 -315.89736938]
[-5.52195501 -329.94985962]
[-20.08881760 -326.30477905]
[-34.97220993 -324.31362915]
[-49.98495483 -324.00143433]
[-64.93825531 -325.37213135]
[-79.64405823 -328.40850830]
[-93.91741180 -333.07232666]
[-107.57883453 -339.30496216]
[-120.45649719 -347.02801514]
[-132.38845825 -356.14437866]
[-143.22467041 -366.53939819]
[-152.82884216 -378.08236694]
[-161.08020020 -390.62808228]
[-167.87496948 -404.01879883]
[-173.12770081 -418.08609009]
[-176.77233887 -432.65307617]
[-178.76304626 -447.53652954]
[-179.07478333 -462.54928589]
[-177.70362854 -477.50253296]
[-174.66683960 -492.20825195]
[-170.00259399 -506.48147583]
[-163.76954651 -520.14270020]
[-156.04609680 -533.02014160]
[-146.92936707 -544.95184326]
[-136.53402710 -555.78771973]
[-124.99077606 -565.39154053]
[-112.44480896 -573.64251709]
[-99.05389404 -580.43688965]
[-84.98644257 -585.68920898]
[-70.41936493 -589.33343506]
[-55.53585434 -591.32366943]
[-40.52308655 -591.63494873]
[-25.56987000 -590.26336670]
[-10.86425018 -587.22613525]
[3.40882993 -582.56146240]
[17.06987381 -576.32800293]
[29.94707680 -568.60418701]
[41.87849808 -559.48706055]
[52.71408463 -549.09143066]
[62.31756973 -537.54785156]
[70.56817627 -525.00164795]
[77.36214447 -511.61053467]
[82.61403656 -497.54293823]
[86.25779724 -482.97573853]
[88.24761200 -468.09216309]
[88.55845642 -453.07940674]
[87.18640900 -438.12622070]
[84.14873505 -423.42068481]
[79.48363495 -409.14776611]
[73.24977875 -395.48690796]
[65.52555847 -382.60992432]
[56.40811539 -370.67877197]
[46.01211548 -359.84350586]
[34.46829605 -350.24035645]
[21.92183495 -341.99014282]
[8.53051662 -335.19656372]
[13.77723503 -321.14410400]
[19.02395248 -307.09161377]
[24.27067184 -293.03915405]
[29.51738930 -278.98666382]
[34.76410675 -264.93420410]
[40.01082611 -250.88172913]
[51.71113205 -241.66479492]
[49.28962708 -226.02999878]
[54.53634644 -211.97752380]
[59.78306198 -197.92504883]
[65.02978516 -183.87257385]
[66.75881958 -198.77259827]
[72.56255341 -212.60432434]
[81.98329163 -224.27693176]
[94.27806091 -232.86987305]
[108.47724915 -237.70545959]
[123.46105194 -238.40237427]
[138.04777527 -234.90560913]
[151.08706665 -227.49096680]
[161.55058289 -216.74317932]
[168.61311340 -203.50985718]
[171.71769714 -188.83465576]
[170.61949158 -173.87492371]
[165.40510559 -159.81042480]
[156.48576355 -147.75035095]
[144.56488037 -138.64581299]
[130.58258057 -133.21484375]
[115.64157867 -131.88574219]
[100.92018127 -134.76332092]
[87.57938385 -141.62066650]
[76.67127991 -151.91694641]
[69.05482483 -164.84336853]
[69.94763947 -149.86996460]
[73.48369598 -143.38012695]
[70.74060059 -134.66729736]
[71.41038513 -119.68225861]
[72.08016968 -104.69721985]
[80.37805176 -92.32813263]
[73.26467896 -78.19623566]
[73.93446350 -63.21119690]
[74.60424805 -48.22615814]
[76.71887207 -33.37596130]
[80.25854492 -18.79958725]
[83.79821777 -4.22321129]
[93.96205139 2.33599186]
[97.03030396 14.45084190]
[90.82941437 25.76065063]
[94.15167236 40.38811111]
[97.47393036 55.01557159]
[100.79619598 69.64303589]
[104.11845398 84.27049255]
[113.58132935 91.05983734]
[116.07622528 102.43598175]
[110.32312012 112.56233978]
[113.42723083 127.23764038]
[123.79205322 134.91442871]
[126.07535553 147.20143127]
[119.58931732 157.41210938]
[122.47458649 172.13200378]
[125.35986328 186.85188293]
[135.60716248 198.90608215]
[130.46246338 212.88395691]
[140.70974731 224.93815613]
[135.56504822 238.91603088]
[145.81234741 250.97021484]
[140.66764832 264.94812012]
[143.55291748 279.66799927]
[146.43818665 294.38787842]
[149.32345581 309.10778809]
[152.20874023 323.82766724]
[162.45603943 335.88186646]
[157.31132507 349.85974121]
[160.19659424 364.57965088]
[163.08187866 379.29953003]
[178.10214233 381.10144043]
[191.82957458 387.45852661]
[202.91932678 397.74798584]
[210.28492737 410.96173096]
[213.20475769 425.80523682]
[211.39277649 440.82427979]
[205.02648926 454.54745483]
[194.72961426 465.63031006]
[181.51094055 472.98706055]
[166.66546631 475.89694214]
[151.64764404 474.07489014]
[137.92872620 467.69943237]
[126.85277557 457.39511108]
[119.50489807 444.17150879]
[116.60495758 429.32409668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 195]
[4 194]
[5 193]
[7 191]
[8 190]
[9 189]
[10 188]
[11 187]
[13 185]
[15 183]
[17 181]
[18 180]
[19 179]
[21 176]
[22 175]
[24 172]
[25 171]
[26 170]
[27 169]
[28 168]
[30 165]
[31 164]
[32 163]
[46 162]
[47 161]
[48 160]
[50 158]
[51 157]
[52 156]
[53 154]
[54 153]
[55 132]
[56 131]
[57 130]
[58 129]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
