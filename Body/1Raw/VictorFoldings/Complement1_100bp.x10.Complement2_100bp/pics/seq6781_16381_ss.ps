%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[-15.80866814 337.04293823]
[-13.37425137 351.85644531]
[-12.40355396 366.83724976]
[-12.90592480 381.84106445]
[-14.87652683 396.72338867]
[-18.29638100 411.34088135]
[-23.13254929 425.55279541]
[-29.33845901 439.22222900]
[-36.85433960 452.21755981]
[-45.60781097 464.41360474]
[-55.51456833 475.69293213]
[-66.47919464 485.94686890]
[-78.39610291 495.07672119]
[-91.15052032 502.99453735]
[-104.61961365 509.62405396]
[-118.67365265 514.90142822]
[-133.17730713 518.77581787]
[-147.99087524 521.20996094]
[-162.97169495 522.18035889]
[-177.97549438 521.67767334]
[-192.85778809 519.70678711]
[-207.47521973 516.28662109]
[-221.68702698 511.45016479]
[-235.35633850 505.24398804]
[-248.35150146 497.72784424]
[-260.54739380 488.97412109]
[-271.82650757 479.06713867]
[-282.08023071 468.10229492]
[-291.20983887 456.18521118]
[-299.12741089 443.43063354]
[-305.75665283 429.96142578]
[-311.03372192 415.90725708]
[-314.90783691 401.40353394]
[-317.34167480 386.58993530]
[-318.31176758 371.60906982]
[-317.80877686 356.60528564]
[-315.83758545 341.72305298]
[-312.41714478 327.10568237]
[-307.58041382 312.89395142]
[-301.37396240 299.22476196]
[-293.85757446 286.22976685]
[-285.10360718 274.03405762]
[-275.19641113 262.75512695]
[-264.23135376 252.50161743]
[-252.31408691 243.37225342]
[-239.55935669 235.45495605]
[-226.08999634 228.82598877]
[-212.03573608 223.54917908]
[-197.53193665 219.67535400]
[-182.71827698 217.24182129]
[-167.73741150 216.27201843]
[-152.73362732 216.77529907]
[-137.85142517 218.74679565]
[-123.23412323 222.16752625]
[-109.02250671 227.00454712]
[-95.35343933 233.21127319]
[-82.35857391 240.72793579]
[-70.16305542 249.48213196]
[-58.88433075 259.38955688]
[-47.92842102 249.14418030]
[-36.97251129 238.89878845]
[-26.01660156 228.65339661]
[-22.00545692 214.30905151]
[-6.64111614 210.53445435]
[4.31479311 200.28906250]
[15.27070236 190.04367065]
[26.22661209 179.79827881]
[37.18252182 169.55288696]
[47.18069458 158.37091064]
[56.14138794 146.34153748]
[65.10208893 134.31216431]
[74.06278229 122.28278351]
[75.46080017 107.45393372]
[89.90973663 101.00887299]
[91.81671906 93.17714691]
[99.09448242 88.86843109]
[108.23328400 76.97380066]
[117.37208557 65.07916260]
[126.51088715 53.18453217]
[135.64968872 41.28989792]
[129.90020752 27.11630821]
[132.00323486 12.06725216]
[141.29479980 0.17048056]
[155.20060730 -5.44060659]
[169.94859314 -3.35193300]
[179.08740234 -15.24656582]
[188.22619629 -27.14119911]
[197.36500549 -39.03583145]
[198.60910034 -45.52919388]
[202.37968445 -49.78121567]
[206.95726013 -51.14318085]
[216.44615173 -62.76044083]
[225.93505859 -74.37770844]
[235.42395020 -85.99497223]
[244.56275940 -97.88960266]
[253.34335327 -110.05105591]
[255.14849854 -125.76895142]
[268.87182617 -131.55854797]
[257.71942139 -141.61195374]
[247.71937561 -152.81224060]
[238.98893738 -165.02809143]
[231.63047791 -178.11625671]
[225.73023987 -191.92330933]
[221.35743713 -206.28735352]
[218.56332397 -221.03997803]
[217.38064575 -236.00822449]
[217.82328796 -251.01660156]
[219.88604736 -265.88912964]
[223.54475403 -280.45144653]
[228.75650024 -294.53283691]
[235.46017456 -307.96813965]
[243.57719421 -320.59991455]
[253.01239014 -332.27999878]
[263.65515137 -342.87145996]
[275.38064575 -352.25012207]
[288.05145264 -360.30606079]
[301.51898193 -366.94479370]
[315.62536621 -372.08847046]
[330.20516968 -375.67678833]
[345.08749390 -377.66772461]
[360.09783936 -378.03787231]
[375.06021118 -376.78292847]
[389.79916382 -373.91760254]
[404.14193726 -369.47546387]
[417.92031860 -363.50863647]
[430.97280884 -356.08706665]
[443.14633179 -347.29772949]
[454.29821777 -337.24371338]
[464.29763794 -326.04287720]
[473.02743530 -313.82656860]
[480.38519287 -300.73800659]
[486.28466797 -286.93066406]
[490.65670776 -272.56637573]
[493.45004272 -257.81359863]
[494.63189697 -242.84527588]
[494.18844604 -227.83692932]
[492.12487793 -212.96450806]
[488.46539307 -198.40237427]
[483.25289917 -184.32128906]
[476.54849243 -170.88632202]
[468.43078613 -158.25500488]
[458.99496460 -146.57543945]
[448.35165405 -135.98454285]
[436.62564087 -126.60649109]
[423.95440674 -118.55124664]
[410.48651123 -111.91324615]
[396.37985229 -106.77032471]
[381.79983521 -103.18277740]
[366.91741943 -101.19265747]
[351.90707397 -100.82331085]
[336.94476318 -102.07905579]
[322.20596313 -104.94518280]
[307.86343384 -109.38807678]
[294.08535767 -115.35565186]
[281.03326416 -122.77794647]
[279.85620117 -107.92992401]
[265.50482178 -101.27045441]
[256.72421265 -89.10900116]
[257.03732300 -86.32330322]
[256.26583862 -83.24573517]
[254.29307556 -80.28877258]
[251.15367126 -77.89949036]
[247.04121399 -76.50607300]
[237.55232239 -64.88880920]
[228.06341553 -53.27154541]
[218.57452393 -41.65428162]
[209.25964355 -29.89702988]
[200.12083435 -18.00239563]
[190.98204041 -6.10776377]
[181.84323120 5.78686953]
[187.66078186 19.49896812]
[185.82151794 34.38093948]
[176.72000122 46.42372894]
[162.72068787 52.33271408]
[147.54432678 50.42869949]
[138.40551758 62.32333374]
[129.26672363 74.21796417]
[120.12792206 86.11260223]
[110.98911285 98.00723267]
[101.93911743 109.96956635]
[99.90016937 125.65884399]
[86.09215546 131.24348450]
[77.13146210 143.27285767]
[68.17076874 155.30223083]
[59.21007156 167.33161926]
[73.25997925 162.07803345]
[88.20556641 163.35453796]
[101.16107178 170.91461182]
[109.62499237 183.29856873]
[111.96307373 198.11521912]
[107.72386932 212.50372314]
[97.72590637 223.68589783]
[83.89963531 229.50260925]
[68.91468811 228.83076477]
[55.66442490 221.80006409]
[46.70726395 209.76805115]
[43.77269745 195.05790710]
[47.42791367 180.50880432]
[36.47200394 190.75419617]
[25.51609421 200.99958801]
[14.56018448 211.24497986]
[3.60427523 221.49037170]
[-1.19050920 236.56752014]
[-15.77120972 239.60929871]
[-26.72711945 249.85469055]
[-37.68302917 260.10009766]
[-48.63893890 270.34548950]
[-39.50885391 282.26220703]
[-31.59079170 295.01644897]
[-24.96101189 308.48541260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 207]
[60 206]
[61 205]
[62 204]
[64 202]
[65 201]
[66 200]
[67 199]
[68 198]
[69 185]
[70 184]
[71 183]
[72 182]
[74 180]
[76 179]
[77 178]
[78 177]
[79 176]
[80 175]
[85 170]
[86 169]
[87 168]
[88 167]
[91 166]
[92 165]
[93 164]
[94 163]
[95 158]
[96 157]
[98 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
