%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[131.51943970 846.75616455]
[116.97241974 843.07855225]
[102.67665863 838.52087402]
[88.68534851 833.10015869]
[75.05052185 826.83660889]
[61.82291794 819.75341797]
[49.05173492 811.87701416]
[36.78448868 803.23669434]
[25.06680679 793.86456299]
[13.94228554 783.79547119]
[3.45230889 773.06695557]
[-6.36410093 761.71887207]
[-15.47042561 749.79345703]
[-23.83278847 737.33508301]
[-31.42008209 724.39001465]
[-38.20407867 711.00653076]
[-44.15954208 697.23431396]
[-49.26432037 683.12469482]
[-53.49942017 668.73010254]
[-56.84908676 654.10406494]
[-59.30085754 639.30102539]
[-60.84561539 624.37603760]
[-61.47761154 609.38470459]
[-61.19449615 594.38262939]
[-59.99732208 579.42578125]
[-57.89054489 564.56976318]
[-54.88199615 549.86975098]
[-50.98287201 535.38055420]
[-46.20767593 521.15594482]
[-40.57417297 507.24896240]
[-34.10332108 493.71127319]
[-26.81919289 480.59326172]
[-18.74888229 467.94372559]
[-9.92241669 455.80972290]
[-0.37262705 444.23635864]
[9.86495876 433.26672363]
[20.75225639 422.94165039]
[32.24876404 413.29946899]
[44.31171417 404.37612915]
[56.89622879 396.20480347]
[69.95549774 388.81585693]
[83.44093323 382.23681641]
[97.30236816 376.49212646]
[111.48825073 371.60317993]
[125.94578552 367.58816528]
[140.62120056 364.46200562]
[138.39608765 349.62796021]
[136.17097473 334.79391479]
[133.94586182 319.95986938]
[131.39002991 305.17922974]
[128.50474548 290.45932007]
[125.61947632 275.73944092]
[122.73420715 261.01953125]
[119.84893036 246.29965210]
[116.96366119 231.57975769]
[102.66689301 230.55526733]
[89.11246490 225.85713196]
[77.22837067 217.80033875]
[67.82998657 206.93009949]
[61.56408691 193.98484802]
[58.86438370 179.84619141]
[59.92147827 165.47880554]
[64.66942596 151.86460876]
[72.78981781 139.93571472]
[83.73312378 130.51055908]
[96.75588226 124.23775482]
[94.09008789 109.47653961]
[91.31447601 94.73557281]
[88.42920685 80.01568604]
[85.54393005 65.29579163]
[82.65866089 50.57590103]
[79.77338409 35.85600662]
[65.85761261 29.24863815]
[58.58576584 15.87053299]
[60.56242371 0.95219469]
[70.82176971 -9.81273746]
[67.93650055 -24.53262901]
[65.05123138 -39.25252151]
[62.05645370 -53.95052338]
[58.95234299 -68.62582397]
[55.84823227 -83.30113220]
[40.81800461 -82.78797150]
[25.92703629 -84.89277649]
[11.62784863 -89.55157471]
[-1.64502144 -96.62277985]
[-13.48822689 -105.89152527]
[-23.54186630 -117.07613373]
[-31.50041962 -129.83671570]
[-37.12203979 -143.78550720]
[-40.23588562 -158.49859619]
[-40.74733353 -173.52888489]
[-38.64084244 -188.41961670]
[-33.98042679 -202.71827698]
[-26.90770912 -215.99034119]
[-17.63762283 -227.83248901]
[-6.45187521 -237.88485718]
[6.30961275 -245.84196472]
[20.25903320 -251.46200562]
[34.97247696 -254.57418823]
[50.00282288 -255.08392334]
[64.89331055 -252.97575378]
[79.19144440 -248.31370544]
[92.46270752 -241.23948669]
[104.30381012 -231.96806335]
[114.35491180 -220.78117371]
[122.31057739 -208.01878357]
[127.92903137 -194.06872559]
[131.03953552 -179.35491943]
[131.54757690 -164.32452393]
[129.43771362 -149.43426514]
[124.77404785 -135.13667297]
[117.69832611 -121.86621094]
[108.42555237 -110.02615356]
[97.23752594 -99.97632599]
[84.47422791 -92.02210999]
[70.52353668 -86.40523529]
[73.62764740 -71.72993469]
[76.73175812 -57.05463409]
[81.19139862 -51.16112900]
[79.77111816 -42.13779068]
[82.65639496 -27.41790009]
[85.54166412 -12.69800949]
[99.10580444 -6.60276365]
[106.56815338 6.46541834]
[104.88490295 21.59882736]
[94.49327850 32.97073746]
[97.37854767 47.69062805]
[100.26382446 62.41051865]
[103.14909363 77.13040924]
[106.03437042 91.85030365]
[110.55198669 98.52590179]
[108.85130310 106.81073761]
[111.51709747 121.57196045]
[127.16046143 123.19200897]
[141.70176697 129.14456177]
[153.96810913 138.94064331]
[162.97256470 151.78161621]
[167.99357605 166.62428284]
[168.63284302 182.26562500]
[164.84683228 197.44033813]
[156.94964600 210.92315674]
[145.58703613 221.62780762]
[131.68354797 228.69448853]
[134.56883240 243.41438293]
[137.45410156 258.13427734]
[140.33937073 272.85415649]
[143.22463989 287.57406616]
[146.10990906 302.29394531]
[149.54197693 306.22689819]
[150.97857666 310.64157104]
[150.57038879 314.69723511]
[148.77990723 317.73474121]
[151.00502014 332.56878662]
[153.23013306 347.40283203]
[155.45524597 362.23687744]
[170.40202332 360.91970825]
[185.40129089 360.51617432]
[200.39726257 361.02783203]
[215.33413696 362.45272827]
[230.15637207 364.78561401]
[244.80880737 368.01776123]
[259.23693848 372.13720703]
[273.38711548 377.12857056]
[287.20666504 382.97329712]
[300.64419556 389.64965820]
[313.64971924 397.13278198]
[326.17483521 405.39489746]
[338.17297363 414.40518188]
[349.59945679 424.13018799]
[360.41183472 434.53372192]
[370.56985474 445.57705688]
[380.03573608 457.21914673]
[388.77426147 469.41665649]
[396.75292969 482.12420654]
[403.94204712 495.29452515]
[410.31488037 508.87863159]
[415.84768677 522.82598877]
[420.51995850 537.08471680]
[424.31423950 551.60174561]
[427.21643066 566.32305908]
[429.21578979 581.19396973]
[430.30480957 596.15911865]
[430.47946167 611.16278076]
[429.73913574 626.14916992]
[428.08651733 641.06262207]
[425.52780151 655.84753418]
[422.07250977 670.44897461]
[417.73345947 684.81256104]
[412.52682495 698.88494873]
[406.47195435 712.61370850]
[399.59140015 725.94787598]
[391.91073608 738.83770752]
[383.45852661 751.23535156]
[374.26623535 763.09460449]
[364.36807251 774.37145996]
[353.80081177 785.02386475]
[342.60379028 795.01220703]
[330.81866455 804.29943848]
[318.48928833 812.85083008]
[305.66149902 820.63476562]
[292.38302612 827.62213135]
[278.70330811 833.78698730]
[264.67315674 839.10638428]
[250.34483337 843.56060791]
[235.77160645 847.13299561]
[221.00770569 849.81030273]
[206.10803223 851.58251953]
[191.12805176 852.44311523]
[176.12344360 852.38891602]
[161.15007019 851.42004395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 155]
[47 154]
[48 153]
[49 152]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[55 143]
[66 133]
[67 132]
[68 130]
[69 129]
[70 128]
[71 127]
[72 126]
[76 122]
[77 121]
[78 120]
[79 118]
[80 117]
[81 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
