%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCU\
) } def
/len { sequence length } bind def

/coor [
[94.90712738 403.70114136]
[95.86608887 418.93411255]
[90.11279297 433.07138062]
[78.78955841 443.30596924]
[64.14463043 447.60583496]
[49.08576584 445.11721802]
[36.60290909 436.33419800]
[29.17454338 423.00070190]
[28.27557755 407.76409912]
[34.08449936 393.64959717]
[45.44794464 383.45965576]
[60.10969543 379.21749878]
[62.55541992 364.41821289]
[65.00115204 349.61895752]
[67.11577606 334.76876831]
[68.89823914 319.87503052]
[70.68070221 304.98132324]
[72.46317291 290.08761597]
[74.13471222 275.18103027]
[67.76347351 261.71786499]
[76.89449310 248.79753113]
[78.45500946 233.87892151]
[80.01553345 218.96032715]
[81.57605743 204.04171753]
[72.02654266 192.66883850]
[73.39661407 177.51702881]
[85.39028168 167.57772827]
[86.95080566 152.65911865]
[80.57957458 139.19595337]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[98.49185944 42.32664490]
[100.05237579 27.40804100]
[92.55146790 16.91522408]
[94.15836334 4.52161074]
[103.47074127 -3.19889569]
[105.25320435 -18.09261322]
[107.03567505 -32.98633194]
[108.15132141 -47.94478226]
[108.59792328 -62.93813324]
[109.04453278 -77.93148041]
[109.49113464 -92.92483521]
[109.93774414 -107.91818237]
[109.93774414 -122.91818237]
[109.49113464 -137.91152954]
[101.34638214 -151.47521973]
[108.70131683 -164.42721558]
[108.25471497 -179.42056274]
[107.80810547 -194.41390991]
[98.84589386 -182.38566589]
[84.84122467 -177.01266479]
[70.13359070 -179.95979309]
[59.28031540 -190.31384277]
[55.64440918 -204.86651611]
[60.35248947 -219.10848999]
[71.94570923 -228.62675476]
[86.83178711 -230.47195435]
[100.39810181 -224.07234192]
[108.44106293 -211.41065979]
[110.00158691 -226.32925415]
[111.56211090 -241.24786377]
[113.12262726 -256.16647339]
[114.68315125 -271.08508301]
[116.24367523 -286.00369263]
[101.47864532 -288.68905640]
[86.95899200 -292.48336792]
[72.76788330 -297.36495972]
[58.98660660 -303.30581665]
[45.69410324 -310.27194214]
[32.96651077 -318.22341919]
[20.87673378 -327.11468506]
[9.49402046 -336.89480591]
[-1.11642778 -347.50781250]
[-10.89383507 -358.89288330]
[-19.78219795 -370.98480225]
[-27.73060226 -383.71429443]
[-34.69351959 -397.00848389]
[-40.63106918 -410.79116821]
[-45.50923920 -424.98345947]
[-49.30008698 -439.50402832]
[-51.98189926 -454.26971436]
[-53.53931427 -469.19592285]
[-53.96340942 -484.19717407]
[-53.25175858 -499.18753052]
[-51.40843964 -514.08111572]
[-48.44400787 -528.79266357]
[-44.37544250 -543.23791504]
[-39.22605133 -557.33404541]
[-33.02532578 -571.00036621]
[-25.80878830 -584.15856934]
[-17.61777306 -596.73333740]
[-8.49919605 -608.65264893]
[1.49470878 -619.84814453]
[12.30669785 -630.25573730]
[23.87483978 -639.81579590]
[36.13287354 -648.47363281]
[49.01058578 -656.17962646]
[62.43421173 -662.88958740]
[76.32685852 -668.56512451]
[90.60896301 -673.17370605]
[105.19869995 -676.68896484]
[120.01250458 -679.09069824]
[134.96553040 -680.36523438]
[149.97212219 -680.50524902]
[164.94631958 -679.50988770]
[179.80235291 -677.38494873]
[194.45513916 -674.14251709]
[208.82072449 -669.80114746]
[222.81684875 -664.38580322]
[236.36332703 -657.92742920]
[249.38255310 -650.46307373]
[261.79998779 -642.03546143]
[273.54446411 -632.69281006]
[284.54873657 -622.48870850]
[294.74978638 -611.48162842]
[304.08914185 -599.73455811]
[312.51333618 -587.31481934]
[319.97409058 -574.29351807]
[326.42871094 -560.74523926]
[331.84017944 -546.74761963]
[336.17755127 -532.38079834]
[339.41592407 -517.72717285]
[341.53677368 -502.87051392]
[342.52798462 -487.89605713]
[342.38381958 -472.88949585]
[341.10513306 -457.93682861]
[338.69927979 -443.12368774]
[335.17999268 -428.53491211]
[330.56744385 -414.25408936]
[324.88806152 -400.36303711]
[318.17437744 -386.94125366]
[310.46484375 -374.06567383]
[301.80361938 -361.81005859]
[292.24032593 -350.24453735]
[281.82971191 -339.43545532]
[270.63143921 -329.44464111]
[258.70965576 -320.32937622]
[246.13262939 -312.14184570]
[232.97239685 -304.92895508]
[219.30435181 -298.73199463]
[205.20678711 -293.58651733]
[190.76045227 -289.52194214]
[176.04809570 -286.56158447]
[161.15397644 -284.72241211]
[146.16342163 -284.01489258]
[131.16227722 -284.44314575]
[129.60176086 -269.52456665]
[128.04122925 -254.60594177]
[126.48071289 -239.68734741]
[124.92018890 -224.76873779]
[123.35966492 -209.85012817]
[122.80145264 -194.86051941]
[123.24806213 -179.86717224]
[123.69466400 -164.87382507]
[131.80747986 -152.38256836]
[124.48448944 -138.35813904]
[124.93109131 -123.36479187]
[126.87657928 -121.34656525]
[128.13983154 -118.43610382]
[128.37702942 -114.88938904]
[127.34323120 -111.08205414]
[124.93109131 -107.47158051]
[124.48448944 -92.47822571]
[124.03787994 -77.48487854]
[123.59127808 -62.49152756]
[123.14466858 -47.49817657]
[134.77659607 -56.96908951]
[149.71197510 -55.57825851]
[159.39514160 -44.12241745]
[158.27914429 -29.16399002]
[147.00326538 -19.27184486]
[132.02684021 -20.11264992]
[121.92938995 -31.20386505]
[120.14692688 -16.31014633]
[118.36445618 -1.41642976]
[126.13009644 14.32084370]
[114.97098541 28.96856308]
[113.41046143 43.88716888]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[110.88880920 142.36637878]
[101.86940765 154.21963501]
[100.30889130 169.13824463]
[109.98609161 181.34437561]
[108.19097900 196.45173645]
[96.49466705 205.60223389]
[94.93414307 220.52084351]
[93.37361908 235.43945312]
[91.81309509 250.35804749]
[98.07270813 264.88830566]
[89.05331421 276.74154663]
[91.27294922 285.60220337]
[87.35688782 291.87005615]
[85.57442474 306.76379395]
[83.79195404 321.65750122]
[82.00949097 336.55120850]
[84.06537628 341.34918213]
[84.07437134 345.99172974]
[82.43843842 349.72518921]
[79.80042267 352.06466675]
[77.35469055 366.86395264]
[74.90896606 381.66320801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 210]
[13 209]
[14 208]
[15 204]
[16 203]
[17 202]
[18 201]
[19 199]
[21 197]
[22 196]
[23 195]
[24 194]
[27 191]
[28 190]
[30 188]
[31 187]
[33 185]
[34 184]
[35 183]
[36 182]
[37 181]
[40 179]
[41 178]
[42 177]
[43 170]
[44 169]
[45 168]
[46 167]
[47 166]
[48 161]
[49 160]
[51 158]
[52 157]
[53 156]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
