%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[17.96960449 896.24517822]
[2.97202563 896.61547852]
[-12.02804375 896.36566162]
[-27.00497627 895.49621582]
[-41.93318558 894.00854492]
[-56.78716278 891.90527344]
[-71.54153442 889.18994141]
[-86.17108917 885.86718750]
[-100.65084076 881.94274902]
[-114.95603943 877.42321777]
[-129.06224060 872.31646729]
[-142.94537354 866.63110352]
[-156.58168030 860.37683105]
[-169.94789124 853.56445312]
[-183.02116394 846.20550537]
[-195.77915955 838.31256104]
[-208.20008850 829.89916992]
[-220.26271057 820.97967529]
[-231.94642639 811.56933594]
[-243.23129272 801.68414307]
[-254.09800720 791.34106445]
[-264.52801514 780.55780029]
[-274.50347900 769.35266113]
[-284.00738525 757.74493408]
[-293.02346802 745.75433350]
[-301.53634644 733.40136719]
[-309.53146362 720.70715332]
[-316.99517822 707.69342041]
[-323.91470337 694.38232422]
[-330.27825928 680.79669189]
[-336.07492065 666.95965576]
[-341.29486084 652.89495850]
[-345.92907715 638.62652588]
[-349.96969604 624.17871094]
[-353.40982056 609.57635498]
[-356.24356079 594.84423828]
[-358.46606445 580.00762939]
[-360.07354736 565.09185791]
[-361.06329346 550.12237549]
[-361.43356323 535.12481689]
[-361.18371582 520.12475586]
[-360.31423950 505.14782715]
[-358.82656860 490.21960449]
[-356.72323608 475.36563110]
[-354.00790405 460.61126709]
[-350.68515015 445.98171997]
[-346.76065063 431.50198364]
[-342.24114990 417.19677734]
[-337.13433838 403.09057617]
[-331.44894409 389.20745850]
[-325.19470215 375.57116699]
[-318.38226318 362.20495605]
[-311.02331543 349.13168335]
[-303.13037109 336.37371826]
[-294.71694946 323.95281982]
[-285.79745483 311.89019775]
[-276.38705444 300.20648193]
[-266.50186157 288.92163086]
[-256.15878296 278.05493164]
[-245.37547302 267.62493896]
[-234.17034912 257.64950562]
[-222.56257629 248.14561462]
[-210.57196045 239.12953186]
[-198.21899414 230.61666870]
[-185.52478027 222.62158203]
[-172.51103210 215.15789795]
[-159.19995117 208.23837280]
[-145.61428833 201.87484741]
[-131.77726746 196.07820129]
[-117.71251678 190.85830688]
[-103.44406891 186.22409058]
[-88.99629974 182.18348694]
[-74.39389801 178.74339294]
[-59.66180420 175.90968323]
[-44.82519150 173.68719482]
[-29.90941048 172.07971191]
[-14.93994141 171.09001160]
[0.05763843 170.71977234]
[15.05770683 170.96961975]
[30.03463745 171.83914185]
[44.96284103 173.32682800]
[59.81681442 175.43016052]
[74.57117462 178.14553833]
[77.89343262 163.51808167]
[81.21569824 148.89060974]
[84.53795624 134.26315308]
[87.86021423 119.63569641]
[91.18247223 105.00823975]
[89.75488281 97.07511139]
[94.66461945 90.18849945]
[98.20429230 75.61212158]
[101.74396515 61.03575134]
[93.78426361 47.64616776]
[97.58164215 32.91407394]
[110.39561462 25.40823174]
[113.93528748 10.83185673]
[117.47496033 -3.74451876]
[121.01463318 -18.32089424]
[107.36211395 -24.65294266]
[95.20742035 -33.52704620]
[85.01775360 -44.60210037]
[77.18476868 -57.45241928]
[72.00955963 -71.58406067]
[69.69103241 -86.45385742]
[70.31831360 -101.49023438]
[73.86729431 -116.11524963]
[80.20155334 -129.76673889]
[89.07762146 -141.91999817]
[100.15432739 -152.10787964]
[113.00591278 -159.93878174]
[127.13838959 -165.11170959]
[142.00856018 -167.42782593]
[157.04483032 -166.79811096]
[171.66928101 -163.24676514]
[185.31974792 -156.91029358]
[197.47157288 -148.03225708]
[207.65765381 -136.95390320]
[215.48646545 -124.10105133]
[220.65710449 -109.96773529]
[222.97082520 -95.09719086]
[222.33866882 -80.06101227]
[218.78495789 -65.43714905]
[212.44628906 -51.78770447]
[203.56628418 -39.63732147]
[192.48628235 -29.45303345]
[179.63215637 -21.62629318]
[165.49800110 -16.45794296]
[150.62709045 -14.14663887]
[135.59100342 -14.78122139]
[132.05133057 -0.20484628]
[128.51167297 14.37152863]
[124.97199249 28.94790459]
[132.91647339 41.49465179]
[129.53439331 56.32759094]
[116.32034302 64.57542419]
[112.78067017 79.15179443]
[109.24099731 93.72817230]
[105.80993652 108.33049774]
[102.48767090 122.95795441]
[99.16541290 137.58541870]
[95.84315491 152.21287537]
[92.52089691 166.84033203]
[89.19863892 181.46780396]
[103.67839813 185.39221191]
[117.98360443 189.91166687]
[132.08982849 195.01840210]
[145.97297668 200.70373535]
[159.60931396 206.95791626]
[172.97554016 213.77029419]
[186.04882812 221.12919617]
[198.80685425 229.02207947]
[211.22779846 237.43544006]
[223.29045105 246.35490417]
[234.97419739 255.76524353]
[246.25907898 265.65036011]
[257.12582397 275.99340820]
[267.55587769 286.77667236]
[277.53137207 297.98175049]
[287.03530884 309.58947754]
[296.05145264 321.58007812]
[304.56436157 333.93298340]
[312.55950928 346.62716675]
[320.02325439 359.64089966]
[326.94281006 372.95193481]
[333.30639648 386.53756714]
[339.10311890 400.37457275]
[344.32308960 414.43930054]
[348.95736694 428.70770264]
[352.99801636 443.15545654]
[356.43817139 457.75784302]
[359.27197266 472.48992920]
[361.49450684 487.32653809]
[363.10205078 502.24230957]
[364.09182739 517.21179199]
[364.46212769 532.20935059]
[364.21234131 547.20941162]
[363.34289551 562.18634033]
[361.85528564 577.11456299]
[359.75201416 591.96856689]
[357.03671265 606.72290039]
[353.71398926 621.35247803]
[349.78955078 635.83221436]
[345.27008057 650.13745117]
[340.16329956 664.24365234]
[334.47796631 678.12677002]
[328.22375488 691.76312256]
[321.41137695 705.12933350]
[314.05242920 718.20263672]
[306.15954590 730.96063232]
[297.74618530 743.38153076]
[288.82669067 755.44421387]
[279.41632080 767.12792969]
[269.53118896 778.41278076]
[259.18814087 789.27954102]
[248.40484619 799.70953369]
[237.19976807 809.68505859]
[225.59201050 819.18896484]
[213.60140991 828.20507812]
[201.24847412 836.71795654]
[188.55429077 844.71313477]
[175.54055786 852.17681885]
[162.22950745 859.09637451]
[148.64385986 865.45996094]
[134.80685425 871.25665283]
[120.74211884 876.47656250]
[106.47368622 881.11083984]
[92.02593231 885.15148926]
[77.42353821 888.59161377]
[62.69145203 891.42535400]
[47.85484695 893.64788818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 143]
[84 142]
[85 141]
[86 140]
[87 139]
[88 138]
[90 137]
[91 136]
[92 135]
[95 132]
[96 131]
[97 130]
[98 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
