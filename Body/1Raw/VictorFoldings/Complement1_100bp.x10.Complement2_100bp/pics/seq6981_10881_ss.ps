%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[-5.65650940 268.70932007]
[-4.37505150 283.66339111]
[-4.34942198 298.67224121]
[-5.57980204 313.63061523]
[-8.05755997 328.43356323]
[-11.76531696 342.97726440]
[-16.67706490 357.15969849]
[-22.75835037 370.88137817]
[-29.96651649 384.04605103]
[-38.25100327 396.56140137]
[-47.55369949 408.33959961]
[-57.80935669 419.29809570]
[-68.94602966 429.35995483]
[-80.88560486 438.45462036]
[-93.54433441 446.51831055]
[-106.83342743 453.49444580]
[-120.65966797 459.33410645]
[-134.92607117 463.99633789]
[-149.53256226 467.44842529]
[-164.37669373 469.66613770]
[-179.35433960 470.63397217]
[-194.36044312 470.34509277]
[-209.28973389 468.80151367]
[-224.03752136 466.01409912]
[-238.50032043 462.00241089]
[-252.57670593 456.79455566]
[-266.16793823 450.42706299]
[-279.17868042 442.94461060]
[-291.51766968 434.39968872]
[-303.09838867 424.85220337]
[-313.83953857 414.36917114]
[-323.66580200 403.02410889]
[-332.50830078 390.89657593]
[-340.30496216 378.07162476]
[-347.00109863 364.63928223]
[-352.54974365 350.69369507]
[-356.91198730 336.33273315]
[-360.05725098 321.65710449]
[-361.96340942 306.76977539]
[-362.61715698 291.77514648]
[-362.01388550 276.77838135]
[-360.15783691 261.88470459]
[-357.06198120 247.19857788]
[-352.74810791 232.82301331]
[-347.24639893 218.85884094]
[-340.59552002 205.40402222]
[-332.84207153 192.55293274]
[-324.04046631 180.39570618]
[-314.25241089 169.01762390]
[-303.54660034 158.49850464]
[-291.99810791 148.91210938]
[-279.68792725 140.32569885]
[-266.70245361 132.79951477]
[-253.13272095 126.38631439]
[-239.07394409 121.13110352]
[-224.62471008 117.07074738]
[-209.88639832 114.23371887]
[-194.96238708 112.63992310]
[-179.95733643 112.30052948]
[-164.97651672 113.21793365]
[-150.12501526 115.38568878]
[-135.50698853 118.78858948]
[-121.22497559 123.40277863]
[-107.37915802 129.19587708]
[-94.06666565 136.12725830]
[-81.38086700 144.14830017]
[-69.41074371 153.20272827]
[-58.24027252 163.22705078]
[-47.94779205 174.15093994]
[-38.60550690 185.89778137]
[-26.12571526 177.57583618]
[-13.64592075 169.25389099]
[-1.16612709 160.93194580]
[11.31366634 152.61001587]
[23.79346085 144.28807068]
[36.21095657 135.87344360]
[42.88739777 119.64408875]
[61.25505447 118.33615875]
[73.48154449 109.64633179]
[85.70803070 100.95650482]
[91.70182800 88.32456970]
[105.60214996 86.81700897]
[117.82863617 78.12718201]
[120.59178162 62.79738235]
[133.11497498 54.15883636]
[147.71255493 56.88754654]
[159.93904114 48.19772339]
[172.16552734 39.50790024]
[175.26002502 33.66532898]
[180.11221313 30.70672989]
[184.88792419 30.74776459]
[197.36772156 22.42581940]
[209.84750366 14.10387611]
[222.32730103 5.78193283]
[234.80709839 -2.54001117]
[247.28689575 -10.86195469]
[259.76669312 -19.18389893]
[252.39692688 -32.25672913]
[246.02471924 -45.84375381]
[240.68569946 -59.86898041]
[236.40971375 -74.25397491]
[233.22068787 -88.91829681]
[231.13644409 -103.77993011]
[230.16865540 -118.75576782]
[230.32270813 -133.76205444]
[231.59777832 -148.71485901]
[233.98669434 -163.53056335]
[237.47613525 -178.12631226]
[242.04655457 -192.42050171]
[247.67240906 -206.33314514]
[254.32221985 -219.78648376]
[261.95883179 -232.70524597]
[270.53948975 -245.01719666]
[280.01626587 -256.65350342]
[290.33612061 -267.54904175]
[301.44131470 -277.64291382]
[313.26980591 -286.87866211]
[325.75543213 -295.20465088]
[338.82830811 -302.57427979]
[352.41540527 -308.94638062]
[366.44067383 -314.28527832]
[380.82571411 -318.56112671]
[395.49005127 -321.75003052]
[410.35171509 -323.83413696]
[425.32754517 -324.80181885]
[440.33383179 -324.64761353]
[455.28662109 -323.37240601]
[470.10232544 -320.98336792]
[484.69802856 -317.49380493]
[498.99215698 -312.92324829]
[512.90478516 -307.29727173]
[526.35803223 -300.64733887]
[539.27673340 -293.01062012]
[551.58862305 -284.42984009]
[563.22485352 -274.95297241]
[574.12030029 -264.63302612]
[584.21405029 -253.52772522]
[593.44970703 -241.69915771]
[601.77557373 -229.21347046]
[609.14508057 -216.14051819]
[615.51708984 -202.55337524]
[620.85583496 -188.52806091]
[625.13159180 -174.14299011]
[628.32037354 -159.47860718]
[630.40435791 -144.61694336]
[631.37188721 -129.64108276]
[631.21752930 -114.63481140]
[629.94219971 -99.68202209]
[627.55303955 -84.86635590]
[624.06335449 -70.27066040]
[619.49267578 -55.97657013]
[613.86657715 -42.06401062]
[607.21649170 -28.61079979]
[599.57965088 -15.69216824]
[590.99877930 -3.38036394]
[581.52178955 8.25575924]
[571.20178223 19.15112686]
[560.09637451 29.24480629]
[548.26776123 38.48035049]
[535.78198242 46.80610657]
[522.70898438 54.17551422]
[509.12176514 60.54736710]
[495.09640503 65.88601685]
[480.71127319 70.16162109]
[466.04687500 73.35026550]
[451.18518066 75.43411255]
[436.20932007 76.40151215]
[421.20306396 76.24704742]
[406.25027466 74.97159576]
[391.43463135 72.58227539]
[376.83895874 69.09246063]
[362.54492188 64.52165985]
[348.63241577 58.89543533]
[335.17926025 52.24525833]
[322.26068115 44.60831451]
[309.94897461 36.02731323]
[298.31292725 26.55024719]
[287.41766357 16.23011208]
[277.32406616 5.12462616]
[268.08862305 -6.70410490]
[255.60884094 1.61783874]
[243.12904358 9.93978214]
[230.64924622 18.26172638]
[218.16944885 26.58366966]
[205.68966675 34.90561295]
[193.20986938 43.22755814]
[180.85536194 51.73438644]
[168.62887573 60.42420959]
[156.40238953 69.11403656]
[154.18011475 83.79725647]
[141.90451050 92.78414917]
[126.51845551 90.35366821]
[114.29196930 99.04349518]
[108.29817200 111.67543030]
[94.39785004 113.18299103]
[82.17136383 121.87281799]
[69.94487762 130.56263733]
[67.02893066 143.12687683]
[56.66656494 150.11294556]
[44.71778107 148.22795105]
[39.42440414 155.67228699]
[32.11540604 156.76785278]
[19.63561058 165.08979797]
[7.15581656 173.41174316]
[-5.32397699 181.73368835]
[-17.80377007 190.05563354]
[-30.28356361 198.37757874]
[-23.03047943 211.51756287]
[-16.90236664 225.21839905]
[-11.94221306 239.38397217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 207]
[71 206]
[72 205]
[73 204]
[74 203]
[75 202]
[76 200]
[78 197]
[79 196]
[80 195]
[82 193]
[83 192]
[86 189]
[87 188]
[88 187]
[91 186]
[92 185]
[93 184]
[94 183]
[95 182]
[96 181]
[97 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
