%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[135.44435120 794.69763184]
[120.43604279 794.85467529]
[105.46849060 793.73834229]
[90.64952850 791.35668945]
[76.08593750 787.72686768]
[61.88264084 782.87506104]
[48.14198303 776.83618164]
[34.96296310 769.65374756]
[22.44053841 761.37951660]
[10.66493702 752.07312012]
[-0.27899811 741.80157471]
[-10.31241417 730.63897705]
[-19.36301804 718.66564941]
[-27.36560059 705.96789551]
[-34.26250076 692.63720703]
[-40.00402451 678.76971436]
[-44.54880905 664.46520996]
[-47.86410141 649.82678223]
[-49.92601395 634.95996094]
[-50.71969986 619.97186279]
[-50.23942947 604.97039795]
[-48.48867035 590.06372070]
[-45.48003006 575.35925293]
[-41.23519516 560.96289062]
[-35.78474426 546.97839355]
[-29.16795158 533.50646973]
[-21.43249130 520.64428711]
[-12.63409615 508.48443604]
[-2.83616161 497.11453247]
[7.89071655 486.61654663]
[19.46924973 477.06607056]
[31.81601334 468.53195190]
[44.84204865 461.07565308]
[58.45349503 454.75091553]
[72.55229187 449.60330200]
[87.03684235 445.66992188]
[101.80278778 442.97909546]
[116.74374390 441.55020142]
[131.75204468 441.39352417]
[132.86770630 426.43508911]
[133.98335266 411.47662354]
[135.09899902 396.51818848]
[136.21464539 381.55972290]
[137.33029175 366.60125732]
[138.44593811 351.64282227]
[139.56159973 336.68435669]
[140.67724609 321.72592163]
[141.79289246 306.76745605]
[140.67724609 291.80899048]
[137.35498047 277.18154907]
[134.03271484 262.55407715]
[130.71046448 247.92662048]
[127.38820648 233.29916382]
[110.18662262 224.15476990]
[105.17877197 205.01252747]
[116.02810669 188.10183716]
[112.05600739 173.63731384]
[108.08391571 159.17279053]
[97.25255585 148.94874573]
[101.05927277 133.59233093]
[96.25675201 127.97472382]
[97.13743591 118.88285065]
[84.70613098 111.43913269]
[81.07765961 97.41128540]
[88.34050751 84.87345123]
[84.58420563 70.35139465]
[73.63759613 58.92850494]
[77.94120026 44.66918564]
[74.18489838 30.14712524]
[70.42859650 15.62506580]
[66.67230225 1.10300696]
[54.35699463 -4.35115576]
[47.53119659 -15.73618603]
[48.49465942 -28.78048897]
[56.67218781 -38.73827362]
[53.13251495 -53.31464767]
[49.59284592 -67.89102173]
[46.05317307 -82.46739960]
[42.51350021 -97.04377747]
[37.89884186 -82.77124786]
[27.93875504 -71.55533600]
[14.31169319 -65.28611755]
[-0.68594718 -65.02005768]
[-14.52679920 -70.80199432]
[-24.87843704 -81.65756989]
[-29.99642754 -95.75743866]
[-29.01829720 -110.72550964]
[-22.10888290 -124.03941345]
[-10.43253803 -133.45552063]
[4.04306650 -137.38703918]
[18.87853622 -135.17144775]
[31.57383537 -127.18212128]
[39.99021149 -114.76386261]
[39.32042694 -129.74890137]
[35.81094742 -138.18225098]
[38.75390625 -144.96168518]
[38.30730057 -159.95503235]
[24.08410835 -165.31874084]
[12.99961376 -175.72077942]
[6.74412012 -189.57492065]
[6.27154493 -204.76850891]
[11.65395164 -218.98463440]
[22.07056236 -230.05543518]
[35.93292236 -236.29269409]
[51.12711716 -236.74528503]
[65.33615112 -231.34417725]
[76.39323425 -220.91300964]
[82.61225891 -207.04246521]
[83.04486084 -191.84768677]
[77.62506866 -177.64576721]
[67.17936707 -166.60241699]
[53.30064774 -160.40164185]
[53.74725342 -145.40829468]
[54.30546570 -130.41868591]
[54.97525024 -115.43364716]
[57.08987427 -100.58345032]
[60.62954712 -86.00707245]
[64.16921997 -71.43069458]
[67.70889282 -56.85432053]
[71.24856567 -42.27794647]
[85.97171021 -34.14973450]
[90.34683990 -17.56139183]
[81.19435883 -2.65329385]
[84.95066071 11.86876583]
[88.70696259 26.39082527]
[92.46326447 40.91288376]
[103.14119720 51.29705429]
[99.10626221 66.59509277]
[102.86256409 81.11714935]
[115.29386902 88.56086731]
[118.92234039 102.58871460]
[111.65949249 115.12654877]
[115.52379608 129.62023926]
[126.63926697 140.87887573]
[122.54843903 155.20069885]
[126.52053070 169.66522217]
[130.49263000 184.12974548]
[140.78796387 186.92794800]
[148.93086243 193.69554138]
[153.49487305 203.15986633]
[153.71684265 213.58404541]
[149.62373352 223.08572388]
[142.01567078 229.97689819]
[145.33792114 244.60435486]
[148.66018677 259.23181152]
[151.98243713 273.85928345]
[155.30470276 288.48675537]
[159.00889587 273.95129395]
[166.60853577 261.01895142]
[177.50428772 250.70960999]
[190.83685303 243.83630371]
[205.55479431 240.94107056]
[220.49737549 242.25227356]
[234.48616028 247.66648865]
[246.41795349 256.75671387]
[255.35174561 268.80609131]
[260.58300781 282.86431885]
[261.69912720 297.82275391]
[258.61212158 312.50164795]
[251.56546021 325.74343872]
[241.11483765 336.50375366]
[228.08444214 343.93402100]
[213.50190735 347.44824219]
[198.51728821 346.76931763]
[184.31231689 341.95071411]
[172.00724792 333.37252808]
[162.57254028 321.71121216]
[156.75134277 307.88311768]
[155.63569641 322.84155273]
[154.52005005 337.80001831]
[153.40440369 352.75845337]
[152.28874207 367.71691895]
[151.17309570 382.67538452]
[150.05744934 397.63381958]
[148.94180298 412.59228516]
[147.82615662 427.55072021]
[146.71051025 442.50918579]
[161.52952576 444.89044189]
[176.09321594 448.51989746]
[190.29663086 453.37136841]
[204.03744507 459.40988159]
[217.21665955 466.59197998]
[229.73928833 474.86587524]
[241.51513672 484.17196655]
[252.45933533 494.44320679]
[262.49304199 505.60559082]
[271.54394531 517.57867432]
[279.54687500 530.27618408]
[286.44409180 543.60668945]
[292.18597412 557.47406006]
[296.73114014 571.77844238]
[300.04681396 586.41680908]
[302.10910034 601.28356934]
[302.90316772 616.27166748]
[302.42330933 631.27313232]
[300.67291260 646.17980957]
[297.66467285 660.88439941]
[293.42019653 675.28082275]
[287.97012329 689.26550293]
[281.35366821 702.73754883]
[273.61853027 715.59997559]
[264.82046509 727.76007080]
[255.02281189 739.13018799]
[244.29620361 749.62847900]
[232.71792603 759.17926025]
[220.37138367 767.71368408]
[207.34553528 775.17028809]
[193.73425293 781.49542236]
[179.63558960 786.64337158]
[165.15113831 790.57714844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 177]
[40 176]
[41 175]
[42 174]
[43 173]
[44 172]
[45 171]
[46 170]
[47 169]
[48 168]
[49 147]
[50 146]
[51 145]
[52 144]
[53 143]
[56 137]
[57 136]
[58 135]
[60 133]
[62 132]
[65 129]
[66 128]
[68 126]
[69 125]
[70 124]
[71 123]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[93 115]
[94 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
