%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[43.27045059 899.34930420]
[28.26881790 899.52374268]
[13.27495956 899.01025391]
[-1.67958903 897.80987549]
[-16.56337929 895.92517090]
[-31.34511185 893.36004639]
[-45.99369812 890.11993408]
[-60.47833252 886.21160889]
[-74.76855469 881.64337158]
[-88.83431244 876.42474365]
[-102.64601898 870.56677246]
[-116.17463684 864.08166504]
[-129.39170837 856.98321533]
[-142.26945496 849.28625488]
[-154.78076172 841.00695801]
[-166.89933777 832.16278076]
[-178.59970093 822.77227783]
[-189.85723877 812.85528564]
[-200.64826965 802.43255615]
[-210.95011902 791.52606201]
[-220.74110413 780.15875244]
[-230.00064087 768.35449219]
[-238.70925903 756.13812256]
[-246.84863281 743.53533936]
[-254.40165710 730.57269287]
[-261.35244751 717.27734375]
[-267.68637085 703.67730713]
[-273.39013672 689.80120850]
[-278.45172119 675.67816162]
[-282.86047363 661.33795166]
[-286.60714722 646.81066895]
[-289.68386841 632.12689209]
[-292.08413696 617.31750488]
[-293.80294800 602.41363525]
[-294.83663940 587.44665527]
[-295.18304443 572.44799805]
[-294.84146118 557.44921875]
[-293.81259155 542.48187256]
[-292.09860229 527.57745361]
[-289.70312500 512.76733398]
[-286.63113403 498.08255005]
[-282.88912964 483.55407715]
[-278.48498535 469.21240234]
[-273.42794800 455.08776855]
[-267.72866821 441.20980835]
[-261.39913940 427.60772705]
[-254.45263672 414.31015015]
[-246.90379333 401.34503174]
[-238.76847839 388.73962402]
[-230.06379700 376.52047729]
[-220.80807495 364.71322632]
[-211.02075195 353.34274292]
[-200.72242737 342.43295288]
[-189.93473816 332.00674438]
[-178.68040466 322.08609009]
[-166.98307800 312.69186401]
[-154.86734009 303.84378052]
[-142.35870361 295.56045532]
[-129.48344421 287.85934448]
[-116.26866150 280.75659180]
[-102.74213409 274.26718140]
[-88.93231964 268.40472412]
[-74.86824036 263.18157959]
[-60.57949448 258.60870361]
[-46.09611893 254.69575500]
[-31.44857979 251.45091248]
[-16.66767502 248.88102722]
[-1.78449261 246.99150085]
[13.16966915 245.78630066]
[28.16336060 245.26797485]
[43.16504669 245.43759155]
[58.14318466 246.29481506]
[73.06627655 247.83782959]
[75.29138947 233.00379944]
[77.51651001 218.16975403]
[79.74162292 203.33570862]
[81.96674347 188.50166321]
[84.08136749 173.65145874]
[86.08538055 158.78593445]
[87.86784363 143.89221191]
[89.42836761 128.97361755]
[76.28897095 119.72351074]
[69.58585358 105.11952972]
[71.13855743 89.12586975]
[80.52559662 76.08395386]
[95.19889832 69.53396606]
[96.53713226 54.59378433]
[97.87536621 39.65359879]
[99.21360016 24.71341324]
[100.55183411 9.77322769]
[101.89006805 -5.16695690]
[103.22830200 -20.10714149]
[96.75305176 -34.54257202]
[105.59497070 -46.52880478]
[106.82194519 -61.47853851]
[107.93759155 -76.43698883]
[101.24813080 -90.77441406]
[109.91061401 -102.89096069]
[111.02626038 -117.84941101]
[97.10174561 -123.79807281]
[85.86489868 -133.94755554]
[78.53459930 -147.19691467]
[75.90599823 -162.10896301]
[78.26422119 -177.06614685]
[85.35346985 -190.44602966]
[96.40473938 -200.79727173]
[110.21929169 -206.99702454]
[125.29861450 -208.37280273]
[140.00701904 -204.77536011]
[152.74903870 -196.59494019]
[162.14253235 -184.71887207]
[167.16856384 -170.43537903]
[167.28192139 -155.29385376]
[162.47033691 -140.93672180]
[153.25572205 -128.92132568]
[140.63760376 -120.55103302]
[125.98471069 -116.73376465]
[124.86906433 -101.77531433]
[131.63832092 -88.50782013]
[122.89604187 -75.32134247]
[121.78039551 -60.36288834]
[124.41770172 -53.45880127]
[120.53515625 -45.19057083]
[127.10612488 -31.82376099]
[118.16848755 -18.76890755]
[116.83025360 -3.82872272]
[115.49201965 11.11146259]
[114.15378571 26.05164719]
[112.81555176 40.99183273]
[111.47731781 55.93201828]
[110.13908386 70.87220001]
[121.67240906 78.05606842]
[128.99931335 89.49906158]
[130.69769287 102.98020172]
[126.43790436 115.88290405]
[117.04675293 125.70287323]
[104.34696960 130.53413391]
[102.78645325 145.45274353]
[105.12535858 151.63667297]
[104.13832855 157.23335266]
[100.95090485 160.78994751]
[98.94689178 175.65547180]
[100.90173340 184.57827759]
[96.80078888 190.72677612]
[94.57566833 205.56082153]
[92.35054779 220.39486694]
[90.12543488 235.22891235]
[87.90031433 250.06295776]
[102.61935425 252.96627808]
[117.18981171 256.54135132]
[131.58103943 260.78070068]
[145.76278687 265.67535400]
[159.70520020 271.21505737]
[173.37898254 277.38815308]
[186.75537109 284.18167114]
[199.80624390 291.58126831]
[212.50413513 299.57144165]
[224.82235718 308.13537598]
[236.73500061 317.25506592]
[248.21699524 326.91128540]
[259.24423218 337.08380127]
[269.79348755 347.75115967]
[279.84259033 358.89096069]
[289.37039185 370.47973633]
[298.35687256 382.49319458]
[306.78314209 394.90597534]
[314.63146973 407.69204712]
[321.88531494 420.82446289]
[328.52947998 434.27566528]
[334.54995728 448.01733398]
[339.93411255 462.02056885]
[344.67059326 476.25592041]
[348.74945068 490.69345093]
[352.16210938 505.30279541]
[354.90136719 520.05322266]
[356.96151733 534.91375732]
[358.33816528 549.85314941]
[359.02847290 564.83990479]
[359.03094482 579.84252930]
[358.34561157 594.82952881]
[356.97387695 609.76934814]
[354.91864014 624.63055420]
[352.18426514 639.38189697]
[348.77642822 653.99237061]
[344.70233154 668.43127441]
[339.97058105 682.66815186]
[334.59106445 696.67315674]
[328.57510376 710.41680908]
[321.93539429 723.87023926]
[314.68588257 737.00506592]
[306.84179688 749.79370117]
[298.41961670 762.20928955]
[289.43710327 774.22570801]
[279.91311646 785.81762695]
[269.86770630 796.96075439]
[259.32199097 807.63159180]
[248.29811096 817.80773926]
[236.81930542 827.46777344]
[224.90966797 836.59136963]
[212.59428406 845.15936279]
[199.89903259 853.15374756]
[186.85061646 860.55767822]
[173.47647095 867.35559082]
[159.80473328 873.53320312]
[145.86413574 879.07751465]
[131.68402100 883.97686768]
[117.29418945 888.22094727]
[102.72491455 891.80084229]
[88.00683594 894.70904541]
[73.17089844 896.93939209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 148]
[74 147]
[75 146]
[76 145]
[77 144]
[78 142]
[79 141]
[80 138]
[81 137]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
[92 125]
[94 123]
[95 121]
[96 120]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
