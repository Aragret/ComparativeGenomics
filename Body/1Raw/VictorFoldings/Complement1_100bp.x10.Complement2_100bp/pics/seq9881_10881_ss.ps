%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[170.84605408 784.24298096]
[156.39183044 780.22406006]
[142.13247681 775.56072998]
[128.09671021 770.26226807]
[114.31277466 764.33953857]
[100.80844879 757.80426025]
[87.61092377 750.66973877]
[74.74678040 742.95031738]
[62.24192047 734.66149902]
[50.12152863 725.82000732]
[38.41001511 716.44360352]
[27.13096237 706.55126953]
[16.30708885 696.16278076]
[5.96018934 685.29919434]
[-3.88889623 673.98229980]
[-13.22033405 662.23498535]
[-22.01533318 650.08081055]
[-30.25617981 637.54425049]
[-37.92627716 624.65063477]
[-45.01018143 611.42590332]
[-51.49362564 597.89660645]
[-57.36355209 584.09008789]
[-62.60813904 570.03411865]
[-67.21682739 555.75701904]
[-71.18033600 541.28747559]
[-74.49067688 526.65472412]
[-77.14118958 511.88818359]
[-79.12653351 497.01760864]
[-80.44270325 482.07290649]
[-81.08706665 467.08419800]
[-81.05831146 452.08169556]
[-80.35649872 437.09558105]
[-78.98303986 422.15606689]
[-76.94071198 407.29318237]
[-74.23361206 392.53692627]
[-70.86720276 377.91696167]
[-66.84825897 363.46273804]
[-62.18487549 349.20339966]
[-56.88644409 335.16763306]
[-50.96363449 321.38372803]
[-44.42837524 307.87939453]
[-37.29383087 294.68188477]
[-29.57435989 281.81774902]
[-21.28551674 269.31292725]
[-12.44399166 257.19253540]
[-3.06759024 245.48104858]
[6.82480526 234.20201111]
[17.21327209 223.37815857]
[28.07688904 213.03128052]
[39.39377975 203.18222046]
[51.14115143 193.85079956]
[63.29534531 185.05581665]
[75.83188629 176.81500244]
[88.72553253 169.14492798]
[101.95030975 162.06105042]
[115.47958374 155.57762146]
[109.61062622 141.77345276]
[103.74166107 127.96927643]
[97.87270355 114.16510010]
[86.81798553 105.60444641]
[88.32312012 91.70386505]
[82.45416260 77.89968872]
[76.58519745 64.09551239]
[64.06521606 54.42283630]
[66.20596313 39.68287277]
[60.33700180 25.87869644]
[54.46804428 12.07452011]
[48.59908295 -1.72965705]
[42.73012161 -15.53383350]
[28.24529266 -11.54971409]
[13.35866642 -9.53184509]
[-1.66408908 -9.51623821]
[-16.55487633 -11.50317287]
[-31.04795074 -15.45718861]
[-44.88466644 -21.30772209]
[-57.81808853 -28.95036507]
[-69.61740875 -38.24872208]
[-80.07205963 -49.03685760]
[-88.99545288 -61.12224197]
[-96.22834015 -74.28919220]
[-101.64165497 -88.30274200]
[-105.13878632 -102.91278839]
[-106.65731812 -117.85861206]
[-106.17015076 -132.87347412]
[-103.68598175 -147.68942261]
[-99.24914551 -162.04205322]
[-92.93881989 -175.67521667]
[-84.86762238 -188.34562683]
[-75.17958832 -199.82714844]
[-64.04761505 -209.91488647]
[-51.67036438 -218.42883301]
[-38.26872253 -225.21701050]
[-24.08186150 -230.15830994]
[-9.36295795 -233.16452026]
[5.62530899 -234.18202209]
[20.61545753 -233.19262695]
[35.33996964 -230.21400452]
[49.53607178 -225.29931641]
[62.95041275 -218.53627014]
[75.34360504 -210.04556274]
[86.49446869 -199.97869873]
[96.20401764 -188.51536560]
[104.29895782 -175.86010742]
[110.63483429 -162.23880005]
[115.09857178 -147.89451599]
[117.61051178 -133.08325195]
[118.12582397 -118.06932068]
[116.63531494 -103.12068176]
[113.16558838 -88.50410461]
[107.77855682 -74.48043060]
[100.57035828 -61.29994202]
[91.66963959 -49.19784927]
[81.23523712 -38.39013290]
[69.45336914 -29.06967163]
[56.53429794 -21.40279388]
[62.40325928 -7.59861803]
[68.27221680 6.20555925]
[74.14118195 20.00973511]
[80.01013947 33.81391144]
[92.11033630 42.49921799]
[90.38937378 58.22654724]
[96.25833893 72.03072357]
[102.12729645 85.83489990]
[113.18201447 94.39555359]
[111.67687988 108.29613495]
[117.54583740 122.10031128]
[123.41480255 135.90449524]
[129.28376770 149.70866394]
[143.33970642 144.46400452]
[157.61679077 139.85522461]
[172.08627319 135.89164734]
[186.71902466 132.58122253]
[201.48554993 129.93061829]
[216.35612488 127.94519806]
[231.30081177 126.62893677]
[246.28950500 125.98448944]
[261.29202271 126.01316071]
[276.27813721 126.71488953]
[291.21765137 128.08825684]
[306.08053589 130.13050842]
[320.83685303 132.83752441]
[335.45681763 136.20384216]
[349.91104126 140.22270203]
[364.17044067 144.88600159]
[378.20620728 150.18435669]
[391.99017334 156.10708618]
[405.49450684 162.64227295]
[418.69207764 169.77674866]
[431.55624390 177.49613953]
[444.06112671 185.78491211]
[456.18157959 194.62637329]
[467.89312744 204.00270081]
[479.17221069 213.89503479]
[489.99612427 224.28344727]
[500.34304810 235.14700317]
[510.19219971 246.46383667]
[519.52368164 258.21115112]
[528.31872559 270.36529541]
[536.55963135 282.90179443]
[544.22973633 295.79537964]
[551.31372070 309.02014160]
[557.79718018 322.54937744]
[563.66717529 336.35586548]
[568.91180420 350.41180420]
[573.52056885 364.68890381]
[577.48413086 379.15841675]
[580.79449463 393.79116821]
[583.44506836 408.55770874]
[585.43048096 423.42828369]
[586.74670410 438.37295532]
[587.39111328 453.36166382]
[587.36242676 468.36416626]
[586.66070557 483.35028076]
[585.28729248 498.28982544]
[583.24499512 513.15270996]
[580.53796387 527.90899658]
[577.17163086 542.52893066]
[573.15270996 556.98315430]
[568.48937988 571.24255371]
[563.19104004 585.27832031]
[557.26824951 599.06225586]
[550.73303223 612.56658936]
[543.59857178 625.76416016]
[535.87915039 638.62829590]
[527.59033203 651.13317871]
[518.74884033 663.25360107]
[509.37249756 674.96508789]
[499.48016357 686.24420166]
[489.09173584 697.06805420]
[478.22814941 707.41497803]
[466.91128540 717.26409912]
[455.16397095 726.59558105]
[443.00979614 735.39056396]
[430.47329712 743.63146973]
[417.57968140 751.30157471]
[404.35491943 758.38549805]
[390.82568359 764.86895752]
[377.01916504 770.73895264]
[362.96319580 775.98352051]
[348.68609619 780.59228516]
[334.21658325 784.55578613]
[319.58383179 787.86614990]
[304.81729126 790.51672363]
[289.94671631 792.50207520]
[275.00201416 793.81829834]
[260.01333618 794.46264648]
[245.01081848 794.43395996]
[230.02470398 793.73217773]
[215.08517456 792.35870361]
[200.22230530 790.31640625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 128]
[57 127]
[58 126]
[59 125]
[61 123]
[62 122]
[63 121]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
