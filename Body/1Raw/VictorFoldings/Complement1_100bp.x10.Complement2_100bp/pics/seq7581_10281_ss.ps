%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[212.06823730 210.02606201]
[219.79121399 197.15438843]
[207.69546509 188.28349304]
[195.59970093 179.41259766]
[183.50395203 170.54170227]
[171.40820312 161.67080688]
[159.31245422 152.79991150]
[147.21670532 143.92901611]
[135.12094116 135.05812073]
[123.02519989 126.18721771]
[108.18634796 124.89962769]
[101.63390350 110.49907684]
[88.97138214 102.45790100]
[75.79890442 95.28253174]
[62.62642670 88.10717010]
[49.45395279 80.93180084]
[36.28147507 73.75643921]
[20.46144867 73.94964600]
[12.98600197 61.06682587]
[-0.18647425 53.89146042]
[-11.72861290 61.79347610]
[-25.48371696 63.94132614]
[-38.75865936 59.97217941]
[-48.97914124 50.71524048]
[-54.18887329 38.01927948]
[-53.42390823 24.38359451]
[-66.48809052 17.01290512]
[-79.55227661 9.64221478]
[-87.87128448 22.13226509]
[-97.08999634 33.97382355]
[-107.15806580 45.10221863]
[-118.02051544 55.45666504]
[-129.61799622 64.98061371]
[-141.88717651 73.62203979]
[-154.76106262 81.33375549]
[-168.16931152 88.07363892]
[-182.03871155 93.80487823]
[-196.29348755 98.49617004]
[-210.85581970 102.12189484]
[-225.64614868 104.66224670]
[-240.58369446 106.10334778]
[-255.58688354 106.43733978]
[-270.57376099 105.66238403]
[-285.46249390 103.78272247]
[-300.17175293 100.80861664]
[-314.62118530 96.75630951]
[-328.73187256 91.64794159]
[-342.42675781 85.51139832]
[-355.63107300 78.38021088]
[-368.27264404 70.29332733]
[-380.28244019 61.29490280]
[-391.59490967 51.43409348]
[-402.14822388 40.76475906]
[-411.88476562 29.34516144]
[-420.75131226 17.23768044]
[-428.69952393 4.50844193]
[-435.68591309 -8.77303314]
[-441.67233276 -22.53420258]
[-446.62612915 -36.69990921]
[-450.52020264 -51.19278336]
[-453.33331299 -65.93367004]
[-455.05007935 -80.84205627]
[-455.66110229 -95.83650970]
[-455.16311646 -110.83515167]
[-453.55877686 -125.75605774]
[-450.85687256 -140.51773071]
[-447.07214355 -155.03953552]
[-442.22525024 -169.24218750]
[-436.34271240 -183.04808044]
[-429.45663452 -196.38185120]
[-421.60464478 -209.17063904]
[-412.82955933 -221.34460449]
[-403.17938232 -232.83726501]
[-392.70678711 -243.58584595]
[-381.46899414 -253.53164673]
[-369.52734375 -262.62033081]
[-356.94708252 -270.80227661]
[-343.79690552 -278.03280640]
[-330.14868164 -284.27239990]
[-316.07687378 -289.48696899]
[-301.65838623 -293.64807129]
[-286.97198486 -296.73297119]
[-272.09786987 -298.72482300]
[-257.11724854 -299.61270142]
[-242.11196899 -299.39181519]
[-227.16397095 -298.06335449]
[-212.35491943 -295.63455200]
[-197.76567078 -292.11871338]
[-183.47592163 -287.53497314]
[-169.56372070 -281.90844727]
[-156.10505676 -275.26983643]
[-143.17341614 -267.65536499]
[-130.83944702 -259.10665894]
[-119.17050171 -249.67041016]
[-108.23031616 -239.39813232]
[-98.07864380 -228.34594727]
[-88.77093506 -216.57421875]
[-80.35802460 -204.14721680]
[-72.88584900 -191.13284302]
[-66.39523315 -177.60217285]
[-60.92162704 -163.62910461]
[-56.49491501 -149.28994751]
[-53.13928223 -134.66302490]
[-50.87305450 -119.82820892]
[-49.70860672 -104.86655426]
[-49.65230560 -89.85974884]
[-50.70445251 -74.88977814]
[-52.85929871 -60.03838348]
[-56.10508347 -45.38668823]
[-60.42407608 -31.01471901]
[-65.79268646 -17.00096703]
[-72.18158722 -3.42197037]
[-59.11740112 3.94871926]
[-46.05321503 11.31940842]
[-32.34506989 2.76375985]
[-16.09922218 2.28589320]
[-1.74699974 10.11089039]
[6.74901915 24.18615913]
[6.98889208 40.71898651]
[20.16136742 47.89435196]
[35.03921127 47.18791199]
[43.45684052 60.58396149]
[56.62931824 67.75932312]
[69.80179596 74.93469238]
[82.97426605 82.11006165]
[96.14674377 89.28542328]
[90.27952576 75.48050690]
[92.70220184 60.67744827]
[102.66407776 49.46312714]
[117.07836914 45.31243134]
[131.47863770 49.51149750]
[141.40281677 60.75919724]
[143.77578735 75.57030487]
[137.86224365 89.35544586]
[125.49458313 97.84313965]
[110.50479889 98.40332031]
[126.20881653 100.32541656]
[131.89608765 114.09146881]
[143.99183655 122.96236420]
[156.08760071 131.83325195]
[168.18334961 140.70414734]
[180.27909851 149.57504272]
[192.37484741 158.44593811]
[204.47059631 167.31683350]
[216.56636047 176.18772888]
[228.66210938 185.05862427]
[238.61802673 173.82456970]
[249.56803894 163.55703735]
[261.41870117 154.34367371]
[274.06893921 146.26306152]
[287.41079712 139.38415527]
[301.33047485 133.76564026]
[315.70916748 129.45544434]
[330.42422485 126.49034119]
[345.35006714 124.89564514]
[360.35940552 124.68494415]
[375.32415771 125.86004639]
[390.11666870 128.41093445]
[404.61068726 132.31582642]
[418.68255615 137.54139709]
[432.21224976 144.04310608]
[445.08432007 151.76544189]
[457.18893433 160.64253235]
[468.42285156 170.59863281]
[478.69018555 181.54881287]
[487.90335083 193.39964294]
[495.98376465 206.05001831]
[502.86242676 219.39198303]
[508.48071289 233.31173706]
[512.79071045 247.69050598]
[515.75555420 262.40560913]
[517.34997559 277.33151245]
[517.56042480 292.34085083]
[516.38507080 307.30557251]
[513.83392334 322.09802246]
[509.92883301 336.59197998]
[504.70300293 350.66375732]
[498.20108032 364.19335938]
[490.47851562 377.06530762]
[481.60122681 389.16976929]
[471.64492798 400.40350342]
[460.69458008 410.67065430]
[448.84359741 419.88363647]
[436.19311523 427.96383667]
[422.85101318 434.84228516]
[408.93118286 440.46035767]
[394.55233765 444.77005005]
[379.83718872 447.73468018]
[364.91125488 449.32885742]
[349.90191650 449.53906250]
[334.93719482 448.36346436]
[320.14480591 445.81210327]
[305.65090942 441.90670776]
[291.57919312 436.68066406]
[278.04971313 430.17852783]
[265.17791748 422.45574951]
[253.07359314 413.57824707]
[241.84001160 403.62176514]
[231.57304382 392.67126465]
[222.36027527 380.82012939]
[214.28028870 368.16949463]
[207.40205383 354.82727051]
[201.78422546 340.90734863]
[197.47474670 326.52844238]
[194.51039124 311.81323242]
[192.91642761 296.88726807]
[192.70648193 281.87792969]
[193.88233948 266.91323853]
[196.43395996 252.12088013]
[200.33956909 237.62705994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 146]
[3 145]
[4 144]
[5 143]
[6 142]
[7 141]
[8 140]
[9 139]
[10 138]
[12 136]
[13 126]
[14 125]
[15 124]
[16 123]
[17 122]
[19 120]
[20 119]
[26 114]
[27 113]
[28 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
