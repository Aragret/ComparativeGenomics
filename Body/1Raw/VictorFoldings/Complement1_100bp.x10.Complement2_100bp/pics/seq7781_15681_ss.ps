%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[95.17376709 444.58691406]
[87.12155914 457.28610229]
[77.03887177 468.44171143]
[65.21579742 477.73272705]
[51.99252701 484.89184570]
[37.74950409 489.71310425]
[22.89653397 492.05773926]
[7.86096859 491.85830688]
[-6.92459106 489.12057495]
[-21.03473473 483.92327881]
[-34.06348419 476.41595459]
[-45.63597870 466.81463623]
[-55.41925430 455.39556885]
[-63.13182449 442.48724365]
[-68.55178070 428.46112061]
[-71.52318573 413.72076416]
[-71.96054840 398.69021606]
[-69.85128021 383.80200195]
[-65.25606537 369.48446655]
[-58.30712128 356.14953613]
[-49.20438385 344.18090820]
[-38.20975876 333.92294312]
[-25.63957787 325.67074585]
[-11.85551548 319.66177368]
[2.74583626 316.06893921]
[17.74436760 314.99557495]
[32.70853806 316.47259521]
[36.68063354 302.00808716]
[32.58980560 287.68624878]
[43.70527267 276.42761230]
[47.67736816 261.96310425]
[51.64946365 247.49856567]
[55.62155914 233.03404236]
[59.59365845 218.56951904]
[63.56575394 204.10499573]
[67.53784943 189.64047241]
[71.50994873 175.17594910]
[75.48204041 160.71142578]
[79.45413971 146.24690247]
[75.36331177 131.92507935]
[86.47877502 120.66644287]
[90.45087433 106.20191956]
[78.35400391 115.07129669]
[63.38924026 116.09886169]
[50.19358063 108.96622467]
[42.85583878 95.88350677]
[43.64969635 80.90452576]
[52.32917023 68.67068481]
[66.20482635 62.97277832]
[80.97714233 65.57636261]
[92.06875610 75.67467499]
[96.04280853 90.13892365]
[101.91177368 76.33474731]
[90.67926788 68.00695038]
[81.59608459 57.38631821]
[75.11864471 45.01192856]
[71.57122803 31.51083755]
[71.12974548 17.56631470]
[73.81299591 3.88326263]
[79.48193359 -8.84741592]
[87.84683228 -19.98370552]
[98.48209381 -28.96485519]
[110.84793091 -35.33961105]
[124.31773376 -38.78889847]
[138.20983887 -39.14176941]
[151.82200623 -36.38389969]
[158.09938049 -50.00721741]
[156.84744263 -65.77880859]
[169.20086670 -74.09999847]
[175.47822571 -87.72332001]
[181.75558472 -101.34663391]
[188.03294373 -114.96994781]
[194.31030273 -128.59326172]
[200.58766174 -142.21658325]
[199.33573914 -157.98817444]
[211.68916321 -166.30937195]
[217.96652222 -179.93267822]
[224.24388123 -193.55599976]
[211.11520386 -200.82545471]
[198.55924988 -209.04466248]
[186.64459229 -218.16871643]
[175.43632507 -228.14778137]
[164.99563599 -238.92735291]
[155.37956238 -250.44856262]
[146.64062500 -262.64849854]
[138.82655334 -275.46051025]
[131.98002625 -288.81460571]
[126.13844299 -302.63790894]
[121.33369446 -316.85485840]
[117.59203339 -331.38781738]
[114.93388367 -346.15744019]
[113.37377930 -361.08300781]
[112.92023468 -376.08306885]
[113.57572937 -391.07565308]
[115.33667755 -405.97888184]
[118.19345856 -420.71136475]
[122.13047791 -435.19262695]
[127.12623596 -449.34359741]
[133.15342712 -463.08694458]
[140.17916870 -476.34765625]
[148.16503906 -489.05328369]
[157.06747437 -501.13442993]
[166.83781433 -512.52514648]
[177.42269897 -523.16314697]
[188.76434326 -532.99035645]
[200.80078125 -541.95312500]
[213.46626282 -550.00250244]
[226.69163513 -557.09454346]
[240.40466309 -563.19042969]
[254.53044128 -568.25695801]
[268.99182129 -572.26641846]
[283.70980835 -575.19689941]
[298.60403442 -577.03247070]
[313.59317017 -577.76300049]
[328.59530640 -577.38452148]
[343.52850342 -575.89910889]
[358.31124878 -573.31494141]
[372.86276245 -569.64605713]
[387.10357666 -564.91253662]
[400.95593262 -559.14025879]
[414.34414673 -552.36065674]
[427.19509888 -544.61077881]
[439.43862915 -535.93304443]
[451.00781250 -526.37475586]
[461.83950806 -515.98815918]
[471.87457275 -504.82995605]
[481.05813599 -492.96112061]
[489.34008789 -480.44647217]
[496.67517090 -467.35433960]
[503.02331543 -453.75625610]
[508.34988403 -439.72647095]
[512.62579346 -425.34161377]
[515.82763672 -410.68026733]
[517.93792725 -395.82247925]
[518.94519043 -380.84939575]
[518.84387207 -365.84283447]
[517.63458252 -350.88473511]
[515.32391357 -336.05679321]
[511.92443848 -321.44000244]
[507.45474243 -307.11416626]
[501.93927002 -293.15756226]
[495.40811157 -279.64642334]
[487.89694214 -266.65451050]
[479.44680786 -254.25280762]
[470.10385132 -242.50903320]
[459.91909790 -231.48731995]
[448.94815063 -221.24789429]
[437.25097656 -211.84666443]
[424.89141846 -203.33499146]
[411.93701172 -195.75933838]
[398.45849609 -189.16108704]
[384.52947998 -183.57629395]
[370.22607422 -179.03544617]
[355.62634277 -175.56335449]
[340.81008911 -173.17897034]
[325.85818481 -171.89532471]
[310.85229492 -171.71942139]
[295.87442017 -172.65223694]
[281.00631714 -174.68865967]
[266.32922363 -177.81756592]
[251.92329407 -182.02188110]
[237.86718750 -187.27864075]
[231.58982849 -173.65531921]
[225.31246948 -160.03199768]
[227.01341248 -145.23483276]
[214.21098328 -135.93922424]
[207.93362427 -122.31590271]
[201.65626526 -108.69258881]
[195.37890625 -95.06927490]
[189.10154724 -81.44595337]
[182.82417297 -67.82263947]
[184.52511597 -53.02547455]
[171.72268677 -43.72985458]
[165.44532776 -30.10654068]
[177.92637634 -19.98478127]
[187.38121033 -6.97794962]
[193.16571045 8.03725433]
[194.88336182 24.04699516]
[192.41244507 39.96875000]
[185.91468811 54.72451782]
[175.82460022 67.31378937]
[162.82051086 76.88140106]
[147.77886963 82.77561951]
[131.71531677 84.59252930]
[115.71595001 82.20370483]
[109.84699249 96.00788116]
[104.91539764 110.17401886]
[100.94329834 124.63854218]
[104.75001526 139.99494934]
[93.91866302 150.21899414]
[89.94656372 164.68351746]
[85.97447205 179.14804077]
[82.00237274 193.61256409]
[78.03027344 208.07708740]
[74.05818176 222.54161072]
[70.08608246 237.00614929]
[66.11399078 251.47067261]
[62.14189148 265.93518066]
[58.16979599 280.39971924]
[61.97651291 295.75613403]
[51.14515686 305.98016357]
[47.17306137 320.44470215]
[60.79290771 326.81710815]
[73.13980103 335.39978027]
[83.85849762 345.94577026]
[92.64060211 358.15161133]
[99.23343658 371.66613770]
[103.44730377 386.10052490]
[105.16096497 401.03942871]
[104.32512665 416.05307007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 202]
[28 201]
[30 199]
[31 198]
[32 197]
[33 196]
[34 195]
[35 194]
[36 193]
[37 192]
[38 191]
[39 190]
[41 188]
[42 187]
[52 186]
[53 185]
[66 174]
[67 173]
[69 171]
[70 170]
[71 169]
[72 168]
[73 167]
[74 166]
[76 164]
[77 163]
[78 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
