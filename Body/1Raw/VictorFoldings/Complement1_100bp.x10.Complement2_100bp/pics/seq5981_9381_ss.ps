%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[113.56562042 650.21362305]
[101.19854736 641.70751953]
[89.63164520 632.14172363]
[78.95544434 621.59112549]
[69.25349426 610.13818359]
[60.60173035 597.87255859]
[53.06787109 584.89031982]
[46.71087265 571.29302979]
[41.58049393 557.18713379]
[37.71688461 542.68298340]
[35.15028381 527.89416504]
[33.90077591 512.93634033]
[33.97814941 497.92660522]
[35.38179016 482.98245239]
[38.10071564 468.22085571]
[42.11364365 453.75729370]
[47.38917160 439.70501709]
[53.88600922 426.17401123]
[61.55330658 413.27011108]
[70.33105469 401.09439087]
[80.15055847 389.74206543]
[90.93496704 379.30203247]
[102.59986877 369.85598755]
[115.05397034 361.47787476]
[128.19981384 354.23324585]
[141.93449402 348.17880249]
[156.15051270 343.36193848]
[152.61083984 328.78558350]
[149.07116699 314.20919800]
[145.53149414 299.63281250]
[135.00935364 289.09082031]
[139.27160645 273.85455322]
[135.73193359 259.27816772]
[125.20978546 248.73617554]
[129.47203064 233.49992371]
[125.93235779 218.92353821]
[122.06805420 204.42984009]
[117.88104248 190.02606201]
[106.89866638 179.96441650]
[110.47632599 164.55302429]
[99.49395752 154.49137878]
[103.07161713 139.08000183]
[98.18598938 133.53451538]
[98.93120575 124.43052673]
[94.95910645 109.96600342]
[90.87944031 95.53144836]
[86.69242859 81.12767029]
[82.50542450 66.72388458]
[71.59832764 59.83925629]
[68.40748596 47.75611496]
[74.11612701 37.09131241]
[70.14402771 22.62678909]
[66.17193604 8.16226482]
[52.77386093 -4.46996403]
[57.86964417 -21.26281738]
[53.68263245 -35.66659927]
[49.49562073 -50.07038116]
[45.30860901 -64.47416687]
[40.80098343 -78.78085327]
[35.97498322 -92.98330688]
[31.14898682 -107.18576050]
[26.32298851 -121.38821411]
[21.49699020 -135.59066772]
[16.67099380 -149.79312134]
[11.84499550 -163.99559021]
[4.26058340 -151.05430603]
[-10.21783638 -147.13316345]
[-23.29636765 -154.47836304]
[-27.48303413 -168.88224792]
[-20.37952232 -182.09361267]
[-6.05504704 -186.54438782]
[7.28406477 -179.68568420]
[3.74439240 -194.26206970]
[-0.87026644 -179.98954773]
[-10.83035183 -168.77363586]
[-24.45741463 -162.50440979]
[-39.45505524 -162.23834229]
[-53.29590607 -168.02027893]
[-63.64754486 -178.87586975]
[-68.76553345 -192.97572327]
[-67.78740692 -207.94380188]
[-60.87799072 -221.25770569]
[-49.20164490 -230.67381287]
[-34.72603989 -234.60533142]
[-19.89056969 -232.38973999]
[-7.19527102 -224.40042114]
[1.22110486 -211.98214722]
[0.55131972 -226.96719360]
[-0.11846539 -241.95222473]
[-0.78825051 -256.93725586]
[-1.45803571 -271.92230225]
[-2.35085154 -286.89572144]
[-3.46650028 -301.85415649]
[-4.58214903 -316.81262207]
[-19.23503876 -320.62988281]
[-31.85315323 -329.00018311]
[-41.06776810 -341.01556396]
[-45.87936020 -355.37271118]
[-45.76599503 -370.51425171]
[-40.73997116 -384.79772949]
[-31.34647942 -396.67379761]
[-18.60445023 -404.85421753]
[-3.89604664 -408.45166016]
[11.18327618 -407.07586670]
[24.99782372 -400.87612915]
[36.04909897 -390.52490234]
[43.13834381 -377.14501953]
[45.49656296 -362.18780518]
[42.86796188 -347.27575684]
[35.53767014 -334.02639771]
[24.30082130 -323.87692261]
[10.37630463 -317.92825317]
[11.49195290 -302.96981812]
[12.60760212 -288.01135254]
[15.57768059 -284.27136230]
[16.22984123 -278.62585449]
[13.52700329 -272.59210205]
[14.19678783 -257.60705566]
[14.86657333 -242.62200928]
[15.53635883 -227.63697815]
[16.20614433 -212.65193176]
[18.32076836 -197.80174255]
[21.86043930 -183.22535706]
[26.04745102 -168.82157898]
[30.87344933 -154.61912537]
[35.69944763 -140.41667175]
[40.52544403 -126.21421814]
[45.35144043 -112.01175690]
[50.17744064 -97.80930328]
[55.00343704 -83.60684967]
[57.98760223 -81.72879028]
[60.21037674 -78.31201935]
[60.95846558 -73.73014069]
[59.71239090 -68.66117859]
[63.89940262 -54.25739288]
[68.08641815 -39.85361099]
[72.27342224 -25.44982910]
[82.72000122 -19.35100746]
[86.32614899 -7.38524532]
[80.63645935 4.19016838]
[84.60855103 18.65469170]
[88.58065033 33.11921692]
[101.71276855 44.76028061]
[96.90920258 62.53687668]
[101.09621429 76.94065857]
[105.28322601 91.34443665]
[110.37839508 97.59037781]
[109.42363739 105.99390411]
[113.39572906 120.45843506]
[117.47539520 134.89299011]
[128.75724792 145.98487854]
[124.88011169 160.36601257]
[136.16197205 171.45791626]
[132.28482056 185.83905029]
[136.47183228 200.24284363]
[140.24108887 203.85389709]
[142.06582642 208.12281799]
[142.02108765 212.19873047]
[140.50872803 215.38386536]
[144.04840088 229.96025085]
[154.82373047 241.54484558]
[150.30830383 255.73851013]
[153.84797668 270.31488037]
[164.62330627 281.89947510]
[160.10787964 296.09313965]
[163.64755249 310.66952515]
[167.18722534 325.24591064]
[170.72689819 339.82226562]
[185.56880188 337.58282471]
[200.55056763 336.66384888]
[215.55491638 337.07260132]
[230.46443176 338.80584717]
[245.16241455 341.85000610]
[259.53381348 346.18130493]
[273.46618652 351.76580811]
[286.85049438 358.55978394]
[299.58193970 366.51013184]
[311.56091309 375.55456543]
[322.69366455 385.62231445]
[332.89303589 396.63458252]
[342.07925415 408.50518799]
[350.18035889 421.14123535]
[357.13296509 434.44381714]
[362.88269043 448.30880737]
[367.38452148 462.62774658]
[370.60321045 477.28848267]
[372.51354980 492.17633057]
[373.10064697 507.17477417]
[372.35983276 522.16638184]
[370.29696655 537.03387451]
[366.92819214 551.66088867]
[362.27981567 565.93286133]
[356.38827515 579.73822021]
[349.29965210 592.96881104]
[341.06945801 605.52117920]
[331.76205444 617.29699707]
[321.45031738 628.20416260]
[310.21496582 638.15722656]
[298.14389038 647.07843018]
[285.33163452 654.89782715]
[271.87838745 661.55426025]
[257.88949585 666.99566650]
[243.47444153 671.17938232]
[228.74603271 674.07275391]
[213.81953430 675.65307617]
[198.81178284 675.90795898]
[183.84022522 674.83551025]
[169.02204895 672.44403076]
[154.47322083 668.75225830]
[140.30760193 663.78906250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 168]
[28 167]
[29 166]
[30 165]
[32 163]
[33 162]
[35 160]
[36 159]
[37 155]
[38 154]
[40 152]
[42 150]
[44 149]
[45 148]
[46 146]
[47 145]
[48 144]
[51 142]
[52 141]
[53 140]
[55 137]
[56 136]
[57 135]
[58 134]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[72 123]
[73 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
