%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[186.09455872 614.25402832]
[173.60333252 605.94360352]
[161.54187012 597.02087402]
[149.94017029 587.50799561]
[138.82707214 577.42864990]
[128.23019409 566.80792236]
[118.17590332 555.67218018]
[108.68917084 544.04907227]
[99.79360199 531.96759033]
[91.51129913 519.45770264]
[83.86286163 506.55050659]
[76.86730957 493.27810669]
[70.54202271 479.67352295]
[64.90273285 465.77056885]
[59.96345901 451.60379028]
[55.73648071 437.20843506]
[52.23231125 422.62026978]
[49.45965576 407.87554932]
[47.42541504 393.01095581]
[46.13463974 378.06347656]
[45.59054184 363.07019043]
[45.79447556 348.06845093]
[46.74592972 333.09552002]
[48.44254303 318.18862915]
[50.88009644 303.38482666]
[54.05253220 288.72094727]
[57.95195389 274.23342896]
[62.56867599 259.95828247]
[67.89122009 245.93098450]
[73.90634918 232.18646240]
[80.59910583 218.75883484]
[87.95286560 205.68151855]
[95.94932556 192.98701477]
[104.56861877 180.70687866]
[113.78931427 168.87164307]
[123.58848572 157.51074219]
[133.94177246 146.65240479]
[123.61510468 135.77307129]
[113.28843689 124.89373016]
[102.96176910 114.01439667]
[89.61100006 109.86124420]
[86.15889740 96.31227112]
[75.83222961 85.43293762]
[65.50556183 74.55360413]
[59.28509521 72.31366730]
[55.67200470 67.92702484]
[55.03937531 63.19322968]
[45.04120255 52.01125336]
[35.04302979 40.82928085]
[25.04485893 29.64730453]
[12.91311836 38.49035263]
[-0.03882993 46.08150482]
[-13.68226051 52.34532547]
[-27.88157654 57.21954727]
[-42.49565125 60.65573883]
[-57.37924194 62.61973953]
[-72.38442993 63.09203339]
[-87.36206818 62.06792831]
[-102.16331482 59.55760193]
[-116.64105988 55.58600235]
[-130.65141296 50.19260025]
[-144.05511475 43.43099976]
[-156.71896362 35.36840820]
[-168.51710510 26.08495140]
[-179.33226013 15.67289543]
[-189.05696106 4.23572493]
[-197.59454346 -8.11289024]
[-204.86016846 -21.25022125]
[-210.78160095 -35.04570007]
[-215.30000305 -49.36221313]
[-218.37046814 -64.05747986]
[-219.96249390 -78.98544312]
[-220.06022644 -93.99774170]
[-218.66271973 -108.94516754]
[-215.78385925 -123.67916870]
[-211.45223999 -138.05329895]
[-205.71093750 -151.92471313]
[-198.61698914 -165.15553284]
[-190.24092102 -177.61425781]
[-180.66596985 -189.17709351]
[-169.98728943 -199.72908020]
[-158.31103516 -209.16537476]
[-145.75323486 -217.39216614]
[-132.43870544 -224.32772827]
[-118.49976349 -229.90309143]
[-104.07496643 -234.06286621]
[-89.30765533 -236.76570129]
[-74.34461975 -237.98474121]
[-59.33455658 -237.70785522]
[-44.42665482 -235.93782043]
[-29.76907539 -232.69219971]
[-15.50749969 -228.00328064]
[-1.78366613 -221.91763306]
[11.26602650 -214.49577332]
[23.51188087 -205.81143188]
[34.83219147 -195.95094299]
[45.11444473 -185.01229858]
[54.25645065 -173.10423279]
[62.16734695 -160.34506226]
[68.76851654 -146.86161804]
[73.99433899 -132.78790283]
[77.79289246 -118.26380157]
[80.12641144 -103.43365479]
[80.97171783 -88.44485474]
[80.32039642 -73.44638062]
[78.17891693 -58.58728409]
[74.56858063 -44.01525116]
[69.52526093 -29.87511444]
[63.09907913 -16.30740166]
[55.35390472 -3.44696331]
[46.36671448 8.57838726]
[36.22683334 19.64913177]
[46.22500610 30.83110809]
[56.22317886 42.01308060]
[66.22135162 53.19505692]
[76.38489532 64.22693634]
[86.71156311 75.10626984]
[97.03823090 85.98560333]
[110.38899994 90.13875580]
[113.84110260 103.68772888]
[124.16777039 114.56706238]
[134.49443054 125.44639587]
[144.82110596 136.32572937]
[156.20397949 126.55209351]
[168.05989075 117.35799408]
[180.35934448 108.76628876]
[193.07177734 100.79834747]
[206.16557312 93.47396851]
[219.60818481 86.81137085]
[233.36618042 80.82711792]
[247.40538025 75.53607941]
[261.69085693 70.95141602]
[276.18710327 67.08453369]
[290.85806274 63.94502640]
[305.66729736 61.54071808]
[320.57797241 59.87757492]
[335.55300903 58.95973587]
[350.55517578 58.78948593]
[365.54718018 59.36724091]
[380.49172974 60.69157028]
[395.35171509 62.75918198]
[410.09014893 65.56493378]
[424.67044067 69.10184479]
[439.05627441 73.36112976]
[453.21191406 78.33219910]
[467.10217285 84.00268555]
[480.69253540 90.35849762]
[493.94918823 97.38383484]
[506.83917236 105.06123352]
[519.33044434 113.37159729]
[531.39190674 122.29427338]
[542.99371338 131.80706787]
[554.10681152 141.88633728]
[564.70379639 152.50703430]
[574.75811768 163.64273071]
[584.24493408 175.26576233]
[593.14056396 187.34722900]
[601.42291260 199.85708618]
[609.07141113 212.76422119]
[616.06701660 226.03657532]
[622.39239502 239.64111328]
[628.03173828 253.54405212]
[632.97113037 267.71081543]
[637.19818115 282.10614014]
[640.70239258 296.69430542]
[643.47515869 311.43899536]
[645.50946045 326.30355835]
[646.80029297 341.25106812]
[647.34448242 356.24432373]
[647.14062500 371.24606323]
[646.18927002 386.21902466]
[644.49273682 401.12591553]
[642.05523682 415.92971802]
[638.88287354 430.59362793]
[634.98352051 445.08117676]
[630.36688232 459.35635376]
[625.04443359 473.38363647]
[619.02935791 487.12820435]
[612.33666992 500.55587769]
[604.98297119 513.63323975]
[596.98657227 526.32775879]
[588.36737061 538.60797119]
[579.14672852 550.44323730]
[569.34759521 561.80419922]
[558.99438477 572.66259766]
[548.11279297 582.99139404]
[536.72985840 592.76501465]
[524.87390137 601.95904541]
[512.57440186 610.55065918]
[499.86190796 618.51855469]
[486.76809692 625.84283447]
[473.32543945 632.50537109]
[459.56741333 638.48956299]
[445.52819824 643.78051758]
[431.24267578 648.36511230]
[416.74642944 652.23193359]
[402.07543945 655.37133789]
[387.26620483 657.77557373]
[372.35552979 659.43865967]
[357.38049316 660.35638428]
[342.37832642 660.52661133]
[327.38632202 659.94873047]
[312.44174194 658.62432861]
[297.58178711 656.55664062]
[282.84335327 653.75085449]
[268.26309204 650.21386719]
[253.87728882 645.95446777]
[239.72166443 640.98333740]
[225.83142090 635.31280518]
[212.24110413 628.95690918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 123]
[38 122]
[39 121]
[40 120]
[42 118]
[43 117]
[44 116]
[47 115]
[48 114]
[49 113]
[50 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
