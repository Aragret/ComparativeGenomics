%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[5.14059591 771.04156494]
[1.78171337 755.35406494]
[12.06348228 743.03881836]
[12.06348228 728.03881836]
[8.91998196 721.35003662]
[12.17681217 712.81591797]
[12.40013981 697.81756592]
[12.62346745 682.81921387]
[12.84679508 667.82092285]
[13.07012272 652.82257080]
[13.29345036 637.82421875]
[10.24988556 631.08935547]
[13.63341427 622.60467529]
[14.08001995 607.61132812]
[-1.32793617 601.82434082]
[-13.84302807 591.09527588]
[-21.94120598 576.70758057]
[-24.62838364 560.39147949]
[-21.56243515 544.11614990]
[-13.09664440 529.85198975]
[-0.23908862 519.33190918]
[15.46736717 513.84100342]
[15.46736717 498.84100342]
[15.46736717 483.84100342]
[7.00945330 496.22903442]
[-6.19311142 503.34890747]
[-21.19083977 503.60995483]
[-34.63320160 496.95391846]
[-43.51713562 484.86773682]
[-45.85795212 470.05151367]
[-41.13270569 455.81521606]
[-30.39702988 445.33929443]
[-16.04929924 440.96405029]
[-1.29483414 443.66696167]
[10.57017899 452.84420776]
[16.89507103 466.44552612]
[19.34079933 451.64627075]
[21.78652573 436.84698486]
[19.77569199 429.73513794]
[24.38041306 421.84628296]
[27.04620743 407.08505249]
[29.71200371 392.32385254]
[32.37779999 377.56262207]
[35.04359436 362.80139160]
[26.66151047 355.06146240]
[23.01889038 344.12313843]
[25.13043022 332.66732788]
[32.58532333 323.56097412]
[43.62109375 319.13961792]
[38.68507004 305.08670044]
[49.11070251 293.18640137]
[52.21480942 278.51110840]
[55.31892014 263.83581543]
[48.98562241 253.52969360]
[51.45160675 241.27804565]
[61.92958069 233.75642395]
[65.25183868 219.12896729]
[68.57409668 204.50151062]
[71.89636230 189.87403870]
[63.76595688 177.44697571]
[66.92682648 162.56532288]
[80.01660919 154.12165833]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[90.90052795 71.26733398]
[101.26454926 60.56984711]
[103.48966980 45.73580551]
[104.60531616 30.77735138]
[97.91585541 16.43992805]
[106.57833862 4.32338142]
[107.69398499 -10.63507175]
[108.80963898 -25.59352493]
[98.77330017 -37.50611496]
[100.11782074 -52.66022110]
[111.53649902 -62.15491486]
[112.65215302 -77.11337280]
[105.96269226 -91.45079041]
[114.62516785 -103.56733704]
[115.62943268 -118.53368378]
[116.52224731 -133.50709534]
[117.41506195 -148.48049927]
[118.30787659 -163.45390320]
[110.34592438 -173.60131836]
[111.39781189 -186.05432129]
[120.35615540 -194.18295288]
[120.57948303 -209.18128967]
[119.90969849 -224.16632080]
[116.40022278 -232.59967041]
[119.34317780 -239.37911987]
[118.89656830 -254.37246704]
[118.44996643 -269.36581421]
[118.00335693 -284.35916138]
[117.55675507 -299.35250854]
[117.11014557 -314.34585571]
[102.88695526 -319.70956421]
[91.80245972 -330.11160278]
[85.54696655 -343.96575928]
[85.07439423 -359.15933228]
[90.45680237 -373.37545776]
[100.87341309 -384.44625854]
[114.73577118 -390.68353271]
[129.92996216 -391.13610840]
[144.13899231 -385.73501587]
[155.19609070 -375.30383301]
[161.41511536 -361.43328857]
[161.84771729 -346.23849487]
[156.42791748 -332.03659058]
[145.98222351 -320.99322510]
[132.10350037 -314.79248047]
[132.55010986 -299.79913330]
[132.99670410 -284.80575562]
[133.44331360 -269.81240845]
[133.88992310 -254.81906128]
[134.33653259 -239.82571411]
[134.89474487 -224.83610535]
[135.56452942 -209.85107422]
[144.92555237 -221.57160950]
[159.35691833 -225.66253662]
[173.47607422 -220.59803772]
[182.01693726 -208.26702881]
[181.79397583 -193.26869202]
[172.89033508 -181.19702148]
[158.62686157 -176.55445862]
[144.32347107 -181.07255554]
[135.31460571 -193.06729126]
[143.77520752 -177.69247437]
[133.28128052 -162.56108093]
[132.38847351 -147.58767700]
[131.49565125 -132.61427307]
[130.60282898 -117.64086914]
[133.34263611 -110.77680969]
[129.58361816 -102.45169067]
[136.35287476 -89.18419647]
[127.61060333 -75.99771881]
[126.49495697 -61.03926849]
[136.37884521 -49.95575714]
[135.46051025 -34.76986694]
[123.76808929 -24.47787666]
[122.65244293 -9.51942348]
[121.53679657 5.43903017]
[128.30604553 18.70652390]
[119.56377411 31.89299965]
[118.44812012 46.85145187]
[128.17378235 35.43166351]
[142.27290344 30.31164932]
[157.06002808 32.82976913]
[168.66983032 42.32779694]
[174.06753540 56.32296753]
[171.84219360 71.15697479]
[162.57551575 82.95225525]
[148.68977356 88.62553406]
[133.81466675 86.69384766]
[121.83853149 77.66211700]
[115.89201355 63.89210892]
[120.61826324 78.01697540]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[94.64407349 157.44392395]
[102.80223846 170.71351624]
[99.22462463 185.50051880]
[86.52381897 193.19630432]
[83.20156097 207.82376099]
[79.87930298 222.45121765]
[76.55703735 237.07868958]
[82.41017151 254.53784180]
[69.99422455 266.93991089]
[66.89011383 281.61520386]
[63.78600311 296.29052734]
[68.50000000 311.39312744]
[58.29639435 322.24374390]
[69.22864532 337.71630859]
[65.44464874 355.95346069]
[49.80481339 365.46719360]
[47.13901520 380.22842407]
[44.47322083 394.98962402]
[41.80742645 409.75085449]
[39.14162827 424.51208496]
[36.58579636 439.29272461]
[34.14006805 454.09201050]
[31.69434166 468.89126587]
[30.46736717 483.84100342]
[30.46736717 498.84100342]
[30.46736717 513.84100342]
[43.46136475 517.92144775]
[54.76622391 525.48687744]
[63.47200012 535.91705322]
[68.88117218 548.36151123]
[70.56452179 561.80889893]
[68.39515686 575.16949463]
[62.55804825 587.36315918]
[53.53429413 597.40673828]
[42.06147766 604.49359131]
[29.07336998 608.05792236]
[28.62676430 623.05126953]
[28.29178810 638.04754639]
[28.06846046 653.04589844]
[27.84513283 668.04425049]
[27.62180519 683.04254150]
[27.39847755 698.04089355]
[27.17514992 713.03924561]
[27.06348228 728.03881836]
[27.06348228 743.03881836]
[37.34525299 755.35406494]
[33.98637009 771.04156494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[13 200]
[14 199]
[22 189]
[23 188]
[24 187]
[36 186]
[37 185]
[38 184]
[40 183]
[41 182]
[42 181]
[43 180]
[44 179]
[49 176]
[51 174]
[52 173]
[53 172]
[56 170]
[57 169]
[58 168]
[59 167]
[62 164]
[63 163]
[64 162]
[65 161]
[67 159]
[69 157]
[70 146]
[71 145]
[73 143]
[74 142]
[75 141]
[78 138]
[79 137]
[81 135]
[82 133]
[83 132]
[84 131]
[85 130]
[88 128]
[89 119]
[90 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
