%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[94.92113495 936.22003174]
[79.95614624 935.16668701]
[65.04528809 933.51544189]
[50.21243286 931.26892090]
[35.48133469 928.43072510]
[20.87559128 925.00543213]
[6.41858435 920.99847412]
[-7.86653042 916.41638184]
[-21.95687866 911.26635742]
[-35.82989120 905.55676270]
[-49.46335983 899.29663086]
[-62.83544540 892.49603271]
[-75.92473602 885.16589355]
[-88.71026611 877.31793213]
[-101.17156982 868.96472168]
[-113.28868103 860.11962891]
[-125.04220581 850.79675293]
[-136.41331482 841.01116943]
[-147.38378906 830.77844238]
[-157.93608093 820.11492920]
[-168.05328369 809.03784180]
[-177.71919250 797.56475830]
[-186.91833496 785.71417236]
[-195.63595581 773.50506592]
[-203.85812378 760.95690918]
[-211.57167053 748.08978271]
[-218.76422119 734.92443848]
[-225.42427063 721.48181152]
[-231.54115295 707.78344727]
[-237.10508728 693.85137939]
[-242.10713196 679.70782471]
[-246.53929138 665.37548828]
[-250.39448547 650.87725830]
[-253.66650391 636.23645020]
[-256.35015869 621.47637939]
[-258.44107056 606.62078857]
[-259.93597412 591.69348145]
[-260.83245850 576.71826172]
[-261.12905884 561.71917725]
[-260.82528687 546.72021484]
[-259.92169189 531.74548340]
[-258.41967773 516.81884766]
[-256.32165527 501.96423340]
[-253.63096619 487.20547485]
[-250.35195923 472.56619263]
[-246.48986816 458.06982422]
[-242.05085754 443.73959351]
[-237.04206848 429.59844971]
[-231.47149658 415.66900635]
[-225.34808350 401.97360229]
[-218.68162537 388.53414917]
[-211.48278809 375.37219238]
[-203.76312256 362.50878906]
[-195.53497314 349.96453857]
[-186.81150818 337.75955200]
[-177.60671997 325.91336060]
[-167.93534851 314.44491577]
[-157.81286621 303.37261963]
[-147.25549316 292.71420288]
[-136.28012085 282.48669434]
[-124.90435791 272.70648193]
[-113.14638519 263.38928223]
[-101.02505493 254.54994202]
[-88.55977631 246.20265198]
[-75.77050018 238.36079407]
[-62.67771530 231.03689575]
[-49.30238724 224.24270630]
[-35.66593933 217.98908997]
[-21.79020119 212.28607178]
[-7.69739962 207.14279175]
[6.58989859 202.56747437]
[21.04881477 198.56744385]
[35.65619278 195.14912415]
[50.38863754 192.31796265]
[65.22256470 190.07852173]
[80.13420868 188.43437195]
[95.09970093 187.38813782]
[94.65309143 172.39479065]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[76.78319550 71.12583160]
[62.35478592 66.91067505]
[48.76346207 60.49021149]
[36.34392166 52.02253342]
[25.40200996 41.71617508]
[16.20717812 29.82493591]
[8.98585892 16.64164925]
[3.91588330 2.49096560]
[1.12210369 -12.27864170]
[0.67331964 -27.30345726]
[2.58058286 -42.21348190]
[6.79692554 -56.64154434]
[13.21851635 -70.23233795]
[21.68721771 -82.65117645]
[31.99447823 -93.59223938]
[43.88647842 -102.78608704]
[57.07035828 -110.00631714]
[71.22145844 -115.07512665]
[85.99129486 -117.86769104]
[101.01615143 -118.31523132]
[115.92601776 -116.40673828]
[130.35372925 -112.18920898]
[143.94400024 -105.76649475]
[156.36213684 -97.29676819]
[167.30235291 -86.98860168]
[176.49520874 -75.09584808]
[183.71435547 -61.91136932]
[188.78199768 -47.75984955]
[191.57334900 -32.98978424]
[192.01965332 -17.96489334]
[190.10992432 -3.05518413]
[185.89120483 11.37218094]
[179.46736145 24.96191406]
[170.99661255 37.37935638]
[160.68754578 48.31871796]
[148.79403687 57.51060486]
[135.60896301 64.72866058]
[121.45702362 69.79513550]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[109.64643860 171.94818115]
[110.09304810 186.94154358]
[125.09427643 187.09515381]
[140.07734680 187.84883118]
[155.01826477 189.20137024]
[169.89311218 191.15061951]
[184.67805481 193.69343567]
[199.34941101 196.82575989]
[213.88371277 200.54257202]
[228.25765991 204.83792114]
[242.44824219 209.70492554]
[256.43273926 215.13578796]
[270.18875122 221.12182617]
[283.69424438 227.65344238]
[296.92761230 234.72016907]
[309.86761475 242.31071472]
[322.49359131 250.41288757]
[334.78527832 259.01376343]
[346.72302246 268.09951782]
[358.28765869 277.65560913]
[369.46072388 287.66677856]
[380.22430420 298.11694336]
[390.56115723 308.98937988]
[400.45471191 320.26669312]
[409.88916016 331.93081665]
[418.84936523 343.96307373]
[427.32098389 356.34417725]
[435.29046631 369.05432129]
[442.74505615 382.07315063]
[449.67276001 395.37979126]
[456.06256104 408.95297241]
[461.90417480 422.77093506]
[467.18826294 436.81155396]
[471.90634155 451.05233765]
[476.05087280 465.47048950]
[479.61523438 480.04293823]
[482.59371948 494.74630737]
[484.98150635 509.55706787]
[486.77484131 524.45153809]
[487.97079468 539.40576172]
[488.56750488 554.39593506]
[488.56396484 569.39794922]
[487.96020508 584.38781738]
[486.75717163 599.34149170]
[484.95684814 614.23510742]
[482.56204224 629.04473877]
[479.57666016 643.74670410]
[476.00540161 658.31744385]
[471.85406494 672.73364258]
[467.12927246 686.97222900]
[461.83856201 701.01031494]
[455.99044800 714.82556152]
[449.59426880 728.39569092]
[442.66024780 741.69909668]
[435.19955444 754.71441650]
[427.22406006 767.42077637]
[418.74661255 779.79791260]
[409.78073120 791.82592773]
[400.34078979 803.48559570]
[390.44189453 814.75823975]
[380.09994507 825.62579346]
[369.33142090 836.07092285]
[358.15365601 846.07678223]
[346.58450317 855.62744141]
[334.64248657 864.70758057]
[322.34674072 873.30261230]
[309.71694946 881.39886475]
[296.77334595 888.98327637]
[283.53665161 896.04376221]
[270.02807617 902.56903076]
[256.26925659 908.54858398]
[242.28219604 913.97283936]
[228.08932495 918.83319092]
[213.71334839 923.12170410]
[199.17730713 926.83166504]
[184.50445557 929.95709229]
[169.71832275 932.49291992]
[154.84255981 934.43518066]
[139.90100098 935.78063965]
[124.91757965 936.52728271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[84 125]
[85 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
