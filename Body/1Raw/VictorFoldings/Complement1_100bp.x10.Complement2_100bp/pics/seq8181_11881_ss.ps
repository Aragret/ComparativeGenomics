%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[101.54709625 535.15563965]
[98.88130188 520.39447021]
[96.21550751 505.63323975]
[93.54971313 490.87200928]
[90.88391876 476.11080933]
[83.80514526 489.33541870]
[70.75245667 496.72647095]
[55.77036667 495.99368286]
[43.50123596 487.36416626]
[37.74679565 473.51187134]
[40.29011536 458.72906494]
[50.34312057 447.59634399]
[64.79077911 443.56335449]
[79.15632629 447.87969971]
[88.98855591 459.20822144]
[88.31877136 444.22317505]
[87.53744507 429.24353027]
[86.64463043 414.27014160]
[85.75181580 399.29672241]
[83.37149811 396.69549561]
[82.13285828 392.81207275]
[82.62478638 388.19567871]
[85.16867065 383.63763428]
[84.94534302 368.63928223]
[84.72201538 353.64096069]
[84.49868774 338.64260864]
[84.27536011 323.64428711]
[76.34942627 311.03359985]
[83.88040924 297.11978149]
[81.13820648 293.20959473]
[80.82322693 287.53530884]
[83.88040924 281.67312622]
[84.10373688 266.67477417]
[84.32706451 251.67643738]
[84.55039215 236.67810059]
[84.77371979 221.67976379]
[84.99704742 206.68142700]
[83.14362335 204.57833862]
[82.01158142 201.61437988]
[81.93299866 198.06060791]
[83.13576508 194.30323792]
[85.70671844 190.80406189]
[86.82236481 175.84561157]
[87.93801117 160.88716125]
[73.72003174 156.23255920]
[61.02873230 148.31126404]
[50.60137558 137.58343506]
[43.04372406 124.67226410]
[38.79481888 110.32782745]
[38.10149384 95.38341522]
[41.00402069 80.70719147]
[47.33378601 67.15174103]
[56.72307968 55.50453568]
[68.62644958 46.44219589]
[82.35239410 40.49117661]
[97.10353088 37.99718857]
[98.21918488 23.03873634]
[91.52972412 8.70131302]
[100.19220734 -3.41523290]
[101.30785370 -18.37368584]
[102.42350006 -33.33213806]
[103.53914642 -48.29059219]
[104.65480042 -63.24904633]
[94.74907684 -72.37545776]
[91.94915009 -85.35123444]
[97.05816650 -97.39199829]
[108.00465393 -104.18934631]
[109.34288788 -119.12953186]
[110.68112183 -134.06971741]
[111.90809631 -149.01945496]
[101.87176514 -160.93203735]
[103.21627808 -176.08615112]
[114.63495636 -185.58084106]
[115.75061035 -200.53929138]
[116.86625671 -215.49775696]
[117.98190308 -230.45620728]
[111.29244232 -244.79362488]
[119.95492554 -256.91018677]
[121.07057190 -271.86862183]
[122.18622589 -286.82708740]
[123.30187225 -301.78552246]
[121.27844238 -305.62738037]
[120.64635468 -309.52160645]
[121.25123596 -313.02438354]
[122.81043243 -315.78762817]
[124.95532227 -317.59249878]
[126.95933533 -332.45803833]
[128.96334839 -347.32354736]
[130.96736145 -362.18908691]
[132.97137451 -377.05462646]
[134.97538757 -391.92013550]
[135.97964478 -406.88647461]
[135.97964478 -421.88647461]
[135.97964478 -436.88647461]
[135.97964478 -451.88647461]
[121.48213196 -456.12896729]
[108.76785278 -464.28518677]
[98.86750031 -475.69393921]
[92.58365631 -489.43038940]
[90.42572784 -504.38098145]
[92.56864166 -519.33374023]
[98.83867645 -533.07647705]
[108.72756195 -544.49517822]
[121.43363953 -552.66412354]
[135.92689514 -556.92120361]
[151.03240967 -556.92120361]
[165.52566528 -552.66412354]
[178.23173523 -544.49517822]
[188.12062073 -533.07647705]
[194.39065552 -519.33374023]
[196.53356934 -504.38098145]
[194.37564087 -489.43038940]
[188.09179688 -475.69393921]
[178.19145203 -464.28518677]
[165.47717285 -456.12896729]
[150.97964478 -451.88647461]
[150.97964478 -436.88647461]
[150.97964478 -421.88647461]
[150.97964478 -406.88647461]
[160.29600525 -418.64257812]
[174.45445251 -423.59622192]
[189.06781006 -420.21249390]
[199.60800171 -409.53988647]
[202.80900574 -394.88540649]
[197.67898560 -380.78991699]
[185.80751038 -371.62106323]
[170.87309265 -370.21990967]
[157.50332642 -377.02059937]
[149.84091187 -389.91613770]
[147.83689880 -375.05059814]
[145.83288574 -360.18505859]
[143.82887268 -345.31954956]
[141.82485962 -330.45401001]
[139.82084656 -315.58850098]
[138.26033020 -300.66989136]
[137.14468384 -285.71142578]
[136.02902222 -270.75299072]
[134.91337585 -255.79452515]
[141.68263245 -242.52702332]
[132.94035339 -229.34056091]
[131.82470703 -214.38209534]
[130.70906067 -199.42364502]
[129.59341431 -184.46519470]
[139.47731018 -173.38168335]
[138.55897522 -158.19578552]
[126.86654663 -147.90380859]
[129.50384521 -140.99971008]
[125.62130737 -132.73149109]
[124.28307343 -117.79129791]
[122.94483948 -102.85111237]
[134.27003479 -90.41815186]
[133.07553101 -73.30418396]
[119.61325073 -62.13339615]
[118.49760437 -47.17494583]
[117.38195801 -32.21649170]
[116.26630402 -17.25803757]
[115.15065765 -2.29958439]
[121.91991425 10.96790981]
[113.17763519 24.15438461]
[112.06198883 39.11283875]
[126.27996826 43.76743317]
[138.97126770 51.68873596]
[149.39862061 62.41657257]
[156.95626831 75.32773590]
[161.20518494 89.67217255]
[161.89851379 104.61658478]
[158.99597168 119.29280853]
[152.66621399 132.84825134]
[143.27691650 144.49546814]
[131.37355042 153.55780029]
[117.64760590 159.50881958]
[102.89646912 162.00280762]
[101.78081512 176.96125793]
[100.66516876 191.91972351]
[99.99538422 206.90475464]
[99.77205658 221.90309143]
[99.54872894 236.90142822]
[99.32540131 251.89976501]
[99.10207367 266.89810181]
[98.87874603 281.89645386]
[98.87874603 296.89645386]
[106.82064819 310.57989502]
[99.27369690 323.42095947]
[99.49702454 338.41928101]
[99.72035217 353.41763306]
[99.94367981 368.41595459]
[100.16700745 383.41430664]
[100.72521973 398.40390015]
[101.61803436 413.37731934]
[102.51084900 428.35070801]
[106.14550018 436.73089600]
[103.30381012 443.55337524]
[103.97359467 458.53842163]
[105.64513397 473.44500732]
[108.31092834 488.20620728]
[110.97672272 502.96743774]
[113.64251709 517.72863770]
[116.30831909 532.48986816]
[131.10995483 536.07189941]
[143.17102051 545.36981201]
[150.40184021 558.77264404]
[151.54963684 573.95825195]
[146.41554260 588.29559326]
[135.88908386 599.30078125]
[121.79402924 605.06701660]
[106.57241821 604.59521484]
[92.86150360 597.96716309]
[83.03677368 586.33129883]
[78.80043030 571.70343018]
[80.88643646 556.61810303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[3 196]
[4 195]
[5 194]
[15 193]
[16 192]
[17 190]
[18 189]
[19 188]
[23 187]
[24 186]
[25 185]
[26 184]
[27 183]
[29 181]
[32 180]
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[42 174]
[43 173]
[44 172]
[56 160]
[57 159]
[59 157]
[60 156]
[61 155]
[62 154]
[63 153]
[67 150]
[68 149]
[69 148]
[70 146]
[73 143]
[74 142]
[75 141]
[76 140]
[78 138]
[79 137]
[80 136]
[81 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 119]
[93 118]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
