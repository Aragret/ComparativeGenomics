%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[38.59175873 380.03253174]
[43.01104355 394.39813232]
[45.18552780 409.26998901]
[45.06423950 424.29949951]
[42.65001678 439.13430786]
[37.99945831 453.42672729]
[31.22157669 466.84164429]
[22.47525597 479.06469727]
[11.96552086 489.80926514]
[-0.06126244 498.82351685]
[-13.32317066 505.89614868]
[-27.50932503 510.86138916]
[-42.28718185 513.60278320]
[-57.31032944 514.05615234]
[-72.22660065 512.21081543]
[-86.68633270 508.11001587]
[-100.35057831 501.84991455]
[-112.89902496 493.57723999]
[-124.03751373 483.48593140]
[-133.50494385 471.81253052]
[-141.07939148 458.83068848]
[-146.58329773 444.84472656]
[-149.88763428 430.18246460]
[-150.91496277 415.18765259]
[-149.64117432 400.21173096]
[-146.09616089 385.60580444]
[-140.36299133 371.71221924]
[-132.57608032 358.85671997]
[-122.91794586 347.34057617]
[-111.61500549 337.43383789]
[-98.93221283 329.36865234]
[-85.16686249 323.33410645]
[-70.64164734 319.47167969]
[-55.69704437 317.87188721]
[-40.68338394 318.57223511]
[-25.95261002 321.55630493]
[-11.85002899 326.75415039]
[-4.57679987 313.63546753]
[2.69642949 300.51675415]
[9.96965885 287.39807129]
[17.24288940 274.27938843]
[24.51611710 261.16067505]
[31.78934669 248.04199219]
[38.26884460 234.51364136]
[43.93162918 220.62361145]
[49.49085617 206.69181824]
[54.94621277 192.71902466]
[60.40156937 178.74621582]
[65.85692596 164.77342224]
[71.31228638 150.80062866]
[70.81671143 143.42660522]
[76.95427704 136.66139221]
[82.61706543 122.77136993]
[73.57389069 111.06175232]
[71.57897949 96.40179443]
[77.16439819 82.70153046]
[88.84043884 73.61504364]
[103.49290466 71.56584167]
[109.15569305 57.67581940]
[114.81848145 43.78578949]
[119.11260223 29.41357803]
[121.99787140 14.69368649]
[124.88314819 -0.02620492]
[127.76841736 -14.74609661]
[122.83009338 -29.77684593]
[132.87101746 -40.77816772]
[135.75628662 -55.49806213]
[129.38592529 -72.77521515]
[141.42710876 -85.54145050]
[144.09291077 -100.30266571]
[146.64874268 -115.08332062]
[149.09446716 -129.88258362]
[151.54019165 -144.68186951]
[136.98126221 -148.32745361]
[122.76792908 -153.14761353]
[108.99478149 -159.11024475]
[95.75347137 -166.17570496]
[83.13212585 -174.29693604]
[71.21474457 -183.41992188]
[60.08062744 -193.48391724]
[49.80387497 -204.42198181]
[40.45287704 -216.16130066]
[32.08986664 -228.62376404]
[24.77049637 -241.72642517]
[18.54347610 -255.38208008]
[13.45024872 -269.49984741]
[9.52470684 -283.98580933]
[6.79297543 -298.74353027]
[5.27323389 -313.67483521]
[4.97559643 -328.68029785]
[5.90204382 -343.66009521]
[8.04641056 -358.51455688]
[11.39442539 -373.14477539]
[15.92380810 -387.45343018]
[21.60441589 -401.34527588]
[28.39844322 -414.72787476]
[36.26068115 -427.51217651]
[45.13880157 -439.61306763]
[54.97372055 -450.95004272]
[65.69999695 -461.44766235]
[77.24623108 -471.03604126]
[89.53559875 -479.65139771]
[102.48631287 -487.23635864]
[116.01218414 -493.74047852]
[130.02319336 -499.12048340]
[144.42611694 -503.34054565]
[159.12507629 -506.37255859]
[174.02227783 -508.19641113]
[189.01855469 -508.79989624]
[204.01412964 -508.17904663]
[218.90921021 -506.33795166]
[233.60464478 -503.28890991]
[248.00267029 -499.05218506]
[262.00744629 -493.65597534]
[275.52578735 -487.13619995]
[288.46768188 -479.53622437]
[300.74707031 -470.90664673]
[312.28222656 -461.30490112]
[322.99630737 -450.79489136]
[332.81811523 -439.44653320]
[341.68222046 -427.33535767]
[349.52963257 -414.54196167]
[356.30816650 -401.15151978]
[361.97268677 -387.25308228]
[366.48550415 -372.93920898]
[369.81658936 -358.30511475]
[371.94375610 -343.44821167]
[372.85284424 -328.46734619]
[372.53784180 -313.46221924]
[371.00082397 -298.53271484]
[368.25198364 -283.77813721]
[364.30969238 -269.29675293]
[359.20010376 -255.18487549]
[352.95727539 -241.53642273]
[345.62274170 -228.44226074]
[337.24533081 -215.98948669]
[327.88073730 -204.26100159]
[317.59133911 -193.33485413]
[306.44555664 -183.28373718]
[294.51760864 -174.17456055]
[281.88687134 -166.06794739]
[268.63742065 -159.01783752]
[254.85736084 -153.07113647]
[240.63845825 -148.26744080]
[226.07531738 -144.63871765]
[211.26484680 -142.20909119]
[196.30563354 -140.99476624]
[181.29721069 -141.00379944]
[166.33946228 -142.23612976]
[163.89373779 -127.43686676]
[161.44801331 -112.63759613]
[163.45884705 -105.52574921]
[158.85412598 -97.63687134]
[156.18832397 -82.87565613]
[162.82566833 -72.76268005]
[160.72555542 -60.44304657]
[150.47618103 -52.61278915]
[147.59091187 -37.89289856]
[152.73561096 -23.91501236]
[142.48831177 -11.86082363]
[139.60304260 2.85906768]
[136.71777344 17.57895851]
[133.83248901 32.29885101]
[143.99653625 21.26743507]
[157.73625183 15.24911022]
[172.73625183 15.25806808]
[186.46876526 21.29279900]
[196.61964417 32.33634567]
[201.47825623 46.52767563]
[200.22586060 61.47529984]
[193.07350159 74.66028595]
[181.22648621 83.86072540]
[166.68122864 87.52618408]
[151.88887024 85.03897095]
[139.34217834 76.81822205]
[131.15550232 64.24928284]
[128.70851135 49.44857788]
[123.04572296 63.33860397]
[117.38293457 77.22863007]
[126.42610931 88.93824768]
[128.42102051 103.59820557]
[122.83560181 117.29846954]
[111.15956116 126.38495636]
[96.50709534 128.43415833]
[90.84430695 142.32418823]
[85.28507996 156.25598145]
[79.82972717 170.22877502]
[74.37436676 184.20158386]
[68.91901398 198.17437744]
[63.46365356 212.14717102]
[63.25769806 221.27928162]
[57.82165527 226.28640747]
[52.15887070 240.17642212]
[65.56568909 233.44908142]
[80.38457489 235.77301025]
[91.08844757 246.28144836]
[93.68502808 261.05499268]
[87.20585632 274.58349609]
[74.06749725 281.82113647]
[59.17024231 280.06848145]
[48.07039642 269.97921753]
[44.90804291 255.31521606]
[37.63481140 268.43389893]
[30.36158180 281.55261230]
[23.08835220 294.67129517]
[15.81512356 307.78997803]
[8.54189396 320.90869141]
[1.26866472 334.02737427]
[13.14839840 343.23455811]
[23.48335457 354.14736938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 208]
[38 207]
[39 206]
[40 205]
[41 204]
[42 203]
[43 202]
[44 193]
[45 192]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[52 185]
[53 184]
[58 179]
[59 178]
[60 177]
[61 163]
[62 162]
[63 161]
[64 160]
[66 158]
[67 157]
[69 154]
[70 153]
[71 151]
[72 150]
[73 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
