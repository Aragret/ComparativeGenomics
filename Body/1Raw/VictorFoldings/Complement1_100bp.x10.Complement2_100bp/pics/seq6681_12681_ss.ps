%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[102.74655914 560.20068359]
[112.65709686 547.58477783]
[112.21048737 532.59143066]
[111.76388550 517.59808350]
[111.31727600 502.60473633]
[103.20446777 490.11346436]
[110.52745819 476.08905029]
[110.08084869 461.09570312]
[93.84059906 457.17086792]
[79.34127808 448.84201050]
[67.75057220 436.77114868]
[60.00433731 421.92199707]
[56.73109055 405.48306274]
[58.20099258 388.77249146]
[64.30357361 373.13235474]
[74.55599213 359.82083130]
[88.14124298 349.91116333]
[103.97323608 344.20486450]
[102.85758972 329.24642944]
[101.74193573 314.28796387]
[100.62628937 299.32952881]
[89.78221893 292.36993408]
[84.85303497 280.25445557]
[87.84584808 267.32180786]
[97.88635254 258.34387207]
[96.99353027 243.37046814]
[96.10071564 228.39706421]
[95.20790100 213.42366028]
[94.31508636 198.45025635]
[91.93476868 195.84901428]
[90.69612885 191.96562195]
[91.18805695 187.34919739]
[93.73194122 182.79115295]
[93.50861359 167.79281616]
[93.28528595 152.79447937]
[93.06195831 137.79614258]
[92.83863068 122.79780579]
[92.61530304 107.79946899]
[89.83969116 93.05850983]
[84.59297180 79.00603485]
[79.34626007 64.95356750]
[74.09954071 50.90109253]
[68.85282135 36.84862137]
[63.39746475 22.87582397]
[56.91796875 9.34747887]
[49.64473724 -3.77121472]
[42.37150955 -16.88990974]
[35.09827805 -30.00860214]
[28.20027733 -35.99654007]
[27.81608009 -43.37720108]
[20.73897362 -56.60272980]
[13.93088818 -62.69270325]
[13.65662003 -70.07826996]
[6.77720737 -83.40769958]
[-0.10220534 -96.73712921]
[-6.98161793 -110.06655884]
[-13.86103058 -123.39598846]
[-18.25449371 -126.21459961]
[-20.86628723 -130.05281067]
[-21.60639191 -134.06120300]
[-20.73494530 -137.47776794]
[-27.01230621 -151.10108948]
[-33.28966522 -164.72441101]
[-47.53524017 -159.97816467]
[-62.21648407 -156.82789612]
[-77.15518188 -155.31181335]
[-92.16999817 -155.44836426]
[-107.07865143 -157.23585510]
[-121.70018005 -160.65261841]
[-135.85708618 -165.65715027]
[-149.37750244 -172.18870544]
[-162.09733582 -180.16799927]
[-173.86215210 -189.49818420]
[-184.52914429 -200.06597900]
[-193.96882629 -211.74311829]
[-202.06661987 -224.38784790]
[-208.72421265 -237.84666443]
[-213.86077881 -251.95619202]
[-217.41398621 -266.54516602]
[-219.34068298 -281.43646240]
[-219.61750793 -296.44934082]
[-218.24105835 -311.40155029]
[-215.22808838 -326.11157227]
[-210.61514282 -340.40087891]
[-204.45822144 -354.09597778]
[-196.83207703 -367.03060913]
[-187.82928467 -379.04782104]
[-177.55911255 -390.00164795]
[-166.14624023 -399.75918579]
[-153.72921753 -408.20199585]
[-140.45875549 -415.22750854]
[-126.49596405 -420.75054932]
[-112.01033783 -424.70397949]
[-97.17771149 -427.03985596]
[-82.17813873 -427.72982788]
[-67.19370270 -426.76547241]
[-52.40630341 -424.15856934]
[-37.99544525 -419.94070435]
[-24.13606453 -414.16308594]
[-10.99639606 -406.89587402]
[1.26405215 -398.22729492]
[12.49645138 -388.26254272]
[22.56444931 -377.12258911]
[31.34583092 -364.94265747]
[38.73399734 -351.87060547]
[44.63926697 -338.06515503]
[48.98994827 -323.69381714]
[51.73323059 -308.93112183]
[52.83581543 -293.95623779]
[52.28431702 -278.95092773]
[50.08543015 -264.09738159]
[46.26584625 -249.57586670]
[40.87193298 -235.56269836]
[33.96916580 -222.22796631]
[25.64134216 -209.73355103]
[15.98954773 -198.23110962]
[5.13095093 -187.86029053]
[-6.80263567 -178.74696350]
[-19.66634941 -171.00177002]
[-13.38898945 -157.37844849]
[-7.11162901 -143.75512695]
[-0.53160125 -130.27540588]
[6.34781122 -116.94596863]
[13.22722340 -103.61653900]
[20.10663605 -90.28710938]
[26.98604965 -76.95767975]
[33.96450043 -63.67983627]
[41.04160690 -50.45430756]
[48.21697235 -37.28183365]
[55.49020386 -24.16313744]
[62.76343155 -11.04444408]
[70.03665924 2.07424974]
[73.19843292 -12.58873749]
[84.29779816 -22.67853737]
[99.19496918 -24.43190575]
[112.33367157 -17.19487572]
[118.81348419 -3.66668510]
[116.21761322 11.10698795]
[105.51424408 21.61592865]
[90.69546509 23.94056129]
[77.28749084 17.21303749]
[81.26399231 19.85811806]
[83.62109375 25.02929688]
[82.90528870 31.60190392]
[88.15200806 45.65437698]
[93.39872742 59.70684814]
[98.64544678 73.75931549]
[103.89216614 87.81179047]
[105.45522308 72.89344788]
[110.63128662 58.81480026]
[119.10382843 46.43675232]
[130.35475159 36.51623154]
[143.69606018 29.65987778]
[158.31192017 26.28696442]
[173.30857849 26.60374260]
[187.76896667 30.59084320]
[200.80883789 38.00445175]
[211.63081360 48.39122772]
[219.57308960 61.11600876]
[224.15002441 75.40067291]
[225.08172607 90.37171173]
[222.31121826 105.11363220]
[216.00791931 118.72496796]
[206.55728149 130.37338257]
[194.53721619 139.34655762]
[180.68273926 145.09577942]
[165.84107971 147.26950073]
[150.91979980 145.73478699]
[136.83134460 140.58549500]
[124.43721771 132.13647461]
[114.49533844 120.90442657]
[107.61363983 107.57614136]
[107.83696747 122.57447815]
[108.06029510 137.57281494]
[108.28362274 152.57115173]
[108.50695038 167.56948853]
[108.73027802 182.56782532]
[109.28849030 197.55743408]
[110.18130493 212.53083801]
[111.07411957 227.50425720]
[111.96694183 242.47766113]
[112.85975647 257.45104980]
[126.15422058 268.82104492]
[127.09380341 285.95089722]
[115.58474731 298.21386719]
[116.70039368 313.17233276]
[117.81604004 328.13076782]
[118.93168640 343.08923340]
[132.11442566 345.31954956]
[144.45686340 350.43847656]
[155.33517456 358.18325806]
[164.20042419 368.15856934]
[170.60627747 379.85662842]
[174.23146057 392.68310547]
[174.89585876 405.98724365]
[172.56948853 419.09487915]
[167.37384033 431.34268188]
[159.57550049 442.11163330]
[149.57246399 450.85833740]
[137.87391663 457.14254761]
[125.07420349 460.64907837]
[125.52080536 475.64242554]
[133.66555786 489.20611572]
[126.31063080 502.15811157]
[126.75723267 517.15148926]
[127.20384216 532.14483643]
[127.65044403 547.13818359]
[138.29432678 559.14178467]
[135.40400696 574.92236328]
[121.19669342 582.37432861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[5 204]
[7 202]
[8 201]
[18 188]
[19 187]
[20 186]
[21 185]
[25 182]
[26 181]
[27 180]
[28 179]
[29 178]
[33 177]
[34 176]
[35 175]
[36 174]
[37 173]
[38 172]
[39 148]
[40 147]
[41 146]
[42 145]
[43 144]
[44 141]
[45 132]
[46 131]
[47 130]
[48 129]
[50 128]
[51 127]
[53 126]
[54 125]
[55 124]
[56 123]
[57 122]
[61 121]
[62 120]
[63 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
