%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[248.02729797 458.07019043]
[259.73391724 448.64141846]
[252.26615906 435.63247681]
[239.21961975 428.44656372]
[239.05949402 412.62619019]
[231.59175110 399.61721802]
[224.12400818 386.60827637]
[216.65626526 373.59933472]
[209.18852234 360.59036255]
[196.14198303 353.40447998]
[195.98185730 337.58407593]
[182.93530273 330.39819336]
[182.77517700 314.57778931]
[175.30743408 301.56884766]
[173.08045959 316.40261841]
[163.26753235 327.74749756]
[148.90930176 332.08819580]
[134.45484924 328.07965088]
[124.38300323 316.96398926]
[121.81465912 302.18548584]
[127.54563904 288.32345581]
[139.80014038 279.67318726]
[154.78097534 278.91506958]
[167.84632874 286.28414917]
[162.18354797 272.39413452]
[147.37683105 274.59625244]
[132.46435547 273.18966675]
[118.31340790 268.25180054]
[105.74796295 260.06564331]
[95.50081635 249.10333252]
[88.17079163 235.99917603]
[84.18775177 221.51277161]
[83.78741455 206.48501587]
[86.99739838 191.78936768]
[93.63535309 178.28097534]
[103.31931305 166.74696350]
[115.48969269 157.86061096]
[109.82690430 143.97058105]
[104.16412354 130.08055115]
[98.50133514 116.19052124]
[84.98957062 106.25028229]
[87.45326996 89.65792084]
[81.58431244 75.85374451]
[75.71534729 62.04956436]
[69.84638977 48.24538803]
[63.97742844 34.44121170]
[58.10846710 20.63703346]
[45.12033844 17.07008171]
[36.68119049 6.82355976]
[35.69898605 -6.21934509]
[42.30889511 -17.28002357]
[36.64610672 -31.17005157]
[30.98332024 -45.06007767]
[18.60873795 -54.91808319]
[20.96870422 -69.62454224]
[15.30591774 -83.51456451]
[9.64313030 -97.40459442]
[3.98034406 -111.29461670]
[-1.68244243 -125.18464661]
[-7.34522915 -139.07467651]
[-10.86787319 -141.61335754]
[-13.16809559 -144.81858826]
[-14.18646145 -148.22422791]
[-14.02102757 -151.39270020]
[-12.90437603 -153.96392822]
[-17.73037338 -168.16639709]
[-19.90227127 -153.32446289]
[-26.11525917 -139.67166138]
[-35.87935257 -128.28472900]
[-48.42451477 -120.06165314]
[-62.76138306 -115.65096283]
[-77.75929260 -115.40048981]
[-92.23544312 -119.33000183]
[-105.04818726 -127.12959290]
[-115.18705750 -138.18414307]
[-121.85246277 -151.62187195]
[-124.51873779 -166.38301086]
[-122.97560883 -181.30342102]
[-117.34477997 -195.20643616]
[-108.07031250 -206.99559021]
[-95.88363647 -215.74114990]
[-81.74584198 -220.75341797]
[-66.77188873 -221.63708496]
[-52.14269638 -218.32246399]
[-39.01197815 -211.07096863]
[-28.41527557 -200.45446777]
[-21.18706322 -187.30699158]
[-29.33181572 -200.87068176]
[-21.97688484 -213.82267761]
[-22.42349052 -228.81602478]
[-22.87009621 -243.80938721]
[-23.31670189 -258.80273438]
[-23.76330757 -273.79608154]
[-38.44992828 -277.25521851]
[-51.74036789 -284.39849854]
[-62.72846222 -294.73892212]
[-70.66502380 -307.57144165]
[-75.00891876 -322.02111816]
[-75.46398163 -337.10272217]
[-71.99918365 -351.78802490]
[-64.85076141 -365.07568359]
[-54.50609970 -376.05978394]
[-41.67052078 -383.99139404]
[-27.21917725 -388.32971191]
[-12.13737965 -388.77896118]
[2.54656601 -385.30850220]
[15.83148479 -378.15493774]
[26.81158829 -367.80603027]
[34.73823547 -354.96740723]
[39.07097626 -340.51437378]
[39.51439285 -325.43240356]
[36.03825378 -310.74978638]
[28.87957191 -297.46765137]
[18.52643394 -286.49154663]
[5.68473387 -278.56985474]
[-8.76995850 -274.24267578]
[-8.32335186 -259.24932861]
[-7.87674618 -244.25598145]
[-7.43014050 -229.26263428]
[-6.98353434 -214.26928711]
[1.12927401 -201.77803040]
[-6.19371367 -187.75360107]
[-3.52791786 -172.99238586]
[1.29807973 -158.78993225]
[6.54479790 -144.73745728]
[12.20758438 -130.84742737]
[17.87037086 -116.95740509]
[23.53315735 -103.06738281]
[29.19594383 -89.17735291]
[34.85873032 -75.28732300]
[46.82827377 -66.42282867]
[44.87334824 -50.72286606]
[50.53613281 -36.83283615]
[56.19892120 -22.94281006]
[71.96492004 -17.08857536]
[78.75238037 -1.33277476]
[71.91264343 14.76807308]
[77.78160095 28.57225037]
[83.65056610 42.37642670]
[89.51952362 56.18060303]
[95.38848877 69.98477936]
[101.25744629 83.78895569]
[111.77629089 88.78848267]
[116.25323486 99.54014587]
[112.39135742 110.52774048]
[118.05414581 124.41776276]
[123.71693420 138.30778503]
[129.37971497 152.19781494]
[144.29408264 150.04206848]
[159.28190613 151.51770020]
[173.47239685 156.53462219]
[186.04211426 164.79708862]
[196.26278687 175.82119751]
[203.54350281 188.96319580]
[207.46482849 203.45704651]
[207.80300903 218.45909119]
[204.54273987 233.09721375]
[197.87777710 246.52145386]
[188.19941711 257.95339966]
[176.07357788 266.73135376]
[181.73635864 280.62136841]
[188.31639099 294.10110474]
[195.78413391 307.11004639]
[209.36482239 315.22644043]
[208.99079895 330.11633301]
[222.57148743 338.23272705]
[222.19747925 353.12261963]
[229.66522217 366.13159180]
[237.13296509 379.14053345]
[244.60070801 392.14947510]
[252.06843567 405.15844727]
[265.64913940 413.27481079]
[265.27511597 428.16473389]
[272.74285889 441.17367554]
[286.78848267 435.81948853]
[301.49874878 432.72857666]
[316.51147461 431.97705078]
[331.45690918 433.58337402]
[345.96704102 437.50805664]
[359.68450928 443.65438843]
[372.27151489 451.87103271]
[383.41812134 461.95568848]
[392.84982300 473.65994263]
[400.33432007 486.69561768]
[405.68731689 500.74166870]
[408.77703857 515.45220947]
[409.52734375 530.46496582]
[407.91976929 545.41027832]
[403.99389648 559.92010498]
[397.84643555 573.63702393]
[389.62872314 586.22338867]
[379.54318237 597.36914062]
[367.83813477 606.79986572]
[354.80184937 614.28332520]
[340.75534058 619.63519287]
[326.04455566 622.72363281]
[311.03170776 623.47271729]
[296.08654785 621.86389160]
[281.57705688 617.93682861]
[267.86062622 611.78826904]
[255.27494812 603.56951904]
[244.13002014 593.48303223]
[234.70025635 581.77722168]
[227.21791077 568.74029541]
[221.86720276 554.69335938]
[218.77993774 539.98229980]
[218.03210449 524.96942139]
[219.64215088 510.02438354]
[223.57040405 495.51522827]
[229.72013855 481.79928589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 174]
[3 173]
[5 171]
[6 170]
[7 169]
[8 168]
[9 167]
[11 165]
[13 163]
[14 162]
[24 161]
[25 160]
[37 148]
[38 147]
[39 146]
[40 145]
[42 142]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[51 134]
[52 133]
[53 132]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[65 124]
[66 123]
[87 122]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
