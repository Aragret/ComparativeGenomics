%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[212.10714722 508.73510742]
[219.41477966 495.59552002]
[228.78556824 483.83804321]
[239.96386719 473.78341675]
[252.64472961 465.70596313]
[246.77575684 451.90176392]
[240.90679932 438.09759521]
[235.03784180 424.29342651]
[221.02008057 424.95819092]
[207.58880615 420.78933716]
[196.36343384 412.26815796]
[188.70468140 400.40200806]
[185.54965210 386.60516357]
[187.29722595 372.53039551]
[193.75772095 359.87088013]
[204.17323303 350.15655518]
[198.51043701 336.26654053]
[192.84765625 322.37649536]
[187.18486023 308.48648071]
[181.52207947 294.59646606]
[175.85929871 280.70642090]
[170.09326172 266.85894775]
[156.22694397 261.54284668]
[150.07833862 247.62704468]
[155.74836731 233.11883545]
[149.87940979 219.31465149]
[144.01045227 205.51046753]
[138.14149475 191.70629883]
[132.27252197 177.90211487]
[125.79302979 164.37377930]
[118.71592712 151.14825439]
[111.63881683 137.92271423]
[104.56171417 124.69718933]
[97.48461151 111.47166443]
[96.59111023 126.44503021]
[89.75707245 139.79777527]
[78.13414764 149.27973938]
[63.68099594 153.29302979]
[48.83323669 151.16134644]
[36.09297562 143.24391174]
[27.60717201 130.87495422]
[24.80582809 116.13886261]
[28.16102409 101.51892090]
[37.10734940 89.47885132]
[50.13718796 82.04761505]
[65.05478668 80.47750854]
[79.34626770 85.03311920]
[90.60425568 94.94807434]
[79.15850830 84.02536774]
[82.82110596 69.58810425]
[78.42011261 55.24826050]
[62.60287857 55.05882263]
[47.63676834 49.99702454]
[34.98295975 40.56974030]
[25.87294960 27.70943832]
[21.18871498 12.68194962]
[21.37732887 -3.03811669]
[26.40831757 -17.91207314]
[35.77782059 -30.48775864]
[48.55903244 -39.54132462]
[43.94502258 -53.81405640]
[39.33101273 -68.08679199]
[34.71700287 -82.35951996]
[30.10299492 -96.63225555]
[25.38286018 -110.87024689]
[20.55686188 -125.07270050]
[15.73086452 -139.27516174]
[10.90486717 -153.47761536]
[5.65814877 -167.53009033]
[-6.71643400 -177.38809204]
[-4.35646820 -192.09454346]
[-10.01925468 -205.98457336]
[-15.68204117 -219.87460327]
[-30.31706238 -216.44493103]
[-45.30842972 -215.34703064]
[-60.28696823 -216.60794067]
[-74.88381958 -220.19659424]
[-88.73951721 -226.02464294]
[-101.51285553 -233.94854736]
[-112.88928223 -243.77319336]
[-122.58863831 -255.25660706]
[-130.37207031 -268.11602783]
[-136.04789734 -282.03475952]
[-139.47636414 -296.67007446]
[-140.57302856 -311.66152954]
[-139.31088257 -326.63998413]
[-135.72100830 -341.23651123]
[-129.89183044 -355.09173584]
[-121.96686554 -367.86441040]
[-112.14128876 -379.24005127]
[-100.65706635 -388.93844604]
[-87.79700470 -396.72082520]
[-73.87779236 -402.39550781]
[-59.24220657 -405.82275391]
[-44.25065613 -406.91818237]
[-29.27232742 -405.65481567]
[-14.67607117 -402.06372070]
[-0.82133484 -396.23339844]
[11.95069599 -388.30737305]
[23.32550049 -378.48086548]
[33.02296066 -366.99584961]
[40.80426788 -354.13513184]
[46.47780609 -340.21545410]
[49.90385437 -325.57958984]
[50.99804306 -310.58795166]
[49.73342514 -295.60974121]
[46.14114761 -281.01376343]
[40.30967331 -267.15951538]
[32.38260651 -254.38813782]
[22.55515480 -243.01414490]
[11.06933212 -233.31762695]
[-1.79201460 -225.53738403]
[3.87077188 -211.64735413]
[9.53355885 -197.75732422]
[21.50310135 -188.89283752]
[19.54817581 -173.19287109]
[22.07670212 -171.98262024]
[24.27818680 -169.69787598]
[25.74096489 -166.45817566]
[26.10421181 -162.52973938]
[25.10732269 -158.30360413]
[29.93332100 -144.10115051]
[34.75931931 -129.89869690]
[39.58531570 -115.69624329]
[44.71368790 -110.37444305]
[44.37572861 -101.24626923]
[48.98973846 -86.97353363]
[53.60374451 -72.70079803]
[58.21775436 -58.42806625]
[62.83176422 -44.15533066]
[77.08225250 -44.48624420]
[90.86363220 -40.78306580]
[103.05611420 -33.33740234]
[112.66639709 -22.74532509]
[118.90857697 -9.85966110]
[121.26844788 4.27866602]
[119.54579926 18.52473068]
[113.87140656 31.72231483]
[104.69712830 42.79774857]
[92.75995636 50.84725952]
[97.16095734 65.18711090]
[108.29191589 75.08412933]
[104.94410706 90.54707336]
[110.71013641 104.39456177]
[117.78723907 117.62008667]
[124.86434937 130.84561157]
[131.94145203 144.07113647]
[139.01855469 157.29667664]
[144.39141846 143.29194641]
[158.03675842 137.06259155]
[172.13789368 142.17706299]
[178.61706543 155.70556641]
[173.76271057 169.89834595]
[160.35560608 176.62515259]
[146.07670593 172.03315735]
[151.94566345 185.83734131]
[157.81462097 199.64151001]
[163.68359375 213.44569397]
[169.55255127 227.24986267]
[183.93455505 233.23280334]
[189.68988037 247.31579590]
[183.89743042 260.98999023]
[190.13505554 267.66305542]
[189.74932861 275.04364014]
[195.41210938 288.93365479]
[201.07489014 302.82369995]
[206.73768616 316.71371460]
[212.40046692 330.60375977]
[218.06324768 344.49377441]
[234.14144897 344.48010254]
[248.95829773 350.62271118]
[260.25631714 361.95364380]
[266.32641602 376.71704102]
[266.26651001 392.64096069]
[260.11532593 407.28720093]
[248.84201050 418.42446899]
[254.71098328 432.22863770]
[260.57992554 446.03280640]
[266.44891357 459.83700562]
[281.06414795 456.30929565]
[296.06069946 455.23547363]
[311.02944946 456.64480591]
[325.56204224 460.49880981]
[339.26202393 466.69238281]
[351.75564575 475.05657959]
[362.70205688 485.36315918]
[371.80264282 497.33102417]
[378.80914307 510.63360596]
[383.53039551 524.90802002]
[385.83758545 539.76489258]
[385.66784668 554.79888916]
[383.02572632 569.59991455]
[377.98333740 583.76409912]
[370.67822266 596.90509033]
[361.30972290 608.66436768]
[350.13336182 618.72113037]
[337.45404053 626.80102539]
[323.61770630 632.68365479]
[309.00177002 636.20855713]
[294.00500488 637.27947998]
[279.03652954 635.86730957]
[264.50466919 632.01049805]
[250.80589294 625.81427002]
[238.31388855 617.44769287]
[227.36946106 607.13897705]
[218.27119446 595.16937256]
[211.26725769 581.86541748]
[206.54875183 567.59008789]
[204.24440002 552.73278809]
[204.41706848 537.69879150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 179]
[6 178]
[7 177]
[8 176]
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[22 162]
[25 159]
[26 158]
[27 157]
[28 156]
[29 155]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[48 143]
[50 141]
[51 140]
[60 130]
[61 129]
[62 128]
[63 127]
[64 126]
[65 124]
[66 123]
[67 122]
[68 121]
[69 116]
[71 114]
[72 113]
[73 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
