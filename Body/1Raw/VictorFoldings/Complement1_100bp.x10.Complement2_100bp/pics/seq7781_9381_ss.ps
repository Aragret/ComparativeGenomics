%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[72.85910034 687.38415527]
[58.33520508 691.17395020]
[43.53005981 693.64660645]
[28.56287003 694.78216553]
[13.55414295 694.57147217]
[-1.37527502 693.01623535]
[-16.10518074 690.12902832]
[-30.51697350 685.93298340]
[-44.49461746 680.46203613]
[-57.92557144 673.76007080]
[-70.70169067 665.88122559]
[-82.72011566 656.88879395]
[-93.88407135 646.85522461]
[-104.10367584 635.86132812]
[-113.29663849 623.99554443]
[-121.38894653 611.35357666]
[-128.31544495 598.03704834]
[-134.02037048 584.15319824]
[-138.45776367 569.81390381]
[-141.59193420 555.13458252]
[-143.39761353 540.23333740]
[-143.86029053 525.23028564]
[-142.97621155 510.24615479]
[-140.75251770 495.40158081]
[-137.20710754 480.81607056]
[-132.36853027 466.60711670]
[-126.27572632 452.88909912]
[-118.97776794 439.77249146]
[-110.53341675 427.36282349]
[-101.01065826 415.76010132]
[-90.48616028 405.05770874]
[-79.04467010 395.34182739]
[-66.77831268 386.69067383]
[-53.78583908 379.17388916]
[-40.17186356 372.85202026]
[-26.04600716 367.77597046]
[-11.52199650 363.98657227]
[3.28322339 361.51440430]
[18.25044823 360.37930298]
[33.25916672 360.59045410]
[48.18853760 362.14611816]
[51.07381058 347.42623901]
[53.95908356 332.70632935]
[56.84435654 317.98645020]
[59.72962952 303.26657104]
[62.50524139 288.52560425]
[65.17103577 273.76437378]
[67.72686768 258.98373413]
[70.17259216 244.18446350]
[64.61399841 230.36595154]
[74.49785614 218.01200867]
[67.44266510 201.94366455]
[79.24470520 187.80883789]
[81.46981812 172.97479248]
[83.69493866 158.14074707]
[85.92005920 143.30671692]
[88.14517212 128.47267151]
[77.05988312 120.61505890]
[70.42707825 108.75624847]
[69.53411865 95.19792938]
[74.55432892 82.57164001]
[84.51332855 73.32805634]
[97.47815704 69.26126099]
[99.92388153 54.46199036]
[102.36961365 39.66271973]
[104.81533813 24.86345100]
[107.26107025 10.06417942]
[109.70679474 -4.73509121]
[112.15251923 -19.53436279]
[114.59825134 -34.33363342]
[115.49106598 -49.30703735]
[114.82128143 -64.29207611]
[114.15149689 -79.27711487]
[99.59442139 -83.34517670]
[87.02450562 -91.70218658]
[77.66577148 -103.51923370]
[72.42490387 -117.63122559]
[71.80335236 -132.65174866]
[75.84941864 -147.10928345]
[84.15473175 -159.59135437]
[95.89545441 -168.88250732]
[109.91397858 -174.08270264]
[109.24419403 -189.06773376]
[108.57440948 -204.05278015]
[107.90462494 -219.03781128]
[94.78090668 -230.60446167]
[94.09647369 -247.74641418]
[105.78683472 -259.83666992]
[104.89401245 -274.81008911]
[104.00119781 -289.78347778]
[103.10838318 -304.75689697]
[99.47373199 -313.13705444]
[102.31542969 -319.95956421]
[101.64564514 -334.94461060]
[100.97586060 -349.92962646]
[100.30607605 -364.91467285]
[85.91319275 -369.73226929]
[74.23503876 -379.42687988]
[66.85100555 -392.68737793]
[64.75970459 -407.72036743]
[68.24398041 -422.49276733]
[76.83261108 -435.00677490]
[89.36404419 -443.56991577]
[104.14352417 -447.02413940]
[119.17223358 -444.90225220]
[132.41766357 -437.49124146]
[142.08848572 -425.79339600]
[146.87680054 -411.39074707]
[146.13500977 -396.23110962]
[139.96347046 -382.36474609]
[129.19679260 -371.66693115]
[115.29111481 -365.58447266]
[115.96089935 -350.59942627]
[116.63068390 -335.61437988]
[117.30046844 -320.62933350]
[118.08178711 -305.64971924]
[118.97460938 -290.67630005]
[119.86742401 -275.70288086]
[120.76023865 -260.72949219]
[131.49948120 -253.60923767]
[136.24774170 -241.42169189]
[133.06271362 -228.53503418]
[122.88966370 -219.70759583]
[123.55944824 -204.72256470]
[124.22923279 -189.73751831]
[124.89901733 -174.75248718]
[139.32557678 -170.82369995]
[151.84840393 -162.61705017]
[161.23419189 -150.92572021]
[166.55395508 -136.88681030]
[167.27494812 -121.87072754]
[163.31398010 -107.34744263]
[155.04684448 -94.74257660]
[143.27262878 -85.29745483]
[129.13653564 -79.94689941]
[129.80632019 -64.96186066]
[130.47610474 -49.97682571]
[137.51089478 -63.22490692]
[149.03094482 -72.83158875]
[163.32734680 -77.37177277]
[178.27928162 -76.17195129]
[191.66873169 -69.41010284]
[201.50946045 -58.08932495]
[206.34164429 -43.88897324]
[205.44845581 -28.91558838]
[198.96240234 -15.39038563]
[187.84565735 -5.31974602]
[173.74729919 -0.19759037]
[158.75875854 -0.78375947]
[145.10348511 -6.99129868]
[134.80715942 -17.89935684]
[129.39752197 -31.88790512]
[126.95178986 -17.08863449]
[124.50606537 -2.28936386]
[122.06034088 12.50990677]
[119.61460876 27.30917740]
[117.16888428 42.10844803]
[114.72315216 56.90771866]
[112.27742767 71.70699310]
[124.84294891 81.72276306]
[130.66493225 96.69982910]
[128.16304016 112.57271576]
[118.01636505 125.03278351]
[102.97921753 130.69778442]
[100.75409698 145.53182983]
[98.52898407 160.36587524]
[96.30386353 175.19992065]
[94.07875061 190.03395081]
[101.10364532 200.85124207]
[98.94495392 213.16073608]
[89.29712677 220.45773315]
[94.68078613 235.33477783]
[84.97186279 246.63018799]
[82.52613831 261.42944336]
[84.21444702 270.40649414]
[79.93225098 276.43017578]
[77.26645660 291.19140625]
[78.82092285 300.19259644]
[74.44951630 306.15182495]
[71.56424713 320.87173462]
[68.67897797 335.59161377]
[65.79370117 350.31152344]
[62.90842819 365.03140259]
[77.32035065 369.22695923]
[91.29816437 374.69750977]
[104.72932434 381.39904785]
[117.50568390 389.27752686]
[129.52438354 398.26959229]
[140.68864441 408.30282593]
[150.90858459 419.29641724]
[160.10191345 431.16186523]
[168.19459534 443.80364990]
[175.12150574 457.11996460]
[180.82684326 471.00360107]
[185.26469421 485.34277344]
[188.39930725 500.02200317]
[190.20544434 514.92315674]
[190.66856384 529.92620850]
[189.78495789 544.91040039]
[187.56170654 559.75500488]
[184.01675415 574.34063721]
[179.17860413 588.54974365]
[173.08621216 602.26794434]
[165.78866577 615.38476562]
[157.34469604 627.79467773]
[147.82228088 639.39770508]
[137.29811096 650.10040283]
[125.85692596 659.81665039]
[113.59082794 668.46820068]
[100.59857941 675.98535156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[46 177]
[47 176]
[48 174]
[49 173]
[51 171]
[53 168]
[54 167]
[55 166]
[56 165]
[57 164]
[63 159]
[64 158]
[65 157]
[66 156]
[67 155]
[68 154]
[69 153]
[70 152]
[71 137]
[72 136]
[73 135]
[82 126]
[83 125]
[84 124]
[85 123]
[88 119]
[89 118]
[90 117]
[91 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
