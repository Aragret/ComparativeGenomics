%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[34.06950760 600.74749756]
[31.40416145 615.56604004]
[25.71574211 629.50646973]
[17.25292397 641.95935059]
[6.38566399 652.38031006]
[-6.41096735 660.31378174]
[-20.57755661 665.41290283]
[-35.49480057 667.45489502]
[-50.51058197 666.35034180]
[-64.96847534 662.14758301]
[-78.23644257 655.03039551]
[-89.73446655 645.30981445]
[-98.95989990 633.41088867]
[-105.50945282 619.85369873]
[-109.09680176 605.23095703]
[-109.56512451 590.18188477]
[-106.89394379 575.36437988]
[-101.20004272 561.42620850]
[-92.73232269 548.97662354]
[-81.86096954 538.55993652]
[-69.06121826 530.63153076]
[-54.89262009 525.53796387]
[-39.97457504 523.50183105]
[-24.95923042 524.61230469]
[-20.77221870 510.20852661]
[-16.58520889 495.80474854]
[-12.50554180 481.37017822]
[-8.53344536 466.90567017]
[-12.62427330 452.58386230]
[-1.50880802 441.32522583]
[2.46328831 426.86068726]
[6.43538427 412.39614868]
[-1.13200963 399.61843872]
[2.69020820 384.89276123]
[16.14396667 377.04202271]
[20.11606216 362.57751465]
[12.54866791 349.79977417]
[16.37088585 335.07412720]
[29.82464409 327.22338867]
[33.79674149 312.75885010]
[37.76883698 298.29434204]
[41.74093246 283.82980347]
[45.71302795 269.36529541]
[32.50510406 262.31173706]
[21.19262314 252.49102783]
[12.34503937 240.39329529]
[6.40868092 226.62336731]
[3.68422270 211.87054443]
[4.31146574 196.87416077]
[8.26216602 182.38644409]
[15.34128666 169.13482666]
[25.19663048 157.78544617]
[37.33635330 148.90960693]
[51.15351868 142.95503235]
[65.95642853 140.22334290]
[81.00326538 140.85467529]
[84.97536469 126.39014435]
[88.94746399 111.92562103]
[84.28909302 95.81115723]
[96.35169983 84.15484619]
[100.10800171 69.63278198]
[96.07307434 54.33474731]
[106.75100708 43.95057678]
[110.50730133 29.42851830]
[114.26360321 14.90645885]
[118.01990509 0.38439918]
[113.98497772 -14.91363716]
[124.66291046 -25.29780960]
[128.41920471 -39.81986618]
[127.02276611 -44.84948349]
[127.63410187 -49.45161057]
[129.75416565 -52.93304443]
[132.68109131 -54.89911652]
[137.08209229 -69.23896790]
[141.48309326 -83.57881165]
[145.88407898 -97.91866302]
[134.16375732 -88.55736542]
[119.45326996 -85.62448883]
[105.03900146 -89.77524567]
[94.14112091 -100.08234406]
[89.19425201 -114.24314880]
[91.30353546 -129.09410095]
[99.99774933 -141.31747437]
[113.33458710 -148.18251038]
[128.33456421 -148.15556335]
[141.64663696 -141.24264526]
[150.29687500 -128.98811340]
[152.35278320 -114.12965393]
[159.03297424 -127.56002808]
[165.71316528 -140.99040222]
[172.39337158 -154.42077637]
[171.61155701 -170.22265625]
[184.20726013 -178.17234802]
[171.57984924 -186.29711914]
[159.92289734 -195.76170349]
[149.37789917 -206.45123291]
[140.07284546 -218.23594666]
[132.12072754 -230.97277832]
[125.61804199 -244.50711060]
[120.64373779 -258.67468262]
[117.25820923 -273.30346680]
[115.50254059 -288.21588135]
[115.39805603 -303.23095703]
[116.94600677 -318.16638184]
[120.12761688 -332.84088135]
[124.90425873 -347.07629395]
[131.21794128 -360.69979858]
[138.99203491 -373.54608154]
[148.13217163 -385.45913696]
[158.52738953 -396.29440308]
[170.05149841 -405.92031860]
[182.56460571 -414.22003174]
[195.91481018 -421.09280396]
[209.94007874 -426.45520020]
[224.47012329 -430.24212646]
[239.32858276 -432.40762329]
[254.33508301 -432.92538452]
[269.30746460 -431.78912354]
[284.06396484 -429.01266479]
[298.42547607 -424.62966919]
[312.21762085 -418.69338989]
[325.27304077 -411.27584839]
[337.43316650 -402.46710205]
[348.55047607 -392.37408447]
[358.48995972 -381.11932373]
[367.13095093 -368.83941650]
[374.36862183 -355.68344116]
[380.11505127 -341.81109619]
[384.30050659 -327.39080811]
[386.87417603 -312.59759521]
[387.80480957 -297.61102295]
[387.08111572 -282.61303711]
[384.71191406 -267.78570557]
[380.72592163 -253.30899048]
[375.17153931 -239.35865784]
[368.11618042 -226.10403442]
[359.64547729 -213.70600891]
[349.86230469 -202.31510925]
[338.88540649 -192.06958008]
[326.84802246 -183.09382629]
[313.89624023 -175.49678040]
[300.18734741 -169.37066650]
[285.88772583 -164.78985596]
[271.17095947 -161.80996704]
[256.21569824 -160.46714783]
[241.20346069 -160.77770996]
[226.31652832 -162.73788452]
[211.73558044 -166.32388306]
[197.63763428 -171.49215698]
[198.89724731 -156.65090942]
[185.82374573 -147.74058533]
[179.14353943 -134.31021118]
[172.46334839 -120.87983704]
[165.78315735 -107.44946289]
[160.22393799 -93.51766205]
[155.82293701 -79.17781067]
[151.42193604 -64.83796692]
[147.02093506 -50.49811935]
[142.94126892 -36.06356812]
[139.18496704 -21.54150772]
[143.48857117 -7.28218651]
[132.54196167 4.14069986]
[128.78565979 18.66275978]
[125.02936554 33.18481827]
[121.27306366 47.70687866]
[125.57666779 61.96619797]
[114.63005829 73.38908386]
[110.87375641 87.91114807]
[116.16896057 98.28428650]
[113.16858673 109.53768158]
[103.41198730 115.89772034]
[99.43988800 130.36224365]
[95.46778870 144.82676697]
[108.72681427 151.96849060]
[120.05859375 161.87702942]
[128.89694214 174.05300903]
[134.80117798 187.88389587]
[137.47814941 202.67477417]
[136.79678345 217.68327332]
[132.79444885 232.15681458]
[125.67496490 245.37036133]
[115.79824066 256.66278076]
[103.66203308 265.46981812]
[89.87688446 271.35238647]
[75.13542938 274.01843262]
[60.17755127 273.33737183]
[56.20545578 287.80191040]
[52.23336029 302.26641846]
[48.26126480 316.73095703]
[44.28916931 331.19546509]
[51.84667969 344.81610107]
[47.61235809 359.42861938]
[34.58058548 366.54959106]
[30.60848999 381.01412964]
[38.16600037 394.63476562]
[33.93167877 409.24725342]
[20.89990807 416.36825562]
[16.92781258 430.83279419]
[12.95571613 445.29730225]
[16.76243210 460.65371704]
[5.93107843 470.87777710]
[1.95898223 485.34228516]
[2.70420170 494.44625854]
[-2.18142629 499.99176025]
[-6.36843777 514.39550781]
[-10.55544853 528.79931641]
[2.71531749 535.91131592]
[14.21716404 545.62731934]
[23.44728088 557.52264404]
[30.00216484 571.07727051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 206]
[25 205]
[26 204]
[27 202]
[28 201]
[30 199]
[31 198]
[32 197]
[35 194]
[36 193]
[39 190]
[40 189]
[41 188]
[42 187]
[43 186]
[56 173]
[57 172]
[58 171]
[60 168]
[61 167]
[63 165]
[64 164]
[65 163]
[66 162]
[68 160]
[69 159]
[73 158]
[74 157]
[75 156]
[76 155]
[88 154]
[89 153]
[90 152]
[91 151]
[93 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
