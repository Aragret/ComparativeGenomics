%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[35.55400467 614.94171143]
[22.35957718 622.08666992]
[8.75032234 628.40582275]
[-5.22213507 633.87524414]
[-19.50479126 638.47406006]
[-34.04346848 642.18493652]
[-48.78301239 644.99377441]
[-63.66751862 646.88983154]
[-78.64051819 647.86602783]
[-93.64521027 647.91864014]
[-108.62468719 647.04742432]
[-123.52211761 645.25573730]
[-138.28099060 642.55029297]
[-152.84532166 638.94140625]
[-167.15986633 634.44281006]
[-181.17031860 629.07153320]
[-194.82353210 622.84790039]
[-208.06773376 615.79559326]
[-220.85264587 607.94134521]
[-233.12980652 599.31494141]
[-244.85261536 589.94909668]
[-255.97663879 579.87933350]
[-266.45965576 569.14385986]
[-276.26187134 557.78338623]
[-285.34616089 545.84106445]
[-293.67803955 533.36212158]
[-301.22589111 520.39398193]
[-307.96109009 506.98574829]
[-313.85809326 493.18829346]
[-318.89453125 479.05401611]
[-323.05126953 464.63650513]
[-326.31259155 449.99041748]
[-328.66607666 435.17135620]
[-330.10284424 420.23550415]
[-330.61740112 405.23956299]
[-330.20782471 390.24035645]
[-328.87567139 375.29483032]
[-326.62594604 360.45965576]
[-323.46725464 345.79110718]
[-319.41152954 331.34484863]
[-314.47415161 317.17562866]
[-308.67388916 303.33728027]
[-302.03271484 289.88220215]
[-294.57583618 276.86151123]
[-286.33151245 264.32458496]
[-277.33105469 252.31893921]
[-267.60858154 240.89015198]
[-257.20098877 230.08157349]
[-246.14772034 219.93418884]
[-234.49075317 210.48649597]
[-222.27429199 201.77435303]
[-209.54466248 193.83079529]
[-196.35015869 186.68594360]
[-182.74084473 180.36691284]
[-168.76834106 174.89765930]
[-154.48564148 170.29896545]
[-139.94692993 166.58824158]
[-125.20735168 163.77957153]
[-110.32283020 161.88362122]
[-95.34982300 160.90756226]
[-80.34512329 160.85511780]
[-65.36566162 161.72648621]
[-50.46824646 163.51834106]
[-35.70940018 166.22390747]
[-21.14510155 169.83290100]
[-6.83060312 174.33166504]
[7.17979813 179.70309448]
[20.83295441 185.92683411]
[34.07707596 192.97927856]
[41.92882919 180.19842529]
[49.78058624 167.41758728]
[57.63233948 154.63674927]
[57.70182037 139.74230957]
[71.51814270 132.03387451]
[79.36989594 119.25302887]
[87.22164917 106.47219086]
[87.79519653 92.50212860]
[99.99750519 85.67605591]
[107.84925842 72.89521027]
[115.70101929 60.11436844]
[100.72763062 61.00748062]
[90.58059692 49.96041107]
[92.73993683 35.11664963]
[105.61386108 27.41846466]
[119.71218872 32.54067230]
[124.64234924 46.70573044]
[123.36092377 33.87136841]
[130.92468262 23.92283249]
[142.84460449 21.86327934]
[151.80531311 9.83390141]
[160.76600647 -2.19547582]
[169.72669983 -14.22485352]
[158.52865601 -24.21992874]
[148.25781250 -35.16558456]
[138.99455261 -46.97615051]
[130.81135559 -59.55919647]
[123.77229309 -72.81623840]
[117.93244934 -86.64352417]
[113.33752441 -100.93283081]
[110.02347565 -115.57232666]
[108.01625824 -130.44743347]
[107.33155823 -145.44172668]
[107.97475433 -160.43785095]
[109.94081116 -175.31845093]
[113.21432495 -189.96705627]
[117.76969147 -204.26902771]
[123.57125092 -218.11241150]
[130.57360840 -231.38888550]
[138.72193909 -243.99453735]
[147.95248413 -255.83068848]
[158.19299316 -266.80471802]
[169.36334229 -276.83074951]
[181.37606812 -285.83029175]
[194.13717651 -293.73294067]
[207.54679871 -300.47680664]
[221.49996948 -306.00912476]
[235.88749695 -310.28662109]
[250.59675598 -313.27575684]
[265.51266479 -314.95321655]
[280.51843262 -315.30581665]
[295.49664307 -314.33081055]
[310.33007812 -312.03582764]
[324.90261841 -308.43884277]
[339.10025024 -303.56796265]
[352.81182861 -297.46139526]
[365.93002319 -290.16687012]
[378.35220337 -281.74145508]
[389.98114014 -272.25115967]
[400.72576904 -261.77023315]
[410.50207520 -250.38069153]
[419.23348999 -238.17167664]
[426.85168457 -225.23873901]
[433.29705811 -211.68312073]
[438.51916504 -197.61090088]
[442.47708130 -183.13221741]
[445.13989258 -168.36038208]
[446.48672485 -153.41101074]
[446.50708008 -138.40110779]
[445.20071411 -123.44814301]
[442.57794189 -108.66915131]
[438.65924072 -94.17979431]
[433.47528076 -80.09348297]
[427.06668091 -66.52045441]
[419.48352051 -53.56693649]
[410.78521729 -41.33431625]
[401.03982544 -29.91832924]
[390.32357788 -19.40832520]
[378.72042847 -9.88655758]
[366.32110596 -1.42755103]
[353.22271729 5.90249109]
[339.52774048 12.04619980]
[325.34335327 16.95549202]
[310.78060913 20.59194565]
[295.95343018 22.92709732]
[280.97790527 23.94267464]
[265.97125244 23.63072586]
[251.05085754 21.99369431]
[236.33355713 19.04439354]
[221.93449402 14.80590248]
[207.96638489 9.31139660]
[194.53854370 2.60387778]
[181.75607300 -5.26415777]
[172.79537964 6.76522017]
[163.83468628 18.79459763]
[154.87399292 30.82397461]
[153.77404785 48.33845520]
[136.80380249 55.48633194]
[128.48185730 67.96612549]
[120.63010406 80.74697113]
[112.77835083 93.52780914]
[112.20480347 107.49787140]
[100.00249481 114.32394409]
[92.15074158 127.10478973]
[84.29898071 139.88563538]
[83.66789246 155.69424438]
[70.41318512 162.48849487]
[62.56142807 175.26934814]
[54.70967102 188.05018616]
[46.85791779 200.83102417]
[59.13515854 209.45732117]
[70.85807037 218.82305908]
[81.98217773 228.89271545]
[92.46529388 239.62806702]
[102.26763916 250.98841858]
[111.35204315 262.93066406]
[119.68403625 275.40951538]
[127.23201752 288.37762451]
[133.96734619 301.78579712]
[139.86448669 315.58316040]
[144.90104675 329.71737671]
[149.05795288 344.13488770]
[152.31941223 358.78091431]
[154.67304993 373.59994507]
[156.10995483 388.53579712]
[156.62466431 403.53173828]
[156.21524048 418.53094482]
[154.88322449 433.47650146]
[152.63365173 448.31167603]
[149.47509766 462.98025513]
[145.41950989 477.42657471]
[140.48228455 491.59582520]
[134.68214417 505.43423462]
[128.04110718 518.88934326]
[120.58434296 531.91015625]
[112.34015656 544.44714355]
[103.33981323 556.45288086]
[93.61745453 567.88177490]
[83.20996094 578.69042969]
[72.15680695 588.83795166]
[60.49993515 598.28576660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 179]
[70 178]
[71 177]
[72 176]
[74 174]
[75 173]
[76 172]
[78 170]
[79 169]
[80 168]
[86 167]
[89 165]
[90 164]
[91 163]
[92 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
