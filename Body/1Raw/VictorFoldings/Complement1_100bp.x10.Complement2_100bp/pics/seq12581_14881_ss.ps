%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[98.64790344 552.38043213]
[83.59652710 555.15795898]
[68.98184967 550.61151123]
[58.16222763 539.78588867]
[53.62392044 525.16870117]
[56.40980148 510.11886597]
[65.87969971 498.09475708]
[79.85749054 491.85937500]
[80.75030518 476.88595581]
[81.64312744 461.91256714]
[72.95455170 446.66540527]
[83.22203827 431.37945557]
[83.89182281 416.39440918]
[84.56160736 401.40939331]
[85.23139191 386.42434692]
[85.90117645 371.43930054]
[86.57096100 356.45425415]
[87.24074554 341.46923828]
[80.07946777 328.40914917]
[88.42525482 314.96823120]
[81.26397705 301.90817261]
[89.60977173 288.46725464]
[90.27955627 273.48220825]
[90.94934082 258.49716187]
[91.61912537 243.51213074]
[92.28890991 228.52709961]
[92.95869446 213.54205322]
[84.04408264 198.42596436]
[94.08283997 182.98883057]
[94.52944183 167.99548340]
[94.97605133 153.00213623]
[94.75272369 138.00379944]
[93.85990906 123.03038788]
[92.96709442 108.05698395]
[90.30129242 93.29576874]
[85.90029907 78.95591736]
[81.49929810 64.61607361]
[65.89722443 56.70440292]
[60.94190598 40.28004074]
[69.23213959 25.64751244]
[64.61812592 11.37477970]
[60.00411606 -2.89795423]
[54.23808289 -16.74543953]
[47.35867310 -30.07486916]
[40.47925949 -43.40429688]
[33.59984589 -56.73372650]
[26.72043419 -70.06315613]
[19.84102058 -83.39258575]
[12.96160889 -96.72201538]
[6.24494886 -102.91267395]
[6.08067083 -110.30150604]
[-0.59952402 -123.73188019]
[-7.27971840 -137.16226196]
[-10.98142529 -139.43191528]
[-13.51367092 -142.45718384]
[-14.78251457 -145.77763367]
[-14.85319901 -148.94964600]
[-13.93088055 -151.59680176]
[-19.79984093 -165.40098572]
[-25.66880226 -179.20515442]
[-31.53776169 -193.00933838]
[-37.40672302 -206.81352234]
[-51.78873825 -212.79644775]
[-57.54405212 -226.87944031]
[-51.75161362 -240.55363464]
[-57.62057495 -254.35780334]
[-63.85819244 -261.03088379]
[-63.47245789 -268.41146851]
[-69.13524628 -282.30148315]
[-74.79803467 -296.19152832]
[-80.46081543 -310.08154297]
[-86.12360382 -323.97158813]
[-100.72976685 -320.43353271]
[-115.70011139 -319.11206055]
[-130.70021057 -320.03665161]
[-145.39494324 -323.18664551]
[-159.45602417 -328.49172974]
[-172.56932068 -335.83331299]
[-184.44187927 -345.04742432]
[-194.80848694 -355.92819214]
[-203.43751526 -368.23257446]
[-210.13619995 -381.68563843]
[-214.75489807 -395.98687744]
[-217.19041443 -410.81677246]
[-217.38835144 -425.84402466]
[-215.34426880 -440.73294067]
[-211.10385132 -455.15084839]
[-204.76182556 -468.77569580]
[-196.45986938 -481.30307007]
[-186.38345337 -492.45312500]
[-174.75769043 -501.97674561]
[-161.84230042 -509.66116333]
[-147.92582703 -515.33471680]
[-133.31916809 -518.87072754]
[-118.34862518 -520.19006348]
[-103.34867096 -519.26330566]
[-88.65438843 -516.11120605]
[-74.59406281 -510.80416870]
[-61.48180389 -503.46069336]
[-49.61054993 -494.24490356]
[-39.24550629 -483.36264038]
[-30.61822891 -471.05703735]
[-23.92145729 -457.60302734]
[-19.30479813 -443.30111694]
[-16.87139130 -428.47088623]
[-16.67560005 -413.44360352]
[-18.72179604 -398.55499268]
[-22.96426773 -384.13766479]
[-29.30823708 -370.51373291]
[-37.61197662 -357.98751831]
[-47.68997955 -346.83892822]
[-59.31709671 -337.31695557]
[-72.23357391 -329.63436890]
[-66.57079315 -315.74432373]
[-60.90800476 -301.85430908]
[-55.24521637 -287.96429443]
[-49.58243179 -274.07424927]
[-43.81639862 -260.22677612]
[-37.94743729 -246.42259216]
[-24.08112144 -241.10649109]
[-17.93251610 -227.19070435]
[-23.60254669 -212.68247986]
[-17.73358536 -198.87829590]
[-11.86462498 -185.07412720]
[-5.99566412 -171.26994324]
[-0.12670331 -157.46577454]
[6.15065718 -143.84245300]
[12.83085155 -130.41207886]
[19.51104736 -116.98170471]
[26.29103851 -103.60142517]
[33.17045212 -90.27199554]
[40.04986191 -76.94256592]
[46.92927551 -63.61314011]
[53.80868912 -50.28371048]
[60.68810272 -36.95428085]
[67.56751251 -23.62485313]
[69.40196228 -38.51225662]
[77.86877441 -50.89421844]
[91.07645416 -58.00458145]
[106.07436371 -58.25486374]
[119.51194000 -51.58916092]
[128.38719177 -39.49660110]
[130.71734619 -24.67869377]
[125.98187256 -10.44580173]
[115.23867035 0.02241486]
[100.88779449 4.38732767]
[86.13527679 1.67380488]
[74.27684784 -7.51196337]
[78.89086151 6.76076984]
[83.50486755 21.03350258]
[95.68498993 25.23756409]
[103.33396149 35.84771729]
[103.47749329 49.12137222]
[95.83914948 60.21507263]
[100.24014282 74.55492401]
[104.64114380 88.89476776]
[107.72822571 74.21587372]
[115.59075928 61.44165802]
[127.30506134 52.07282639]
[141.49496460 47.21001816]
[156.49342346 47.42451096]
[170.53845215 52.69110489]
[181.98005676 62.39108658]
[189.47409058 75.38491058]
[192.14015198 90.14608002]
[189.66503906 104.94046783]
[182.33952332 118.03003693]
[171.02420044 127.87704468]
[157.04838562 133.32466125]
[142.05393982 133.73292542]
[127.80240631 129.05386353]
[115.96802521 119.83717346]
[107.94049835 107.16416931]
[108.83331299 122.13757324]
[109.72612762 137.11097717]
[120.46672058 126.64008331]
[135.46662903 126.69290161]
[146.13322449 137.23916626]
[146.35618591 152.23751831]
[136.00781250 163.09619141]
[121.01609802 163.59487915]
[109.96939850 153.44873047]
[109.52279663 168.44209290]
[109.07618713 183.43544006]
[117.33673859 193.34129333]
[116.65608978 205.82009888]
[107.94373322 214.21185303]
[107.27394867 229.19688416]
[106.60416412 244.18193054]
[105.93437958 259.16696167]
[105.26459503 274.15200806]
[104.59481049 289.13705444]
[111.70818329 303.26892090]
[103.41029358 315.63803101]
[110.52366638 329.76992798]
[102.22578430 342.13900757]
[101.55599976 357.12405396]
[100.88621521 372.10910034]
[100.21643066 387.09411621]
[99.54664612 402.07916260]
[98.87686157 417.06420898]
[98.20707703 432.04925537]
[106.31922913 442.07699585]
[105.45286560 454.54428101]
[96.61653137 462.80538940]
[95.72371674 477.77877808]
[94.83090210 492.75219727]
[107.96869659 500.60437012]
[115.94265747 513.66864014]
[116.92041016 528.94287109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[12 202]
[13 201]
[14 200]
[15 199]
[16 198]
[17 197]
[18 196]
[20 194]
[22 192]
[23 191]
[24 190]
[25 189]
[26 188]
[27 187]
[29 184]
[30 183]
[31 182]
[32 175]
[33 174]
[34 173]
[35 156]
[36 155]
[37 154]
[40 150]
[41 149]
[42 148]
[43 136]
[44 135]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[51 129]
[52 128]
[53 127]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[65 119]
[66 118]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
