%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[18.51041412 894.44128418]
[3.51017332 894.67028809]
[-11.48731327 894.30279541]
[-26.45833015 893.33929443]
[-41.37920761 891.78137207]
[-56.22634888 889.63146973]
[-70.97628021 886.89300537]
[-85.60568237 883.57031250]
[-100.09141541 879.66864014]
[-114.41058350 875.19415283]
[-128.54052734 870.15386963]
[-142.45893860 864.55584717]
[-156.14376831 858.40893555]
[-169.57341003 851.72277832]
[-182.72660828 844.50799561]
[-195.58258057 836.77600098]
[-208.12097168 828.53900146]
[-220.32199097 819.81005859]
[-232.16633606 810.60290527]
[-243.63526917 800.93218994]
[-254.71064758 790.81311035]
[-265.37500000 780.26171875]
[-275.61138916 769.29467773]
[-285.40371704 757.92938232]
[-294.73641968 746.18377686]
[-303.59481812 734.07635498]
[-311.96484375 721.62640381]
[-319.83328247 708.85345459]
[-327.18768311 695.77783203]
[-334.01644897 682.42016602]
[-340.30874634 668.80151367]
[-346.05465698 654.94354248]
[-351.24505615 640.86804199]
[-355.87176514 626.59735107]
[-359.92749023 612.15393066]
[-363.40576172 597.56079102]
[-366.30111694 582.84082031]
[-368.60894775 568.01739502]
[-370.32565308 553.11395264]
[-371.44848633 538.15405273]
[-371.97567749 523.16131592]
[-371.90637207 508.15951538]
[-371.24072266 493.17230225]
[-369.97976685 478.22338867]
[-368.12545776 463.33645630]
[-365.68078613 448.53497314]
[-362.64959717 433.84240723]
[-359.03668213 419.28198242]
[-354.84771729 404.87667847]
[-350.08938599 390.64932251]
[-344.76919556 376.62237549]
[-338.89550781 362.81805420]
[-332.47769165 349.25814819]
[-325.52584839 335.96411133]
[-318.05096436 322.95693970]
[-310.06488037 310.25726318]
[-301.58020020 297.88513184]
[-292.61035156 285.86007690]
[-283.16952515 274.20114136]
[-273.27264404 262.92678833]
[-262.93536377 252.05477905]
[-252.17404175 241.60235596]
[-241.00564575 231.58602905]
[-229.44787598 222.02163696]
[-217.51899719 212.92430115]
[-205.23786926 204.30841064]
[-192.62391663 196.18759155]
[-179.69706726 188.57467651]
[-166.47778320 181.48170471]
[-152.98696899 174.91989136]
[-139.24592590 168.89962769]
[-125.27642059 163.43040466]
[-111.10050964 158.52088928]
[-96.74062347 154.17884827]
[-82.21946716 150.41113281]
[-67.55999756 147.22370911]
[-52.78540039 144.62161255]
[-37.91903305 142.60896301]
[-22.98440170 141.18893433]
[-8.00512314 140.36378479]
[6.99511766 140.13481140]
[21.99260330 140.50236511]
[36.96361923 141.46589661]
[51.88449097 143.02384949]
[66.73162842 145.17378235]
[81.48155212 147.91227722]
[84.80381012 133.28480530]
[88.12607574 118.65734863]
[91.44833374 104.02989197]
[89.73028564 99.07386017]
[90.91131592 93.50802612]
[95.09340668 89.01947784]
[98.84970856 74.49741364]
[102.60601044 59.97535706]
[106.36230469 45.45329666]
[110.11860657 30.93123817]
[96.40539551 24.76229668]
[83.93209076 16.36440659]
[73.05756378 5.97918797]
[64.09471130 -6.09455204]
[57.30139542 -19.50942993]
[52.87308884 -33.87947083]
[50.93719482 -48.79122162]
[51.54941559 -63.81564331]
[54.69213486 -78.52044678]
[60.27492905 -92.48255157]
[68.13717651 -105.30023956]
[78.05265808 -116.60472107]
[89.73608398 -126.07073975]
[102.85130310 -133.42593384]
[117.02096558 -138.45869446]
[131.83738708 -141.02421570]
[146.87425232 -141.04867554]
[161.69892883 -138.53137207]
[175.88488770 -133.54473877]
[189.02397156 -126.23223877]
[200.73812866 -116.80427551]
[210.69033813 -105.53211212]
[218.59423828 -92.74007416]
[224.22242737 -78.79620361]
[227.41296387 -64.10169220]
[228.07405090 -49.07934570]
[226.18667603 -34.16137695]
[221.80514526 -19.77700424]
[215.05551147 -6.34009886]
[206.13197327 5.76273441]
[195.29129028 16.18327332]
[182.84536743 24.62169838]
[169.15229797 30.83521652]
[154.60606384 34.64505768]
[139.62516785 35.94159698]
[124.64067078 34.68753815]
[120.88436890 49.20959854]
[117.12806702 63.73165894]
[113.37176514 78.25371552]
[109.61546326 92.77577972]
[106.07579041 107.35214996]
[102.75353241 121.97961426]
[99.43127441 136.60707092]
[96.10901642 151.23452759]
[110.59475708 155.13618469]
[124.91393280 159.61065674]
[139.04389954 164.65086365]
[152.96231079 170.24884033]
[166.64717102 176.39575195]
[180.07682800 183.08186340]
[193.23004150 190.29660034]
[206.08602905 198.02856445]
[218.62445068 206.26553345]
[230.82550049 214.99446106]
[242.66986084 224.20156860]
[254.13880920 233.87228394]
[265.21423340 243.99131775]
[275.87860107 254.54266357]
[286.11502075 265.50967407]
[295.90737915 276.87493896]
[305.24014282 288.62054443]
[314.09854126 300.72790527]
[322.46859741 313.17788696]
[330.33706665 325.95077515]
[337.69152832 339.02639771]
[344.52032471 352.38406372]
[350.81265259 366.00265503]
[356.55859375 379.86065674]
[361.74902344 393.93612671]
[366.37579346 408.20681763]
[370.43151855 422.65017700]
[373.90985107 437.24337769]
[376.80523682 451.96328735]
[379.11312866 466.78671265]
[380.82986450 481.69015503]
[381.95272827 496.65005493]
[382.47994995 511.64276123]
[382.41070557 526.64459229]
[381.74508667 541.63183594]
[380.48416138 556.58074951]
[378.62991333 571.46765137]
[376.18527222 586.26916504]
[373.15411377 600.96173096]
[369.54122925 615.52215576]
[365.35232544 629.92749023]
[360.59402466 644.15484619]
[355.27386475 658.18182373]
[349.40023804 671.98614502]
[342.98242188 685.54608154]
[336.03060913 698.84014893]
[328.55575562 711.84729004]
[320.56970215 724.54699707]
[312.08508301 736.91918945]
[303.11526489 748.94421387]
[293.67446899 760.60321045]
[283.77761841 771.87762451]
[273.44036865 782.74963379]
[262.67904663 793.20208740]
[251.51069641 803.21844482]
[239.95295715 812.78283691]
[228.02409363 821.88018799]
[215.74299622 830.49615479]
[203.12905884 838.61700439]
[190.20223999 846.22991943]
[176.98297119 853.32293701]
[163.49215698 859.88476562]
[149.75114441 865.90509033]
[135.78164673 871.37432861]
[121.60575104 876.28393555]
[107.24588013 880.62597656]
[92.72473145 884.39373779]
[78.06526947 887.58123779]
[63.29067993 890.18334961]
[48.42431641 892.19604492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[86 140]
[87 139]
[88 138]
[89 137]
[92 136]
[93 135]
[94 134]
[95 133]
[96 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
