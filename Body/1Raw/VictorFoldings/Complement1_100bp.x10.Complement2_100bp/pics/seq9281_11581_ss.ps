%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[83.40695953 549.15881348]
[70.58306122 556.95812988]
[57.13616562 563.62609863]
[43.16582870 569.11346436]
[28.77548409 573.37957764]
[14.07167530 576.39276123]
[-0.83673429 578.13079834]
[-15.83936596 578.58081055]
[-30.82514381 577.73944092]
[-45.68311310 575.61291504]
[-60.30327606 572.21697998]
[-74.57738495 567.57678223]
[-88.39974976 561.72668457]
[-101.66804504 554.71002197]
[-114.28402710 546.57867432]
[-126.15429688 537.39294434]
[-137.19096375 527.22076416]
[-147.31231689 516.13745117]
[-156.44342041 504.22506714]
[-164.51666260 491.57186890]
[-171.47229004 478.27145386]
[-177.25877380 464.42233276]
[-181.83331299 450.12704468]
[-185.16200256 435.49142456]
[-187.22019958 420.62384033]
[-187.99269104 405.63436890]
[-187.47373962 390.63394165]
[-185.66720581 375.73370361]
[-182.58644104 361.04388428]
[-178.25425720 346.67330933]
[-172.70274353 332.72833252]
[-165.97299194 319.31222534]
[-158.11482239 306.52432251]
[-149.18643188 294.45928955]
[-139.25390625 283.20642090]
[-128.39080811 272.84909058]
[-116.67754364 263.46395874]
[-104.20084381 255.12049866]
[-91.05307770 247.88049316]
[-77.33158875 241.79753113]
[-63.13797760 236.91668701]
[-48.57732010 233.27404785]
[-33.75742722 230.89662170]
[-18.78801537 229.80200195]
[-3.77992058 229.99827576]
[11.15574265 231.48400879]
[25.90839577 234.24818420]
[40.36880875 238.27035522]
[45.61552811 224.21788025]
[50.86224747 210.16542053]
[48.06546021 195.53573608]
[60.14104843 185.31367493]
[65.38776398 171.26119995]
[58.99052048 157.85929871]
[64.11125946 143.53335571]
[78.21177673 136.91419983]
[83.45848846 122.86173248]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[107.73575592 57.83907700]
[105.31424713 42.20428085]
[117.01455688 32.98733521]
[122.26127625 18.93486214]
[127.50799561 4.88239098]
[116.59233093 15.17065430]
[103.74308014 22.90995216]
[89.54479218 27.74819756]
[74.64339447 29.46528435]
[59.71680450 27.98309517]
[45.44408035 23.36906052]
[32.47453690 15.83308697]
[21.39819717 5.71801281]
[12.71896553 -6.51599455]
[6.83168745 -20.31237030]
[4.00419569 -35.04346848]
[4.36512136 -50.03912735]
[7.89804506 -64.61714172]
[14.44224262 -78.11430359]
[23.69999695 -89.91659546]
[35.25014114 -99.48707581]
[48.56721878 -106.39036560]
[63.04539871 -110.31240082]
[78.02600861 -111.07476807]
[92.82754517 -108.64276886]
[106.77662659 -103.12705231]
[119.23866272 -94.77854156]
[129.64672852 -83.97705078]
[137.52729797 -71.21395874]
[142.52189636 -57.06990814]
[144.40325928 -42.18836212]
[143.08583069 -27.24632835]
[138.62780762 -12.91959572]
[148.95448303 -23.79892921]
[152.59274292 -32.17752457]
[159.51681519 -34.76191711]
[170.00431824 -45.48629761]
[180.49180603 -56.21067810]
[190.97930908 -66.93505859]
[181.32623291 -78.43222046]
[172.84655762 -90.82019806]
[165.62196350 -103.97968292]
[159.72204590 -117.78394318]
[155.20359802 -132.10003662]
[152.11013794 -146.79008484]
[150.47148132 -161.71260071]
[150.30340576 -176.72387695]
[151.60751343 -191.67935181]
[154.37124634 -206.43498230]
[158.56799316 -220.84864807]
[164.15734863 -234.78155518]
[171.08546448 -248.09951782]
[179.28561401 -260.67425537]
[188.67884827 -272.38470459]
[199.17466736 -283.11801147]
[210.67202759 -292.77087402]
[223.06016541 -301.25030518]
[236.21980286 -308.47463989]
[250.02418518 -314.37426758]
[264.34036255 -318.89242554]
[279.03045654 -321.98559570]
[293.95303345 -323.62396240]
[308.96429443 -323.79174805]
[323.91973877 -322.48733521]
[338.67532349 -319.72329712]
[353.08892822 -315.52627563]
[367.02172852 -309.93664551]
[380.33953857 -303.00823975]
[392.91412354 -294.80786133]
[404.62435913 -285.41439819]
[415.35748291 -274.91833496]
[425.01010132 -263.42080688]
[433.48928833 -251.03247070]
[440.71334839 -237.87269592]
[446.61270142 -224.06820679]
[451.13058472 -209.75193787]
[454.22344971 -195.06176758]
[455.86151123 -180.13917542]
[456.02899170 -165.12789917]
[454.72427368 -150.17247009]
[451.95996094 -135.41696167]
[447.76263428 -121.00344849]
[442.17272949 -107.07076263]
[435.24407959 -93.75308228]
[427.04342651 -81.17866516]
[417.64971924 -69.46861267]
[407.15347290 -58.73570633]
[395.65573120 -49.08330536]
[383.26724243 -40.60437775]
[370.10733032 -33.38058090]
[356.30270386 -27.48147964]
[341.98635864 -22.96389389]
[327.29611206 -19.87132645]
[312.37350464 -18.23356438]
[297.36221313 -18.06637955]
[282.40682983 -19.37138176]
[267.65136719 -22.13600540]
[253.23793030 -26.33362007]
[239.30535889 -31.92380333]
[225.98780823 -38.85271835]
[213.41355896 -47.05362701]
[201.70368958 -56.44755554]
[191.21618652 -45.72317886]
[180.72869873 -34.99879837]
[170.24119568 -24.27441788]
[159.83381653 -13.47226143]
[149.50715637 -2.59292698]
[141.56047058 10.12910938]
[136.31375122 24.18157959]
[131.06703186 38.23405075]
[133.86381531 52.86372375]
[121.78822327 63.08579636]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[97.51096344 128.10845947]
[92.26424408 142.16091919]
[98.57644653 156.40148926]
[93.05534363 170.57795715]
[79.44023895 176.50791931]
[74.19351959 190.56039429]
[76.61502075 206.19519043]
[64.91471863 215.41212463]
[59.66799927 229.46459961]
[54.42127991 243.51707458]
[67.97933960 249.95605469]
[80.93367767 257.53671265]
[93.18838501 266.20297241]
[104.65272522 275.89059448]
[115.24182129 286.52792358]
[124.87728119 298.03613281]
[133.48776245 310.33007812]
[141.00950623 323.31872559]
[147.38682556 336.90588379]
[152.57252502 350.99099731]
[156.52818298 365.46975708]
[159.22453308 380.23495483]
[160.64158630 395.17727661]
[160.76887512 410.18612671]
[159.60545349 425.15032959]
[157.15994263 439.95916748]
[153.45042419 454.50289917]
[148.50437927 468.67395020]
[142.35841370 482.36730957]
[135.05805969 495.48165894]
[126.65733337 507.91989136]
[117.21845245 519.58990479]
[106.81129456 530.40527344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 187]
[49 186]
[50 185]
[52 183]
[53 182]
[56 179]
[57 178]
[58 177]
[60 175]
[61 174]
[62 173]
[64 171]
[65 170]
[66 169]
[94 168]
[95 167]
[97 166]
[98 165]
[99 164]
[100 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
