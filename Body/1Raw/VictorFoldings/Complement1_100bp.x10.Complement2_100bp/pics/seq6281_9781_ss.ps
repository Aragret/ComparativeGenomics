%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[101.09732819 521.91442871]
[87.41294098 515.69476318]
[74.87007904 507.41082764]
[63.77760696 497.26669312]
[54.40869141 485.51211548]
[46.99404907 472.43658447]
[41.71627426 458.36209106]
[38.70533752 443.63522339]
[38.03538513 428.61865234]
[39.72291183 413.68215942]
[43.72636795 399.19357300]
[49.94715881 385.50970459]
[58.23209000 372.96752930]
[68.37714386 361.87588501]
[80.13248444 352.50793457]
[93.20863342 345.09439087]
[107.28356934 339.81777954]
[122.01068878 336.80804443]
[121.34090424 321.82299805]
[120.67111969 306.83798218]
[120.00133514 291.85293579]
[119.33155060 276.86788940]
[117.88213348 261.93807983]
[115.65701294 247.10403442]
[113.43190002 232.27000427]
[111.20677948 217.43595886]
[95.77149200 213.84738159]
[82.86376190 204.58781433]
[74.47732544 191.05110168]
[71.92150116 175.29446411]
[75.61685181 159.72590637]
[85.02629089 146.73619080]
[98.73297119 138.33171082]
[96.28724670 123.53243256]
[93.84151459 108.73316193]
[89.76184845 94.29860687]
[84.09906006 80.40858459]
[71.72447968 70.55057526]
[74.08444977 55.84412003]
[68.42166138 41.95409393]
[62.75887299 28.06406593]
[57.09608459 14.17403984]
[51.33005142 0.32655430]
[45.46109009 -13.47762299]
[39.59213257 -27.28179932]
[33.72317123 -41.08597565]
[25.77648544 -53.80801392]
[15.94590473 -65.13760376]
[6.11532402 -76.46720123]
[-3.71525669 -87.79679108]
[-13.54583740 -99.12638855]
[-23.37641907 -110.45597839]
[-35.68252563 -101.85496521]
[-48.82028198 -94.58743286]
[-62.64574051 -88.73299408]
[-77.00742340 -84.35581207]
[-91.74797821 -81.50383759]
[-106.70590210 -80.20832062]
[-121.71729279 -80.48344421]
[-136.61769104 -82.32621002]
[-151.24385071 -85.71641541]
[-165.43548584 -90.61692810]
[-179.03713989 -96.97404480]
[-191.89974976 -104.71810913]
[-203.88243103 -113.76428986]
[-214.85385132 -124.01345825]
[-224.69383240 -135.35333252]
[-233.29454041 -147.65963745]
[-240.56176758 -160.79757690]
[-246.41586304 -174.62316895]
[-250.79269409 -188.98497009]
[-253.64431763 -203.72558594]
[-254.93946838 -218.68354797]
[-254.66397095 -233.69493103]
[-252.82084656 -248.59529114]
[-249.43028259 -263.22134399]
[-244.52943420 -277.41287231]
[-238.17198181 -291.01437378]
[-230.42759705 -303.87680054]
[-221.38113403 -315.85925293]
[-211.13169861 -326.83044434]
[-199.79159546 -336.67013550]
[-187.48507690 -345.27053833]
[-174.34695435 -352.53744507]
[-160.52120972 -358.39120483]
[-146.15931702 -362.76770020]
[-131.41862488 -365.61895752]
[-116.46064758 -366.91375732]
[-101.44926453 -366.63787842]
[-86.54895020 -364.79440308]
[-71.92296600 -361.40347290]
[-57.73156357 -356.50228882]
[-44.13022614 -350.14450073]
[-31.26797867 -342.39981079]
[-19.28574753 -333.35305786]
[-8.31481743 -323.10336304]
[1.52460897 -311.76300049]
[10.12472534 -299.45626831]
[17.39130402 -286.31799316]
[23.24472809 -272.49209595]
[27.62086487 -258.13009644]
[30.47176743 -243.38932800]
[31.76619720 -228.43132019]
[31.48997498 -213.41995239]
[29.64612579 -198.51968384]
[26.25485229 -183.89378357]
[21.35330963 -169.70249939]
[14.99520206 -156.10130310]
[7.25019407 -143.23925781]
[-1.79685628 -131.25724792]
[-12.04682541 -120.28656006]
[-2.21624446 -108.95696259]
[7.61433649 -97.62737274]
[17.44491768 -86.29778290]
[27.27549744 -74.96818542]
[37.10607910 -63.63859177]
[33.44604492 -78.18521118]
[33.79112625 -93.18124390]
[38.11641693 -107.54410553]
[46.10966492 -120.23693848]
[57.19383621 -130.34342957]
[70.56875610 -137.13398743]
[85.26886749 -140.11839294]
[100.23296356 -139.08119202]
[114.38077545 -134.09727478]
[126.69095612 -125.52642822]
[136.27482605 -113.98738861]
[142.44052124 -100.31316376]
[144.74291992 -85.49092102]
[143.01582336 -70.59068298]
[137.38391113 -56.68810654]
[128.25375366 -44.78683853]
[116.28446198 -35.74604034]
[102.34011078 -30.21837044]
[87.42736053 -28.60287857]
[72.62276459 -31.01618958]
[58.99509048 -37.28408432]
[47.52734756 -46.95493698]
[53.39630890 -33.15076065]
[59.26527023 -19.34658432]
[65.13423157 -5.54240656]
[70.64421844 -0.61677617]
[70.98611450 8.51125336]
[76.64890289 22.40127945]
[82.31168365 36.29130554]
[87.97447205 50.18133545]
[99.94401550 59.04583359]
[97.98908997 74.74579620]
[103.65187836 88.63581848]
[105.60476685 73.76348877]
[112.73425293 60.56612396]
[124.10231781 50.78006363]
[138.21331787 45.69283295]
[153.21067810 45.97374725]
[167.12126160 51.58584213]
[178.11489868 61.79075241]
[184.74514771 75.24584961]
[186.13973999 90.18087769]
[182.11514282 104.63088226]
[173.20089722 116.69471741]
[160.56979370 124.78517914]
[145.88369751 127.83782196]
[131.07481384 125.45101929]
[118.09149933 117.93879700]
[108.64078522 106.28743744]
[111.08651733 121.08670807]
[113.53224182 135.88597107]
[127.49181366 138.71112061]
[139.62313843 146.11599731]
[148.47961426 157.19372559]
[153.01332092 170.60090637]
[152.69897461 184.72050476]
[147.59472656 197.85694885]
[138.33270264 208.43965149]
[126.04082489 215.21083069]
[128.26594543 230.04487610]
[130.49105835 244.87892151]
[132.71617126 259.71298218]
[141.56129456 247.59835815]
[156.09352112 243.88157654]
[169.66891479 250.26191711]
[176.08099365 263.82232666]
[172.39823914 278.36322021]
[160.30435181 287.23666382]
[145.32850647 286.38583374]
[134.31658936 276.19812012]
[134.98637390 291.18313599]
[135.65615845 306.16818237]
[136.32594299 321.15322876]
[136.99572754 336.13827515]
[151.93263245 337.82208252]
[166.42221069 341.82196045]
[180.10760498 348.03936768]
[192.65184021 356.32119751]
[203.74598694 366.46350098]
[213.11685181 378.21652222]
[220.53364563 391.29083252]
[225.81373596 405.36447144]
[228.82710266 420.09085083]
[229.49954224 435.10729980]
[227.81448364 450.04406738]
[223.81341553 464.53332520]
[217.59487915 478.21820068]
[209.31201172 490.76174927]
[199.16879272 501.85507202]
[187.41499329 511.22494507]
[174.34007263 518.64068604]
[160.26600647 523.91961670]
[145.53938293 526.93176270]
[130.52285767 527.60296631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[23 178]
[24 177]
[25 176]
[26 175]
[33 167]
[34 166]
[35 165]
[36 149]
[37 148]
[39 146]
[40 145]
[41 144]
[42 143]
[43 141]
[44 140]
[45 139]
[46 138]
[47 116]
[48 115]
[49 114]
[50 113]
[51 112]
[52 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
