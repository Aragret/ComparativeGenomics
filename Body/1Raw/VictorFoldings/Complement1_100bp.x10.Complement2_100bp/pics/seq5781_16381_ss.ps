%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[199.99822998 771.17602539]
[186.89965820 763.85821533]
[174.24021912 755.80450439]
[162.06120300 747.04119873]
[150.40232849 737.59692383]
[139.30163574 727.50250244]
[128.79533386 716.79077148]
[118.91769409 705.49670410]
[109.70092010 693.65716553]
[101.17507935 681.31079102]
[93.36799622 668.49780273]
[86.30512238 655.26000977]
[80.00949860 641.64056396]
[74.50165558 627.68395996]
[69.79957581 613.43566895]
[65.91857147 598.94219971]
[62.87132263 584.25079346]
[60.66776276 569.40936279]
[59.31507492 554.46630859]
[58.81767273 539.47045898]
[59.17718124 524.47064209]
[60.39242935 509.51583862]
[62.45944595 494.65478516]
[65.37149811 479.93597412]
[69.11907959 465.40740967]
[73.68997192 451.11648560]
[79.06925964 437.10983276]
[85.23940277 423.43310547]
[92.18026733 410.13095093]
[99.86922455 397.24670410]
[108.28118896 384.82244873]
[117.38871765 372.89868164]
[127.16211700 361.51428223]
[137.56948853 350.70642090]
[148.57690430 340.51034546]
[160.14845276 330.95928955]
[172.24638367 322.08441162]
[184.83125305 313.91464233]
[197.86198425 306.47668457]
[191.18179321 293.04632568]
[184.50160217 279.61593628]
[177.82139587 266.18557739]
[171.14120483 252.75518799]
[156.01513672 243.85748291]
[157.30964661 225.48887634]
[150.43023682 212.15945435]
[143.55082703 198.83001709]
[136.67141724 185.50059509]
[129.79199219 172.17115784]
[113.56658173 167.74684143]
[105.40052032 152.65942383]
[110.77653503 136.01257324]
[103.69943237 122.78704071]
[96.62232208 109.56151581]
[90.34490967 104.50517273]
[89.53997040 96.08597565]
[82.66056061 82.75654602]
[78.92546844 80.54225159]
[76.34846497 77.55502319]
[75.03032684 74.25382233]
[74.91242218 71.08322144]
[75.79522705 68.42262268]
[69.72138977 54.70735168]
[63.64755630 40.99208450]
[57.57372284 27.27681923]
[51.49988937 13.56155300]
[45.42605591 -0.15371408]
[32.76345062 -9.63891220]
[34.68450165 -24.40911293]
[28.61066818 -38.12437820]
[22.53683472 -51.83964539]
[8.04249001 -47.86829758]
[-6.88187599 -46.10167313]
[-21.90284729 -46.57924652]
[-36.68484879 -49.29034805]
[-50.89764786 -54.17440414]
[-64.22372437 -61.12231064]
[-76.36536407 -69.97884369]
[-87.05132294 -80.54615021]
[-96.04287720 -92.58814240]
[-103.13914490 -105.83580780]
[-108.18159485 -119.99318695]
[-111.05757141 -134.74400330]
[-111.70283508 -149.75869751]
[-110.10296631 -164.70185852]
[-106.29370117 -179.23963928]
[-100.36014557 -193.04727173]
[-92.43486023 -205.81628418]
[-82.69488525 -217.26139832]
[-71.35783386 -227.12693787]
[-58.67696762 -235.19248962]
[-44.93558502 -241.27789307]
[-30.44067574 -245.24717712]
[-15.51605797 -247.01167297]
[-0.49515489 -246.53196716]
[14.28646183 -243.81875610]
[28.49856377 -238.93267822]
[41.82365036 -231.98287964]
[53.96403122 -223.12460327]
[64.64848328 -212.55578613]
[73.63832092 -200.51251221]
[80.73269653 -187.26382446]
[85.77313232 -173.10572815]
[88.64701080 -158.35452271]
[89.29013824 -143.33972168]
[87.68813324 -128.39678955]
[83.87680054 -113.85954285]
[77.94128418 -100.05276489]
[70.01417542 -87.28488922]
[60.27257538 -75.84116364]
[48.93411636 -65.97723389]
[36.25210190 -57.91347885]
[42.32593536 -44.19821167]
[48.39976883 -30.48294640]
[60.62793350 -21.97875595]
[59.14132309 -6.22754812]
[65.21515656 7.48771858]
[71.28899384 21.20298576]
[77.36282349 34.91825104]
[83.43666077 48.63351822]
[89.51049042 62.34878540]
[95.98999023 75.87712860]
[102.86940002 89.20655823]
[109.84785461 102.48440552]
[116.92495728 115.70993042]
[124.00206757 128.93545532]
[137.25662231 131.32945251]
[146.57627869 140.78221130]
[148.71818542 153.68547058]
[143.12142944 165.29174805]
[150.00083923 178.62118530]
[156.88024902 191.95060730]
[163.75965881 205.28004456]
[170.63908386 218.60946655]
[182.66676331 223.26753235]
[188.12222290 234.51127625]
[184.57157898 246.07499695]
[191.25177002 259.50537109]
[197.93197632 272.93572998]
[204.61216736 286.36611938]
[211.29235840 299.79650879]
[225.08593750 293.89218140]
[239.19407654 288.78497314]
[253.57078552 284.49151611]
[268.16915894 281.02581787]
[282.94155884 278.39916992]
[297.83984375 276.62014771]
[312.81536865 275.69454956]
[327.81933594 275.62539673]
[342.80276489 276.41290283]
[357.71679688 278.05453491]
[372.51278687 280.54492188]
[387.14248657 283.87591553]
[401.55813599 288.03668213]
[415.71276855 293.01364136]
[429.56018066 298.79055786]
[443.05520630 305.34857178]
[456.15383911 312.66632080]
[468.81335449 320.71990967]
[480.99243164 329.48309326]
[492.65136719 338.92724609]
[503.75213623 349.02163696]
[514.25854492 359.73327637]
[524.13629150 371.02725220]
[533.35314941 382.86669922]
[541.87908936 395.21304321]
[549.68621826 408.02597046]
[556.74920654 421.26370239]
[563.04498291 434.88308716]
[568.55291748 448.83966064]
[573.25512695 463.08789062]
[577.13623047 477.58135986]
[580.18359375 492.27276611]
[582.38726807 507.11416626]
[583.74005127 522.05718994]
[584.23760986 537.05303955]
[583.87817383 552.05285645]
[582.66308594 567.00769043]
[580.59613037 581.86871338]
[577.68420410 596.58758545]
[573.93676758 611.11614990]
[569.36596680 625.40710449]
[563.98681641 639.41381836]
[557.81677246 653.09057617]
[550.87597656 666.39282227]
[543.18713379 679.27709961]
[534.77526855 691.70141602]
[525.66784668 703.62530518]
[515.89453125 715.00976562]
[505.48724365 725.81768799]
[494.47991943 736.01385498]
[482.90844727 745.56500244]
[470.81057739 754.44000244]
[458.22576904 762.60980225]
[445.19509888 770.04791260]
[431.76104736 776.72991943]
[417.96740723 782.63409424]
[403.85922241 787.74121094]
[389.48248291 792.03454590]
[374.88409424 795.50012207]
[360.11166382 798.12670898]
[345.21337891 799.90557861]
[330.23782349 800.83105469]
[315.23388672 800.90008545]
[300.25045776 800.11248779]
[285.33642578 798.47070312]
[270.54046631 795.98022461]
[255.91079712 792.64910889]
[241.49516296 788.48822021]
[227.34057617 783.51116943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 141]
[40 140]
[41 139]
[42 138]
[43 137]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[52 126]
[53 125]
[54 124]
[56 123]
[57 122]
[62 121]
[63 120]
[64 119]
[65 118]
[66 117]
[67 116]
[69 114]
[70 113]
[71 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
