%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[81.27619171 835.09912109]
[66.30322266 834.15124512]
[51.39353561 832.48107910]
[36.58195114 830.09252930]
[21.90305901 826.99114990]
[7.39114809 823.18426514]
[-6.91989040 818.68066406]
[-20.99663162 813.49090576]
[-34.80620193 807.62707520]
[-48.31634140 801.10296631]
[-61.49550247 793.93371582]
[-74.31290436 786.13610840]
[-86.73860931 777.72839355]
[-98.74359131 768.73010254]
[-110.29982758 759.16235352]
[-121.38031006 749.04748535]
[-131.95916748 738.40905762]
[-142.01170349 727.27197266]
[-151.51441956 715.66217041]
[-160.44512939 703.60687256]
[-168.78297424 691.13415527]
[-176.50848389 678.27319336]
[-183.60362244 665.05401611]
[-190.05180359 651.50744629]
[-195.83796692 637.66516113]
[-200.94860840 623.55950928]
[-205.37179565 609.22338867]
[-209.09718323 594.69036865]
[-212.11608887 579.99426270]
[-214.42144775 565.16949463]
[-216.00787354 550.25067139]
[-216.87167358 535.27264404]
[-217.01081848 520.27032471]
[-216.42498779 505.27883911]
[-215.11555481 490.33312988]
[-213.08555603 475.46817017]
[-210.33976746 460.71862793]
[-206.88458252 446.11898804]
[-202.72807312 431.70330811]
[-197.87994385 417.50527954]
[-192.35151672 403.55807495]
[-186.15571594 389.89422607]
[-179.30699158 376.54571533]
[-171.82136536 363.54364014]
[-163.71629333 350.91842651]
[-155.01072693 338.69952393]
[-145.72499084 326.91549683]
[-135.88076782 315.59387207]
[-125.50105286 304.76104736]
[-114.61008453 294.44238281]
[-103.23330688 284.66192627]
[-91.39729309 275.44253540]
[-79.12967682 266.80578613]
[-66.45911407 258.77178955]
[-53.41519547 251.35931396]
[-40.02838898 244.58572388]
[-26.32996178 238.46678162]
[-12.35190201 233.01681519]
[1.87314022 228.24855042]
[16.31194305 224.17311096]
[30.93078232 220.80000305]
[45.69551849 218.13714600]
[60.57166290 216.19071960]
[75.52447510 214.96527100]
[90.51902771 214.46369934]
[90.74235535 199.46536255]
[90.96568298 184.46702576]
[91.18901062 169.46868896]
[91.41233826 154.47035217]
[91.63566589 139.47201538]
[91.85899353 124.47367096]
[92.08232117 109.47533417]
[84.97538757 122.68486023]
[74.33284760 133.25540161]
[61.07538605 140.27250671]
[46.34990692 143.12911987]
[31.43030930 141.57810974]
[17.60729027 135.75366211]
[6.07667589 126.15966034]
[-2.16401768 113.62606812]
[-6.40188885 99.23716736]
[-6.27031898 84.23774719]
[-1.78069067 69.92539978]
[6.67859840 57.53829193]
[18.37573624 48.14803314]
[32.29880142 42.56697083]
[47.24330902 41.27792740]
[61.91641617 44.39241409]
[75.04874420 51.64099503]
[85.50421906 62.39660263]
[92.37833405 75.72875977]
[95.07630157 90.48059845]
[99.47729492 76.14074707]
[103.87829590 61.80090332]
[108.27928925 47.46105576]
[112.68029022 33.12120819]
[117.08129120 18.78136063]
[103.62889862 12.06696415]
[91.46522522 3.22983003]
[80.92210388 -7.48895884]
[72.28715515 -19.79698563]
[65.79595184 -33.35847855]
[61.62557220 -47.80347061]
[59.88978958 -62.73789215]
[60.63595581 -77.75431824]
[63.84371948 -92.44309235]
[69.42556763 -106.40349579]
[77.22922516 -119.25467682]
[87.04179382 -130.64604187]
[98.59559631 -140.26683044]
[111.57542419 -147.85458374]
[125.62717438 -153.20230103]
[140.36752319 -156.16407776]
[155.39431763 -156.65913391]
[170.29763794 -154.67396545]
[184.67089844 -150.26271057]
[198.12199402 -143.54571533]
[210.28396606 -134.70623779]
[220.82502747 -123.98542023]
[229.45759583 -111.67572784]
[235.94619751 -98.11298370]
[240.11380005 -83.66719055]
[241.84669495 -68.73243713]
[241.09764099 -53.71615219]
[237.88703918 -39.02799606]
[232.30250549 -25.06866837]
[224.49638367 -12.21899319]
[214.68161011 -0.82951629]
[203.12596130 8.78904819]
[190.14466858 16.37429810]
[176.09188843 21.71930313]
[161.35096741 24.67824554]
[146.32406616 25.17040825]
[131.42114258 23.18235779]
[127.02014160 37.52220535]
[122.61914062 51.86205292]
[118.21813965 66.20189667]
[113.81714630 80.54174805]
[109.41614532 94.88159180]
[107.08065796 109.69866180]
[106.85733032 124.69699860]
[106.63400269 139.69534302]
[106.41067505 154.69367981]
[106.18734741 169.69201660]
[105.96401978 184.69035339]
[105.74069214 199.68869019]
[105.51736450 214.68702698]
[120.49034119 215.63482666]
[135.40003967 217.30491638]
[150.21163940 219.69340515]
[164.89053345 222.79469299]
[179.40246582 226.60154724]
[193.71353149 231.10508728]
[207.79029846 236.29476929]
[221.59988403 242.15850830]
[235.11006165 248.68257141]
[248.28926086 255.85174561]
[261.10668945 263.64929199]
[273.53244019 272.05697632]
[285.53747559 281.05517578]
[297.09375000 290.62286377]
[308.17428589 300.73770142]
[318.75317383 311.37606812]
[328.80575562 322.51312256]
[338.30853271 334.12283325]
[347.23931885 346.17810059]
[355.57720947 358.65078735]
[363.30279541 371.51171875]
[370.39797974 384.73089600]
[376.84622192 398.27743530]
[382.63244629 412.11965942]
[387.74316406 426.22531128]
[392.16641235 440.56137085]
[395.89187622 455.09442139]
[398.91085815 469.79046631]
[401.21627808 484.61523438]
[402.80276489 499.53405762]
[403.66665649 514.51208496]
[403.80587769 529.51440430]
[403.22009277 544.50592041]
[401.91073608 559.45159912]
[399.88082886 574.31658936]
[397.13510132 589.06610107]
[393.67999268 603.66577148]
[389.52352905 618.08148193]
[384.67547607 632.27954102]
[379.14712524 646.22680664]
[372.95138550 659.89062500]
[366.10272217 673.23919678]
[358.61715698 686.24127197]
[350.51214600 698.86657715]
[341.80664062 711.08551025]
[332.52096558 722.86956787]
[322.67678833 734.19122314]
[312.29711914 745.02410889]
[301.40621948 755.34283447]
[290.02947998 765.12335205]
[278.19351196 774.34277344]
[265.92593384 782.97961426]
[253.25540161 791.01367188]
[240.21151733 798.42620850]
[226.82475281 805.19982910]
[213.12634277 811.31884766]
[199.14831543 816.76885986]
[184.92329407 821.53723145]
[170.48451233 825.61273193]
[155.86569214 828.98590088]
[141.10096741 831.64886475]
[126.22483063 833.59533691]
[111.27202606 834.82086182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[72 140]
[92 139]
[93 138]
[94 137]
[95 136]
[96 135]
[97 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
