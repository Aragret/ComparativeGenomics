%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[104.00916290 435.53326416]
[109.13228607 421.24627686]
[119.07346344 409.77728271]
[132.48823547 402.67742920]
[130.70578003 387.78369141]
[128.92330933 372.88998413]
[127.14084625 357.99627686]
[125.35837555 343.10253906]
[123.57591248 328.20883179]
[121.79344940 313.31512451]
[112.59857178 301.59744263]
[118.64115906 286.97561646]
[109.44628906 275.25796509]
[115.48887634 260.63613892]
[106.29400635 248.91848755]
[112.33659363 234.29666138]
[110.55413055 219.40293884]
[108.43950653 204.55274963]
[105.99377441 189.75347900]
[101.80174255 183.66671753]
[103.62351990 174.71580505]
[101.39839935 159.88175964]
[99.17327881 145.04771423]
[96.94816589 130.21366882]
[94.72304535 115.37962341]
[85.79135132 107.90526581]
[84.14948273 96.37506866]
[90.63981628 86.70465851]
[88.63580322 71.83913422]
[86.63179016 56.97360229]
[83.85712433 53.63366318]
[82.43284607 49.95454025]
[82.29976654 46.40239716]
[83.25337982 43.37630844]
[84.97834015 41.16663361]
[83.86269379 26.20818138]
[75.12041473 13.02170563]
[81.88967133 -0.24578866]
[80.77402496 -15.20424175]
[79.65837860 -30.16269493]
[63.84203720 -32.45210648]
[48.93118668 -38.18354034]
[35.66462326 -47.06982803]
[24.69897652 -58.66755295]
[16.57618332 -72.39920044]
[11.69673157 -87.58187866]
[10.29989719 -103.46133423]
[12.45202065 -119.24936676]
[18.04336166 -134.16297913]
[26.79368591 -147.46321106]
[38.26631546 -158.49176025]
[51.88992310 -166.70353699]
[66.98696136 -171.69363403]
[65.42643738 -186.61222839]
[63.86591721 -201.53083801]
[62.30539322 -216.44944763]
[60.74486923 -231.36804199]
[56.66520309 -245.80259705]
[50.18570709 -259.33093262]
[37.24630356 -268.43493652]
[38.72674179 -283.25576782]
[32.24724579 -296.78411865]
[25.76775169 -310.31246948]
[19.28825569 -323.84082031]
[5.08319616 -318.96917725]
[-9.59138393 -315.77963257]
[-24.53702736 -314.31530762]
[-39.55161285 -314.59597778]
[-54.43207932 -316.61788940]
[-68.97719574 -320.35369873]
[-82.99024963 -325.75286865]
[-96.28172302 -332.74237061]
[-108.67188263 -341.22766113]
[-119.99314880 -351.09405518]
[-130.09242249 -362.20806885]
[-138.83311462 -374.41940308]
[-146.09703064 -387.56292725]
[-151.78593445 -401.46087646]
[-155.82287598 -415.92529297]
[-158.15325928 -430.76058960]
[-158.74557495 -445.76611328]
[-157.59182739 -460.73892212]
[-154.70759583 -475.47656250]
[-150.13191223 -489.77969360]
[-143.92662048 -503.45486450]
[-136.17567444 -516.31719971]
[-126.98387909 -528.19268799]
[-116.47554779 -538.92077637]
[-104.79280090 -548.35632324]
[-92.09362030 -556.37176514]
[-78.54975128 -562.85870361]
[-64.34436798 -567.72937012]
[-49.66957474 -570.91796875]
[-34.72383499 -572.38128662]
[-19.70926857 -572.09960938]
[-4.82893419 -570.07672119]
[9.71592999 -566.33990479]
[23.72862244 -560.93981934]
[37.01963425 -553.94946289]
[49.40922546 -545.46331787]
[60.72983551 -535.59619141]
[70.82836914 -524.48150635]
[79.56824493 -512.26959229]
[86.83128357 -499.12557983]
[92.51925659 -485.22723389]
[96.55522919 -470.76254272]
[98.88462830 -455.92709351]
[99.47594452 -440.92153931]
[98.32119751 -425.94879150]
[95.43598175 -411.21136475]
[90.85933685 -396.90853882]
[84.65313721 -383.23373413]
[76.90132904 -370.37194824]
[67.70874786 -358.49707031]
[57.19969940 -347.76968384]
[45.51631546 -338.33489990]
[32.81660080 -330.32031250]
[39.29609680 -316.79196167]
[45.77559280 -303.26361084]
[52.25508881 -289.73526001]
[64.73103333 -281.59893799]
[63.71405411 -265.81045532]
[70.19355011 -252.28208923]
[70.41942596 -267.28039551]
[74.31880951 -281.76467896]
[81.65325165 -294.84927368]
[91.97424316 -305.73397827]
[104.65065765 -313.75323486]
[118.90731812 -318.41668701]
[133.87243652 -319.43908691]
[148.63087463 -316.75799561]
[162.28016663 -310.53729248]
[173.98564148 -301.15744019]
[183.03150940 -289.19195557]
[188.86459351 -275.37258911]
[191.12823486 -260.54437256]
[189.68399048 -245.61407471]
[184.62016296 -231.49465942]
[176.24642944 -219.04956055]
[165.07484436 -209.03979492]
[151.78854370 -202.07745361]
[137.19998169 -198.58828735]
[122.20128632 -198.78567505]
[107.70960999 -202.65753174]
[94.61112976 -209.96710205]
[83.70681763 -220.26739502]
[75.66347504 -232.92857361]
[77.22399902 -218.00996399]
[78.78452301 -203.09135437]
[80.34504700 -188.17276001]
[81.90556335 -173.25415039]
[95.90727234 -171.87866211]
[109.37213898 -167.78202820]
[121.77645874 -161.12144470]
[132.63735962 -152.15390015]
[141.53158569 -141.22622681]
[148.11204529 -128.76168823]
[152.12129211 -115.24360657]
[153.40159607 -101.19657898]
[151.90122986 -87.16615295]
[147.67645264 -73.69763184]
[140.88946533 -61.31488800]
[131.80216980 -50.49996948]
[120.76605988 -41.67433548]
[108.20864105 -35.18245697]
[94.61682892 -31.27834320]
[95.73247528 -16.31989098]
[96.84812927 -1.36143732]
[105.51060486 10.75510883]
[98.82114410 25.09253120]
[99.93679810 40.05098343]
[101.49732208 54.96958923]
[103.50133514 69.83512115]
[105.50534821 84.70064545]
[116.09735107 97.70778656]
[109.55709076 113.15451050]
[111.78221130 127.98854828]
[114.00732422 142.82260132]
[116.23244476 157.65663147]
[118.45755768 172.49067688]
[120.79304504 187.30775452]
[123.23877716 202.10702515]
[126.55221558 206.14041138]
[127.85674286 210.59590149]
[127.32798004 214.63761902]
[125.44784546 217.62048340]
[127.23030853 232.51419067]
[136.55267334 245.29714966]
[130.38259888 258.85366821]
[139.70495605 271.63662720]
[133.53488159 285.19317627]
[142.85725403 297.97613525]
[136.68716431 311.53265381]
[138.46963501 326.42636108]
[140.25209045 341.32006836]
[142.03456116 356.21380615]
[143.81703186 371.10751343]
[145.59948730 386.00122070]
[147.38195801 400.89495850]
[162.09329224 404.62872314]
[174.46014404 413.42788696]
[182.80999756 426.10244751]
[186.01361084 440.93826294]
[183.63771057 455.92889404]
[176.00361633 469.04702759]
[164.14378357 478.51849365]
[149.66215515 483.06240845]
[134.51725769 482.06417847]
[120.75730896 475.65884399]
[110.24322510 464.71267700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 199]
[5 198]
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[12 191]
[14 189]
[16 187]
[17 186]
[18 182]
[19 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[28 174]
[29 173]
[30 172]
[35 171]
[36 170]
[38 168]
[39 167]
[40 166]
[53 151]
[54 150]
[55 149]
[56 148]
[57 147]
[58 123]
[59 122]
[61 120]
[62 119]
[63 118]
[64 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
