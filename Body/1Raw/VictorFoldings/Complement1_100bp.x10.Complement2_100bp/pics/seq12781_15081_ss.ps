%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[38.86613083 684.42749023]
[34.46292114 698.79656982]
[27.96720123 712.34875488]
[19.52409363 724.78149414]
[9.32221699 735.81683350]
[-2.41051221 745.20837402]
[-15.41198158 752.74621582]
[-29.39173508 758.26202393]
[-44.03745651 761.63256836]
[-59.02195740 762.78253174]
[-74.01047516 761.68621826]
[-88.66816711 758.36810303]
[-102.66757202 752.90234375]
[-115.69593811 745.41107178]
[-127.46220398 736.06158447]
[-137.70350647 725.06280518]
[-146.19105530 712.66046143]
[-152.73522949 699.13153076]
[-157.18984985 684.77832031]
[-159.45536804 669.92150879]
[-159.48118591 654.89300537]
[-157.26673889 640.02844238]
[-152.86148071 625.66003418]
[-146.36383057 612.10870361]
[-137.91894531 599.67724609]
[-127.71549988 588.64331055]
[-115.98143768 579.25347900]
[-102.97889709 571.71746826]
[-88.99835205 566.20361328]
[-74.35214996 562.83520508]
[-59.36748886 561.68737793]
[-44.37912369 562.78582764]
[-29.72190666 566.10601807]
[-24.26655006 552.13323975]
[-18.81119156 538.16040039]
[-13.35583591 524.18762207]
[-20.12968826 513.22656250]
[-19.34178162 500.17050171]
[-11.05612373 489.79946899]
[1.87745726 486.03952026]
[7.54024410 472.14950562]
[13.20303059 458.25949097]
[18.86581802 444.36944580]
[23.69181442 430.16699219]
[27.66391182 415.70248413]
[31.52821732 401.20877075]
[35.28451538 386.68670654]
[29.41772842 376.10809326]
[32.42831421 363.97879028]
[43.23169708 356.93252563]
[47.20379257 342.46798706]
[51.17588806 328.00347900]
[55.14798737 313.53894043]
[59.12008286 299.07443237]
[62.33335495 284.42263794]
[64.77908325 269.62338257]
[67.22480774 254.82409668]
[69.67053986 240.02482605]
[72.11626434 225.22555542]
[63.26060486 213.30444336]
[65.53009796 198.26104736]
[78.09410095 189.05323792]
[72.53550720 175.23472595]
[82.41936493 162.88078308]
[84.86508942 148.08151245]
[87.31081390 133.28224182]
[89.64630127 118.46517181]
[79.53602600 105.42101288]
[81.86261749 89.08226776]
[95.21209717 79.37870789]
[89.38787842 64.66854095]
[98.75619507 53.08907700]
[100.76020813 38.22354889]
[102.76422119 23.35802078]
[104.76823425 8.49249172]
[106.77224731 -6.37303591]
[108.33277130 -21.29164124]
[109.44841766 -36.25009537]
[110.56406403 -51.20854950]
[111.56832886 -66.17488861]
[104.66614532 -80.41113281]
[113.14727020 -92.65530396]
[106.24508667 -106.89154053]
[114.72621155 -119.13571930]
[112.11350250 -125.20904541]
[112.84964752 -130.84420776]
[115.87507629 -134.53958130]
[117.21331024 -149.47976685]
[117.77152252 -164.46939087]
[117.54819489 -179.46772766]
[117.32486725 -194.46606445]
[117.10153961 -209.46440125]
[114.74342346 -213.11038208]
[113.76643372 -216.93269348]
[114.05640411 -220.47547913]
[115.36285400 -223.36680603]
[117.33816528 -225.35585022]
[118.00794983 -240.34088135]
[118.67773438 -255.32592773]
[119.34752655 -270.31097412]
[105.70685577 -277.08239746]
[96.00468445 -288.82067871]
[91.92195129 -303.49212646]
[94.16603088 -318.55480957]
[102.34811401 -331.39898682]
[115.05060577 -339.79937744]
[130.07272339 -342.30056763]
[144.81179810 -338.46914673]
[156.71418762 -328.96899414]
[163.71774292 -315.44604492]
[164.60903931 -300.24322510]
[159.23367310 -285.99453735]
[148.52294922 -275.16864014]
[134.33256531 -269.64117432]
[133.66278076 -254.65614319]
[132.99299622 -239.67109680]
[132.32321167 -224.68606567]
[132.09988403 -209.68772888]
[132.32321167 -194.68939209]
[132.54653931 -179.69105530]
[132.76986694 -164.69271851]
[143.15420532 -175.51699829]
[158.05271912 -177.25894165]
[170.65400696 -169.12211609]
[175.19691467 -154.82659912]
[169.60449219 -140.90809631]
[156.43353271 -133.72994995]
[141.70559692 -136.57392883]
[132.15350342 -148.14154053]
[130.81526184 -133.20135498]
[129.69961548 -118.24290466]
[136.66566467 -105.07765961]
[128.12066650 -91.76248932]
[135.08671570 -78.59725189]
[126.54173279 -65.28207397]
[129.28153992 -58.41801834]
[125.52252197 -50.09289932]
[124.40686798 -35.13444519]
[123.29122162 -20.17599297]
[125.01618195 -17.96632004]
[125.96979523 -14.94022751]
[125.83671570 -11.38808727]
[124.41243744 -7.70896292]
[121.63777161 -4.36902237]
[119.63375854 10.49650574]
[117.62974548 25.36203384]
[115.62573242 40.22756195]
[113.62171936 55.09309006]
[119.58927917 68.73997498]
[110.07762909 81.38272095]
[118.90680695 90.47663879]
[120.95841217 102.98441315]
[115.49700165 114.42236328]
[104.48034668 120.69029236]
[106.30212402 129.64120483]
[102.11008453 135.72796631]
[99.66436005 150.52723694]
[97.21863556 165.32650757]
[102.60229492 180.20356750]
[92.89337158 191.49896240]
[101.82689667 204.25944519]
[99.13575745 219.23316956]
[86.91553497 227.67127991]
[84.46981049 242.47055054]
[82.02407837 257.26983643]
[79.57835388 272.06909180]
[77.13262939 286.86837769]
[89.27536011 278.06188965]
[104.24627686 278.99545288]
[115.20088959 289.24221802]
[117.13088226 304.11755371]
[109.15390015 316.82061768]
[94.91690063 321.54373169]
[80.92885590 316.12759399]
[73.58460236 303.04650879]
[69.61251068 317.51104736]
[65.64041138 331.97558594]
[61.66831589 346.44009399]
[57.69622040 360.90463257]
[62.76391983 378.60772705]
[49.80657578 390.44302368]
[46.05027390 404.96508789]
[46.93095779 414.05694580]
[42.12843323 419.67456055]
[38.15633774 434.13909912]
[50.66874695 425.86627197]
[65.65879059 426.41278076]
[77.53554535 435.57479858]
[81.86928558 449.93511963]
[77.04362488 464.13769531]
[64.85842133 472.88531494]
[49.85844803 472.91531372]
[37.63833237 464.21655273]
[32.75584412 450.03222656]
[27.09305763 463.92227173]
[21.43027115 477.81228638]
[15.76748466 491.70233154]
[22.84617996 507.69955444]
[16.29405212 523.55462646]
[0.61696237 529.64300537]
[-4.83839464 543.61578369]
[-10.29375172 557.58856201]
[-15.74910831 571.56134033]
[-2.71967816 579.05078125]
[9.04791927 588.39862061]
[19.29079056 599.39593506]
[27.78010750 611.79711914]
[34.32621384 625.32507324]
[38.78286743 639.67761230]
[41.05050659 654.53411865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 203]
[34 202]
[35 201]
[36 200]
[40 197]
[41 196]
[42 195]
[43 194]
[44 185]
[45 184]
[46 182]
[47 181]
[50 179]
[51 178]
[52 177]
[53 176]
[54 175]
[55 167]
[56 166]
[57 165]
[58 164]
[59 163]
[62 160]
[64 158]
[65 157]
[66 156]
[67 154]
[70 150]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 139]
[78 138]
[79 137]
[80 135]
[82 133]
[84 131]
[87 130]
[88 129]
[89 121]
[90 120]
[91 119]
[92 118]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
