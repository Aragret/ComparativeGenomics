%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[106.75718689 411.53692627]
[94.45138550 420.63778687]
[79.32398224 422.96594238]
[64.85115051 417.98641968]
[54.35864639 406.84344482]
[50.25756073 392.09759521]
[53.49029541 377.13739014]
[63.31399536 365.40054321]
[77.47124481 359.58410645]
[78.80947876 344.64392090]
[80.14771271 329.70373535]
[81.48594666 314.76354980]
[82.82418060 299.82336426]
[74.59342957 284.32427979]
[85.31147766 269.35083008]
[86.42712402 254.39236450]
[87.54277039 239.43391418]
[76.03371429 227.17094421]
[76.97328949 210.04107666]
[90.26776123 198.67111206]
[91.16057587 183.69769287]
[92.05339050 168.72428894]
[92.50000000 153.73094177]
[84.76270294 141.00367737]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.50000000 42.79650116]
[92.50000000 27.79650116]
[92.50000000 12.79650021]
[92.50000000 -2.20349932]
[85.86728668 11.25038719]
[76.61610413 23.05783081]
[65.13983154 32.71677399]
[51.92644119 39.81650925]
[37.53776932 44.05515671]
[22.58563232 45.25248337]
[7.70580149 43.35758209]
[-6.46902418 38.45102310]
[-19.33612442 30.74143410]
[-30.34838295 20.55663300]
[-39.03755188 8.32968235]
[-45.03416824 -5.41952181]
[-48.08324432 -20.10635567]
[-48.05514145 -35.10633087]
[-44.95104980 -49.78163528]
[-38.90295792 -63.50827408]
[-30.16802979 -75.70257568]
[-19.11768341 -85.84603882]
[-6.22178555 -93.50736237]
[7.97132635 -98.36077118]
[22.85815239 -100.19989777]
[37.80569839 -98.94654846]
[52.17838669 -94.65401459]
[65.36508179 -87.50481415]
[76.80507660 -77.80294037]
[86.01194763 -65.96091461]
[92.59420013 -52.48226547]
[96.27196503 -37.94012070]
[96.88883972 -22.95263481]
[102.96267700 -36.66790390]
[109.03651428 -50.38316727]
[115.11034393 -64.09843445]
[121.18418121 -77.81370544]
[127.25801086 -91.52896881]
[119.76431274 -108.92893219]
[127.24040985 -125.98826599]
[144.51048279 -132.05953979]
[150.17326355 -145.94956970]
[155.83604431 -159.83959961]
[161.49884033 -173.72962952]
[167.16162109 -187.61965942]
[171.56262207 -201.95950317]
[166.84861755 -217.06210327]
[177.05223083 -227.91271973]
[180.15634155 -242.58802795]
[183.26045227 -257.26333618]
[183.59542847 -272.25958252]
[181.14970398 -287.05886841]
[178.70396423 -301.85812378]
[176.25823975 -316.65740967]
[173.81251526 -331.45666504]
[171.36679077 -346.25595093]
[156.32717896 -347.04586792]
[141.80911255 -351.05087280]
[128.49163818 -358.08358765]
[116.99763489 -367.81506348]
[107.86470032 -379.79019165]
[101.51999664 -393.44885254]
[98.26027679 -408.15219116]
[98.23799896 -423.21252441]
[101.45421600 -437.92544556]
[107.75849152 -451.60278320]
[116.85596466 -463.60488892]
[128.32113647 -473.37033081]
[141.61775208 -480.44238281]
[156.12390137 -484.49029541]
[171.16111755 -485.32473755]
[186.02607727 -482.90664673]
[200.02351379 -477.34915161]
[212.49874878 -468.91217041]
[222.86828613 -457.99032593]
[230.64714050 -445.09445190]
[235.47145081 -430.82769775]
[237.11560059 -415.85736084]
[235.50268555 -400.88363647]
[230.70814514 -386.60687256]
[222.95620728 -373.69479370]
[212.60948181 -362.75134277]
[200.15187073 -354.28836060]
[186.16606140 -348.70166016]
[188.61178589 -333.90240479]
[191.05751038 -319.10311890]
[193.50323486 -304.30386353]
[195.94897461 -289.50457764]
[198.39469910 -274.70532227]
[202.75083923 -289.05883789]
[210.25859070 -302.04473877]
[220.52410889 -312.98181152]
[233.00888062 -321.29629517]
[247.05798340 -326.55200195]
[261.93441772 -328.47329712]
[276.85781860 -326.95932007]
[291.04534912 -322.08956909]
[303.75268555 -314.11941528]
[314.31329346 -303.46704102]
[322.17318726 -290.69119263]
[326.92001343 -276.46206665]
[328.30477905 -261.52612305]
[326.25485229 -246.66685486]
[320.87774658 -232.66375732]
[312.45553589 -220.25140381]
[301.43008423 -210.08090210]
[288.37969971 -202.68580627]
[273.98898315 -198.45402527]
[259.01290894 -197.60757446]
[244.23701477 -200.19082642]
[230.43644714 -206.06828308]
[218.33517456 -214.93164062]
[208.56796265 -226.31591797]
[201.64721680 -239.62393188]
[197.93574524 -254.15921021]
[194.83164978 -239.48391724]
[191.72753906 -224.80860901]
[196.66355896 -210.75567627]
[186.23793030 -198.85539246]
[196.79977417 -209.50654602]
[210.90788269 -214.60180664]
[225.83816528 -213.15733337]
[238.70783997 -205.45204163]
[247.03196716 -192.97370911]
[249.20329285 -178.13169861]
[244.80256653 -163.79176331]
[234.67948914 -152.72273254]
[220.78868103 -147.06185913]
[205.81224060 -147.90217590]
[192.64187622 -155.08140564]
[183.82057190 -167.21337891]
[181.05165100 -181.95686340]
[175.38887024 -168.06683350]
[169.72607422 -154.17681885]
[164.06329346 -140.28678894]
[158.40051270 -126.39675903]
[164.99943542 -117.08975220]
[166.29962158 -105.63439941]
[161.86311340 -94.86354065]
[152.68511963 -87.49703979]
[140.97328186 -85.45513153]
[134.89944458 -71.73986816]
[128.82560730 -58.02460098]
[122.75177765 -44.30933380]
[116.67794037 -30.59406853]
[110.60411072 -16.87880135]
[107.50000000 -2.20349932]
[107.50000000 12.79650021]
[107.50000000 27.79650116]
[107.50000000 42.79650116]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[115.23729706 141.00367737]
[107.50000000 153.73094177]
[109.80357361 157.41163635]
[110.72354889 161.24806213]
[110.38085938 164.78614807]
[109.03150940 167.65769958]
[107.02680206 169.61711121]
[106.13398743 184.59051514]
[105.24116516 199.56391907]
[115.28166962 208.54183960]
[118.27448273 221.47448730]
[113.34529877 233.58998108]
[102.50122833 240.54956055]
[101.38557434 255.50801086]
[100.26992798 270.46646118]
[108.07991791 280.73129272]
[106.84274292 293.16726685]
[97.76436615 301.16162109]
[96.42613220 316.10180664]
[95.08789825 331.04199219]
[93.74966431 345.98217773]
[92.41143036 360.92236328]
[105.30961609 369.16220093]
[112.89106750 382.45809937]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 208]
[10 207]
[11 206]
[12 205]
[13 204]
[15 201]
[16 200]
[17 199]
[20 195]
[21 194]
[22 193]
[23 188]
[25 186]
[26 185]
[28 183]
[29 182]
[30 181]
[31 180]
[32 179]
[33 178]
[34 177]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 171]
[71 166]
[72 165]
[73 164]
[74 163]
[75 162]
[76 149]
[78 147]
[79 146]
[80 145]
[81 119]
[82 118]
[83 117]
[84 116]
[85 115]
[86 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
