%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[59.65971756 886.09851074]
[44.66414642 885.65899658]
[29.69816589 884.61981201]
[14.78574467 882.98266602]
[-0.04923380 880.75024414]
[-14.78301430 877.92602539]
[-29.39200211 874.51458740]
[-43.85280228 870.52136230]
[-58.14225769 865.95281982]
[-72.23748016 860.81616211]
[-86.11590576 855.11968994]
[-99.75530243 848.87249756]
[-113.13383484 842.08459473]
[-126.23007202 834.76690674]
[-139.02304077 826.93109131]
[-151.49226379 818.58966064]
[-163.61775208 809.75604248]
[-175.38011169 800.44433594]
[-186.76049805 790.66955566]
[-197.74067688 780.44720459]
[-208.30308533 769.79376221]
[-218.43078613 758.72619629]
[-228.10757446 747.26232910]
[-237.31794739 735.42053223]
[-246.04714966 723.21960449]
[-254.28121948 710.67926025]
[-262.00695801 697.81951904]
[-269.21197510 684.66094971]
[-275.88479614 671.22467041]
[-282.01464844 657.53210449]
[-287.59179688 643.60528564]
[-292.60726929 629.46649170]
[-297.05300903 615.13836670]
[-300.92193604 600.64385986]
[-304.20785522 586.00610352]
[-306.90548706 571.24859619]
[-309.01052856 556.39501953]
[-310.51959229 541.46911621]
[-311.43026733 526.49475098]
[-311.74108887 511.49597168]
[-311.45153809 496.49673462]
[-310.56213379 481.52111816]
[-309.07427979 466.59304810]
[-306.99035645 451.73648071]
[-304.31365967 436.97518921]
[-301.04855347 422.33282471]
[-297.20019531 407.83279419]
[-292.77478027 393.49835205]
[-287.77941895 379.35244751]
[-282.22207642 365.41772461]
[-276.11163330 351.71652222]
[-269.45791626 338.27075195]
[-262.27157593 325.10195923]
[-254.56411743 312.23126221]
[-246.34785461 299.67922974]
[-237.63598633 287.46594238]
[-228.44244385 275.61102295]
[-218.78193665 264.13345337]
[-208.66996765 253.05154419]
[-198.12271118 242.38310242]
[-187.15704346 232.14518738]
[-175.79055786 222.35421753]
[-164.04142761 213.02583313]
[-151.92849731 204.17501831]
[-139.47113037 195.81591797]
[-126.68930054 187.96191406]
[-113.60346222 180.62561035]
[-100.23458862 173.81874084]
[-86.60407257 167.55218506]
[-72.73375702 161.83601379]
[-58.64583588 156.67936707]
[-44.36288452 152.09049988]
[-29.90777016 148.07676697]
[-15.30364037 144.64459229]
[-0.57388484 141.79946899]
[14.25790882 139.54594421]
[29.16798973 137.88764954]
[44.13247681 136.82723999]
[59.12741470 136.36637878]
[74.12877655 136.50584412]
[89.11255646 137.24539185]
[90.45079041 122.30521393]
[91.78902435 107.36502838]
[78.78022003 114.83302307]
[64.77521515 109.46088409]
[60.09798431 95.20874023]
[68.19640350 82.58275604]
[83.10061646 80.89032745]
[93.82322693 91.37750244]
[96.26895905 76.57823181]
[98.71468353 61.77895737]
[101.16040802 46.97968674]
[103.60614014 32.18041611]
[106.05186462 17.38114548]
[91.88708496 12.32161808]
[78.85346222 4.81399536]
[67.36996460 -4.90038204]
[57.80575180 -16.50923729]
[50.46826172 -29.63939476]
[45.59336853 -43.86877441]
[43.33778000 -58.73995590]
[43.77400589 -73.77490234]
[46.88801956 -88.49028778]
[52.57972336 -102.41308594]
[60.66614914 -115.09573364]
[70.88735199 -126.13053131]
[82.91476440 -135.16276550]
[96.36174774 -141.90206909]
[110.79605103 -146.13182068]
[125.75365448 -147.71604919]
[140.75373840 -146.60382080]
[155.31413269 -142.83088684]
[168.96675110 -136.51853943]
[181.27273560 -127.86968231]
[191.83648682 -117.16236115]
[200.31843567 -104.74075317]
[206.44592285 -91.00416565]
[210.02195740 -76.39418030]
[210.93161011 -61.38044357]
[209.14562988 -46.44558334]
[204.72142029 -32.06969833]
[197.80120850 -18.71490669]
[188.60745239 -6.81051302]
[177.43568420 3.26080465]
[164.64503479 11.17529583]
[150.64668274 16.67854309]
[135.89059448 19.59363747]
[120.85113525 19.82687378]
[118.40541077 34.62614441]
[115.95967865 49.42541504]
[113.51395416 64.22468567]
[111.06822968 79.02395630]
[108.62249756 93.82322693]
[106.72920990 108.70326233]
[105.39097595 123.64344788]
[104.05274200 138.58363342]
[118.92942047 140.51876831]
[133.71676636 143.04756165]
[148.39109802 146.16596985]
[162.92890930 149.86898804]
[177.30693054 154.15071106]
[191.50212097 159.00424194]
[205.49176025 164.42184448]
[219.25344849 170.39483643]
[232.76513672 176.91363525]
[246.00518799 183.96781921]
[258.95239258 191.54608154]
[271.58605957 199.63627625]
[283.88589478 208.22547913]
[295.83224487 217.29991150]
[307.40594482 226.84504700]
[318.58850098 236.84559631]
[329.36196899 247.28555298]
[339.70913696 258.14819336]
[349.61337280 269.41610718]
[359.05886841 281.07128906]
[368.03048706 293.09503174]
[376.51385498 305.46810913]
[384.49539185 318.17068481]
[391.96231079 331.18243408]
[398.90267944 344.48251343]
[405.30532837 358.04962158]
[411.16003418 371.86203003]
[416.45742798 385.89761353]
[421.18902588 400.13394165]
[425.34722900 414.54815674]
[428.92541504 429.11718750]
[431.91781616 443.81774902]
[434.31967163 458.62622070]
[436.12713623 473.51898193]
[437.33728027 488.47210693]
[437.94818115 503.46166992]
[437.95886230 518.46368408]
[437.36932373 533.45410156]
[436.18051147 548.40893555]
[434.39428711 563.30426025]
[432.01354980 578.11614990]
[429.04208374 592.82092285]
[425.48468018 607.39508057]
[421.34701538 621.81518555]
[416.63571167 636.05822754]
[411.35833740 650.10137939]
[405.52331543 663.92211914]
[399.13998413 677.49835205]
[392.21862793 690.80828857]
[384.77026367 703.83068848]
[376.80682373 716.54461670]
[368.34112549 728.92974854]
[359.38662720 740.96630859]
[349.95776367 752.63488770]
[340.06958008 763.91693115]
[329.73791504 774.79431152]
[318.97933960 785.24963379]
[307.81106567 795.26611328]
[296.25094604 804.82769775]
[284.31756592 813.91912842]
[272.02996826 822.52587891]
[259.40786743 830.63409424]
[246.47146606 838.23077393]
[233.24148560 845.30383301]
[219.73910522 851.84191895]
[205.98594666 857.83447266]
[192.00404358 863.27203369]
[177.81578064 868.14581299]
[163.44387817 872.44799805]
[148.91136169 876.17175293]
[134.24148560 879.31103516]
[119.45776367 881.86090088]
[104.58385468 883.81726074]
[89.64357758 885.17694092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 136]
[82 135]
[83 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[94 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
