%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[132.06864929 323.74807739]
[142.92878723 313.32965088]
[155.61294556 305.23037720]
[150.15759277 291.25759888]
[144.70223999 277.28479004]
[139.24688721 263.31198120]
[133.79151917 249.33920288]
[128.33616638 235.36639404]
[122.97528076 230.27890015]
[122.90531158 221.14474487]
[117.60339355 235.17648315]
[105.13009644 243.50814819]
[90.13764191 243.03225708]
[78.21785736 233.92628479]
[73.81652069 219.58654785]
[78.57521820 205.36140442]
[90.71907806 196.55647278]
[105.71874237 196.45579529]
[117.98040771 205.09783936]
[114.44073486 190.52146912]
[110.90106201 175.94509888]
[100.37891388 165.40309143]
[104.64116669 150.16682434]
[101.10149384 135.59045410]
[97.56182098 121.01407623]
[94.02214813 106.43770599]
[91.56304169 104.63706970]
[89.70475769 101.90186310]
[88.79471588 98.45291138]
[89.09387970 94.63626862]
[90.73319244 90.88852692]
[88.06739807 76.12730408]
[85.40160370 61.36608887]
[81.26549530 75.78456879]
[74.26000214 89.04817200]
[64.68299866 100.59291077]
[52.94171143 109.92790985]
[39.53538132 116.65623474]
[25.03405380 120.49179077]
[10.05433273 121.27149200]
[-4.76683807 118.96218109]
[-18.79925346 113.66205597]
[-31.44624901 105.59648132]
[-42.17006683 95.10840607]
[-50.51472855 82.64379120]
[-56.12540817 68.73263550]
[-58.76354218 53.96645355]
[-58.31695557 38.97310257]
[-54.80463409 24.39011192]
[-48.37592697 10.83755779]
[-39.30418396 -1.10829830]
[-27.97513962 -10.93951225]
[-14.87051201 -18.23805618]
[-0.54751676 -22.69359207]
[14.38482571 -24.11667061]
[29.29158401 -22.44677734]
[43.53891754 -17.75492096]
[56.52101898 -10.24059868]
[67.68588257 -0.22332506]
[76.55877686 11.87096024]
[82.76242065 25.52800369]
[86.03305054 40.16727066]
[89.57272339 25.59089661]
[93.11239624 11.01452160]
[96.65206909 -3.56185412]
[100.19174194 -18.13822937]
[86.85168457 -11.27945042]
[72.52742004 -15.73091221]
[65.42454529 -28.94261551]
[69.61190033 -43.34629822]
[82.69078064 -50.69087219]
[97.16901398 -46.76903915]
[104.75267029 -33.82833862]
[109.57866669 -48.03079224]
[114.40467072 -62.23324966]
[114.20264435 -71.36544037]
[119.40968323 -76.61029816]
[124.44660187 -90.73933411]
[129.48352051 -104.86836243]
[134.52043152 -118.99739075]
[124.68990326 -130.71524048]
[122.06186676 -145.68153381]
[127.24348450 -159.85958862]
[138.74911499 -169.47607422]
[153.42451477 -172.02514648]
[158.46144104 -186.15417480]
[163.49835205 -200.28321838]
[168.53526306 -214.41224670]
[173.57218933 -228.54127502]
[160.06877136 -235.10794067]
[147.36972046 -243.12025452]
[135.62919617 -252.48097229]
[124.98968506 -263.07644653]
[115.58037567 -274.77807617]
[107.51546478 -287.44378662]
[100.89286804 -300.91986084]
[95.79296875 -315.04269409]
[92.27768707 -329.64083862]
[90.38967896 -344.53710938]
[90.15187073 -359.55065918]
[91.56715393 -374.49923706]
[94.61833954 -389.20138550]
[99.26839447 -403.47866821]
[105.46086884 -417.15771484]
[113.12059784 -430.07247925]
[122.15458679 -442.06625366]
[132.45318604 -452.99337769]
[143.89137268 -462.72122192]
[156.33029175 -471.13171387]
[169.61895752 -478.12277222]
[183.59605408 -483.60946655]
[198.09190369 -487.52526855]
[212.93054199 -489.82260132]
[227.93185425 -490.47360229]
[242.91374207 -489.47033691]
[257.69430542 -486.82498169]
[272.09417725 -482.56970215]
[285.93847656 -476.75610352]
[299.05923462 -469.45477295]
[311.29711914 -460.75436401]
[322.50360107 -450.76046753]
[332.54260254 -439.59439087]
[341.29232788 -427.39169312]
[348.64648438 -414.30050659]
[354.51586914 -400.47973633]
[358.82919312 -386.09716797]
[361.53411865 -371.32736206]
[362.59777832 -356.34967041]
[362.00729370 -341.34582520]
[359.76983643 -326.49804688]
[355.91253662 -311.98651123]
[350.48223877 -297.98742676]
[343.54483032 -284.67065430]
[335.18457031 -272.19793701]
[325.50292969 -260.72061157]
[314.61743164 -250.37802124]
[302.66021729 -241.29573059]
[289.77639771 -233.58398438]
[276.12243652 -227.33639526]
[261.86404419 -222.62879944]
[247.17431641 -219.51834106]
[232.23156738 -218.04280090]
[217.21717834 -218.22004700]
[202.31341553 -220.04797363]
[187.70121765 -223.50434875]
[182.66430664 -209.37532043]
[177.62738037 -195.24629211]
[172.59046936 -181.11726379]
[167.55355835 -166.98823547]
[177.30690002 -155.73043823]
[180.13450623 -141.00425720]
[175.17863464 -126.74571991]
[163.67568970 -116.81703949]
[148.64945984 -113.96047211]
[143.61254883 -99.83144379]
[138.57563782 -85.70241547]
[133.53871155 -71.57338715]
[128.60711670 -57.40724945]
[123.78112793 -43.20479584]
[118.95512390 -29.00233841]
[114.76811981 -14.59855747]
[111.22844696 -0.02218179]
[107.68877411 14.55419350]
[104.14910126 29.13056946]
[100.60942841 43.70694351]
[100.16281891 58.70029449]
[102.82861328 73.46150970]
[105.49441528 88.22273254]
[108.59851837 102.89803314]
[112.13819122 117.47440338]
[115.67786407 132.05078125]
[119.21753693 146.62715149]
[129.99285889 158.21176147]
[125.47743988 172.40542603]
[129.01710510 186.98179626]
[132.55677795 201.55816650]
[136.95777893 215.89802551]
[142.30895996 229.91104126]
[147.76432800 243.88383484]
[153.21968079 257.85662842]
[158.67503357 271.82943726]
[164.13038635 285.80224609]
[169.58575439 299.77502441]
[184.40225220 297.13729858]
[199.44863892 297.44113159]
[214.14659119 300.67480469]
[227.93112183 306.71405029]
[240.27243042 315.32675171]
[250.69613647 326.18182373]
[258.80157471 338.86206055]
[264.27719116 352.88003540]
[266.91250610 367.69696045]
[266.60626221 382.74331665]
[263.37017822 397.44073486]
[257.32870483 411.22430420]
[248.71401978 423.56420898]
[237.85725403 433.98614502]
[225.17572021 442.08953857]
[211.15684509 447.56286621]
[196.33949280 450.19580078]
[181.29319763 449.88711548]
[166.59629822 446.64868164]
[152.81372070 440.60494995]
[140.47520447 431.98828125]
[130.05500793 421.12982178]
[121.95368958 408.44696045]
[116.48261261 394.42721558]
[113.85208130 379.60943604]
[114.16320038 364.56320190]
[117.40402222 349.86682129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 183]
[4 182]
[5 181]
[6 180]
[7 179]
[8 178]
[10 177]
[19 176]
[20 175]
[21 174]
[23 172]
[24 171]
[25 170]
[26 169]
[31 168]
[32 167]
[33 166]
[62 165]
[63 164]
[64 163]
[65 162]
[66 161]
[73 160]
[74 159]
[75 158]
[77 157]
[78 156]
[79 155]
[80 154]
[85 149]
[86 148]
[87 147]
[88 146]
[89 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
