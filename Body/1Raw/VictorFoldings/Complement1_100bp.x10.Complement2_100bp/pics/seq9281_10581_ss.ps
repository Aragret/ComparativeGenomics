%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[15.97753525 314.30242920]
[17.71052551 329.21997070]
[17.66696739 344.23779297]
[15.84747219 359.14501953]
[12.27758217 373.73242188]
[7.00741339 387.79519653]
[0.11095056 401.13592529]
[-8.31499100 413.56732178]
[-18.15212250 424.91488647]
[-29.26234818 435.01931763]
[-41.48969650 443.73873901]
[-54.66251755 450.95074463]
[-68.59587860 456.55413818]
[-83.09418488 460.47018433]
[-97.95389557 462.64395142]
[-112.96641541 463.04492188]
[-127.92097473 461.66744995]
[-142.60765076 458.53091431]
[-156.82025146 453.67929077]
[-170.35926819 447.18069458]
[-183.03462219 439.12640381]
[-194.66838074 429.62945557]
[-205.09721375 418.82318115]
[-214.17472839 406.85928345]
[-221.77348328 393.90570068]
[-227.78681946 380.14428711]
[-232.13029480 365.76824951]
[-234.74293518 350.97937012]
[-235.58807373 335.98532104]
[-234.65385437 320.99652100]
[-231.95338440 306.22344971]
[-227.52455139 291.87347412]
[-221.42956543 278.14804077]
[-213.75398254 265.23983765]
[-204.60552979 253.33009338]
[-194.11267090 242.58596802]
[-182.42268372 233.15830994]
[-169.69969177 225.17947388]
[-156.12229919 218.76147461]
[-141.88111877 213.99438477]
[-127.17607117 210.94514465]
[-112.21358490 209.65657043]
[-97.20372009 210.14674377]
[-82.35718536 212.40876770]
[-67.88240051 216.41090393]
[-53.98258209 222.09696960]
[-40.85284805 229.38713074]
[-32.07224655 217.22567749]
[-23.29164314 205.06422424]
[-37.55614090 209.70362854]
[-52.24946594 206.68597412]
[-63.53081512 196.80006409]
[-68.45127106 182.63005066]
[-65.72463989 167.87995911]
[-56.06365585 156.40539551]
[-41.99367523 151.20581055]
[-27.19256210 153.64035034]
[-15.52928638 163.07264709]
[-10.05260277 177.03709412]
[-12.19375610 191.88262939]
[-1.70625508 181.15824890]
[8.78124619 170.43386841]
[19.26874733 159.70948792]
[4.29674101 158.79350281]
[-5.74522638 147.65084839]
[-5.10466003 132.66452026]
[5.85149479 122.41939545]
[20.84705544 122.78433228]
[31.29188347 133.55027771]
[31.20306969 148.54913330]
[35.85072327 134.39820862]
[51.36828232 131.31343079]
[62.77074432 121.56745911]
[74.17321014 111.82149506]
[77.21537018 105.08599091]
[85.81875610 102.01684570]
[90.85643768 88.97409058]
[104.60612488 86.43685150]
[116.15242767 76.86173248]
[127.69873047 67.28661346]
[139.24502563 57.71149063]
[150.42700195 47.71332169]
[161.22915649 37.30594635]
[165.79893494 22.15907478]
[180.33273315 18.90054512]
[191.13488770 8.49317265]
[201.93704224 -1.91420043]
[206.50682068 -17.06107140]
[221.04061890 -20.31960106]
[231.84277344 -30.72697449]
[242.56715393 -41.21447372]
[253.21316528 -51.78152466]
[263.85916138 -62.34857178]
[274.50518799 -72.91561890]
[274.73184204 -88.49080658]
[285.67895508 -99.05563354]
[300.52612305 -98.74355316]
[311.17211914 -109.31060028]
[321.81814575 -119.87764740]
[332.46414185 -130.44470215]
[322.96597290 -142.06970215]
[314.63415527 -154.55714417]
[307.54647827 -167.79043579]
[301.76907349 -181.64601135]
[297.35589600 -195.99452209]
[294.34820557 -210.70198059]
[292.77404785 -225.63105774]
[292.64810181 -240.64237976]
[293.97155762 -255.59576416]
[296.73208618 -270.35162354]
[300.90386963 -284.77215576]
[306.44796753 -298.72271729]
[313.31265259 -312.07305908]
[321.43377686 -324.69854736]
[330.73553467 -336.48126221]
[341.13110352 -347.31121826]
[352.52337646 -357.08728027]
[364.80599976 -365.71820068]
[377.86431885 -373.12335205]
[391.57635498 -379.23361206]
[405.81411743 -383.99191284]
[420.44467163 -387.35385132]
[435.33139038 -389.28802490]
[450.33529663 -389.77639771]
[465.31628418 -388.81436157]
[480.13449097 -386.41091919]
[494.65151978 -382.58853149]
[508.73190308 -377.38287354]
[522.24407959 -370.84255981]
[535.06201172 -363.02862549]
[547.06585693 -354.01406860]
[558.14367676 -343.88302612]
[568.19195557 -332.73010254]
[577.11688232 -320.65945435]
[584.83520508 -307.78375244]
[591.27471924 -294.22323608]
[596.37542725 -280.10452271]
[600.08966064 -265.55941772]
[602.38269043 -250.72372437]
[603.23315430 -235.73599243]
[602.63311768 -220.73614502]
[600.58819580 -205.86422729]
[597.11743164 -191.25910950]
[592.25323486 -177.05717468]
[586.04107666 -163.39099121]
[578.53894043 -150.38816833]
[569.81683350 -138.17013550]
[559.95623779 -126.85095215]
[549.04919434 -116.53630829]
[537.19750977 -107.32251740]
[524.51196289 -99.29559326]
[511.11087036 -92.53050232]
[497.11941528 -87.09040070]
[482.66821289 -83.02607727]
[467.89224243 -80.37548828]
[452.92941284 -79.16338348]
[437.91943359 -79.40106964]
[423.00250244 -81.08633423]
[408.31784058 -84.20344543]
[394.00256348 -88.72329712]
[380.19039917 -94.60368347]
[367.01022339 -101.78970337]
[354.58514404 -110.21425629]
[343.03118896 -119.79869080]
[332.38519287 -109.23164368]
[321.73916626 -98.66459656]
[311.09317017 -88.09754181]
[311.29470825 -73.24847412]
[300.64868164 -62.38032532]
[285.07223511 -62.26961136]
[274.42620850 -51.70256424]
[263.78021240 -41.13551331]
[253.13420105 -30.56846619]
[250.60142517 -23.62535286]
[242.25015259 -19.92481804]
[231.44799805 -9.51744461]
[227.65086365 4.88502169]
[212.34442139 8.88795567]
[201.54226685 19.29533005]
[190.74011230 29.70270157]
[186.94297791 44.10516739]
[171.63653564 48.10810471]
[160.83438110 58.51547623]
[175.55432129 61.40045929]
[182.61163330 74.63655853]
[176.80392456 88.46661377]
[162.41241455 92.69562531]
[150.04600525 84.20612335]
[148.82014465 69.25779724]
[137.27384949 78.83291626]
[125.72754669 88.40803528]
[114.18124390 97.98315430]
[109.14356232 111.02590942]
[95.39387512 113.56314850]
[83.91917419 123.22396088]
[72.51670837 132.96992493]
[61.11425018 142.71589661]
[55.65101624 157.56390381]
[40.94903564 159.95159912]
[29.99312782 170.19699097]
[19.50562668 180.92137146]
[9.01812458 191.64575195]
[-1.46937633 202.37013245]
[-11.13018703 213.84481812]
[-19.91078949 226.00628662]
[-28.69139290 238.16773987]
[-17.63996887 248.33642578]
[-7.86882687 259.74087524]
[0.48486015 272.22094727]
[7.30381966 285.60147095]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 206]
[48 205]
[49 204]
[60 203]
[61 202]
[62 201]
[63 200]
[70 199]
[72 197]
[73 196]
[74 195]
[76 194]
[78 192]
[79 191]
[80 190]
[81 189]
[82 183]
[83 182]
[85 180]
[86 179]
[87 178]
[89 176]
[90 175]
[91 173]
[92 172]
[93 171]
[94 170]
[97 167]
[98 166]
[99 165]
[100 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
