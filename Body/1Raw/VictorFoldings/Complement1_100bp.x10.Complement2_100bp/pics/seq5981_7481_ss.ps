%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[168.14552307 570.41015625]
[161.91035461 556.75714111]
[156.87193298 542.61871338]
[153.06759644 528.09942627]
[150.52549744 513.30688477]
[149.26445007 498.35061646]
[149.29380798 483.34124756]
[150.61334229 468.38998413]
[153.21328735 453.60751343]
[157.07438660 439.10324097]
[162.16806030 424.98461914]
[168.45658875 411.35610962]
[175.89341736 398.31869507]
[184.42349243 385.96881104]
[193.98365784 374.39794922]
[204.50311279 363.69177246]
[215.90400696 353.92953491]
[228.10189819 345.18350220]
[220.44129944 332.28720093]
[212.78070068 319.39086914]
[205.12010193 306.49453735]
[197.45950317 293.59820557]
[186.05590820 293.24554443]
[176.13594055 287.37103271]
[170.22299194 277.33456421]
[169.88568115 265.57077026]
[175.32342529 254.99873352]
[168.05020142 241.88005066]
[160.77697754 228.76135254]
[153.50373840 215.64265442]
[147.51121521 211.31698608]
[146.22154236 202.27406311]
[139.14443970 189.04853821]
[132.06733704 175.82299805]
[124.99022675 162.59747314]
[117.91312408 149.37194824]
[103.28296661 152.41842651]
[88.38702393 151.22116089]
[74.43125153 145.87710571]
[62.54550171 136.81887817]
[53.69202042 124.77983856]
[48.58758545 110.73464966]
[47.64543915 95.82040405]
[50.94185638 81.24452972]
[58.20996857 68.18707275]
[68.86135101 57.70515823]
[61.78424454 44.47962952]
[49.68854141 40.00114822]
[44.06628036 28.83987999]
[47.44436264 17.22458267]
[40.56495285 3.89515400]
[33.68553925 -9.43427563]
[26.80612755 -22.76370430]
[19.92671394 -36.09313202]
[12.36233521 -49.04613113]
[4.13352728 -61.58753204]
[-4.09528017 -74.12892914]
[-17.45276833 -67.27257538]
[-31.46338081 -61.87490463]
[-45.96836090 -57.99707413]
[-60.80336380 -55.68302155]
[-75.80029297 -54.95896912]
[-90.78922272 -55.83311844]
[-105.60031128 -58.29556656]
[-120.06574249 -62.31841278]
[-134.02162170 -67.85607910]
[-147.30979919 -74.84580994]
[-159.77972412 -83.20841217]
[-171.29010010 -92.84912872]
[-181.71049500 -103.65872192]
[-190.92285156 -115.51471710]
[-198.82278442 -128.28277588]
[-205.32077026 -141.81822205]
[-210.34318542 -155.96768188]
[-213.83312988 -170.57084656]
[-215.75106812 -185.46223450]
[-216.07524109 -200.47314453]
[-214.80200195 -215.43345642]
[-211.94577026 -230.17366028]
[-207.53889465 -244.52676392]
[-201.63131714 -258.33013916]
[-194.28999329 -271.42733765]
[-185.59808350 -283.67001343]
[-175.65406799 -294.91940308]
[-164.57064819 -305.04806519]
[-152.47338867 -313.94122314]
[-139.49935913 -321.49810791]
[-125.79557037 -327.63311768]
[-111.51730347 -332.27673340]
[-96.82633209 -335.37631226]
[-81.88911438 -336.89675903]
[-66.87490845 -336.82083130]
[-51.95383835 -335.14941406]
[-37.29496384 -331.90139771]
[-23.06438446 -327.11364746]
[-9.42334461 -320.84036255]
[3.47359490 -313.15264893]
[15.48029995 -304.13760376]
[26.46072578 -293.89736938]
[36.29045486 -282.54797363]
[44.85811234 -270.21804810]
[52.06661606 -257.04724121]
[57.83428955 -243.18486023]
[62.09577942 -228.78791809]
[64.80280304 -214.01956177]
[65.92468262 -199.04714966]
[65.44871521 -184.04029846]
[63.38027954 -169.16905212]
[59.74282455 -154.60194397]
[54.57756424 -140.50398254]
[47.94302368 -127.03495026]
[39.91437149 -114.34744263]
[30.58258629 -102.58522034]
[20.05340195 -91.88156128]
[8.44612026 -82.35774231]
[16.67492867 -69.81633759]
[24.90373611 -57.27494049]
[27.86720467 -71.97928619]
[39.51024628 -81.43653870]
[54.50981522 -81.32296753]
[66.00831604 -71.69049835]
[68.74877930 -56.94295883]
[61.47831345 -43.82273483]
[47.52087021 -38.32820892]
[33.25614166 -42.97254562]
[40.13555527 -29.64311790]
[47.01496887 -16.31368828]
[53.89438248 -2.98425865]
[60.77379227 10.34517097]
[76.03065491 19.01667786]
[75.00977325 37.40252304]
[82.08687592 50.62805176]
[96.71703339 47.58157349]
[111.61297607 48.77883148]
[125.56874847 54.12289810]
[137.45449829 63.18112183]
[146.30798340 75.22016144]
[151.41241455 89.26535034]
[152.35456848 104.17959595]
[149.05813599 118.75547028]
[141.79003906 131.81292725]
[131.13865662 142.29484558]
[138.21575928 155.52037048]
[145.29286194 168.74589539]
[152.36996460 181.97142029]
[159.44706726 195.19696045]
[166.62243652 208.36943054]
[173.89566040 221.48812866]
[181.16889954 234.60681152]
[188.44212341 247.72550964]
[206.83959961 252.24734497]
[215.93365479 268.50192261]
[210.35583496 285.93762207]
[218.01643372 298.83395386]
[225.67703247 311.73025513]
[233.33763123 324.62658691]
[240.99821472 337.52291870]
[254.51362610 330.99487305]
[268.54019165 325.65286255]
[282.97402954 321.53640747]
[297.70834351 318.67602539]
[312.63400269 317.09286499]
[327.64050293 316.79867554]
[342.61672974 317.79559326]
[357.45181274 320.07626343]
[372.03591919 323.62380981]
[386.26107788 328.41195679]
[400.02197266 334.40524292]
[413.21670532 341.55929565]
[425.74758911 349.82116699]
[437.52185059 359.12966919]
[448.45230103 369.41589355]
[458.45803833 380.60369873]
[467.46496582 392.61022949]
[475.40640259 405.34658813]
[482.22354126 418.71850586]
[487.86593628 432.62695312]
[492.29180908 446.96896362]
[495.46835327 461.63833618]
[497.37210083 476.52648926]
[497.98892212 491.52319336]
[497.31423950 506.51739502]
[495.35308838 521.39813232]
[492.11996460 536.05511475]
[487.63882446 550.37994385]
[481.94281006 564.26654053]
[475.07412720 577.61206055]
[467.08361816 590.31768799]
[458.03045654 602.28936768]
[447.98162842 613.43847656]
[437.01156616 623.68249512]
[425.20150757 632.94549561]
[412.63885498 641.15899658]
[399.41662598 648.26208496]
[385.63272095 654.20227051]
[371.38919067 658.93548584]
[356.79150391 662.42669678]
[341.94772339 664.65014648]
[326.96774292 665.58929443]
[311.96249390 665.23718262]
[297.04306030 663.59649658]
[282.31991577 660.67926025]
[267.90203857 656.50720215]
[253.89619446 651.11108398]
[240.40606689 644.53100586]
[227.53155518 636.81555176]
[215.36796570 628.02185059]
[204.00535583 618.21508789]
[193.52784729 607.46789551]
[184.01301575 595.85968018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 157]
[19 156]
[20 155]
[21 154]
[22 153]
[27 150]
[28 149]
[29 148]
[30 147]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[46 132]
[47 131]
[50 129]
[51 128]
[52 127]
[53 126]
[54 125]
[55 117]
[56 116]
[57 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
