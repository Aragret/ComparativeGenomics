%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[101.49911499 484.01702881]
[91.76740265 472.59527588]
[82.80354309 460.56152344]
[74.64592743 447.96725464]
[67.32949066 434.86639404]
[60.88555527 421.31509399]
[55.34171677 407.37133789]
[50.72171783 393.09487915]
[47.04534149 378.54678345]
[44.32832718 363.78942871]
[42.58231354 348.88595581]
[41.81477737 333.90017700]
[42.02900314 318.89630127]
[43.22407150 303.93856812]
[45.39487076 289.09100342]
[48.53210449 274.41720581]
[52.62233353 259.98004150]
[57.64804459 245.84127808]
[63.58771896 232.06149292]
[70.41592407 218.69967651]
[78.10340881 205.81306458]
[86.61727142 193.45683289]
[95.92103577 181.68389893]
[105.97487640 170.54466248]
[116.73573303 160.08682251]
[128.15751648 150.35517883]
[119.19682312 138.32580566]
[110.23612976 126.29642487]
[101.27543640 114.26705170]
[88.51278687 108.55683136]
[86.69519043 94.69364929]
[77.73448944 82.66426849]
[65.18705750 90.89210510]
[52.17001343 98.35482788]
[38.72996902 105.02571869]
[24.91503525 110.88088989]
[10.77466202 115.89939117]
[-3.64053011 120.06325531]
[-18.27893829 123.35757446]
[-33.08815765 125.77056122]
[-48.01517868 127.29357147]
[-63.00656509 127.92115784]
[-78.00865173 127.65106201]
[-92.96773529 126.48426819]
[-107.83026123 124.42494202]
[-122.54302979 121.48046112]
[-137.05337524 117.66136169]
[-151.30934143 112.98131561]
[-165.25990295 107.45707703]
[-178.85513306 101.10842133]
[-192.04634094 93.95807648]
[-204.78633118 86.03163910]
[-217.02946472 77.35749054]
[-228.73194885 67.96666718]
[-239.85186768 57.89279175]
[-250.34941101 47.17192841]
[-260.18704224 35.84245682]
[-269.32946777 23.94493294]
[-277.74404907 11.52194595]
[-285.40060425 -1.38203359]
[-292.27172852 -14.72081184]
[-298.33285522 -28.44663811]
[-303.56225586 -42.51037979]
[-307.94125366 -56.86168671]
[-311.45410156 -71.44919586]
[-314.08828735 -86.22067261]
[-315.83438110 -101.12324524]
[-316.68606567 -116.10356903]
[-316.64038086 -131.10801697]
[-315.69741821 -146.08287048]
[-313.86059570 -160.97453308]
[-311.13647461 -175.72969055]
[-307.53479004 -190.29553223]
[-303.06848145 -204.61988831]
[-297.75347900 -218.65151978]
[-291.60885620 -232.34016418]
[-284.65658569 -245.63682556]
[-276.92156982 -258.49392700]
[-268.43145752 -270.86541748]
[-259.21670532 -282.70703125]
[-249.31025696 -293.97634888]
[-238.74758911 -304.63305664]
[-227.56649780 -314.63900757]
[-215.80703735 -323.95837402]
[-203.51127625 -332.55776978]
[-190.72323608 -340.40646362]
[-177.48870850 -347.47631836]
[-163.85505676 -353.74200439]
[-149.87110901 -359.18115234]
[-135.58688354 -363.77426147]
[-121.05354309 -367.50491333]
[-106.32311249 -370.35971069]
[-91.44831848 -372.32846069]
[-76.48240662 -373.40408325]
[-61.47895432 -373.58279419]
[-46.49166870 -372.86389160]
[-31.57420349 -371.24996948]
[-16.77995682 -368.74679565]
[-2.16189003 -365.36337280]
[12.22766781 -361.11175537]
[26.33720589 -356.00720215]
[40.11621475 -350.06799316]
[53.51536942 -343.31533813]
[66.48670197 -335.77346802]
[78.98378754 -327.46932983]
[90.96187592 -318.43267822]
[102.37809753 -308.69589233]
[113.19157410 -298.29376221]
[123.36361694 -287.26358032]
[132.85778809 -275.64477539]
[141.64012146 -263.47900391]
[149.67916870 -250.80978394]
[156.94613647 -237.68246460]
[163.41503906 -224.14404297]
[169.06271362 -210.24298096]
[173.86892700 -196.02905273]
[177.81648254 -181.55313110]
[180.89126587 -166.86703491]
[183.08222961 -152.02334595]
[184.38157654 -137.07519531]
[184.78462219 -122.07609558]
[184.28993225 -107.07973480]
[182.89929199 -92.13980103]
[180.61766052 -77.30977631]
[177.45321655 -62.64274216]
[173.41726685 -48.19121170]
[168.52430725 -34.00691223]
[162.79179382 -20.14062500]
[156.24029541 -6.64198256]
[148.89324951 6.44069004]
[140.77694702 19.06056023]
[131.92044067 31.17245293]
[122.35545349 42.73300934]
[112.11621094 53.70084763]
[101.23937225 64.03670502]
[89.76387024 73.70357513]
[98.72456360 85.73294830]
[111.48721313 91.44316864]
[113.30480957 105.30635071]
[122.26551056 117.33573151]
[131.22621155 129.36511230]
[140.18690491 141.39448547]
[152.78102112 133.23664856]
[165.88172913 125.91997528]
[179.43292236 119.47579956]
[193.37657166 113.93171692]
[207.65296936 109.31146240]
[222.20098877 105.63482666]
[236.95831299 102.91755676]
[251.86175537 101.17127991]
[266.84750366 100.40347290]
[281.85137939 100.61743164]
[296.80914307 101.81224060]
[311.65673828 103.98278046]
[326.33059692 107.11975098]
[340.76785278 111.20972443]
[354.90670776 116.23518372]
[368.68658447 122.17461395]
[382.04852295 129.00257874]
[394.93527222 136.68984985]
[407.29165649 145.20347595]
[419.06475830 154.50704956]
[430.20416260 164.56068420]
[440.66220093 175.32135010]
[450.39404297 186.74298096]
[459.35803223 198.77664185]
[467.51580811 211.37080383]
[474.83239746 224.47155762]
[481.27648926 238.02279663]
[486.82049561 251.96647644]
[491.44064331 266.24288940]
[495.11721802 280.79092407]
[497.83438110 295.54827881]
[499.58059692 310.45172119]
[500.34829712 325.43750000]
[500.13424683 340.44137573]
[498.93936157 355.39910889]
[496.76873779 370.24670410]
[493.63168335 384.92053223]
[489.54162598 399.35775757]
[484.51605225 413.49658203]
[478.57656860 427.27642822]
[471.74850464 440.63833618]
[464.06115723 453.52502441]
[455.54745483 465.88134766]
[446.24383545 477.65441895]
[436.19012451 488.79376221]
[425.42938232 499.25173950]
[414.00772095 508.98348999]
[401.97399902 517.94744873]
[389.37979126 526.10510254]
[376.27899170 533.42163086]
[362.72772217 539.86566162]
[348.78399658 545.40954590]
[334.50753784 550.02966309]
[319.95950317 553.70611572]
[305.20214844 556.42321777]
[290.29867554 558.16931152]
[275.31289673 558.93695068]
[260.30902100 558.72277832]
[245.35127258 557.52783203]
[230.50370789 555.35711670]
[215.82991028 552.21997070]
[201.39270020 548.12982178]
[187.25390625 543.10418701]
[173.47409058 537.16461182]
[160.11224365 530.33648682]
[147.22558594 522.64904785]
[134.86929321 514.13525391]
[123.09630585 504.83157349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 142]
[27 141]
[28 140]
[29 139]
[31 137]
[32 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
