%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[20.05343437 729.12469482]
[6.29062700 735.10388184]
[-7.83726072 740.16040039]
[-22.26844978 744.27215576]
[-36.93983459 747.42114258]
[-51.78726196 749.59362793]
[-66.74581146 750.78002930]
[-81.75006104 750.97521973]
[-96.73441315 750.17840576]
[-111.63333130 748.39294434]
[-126.38168335 745.62670898]
[-140.91496277 741.89184570]
[-155.16961670 737.20458984]
[-169.08332825 731.58544922]
[-182.59524536 725.05908203]
[-195.64628601 717.65393066]
[-208.17938232 709.40246582]
[-220.13973999 700.34069824]
[-231.47502136 690.50823975]
[-242.13569641 679.94812012]
[-252.07514954 668.70654297]
[-261.24987793 656.83264160]
[-269.61981201 644.37835693]
[-277.14834595 631.39807129]
[-283.80252075 617.94860840]
[-289.55325317 604.08880615]
[-294.37542725 589.87921143]
[-298.24789429 575.38195801]
[-301.15380859 560.66052246]
[-303.08038330 545.77917480]
[-304.01925659 530.80303955]
[-303.96627808 515.79766846]
[-302.92166138 500.82852173]
[-300.89004517 485.96115112]
[-297.88027954 471.26058960]
[-293.90548706 456.79107666]
[-288.98312378 442.61587524]
[-283.13464355 428.79702759]
[-276.38565063 415.39489746]
[-268.76565552 402.46813965]
[-260.30801392 390.07321167]
[-251.04963684 378.26440430]
[-241.03105164 367.09329224]
[-230.29608154 356.60873413]
[-218.89163208 346.85659790]
[-206.86759949 337.87948608]
[-194.27653503 329.71670532]
[-181.17353821 322.40390015]
[-167.61585999 315.97311401]
[-153.66282654 310.45239258]
[-139.37541199 305.86590576]
[-124.81612396 302.23373413]
[-110.04860687 299.57174683]
[-95.13745117 297.89154053]
[-80.14785004 297.20053101]
[-65.14534760 297.50170898]
[-50.19555283 298.79373169]
[-35.36383820 301.07098389]
[-20.71505356 304.32351685]
[-6.31326008 308.53704834]
[7.77856779 313.69323730]
[13.85240173 299.97796631]
[19.92623520 286.26269531]
[26.00007057 272.54742432]
[32.07390213 258.83215332]
[38.14773941 245.11689758]
[36.22668457 230.34669495]
[48.88928986 220.86149597]
[54.96312332 207.14622498]
[60.41847992 193.17343140]
[65.24447632 178.97097778]
[70.07048035 164.76852417]
[74.89647675 150.56607056]
[71.66535187 136.02615356]
[83.43123627 125.44907379]
[88.25723267 111.24662018]
[84.56626892 94.88345337]
[97.30129242 83.96578979]
[94.18406677 68.45471191]
[105.46114349 58.72451019]
[109.32545471 44.23081589]
[112.42956543 29.55551529]
[115.53367615 14.88021183]
[118.63777924 0.20490971]
[121.74188995 -14.47039223]
[124.84600067 -29.14569473]
[127.95011139 -43.82099915]
[119.59528351 -56.96765518]
[122.95234680 -71.80628204]
[135.53717041 -79.69031525]
[137.98289490 -94.48958588]
[139.76536560 -109.38330078]
[141.54782104 -124.27701569]
[143.33029175 -139.17073059]
[145.11276245 -154.06445312]
[146.89521790 -168.95817566]
[148.67768860 -183.85188293]
[150.46015930 -198.74560547]
[152.24261475 -213.63932800]
[138.35195923 -219.57449341]
[126.69698334 -229.18376160]
[118.22249603 -241.68815613]
[113.61549377 -256.07400513]
[113.24945068 -271.17507935]
[117.15402985 -285.76724243]
[125.01270294 -298.66754150]
[136.18841553 -308.83023071]
[149.77519226 -315.43142700]
[164.67161560 -317.93606567]
[179.67010498 -316.14105225]
[193.55479431 -310.19192505]
[205.20011902 -300.57095337]
[213.66203308 -288.05807495]
[218.25457764 -273.66760254]
[218.60546875 -258.56616211]
[214.68621826 -243.97793579]
[206.81459045 -231.08554077]
[195.62867737 -220.93408203]
[182.03527832 -214.34651184]
[167.13633728 -211.85685730]
[165.35386658 -196.96313477]
[163.57141113 -182.06942749]
[161.78894043 -167.17570496]
[160.00646973 -152.28198242]
[158.22401428 -137.38827515]
[156.44154358 -122.49455261]
[154.65907288 -107.60083771]
[152.87661743 -92.70711517]
[165.30711365 -101.10250854]
[180.05885315 -98.38475800]
[188.68136597 -86.11071014]
[186.23527527 -71.31149292]
[174.12182617 -62.46478271]
[159.28015137 -64.63836670]
[150.21246338 -76.58620453]
[158.52699280 -64.28155518]
[155.58804321 -49.35449219]
[142.62541199 -40.71688843]
[139.52130127 -26.04158401]
[136.41719055 -11.36628246]
[133.31307983 3.30901980]
[130.20896912 17.98432159]
[127.10486603 32.65962601]
[124.00075531 47.33492661]
[136.52459717 39.07943344]
[151.43890381 40.68054199]
[161.92504883 51.40625381]
[163.18890381 66.35291290]
[154.65264893 78.68711090]
[140.21894836 82.76982117]
[126.48670959 76.73447418]
[119.73387909 63.33852005]
[123.18112183 77.82871246]
[111.57402039 88.57979584]
[116.24241638 99.24972534]
[112.57754517 110.30458069]
[102.45968628 116.07261658]
[97.63368988 130.27507019]
[100.51963043 145.83084106]
[89.09893036 155.39205933]
[84.27293396 169.59451294]
[79.44693756 183.79696655]
[74.62093353 197.99943542]
[88.51970673 192.35813904]
[102.38970947 198.06979370]
[108.28557587 211.86250305]
[102.82988739 225.83517456]
[89.14790344 231.98362732]
[75.07729340 226.78573608]
[68.67839050 213.22006226]
[62.60455704 226.93533325]
[64.09117126 242.68653870]
[51.86300278 251.19073486]
[45.78916931 264.90600586]
[39.71533585 278.62127686]
[33.64150238 292.33651733]
[27.56766891 306.05178833]
[21.49383545 319.76705933]
[34.78266525 326.73648071]
[47.58182526 334.56890869]
[59.83535004 343.23013306]
[71.48965454 352.68228149]
[82.49378204 362.88397217]
[92.79961395 373.79067993]
[102.36207581 385.35461426]
[111.13935852 397.52526855]
[119.09308624 410.24942017]
[126.18846893 423.47143555]
[132.39448547 437.13345337]
[137.68400574 451.17578125]
[142.03388977 465.53698730]
[145.42510986 480.15426636]
[147.84284973 494.96374512]
[149.27653503 509.90060425]
[149.71989441 524.89959717]
[149.17100525 539.89508057]
[147.63223267 554.82147217]
[145.11033630 569.61358643]
[141.61631775 584.20660400]
[137.16548157 598.53686523]
[131.77728271 612.54162598]
[125.47527313 626.15960693]
[118.28701782 639.33135986]
[110.24394226 651.99920654]
[101.38123322 664.10784912]
[91.73762512 675.60418701]
[81.35530090 686.43811035]
[70.27965546 696.56207275]
[58.55912018 705.93200684]
[46.24494553 714.50677490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 178]
[62 177]
[63 176]
[64 175]
[65 174]
[66 173]
[68 171]
[69 170]
[70 163]
[71 162]
[72 161]
[73 160]
[75 158]
[76 157]
[78 154]
[80 152]
[81 144]
[82 143]
[83 142]
[84 141]
[85 140]
[86 139]
[87 138]
[90 135]
[91 128]
[92 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
