%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[95.89161682 527.38647461]
[91.05235291 513.15838623]
[88.38782501 498.36791992]
[87.95756531 483.34552002]
[89.77118683 468.42678833]
[93.78816986 453.94500732]
[99.91877747 440.22375488]
[108.02604675 427.56948853]
[117.92885590 416.26498413]
[129.40597534 406.56274414]
[142.20100403 398.67953491]
[156.02809143 392.79147339]
[152.27178955 378.26940918]
[148.51548767 363.74737549]
[144.75918579 349.22531128]
[134.08125305 338.84112549]
[138.11618042 323.54309082]
[134.35987854 309.02102661]
[130.38778687 294.55651855]
[119.40541077 284.49487305]
[122.98307800 269.08346558]
[118.79606628 254.67968750]
[114.60905457 240.27590942]
[108.94451904 254.16522217]
[96.73158264 262.87408447]
[81.75455475 263.70394897]
[68.65422821 256.39767456]
[61.48989105 243.21920776]
[62.48148346 228.25201416]
[71.32174683 216.13385010]
[85.27143860 210.61967468]
[100.00808716 213.41810608]
[110.96551514 223.66223145]
[108.74040222 208.82818604]
[94.82935333 203.50386047]
[85.38832855 191.85385132]
[83.03063965 176.94386292]
[88.48839569 162.76254272]
[100.38929749 153.15443420]
[98.16417694 138.32038879]
[95.93906403 123.48634338]
[93.71394348 108.65229797]
[89.74185181 94.18777466]
[84.07906342 80.29775238]
[78.41627502 66.40772247]
[72.75348663 52.51769638]
[67.09070587 38.62766647]
[54.71611786 28.76966286]
[57.07608414 14.06320763]
[51.41329956 0.17318027]
[45.75051117 -13.71684647]
[39.98447800 -27.56433296]
[25.60246468 -33.54726028]
[19.84714890 -47.63026428]
[25.63958740 -61.30444717]
[19.77062798 -75.10861969]
[14.24108124 -61.16501617]
[1.10264492 -53.92751312]
[-13.63796520 -56.70499420]
[-23.24154091 -68.22763824]
[-23.31745720 -83.22744751]
[-13.83100414 -94.84671021]
[0.88073725 -97.77325439]
[14.09299755 -90.66772461]
[9.69199944 -105.00757599]
[5.29100132 -119.34741974]
[0.89000326 -133.68727112]
[-3.51099491 -148.02711487]
[-14.95674419 -158.94981384]
[-11.29414368 -173.38708496]
[-15.90815258 -187.65982056]
[-20.73414993 -201.86227417]
[-25.56014824 -216.06472778]
[-30.38614655 -230.26718140]
[-35.21214294 -244.46963501]
[-40.03813934 -258.67208862]
[-54.87527847 -256.24121094]
[-69.91017151 -256.28573608]
[-84.73264313 -258.80447388]
[-98.93833923 -263.72872925]
[-112.13971710 -270.92410278]
[-123.97662354 -280.19433594]
[-134.12614441 -291.28656006]
[-142.31140137 -303.89810181]
[-148.30908203 -317.68496704]
[-151.95558167 -332.27102661]
[-153.15139771 -347.25836182]
[-151.86392212 -362.23809814]
[-148.12828064 -376.80157471]
[-142.04637146 -390.55148315]
[-133.78413391 -403.11273193]
[-123.56694031 -414.14263916]
[-111.67355347 -423.34033203]
[-98.42840576 -430.45480347]
[-84.19285583 -435.29205322]
[-69.35524750 -437.72009277]
[-54.32036972 -437.67266846]
[-39.49837875 -435.15106201]
[-25.29363251 -430.22409058]
[-12.09364510 -423.02615356]
[-0.25852177 -413.75363159]
[9.88886547 -402.65948486]
[18.07168961 -390.04632568]
[24.06671524 -376.25833130]
[27.71039581 -361.67156982]
[28.90332794 -346.68402100]
[27.61296844 -331.70452881]
[23.87451744 -317.14178467]
[17.78996468 -303.39303589]
[9.52530098 -290.83334351]
[-0.69400877 -279.80541992]
[-12.58917427 -270.61004639]
[-25.83568573 -263.49807739]
[-21.00968742 -249.29563904]
[-16.18369102 -235.09318542]
[-11.35769272 -220.89071655]
[-6.53169489 -206.68826294]
[-1.70569718 -192.48580933]
[2.10632062 -189.60873413]
[4.15144777 -184.30642700]
[3.04570365 -177.78808594]
[14.17666340 -167.89105225]
[10.82885265 -152.42811584]
[15.22985077 -138.08827209]
[19.63084793 -123.74842072]
[24.03184700 -109.40856934]
[28.43284416 -95.06872559]
[33.57480240 -80.97758484]
[39.44376373 -67.17340851]
[53.31008148 -61.85730743]
[59.45868683 -47.94151688]
[53.78865433 -33.43329239]
[59.29864120 -28.50766182]
[59.64053726 -19.37963295]
[65.30332184 -5.48960638]
[70.96611023 8.40042019]
[82.93565369 17.26491928]
[80.98072815 32.96488190]
[86.64351654 46.85490799]
[92.30630493 60.74493408]
[97.96908569 74.63496399]
[103.63187408 88.52498627]
[105.39705658 73.62921143]
[112.08857727 60.20447922]
[122.92032623 49.82790756]
[136.61979675 43.71852875]
[151.57759094 42.59406662]
[166.03648376 46.58662415]
[178.29785156 55.22715759]
[186.92124939 67.50058746]
[190.89360046 81.96503448]
[189.74824524 96.92124939]
[183.61973572 110.61216736]
[173.22804260 121.42941284]
[159.79397583 128.10217285]
[144.89575195 129.84654236]
[130.28359985 126.45760345]
[117.67413330 118.33347321]
[108.54798889 106.42718506]
[110.77310181 121.26122284]
[112.99822235 136.09527588]
[115.22334290 150.92932129]
[129.41949463 156.62284851]
[138.79785156 168.57873535]
[140.91851807 183.52427673]
[135.31111145 197.43157959]
[123.57444000 206.60307312]
[125.79956055 221.43711853]
[129.01283264 236.08889771]
[133.19984436 250.49267578]
[137.38685608 264.89645386]
[148.66871643 275.98837280]
[144.79156494 290.36950684]
[149.29196167 295.21286011]
[150.49081421 300.76800537]
[148.88194275 305.26473999]
[152.63824463 319.78680420]
[163.58485413 331.20968628]
[159.28125000 345.46899414]
[163.03755188 359.99105835]
[166.79385376 374.51312256]
[170.55015564 389.03518677]
[185.49806213 387.48025513]
[200.51074219 388.17065430]
[215.25283813 391.09100342]
[229.39498901 396.17599487]
[242.62126160 403.31207275]
[254.63615417 412.33981323]
[265.17126465 423.05749512]
[273.99127197 435.22570801]
[280.89904785 448.57263184]
[285.74035645 462.80004883]
[288.40698242 477.59014893]
[288.83938599 492.61248779]
[287.02789307 507.53146362]
[283.01296997 522.01379395]
[276.88430786 535.73596191]
[268.77883911 548.39135742]
[258.87762451 559.69726562]
[247.40190125 569.40112305]
[234.60800171 577.28619385]
[220.78175354 583.17620850]
[206.23204041 586.93963623]
[191.28390503 588.49243164]
[176.27131653 587.79986572]
[161.52963257 584.87744141]
[147.38821411 579.79046631]
[134.16296387 572.65246582]
[122.14935303 563.62304688]
[111.61575317 552.90386963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 182]
[13 181]
[14 180]
[15 179]
[17 177]
[18 176]
[19 173]
[21 171]
[22 170]
[23 169]
[33 168]
[34 167]
[39 162]
[40 161]
[41 160]
[42 159]
[43 142]
[44 141]
[45 140]
[46 139]
[47 138]
[49 136]
[50 135]
[51 134]
[52 132]
[55 129]
[56 128]
[64 127]
[65 126]
[66 125]
[67 124]
[68 123]
[70 121]
[71 118]
[72 117]
[73 116]
[74 115]
[75 114]
[76 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
