%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[62.09045029 694.10668945]
[48.75102997 700.98016357]
[34.96463013 706.90637207]
[20.79841995 711.85644531]
[6.32141876 715.80627441]
[-8.39584541 718.73663330]
[-23.28166962 720.63317871]
[-38.26353073 721.48675537]
[-53.26843643 721.29315186]
[-68.22328949 720.05334473]
[-83.05522156 717.77331543]
[-97.69197845 714.46423340]
[-112.06225586 710.14221191]
[-126.09603119 704.82824707]
[-139.72494507 698.54833984]
[-152.88258362 691.33300781]
[-165.50485229 683.21740723]
[-177.53024292 674.24102783]
[-188.90019226 664.44775391]
[-199.55929565 653.88513184]
[-209.45562744 642.60473633]
[-218.54095459 630.66149902]
[-226.77102661 618.11358643]
[-234.10575867 605.02209473]
[-240.50939941 591.45086670]
[-245.95075989 577.46600342]
[-250.40332031 563.13562012]
[-253.84539795 548.52960205]
[-256.26022339 533.71899414]
[-257.63601685 518.77606201]
[-257.96609497 503.77352905]
[-257.24880981 488.78451538]
[-255.48773193 473.88204956]
[-252.69137573 459.13876343]
[-248.87338257 444.62643433]
[-244.05236816 430.41577148]
[-238.25180054 416.57604980]
[-231.49993896 403.17465210]
[-223.82969666 390.27688599]
[-215.27844238 377.94561768]
[-205.88781738 366.24087524]
[-195.70358276 355.21969604]
[-184.77536011 344.93582153]
[-173.15637207 335.43927002]
[-160.90325928 326.77639771]
[-148.07568359 318.98931885]
[-134.73616028 312.11605835]
[-120.94967651 306.19003296]
[-106.78340149 301.24017334]
[-92.30634308 297.29055786]
[-77.58903503 294.36041260]
[-62.70318604 292.46408081]
[-47.72131348 291.61071777]
[-32.71640778 291.80453491]
[-17.76157379 293.04458618]
[-2.92967200 295.32479858]
[11.70703888 298.63409424]
[26.07724953 302.95632935]
[40.11095047 308.27047729]
[46.38830948 294.64715576]
[52.66567230 281.02383423]
[58.94303131 267.40051270]
[65.22039032 253.77720642]
[71.49775696 240.15388489]
[71.44196320 232.76344299]
[77.97132874 226.37553406]
[84.45082855 212.84719849]
[88.09891510 198.29757690]
[88.76869965 183.31253052]
[81.60741425 170.25247192]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[90.97908020 63.77592087]
[94.51513672 57.28607178]
[95.40795135 42.31266785]
[87.44599915 32.16524887]
[88.49788666 19.71224594]
[97.45623016 11.58362103]
[98.57187653 -3.37483239]
[99.68753052 -18.33328629]
[100.80317688 -33.29174042]
[101.91882324 -48.25019073]
[102.81164551 -63.22359848]
[103.48143005 -78.20863342]
[96.36805725 -92.34053040]
[104.66593933 -104.70962524]
[105.33572388 -119.69466400]
[90.73989868 -123.37525177]
[77.18389893 -129.91893005]
[65.22283173 -139.05772400]
[55.34649277 -150.41743469]
[47.95932007 -163.53286743]
[43.36381149 -177.86695862]
[41.74814606 -192.83273315]
[43.17848969 -207.81736755]
[47.59626770 -222.20722961]
[54.82057190 -235.41307068]
[64.55558014 -246.89411926]
[76.40264130 -256.18023682]
[89.87662506 -262.89117432]
[104.42578888 -266.75210571]
[119.45434570 -267.60491943]
[134.34689331 -265.41470337]
[148.49357605 -260.27117920]
[161.31512451 -252.38491821]
[172.28646851 -242.07888794]
[180.95837402 -229.77510071]
[186.97569275 -215.97738647]
[190.09205627 -201.25077820]
[190.17984009 -186.19830322]
[187.23542786 -171.43634033]
[181.37942505 -157.56939697]
[172.85160828 -145.16531372]
[162.00119019 -134.73204041]
[149.27249146 -126.69678497]
[135.18675232 -121.38861084]
[120.32076263 -119.02487946]
[119.65097809 -104.03984070]
[126.81225586 -90.97977448]
[118.46646881 -77.53884888]
[117.79668427 -62.55381393]
[120.30128479 -58.48736572]
[120.27796173 -52.80436707]
[116.87728119 -47.13454437]
[115.76163483 -32.17609024]
[114.64598083 -17.21763611]
[113.53033447 -2.25918365]
[112.41468811 12.69927025]
[120.87528229 28.07409286]
[110.38135529 43.20548248]
[109.48854065 58.17889023]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[112.05162048 171.61323547]
[103.75373840 183.98231506]
[103.08395386 198.96736145]
[110.30569458 185.82025146]
[120.15134430 174.50375366]
[132.17298889 165.53268433]
[145.82373047 159.31517029]
[160.48252869 156.13406372]
[175.48252869 156.13409424]
[190.14132690 159.31524658]
[203.79203796 165.53282166]
[215.81364441 174.50392151]
[225.65925598 185.82046509]
[232.88095093 198.96759033]
[237.15020752 213.34721375]
[238.27278137 228.30514526]
[236.19760132 243.16091919]
[231.01910400 257.23867798]
[222.97285461 269.89794922]
[212.42489624 280.56289673]
[199.85510254 288.74826050]
[185.83532715 294.08172607]
[171.00334167 296.32058716]
[156.03393555 295.36303711]
[141.60810852 291.25265503]
[128.38214111 284.17636108]
[116.95771027 274.45617676]
[107.85456085 262.53421021]
[101.48683167 248.95291138]
[98.14421082 234.33009338]
[97.97917175 219.32669067]
[91.49967194 232.85504150]
[85.12107086 246.43124390]
[78.84371185 260.05456543]
[72.56634521 273.67788696]
[66.28898621 287.30117798]
[60.01162720 300.92449951]
[53.73426437 314.54782104]
[66.89200592 321.76296997]
[79.51439667 329.87841797]
[91.53992462 338.85455322]
[102.91001129 348.64770508]
[113.56926727 359.21014404]
[123.46575165 370.49041748]
[132.55125427 382.43353271]
[140.78150940 394.98135376]
[148.11642456 408.07272339]
[154.52026367 421.64385986]
[159.96182251 435.62863159]
[164.41458130 449.95892334]
[167.85687256 464.56494141]
[170.27189636 479.37548828]
[171.64790344 494.31842041]
[171.97819519 509.32095337]
[171.26115417 524.30993652]
[169.50027466 539.21246338]
[166.70413208 553.95581055]
[162.88635254 568.46820068]
[158.06553650 582.67889404]
[152.26516724 596.51873779]
[145.51350403 609.92016602]
[137.84344482 622.81805420]
[129.29235840 635.14947510]
[119.90190125 646.85437012]
[109.71782684 657.87567139]
[98.78974915 668.15972900]
[87.17090607 677.65643311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 181]
[60 180]
[61 179]
[62 178]
[63 177]
[64 176]
[66 175]
[67 174]
[68 146]
[69 145]
[71 143]
[72 142]
[73 141]
[74 140]
[76 138]
[77 137]
[79 136]
[80 135]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 126]
[89 125]
[91 123]
[92 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
