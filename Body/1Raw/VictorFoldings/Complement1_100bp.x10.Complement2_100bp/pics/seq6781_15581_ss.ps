%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[99.87661743 859.41632080]
[85.03991699 857.18713379]
[70.33515930 854.20935059]
[55.80009460 850.49060059]
[41.47203827 846.04046631]
[27.38777161 840.87030029]
[13.58344364 834.99346924]
[0.09449344 828.42492676]
[-13.04445362 821.18164062]
[-25.79967117 813.28222656]
[-38.13841248 804.74682617]
[-50.02901077 795.59747314]
[-61.44093704 785.85760498]
[-72.34490204 775.55224609]
[-82.71291351 764.70782471]
[-92.51834869 753.35217285]
[-101.73605347 741.51452637]
[-110.34234619 729.22515869]
[-118.31515503 716.51562500]
[-125.63400269 703.41864014]
[-132.28009033 689.96771240]
[-138.23638916 676.19750977]
[-143.48757935 662.14324951]
[-148.02018738 647.84106445]
[-151.82260132 633.32763672]
[-154.88502502 618.64031982]
[-157.19961548 603.81665039]
[-158.76043701 588.89483643]
[-159.56347656 573.91314697]
[-159.60667419 558.90997314]
[-158.88990784 543.92382812]
[-157.41502380 528.99328613]
[-155.18582153 514.15655518]
[-152.20800781 499.45184326]
[-148.48922729 484.91677856]
[-144.03903198 470.58874512]
[-138.86885071 456.50448608]
[-132.99194336 442.70016479]
[-126.42340088 429.21124268]
[-119.18008423 416.07232666]
[-111.28059387 403.31710815]
[-102.74519348 390.97839355]
[-93.59580231 379.08782959]
[-83.85591125 367.67593384]
[-73.55050659 356.77200317]
[-62.70606232 346.40402222]
[-51.35040283 336.59860229]
[-39.51268005 327.38092041]
[-27.22328568 318.77465820]
[-14.51376343 310.80191040]
[-1.41673791 303.48309326]
[12.03416920 296.83703613]
[25.80443001 290.88076782]
[39.85869598 285.62960815]
[54.16089249 281.09704590]
[68.67430115 277.29467773]
[83.36167145 274.23229980]
[98.18529510 271.91772461]
[96.62477112 256.99914551]
[95.06425476 242.08053589]
[85.86785889 234.22222900]
[84.44566345 221.80606079]
[92.10195923 211.42608643]
[90.76372528 196.48590088]
[89.42549133 181.54571533]
[88.08725739 166.60552979]
[81.11528778 179.88677979]
[69.12303162 188.89710999]
[54.42602158 191.89675903]
[39.86201477 188.30653381]
[28.24308968 178.81967163]
[21.81268311 165.26792908]
[21.81240273 150.26792908]
[28.24230385 136.71594238]
[39.86087418 127.22863770]
[54.42474747 123.63787842]
[69.12187195 126.63697052]
[81.11445618 135.64685059]
[88.08725739 148.92906189]
[89.42549133 133.98887634]
[90.76372528 119.04869843]
[79.89497375 106.62944031]
[81.24493408 90.18117523]
[93.99318695 79.70024872]
[95.10884094 64.74179840]
[96.22448730 49.78334427]
[97.34013367 34.82489014]
[89.53014374 24.56005478]
[90.76731873 12.12409306]
[99.84569550 4.12974501]
[101.18392944 -10.81044006]
[102.52216339 -25.75062561]
[103.52642822 -40.71696854]
[104.19621277 -55.70200729]
[104.86599731 -70.68704987]
[90.43762207 -75.07712555]
[77.55473328 -82.91816711]
[67.02716064 -93.71729279]
[59.51668549 -106.79565430]
[55.49541092 -121.33113861]
[55.21612549 -136.41001892]
[58.69638062 -151.08444214]
[65.71740723 -164.43196106]
[75.83785248 -175.61351013]
[88.42154694 -183.92625427]
[102.67745972 -188.84761047]
[117.70945740 -190.06822205]
[132.57261658 -187.51138306]
[146.33261108 -181.33779907]
[158.12449646 -171.93556213]
[167.20701599 -159.89567566]
[173.00924683 -145.97500610]
[175.16642761 -131.04861450]
[173.54298401 -116.05477142]
[168.24096680 -101.93601990]
[159.59364319 -89.57985687]
[148.14459229 -79.76302338]
[134.61354065 -73.10259247]
[119.85103607 -70.01726532]
[119.18125153 -55.03222275]
[118.51146698 -40.04718399]
[120.60824585 -37.21242523]
[121.43615723 -33.22123337]
[120.46662903 -28.68104553]
[117.46234894 -24.41239166]
[116.12411499 -9.47220612]
[114.78588104 5.46797895]
[123.01663971 20.96706390]
[112.29859161 35.94053650]
[111.18293762 50.89899063]
[110.06729126 65.85744476]
[108.95164490 80.81589508]
[118.30644226 89.36817169]
[121.09888458 101.73165894]
[116.32796478 113.47439575]
[105.70391083 120.38693237]
[104.36567688 135.32711792]
[103.02744293 150.26730347]
[103.02744293 165.26730347]
[104.36567688 180.20748901]
[105.70391083 195.14767456]
[107.04214478 210.08786011]
[117.98194122 224.90010071]
[109.98285675 240.52000427]
[111.54338074 255.43861389]
[113.10390472 270.35720825]
[128.08561707 269.55404663]
[143.08879089 269.51074219]
[158.07490540 270.22738647]
[173.00547791 271.70214844]
[187.84219360 273.93121338]
[202.54698181 276.90890503]
[217.08206177 280.62756348]
[231.41014099 285.07763672]
[245.49443054 290.24771118]
[259.29879761 296.12451172]
[272.78778076 302.69293213]
[285.92675781 309.93615723]
[298.68203735 317.83554077]
[311.02081299 326.37084961]
[322.91146851 335.52014160]
[334.32345581 345.25994873]
[345.22747803 355.56524658]
[355.59552002 366.40960693]
[365.40103149 377.76519775]
[374.61880493 389.60284424]
[383.22515869 401.89215088]
[391.19802856 414.60162354]
[398.51696777 427.69857788]
[405.16311646 441.14944458]
[411.11947632 454.91964722]
[416.37075806 468.97387695]
[420.90344238 483.27603149]
[424.70593262 497.78939819]
[427.76843262 512.47674561]
[430.08312988 527.30035400]
[431.64401245 542.22216797]
[432.44714355 557.20391846]
[432.49041748 572.20709229]
[431.77374268 587.19317627]
[430.29895020 602.12377930]
[428.06982422 616.96044922]
[425.09207153 631.66522217]
[421.37338257 646.20031738]
[416.92327881 660.52838135]
[411.75314331 674.61267090]
[405.87631226 688.41699219]
[399.30786133 701.90594482]
[392.06460571 715.04492188]
[384.16519165 727.80017090]
[375.62985229 740.13891602]
[366.48052979 752.02954102]
[356.74069214 763.44152832]
[346.43536377 774.34552002]
[335.59097290 784.71356201]
[324.23535156 794.51898193]
[312.39770508 803.73675537]
[300.10833740 812.34307861]
[287.39886475 820.31591797]
[274.30187988 827.63482666]
[260.85101318 834.28094482]
[247.08078003 840.23724365]
[233.02653503 845.48846436]
[218.72436523 850.02111816]
[204.21098328 853.82360840]
[189.52362061 856.88604736]
[174.70001221 859.20068359]
[159.77819824 860.76153564]
[144.79646301 861.56463623]
[129.79328918 861.60784912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 146]
[59 145]
[60 144]
[63 142]
[64 141]
[65 140]
[66 139]
[79 138]
[80 137]
[81 136]
[84 132]
[85 131]
[86 130]
[87 129]
[90 127]
[91 126]
[92 125]
[93 121]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
