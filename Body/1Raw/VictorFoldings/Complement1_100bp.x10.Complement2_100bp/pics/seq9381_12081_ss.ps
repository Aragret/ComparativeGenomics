%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[174.57554626 484.90542603]
[176.31687927 469.98886108]
[179.81025696 455.38293457]
[185.00665283 441.29272461]
[191.83308411 427.91604614]
[200.19375610 415.44064331]
[209.97126770 404.04165649]
[221.02838135 393.87915039]
[233.20985413 385.09576416]
[225.93663025 371.97705078]
[218.66339111 358.85836792]
[205.72528076 351.47903442]
[205.80072021 335.65802002]
[198.52748108 322.53930664]
[191.25425720 309.42062378]
[183.88357544 296.35644531]
[176.41583252 283.34747314]
[168.94808960 270.33853149]
[163.99458313 284.49700928]
[150.54077148 291.12988281]
[136.29359436 286.43753052]
[129.41450500 273.10791016]
[133.84414673 258.77688599]
[147.04501343 251.65390015]
[161.45431519 255.81872559]
[155.17695618 242.19540405]
[148.89958191 228.57208252]
[137.66387939 224.09039307]
[132.32261658 212.79196167]
[136.23225403 200.50059509]
[130.15841675 186.78533936]
[124.08458710 173.07006836]
[111.85642242 164.56587219]
[113.34303284 148.81466675]
[107.26919556 135.09939575]
[95.04103088 126.59521484]
[96.52764130 110.84400177]
[92.76951599 125.36559296]
[81.82957458 135.62803650]
[67.09768677 138.45140076]
[53.13867950 132.96084595]
[44.27791214 120.85767365]
[43.26098251 105.89218903]
[50.40300369 92.70159912]
[63.49093628 85.37316132]
[78.46934509 86.17767334]
[90.69716644 94.86604309]
[86.51015472 80.46225739]
[82.32315063 66.05847931]
[78.13613892 51.65469360]
[66.85427856 40.56279373]
[70.73142242 26.18165970]
[67.49200439 23.29026794]
[65.53771973 19.86312675]
[64.87918854 16.37002945]
[65.37335205 13.23595715]
[66.75144196 10.79484844]
[63.42918396 -3.83261156]
[60.10692215 -18.46007156]
[44.26256943 -23.18746376]
[33.02861404 -35.19137192]
[29.40207863 -51.13079453]
[34.28044128 -66.63426208]
[46.24188232 -77.49871063]
[42.70220947 -92.07508850]
[39.16253662 -106.65146637]
[35.62286758 -121.22783661]
[24.84753990 -132.81243896]
[29.36296844 -147.00610352]
[25.71487999 -161.55572510]
[21.95858002 -176.07778931]
[18.20228004 -190.59983826]
[7.25567055 -202.02273560]
[11.55927563 -216.28204346]
[7.80297470 -230.80410767]
[4.04667425 -245.32617188]
[-10.89442921 -243.71952820]
[-25.91023636 -244.30554199]
[-40.68068314 -247.07171631]
[-54.89093781 -251.95910645]
[-68.23810577 -258.86352539]
[-80.43769836 -267.63778687]
[-91.22966766 -278.09490967]
[-100.38399506 -290.01196289]
[-107.70555115 -303.13494873]
[-113.03826904 -317.18414307]
[-116.26849365 -331.86007690]
[-117.32736969 -346.84997559]
[-116.19232178 -361.83428955]
[-112.88754272 -376.49362183]
[-107.48348236 -390.51553345]
[-100.09532166 -403.60113525]
[-90.88053894 -415.47149658]
[-80.03555298 -425.87362671]
[-67.79152679 -434.58578491]
[-54.40943527 -441.42227173]
[-40.17452240 -446.23736572]
[-25.39020729 -448.92843628]
[-10.37161541 -449.43811035]
[4.56112862 -447.75555420]
[19.08973312 -443.91659546]
[32.90451813 -438.00311279]
[45.71102524 -430.14108276]
[57.23627853 -420.49813843]
[67.23461914 -409.27981567]
[75.49293518 -396.72518921]
[81.83518982 -383.10192871]
[86.12620544 -368.70037842]
[88.27451324 -353.82748413]
[88.23432922 -338.80029297]
[86.00650787 -323.93911743]
[81.63853455 -309.56069946]
[75.22351074 -295.97155762]
[66.89817047 -283.46127319]
[56.83998108 -272.29656982]
[45.26331711 -262.71542358]
[32.41494751 -254.92201233]
[18.56873322 -249.08247375]
[22.32503319 -234.56040955]
[26.08133507 -220.03834534]
[36.75926590 -209.65417480]
[32.72433853 -194.35614014]
[36.48064041 -179.83409119]
[40.23693848 -165.31202698]
[44.95529175 -159.62353516]
[43.93934250 -150.54577637]
[54.46148682 -140.00378418]
[50.19924164 -124.76750946]
[53.73891449 -110.19113159]
[57.27858734 -95.61476135]
[60.81826019 -81.03838348]
[74.14797974 -78.06591034]
[84.94841766 -69.59954834]
[91.07666016 -57.24666214]
[91.28569031 -43.39261627]
[85.47772980 -30.74019814]
[74.73438263 -21.78233147]
[78.05664062 -7.15487099]
[81.37890625 7.47258902]
[85.13520050 21.99464798]
[96.11757660 32.05629349]
[92.53991699 47.46768188]
[96.72692871 61.87146378]
[100.91394043 76.27524567]
[105.10095215 90.67903137]
[110.24291229 104.77017212]
[122.90551758 114.25537109]
[120.98446655 129.02557373]
[127.05829620 142.74082947]
[139.72090149 152.22602844]
[137.79985046 166.99623108]
[143.87368774 180.71150208]
[149.94752502 194.42677307]
[165.07124329 204.93174744]
[162.52290344 222.29472351]
[168.80026245 235.91804504]
[175.07762146 249.54135132]
[181.95703125 262.87078857]
[189.42477417 275.87973022]
[196.89251709 288.88870239]
[203.87890625 294.77325439]
[204.37295532 302.14739990]
[211.64617920 315.26608276]
[218.91940308 328.38476562]
[232.37774658 336.70245361]
[231.78208923 351.58514404]
[239.05531311 364.70382690]
[246.32855225 377.82254028]
[260.23153687 372.14422607]
[274.70855713 368.15020752]
[289.55636597 365.89645386]
[304.56649780 365.41470337]
[319.52825928 366.71163940]
[334.23159790 369.76910400]
[348.47012329 374.54412842]
[362.04391479 380.96972656]
[374.76245117 388.95568848]
[386.44714355 398.38989258]
[396.93402100 409.13986206]
[406.07580566 421.05474854]
[413.74417114 433.96722412]
[419.83148193 447.69607544]
[424.25228882 462.04852295]
[426.94448853 476.82308960]
[427.87033081 491.81240845]
[427.01681519 506.80599976]
[424.39587402 521.59338379]
[420.04437256 535.96697998]
[414.02334595 549.72503662]
[406.41735840 562.67437744]
[397.33316040 574.63323975]
[386.89828491 585.43365479]
[375.25921631 594.92407227]
[362.57934570 602.97131348]
[349.03671265 609.46228027]
[334.82138062 614.30596924]
[320.13296509 617.43432617]
[305.17764282 618.80340576]
[290.16534424 618.39404297]
[275.30685425 616.21197510]
[260.81072998 612.28784180]
[246.88050842 606.67663574]
[233.71173096 599.45727539]
[221.48925781 590.73101807]
[210.38468933 580.62036133]
[200.55389404 569.26733398]
[192.13490295 556.83123779]
[185.24591064 543.48663330]
[179.98359680 529.42089844]
[176.42187500 514.83148193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 168]
[10 167]
[11 166]
[13 164]
[14 163]
[15 162]
[16 160]
[17 159]
[18 158]
[25 157]
[26 156]
[27 155]
[30 153]
[31 152]
[32 151]
[34 149]
[35 148]
[37 146]
[47 145]
[48 144]
[49 143]
[50 142]
[52 140]
[57 139]
[58 138]
[59 137]
[64 131]
[65 130]
[66 129]
[67 128]
[69 126]
[70 124]
[71 123]
[72 122]
[74 120]
[75 119]
[76 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
