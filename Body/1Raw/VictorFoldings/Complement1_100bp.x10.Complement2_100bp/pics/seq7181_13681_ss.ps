%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[170.27824402 476.73156738]
[165.74142456 462.42572021]
[162.35556030 447.80462646]
[160.14205933 432.96075439]
[159.11491394 417.98794556]
[159.28060913 402.98086548]
[160.63809204 388.03439331]
[163.17881775 373.24301147]
[166.88667297 358.70025635]
[171.73825073 344.49804688]
[177.70286560 330.72622681]
[184.74281311 317.47180176]
[192.81356812 304.81863403]
[201.86412048 292.84667969]
[211.83723450 281.63165283]
[222.66987610 271.24444580]
[213.18098450 259.62716675]
[203.69207764 248.00991821]
[194.20318604 236.39265442]
[189.62561035 235.03068542]
[185.85502625 230.77865601]
[184.61093140 224.28530884]
[175.47212219 212.39067078]
[166.33332825 200.49603271]
[157.19451904 188.60140991]
[148.05572510 176.70677185]
[136.10644531 174.82492065]
[128.39541626 164.99009705]
[129.48561096 152.13807678]
[120.52490997 140.10870361]
[111.56420898 128.07933044]
[102.60351562 116.04994202]
[91.20196533 113.67382812]
[84.31430054 104.28227997]
[85.47427368 92.69367218]
[76.69367218 80.53221893]
[67.91307068 68.37076569]
[59.13246536 56.20930481]
[50.35186386 44.04785156]
[41.57125854 31.88639450]
[24.25329208 29.41509438]
[14.27718735 15.45829678]
[17.41885948 -1.06346691]
[2.96992159 -7.50852633]
[1.57190108 -22.33737755]
[-7.38879490 -34.36675262]
[-20.11549187 -26.41163063]
[-33.44826126 -19.52033043]
[-47.29837799 -13.73871136]
[-61.57366562 -9.10525227]
[-76.17912292 -5.65078831]
[-91.01756287 -3.39830804]
[-105.99021912 -2.36280179]
[-120.99745941 -2.55116057]
[-135.93940735 -3.96213102]
[-150.71664429 -6.58632326]
[-165.23080444 -10.40627384]
[-179.38529968 -15.39656067]
[-193.08593750 -21.52397346]
[-206.24154663 -28.74773598]
[-218.76457214 -37.01977158]
[-230.57168579 -46.28503799]
[-241.58428955 -56.48186493]
[-251.72911072 -67.54239655]
[-260.93862915 -79.39303589]
[-269.15155029 -91.95490265]
[-276.31323242 -105.14440918]
[-282.37603760 -118.87377167]
[-287.29956055 -133.05163574]
[-291.05105591 -147.58363342]
[-293.60559082 -162.37306213]
[-294.94613647 -177.32148743]
[-295.06378174 -192.32945251]
[-293.95773315 -207.29707336]
[-291.63534546 -222.12472534]
[-288.11209106 -236.71374512]
[-283.41140747 -250.96704102]
[-277.56457520 -264.78976440]
[-270.61053467 -278.08990479]
[-262.59552002 -290.77896118]
[-253.57290649 -302.77252197]
[-243.60270691 -313.99072266]
[-232.75129700 -324.35891724]
[-221.09088135 -333.80813599]
[-208.69906616 -342.27545166]
[-195.65830994 -349.70455933]
[-182.05540466 -356.04598999]
[-167.98086548 -361.25753784]
[-153.52836609 -365.30453491]
[-138.79409790 -368.16003418]
[-123.87609863 -369.80505371]
[-108.87364960 -370.22863770]
[-93.88659668 -369.42797852]
[-79.01467896 -367.40835571]
[-64.35686493 -364.18328857]
[-50.01069641 -359.77416992]
[-36.07165146 -354.21035767]
[-22.63249397 -347.52890015]
[-9.78266048 -339.77426147]
[2.39233637 -330.99801636]
[13.81147099 -321.25860596]
[24.39875031 -310.62084961]
[34.08371735 -299.15548706]
[42.80192184 -286.93887329]
[50.49533844 -274.05227661]
[57.11277008 -260.58148193]
[62.61017990 -246.61611938]
[66.95098877 -232.24914551]
[70.10629272 -217.57614136]
[72.05510712 -202.69477844]
[72.78446198 -187.70408630]
[72.28949738 -172.70382690]
[70.57351685 -157.79382324]
[67.64792633 -143.07330322]
[63.53220367 -128.64022827]
[58.25373840 -114.59065247]
[51.84766006 -101.01807404]
[44.35659790 -88.01281738]
[35.83040237 -75.66143036]
[26.32581902 -64.04610443]
[15.90609837 -53.24415207]
[4.64058256 -43.32744980]
[13.60127831 -31.29807281]
[27.40928650 -25.71343422]
[29.44823647 -10.02416325]
[42.33333206 -9.96237946]
[52.98924637 -2.37729096]
[57.39572144 10.14442730]
[53.73271561 23.10579109]
[62.51331711 35.26724625]
[71.29392242 47.42870331]
[80.07452393 59.59016037]
[88.85512543 71.75161743]
[97.63573456 83.91307068]
[113.11157990 90.38410187]
[114.63289642 107.08924866]
[123.59358978 119.11862946]
[132.55429077 131.14801025]
[141.51498413 143.17738342]
[158.58976746 150.07180786]
[159.95034790 167.56796265]
[169.08915710 179.46260071]
[178.22795105 191.35723877]
[187.36676025 203.25186157]
[196.50555420 215.14649963]
[205.82044983 226.90374756]
[215.30934143 238.52101135]
[224.79824829 250.13827515]
[234.28713989 261.75555420]
[246.62797546 253.21482849]
[259.60836792 245.68159485]
[273.14624023 239.20347595]
[287.15600586 233.82144165]
[301.54910278 229.56948853]
[316.23452759 226.47453308]
[331.11941528 224.55612183]
[346.10964966 223.82640076]
[361.11050415 224.28996277]
[376.02706909 225.94387817]
[390.76510620 228.77770996]
[405.23141479 232.77352905]
[419.33450317 237.90606689]
[432.98519897 244.14288330]
[446.09725952 251.44454956]
[458.58773804 259.76489258]
[470.37768555 269.05130005]
[481.39251709 279.24508667]
[491.56265259 290.28176880]
[500.82376099 302.09161377]
[509.11727905 314.59988403]
[516.39080811 327.72756958]
[522.59832764 341.39163208]
[527.70062256 355.50570679]
[531.66540527 369.98052979]
[534.46759033 384.72460938]
[536.08953857 399.64471436]
[536.52093506 414.64651489]
[535.75903320 429.63516235]
[533.80871582 444.51589966]
[530.68225098 459.19464111]
[526.39947510 473.57858276]
[520.98736572 487.57675171]
[514.48022461 501.10070801]
[506.91918945 514.06494141]
[498.35202026 526.38739014]
[488.83291626 537.99029541]
[478.42202759 548.80017090]
[467.18521118 558.74871826]
[455.19348145 567.77307129]
[442.52267456 575.81616211]
[429.25292969 582.82708740]
[415.46807861 588.76153564]
[401.25531006 593.58203125]
[386.70446777 597.25811768]
[371.90756226 599.76647949]
[356.95816040 601.09124756]
[341.95074463 601.22412109]
[326.98019409 600.16424561]
[312.14120483 597.91827393]
[297.52758789 594.50042725]
[283.23168945 589.93231201]
[269.34390259 584.24285889]
[255.95208740 577.46795654]
[243.14085388 569.65051270]
[230.99122620 560.83990479]
[219.58001709 551.09185791]
[208.97937012 540.46801758]
[199.25631714 529.03552246]
[190.47230530 516.86663818]
[182.68289185 504.03836060]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 149]
[17 148]
[18 147]
[19 146]
[22 145]
[23 144]
[24 143]
[25 142]
[26 141]
[29 139]
[30 138]
[31 137]
[32 136]
[35 134]
[36 133]
[37 132]
[38 131]
[39 130]
[40 129]
[43 125]
[45 123]
[46 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
