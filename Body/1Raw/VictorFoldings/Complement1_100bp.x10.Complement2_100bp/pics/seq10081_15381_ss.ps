%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[-24.31165123 706.06640625]
[-38.65511703 710.46502686]
[-53.18899155 714.18652344]
[-67.88132477 717.22271729]
[-82.69982910 719.56689453]
[-97.61191559 721.21386719]
[-112.58481598 722.16015625]
[-127.58560944 722.40350342]
[-142.58132935 721.94348145]
[-157.53898621 720.78112793]
[-172.42573547 718.91888428]
[-187.20883179 716.36096191]
[-201.85578918 713.11291504]
[-216.33441162 709.18194580]
[-230.61285400 704.57659912]
[-244.65972900 699.30706787]
[-258.44418335 693.38488770]
[-271.93591309 686.82312012]
[-285.10522461 679.63623047]
[-297.92318726 671.83990479]
[-310.36166382 663.45135498]
[-322.39324951 654.48901367]
[-333.99154663 644.97253418]
[-345.13104248 634.92291260]
[-355.78720093 624.36218262]
[-365.93667603 613.31359863]
[-375.55712891 601.80145264]
[-384.62738037 589.85101318]
[-393.12753296 577.48852539]
[-401.03890991 564.74121094]
[-408.34405518 551.63714600]
[-415.02697754 538.20501709]
[-421.07293701 524.47442627]
[-426.46868896 510.47552490]
[-431.20233154 496.23910522]
[-435.26348877 481.79644775]
[-438.64321899 467.17932129]
[-441.33407593 452.41983032]
[-443.33020020 437.55044556]
[-444.62713623 422.60385132]
[-445.22207642 407.61288452]
[-445.11370850 392.61050415]
[-444.30227661 377.62969971]
[-442.78952026 362.70339966]
[-440.57879639 347.86437988]
[-437.67498779 333.14532471]
[-434.08444214 318.57855225]
[-429.81506348 304.19607544]
[-424.87625122 290.02954102]
[-419.27883911 276.11004639]
[-413.03512573 262.46823120]
[-406.15887451 249.13406372]
[-398.66516113 236.13685608]
[-390.57046509 223.50518799]
[-381.89260864 211.26681519]
[-372.65063477 199.44863892]
[-362.86489868 188.07664490]
[-352.55685425 177.17584229]
[-341.74920654 166.77017212]
[-330.46572876 156.88252258]
[-318.73117065 147.53462219]
[-306.57135010 138.74703979]
[-294.01300049 130.53904724]
[-281.08370972 122.92873383]
[-267.81195068 115.93280029]
[-254.22683716 109.56664276]
[-240.35827637 103.84424591]
[-226.23672485 98.77818298]
[-211.89323425 94.37960815]
[-197.35934448 90.65817261]
[-182.66700745 87.62207031]
[-167.84849548 85.27796936]
[-152.93640137 83.63101959]
[-137.96350098 82.68484497]
[-122.96269989 82.44152832]
[-107.96698761 82.90159607]
[-93.00932312 84.06404114]
[-78.12258148 85.92631531]
[-63.33949280 88.48431396]
[-48.69255447 91.73242188]
[-34.21395874 95.66349792]
[-19.93553734 100.26889801]
[-5.88867331 105.53849030]
[7.89575291 111.46070862]
[21.38743973 118.02252197]
[34.55673218 125.20951843]
[47.37467575 133.00587463]
[59.81309891 141.39448547]
[68.77379608 129.36511230]
[77.73448944 117.33573151]
[86.69519043 105.30635071]
[88.51278687 91.44316864]
[101.27543640 85.73294830]
[110.23612976 73.70357513]
[119.19682312 61.67419815]
[121.23577881 45.98492432]
[135.04377747 40.40028763]
[144.00448608 28.37090874]
[152.96517944 16.34153175]
[141.98271179 6.10196686]
[132.19335938 -5.28363085]
[123.71596527 -17.67705154]
[116.65341949 -30.92785072]
[111.09146881 -44.87517548]
[107.09761810 -59.34971619]
[104.72035980 -74.17576599]
[103.98854065 -89.17335510]
[104.91105652 -104.16042328]
[107.47670746 -118.95503998]
[111.65434265 -133.37760925]
[117.39324188 -147.25306702]
[124.62376404 -160.41296387]
[133.25811768 -172.69754028]
[143.19148254 -183.95770264]
[154.30329895 -194.05674744]
[166.45867920 -202.87208557]
[179.51004028 -210.29670715]
[193.29898071 -216.24047852]
[207.65811157 -220.63124084]
[222.41310120 -223.41571045]
[237.38485718 -224.56007385]
[252.39164734 -224.05044556]
[267.25128174 -221.89302063]
[281.78338623 -218.11396790]
[295.81155396 -212.75918579]
[309.16549683 -205.89366150]
[321.68310547 -197.60072327]
[333.21243286 -187.98106384]
[343.61349487 -177.15145874]
[352.76010132 -165.24334717]
[360.54116821 -152.40129089]
[366.86224365 -138.78118896]
[371.64660645 -124.54837036]
[374.83615112 -109.87561035]
[376.39221191 -94.94102478]
[376.29586792 -79.92590332]
[374.54827881 -65.01251221]
[371.17068481 -50.38189697]
[366.20407104 -36.21164703]
[359.70874023 -22.67378426]
[351.76351929 -9.93264389]
[342.46487427 1.85710931]
[331.92565918 12.55235767]
[320.27383423 22.02326965]
[307.65084839 30.15487862]
[294.20989990 36.84847260]
[280.11416626 42.02280045]
[265.53475952 45.61504745]
[250.64866638 47.58160782]
[235.63658142 47.89861298]
[220.68074036 46.56221008]
[205.96269226 43.58862305]
[191.66110229 39.01394653]
[177.94956970 32.89371872]
[164.99455261 25.30222702]
[156.03385925 37.33160400]
[147.07316589 49.36098099]
[145.67514038 64.18983459]
[131.22621155 70.63489532]
[122.26551056 82.66426849]
[113.30480957 94.69364929]
[111.48721313 108.55683136]
[98.72456360 114.26705170]
[89.76387024 126.29642487]
[80.80317688 138.32580566]
[71.84247589 150.35517883]
[83.44080353 159.87158203]
[94.58032990 169.92115784]
[105.23656464 180.48182678]
[115.38608551 191.53036499]
[125.00657654 203.04249573]
[134.07688904 214.99291992]
[142.57710266 227.35534668]
[150.48851013 240.10260010]
[157.79371643 253.20668030]
[164.47668457 266.63876343]
[170.52272034 280.36932373]
[175.91851807 294.36819458]
[180.65223694 308.60461426]
[184.71345520 323.04724121]
[188.09324646 337.66433716]
[190.78417969 352.42382812]
[192.78034973 367.29318237]
[194.07736206 382.23980713]
[194.67237854 397.23077393]
[194.56407166 412.23312378]
[193.75268555 427.21395874]
[192.24000549 442.14025879]
[190.02935791 456.97927856]
[187.12559509 471.69833374]
[183.53511047 486.26513672]
[179.26580811 500.64761353]
[174.32704163 514.81420898]
[168.72967529 528.73370361]
[162.48603821 542.37554932]
[155.60983276 555.70971680]
[148.11618042 568.70697021]
[140.02154541 581.33868408]
[131.34375000 593.57708740]
[122.10182953 605.39532471]
[112.31613159 616.76733398]
[102.00814819 627.66821289]
[91.20054626 638.07391357]
[79.91709137 647.96160889]
[68.18257141 657.30957031]
[56.02279282 666.09722900]
[43.46447754 674.30523682]
[30.53524017 681.91558838]
[17.26349449 688.91162109]
[3.67841864 695.27783203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 166]
[89 165]
[90 164]
[91 163]
[93 161]
[94 160]
[95 159]
[97 157]
[98 156]
[99 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
