%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[190.15837097 782.65496826]
[176.90093994 775.63006592]
[164.03968811 767.90368652]
[151.61170959 759.49804688]
[139.65283203 750.43743896]
[128.19754028 740.74798584]
[117.27886200 730.45764160]
[106.92827606 719.59606934]
[97.17562866 708.19451904]
[88.04904175 696.28594971]
[79.57482147 683.90466309]
[71.77740479 671.08630371]
[64.67927551 657.86791992]
[58.30089569 644.28759766]
[52.66066360 630.38446045]
[47.77483749 616.19866943]
[43.65750122 601.77099609]
[40.32052994 587.14318848]
[37.77354431 572.35729980]
[36.02388763 557.45605469]
[35.07660675 542.48236084]
[34.93442917 527.47937012]
[35.59776306 512.49041748]
[37.06470490 497.55868530]
[39.33101654 482.72720337]
[42.39016724 468.03872681]
[46.23333740 453.53567505]
[50.84944153 439.25979614]
[56.22517776 425.25225830]
[62.34503937 411.55349731]
[69.19138336 398.20297241]
[76.74446869 385.23916626]
[84.98252106 372.69949341]
[93.88179016 360.62008667]
[103.41661072 349.03579712]
[113.55949402 337.97998047]
[124.28118896 327.48452759]
[135.55079651 317.57974243]
[147.33581543 308.29412842]
[159.60224915 299.65447998]
[172.31475830 291.68572998]
[165.04153442 278.56704712]
[157.76831055 265.44833374]
[150.49507141 252.32965088]
[143.22184753 239.21095276]
[135.94862366 226.09225464]
[123.01050568 218.71292114]
[123.08593750 202.89189148]
[115.81270599 189.77319336]
[108.53948212 176.65451050]
[109.20671844 191.63966370]
[106.17636108 206.33036804]
[99.63373566 219.82829285]
[89.97891235 231.30802917]
[77.80229187 240.06759644]
[63.84847641 245.57131958]
[48.97074890 247.48266602]
[34.07888794 245.68475342]
[20.08353996 240.28752136]
[7.84051943 231.62100220]
[-1.90150440 220.21517944]
[-8.54680347 206.76750183]
[-11.68901539 192.10031128]
[-11.13599300 177.11050415]
[-6.92155361 162.71472168]
[0.69658864 149.79327393]
[11.25258064 139.13630676]
[24.10091972 131.39549255]
[38.45592499 127.04418945]
[53.43978500 126.34848022]
[68.13622284 129.35092163]
[81.64656067 135.86788940]
[93.14461517 145.50088501]
[101.92730713 157.66087341]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[78.28102112 62.02945709]
[83.83961487 48.21094513]
[81.39389038 33.41167450]
[78.94815826 18.61240196]
[74.46140289 10.65584278]
[76.57790375 3.57472467]
[74.35278320 -11.25931931]
[59.33041382 -12.38900280]
[44.93622208 -16.83365250]
[31.89220810 -24.37032700]
[20.85265732 -34.62099075]
[12.37131023 -47.07147217]
[6.87358618 -61.09725952]
[4.63524914 -75.99482727]
[5.76857281 -91.01692200]
[10.21671009 -105.41004181]
[17.75654602 -118.45222473]
[28.00988197 -129.48928833]
[40.46241760 -137.96762085]
[54.48954010 -143.46194458]
[69.38764954 -145.69667053]
[84.40946960 -144.55970764]
[98.80150604 -140.10809326]
[111.84186554 -132.56509399]
[122.87644958 -122.30908203]
[131.35176086 -109.85449219]
[136.84268188 -95.82604218]
[139.07380676 -80.92739105]
[137.93319702 -65.90584564]
[133.47808838 -51.51488495]
[125.93193817 -38.47635269]
[115.67325592 -27.44425774]
[103.21660614 -18.97196388]
[89.18682861 -13.48443604]
[91.41194153 1.34960759]
[93.74742889 16.16667557]
[96.19316101 30.96594620]
[98.63888550 45.76521683]
[108.34780884 57.06061935]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[116.72657776 155.21514893]
[121.65817261 169.38127136]
[128.93139648 182.49996948]
[136.20463562 195.61866760]
[149.66297913 203.93634033]
[149.06730652 218.81903076]
[156.34054565 231.93771362]
[163.61376953 245.05641174]
[170.88699341 258.17510986]
[178.16023254 271.29379272]
[185.43345642 284.41250610]
[198.92686462 277.85223389]
[212.75296021 272.02572632]
[226.87187195 266.94976807]
[241.24288940 262.63894653]
[255.82456970 259.10577393]
[270.57489014 256.36035156]
[285.45129395 254.41065979]
[300.41091919 253.26229858]
[315.41061401 252.91856384]
[330.40713501 253.38046265]
[345.35723877 254.64666748]
[360.21783447 256.71350098]
[374.94607544 259.57504272]
[389.49945068 263.22302246]
[403.83605957 267.64691162]
[417.91455078 272.83398438]
[431.69430542 278.76922607]
[445.13562012 285.43560791]
[458.19970703 292.81384277]
[470.84893799 300.88269043]
[483.04681396 309.61886597]
[494.75817871 318.99719238]
[505.94924927 328.99060059]
[516.58776855 339.57034302]
[526.64312744 350.70584106]
[536.08618164 362.36505127]
[544.88989258 374.51431274]
[553.02868652 387.11862183]
[560.47924805 400.14160156]
[567.22003174 413.54574585]
[573.23156738 427.29238892]
[578.49658203 441.34191895]
[582.99987793 455.65377808]
[586.72845459 470.18670654]
[589.67163086 484.89886475]
[591.82080078 499.74777222]
[593.16986084 514.69061279]
[593.71490479 529.68432617]
[593.45428467 544.68572998]
[592.38891602 559.65148926]
[590.52166748 574.53845215]
[587.85809326 589.30377197]
[584.40576172 603.90484619]
[580.17468262 618.29949951]
[575.17706299 632.44635010]
[569.42730713 646.30450439]
[562.94195557 659.83410645]
[555.73974609 672.99603271]
[547.84136963 685.75244141]
[539.26971436 698.06646729]
[530.04943848 709.90264893]
[520.20709229 721.22686768]
[509.77111816 732.00646973]
[498.77157593 742.21032715]
[487.24017334 751.80908203]
[475.21014404 760.77496338]
[462.71621704 769.08227539]
[449.79440308 776.70690918]
[436.48193359 783.62701416]
[422.81723022 789.82250977]
[408.83966064 795.27563477]
[394.58953857 799.97064209]
[380.10794067 803.89392090]
[365.43661499 807.03430176]
[350.61788940 809.38256836]
[335.69448853 810.93206787]
[320.70941162 811.67828369]
[305.70590210 811.61907959]
[290.72720337 810.75463867]
[275.81646729 809.08740234]
[261.01675415 806.62225342]
[246.37068176 803.36621094]
[231.92050171 799.32873535]
[217.70787048 794.52142334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 136]
[42 135]
[43 134]
[44 133]
[45 132]
[46 131]
[48 129]
[49 128]
[50 127]
[74 126]
[75 125]
[76 124]
[77 123]
[79 121]
[80 120]
[82 118]
[83 117]
[84 116]
[86 115]
[87 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
