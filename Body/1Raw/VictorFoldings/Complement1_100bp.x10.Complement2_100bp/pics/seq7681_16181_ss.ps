%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[151.15486145 259.12078857]
[153.76535034 244.34068298]
[157.60345459 229.83084106]
[162.64227295 215.69305420]
[168.84643555 202.02648926]
[176.17243958 188.92701721]
[184.56889343 176.48651123]
[172.88130188 167.08436584]
[161.19372559 157.68222046]
[149.50614929 148.28005981]
[137.74888611 138.96517944]
[122.95496368 137.23635864]
[116.83418274 122.64709473]
[105.00791168 113.41999054]
[91.18876648 111.29325867]
[85.76499176 98.40627289]
[77.07404327 95.59464264]
[73.83268738 88.95270538]
[62.14510727 79.55055237]
[50.45752716 70.14839935]
[38.76994324 60.74625015]
[27.08236313 51.34410095]
[15.39478207 41.94194794]
[-0.20774437 39.32054901]
[-5.27466154 25.31427956]
[-16.96224213 15.91212845]
[-27.08295631 26.99006271]
[-37.87929153 37.41064835]
[-49.30863953 47.13276291]
[-61.32588959 56.11803436]
[-73.88362122 64.33100891]
[-86.93226624 71.73925781]
[-100.42034149 78.31356049]
[-114.29460144 84.02796936]
[-128.50028992 88.85991669]
[-142.98135376 92.79035187]
[-157.68063354 95.80374908]
[-172.54013062 97.88822174]
[-187.50117493 99.03554535]
[-202.50476074 99.24118805]
[-217.49163818 98.50434113]
[-232.40266418 96.82791138]
[-247.17901611 94.21851349]
[-261.76235962 90.68644714]
[-276.09515381 86.24565887]
[-290.12081909 80.91365814]
[-303.78399658 74.71150208]
[-317.03079224 67.66365814]
[-329.80889893 59.79794693]
[-342.06790161 51.14541245]
[-353.75942993 41.74020004]
[-364.83731079 31.61942673]
[-375.25784302 20.82303810]
[-384.97988892 9.39364052]
[-393.96508789 -2.62365794]
[-402.17800903 -15.18143082]
[-409.58618164 -28.23011780]
[-416.16043091 -41.71822357]
[-421.87475586 -55.59251022]
[-426.70663452 -69.79823303]
[-430.63699341 -84.27931213]
[-433.65029907 -98.97861481]
[-435.73471069 -113.83811188]
[-436.88195801 -128.79917908]
[-437.08752441 -143.80274963]
[-436.35058594 -158.78962708]
[-434.67407227 -173.70065308]
[-432.06460571 -188.47698975]
[-428.53247070 -203.06031799]
[-424.09158325 -217.39308167]
[-418.75952148 -231.41871643]
[-412.55728149 -245.08187866]
[-405.50936890 -258.32861328]
[-397.64361572 -271.10668945]
[-388.99099731 -283.36566162]
[-379.58572388 -295.05709839]
[-369.46490479 -306.13494873]
[-358.66845703 -316.55541992]
[-347.23901367 -326.27740479]
[-335.22167969 -335.26254272]
[-322.66384888 -343.47540283]
[-309.61511230 -350.88351440]
[-296.12698364 -357.45767212]
[-282.25265503 -363.17193604]
[-268.04693604 -368.00372314]
[-253.56581116 -371.93402100]
[-238.86650085 -374.94726562]
[-224.00698853 -377.03158569]
[-209.04592896 -378.17874146]
[-194.04235840 -378.38424683]
[-179.05548096 -377.64724731]
[-164.14445496 -375.97064209]
[-149.36813354 -373.36108398]
[-134.78483582 -369.82888794]
[-120.45208740 -365.38793945]
[-106.42647552 -360.05578613]
[-92.76335907 -353.85348511]
[-79.51663971 -346.80551147]
[-66.73860931 -338.93966675]
[-54.47970200 -330.28701782]
[-42.78828812 -320.88168335]
[-31.71051216 -310.76077271]
[-21.29009438 -299.96429443]
[-11.56815910 -288.53479004]
[-2.58307409 -276.51739502]
[5.62969971 -263.95953369]
[13.03775024 -250.91076660]
[19.61184120 -237.42259216]
[25.32602692 -223.54824829]
[30.15775681 -209.34248352]
[34.08796310 -194.86135864]
[37.10113144 -180.16201782]
[39.18537521 -165.30250549]
[40.33246231 -150.34143066]
[40.53787231 -135.33786011]
[39.80078888 -120.35099030]
[38.12412643 -105.43997192]
[35.51449585 -90.66366577]
[31.98220253 -76.08037567]
[27.54118347 -61.74765778]
[22.20896530 -47.72207642]
[16.00659370 -34.05898285]
[8.95854473 -20.81230545]
[1.09263527 -8.03431892]
[-7.56009150 4.22454691]
[4.12748957 13.62669849]
[18.89404297 15.57559204]
[24.79693413 30.25436783]
[36.48451614 39.65651703]
[48.17209625 49.05867004]
[59.85967636 58.46081924]
[71.54725647 67.86296844]
[83.23484039 77.26512146]
[94.99208832 86.58000946]
[108.81123352 88.70674133]
[114.23500824 101.59372711]
[126.06127930 110.82082367]
[141.70111084 113.20963287]
[146.97599792 127.13890839]
[155.66693115 129.95054626]
[158.90829468 136.59248352]
[170.59587097 145.99462891]
[182.28346252 155.39678955]
[193.97103882 164.79893494]
[204.32406616 153.93241882]
[215.55009460 143.97033691]
[227.57034302 134.98255920]
[240.30052185 127.03215790]
[253.65133667 120.17487335]
[267.52914429 114.45881653]
[281.83657837 109.92407990]
[296.47329712 106.60247803]
[311.33660889 104.51729584]
[326.32229614 103.68317413]
[341.32522583 104.10595703]
[356.24017334 105.78267670]
[370.96249390 108.70157623]
[385.38891602 112.84217834]
[399.41827393 118.17543793]
[412.95214844 124.66395569]
[425.89559937 132.26220703]
[438.15786743 140.91690063]
[449.65289307 150.56732178]
[460.30007935 161.14579773]
[470.02471924 172.57809448]
[478.75863647 184.78405762]
[486.44055176 197.67803955]
[493.01654053 211.16961670]
[498.44055176 225.16415405]
[502.67446899 239.56346130]
[505.68862915 254.26657104]
[507.46188354 269.17034912]
[507.98181152 284.17019653]
[507.24475098 299.16098022]
[505.25582886 314.03750610]
[502.02908325 328.69543457]
[497.58706665 343.03192139]
[491.96099854 356.94644165]
[485.19030762 370.34136963]
[477.32250977 383.12277222]
[468.41275024 395.20095825]
[458.52355957 406.49124146]
[447.72430420 416.91442871]
[436.09072876 426.39739990]
[423.70443726 434.87359619]
[410.65231323 442.28363037]
[397.02587891 448.57546997]
[382.92077637 453.70501709]
[368.43588257 457.63629150]
[353.67285156 460.34167480]
[338.73519897 461.80224609]
[323.72772217 462.00772095]
[308.75570679 460.95666504]
[293.92413330 458.65649414]
[279.33703613 455.12326050]
[265.09677124 450.38183594]
[251.30320740 444.46539307]
[238.05308533 437.41552734]
[225.43937683 429.28158569]
[213.55052185 420.12069702]
[202.46994019 409.99710083]
[192.27536011 398.98181152]
[183.03826904 387.15206909]
[174.82347107 374.59088135]
[167.68858337 361.38632202]
[161.68365479 347.63107300]
[156.85079956 333.42153931]
[153.22393799 318.85748291]
[150.82849121 304.04098511]
[149.68125916 289.07601929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 144]
[8 143]
[9 142]
[10 141]
[11 139]
[13 137]
[14 136]
[16 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[23 128]
[25 126]
[26 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
