%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[73.03662872 232.64230347]
[70.56854248 217.61471558]
[74.43238068 202.88410950]
[83.95871735 191.00267029]
[97.49705505 184.02890015]
[96.60423279 169.05549622]
[95.71141815 154.08209229]
[87.23029327 141.83792114]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[85.05039215 87.10601807]
[76.10987091 99.15039825]
[64.57817841 108.74311066]
[51.10749054 115.34163666]
[36.45963669 118.57279968]
[21.46302986 118.25386047]
[6.96579409 114.40286255]
[-6.21217728 107.23759460]
[-17.32560730 97.16329193]
[-25.74597740 84.74969482]
[-30.99707603 70.69886017]
[-32.78192520 55.80542755]
[-30.99958611 40.91169357]
[-25.75085831 26.85997391]
[-17.33258057 14.44495773]
[-6.22084951 4.36877680]
[6.95591354 -2.79871345]
[21.45249939 -6.65215588]
[36.44905472 -6.97361994]
[51.09745026 -3.74492502]
[64.56925201 2.85133004]
[76.10256195 12.44209480]
[85.04511261 24.48496628]
[90.89116669 38.29885864]
[93.31014252 53.10360718]
[97.71113586 38.76375961]
[102.11213684 24.42391396]
[106.51313782 10.08406639]
[110.91413116 -4.25578070]
[114.99379730 -18.69033432]
[118.75009918 -33.21239471]
[122.50640106 -47.73445129]
[126.26270294 -62.25651169]
[111.92557526 -66.67536926]
[97.80612183 -71.74689484]
[83.93402100 -77.46041870]
[70.33845520 -83.80391693]
[57.04801178 -90.76406097]
[44.09064484 -98.32620239]
[31.49360085 -106.47444916]
[19.28337288 -115.19166565]
[7.48563766 -124.45950317]
[-3.87479162 -134.25848389]
[-14.77402496 -144.56800842]
[-25.18914032 -155.36637878]
[-35.09823608 -166.63088989]
[-44.48047256 -178.33786011]
[-53.31611633 -190.46266174]
[-61.58658600 -202.97979736]
[-69.27449799 -215.86294556]
[-76.36367035 -229.08500671]
[-82.83920288 -242.61819458]
[-88.68746948 -256.43402100]
[-93.89618683 -270.50344849]
[-98.45438385 -284.79687500]
[-102.35248566 -299.28427124]
[-105.58229065 -313.93511963]
[-108.13700104 -328.71865845]
[-110.01125336 -343.60379028]
[-111.20110321 -358.55917358]
[-111.70404816 -373.55337524]
[-111.51902771 -388.55490112]
[-110.64643860 -403.53213501]
[-109.08810425 -418.45364380]
[-106.84731293 -433.28799438]
[-103.92876434 -448.00402832]
[-100.33860779 -462.57077026]
[-96.08438873 -476.95761108]
[-91.17505646 -491.13427734]
[-85.62093353 -505.07095337]
[-79.43370056 -518.73834229]
[-72.62637329 -532.10772705]
[-65.21325684 -545.15093994]
[-57.20994949 -557.84051514]
[-48.63328552 -570.14990234]
[-39.50129318 -582.05310059]
[-29.83318138 -593.52508545]
[-19.64928436 -604.54180908]
[-8.97101593 -615.08001709]
[2.17916632 -625.11761475]
[13.77781296 -634.63342285]
[25.80053139 -643.60748291]
[38.22203827 -652.02087402]
[51.01621246 -659.85595703]
[64.15614319 -667.09625244]
[77.61420441 -673.72650146]
[91.36208344 -679.73278809]
[105.37087250 -685.10241699]
[119.61111450 -689.82415771]
[134.05285645 -693.88806152]
[148.66574097 -697.28564453]
[163.41902161 -700.00964355]
[178.28166199 -702.05438232]
[193.22242737 -703.41558838]
[208.20989990 -704.09039307]
[223.21253967 -704.07739258]
[238.19880676 -703.37652588]
[253.13719177 -701.98937988]
[267.99624634 -699.91876221]
[282.74478149 -697.16906738]
[297.35171509 -693.74615479]
[311.78637695 -689.65716553]
[326.01840210 -684.91064453]
[340.01785278 -679.51666260]
[353.75524902 -673.48651123]
[367.20178223 -666.83288574]
[380.32910156 -659.56976318]
[393.10961914 -651.71246338]
[405.51651001 -643.27746582]
[417.52359009 -634.28253174]
[429.10568237 -624.74652100]
[440.23840332 -614.68963623]
[450.89834595 -604.13287354]
[461.06307983 -593.09844971]
[470.71124268 -581.60968018]
[479.82250977 -569.69061279]
[488.37777710 -557.36633301]
[496.35900879 -544.66284180]
[503.74945068 -531.60675049]
[510.53350830 -518.22558594]
[516.69696045 -504.54748535]
[522.22686768 -490.60116577]
[527.11157227 -476.41598511]
[531.34075928 -462.02178955]
[534.90557861 -447.44882202]
[537.79858398 -432.72772217]
[540.01354980 -417.88949585]
[541.54595947 -402.96530151]
[542.39251709 -387.98657227]
[542.55145264 -372.98477173]
[542.02246094 -357.99145508]
[540.80657959 -343.03814697]
[538.90649414 -328.15631104]
[536.32604980 -313.37722778]
[533.07080078 -298.73202515]
[529.14752197 -284.25143433]
[524.56451416 -269.96594238]
[519.33135986 -255.90559387]
[513.45904541 -242.09994507]
[506.96002197 -228.57804871]
[499.84786987 -215.36831665]
[492.13757324 -202.49855042]
[483.84536743 -189.99580383]
[474.98864746 -177.88638306]
[465.58609009 -166.19573975]
[455.65740967 -154.94847107]
[445.22354126 -144.16821289]
[434.30642700 -133.87765503]
[422.92898560 -124.09844208]
[411.11514282 -114.85112000]
[398.88977051 -106.15514374]
[386.27859497 -98.02880859]
[373.30810547 -90.48919678]
[360.00558472 -83.55216217]
[346.39901733 -77.23230743]
[332.51699829 -71.54290771]
[318.38873291 -66.49593353]
[304.04397583 -62.10200119]
[289.51281738 -58.37034607]
[274.82586670 -55.30882263]
[260.01400757 -52.92386627]
[245.10836792 -51.22049332]
[230.14030457 -50.20228195]
[215.14131165 -49.87137604]
[200.14291382 -50.22847366]
[185.17666626 -51.27281952]
[170.27401733 -53.00222397]
[155.46633911 -55.41304398]
[140.78475952 -58.50020981]
[137.02845764 -43.97815323]
[133.27215576 -29.45609283]
[129.51585388 -14.93403339]
[130.98062134 -11.72672844]
[130.96467590 -7.65060329]
[129.07658386 -3.40932989]
[125.25398254 0.14521725]
[120.85298157 14.48506451]
[116.45198059 28.82491112]
[112.05098724 43.16475677]
[107.64998627 57.50460434]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[117.65086365 140.02403259]
[110.68482208 153.18927002]
[111.57764435 168.16267395]
[112.47045898 183.13607788]
[126.74156952 188.45166016]
[137.61228943 199.11689758]
[143.19920349 213.28398132]
[142.53434753 228.49838257]
[135.73291016 242.12409973]
[123.97327423 251.80041504]
[109.29288483 255.85083008]
[94.23519135 253.57359314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 202]
[6 201]
[7 200]
[9 198]
[10 197]
[12 195]
[13 194]
[38 193]
[39 192]
[40 191]
[41 190]
[42 189]
[43 185]
[44 184]
[45 183]
[46 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
