%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[105.87399292 509.84753418]
[95.67002869 498.84533691]
[86.22372437 487.18615723]
[77.57727051 474.92205811]
[69.76927185 462.10781860]
[62.83461380 448.80068970]
[56.80426407 435.06008911]
[51.70515442 420.94738770]
[47.56005859 406.52560425]
[44.38749313 391.85919189]
[42.20162582 377.01361084]
[41.01221848 362.05517578]
[40.82458496 347.05072021]
[41.63956070 332.06723022]
[43.45350647 317.17163086]
[46.25832367 302.43045044]
[50.04148483 287.90954590]
[54.78608704 273.67373657]
[60.47094727 259.78662109]
[67.07067108 246.31024170]
[74.55578613 233.30477905]
[82.89286041 220.82829285]
[92.04465485 208.93653870]
[101.97029114 197.68260193]
[112.62545013 187.11677551]
[123.96253967 177.28622437]
[135.93092346 168.23486328]
[127.70211029 155.69346619]
[119.47330475 143.15205383]
[106.02217865 136.75546265]
[104.92068481 120.97264099]
[96.69187927 108.43124390]
[93.06516266 107.12001801]
[90.03402710 104.21656036]
[88.29661560 100.02270508]
[88.39026642 95.14099121]
[80.72966766 82.24466705]
[73.06907654 69.34834290]
[65.40847778 56.45201492]
[57.74787903 43.55568695]
[50.08728027 30.65935898]
[42.42668533 17.76303291]
[34.76608658 4.86670589]
[27.10548973 -8.02962112]
[19.44489098 -20.92594719]
[14.89145184 -23.47805786]
[12.05583382 -27.15400314]
[11.07845783 -31.11124802]
[11.74500179 -34.57362366]
[4.66789627 -47.79915237]
[-2.40920925 -61.02468109]
[-16.46185493 -57.27684402]
[-30.98889923 -56.75761032]
[-45.25849533 -59.48978806]
[-58.55251312 -65.33246613]
[-70.20269012 -73.98827362]
[-79.62419891 -85.01852417]
[-86.34503174 -97.86546326]
[-90.02964020 -111.88043213]
[-90.49565887 -126.35663605]
[-87.72297668 -140.56481934]
[-81.85453796 -153.78994751]
[-73.18899536 -165.36723328]
[-62.16552734 -174.71554565]
[-69.04493713 -188.04496765]
[-75.92435455 -201.37440491]
[-82.80376434 -214.70382690]
[-96.96768188 -209.69412231]
[-111.68184662 -206.65980530]
[-126.67214203 -205.65739441]
[-141.65930176 -206.70556641]
[-156.36413574 -209.78480530]
[-170.51269531 -214.83772278]
[-183.84140015 -221.77021790]
[-196.10194397 -230.45310974]
[-207.06593323 -240.72467041]
[-216.52908325 -252.39353943]
[-224.31513977 -265.24230957]
[-230.27903748 -279.03164673]
[-234.30966187 -293.50463867]
[-236.33193970 -308.39169312]
[-236.30819702 -323.41543579]
[-234.23886108 -338.29602051]
[-230.16249084 -352.75622559]
[-224.15504456 -366.52664185]
[-216.32839966 -379.35073853]
[-206.82839966 -390.98962402]
[-195.83200073 -401.22647095]
[-183.54406738 -409.87054443]
[-170.19351196 -416.76086426]
[-156.02905273 -421.76904297]
[-141.31455994 -424.80175781]
[-126.32415009 -425.80255127]
[-111.33710480 -424.75274658]
[-96.63260651 -421.67193604]
[-82.48459625 -416.61749268]
[-69.15663910 -409.68353271]
[-56.89703369 -400.99932861]
[-45.93416595 -390.72656250]
[-36.47226715 -379.05670166]
[-28.68760490 -366.20706177]
[-22.72520447 -352.41708374]
[-18.69614220 -337.94366455]
[-16.67547607 -323.05639648]
[-16.70085144 -308.03262329]
[-18.77179337 -293.15228271]
[-22.84972382 -278.69253540]
[-28.85867119 -264.92276001]
[-36.68669128 -252.09951782]
[-46.18795776 -240.46165466]
[-57.18546677 -230.22601318]
[-69.47433472 -221.58323669]
[-62.59492111 -208.25381470]
[-55.71551132 -194.92437744]
[-48.83609772 -181.59495544]
[-33.79142761 -185.29959106]
[-18.28862190 -185.30380249]
[-3.22498536 -181.60319519]
[10.52660465 -174.40789795]
[22.16827393 -164.13069153]
[31.02343941 -151.36328125]
[36.57614136 -136.84226990]
[38.50109482 -121.40666962]
[36.68274307 -105.94934845]
[31.22219467 -91.36547852]
[22.43160057 -78.50063324]
[10.81631851 -68.10178375]
[17.89342308 -54.87625885]
[24.97052956 -41.65073013]
[32.34121704 -28.58654594]
[40.00181580 -15.69021893]
[47.66241455 -2.79389167]
[55.32300949 10.10243511]
[62.98360825 22.99876213]
[70.64420319 35.89508820]
[78.30480194 48.79141617]
[85.96540070 61.68774414]
[93.62599945 74.58406830]
[101.28659821 87.48040009]
[109.23327637 100.20243073]
[117.46208954 112.74383545]
[131.50178528 120.03748322]
[132.01470947 134.92324829]
[140.24351501 147.46466064]
[148.47232056 160.00605774]
[161.54016113 152.63035583]
[175.07145691 146.14398193]
[189.00578308 140.57588196]
[203.28091431 135.95092773]
[217.83306885 132.28977966]
[232.59725952 129.60877991]
[247.50756836 127.91992188]
[262.49737549 127.23072815]
[277.49972534 127.54429626]
[292.44766235 128.85920715]
[307.27435303 131.16960144]
[321.91363525 134.46514893]
[336.30010986 138.73114014]
[350.36953735 143.94853210]
[364.05902100 150.09399414]
[377.30749512 157.14010620]
[390.05572510 165.05537415]
[402.24682617 173.80445862]
[413.82632446 183.34828186]
[424.74249268 193.64422607]
[434.94659424 204.64630127]
[444.39303589 216.30537415]
[453.03964233 228.56936646]
[460.84780884 241.38349915]
[467.78262329 254.69053650]
[473.81314087 268.43106079]
[478.91244507 282.54370117]
[483.05770874 296.96542358]
[486.23046875 311.63180542]
[488.41653442 326.47735596]
[489.60610962 341.43576050]
[489.79394531 356.44024658]
[488.97915649 371.42373657]
[487.16540527 386.31936646]
[484.36074829 401.06057739]
[480.57778931 415.58154297]
[475.83334351 429.81738281]
[470.14868164 443.70455933]
[463.54910278 457.18103027]
[456.06417847 470.18661499]
[447.72726440 482.66317749]
[438.57559204 494.55505371]
[428.65011597 505.80911255]
[417.99508667 516.37506104]
[406.65811157 526.20574951]
[394.68984985 535.25726318]
[382.14373779 543.48919678]
[369.07580566 550.86474609]
[355.54440308 557.35095215]
[341.61001587 562.91888428]
[327.33483887 567.54364014]
[312.78265381 571.20458984]
[298.01840210 573.88537598]
[283.10809326 575.57409668]
[268.11828613 576.26306152]
[253.11590576 575.94934082]
[238.16801453 574.63421631]
[223.34132385 572.32366943]
[208.70208740 569.02789307]
[194.31567383 564.76171875]
[180.24632263 559.54418945]
[166.55690002 553.39855957]
[153.30853271 546.35229492]
[140.56037903 538.43682861]
[128.36940002 529.68762207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 145]
[28 144]
[29 143]
[31 141]
[32 140]
[36 139]
[37 138]
[38 137]
[39 136]
[40 135]
[41 134]
[42 133]
[43 132]
[44 131]
[45 130]
[49 129]
[50 128]
[51 127]
[64 115]
[65 114]
[66 113]
[67 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
