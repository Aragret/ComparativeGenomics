%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[60.33503342 720.53698730]
[49.13002014 730.57501221]
[36.27118301 738.38299561]
[22.19649315 743.69506836]
[7.38532448 746.33020020]
[-7.65785837 746.19866943]
[-22.42069054 743.30499268]
[-36.40035629 737.74768066]
[-49.12070847 729.71606445]
[-60.14850616 719.48364258]
[-69.10813904 707.39892578]
[-75.69444275 693.87359619]
[-79.68309784 679.36822510]
[-80.93825531 664.37695312]
[-79.41715240 649.41027832]
[-75.17160034 634.97802734]
[-68.34621429 621.57171631]
[-59.17344666 609.64801025]
[-47.96572876 599.61297607]
[-35.10478973 591.80841064]
[-21.02866745 586.50018311]
[-6.21678925 583.86907959]
[8.82635784 584.00463867]
[11.71163082 569.28472900]
[14.59690285 554.56481934]
[17.48217583 539.84497070]
[12.33747101 525.86706543]
[22.58477020 513.81286621]
[20.71109581 509.41989136]
[21.57718277 503.80322266]
[25.78131104 498.70059204]
[29.10357094 484.07312012]
[32.42583084 469.44567871]
[35.74808884 454.81820679]
[34.16412354 447.59927368]
[39.23023605 439.99847412]
[42.76990891 425.42208862]
[38.25447845 411.22842407]
[49.02980423 399.64382935]
[51.80541611 384.90286255]
[53.80942917 370.03732300]
[55.81344223 355.17181396]
[57.81745529 340.30627441]
[59.82147217 325.44076538]
[61.82548523 310.57522583]
[52.61881638 298.92306519]
[54.43940353 283.81875610]
[66.72368622 274.24096680]
[68.72769928 259.37542725]
[61.64541245 249.56890869]
[63.19332886 237.16780090]
[73.08284760 228.88769531]
[75.30796814 214.05364990]
[77.53308105 199.21960449]
[79.75820160 184.38555908]
[81.98331451 169.55151367]
[84.20843506 154.71746826]
[71.54260254 149.33103943]
[60.53889465 141.06332397]
[51.84000015 130.39720154]
[45.95400620 117.95565796]
[43.22469330 104.46537781]
[43.81147385 90.71428680]
[47.68007278 77.50554657]
[54.60454178 65.61064911]
[64.18043518 55.72433853]
[75.84845734 48.42405319]
[88.92710876 44.13618088]
[102.65248871 43.11116409]
[105.31828308 28.34994888]
[107.98408508 13.58873177]
[102.82250977 -1.36682880]
[112.69853210 -12.51642609]
[115.36432648 -27.27764320]
[117.92015839 -42.05829620]
[120.36589050 -56.85756683]
[122.81161499 -71.65683746]
[113.87808990 -84.41732025]
[116.56922913 -99.39104462]
[128.78944397 -107.82915497]
[131.23518372 -122.62842560]
[133.68090820 -137.42770386]
[123.23488617 -151.45980835]
[126.11263275 -168.37232971]
[140.05189514 -177.78166199]
[142.27702332 -192.61570740]
[144.39164734 -207.46589661]
[146.39566040 -222.33143616]
[140.57144165 -237.04159546]
[149.93974304 -248.62106323]
[151.94375610 -263.48660278]
[146.11953735 -278.19674683]
[155.48785400 -289.77621460]
[157.49186707 -304.64175415]
[151.66764832 -319.35192871]
[161.03594971 -330.93139648]
[163.03996277 -345.79690552]
[165.04399109 -360.66244507]
[151.06480408 -366.32223511]
[138.93283081 -375.28137207]
[129.41069031 -386.97665405]
[123.09696198 -400.67291260]
[120.38851929 -415.50921631]
[121.45561218 -430.55288696]
[126.23117828 -444.85827637]
[134.41500854 -457.52618408]
[145.49267578 -467.76025391]
[158.76780701 -474.91717529]
[173.40594482 -478.54705811]
[188.48689270 -478.42172241]
[203.06266785 -474.54907227]
[216.21702576 -467.17248535]
[227.12306213 -456.75570679]
[235.09521484 -443.95355225]
[239.63235474 -429.57073975]
[240.44927979 -414.51141357]
[237.49462891 -399.72219849]
[230.95413208 -386.13275146]
[221.23892212 -374.59735107]
[208.95971680 -365.84109497]
[194.88841248 -360.41439819]
[179.90951538 -358.65841675]
[177.90550232 -343.79290771]
[175.90148926 -328.92736816]
[181.86904907 -315.28048706]
[172.35739136 -302.63772583]
[170.35337830 -287.77221680]
[176.32093811 -274.12533569]
[166.80929565 -261.48257446]
[164.80528259 -246.61705017]
[170.77284241 -232.97016907]
[161.26118469 -220.32742310]
[159.25717163 -205.46188354]
[161.47886658 -198.41307068]
[157.11106873 -190.39059448]
[154.88594055 -175.55654907]
[163.91925049 -166.36802673]
[166.04263306 -153.46170044]
[160.25978088 -141.51310730]
[148.48017883 -134.98196411]
[146.03445435 -120.18270111]
[143.58871460 -105.38343048]
[152.44438171 -93.46231842]
[150.17488098 -78.41891479]
[137.61088562 -69.21111298]
[135.16516113 -54.41184235]
[132.71943665 -39.61257172]
[134.73027039 -32.50072479]
[130.12554932 -24.61184883]
[127.45974731 -9.85063076]
[132.81199646 4.04910803]
[122.74530029 16.25452614]
[120.07950592 31.01574326]
[117.41371155 45.77696228]
[131.94544983 52.85274887]
[143.90414429 63.72602463]
[152.32656860 77.52099609]
[156.53433228 93.12654114]
[156.18852234 109.28571320]
[151.31700134 124.69696808]
[142.31214905 138.11900330]
[129.89923096 148.47071838]
[115.07809448 154.91836548]
[99.04248047 156.94258118]
[96.81735992 171.77662659]
[94.59224701 186.61067200]
[92.36712646 201.44471741]
[90.14200592 216.27876282]
[87.91689301 231.11280823]
[95.05236053 248.08827209]
[83.59323120 261.37945557]
[81.58921814 276.24496460]
[90.89870453 288.73382568]
[88.65458679 303.78103638]
[76.69100952 312.57922363]
[74.68699646 327.44476318]
[72.68298340 342.31030273]
[70.67897034 357.17581177]
[68.67495728 372.04135132]
[66.67094421 386.90689087]
[78.54608917 377.74276733]
[93.53816986 378.23016357]
[104.79300690 388.14624023]
[107.16503906 402.95751953]
[99.56980896 415.89245605]
[85.47975159 421.03738403]
[71.33664703 416.04010010]
[63.60618210 403.18350220]
[67.86843109 418.41976929]
[57.34628296 428.96176147]
[53.80661011 443.53814697]
[50.37554932 458.14047241]
[47.05329132 472.76791382]
[43.73102951 487.39538574]
[40.40877151 502.02285767]
[37.30466080 516.69812012]
[42.24299240 531.72888184]
[32.20206833 542.73022461]
[29.31679344 557.45013428]
[26.43152237 572.16998291]
[23.54624939 586.88989258]
[37.52741241 592.44342041]
[50.24993134 600.47161865]
[61.28048325 610.70111084]
[70.24337006 622.78332520]
[76.83332825 636.30694580]
[80.82588959 650.81121826]
[82.08508301 665.80218506]
[80.56801605 680.76922607]
[76.32636261 695.20263672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 201]
[24 200]
[25 199]
[26 198]
[28 196]
[31 195]
[32 194]
[33 193]
[34 192]
[36 191]
[37 190]
[39 188]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[45 175]
[48 172]
[49 171]
[52 169]
[53 168]
[54 167]
[55 166]
[56 165]
[57 164]
[69 154]
[70 153]
[71 152]
[73 150]
[74 149]
[75 147]
[76 146]
[77 145]
[80 142]
[81 141]
[82 140]
[85 136]
[86 135]
[87 133]
[88 132]
[90 130]
[91 129]
[93 127]
[94 126]
[96 124]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
