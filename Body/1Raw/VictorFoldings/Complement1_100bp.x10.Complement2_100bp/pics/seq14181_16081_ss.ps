%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[213.45571899 456.50860596]
[212.16688538 441.55352783]
[212.24333191 426.54321289]
[213.68444824 411.60205078]
[216.47828674 396.85382080]
[220.60166931 382.42077637]
[226.02046204 368.42251587]
[232.68974304 354.97497559]
[240.55426025 342.18963623]
[249.54882812 330.17245483]
[259.59893799 319.02297974]
[270.62127686 308.83361816]
[261.48248291 296.93899536]
[252.34367371 285.04434204]
[243.20486450 273.14971924]
[234.06607056 261.25509644]
[220.17643738 255.87664795]
[217.90412903 240.21946716]
[208.76533508 228.32484436]
[199.62652588 216.43020630]
[190.48771667 204.53556824]
[180.65713501 193.20597839]
[166.22680664 189.51617432]
[162.11003113 174.23995972]
[151.62252808 163.51557922]
[141.13504028 152.79119873]
[130.64753723 142.06681824]
[120.16003418 131.34243774]
[109.67253113 120.61805725]
[98.60269928 122.73124695]
[87.87503052 119.27815247]
[80.11644745 111.10434723]
[77.22682953 100.21137238]
[79.91375732 89.26664734]
[69.75021362 78.23476410]
[59.58666229 67.20288849]
[44.54561996 62.29599762]
[41.61246872 47.69305420]
[31.44892311 36.66117859]
[34.82145309 51.27713013]
[32.75852203 66.13459778]
[25.53153610 79.27882385]
[14.09133434 88.98046112]
[-0.05693037 93.96308899]
[-15.05180931 93.57116699]
[-28.92046928 87.85624695]
[-39.83824921 77.57023621]
[-46.36872482 64.06642151]
[-47.65270233 49.12147903]
[-43.52125549 34.70166016]
[-34.51794052 22.70414734]
[-21.82730293 14.70741558]
[-7.11901236 11.76357460]
[7.67180204 14.25993633]
[20.60095215 21.86962128]
[13.13321018 8.86066914]
[5.66546917 -4.14828348]
[-1.80227184 -17.15723610]
[-9.27001286 -30.16618919]
[-22.85069847 -38.28256226]
[-22.47668648 -53.17247391]
[-29.94442749 -66.18142700]
[-37.41216660 -79.19037628]
[-51.25757217 -73.36934662]
[-65.71338654 -69.29392242]
[-80.56046295 -67.02588654]
[-95.57371521 -66.59961700]
[-110.52556610 -68.02157593]
[-125.18932343 -71.27021027]
[-139.34271240 -76.29627228]
[-152.77116394 -83.02356720]
[-165.27108765 -91.35010529]
[-176.65301514 -101.14967346]
[-186.74438477 -112.27368927]
[-195.39221191 -124.55353546]
[-202.46540833 -137.80305481]
[-207.85675049 -151.82136536]
[-211.48448181 -166.39596558]
[-213.29362488 -181.30592346]
[-213.25674438 -196.32518005]
[-211.37442017 -211.22607422]
[-207.67515564 -225.78268433]
[-202.21505737 -239.77436829]
[-195.07690430 -252.98898315]
[-186.36888123 -265.22622681]
[-176.22300720 -276.30056763]
[-164.79310608 -286.04412842]
[-152.25242615 -294.30917358]
[-138.79112244 -300.97045898]
[-124.61322784 -305.92697144]
[-109.93368530 -309.10354614]
[-94.97503662 -310.45208740]
[-79.96405792 -309.95211792]
[-65.12829590 -307.61120605]
[-50.69266891 -303.46484375]
[-36.87601471 -297.57589722]
[-23.88778496 -290.03363037]
[-11.92488384 -280.95242310]
[-1.16866446 -270.46990967]
[8.21781254 -258.74496460]
[16.09224892 -245.95541382]
[22.33527374 -232.29510498]
[26.85223961 -217.97111511]
[29.57467461 -203.20060730]
[30.46130562 -188.20748901]
[29.49868965 -173.21905518]
[26.70142365 -158.46253967]
[22.11190987 -144.16162109]
[15.79972649 -130.53312683]
[7.86056328 -117.78364563]
[-1.58522344 -106.10646057]
[-12.39443779 -95.67858887]
[-24.40321541 -86.65811920]
[-16.93547440 -73.64916229]
[-9.46773338 -60.64021301]
[3.57880974 -53.45432663]
[3.73893929 -37.63393021]
[11.20668030 -24.62497711]
[18.67442131 -11.61602497]
[26.14216232 1.39292765]
[33.60990524 14.40188026]
[42.48080063 26.49763107]
[52.64434814 37.52951050]
[66.95842743 41.64732742]
[70.61853790 57.03934479]
[80.78208923 68.07122040]
[90.94563293 79.10309601]
[108.96673584 79.06534576]
[121.37329102 92.13587952]
[120.39691162 110.13055420]
[130.88441467 120.85493469]
[141.37191772 131.57931519]
[151.85940552 142.30369568]
[162.34690857 153.02807617]
[172.83441162 163.75245667]
[188.01489258 168.20933533]
[191.38151550 182.71847534]
[190.54757690 167.74168396]
[198.57885742 155.07289124]
[212.47991943 149.43724060]
[227.06600952 152.93670654]
[236.89685059 164.26606750]
[238.30581665 179.19975281]
[230.76736450 192.16786194]
[217.09318542 198.33361816]
[202.38235474 195.39677429]
[211.52116394 207.29139709]
[220.65995789 219.18603516]
[229.79876709 231.08067322]
[244.34205627 237.30989075]
[245.96069336 252.11628723]
[255.09950256 264.01092529]
[264.23831177 275.90554810]
[273.37710571 287.80017090]
[282.51589966 299.69482422]
[295.20092773 291.66949463]
[308.56317139 284.83096313]
[322.49191284 279.23587036]
[336.87176514 274.93057251]
[351.58352661 271.95074463]
[366.50531006 270.32110596]
[381.51345825 270.05514526]
[396.48361206 271.15505981]
[411.29171753 273.61172485]
[425.81506348 277.40481567]
[439.93331909 282.50289917]
[453.52947998 288.86367798]
[466.49087524 296.43450928]
[478.71011353 305.15261841]
[490.08593750 314.94573975]
[500.52407837 325.73278809]
[509.93804932 337.42434692]
[518.24981689 349.92352295]
[525.39056396 363.12677002]
[531.30108643 376.92462158]
[535.93237305 391.20281982]
[539.24603271 405.84298706]
[541.21472168 420.72384644]
[541.82202148 435.72204590]
[541.06292725 450.71334839]
[538.94372559 465.57348633]
[535.48199463 480.17938232]
[530.70635986 494.40994263]
[524.65649414 508.14727783]
[517.38250732 521.27752686]
[508.94461060 533.69195557]
[499.41278076 545.28759766]
[488.86596680 555.96844482]
[477.39157104 565.64593506]
[465.08468628 574.23986816]
[452.04733276 581.67907715]
[438.38748169 587.90191650]
[424.21832275 592.85681152]
[409.65731812 596.50268555]
[394.82510376 598.80932617]
[379.84460449 599.75762939]
[364.83990479 599.33972168]
[349.93539429 597.55914307]
[335.25454712 594.43054199]
[320.91903687 589.97991943]
[307.04763794 584.24407959]
[293.75531006 577.27062988]
[281.15216064 569.11730957]
[269.34268188 559.85168457]
[258.42471313 549.55059814]
[248.48872375 538.29931641]
[239.61703491 526.19110107]
[231.88316345 513.32635498]
[225.35122681 499.81155396]
[220.07531738 485.75878906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 155]
[13 154]
[14 153]
[15 152]
[16 151]
[18 149]
[19 148]
[20 147]
[21 146]
[22 137]
[24 135]
[25 134]
[26 133]
[27 132]
[28 131]
[29 130]
[34 127]
[35 126]
[36 125]
[38 123]
[39 122]
[55 121]
[56 120]
[57 119]
[58 118]
[59 117]
[61 115]
[62 114]
[63 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
