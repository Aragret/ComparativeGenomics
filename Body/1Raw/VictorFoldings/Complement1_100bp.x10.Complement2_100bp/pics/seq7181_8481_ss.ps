%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[50.44102097 467.14065552]
[38.44385147 476.29107666]
[24.48680115 482.02371216]
[9.52148628 483.94769287]
[-5.43173456 481.93188477]
[-19.35332680 476.11364746]
[-31.29409027 466.88973999]
[-40.43988800 454.88903809]
[-46.16714096 440.92977905]
[-48.08535385 425.96371460]
[-46.06374741 411.01126099]
[-40.24015045 397.09191895]
[-31.01162720 385.15472412]
[-19.00739670 376.01358032]
[-5.04592419 370.29171753]
[9.92087269 368.37927246]
[11.92488670 353.51373291]
[13.92889977 338.64822388]
[15.93291378 323.78268433]
[17.93692780 308.91714478]
[19.94094086 294.05163574]
[18.10542679 291.04110718]
[17.63689423 286.99197388]
[19.00761414 282.55639648]
[22.38073921 278.57278442]
[25.04653358 263.81155396]
[27.71232986 249.05033875]
[22.36008453 235.15060425]
[32.42678070 222.94519043]
[35.09257507 208.18397522]
[26.09644699 220.18687439]
[14.33317757 229.49415588]
[0.58298242 235.48849487]
[-14.24213696 237.77230835]
[-29.15888405 236.19413757]
[-43.17788315 230.85862732]
[-55.36930847 222.11968994]
[-64.92454529 210.55691528]
[-71.20982361 196.93725586]
[-73.80827332 182.16403198]
[-72.54753876 167.21710205]
[-67.51124573 153.08786011]
[-59.03342819 140.71342468]
[-47.67639542 130.91455078]
[-34.19341660 124.34117889]
[-19.47876930 121.42927551]
[-4.50842285 122.37199402]
[9.72469425 127.10680389]
[22.27654839 135.31965637]
[32.31462479 146.46582031]
[39.17312622 159.80601501]
[42.39716339 174.45544434]
[41.77201462 189.44750977]
[41.17635345 174.56481934]
[54.63469315 166.24714661]
[61.90792465 153.12844849]
[61.31226349 138.24575806]
[74.77059937 129.92808533]
[82.04383087 116.80939484]
[89.31706238 103.69069672]
[75.20581818 108.77722931]
[60.76808548 104.70882416]
[51.38878632 93.00289917]
[50.56616211 78.02547455]
[58.60703278 65.36275482]
[72.51235199 59.73762894]
[87.09577942 63.24812698]
[96.91806030 74.58491516]
[98.31547546 89.52079773]
[107.09607697 77.35934448]
[115.87667847 65.19789124]
[124.65727997 53.03643417]
[133.43788147 40.87497711]
[141.47906494 28.21245193]
[148.75228882 15.09375858]
[156.02551270 1.97506452]
[162.80551147 -11.40520859]
[169.08287048 -25.02852440]
[167.83093262 -40.80012131]
[180.18435669 -49.12130737]
[180.93350220 -58.22496796]
[186.65792847 -62.89965057]
[193.13743591 -76.42799377]
[199.61692810 -89.95634460]
[206.09642029 -103.48468781]
[211.02801514 -117.65082550]
[214.35028076 -132.27828979]
[217.67253113 -146.90574646]
[220.99479675 -161.53320312]
[222.22177124 -176.48294067]
[221.32894897 -191.45634460]
[220.43614197 -206.42974854]
[219.54331970 -221.40315247]
[218.65051270 -236.37655640]
[204.00563049 -240.16905212]
[191.25056458 -248.30313110]
[181.63491821 -259.98193359]
[176.10072327 -274.06127930]
[175.19017029 -289.16180420]
[178.99247742 -303.80413818]
[187.13510132 -316.55374146]
[198.82034302 -326.16159058]
[212.90339661 -331.68634033]
[228.00453186 -332.58676147]
[242.64431763 -328.77465820]
[255.38847351 -320.62347412]
[264.98846436 -308.93179321]
[270.50378418 -294.84506226]
[271.39410400 -279.74331665]
[267.57217407 -265.10610962]
[259.41244507 -252.36741638]
[247.71435547 -242.77525330]
[233.62391663 -237.26937866]
[234.51672363 -222.29597473]
[235.40954590 -207.32257080]
[236.30235291 -192.34915161]
[237.19517517 -177.37574768]
[243.29994202 -191.07728577]
[253.12680054 -202.41009521]
[265.82565308 -210.39381409]
[280.29788208 -214.33773804]
[295.29150391 -213.90069580]
[309.50942993 -209.12049866]
[321.72167969 -200.41067505]
[330.87176514 -188.52471924]
[336.16809082 -174.49085999]
[337.15249634 -159.52319336]
[333.73980713 -144.91658020]
[326.22525024 -131.93460083]
[315.25891113 -121.70035553]
[301.78952026 -115.09920502]
[286.98226929 -112.70220947]
[272.11816406 -114.71673584]
[258.48309326 -120.96849823]
[247.25662231 -130.91667175]
[239.40994263 -143.70063782]
[235.62225342 -158.21093750]
[232.29998779 -143.58348083]
[228.97773743 -128.95602417]
[225.65547180 -114.32855988]
[235.78103638 -125.39531708]
[249.18807983 -132.12220764]
[264.11270142 -133.62419128]
[278.59127808 -129.70367432]
[290.71893311 -120.87643433]
[298.90005493 -108.30387878]
[302.05825806 -93.64012146]
[299.77807617 -78.81444550]
[292.35943604 -65.77742004]
[280.77844238 -56.24428558]
[266.55877686 -51.46929550]
[251.57124329 -52.08068085]
[237.78771973 -57.99799728]
[227.02168274 -68.44272614]
[220.68957520 -82.04068756]
[219.62477112 -97.00519562]
[213.14526367 -83.47684479]
[206.66577148 -69.94850159]
[200.18627930 -56.42015457]
[193.80767822 -42.84394836]
[195.50860596 -28.04678345]
[182.70619202 -18.75116348]
[176.42881775 -5.12784815]
[191.18998718 -7.79393482]
[202.57786560 1.96907783]
[202.19772339 16.96426010]
[190.32980347 26.13772202]
[175.72268677 22.72712898]
[169.14421082 9.24829388]
[161.87098694 22.36698723]
[154.59774780 35.48568344]
[168.70899963 30.39915276]
[183.14672852 34.46755600]
[192.52603149 46.17348480]
[193.34864807 61.15090942]
[185.30778503 73.81362915]
[171.40246582 79.43875122]
[156.81903076 75.92825317]
[146.99674988 64.59146118]
[145.59933472 49.65558243]
[136.81874084 61.81703568]
[128.03813171 73.97849274]
[119.25753021 86.13994598]
[110.47692871 98.30140686]
[102.43575287 110.96392822]
[95.16252899 124.08262634]
[87.88929749 137.20132446]
[87.96472931 153.02233887]
[75.02661896 160.40167236]
[67.75338745 173.52037048]
[67.82881927 189.34140015]
[54.89070892 196.72073364]
[49.85379028 210.84976196]
[47.18799591 225.61097717]
[52.34956360 240.56654358]
[42.47354889 251.71614075]
[39.80775070 266.47735596]
[37.14195633 281.23858643]
[34.80646896 296.05563354]
[32.80245590 310.92117310]
[30.79844093 325.78671265]
[28.79442787 340.65222168]
[26.79041481 355.51776123]
[24.78640175 370.38327026]
[38.71248245 376.19076538]
[50.66036606 385.40542603]
[59.81542587 397.39907837]
[65.55345917 411.35391235]
[67.48323059 426.31848145]
[65.47316742 441.27249146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 204]
[17 203]
[18 202]
[19 201]
[20 200]
[21 199]
[25 198]
[26 197]
[27 196]
[29 194]
[30 193]
[53 192]
[55 190]
[56 189]
[58 187]
[59 186]
[60 185]
[69 184]
[70 183]
[71 182]
[72 181]
[73 180]
[74 171]
[75 170]
[76 169]
[77 163]
[78 162]
[80 160]
[82 159]
[83 158]
[84 157]
[85 156]
[86 140]
[87 139]
[88 138]
[89 137]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
