%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[62.75701904 651.98468018]
[48.43020630 656.44775391]
[33.83221817 659.92272949]
[19.03112030 662.39343262]
[4.09592104 663.84826660]
[-10.90374279 664.28051758]
[-25.89793587 663.68811035]
[-40.81674576 662.07385254]
[-55.59061813 659.44525146]
[-70.15066528 655.81457520]
[-84.42900085 651.19879150]
[-98.35906219 645.61932373]
[-111.87588501 639.10223389]
[-124.91645813 631.67797852]
[-137.41996765 623.38104248]
[-149.32812500 614.25018311]
[-160.58541870 604.32800293]
[-171.13934326 593.66064453]
[-180.94070435 582.29803467]
[-189.94378662 570.29296875]
[-198.10662842 557.70147705]
[-205.39117432 544.58233643]
[-211.76344299 530.99664307]
[-217.19372559 517.00775146]
[-221.65672302 502.68093872]
[-225.13160706 488.08291626]
[-227.60217285 473.28179932]
[-229.05693054 458.34661865]
[-229.48905945 443.34692383]
[-228.89657593 428.35275269]
[-227.28222656 413.43395996]
[-224.65353394 398.66009521]
[-221.02278137 384.10006714]
[-216.40686035 369.82177734]
[-210.82731628 355.89175415]
[-204.31015015 342.37496948]
[-196.88575745 329.33444214]
[-188.58876038 316.83099365]
[-179.45782471 304.92288208]
[-169.53555298 293.66564941]
[-158.86816406 283.11181641]
[-147.50543213 273.31051636]
[-135.50033569 264.30752563]
[-122.90882111 256.14477539]
[-109.78961945 248.86030579]
[-96.20388794 242.48812866]
[-82.21497345 237.05793762]
[-67.88809967 232.59504700]
[-53.29006195 229.12025452]
[-38.48893356 226.64978027]
[-23.55371475 225.19512939]
[-8.55404472 224.76309204]
[6.44014025 225.35568237]
[21.35893059 226.97013855]
[36.13276672 229.59892273]
[50.69276428 233.22978210]
[55.30677414 218.95704651]
[59.92078400 204.68431091]
[64.42841339 190.37762451]
[68.82941437 176.03778076]
[73.23040771 161.69793701]
[77.63140869 147.35809326]
[82.03240204 133.01823425]
[86.43340302 118.67839050]
[90.83440399 104.33854675]
[90.00080109 96.32121277]
[95.40914154 89.81884766]
[100.02315521 75.54611206]
[104.63716125 61.27338028]
[97.16483307 50.06718445]
[97.50597382 36.79714203]
[105.31206512 26.30204391]
[117.55342865 22.27979469]
[122.37942505 8.07733822]
[127.20542145 -6.12511730]
[132.03141785 -20.32757378]
[127.21643829 -39.90251541]
[142.29777527 -52.00376511]
[146.69877625 -66.34361267]
[151.09977722 -80.68346405]
[155.50076294 -95.02330780]
[159.90176392 -109.36315918]
[164.30276489 -123.70300293]
[168.70376587 -138.04284668]
[173.10476685 -152.38269043]
[177.50576782 -166.72254944]
[163.69142151 -172.60316467]
[150.56745911 -179.89556885]
[138.27766418 -188.51988220]
[126.95669556 -198.38160706]
[116.72859955 -209.37268066]
[107.70542908 -221.37268066]
[99.98605347 -234.25013733]
[93.65505219 -247.86395264]
[88.78178406 -262.06497192]
[85.41964722 -276.69760132]
[83.60547638 -291.60150146]
[83.35915375 -306.61340332]
[84.68337250 -321.56881714]
[87.56362915 -336.30386353]
[91.96836090 -350.65713501]
[97.84931183 -364.47134399]
[105.14204407 -377.59512329]
[113.76665497 -389.88470459]
[123.62864685 -401.20541382]
[134.61996460 -411.43325806]
[146.62019348 -420.45614624]
[159.49783325 -428.17520142]
[173.11181641 -434.50585938]
[187.31295776 -439.37878418]
[201.94566345 -442.74057007]
[216.84960938 -444.55438232]
[231.86151123 -444.80035400]
[246.81689453 -443.47576904]
[261.55187988 -440.59515381]
[275.90502930 -436.19006348]
[289.71908569 -430.30877686]
[302.84268188 -423.01571655]
[315.13204956 -414.39080811]
[326.45254517 -404.52856445]
[336.68011475 -393.53698730]
[345.70269775 -381.53652954]
[353.42144775 -368.65869141]
[359.75180054 -355.04458618]
[364.62435913 -340.84332275]
[367.98580933 -326.21054077]
[369.79925537 -311.30651855]
[370.04483032 -296.29461670]
[368.71987915 -281.33929443]
[365.83892822 -266.60437012]
[361.43350220 -252.25132751]
[355.55187988 -238.43740845]
[348.25848389 -225.31398010]
[339.63330078 -213.02481079]
[329.77075195 -201.70455933]
[318.77893066 -191.47726440]
[306.77825928 -182.45497131]
[293.90023804 -174.73654175]
[280.28594971 -168.40652466]
[266.08459473 -163.53428650]
[251.45172119 -160.17321777]
[236.54766846 -158.36013794]
[221.53576660 -158.11491394]
[206.58045959 -159.44021606]
[191.84561157 -162.32154846]
[187.44461060 -147.98170471]
[183.04360962 -133.64184570]
[178.64260864 -119.30200195]
[174.24160767 -104.96215820]
[169.84062195 -90.62230682]
[165.43962097 -76.28246307]
[161.03862000 -61.94261551]
[156.63761902 -47.60276794]
[162.21769714 -39.04263687]
[162.16375732 -28.60494614]
[156.25218201 -19.73738289]
[146.23387146 -15.50157547]
[141.40788269 -1.29911959]
[136.58187866 12.90333557]
[131.75588989 27.10579109]
[139.82733154 41.86012650]
[134.62803650 58.20889282]
[118.90989685 65.88739014]
[114.29588318 80.16012573]
[109.68187714 94.43286133]
[105.17424774 108.73954773]
[100.77324677 123.07939148]
[96.37225342 137.41923523]
[91.97125244 151.75907898]
[87.57025909 166.09893799]
[83.16925812 180.43878174]
[78.76825714 194.77862549]
[79.24208832 203.90075684]
[74.19351959 209.29832458]
[69.57950592 223.57106018]
[64.96549988 237.84379578]
[78.89562988 243.42306519]
[92.41254425 249.93994141]
[105.45320892 257.36407471]
[117.95684052 265.66082764]
[129.86512756 274.79150391]
[141.12254333 284.71356201]
[151.67660522 295.38073730]
[161.47811890 306.74325562]
[170.48136902 318.74819946]
[178.64437866 331.33953857]
[185.92909241 344.45858765]
[192.30154419 358.04418945]
[197.73202515 372.03302002]
[202.19520569 386.35980225]
[205.67028809 400.95776367]
[208.14105225 415.75885010]
[209.59600830 430.69403076]
[210.02835083 445.69369507]
[209.43606567 460.68789673]
[207.82191467 475.60671997]
[205.19342041 490.38058472]
[201.56285095 504.94067383]
[196.94712830 519.21905518]
[191.36776733 533.14910889]
[184.85078430 546.66601562]
[177.42657471 559.70660400]
[169.12973022 572.21020508]
[159.99896240 584.11840820]
[150.07682800 595.37579346]
[139.40960693 605.92974854]
[128.04699707 615.73120117]
[116.04201508 624.73437500]
[103.45061493 632.89727783]
[90.33150482 640.18194580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 176]
[57 175]
[58 174]
[59 172]
[60 171]
[61 170]
[62 169]
[63 168]
[64 167]
[65 166]
[67 165]
[68 164]
[69 163]
[73 160]
[74 159]
[75 158]
[76 157]
[78 153]
[79 152]
[80 151]
[81 150]
[82 149]
[83 148]
[84 147]
[85 146]
[86 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
