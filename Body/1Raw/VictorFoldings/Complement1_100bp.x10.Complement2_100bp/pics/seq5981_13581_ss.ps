%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[68.70267487 681.57318115]
[60.24045563 693.98974609]
[50.09724426 705.07562256]
[38.47954178 714.60504150]
[25.62386703 722.38397217]
[11.79195023 728.25415039]
[-2.73461175 732.09600830]
[-17.66007423 733.83129883]
[-32.68057632 733.42474365]
[-47.49031830 730.88464355]
[-61.78779602 726.26263428]
[-75.28192139 719.65283203]
[-87.69799042 711.18988037]
[-98.78320312 701.04595947]
[-108.31189728 689.42767334]
[-116.09008026 676.57153320]
[-121.95938873 662.73925781]
[-125.80033112 648.21240234]
[-127.53472137 633.28686523]
[-127.12724304 618.26635742]
[-124.58618927 603.45678711]
[-119.96329498 589.15960693]
[-113.35267639 575.66589355]
[-104.88892365 563.25036621]
[-94.74433899 552.16577148]
[-83.12545013 542.63775635]
[-70.26881409 534.86041260]
[-56.43617249 528.99194336]
[-41.90913773 525.15191650]
[-26.98345947 523.41845703]
[-11.96300793 523.82684326]
[2.84642029 526.36883545]
[7.46042967 512.09606934]
[12.07443905 497.82336426]
[16.68844795 483.55062866]
[20.44474792 469.02856445]
[23.33002090 454.30865479]
[26.21529388 439.58877563]
[19.72925568 429.37811279]
[22.01255608 417.09109497]
[32.37738419 409.41430664]
[35.48149109 394.73901367]
[29.15082932 378.37167358]
[41.57225037 364.77792358]
[44.45752335 350.05804443]
[47.34279633 335.33813477]
[50.22806931 320.61825562]
[41.73126984 308.43875122]
[44.44765854 293.46960449]
[57.28023911 284.63995361]
[60.16551208 269.92007446]
[63.05078506 255.20018005]
[57.90607834 241.22229004]
[68.15338135 229.16810608]
[71.03865051 214.44821167]
[73.92392731 199.72831726]
[76.80919647 185.00842285]
[70.23554993 168.73716736]
[82.45320129 154.95999146]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[105.45137787 27.61299896]
[106.90079498 12.68319130]
[107.12412262 -2.31514645]
[97.78468323 -18.18512917]
[107.36537170 -32.88809586]
[107.36537170 -47.88809586]
[107.36537170 -62.88809586]
[97.06034088 -67.91009521]
[89.40811157 -76.37673187]
[85.48579407 -87.03916168]
[85.82409668 -98.34378052]
[90.33588409 -108.65855408]
[98.33425903 -116.50865936]
[108.63687134 -120.78731537]
[109.30665588 -135.77235413]
[109.97644043 -150.75738525]
[97.93698883 -163.44876099]
[98.78460693 -180.58341980]
[111.50698853 -191.58250427]
[111.95359802 -206.57585144]
[112.40019989 -221.56919861]
[102.71944427 -228.46989441]
[97.62398529 -239.07824707]
[98.27539825 -250.70880127]
[104.39635468 -260.47863770]
[114.36817169 -266.02200317]
[115.26098633 -280.99542236]
[116.15380859 -295.96881104]
[117.04662323 -310.94223022]
[117.93943787 -325.91561890]
[111.03725433 -340.15185547]
[119.51837921 -352.39602661]
[105.59817505 -358.39633179]
[94.57181549 -368.79803467]
[87.77079010 -382.34506226]
[86.01634979 -397.40155029]
[89.52036285 -412.14935303]
[97.85969543 -424.80761719]
[110.02732849 -433.84774780]
[124.55397034 -438.17819214]
[139.68545532 -437.27593994]
[153.59457397 -431.25000000]
[164.60174561 -420.82800293]
[171.37779236 -407.26846313]
[173.10447693 -392.20877075]
[169.57330322 -377.46743774]
[161.21066284 -364.82458496]
[149.02638245 -355.80685425]
[134.49179077 -351.50323486]
[141.45782471 -338.33798218]
[132.91284180 -325.02279663]
[132.02001953 -310.04940796]
[131.12721252 -295.07598877]
[130.23439026 -280.10260010]
[129.34158325 -265.12918091]
[142.29469299 -252.19348145]
[141.66824341 -233.57841492]
[127.39355469 -221.12258911]
[126.94694519 -206.12924194]
[126.50034332 -191.13589478]
[136.56152344 -183.08592224]
[140.20353699 -170.52336121]
[135.88151550 -157.97224426]
[124.96147919 -150.08760071]
[124.29169464 -135.10256958]
[123.62191010 -120.11753082]
[138.88609314 -109.33340454]
[144.61215210 -91.38511658]
[138.31379700 -73.47030640]
[122.36537170 -62.88809586]
[122.36537170 -47.88809586]
[122.36537170 -32.88809586]
[130.69433594 -24.11569405]
[130.81709290 -11.61894703]
[122.12245941 -2.09181857]
[121.89913177 12.90651894]
[130.54054260 0.64577127]
[143.84765625 -6.27672529]
[158.84761047 -6.31446743]
[172.18937683 0.54097629]
[180.89237976 12.75808239]
[183.01234436 27.60751915]
[178.07566833 41.77188110]
[167.18521118 52.08681870]
[152.77392578 56.24794388]
[138.06134033 53.32565308]
[126.33428192 43.97279358]
[120.21259308 30.27879524]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[97.21441650 157.62577820]
[103.91413116 168.64743042]
[101.38989258 180.88719177]
[91.52909088 187.89369202]
[88.64381409 202.61358643]
[85.75854492 217.33348083]
[82.87326813 232.05337524]
[87.81159973 247.08412170]
[77.77067566 258.08544922]
[74.88540649 272.80532837]
[72.00012970 287.52523804]
[80.54976654 300.54605103]
[77.41400146 315.43301392]
[64.94795990 323.50354004]
[62.06268692 338.22341919]
[59.17741394 352.94329834]
[56.29214096 367.66320801]
[62.82701492 378.78338623]
[60.12082672 390.98419189]
[50.15679550 397.84310913]
[47.05268478 412.51843262]
[53.16510773 429.88848877]
[40.93518448 442.47406006]
[38.04991150 457.19393921]
[35.16463852 471.91381836]
[47.02708817 462.73327637]
[62.01625824 462.16339111]
[74.54155731 470.41668701]
[79.93136597 484.41488647]
[76.17540741 498.93704224]
[64.67457581 508.56671143]
[49.71837997 509.71231079]
[36.88512421 501.94650269]
[30.96118164 488.16461182]
[26.34717178 502.43734741]
[21.73316193 516.71008301]
[17.11915398 530.98284912]
[30.61410141 537.59094238]
[43.03121185 546.05236816]
[54.11768723 556.19494629]
[63.64781570 567.81201172]
[71.42758942 580.66723633]
[77.29860687 594.49877930]
[81.14134979 609.02508545]
[82.87758636 623.95043945]
[82.47196198 638.97100830]
[79.93274689 653.78088379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 200]
[33 199]
[34 198]
[35 197]
[36 188]
[37 187]
[38 186]
[41 184]
[42 183]
[44 180]
[45 179]
[46 178]
[47 177]
[50 174]
[51 173]
[52 172]
[54 170]
[55 169]
[56 168]
[57 167]
[59 164]
[60 163]
[61 162]
[62 161]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 143]
[70 142]
[72 139]
[73 138]
[74 137]
[81 133]
[82 132]
[83 131]
[86 127]
[87 126]
[88 125]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
