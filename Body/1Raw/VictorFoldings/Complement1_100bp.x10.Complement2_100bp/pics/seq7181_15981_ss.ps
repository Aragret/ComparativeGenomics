%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[62.35607529 645.49554443]
[49.77945709 653.69506836]
[36.42639923 660.55804443]
[22.43844986 666.01159668]
[7.96389294 669.99798584]
[-6.84383392 672.47491455]
[-21.82776260 673.41613770]
[-36.82905197 672.81170654]
[-51.68868256 670.66802979]
[-66.24913025 667.00781250]
[-80.35604858 661.86981201]
[-93.85990143 655.30859375]
[-106.61753082 647.39361572]
[-118.49370575 638.20880127]
[-129.36253357 627.85156250]
[-139.10879517 616.43164062]
[-147.62916565 604.07012939]
[-154.83334351 590.89801025]
[-160.64494324 577.05499268]
[-165.00236511 562.68774414]
[-167.85942078 547.94866943]
[-169.18582153 532.99389648]
[-168.96749878 517.98205566]
[-167.20678711 503.07217407]
[-163.92233276 488.42239380]
[-159.14895630 474.18795776]
[-152.93725586 460.51977539]
[-145.35308838 447.56277466]
[-136.47685242 435.45422363]
[-126.40263367 424.32257080]
[-115.23722076 414.28576660]
[-103.09897614 405.45019531]
[-90.11656952 397.90954590]
[-76.42763519 391.74377441]
[-62.17726898 387.01818848]
[-47.51653671 383.78289795]
[-32.60085297 382.07223511]
[-17.58833122 381.90429688]
[-2.63811183 383.28088379]
[12.09132481 386.18737793]
[16.49232292 371.84753418]
[20.89332008 357.50769043]
[25.29431915 343.16781616]
[29.69531631 328.82797241]
[34.09631348 314.48812866]
[38.49731445 300.14828491]
[42.89831161 285.80844116]
[47.29930878 271.46859741]
[51.48632050 257.06481934]
[55.45841599 242.60028076]
[59.43051147 228.13575745]
[63.40260696 213.67123413]
[67.37470245 199.20671082]
[55.71697617 185.94139099]
[54.34380341 168.17723083]
[63.99322510 153.01252747]
[80.96086121 146.62057495]
[84.50053406 132.04420471]
[88.04020691 117.46782684]
[80.20503235 107.50472260]
[79.46580505 94.85137177]
[86.08751678 84.04367065]
[97.69647217 78.95587158]
[96.81579590 69.86399078]
[101.61831665 64.24638367]
[105.59041595 49.78185654]
[104.84519196 40.67787552]
[109.73081970 35.13238907]
[113.91783142 20.72860718]
[118.10484314 6.32482481]
[122.29185486 -8.07895756]
[126.47886658 -22.48273849]
[130.66587830 -36.88652039]
[134.85289001 -51.29030228]
[120.80014038 -56.55695343]
[107.18595123 -62.87132263]
[94.08830261 -70.19723511]
[81.58221436 -78.49272919]
[69.73933411 -87.71028900]
[58.62747955 -97.79711914]
[48.31031036 -108.69544220]
[38.84692383 -120.34282684]
[30.29151917 -132.67257690]
[22.69310760 -145.61402893]
[16.09520912 -159.09309387]
[10.53561687 -173.03254700]
[6.04617786 -187.35253906]
[2.65260577 -201.97106934]
[0.37433943 -216.80436707]
[-0.77557129 -231.76748657]
[-0.79053974 -246.77473450]
[0.32951975 -261.74011230]
[2.57819152 -276.57794189]
[5.94259548 -291.20318604]
[10.40345955 -305.53210449]
[15.93523312 -319.48263550]
[22.50622940 -332.97482300]
[30.07881165 -345.93142700]
[38.60960007 -358.27819824]
[48.04973602 -369.94445801]
[58.34514236 -380.86334229]
[69.43685150 -390.97232056]
[81.26132965 -400.21347046]
[93.75083923 -408.53390503]
[106.83384705 -415.88592529]
[120.43540955 -422.22744751]
[134.47763062 -427.52212524]
[148.88006592 -431.73962402]
[163.56021118 -434.85580444]
[178.43399048 -436.85281372]
[193.41619873 -437.71923828]
[208.42103577 -437.45004272]
[223.36253357 -436.04684448]
[238.15512085 -433.51763916]
[252.71405029 -429.87695312]
[266.95596313 -425.14556885]
[280.79922485 -419.35067749]
[294.16458130 -412.52539062]
[306.97549438 -404.70886230]
[319.15853882 -395.94583130]
[330.64395142 -386.28649902]
[341.36596680 -375.78622437]
[351.26312256 -364.50509644]
[360.27874756 -352.50778198]
[368.36123657 -339.86297607]
[375.46423340 -326.64309692]
[381.54708862 -312.92391968]
[386.57492065 -298.78396606]
[390.51901245 -284.30426025]
[393.35668945 -269.56774902]
[395.07171631 -254.65882874]
[395.65429688 -239.66290283]
[395.10110474 -224.66584778]
[393.41525269 -209.75360107]
[390.60644531 -195.01155090]
[386.69073486 -180.52415466]
[381.69058228 -166.37438965]
[375.63458252 -152.64331055]
[368.55749512 -139.40956116]
[360.49981689 -126.74895477]
[351.50769043 -114.73400116]
[341.63262939 -103.43352509]
[330.93121338 -92.91226196]
[319.46475220 -83.23046112]
[307.29885864 -74.44359589]
[294.50329590 -66.60198212]
[281.15133667 -59.75055313]
[267.31942749 -53.92854309]
[253.08682251 -49.16930389]
[238.53503418 -45.50009537]
[223.74743652 -42.94193268]
[208.80871582 -41.50947189]
[193.80444336 -41.21091461]
[178.82055664 -42.04797745]
[163.94288635 -44.01586151]
[149.25666809 -47.10329056]
[145.06965637 -32.69950867]
[140.88264465 -18.29572868]
[136.69563293 -3.89194608]
[132.50862122 10.51183605]
[128.32160950 24.91561890]
[124.13460541 39.31940079]
[120.05493927 53.75395203]
[116.08283997 68.21847534]
[112.21853638 82.71217346]
[120.91690063 96.73736572]
[116.90313721 112.74541473]
[102.61658478 121.00749969]
[99.07691193 135.58387756]
[95.53723907 150.16024780]
[104.81625366 158.53686523]
[109.62541199 169.99725342]
[109.10866547 182.34280396]
[103.42538452 193.23323059]
[93.70851135 200.63020325]
[81.83922577 203.17881775]
[77.86713409 217.64334106]
[73.89503479 232.10786438]
[69.92294312 246.57238770]
[65.95084381 261.03689575]
[67.25017548 267.51943970]
[65.36382294 272.88027954]
[61.63915634 275.86959839]
[57.23815918 290.20944214]
[52.83715820 304.54928589]
[48.43616104 318.88912964]
[44.03516388 333.22897339]
[39.63416672 347.56881714]
[35.23316956 361.90866089]
[30.83217049 376.24853516]
[26.43117142 390.58837891]
[40.25515747 396.44509888]
[53.40366745 403.69223022]
[65.73731995 412.25289917]
[77.12537384 422.03637695]
[87.44709778 432.93893433]
[96.59309387 444.84503174]
[104.46640015 457.62841797]
[110.98355103 471.15359497]
[116.07546234 485.27722168]
[119.68816376 499.84951782]
[121.78335571 514.71606445]
[122.33882904 529.71923828]
[121.34868622 544.70001221]
[118.82344055 559.49957275]
[114.78984070 573.96105957]
[109.29066467 587.93115234]
[102.38419342 601.26171875]
[94.14363861 613.81152344]
[84.65636444 625.44750977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 191]
[41 190]
[42 189]
[43 188]
[44 187]
[45 186]
[46 185]
[47 184]
[48 183]
[49 180]
[50 179]
[51 178]
[52 177]
[53 176]
[57 170]
[58 169]
[59 168]
[63 165]
[65 164]
[66 163]
[68 162]
[69 161]
[70 160]
[71 159]
[72 158]
[73 157]
[74 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
