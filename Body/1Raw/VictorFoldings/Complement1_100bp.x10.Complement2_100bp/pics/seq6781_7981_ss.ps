%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[164.95707703 623.50915527]
[154.12936401 613.06134033]
[145.47479248 600.75299072]
[139.30624390 587.02911377]
[135.84669495 572.38574219]
[135.22120667 557.35223389]
[137.45239258 542.47210693]
[142.45957947 528.28326416]
[150.06179810 515.29852295]
[159.98419189 503.98736572]
[171.86810303 494.75863647]
[185.28392029 487.94598389]
[199.74668884 483.79565430]
[198.40844727 468.85546875]
[197.07020569 453.91528320]
[195.73197937 438.97509766]
[194.39373779 424.03491211]
[193.05551147 409.09472656]
[189.84223938 394.44296265]
[187.37026978 393.12100220]
[185.27301025 390.74023438]
[183.95634460 387.43844604]
[183.76887512 383.49771118]
[184.95347595 379.32031250]
[180.76646423 364.91653442]
[176.57945251 350.51275635]
[172.39244080 336.10897827]
[168.20542908 321.70520020]
[163.37942505 307.50271606]
[157.92407227 293.52993774]
[155.41384888 292.28216553]
[153.24662781 289.96490479]
[151.83224487 286.70376587]
[151.52752686 282.77038574]
[152.58721924 278.55957031]
[147.97322083 264.28683472]
[143.35920715 250.01408386]
[138.74519348 235.74134827]
[128.12167358 229.95626831]
[124.16085052 218.10317993]
[129.50337219 206.36349487]
[125.10237885 192.02365112]
[113.97142029 182.12663269]
[117.31922913 166.66368103]
[112.38764191 152.49754333]
[106.93228149 138.52474976]
[101.47692108 124.55195618]
[96.02156830 110.57915497]
[90.92915344 124.68827820]
[78.58128357 133.20474243]
[63.58340836 132.95211792]
[51.52936935 124.02462006]
[46.91501999 109.75199890]
[51.46140289 95.45757294]
[63.47282410 86.47282410]
[78.46932220 86.14883423]
[90.85829926 94.60736847]
[87.10199738 80.08530426]
[83.34569550 65.56324768]
[72.39908600 54.14036179]
[76.70269012 39.88103867]
[71.52397919 32.35649490]
[73.00028992 25.11478996]
[62.22496033 13.53019142]
[66.74038696 -0.66347569]
[63.20071793 -15.23985100]
[52.42539215 -26.82444954]
[56.94081879 -41.01811600]
[53.83374023 -44.05127335]
[52.03443527 -47.56225586]
[51.53253174 -51.08127594]
[52.16615295 -54.19015884]
[53.65186691 -56.56729507]
[50.98607254 -71.32851410]
[48.32027817 -86.08972931]
[45.65447998 -100.85094452]
[42.98868561 -115.61216736]
[40.32289124 -130.37338257]
[37.65709686 -145.13459778]
[31.10107040 -131.64317322]
[18.73332977 -123.15559387]
[3.78677535 -121.89048767]
[-9.83160210 -128.17855835]
[-18.56199074 -140.37611389]
[-20.12228775 -155.29473877]
[-14.10463619 -169.03474426]
[-2.08203483 -178.00453186]
[12.80283737 -179.85942078]
[26.65910912 -174.11453247]
[35.86444092 -162.27239990]
[35.41783524 -177.26574707]
[27.27308083 -190.82943726]
[34.62801361 -203.78143311]
[34.18140793 -218.77478027]
[33.73480225 -233.76812744]
[33.28819656 -248.76147461]
[18.88817787 -253.49595642]
[6.97779417 -262.87243652]
[-1.00471759 -275.75869751]
[-4.09543085 -290.59860229]
[-1.92112744 -305.60021973]
[5.25563526 -318.95199585]
[16.56822777 -329.04165649]
[30.65060043 -334.65078735]
[45.80223846 -335.10211182]
[60.19350815 -330.34112549]
[72.08659363 -320.94268799]
[80.04534149 -308.04174805]
[83.10870361 -293.19616699]
[80.90675354 -278.19857788]
[73.70539856 -264.86004639]
[62.37422943 -254.79127502]
[48.28154373 -249.20808411]
[48.72814941 -234.21473694]
[49.17475510 -219.22138977]
[49.62136078 -204.22802734]
[57.73417282 -191.73677063]
[50.41118240 -177.71235657]
[50.85778809 -162.71899414]
[52.41831207 -147.80039978]
[55.08410645 -133.03918457]
[57.74990463 -118.27796173]
[60.41569901 -103.51674652]
[63.08149338 -88.75552368]
[65.74729156 -73.99430847]
[68.41308594 -59.23309326]
[71.51719666 -44.55778885]
[82.03933716 -34.01578903]
[77.77709198 -18.77952385]
[81.31676483 -4.20314789]
[91.83891296 6.33885098]
[87.57666016 21.57511711]
[91.22475433 36.12473679]
[101.90268707 46.50891113]
[97.86775208 61.80694580]
[101.62405396 76.32900238]
[105.38035583 90.85106659]
[109.99436188 105.12379456]
[115.44972229 119.09659576]
[120.90508270 133.06939697]
[126.36043549 147.04219055]
[134.68212891 134.56224060]
[149.61408997 133.13514709]
[160.14903259 143.81294250]
[158.52098083 158.72431946]
[145.93008423 166.87719727]
[131.65907288 162.26268005]
[143.10482788 173.18537903]
[139.44223022 187.62265015]
[143.84323120 201.96249390]
[157.61146545 214.19021606]
[153.01792908 231.12734985]
[157.63194275 245.40008545]
[162.24594116 259.67282104]
[166.85995483 273.94555664]
[171.89686584 288.07458496]
[177.35223389 302.04736328]
[184.35122681 288.78033447]
[198.64010620 284.21661377]
[212.03358459 290.97052002]
[216.85923767 305.17306519]
[210.35272217 318.68844604]
[196.24127197 323.77441406]
[182.60920715 317.51818848]
[186.79621887 331.92196655]
[190.98323059 346.32574463]
[195.17024231 360.72952271]
[199.35725403 375.13330078]
[203.97126770 389.40603638]
[206.24430847 374.57925415]
[213.15003967 361.26345825]
[223.95967102 350.86383057]
[237.53245544 344.47793579]
[252.43600464 342.77966309]
[267.09753418 345.94824219]
[279.96975708 353.64929199]
[289.69424438 365.07006836]
[295.24472046 379.00534058]
[296.03549194 393.98449707]
[291.98306274 408.42669678]
[283.51510620 420.80789185]
[271.52526855 429.82141113]
[257.27883911 434.51608276]
[242.27932739 434.39642334]
[228.10963440 429.47506714]
[216.26512146 420.27139282]
[207.99569702 407.75650024]
[209.33392334 422.69668579]
[210.67216492 437.63687134]
[212.01039124 452.57705688]
[213.34863281 467.51724243]
[214.68685913 482.45742798]
[229.65698242 483.97137451]
[244.06999207 488.29132080]
[257.40484619 495.26110840]
[269.17950439 504.62881470]
[278.96832275 516.05578613]
[286.41748047 529.12890625]
[291.25762939 543.37567139]
[293.31384277 558.28094482]
[292.51177979 573.30603027]
[288.88043213 587.90777588]
[282.55105591 601.55822754]
[273.75250244 613.76403809]
[262.80276489 624.08392334]
[250.09773254 632.14483643]
[236.09666443 637.65539551]
[221.30566406 640.41638184]
[206.25944519 640.32800293]
[191.50190735 637.39343262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[18 187]
[19 169]
[24 168]
[25 167]
[26 166]
[27 165]
[28 164]
[29 157]
[30 156]
[35 155]
[36 154]
[37 153]
[38 152]
[41 150]
[42 149]
[44 147]
[45 141]
[46 140]
[47 139]
[48 138]
[57 137]
[58 136]
[59 135]
[61 133]
[63 132]
[65 130]
[66 129]
[68 127]
[73 126]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[79 120]
[90 119]
[91 118]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
