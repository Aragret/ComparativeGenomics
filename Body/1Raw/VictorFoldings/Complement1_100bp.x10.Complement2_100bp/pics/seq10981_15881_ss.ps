%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[15.61567307 756.39868164]
[0.85993856 759.11175537]
[-14.01191330 761.09179688]
[-28.96348763 762.33392334]
[-43.95819473 762.83514404]
[-58.95934296 762.59417725]
[-73.93022156 761.61163330]
[-88.83419037 759.88995361]
[-103.63478088 757.43334961]
[-118.29576874 754.24774170]
[-132.78128052 750.34100342]
[-147.05586243 745.72271729]
[-161.08459473 740.40411377]
[-174.83312988 734.39831543]
[-188.26782227 727.71984863]
[-201.35581970 720.38525391]
[-214.06506348 712.41229248]
[-226.36447144 703.82061768]
[-238.22393799 694.63116455]
[-249.61444092 684.86651611]
[-260.50811768 674.55047607]
[-270.87826538 663.70831299]
[-280.69958496 652.36663818]
[-289.94796753 640.55310059]
[-298.60079956 628.29663086]
[-306.63693237 615.62725830]
[-314.03668213 602.57592773]
[-320.78195190 589.17468262]
[-326.85620117 575.45623779]
[-332.24459839 561.45416260]
[-336.93395996 547.20275879]
[-340.91278076 532.73687744]
[-344.17135620 518.09197998]
[-346.70169067 503.30380249]
[-348.49758911 488.40856934]
[-349.55465698 473.44277954]
[-349.87033081 458.44302368]
[-349.44381714 443.44601440]
[-348.27618408 428.48843384]
[-346.37026978 413.60690308]
[-343.73071289 398.83782959]
[-340.36401367 384.21737671]
[-336.27841187 369.78131104]
[-331.48385620 355.56494141]
[-325.99212646 341.60308838]
[-319.81668091 327.92990112]
[-312.97256470 314.57882690]
[-305.47656250 301.58258057]
[-297.34704590 288.97293091]
[-288.60385132 276.78076172]
[-279.26843262 265.03588867]
[-269.36358643 253.76704407]
[-258.91357422 243.00183105]
[-247.94398499 232.76657104]
[-236.48162842 223.08633423]
[-224.55458069 213.98480225]
[-212.19201660 205.48423767]
[-199.42419434 197.60545349]
[-186.28236389 190.36772156]
[-172.79867554 183.78875732]
[-159.00613403 177.88467407]
[-144.93849182 172.66990662]
[-130.63017273 168.15721130]
[-116.11618805 164.35763550]
[-101.43205261 161.28048706]
[-86.61371613 158.93328857]
[-71.69743347 157.32179260]
[-56.71970367 156.44993591]
[-41.71718597 156.31983948]
[-26.72659111 156.93183899]
[-11.78460312 158.28442383]
[3.07221055 160.37431335]
[17.80749321 163.19635010]
[32.38518524 166.74365234]
[46.76961136 171.00755310]
[60.92557526 175.97758484]
[66.58836365 162.08755493]
[72.25114441 148.19752502]
[77.91393280 134.30749512]
[83.57672119 120.41747284]
[89.23950958 106.52745056]
[94.59069061 92.51442719]
[99.62760925 78.38539886]
[104.66452789 64.25636292]
[109.70143890 50.12733841]
[114.73835754 35.99830627]
[119.77527618 21.86927795]
[106.22659302 15.40110207]
[93.41479492 7.57410097]
[81.47570038 -1.52875590]
[70.53586578 -11.81097317]
[60.71125412 -23.16355324]
[52.10601807 -35.46615219]
[44.81137848 -48.58835602]
[38.90465546 -62.39105988]
[34.44847107 -76.72795105]
[31.49006271 -91.44705200]
[30.06078720 -106.39232635]
[30.17579651 -121.40534210]
[31.83387566 -136.32696533]
[35.01744080 -150.99900818]
[39.69275284 -165.26594543]
[45.81024551 -178.97654724]
[53.30506897 -191.98544312]
[62.09777832 -204.15476990]
[72.09516144 -215.35549927]
[83.19124603 -225.46890259]
[95.26840210 -234.38777161]
[108.19860840 -242.01757812]
[121.84479523 -248.27742004]
[136.06230164 -253.10095215]
[150.70042419 -256.43704224]
[165.60398865 -258.25030518]
[180.61499023 -258.52154541]
[195.57434082 -257.24786377]
[210.32342529 -254.44279480]
[224.70591736 -250.13606262]
[238.56933594 -244.37329102]
[251.76673889 -237.21560669]
[264.15823364 -228.73886108]
[275.61242676 -219.03292847]
[286.00793457 -208.20068359]
[295.23455811 -196.35696411]
[303.19445801 -183.62731934]
[309.80328369 -170.14668274]
[314.99096680 -156.05796814]
[318.70251465 -141.51051331]
[320.89859009 -126.65853882]
[321.55587769 -111.65946960]
[320.66748047 -96.67231750]
[318.24276733 -81.85594940]
[314.30743408 -67.36743164]
[308.90322876 -53.36034012]
[302.08740234 -39.98316956]
[293.93225098 -27.37771988]
[284.52416992 -15.67761612]
[273.96295166 -5.00688791]
[262.36050415 4.52135086]
[249.83984375 12.80609512]
[236.53367615 19.75952148]
[222.58308411 25.30792046]
[208.13591003 29.39247513]
[193.34535217 31.96988678]
[178.36814880 33.01283646]
[163.36311340 32.51026154]
[148.48927307 30.46749687]
[133.90429688 26.90619469]
[128.86738586 41.03522491]
[123.83046722 55.16425323]
[118.79355621 69.29328156]
[113.75663757 83.42230988]
[108.71971893 97.55133820]
[109.86215210 101.23471069]
[109.37546539 105.40376282]
[107.07914734 109.31962585]
[103.12953186 112.19023132]
[97.46674347 126.08026123]
[91.80396271 139.97029114]
[86.14117432 153.86032104]
[80.47838593 167.75033569]
[74.81559753 181.64036560]
[88.41140747 187.98437500]
[101.67684937 194.99298096]
[114.57946014 202.64904785]
[127.08765411 210.93382263]
[139.17083740 219.82704163]
[150.79942322 229.30693054]
[161.94497681 239.35029602]
[172.58020020 249.93257141]
[182.67907715 261.02783203]
[192.21688843 272.60897827]
[201.17030334 284.64761353]
[209.51741028 297.11428833]
[217.23777771 309.97854614]
[224.31251526 323.20883179]
[230.72430420 336.77279663]
[236.45745850 350.63726807]
[241.49795532 364.76828003]
[245.83343506 379.13131714]
[249.45330811 393.69113159]
[252.34872437 408.41220093]
[254.51257324 423.25839233]
[255.93959045 438.19348145]
[256.62625122 453.18081665]
[256.57089233 468.18380737]
[255.77365112 483.16571045]
[254.23646545 498.08981323]
[251.96311951 512.91967773]
[248.95915222 527.61895752]
[245.23191833 542.15167236]
[240.79055786 556.48229980]
[235.64593506 570.57574463]
[229.81062317 584.39752197]
[223.29890442 597.91381836]
[216.12672424 611.09155273]
[208.31164551 623.89843750]
[199.87277222 636.30322266]
[190.83074951 648.27545166]
[181.20773315 659.78588867]
[171.02725220 670.80633545]
[160.31422424 681.30981445]
[149.09486389 691.27069092]
[137.39663696 700.66448975]
[125.24815369 709.46832275]
[112.67916107 717.66052246]
[99.72040558 725.22119141]
[86.40361023 732.13171387]
[72.76135254 738.37518311]
[58.82702637 743.93640137]
[44.63472366 748.80169678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 161]
[77 160]
[78 159]
[79 158]
[80 157]
[81 156]
[82 152]
[83 151]
[84 150]
[85 149]
[86 148]
[87 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
