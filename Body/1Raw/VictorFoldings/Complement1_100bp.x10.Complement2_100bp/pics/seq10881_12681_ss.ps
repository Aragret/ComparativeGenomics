%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[58.01050568 212.44354248]
[65.31984711 225.56713867]
[70.85362244 239.53253174]
[74.51715851 254.10076904]
[76.24774933 269.02255249]
[76.01579285 284.04260254]
[73.82524872 298.90383911]
[69.71361542 313.35198975]
[63.75123215 327.13986206]
[56.04013443 340.03149414]
[46.71226120 351.80627441]
[35.92723083 362.26275635]
[23.86958694 371.22201538]
[10.74565125 378.53073120]
[-3.22000813 384.06384277]
[-17.78841972 387.72668457]
[-32.71030045 389.45657349]
[-47.73031616 389.22390747]
[-62.59145737 387.03265381]
[-77.03942871 382.92031860]
[-90.82699585 376.95730591]
[-103.71825409 369.24557495]
[-115.49260712 359.91714478]
[-125.94858551 349.13162231]
[-134.90725708 337.07354736]
[-142.21534729 323.94924927]
[-147.74780273 309.98333740]
[-151.40994263 295.41476440]
[-153.13911438 280.49279785]
[-152.90573120 265.47277832]
[-150.71377563 250.61175537]
[-146.60076904 236.16397095]
[-140.63706970 222.37669373]
[-132.92474365 209.48579407]
[-123.59575653 197.71188354]
[-112.80973053 187.25642395]
[-100.75122833 178.29832458]
[-87.62659454 170.99085999]
[-73.66041565 165.45907593]
[-59.09165192 161.79762268]
[-44.16960526 160.06915283]
[-29.14961243 160.30326843]
[-14.28868198 162.49592590]
[0.15889545 166.60961914]
[13.94590187 172.57397461]
[26.83642387 180.28691101]
[36.15130615 168.52966309]
[45.46619034 156.77241516]
[54.78107452 145.01515198]
[64.09595490 133.25790405]
[65.93486786 118.47725677]
[80.56929016 112.46525574]
[89.88417053 100.70800018]
[92.02349091 92.93652344]
[99.42631531 88.84640503]
[108.91521454 77.22914124]
[118.40411377 65.61187744]
[127.89300537 53.99461365]
[137.38191223 42.37734985]
[146.87080383 30.76008797]
[148.30767822 24.30664635]
[152.20320129 20.16877365]
[156.81929016 18.94370461]
[166.64987183 7.61411238]
[176.48045349 -3.71548080]
[186.31103516 -15.04507351]
[196.14161682 -26.37466621]
[185.31379700 -36.75987244]
[175.01710510 -47.67189407]
[165.27714539 -59.08359528]
[156.11810303 -70.96661377]
[147.56277466 -83.29139709]
[139.63243103 -96.02731323]
[132.34677124 -109.14269257]
[125.72391510 -122.60492706]
[119.78033447 -136.38055420]
[114.53079224 -150.43530273]
[109.98835754 -164.73426819]
[106.16431427 -179.24188232]
[103.06816864 -193.92205811]
[100.70761871 -208.73832703]
[99.08853149 -223.65383911]
[98.21494293 -238.63151550]
[98.08901215 -253.63412476]
[98.71105957 -268.62435913]
[100.07952881 -283.56494141]
[102.19103241 -298.41876221]
[105.04031372 -313.14883423]
[108.62028503 -327.71859741]
[112.92205811 -342.09179688]
[117.93492126 -356.23269653]
[123.64642334 -370.10614014]
[130.04235840 -383.67767334]
[137.10682678 -396.91348267]
[144.82226562 -409.78073120]
[153.16950989 -422.24740601]
[162.12777710 -434.28250122]
[171.67480469 -445.85607910]
[181.78686523 -456.93942261]
[192.43882751 -467.50491333]
[203.60417175 -477.52633667]
[215.25518799 -486.97872925]
[227.36286926 -495.83865356]
[239.89714050 -504.08401489]
[252.82682800 -511.69436646]
[266.11978149 -518.65075684]
[279.74295044 -524.93585205]
[293.66250610 -530.53411865]
[307.84378052 -535.43157959]
[322.25155640 -539.61608887]
[336.84997559 -543.07727051]
[351.60281372 -545.80639648]
[366.47332764 -547.79681396]
[381.42456055 -549.04351807]
[396.41937256 -549.54333496]
[411.42044067 -549.29516602]
[426.39050293 -548.29956055]
[441.29232788 -546.55902100]
[456.08886719 -544.07781982]
[470.74334717 -540.86212158]
[485.21929932 -536.92004395]
[499.48077393 -532.26123047]
[513.49230957 -526.89733887]
[527.21905518 -520.84167480]
[540.62683105 -514.10937500]
[553.68243408 -506.71707153]
[566.35333252 -498.68319702]
[578.60797119 -490.02774048]
[590.41595459 -480.77218628]
[601.74792480 -470.93954468]
[612.57568359 -460.55426025]
[622.87231445 -449.64221191]
[632.61218262 -438.23043823]
[641.77117920 -426.34738159]
[650.32641602 -414.02255249]
[658.25671387 -401.28659058]
[665.54229736 -388.17117310]
[672.16510010 -374.70892334]
[678.10864258 -360.93325806]
[683.35809326 -346.87847900]
[687.90045166 -332.57949829]
[691.72442627 -318.07186890]
[694.82049561 -303.39166260]
[697.18096924 -288.57537842]
[698.79998779 -273.65985107]
[699.67346191 -258.68218994]
[699.79931641 -243.67956543]
[699.17718506 -228.68934631]
[697.80865479 -213.74876404]
[695.69708252 -198.89497375]
[692.84771729 -184.16488647]
[689.26763916 -169.59515381]
[684.96582031 -155.22198486]
[679.95288086 -141.08110046]
[674.24133301 -127.20767975]
[667.84527588 -113.63619995]
[660.78076172 -100.40040588]
[653.06524658 -87.53320312]
[644.71795654 -75.06658173]
[635.75964355 -63.03153992]
[626.21252441 -51.45799255]
[616.10040283 -40.37471771]
[605.44842529 -29.80926895]
[594.28302002 -19.78791237]
[582.63195801 -10.33556461]
[570.52423096 -1.47572410]
[557.98992920 6.76958084]
[545.06018066 14.37985134]
[531.76721191 21.33616638]
[518.14398193 27.62123299]
[504.22439575 33.21942520]
[490.04309082 38.11682129]
[475.63531494 42.30125046]
[461.03683472 45.76231003]
[446.28402710 48.49139023]
[431.41348267 50.48170853]
[416.46221924 51.72831726]
[401.46743774 52.22811890]
[386.46633911 51.97986603]
[371.49630737 50.98417664]
[356.59448242 49.24353027]
[341.79794312 46.76225281]
[327.14349365 43.54651260]
[312.66754150 39.60430527]
[298.40609741 34.94543076]
[284.39462280 29.58146858]
[270.66790771 23.52576065]
[257.26013184 16.79335976]
[244.20458984 9.40100288]
[231.53376770 1.36706960]
[219.27914429 -7.28846645]
[207.47120667 -16.54408646]
[197.64062500 -5.21449280]
[187.81004333 6.11509991]
[177.97946167 17.44469261]
[168.14888000 28.77428627]
[158.48806763 40.24898529]
[148.99917603 51.86624908]
[139.51026917 63.48351288]
[130.02137756 75.10077667]
[120.53247833 86.71804047]
[111.04357910 98.33530426]
[101.64142609 110.02288055]
[92.32654572 121.78013611]
[89.82136536 137.40174866]
[75.85321045 142.57278442]
[66.53832245 154.33004761]
[57.22344208 166.08729553]
[47.90855789 177.84454346]
[38.59367752 189.60179138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 210]
[47 209]
[48 208]
[49 207]
[50 206]
[52 204]
[53 203]
[55 202]
[56 201]
[57 200]
[58 199]
[59 198]
[60 197]
[63 196]
[64 195]
[65 194]
[66 193]
[67 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
