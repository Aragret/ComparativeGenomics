%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[255.08573914 568.84326172]
[254.76486206 553.83447266]
[255.91667175 538.86651611]
[258.53009033 524.08355713]
[262.57989502 509.62789917]
[268.02713013 495.63879395]
[274.81933594 482.25100708]
[282.89108276 469.59347534]
[292.16461182 457.78802490]
[302.55065918 446.94842529]
[313.94915771 437.17904663]
[305.35061646 424.88821411]
[296.75204468 412.59738159]
[288.15347290 400.30651855]
[274.51785278 394.31326294]
[272.94692993 378.57022095]
[268.48336792 376.87158203]
[265.03945923 372.35089111]
[264.28176880 365.78298950]
[256.05294800 353.24157715]
[247.82414246 340.70016479]
[239.59533691 328.15878296]
[231.36653137 315.61737061]
[217.16799927 320.34509277]
[202.21804810 321.23699951]
[187.53538513 318.22634888]
[174.12210083 311.51248169]
[162.89521790 301.54766846]
[154.62402344 289.00668335]
[149.87734985 274.74108887]
[148.98446655 259.72146606]
[152.01220703 244.97125244]
[158.76010132 231.49714661]
[168.77352905 220.22032166]
[160.54470825 207.67892456]
[152.31590271 195.13752747]
[144.08709717 182.59613037]
[135.85829163 170.05471802]
[124.08207703 167.28933716]
[117.12388611 156.90823364]
[119.16694641 144.17289734]
[111.12577057 131.51037598]
[103.08460236 118.84785461]
[88.96633148 115.58892059]
[81.19881439 103.35732269]
[84.25287628 89.19332123]
[76.21170044 76.53079987]
[68.17053223 63.86827087]
[60.12935638 51.20574570]
[52.08818436 38.54322052]
[38.15862656 31.04135132]
[37.86739731 16.14959335]
[23.93784332 8.64772320]
[23.64661407 -6.24403477]
[17.88085365 7.60356474]
[3.50223279 11.87618256]
[-8.88986397 3.42420483]
[-10.16044521 -11.52188587]
[0.62711579 -21.94438744]
[15.51923180 -20.16110039]
[8.44212723 -33.38662720]
[1.26676047 -46.55910492]
[-6.00646877 -59.67779922]
[-13.27969837 -72.79649353]
[-27.22473145 -67.21623230]
[-41.75920868 -63.42779922]
[-56.65390015 -61.49094009]
[-71.67389679 -61.43620682]
[-86.58230591 -63.26445770]
[-101.14400482 -66.94686127]
[-115.12933350 -72.42533875]
[-128.31773376 -79.61349487]
[-140.50119019 -88.39794922]
[-151.48754883 -98.64016724]
[-161.10356140 -110.17860413]
[-169.19754028 -122.83129883]
[-175.64186096 -136.39868164]
[-180.33486938 -150.66679382]
[-183.20256042 -165.41059875]
[-184.19969177 -180.39755249]
[-183.31054688 -195.39131165]
[-180.54914856 -210.15538025]
[-175.95904541 -224.45692444]
[-169.61264038 -238.07038879]
[-161.61001587 -250.78106689]
[-152.07737732 -262.38848877]
[-141.16508484 -272.70956421]
[-129.04522705 -281.58157349]
[-115.90895081 -288.86453247]
[-101.96344757 -294.44363403]
[-87.42865753 -298.23083496]
[-72.53379822 -300.16644287]
[-57.51380157 -300.21990967]
[-42.60554504 -298.39041138]
[-28.04415321 -294.70678711]
[-14.05928326 -289.22711182]
[-0.87149537 -282.03784180]
[11.31122017 -273.25238037]
[22.29672432 -263.00924683]
[31.91176033 -251.46998596]
[40.00468445 -238.81660461]
[46.44785690 -225.24868774]
[51.13966370 -210.98017883]
[54.00611115 -196.23612976]
[55.00198364 -181.24909973]
[54.11157608 -166.25541687]
[51.34893799 -151.49157715]
[46.75763321 -137.19041443]
[40.41007614 -123.57748413]
[32.40637589 -110.86748505]
[22.87276459 -99.26087189]
[11.95959854 -88.94069672]
[-0.16100439 -80.06972504]
[7.11222506 -66.95102692]
[14.38545418 -53.83233261]
[20.37797928 -49.50666046]
[21.66765404 -40.46373367]
[28.74476051 -27.23820686]
[36.30913925 -14.28520775]
[49.66353607 -7.68904591]
[50.52992249 8.10842037]
[63.88431931 14.70458221]
[64.75070953 30.50204849]
[72.79187775 43.16457367]
[80.83305359 55.82709885]
[88.87422943 68.48962402]
[96.91539764 81.15214539]
[111.03366852 84.41107941]
[118.80118561 96.64267731]
[115.74712372 110.80667877]
[123.78829956 123.46920013]
[131.82946777 136.13172913]
[148.34419250 144.27702332]
[148.39968872 161.82591248]
[156.62849426 174.36730957]
[164.85729980 186.90872192]
[173.08612061 199.45011902]
[181.31492615 211.99151611]
[195.64598083 207.29515076]
[210.69268799 206.46914673]
[225.42900085 209.56378174]
[238.85165405 216.36224365]
[250.04837036 226.39575195]
[258.25991821 238.97586060]
[262.93157959 253.24177551]
[263.75061035 268.21914673]
[260.66717529 282.88668823]
[253.89733887 296.24581909]
[243.90792847 307.38858032]
[252.13673401 319.92996216]
[260.36553955 332.47137451]
[268.59436035 345.01275635]
[276.82315063 357.55416870]
[285.23779297 369.97167969]
[299.48843384 376.84405518]
[300.44430542 391.70797729]
[309.04287720 403.99880981]
[317.64144897 416.28964233]
[326.23999023 428.58047485]
[339.32482910 421.22152710]
[353.06796265 415.18057251]
[367.33703613 410.51580811]
[381.99462891 407.27209473]
[396.89959717 405.48074341]
[411.90838623 405.15896606]
[426.87640381 406.30990601]
[441.65957642 408.92242432]
[456.11544800 412.97137451]
[470.10485840 418.41775513]
[483.49304199 425.20916748]
[496.15109253 433.28015137]
[507.95709229 442.55297852]
[518.79730225 452.93835449]
[528.56738281 464.33627319]
[537.17321777 476.63696289]
[544.53186035 489.72195435]
[550.57257080 503.46517944]
[555.23706055 517.73437500]
[558.48046875 532.39202881]
[560.27148438 547.29699707]
[560.59295654 562.30578613]
[559.44177246 577.27380371]
[556.82897949 592.05694580]
[552.77972412 606.51275635]
[547.33300781 620.50201416]
[540.54138184 633.89007568]
[532.47015381 646.54797363]
[523.19708252 658.35375977]
[512.81146240 669.19378662]
[501.41333008 678.96362305]
[489.11248779 687.56921387]
[476.02737427 694.92761230]
[462.28399658 700.96801758]
[448.01473999 705.63226318]
[433.35699463 708.87536621]
[418.45196533 710.66607666]
[403.44317627 710.98724365]
[388.47518921 709.83575439]
[373.69213867 707.22265625]
[359.23641968 703.17309570]
[345.24722290 697.72613525]
[331.85931396 690.93420410]
[319.20159912 682.86273193]
[307.39596558 673.58941650]
[296.55615234 663.20361328]
[286.78656006 651.80529785]
[278.18121338 639.50427246]
[270.82305908 626.41900635]
[264.78292847 612.67553711]
[260.11901855 598.40612793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 159]
[12 158]
[13 157]
[14 156]
[16 154]
[19 153]
[20 152]
[21 151]
[22 150]
[23 149]
[34 138]
[35 137]
[36 136]
[37 135]
[38 134]
[41 132]
[42 131]
[43 130]
[46 127]
[47 126]
[48 125]
[49 124]
[50 123]
[52 121]
[54 119]
[60 118]
[61 117]
[62 115]
[63 114]
[64 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
