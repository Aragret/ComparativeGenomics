%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[246.19036865 366.21871948]
[251.46818542 352.16198730]
[258.23489380 338.75830078]
[266.41116333 326.16479492]
[275.90109253 314.52914429]
[286.59347534 303.98779297]
[277.27859497 292.23052979]
[267.96371460 280.47329712]
[258.64883423 268.71603394]
[249.33395386 256.95877075]
[238.76690674 246.31277466]
[227.07931519 236.91062927]
[215.39173889 227.50846863]
[203.70416260 218.10632324]
[192.01657104 208.70417786]
[180.32899475 199.30201721]
[168.64141846 189.89987183]
[156.95382690 180.49772644]
[162.45719910 194.45167542]
[162.62106323 209.45077515]
[157.42385864 223.52163696]
[147.54939270 234.81300354]
[134.29678345 241.83927917]
[119.40966797 243.67604065]
[104.84668732 240.08164978]
[92.52386475 231.52899170]
[84.06246185 219.14331055]
[80.57574463 204.55418396]
[82.52243042 189.68104553]
[89.64640808 176.48069763]
[101.01039886 166.68989563]
[115.11926270 161.59678650]
[130.11674500 161.87144470]
[144.03167725 167.47901917]
[134.71679688 155.72175598]
[125.40191650 143.96450806]
[116.08703613 132.20726013]
[106.77215576 120.45000458]
[97.45726776 108.69275665]
[93.72803497 107.71031952]
[90.44995117 105.08886719]
[88.34530640 101.06673431]
[88.00306702 96.19613647]
[79.22246552 84.03468323]
[64.87108612 77.37521362]
[63.69399643 62.52719498]
[63.60902786 77.52695465]
[56.12104034 90.52426147]
[43.18737793 98.12165833]
[28.18887138 98.33319855]
[15.04609013 91.10358429]
[7.19452763 78.32262421]
[6.68656397 63.33122253]
[13.65497875 50.04810715]
[26.27824593 41.94544601]
[41.25667191 41.14125443]
[54.67427063 47.84516144]
[47.79485703 34.51573181]
[40.91544342 21.18630219]
[27.71071815 12.47161293]
[28.74922752 -2.38674355]
[21.86981583 -15.71617317]
[14.99040318 -29.04560280]
[8.11099052 -42.37503052]
[1.23157811 -55.70446014]
[-12.87341690 -50.54187012]
[-27.51424599 -47.18786240]
[-42.46000290 -45.69533157]
[-57.47496796 -46.08782578]
[-72.32233429 -48.35914612]
[-86.76794434 -52.47347260]
[-100.58395386 -58.36591721]
[-113.55248260 -65.94355011]
[-125.46899414 -75.08686066]
[-136.14553833 -85.65164185]
[-145.41374207 -97.47126770]
[-153.12742615 -110.35933685]
[-159.16493225 -124.11258698]
[-163.43104553 -138.51409912]
[-165.85847473 -153.33674622]
[-166.40895081 -168.34674072]
[-165.07379150 -183.30737305]
[-161.87403870 -197.98269653]
[-156.86015320 -212.14123535]
[-150.11123657 -225.55970764]
[-141.73370361 -238.02647400]
[-131.85971069 -249.34490967]
[-120.64495087 -259.33654785]
[-108.26631165 -267.84375000]
[-94.91902924 -274.73236084]
[-80.81359863 -279.89376831]
[-66.17248535 -283.24655151]
[-51.22660446 -284.73782349]
[-36.21167374 -284.34405518]
[-21.36449623 -282.07150269]
[-6.91923523 -277.95596313]
[6.89628553 -272.06234741]
[19.86417580 -264.48361206]
[31.77991486 -255.33930969]
[42.45557022 -244.77363586]
[51.72277832 -232.95321655]
[59.43537521 -220.06449890]
[65.47172546 -206.31074524]
[69.73662567 -191.90887451]
[72.16281128 -177.08602905]
[72.71202850 -162.07597351]
[71.37559509 -147.11546326]
[68.17460632 -132.44041443]
[63.15953827 -118.28229523]
[56.40948868 -104.86439514]
[48.03091431 -92.39833069]
[38.15595627 -81.08071899]
[26.94035912 -71.09004211]
[14.56100750 -62.58387375]
[21.44042015 -49.25444412]
[28.31983185 -35.92501450]
[35.19924545 -22.59558487]
[42.07865906 -9.26615620]
[54.79132080 -1.50487685]
[54.24487305 14.30688953]
[61.12428665 27.63631821]
[68.00370026 40.96574783]
[75.85545349 53.74658966]
[89.57878113 59.53619003]
[91.38391876 75.25408173]
[100.16452026 87.41553497]
[109.21452332 99.37787628]
[118.52940369 111.13512421]
[127.84428406 122.89237213]
[137.15916443 134.64962769]
[146.47404480 146.40687561]
[155.78894043 158.16412354]
[166.35598755 168.81013489]
[178.04356384 178.21229553]
[189.73114014 187.61444092]
[201.41873169 197.01658630]
[213.10630798 206.41874695]
[224.79388428 215.82089233]
[236.48147583 225.22303772]
[248.16905212 234.62519836]
[242.66567993 220.67123413]
[242.50181580 205.67213440]
[247.69902039 191.60127258]
[257.57348633 180.30992126]
[270.82611084 173.28364563]
[285.71322632 171.44686890]
[300.27618408 175.04127502]
[312.59902954 183.59393311]
[321.06042480 195.97959900]
[324.54714966 210.56872559]
[322.60046387 225.44187927]
[315.47647095 238.64221191]
[304.11248779 248.43301392]
[290.00363159 253.52612305]
[275.00613403 253.25146484]
[261.09118652 247.64390564]
[270.40606689 259.40115356]
[279.72097778 271.15841675]
[289.03585815 282.91564941]
[298.35073853 294.67291260]
[311.05838013 286.67520142]
[324.55624390 280.09835815]
[338.68606567 275.01947021]
[353.28219604 271.49807739]
[368.17349243 269.57550049]
[383.18536377 269.27423096]
[398.14181519 270.59780884]
[412.86749268 273.53076172]
[427.18969727 278.03866577]
[440.94058228 284.06866455]
[453.95886230 291.55007935]
[466.09191895 300.39517212]
[477.19754028 310.50024414]
[487.14547729 321.74685669]
[495.81909180 334.00308228]
[503.11669922 347.12530518]
[508.95275879 360.95959473]
[513.25885010 375.34378052]
[515.98443604 390.10922241]
[517.09759521 405.08279419]
[516.58526611 420.08895874]
[514.45349121 434.95175171]
[510.72720337 449.49691772]
[505.45013428 463.55395508]
[498.68414307 476.95800781]
[490.50857544 489.55194092]
[481.01925659 501.18807983]
[470.32742310 511.73001099]
[458.55850220 521.05413818]
[445.85043335 529.05114746]
[432.35220337 535.62731934]
[418.22210693 540.70544434]
[403.62579346 544.22601318]
[388.73437500 546.14782715]
[373.72250366 546.44830322]
[358.76611328 545.12390137]
[344.04061890 542.19012451]
[329.71862793 537.68145752]
[315.96807861 531.65075684]
[302.95019531 524.16864014]
[290.81762695 515.32287598]
[279.71255493 505.21719360]
[269.76522827 493.97006226]
[261.09225464 481.71334839]
[253.79534912 468.59075928]
[247.96003723 454.75616455]
[243.65473938 440.37173462]
[240.92994690 425.60614014]
[239.81758118 410.63250732]
[240.33070374 395.62637329]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 160]
[7 159]
[8 158]
[9 157]
[10 156]
[11 140]
[12 139]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[34 132]
[35 131]
[36 130]
[37 129]
[38 128]
[39 127]
[43 126]
[44 125]
[46 123]
[57 122]
[58 121]
[59 120]
[61 118]
[62 117]
[63 116]
[64 115]
[65 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
