%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[65.50231934 493.91397095]
[54.09953308 484.09243774]
[44.83217239 472.23486328]
[38.05645370 458.79702759]
[34.03281403 444.29541016]
[32.91591644 429.28744507]
[34.74868774 414.35000610]
[39.46068573 400.05725098]
[46.87078476 386.95849609]
[56.69417191 375.55731201]
[68.55325317 366.29187012]
[81.99220276 359.51831055]
[96.49446106 355.49703979]
[95.37880707 340.53857422]
[94.26316071 325.58013916]
[93.14751434 310.62167358]
[90.17742920 306.88165283]
[89.52527618 301.23617554]
[92.22811127 295.20239258]
[91.55832672 280.21737671]
[80.42739868 270.38690186]
[79.53467560 255.19947815]
[89.92124176 243.59098816]
[89.25145721 228.60595703]
[88.58167267 213.62091064]
[87.91188049 198.63587952]
[87.24209595 183.65083313]
[77.88107300 195.37138367]
[63.44970703 199.46231079]
[49.33054352 194.39779663]
[40.78968048 182.06680298]
[41.01265335 167.06845093]
[49.91629410 154.99678040]
[64.17976379 150.35421753]
[78.48314667 154.87232971]
[87.49201202 166.86706543]
[88.60765839 151.90861511]
[89.72331238 136.95016479]
[90.83895874 121.99170685]
[91.95460510 107.03325653]
[91.39639282 92.04364777]
[89.17127991 77.20960236]
[86.94615936 62.37555695]
[84.72104645 47.54151535]
[82.27531433 32.74224472]
[79.60951996 17.98102570]
[76.72425079 3.26113462]
[73.62014008 -11.41416740]
[70.51602936 -26.08946991]
[67.41191864 -40.76477432]
[64.30780792 -55.44007492]
[61.20369720 -70.11537933]
[50.77806473 -82.01566315]
[55.71409225 -96.06859589]
[52.60998154 -110.74389648]
[49.50587082 -125.41919708]
[34.63648224 -123.39344788]
[19.65888786 -122.45850372]
[4.65300512 -122.61935425]
[-10.30110550 -123.87513733]
[-25.12365532 -126.21916199]
[-39.73555756 -129.63891602]
[-54.05885315 -134.11614990]
[-68.01712036 -139.62696838]
[-81.53588104 -146.14199829]
[-94.54300690 -153.62644958]
[-106.96910858 -162.04039001]
[-118.74787140 -171.33894348]
[-129.81645203 -181.47248840]
[-140.11581421 -192.38696289]
[-149.59098816 -204.02412415]
[-158.19140625 -216.32189941]
[-165.87121582 -229.21464539]
[-172.58941650 -242.63359070]
[-178.31016541 -256.50714111]
[-183.00292969 -270.76129150]
[-186.64270020 -285.31994629]
[-189.21005249 -300.10543823]
[-190.69125366 -315.03890991]
[-191.07844543 -330.04064941]
[-190.36952209 -345.03063965]
[-188.56829834 -359.92889404]
[-185.68437195 -374.65594482]
[-181.73312378 -389.13314819]
[-176.73564148 -403.28332520]
[-170.71859741 -417.03097534]
[-163.71408081 -430.30270386]
[-155.75946045 -443.02774048]
[-146.89720154 -455.13818359]
[-137.17457581 -466.56942749]
[-126.64344788 -477.26043701]
[-115.36001587 -487.15420532]
[-103.38449097 -496.19793701]
[-90.78075409 -504.34338379]
[-77.61606598 -511.54708862]
[-63.96065140 -517.77056885]
[-49.88737869 -522.98071289]
[-35.47133255 -527.14965820]
[-20.78943062 -530.25512695]
[-5.92000818 -532.28063965]
[9.05760002 -533.21533203]
[24.06348038 -533.05426025]
[39.01757050 -531.79821777]
[53.84008026 -529.45397949]
[68.45192719 -526.03399658]
[82.77514648 -521.55651855]
[96.73332214 -516.04547119]
[110.25198364 -509.53021240]
[123.25898743 -502.04553223]
[135.68495178 -493.63140869]
[147.46356201 -484.33264160]
[158.53198242 -474.19891357]
[168.83114624 -463.28427124]
[178.30613708 -451.64697266]
[186.90635681 -439.34906006]
[194.58595276 -426.45617676]
[201.30392456 -413.03710938]
[207.02444458 -399.16345215]
[211.71699524 -384.90927124]
[215.35652161 -370.35055542]
[217.92361450 -355.56500244]
[219.40458679 -340.63150024]
[219.79151917 -325.62976074]
[219.08236694 -310.63977051]
[217.28088379 -295.74154663]
[214.39671326 -281.01455688]
[210.44523621 -266.53741455]
[205.44752502 -252.38729858]
[199.43023682 -238.63977051]
[192.42550659 -225.36813354]
[184.47068787 -212.64323425]
[175.60823059 -200.53294373]
[165.88540649 -189.10188293]
[155.35411072 -178.41104126]
[144.07051086 -168.51745605]
[132.09483337 -159.47390747]
[119.49097443 -151.32867432]
[106.32615662 -144.12519836]
[92.67064667 -137.90190125]
[78.59729004 -132.69201660]
[64.18117523 -128.52331543]
[67.28528595 -113.84800720]
[70.38939667 -99.17270660]
[80.59299469 -88.32209778]
[75.87899780 -73.21949005]
[78.98310852 -58.54418564]
[82.08721924 -43.86888123]
[85.19132996 -29.19358063]
[88.29544067 -14.51827812]
[91.39955139 0.15702456]
[94.84267426 3.46670079]
[96.24323273 8.97446442]
[94.37073517 15.31523037]
[97.03653717 30.07644844]
[100.37958527 33.48717117]
[101.61553955 39.03419495]
[99.55508423 45.31639862]
[101.78020477 60.15044022]
[104.00532532 74.98448181]
[106.23043823 89.81852722]
[111.63772583 75.82705688]
[121.68014526 64.68480682]
[135.03646851 57.85773849]
[149.94941711 56.24406433]
[164.45693970 60.05609512]
[176.65032959 68.79228973]
[184.92535400 81.30325317]
[188.19325256 95.94295502]
[186.02410889 110.78528595]
[178.70329285 123.87747955]
[167.19398499 133.49703979]
[153.01045227 138.37835693]
[138.01875305 137.87918091]
[124.19132996 132.06521606]
[113.34739685 121.70137787]
[106.91306305 108.14890289]
[105.79740906 123.10736084]
[104.68176270 138.06581116]
[103.56611633 153.02426147]
[102.45046234 167.98271179]
[102.22713470 182.98104858]
[102.89691925 197.96609497]
[103.56671143 212.95112610]
[104.23649597 227.93617249]
[104.90628052 242.92120361]
[116.28708649 253.55676270]
[116.75287628 268.76327515]
[106.54336548 279.54757690]
[107.21315002 294.53262329]
[108.10596466 309.50601196]
[109.22161102 324.46447754]
[110.33726501 339.42294312]
[111.45291138 354.38137817]
[126.39124298 356.20690918]
[140.68629456 360.91195679]
[153.78862000 368.31570435]
[165.19459534 378.13354492]
[174.46578979 389.98812866]
[181.24586487 403.42379761]
[185.27418518 417.92410278]
[186.39595032 432.93167114]
[184.56800842 447.86972046]
[179.86064148 462.16400146]
[172.45477295 475.26513672]
[162.63508606 486.66952515]
[150.77900696 495.93881226]
[137.34225464 502.71670532]
[122.84129333 506.74267578]
[107.83351898 507.86199951]
[92.89578247 506.03164673]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 193]
[14 192]
[15 191]
[16 190]
[19 189]
[20 188]
[23 185]
[24 184]
[25 183]
[26 182]
[27 181]
[36 180]
[37 179]
[38 178]
[39 177]
[40 176]
[41 160]
[42 159]
[43 158]
[44 157]
[45 154]
[46 153]
[47 150]
[48 149]
[49 148]
[50 147]
[51 146]
[52 145]
[54 143]
[55 142]
[56 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
