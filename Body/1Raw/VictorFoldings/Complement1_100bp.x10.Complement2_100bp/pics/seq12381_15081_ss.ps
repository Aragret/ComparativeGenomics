%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[54.06537628 222.80642700]
[55.09654999 237.77938843]
[54.90384674 252.78657532]
[53.48855209 267.72811890]
[50.86008072 282.50457764]
[47.03593063 297.01763916]
[42.04154587 311.17068481]
[35.91016769 324.86956787]
[28.68259811 338.02307129]
[20.40693665 350.54370117]
[11.13825607 362.34814453]
[0.93824047 373.35778809]
[-10.12523079 383.49938965]
[-21.97853088 392.70550537]
[-34.54277420 400.91479492]
[-47.73435211 408.07266235]
[-61.46547318 414.13146973]
[-75.64475250 419.05090332]
[-90.17784119 422.79818726]
[-104.96800232 425.34844971]
[-119.91683197 426.68466187]
[-134.92481995 426.79794312]
[-149.89212036 425.68756104]
[-164.71910095 423.36090088]
[-179.30709839 419.83340454]
[-193.55903625 415.12860107]
[-207.38005066 409.27780151]
[-220.67819214 402.31988525]
[-233.36494446 394.30120850]
[-245.35586548 385.27511597]
[-256.57119751 375.30166626]
[-266.93624878 364.44726562]
[-276.38208008 352.78411865]
[-284.84582520 340.38983154]
[-292.27114868 327.34692383]
[-298.60864258 313.74218750]
[-303.81610107 299.66613770]
[-307.85891724 285.21249390]
[-310.71017456 270.47738647]
[-312.35086060 255.55891418]
[-312.77011108 240.55633545]
[-311.96508789 225.56951904]
[-309.94119263 210.69818115]
[-306.71185303 196.04130554]
[-302.29858398 181.69641113]
[-296.73074341 167.75898743]
[-290.04541016 154.32176208]
[-282.28704834 141.47416687]
[-273.50729370 129.30171204]
[-263.76455688 117.88539886]
[-253.12373352 107.30120087]
[-241.65557861 97.61955261]
[-229.43643188 88.90488434]
[-216.54762268 81.21519470]
[-203.07490540 74.60166168]
[-189.10795593 69.10829926]
[-174.73971558 64.77165222]
[-160.06581116 61.62059021]
[-145.18388367 59.67607880]
[-130.19299316 58.95106506]
[-115.19287109 59.45037079]
[-100.28336334 61.17067337]
[-85.56369019 64.10052490]
[-71.13180542 68.22042084]
[-57.08375931 73.50295258]
[-43.51303482 79.91296387]
[-30.50994301 87.40779114]
[-18.16102219 95.93755341]
[-6.54845285 105.44550323]
[4.25048494 115.86834717]
[14.16392517 127.13673401]
[23.12589264 139.17567444]
[35.84793091 131.22898865]
[48.56996536 123.28229523]
[55.26536179 109.97737885]
[71.06884003 109.22861481]
[83.79087830 101.28192902]
[87.09165192 90.11295319]
[97.01513672 84.01657867]
[108.47002411 86.12059784]
[121.30895996 78.36420441]
[106.36641693 77.05256653]
[94.02516937 68.52651215]
[87.51118469 55.01473999]
[88.52721405 40.04919052]
[96.80765533 27.54182243]
[110.18803406 20.76203346]
[125.17073822 21.48204231]
[137.83934021 29.51364326]
[144.88229370 42.75739288]
[144.45857239 57.75140762]
[136.67959595 70.57566833]
[150.52708435 64.80963898]
[164.37457275 59.04360199]
[178.22204590 53.27756882]
[173.32632446 39.09383011]
[169.32188416 24.63316345]
[166.22419739 9.95151424]
[164.04525757 -4.89431858]
[162.79350281 -19.84689713]
[162.47375488 -34.84837341]
[163.08728027 -49.84070969]
[164.63168335 -64.76589966]
[167.10099792 -79.56620789]
[170.48565674 -94.18436432]
[174.77259827 -108.56381989]
[179.94519043 -122.64894104]
[185.98345947 -136.38523865]
[192.86402893 -149.71955872]
[200.56028748 -162.60032654]
[209.04244995 -174.97770691]
[218.27770996 -186.80380249]
[228.23031616 -198.03286743]
[238.86180115 -208.62145996]
[250.13099670 -218.52862549]
[261.99432373 -227.71600342]
[274.40588379 -236.14807129]
[287.31762695 -243.79222107]
[300.67965698 -250.61883545]
[314.44024658 -256.60156250]
[328.54617310 -261.71719360]
[342.94281006 -265.94598389]
[357.57452393 -269.27154541]
[372.38470459 -271.68103027]
[387.31600952 -273.16510010]
[402.31069946 -273.71801758]
[417.31076050 -273.33764648]
[432.25817871 -272.02548218]
[447.09506226 -269.78656006]
[461.76406860 -266.62957764]
[476.20843506 -262.56671143]
[490.37228394 -257.61370850]
[504.20080566 -251.78971863]
[517.64050293 -245.11729431]
[530.63934326 -237.62222290]
[543.14709473 -229.33351135]
[555.11535645 -220.28323364]
[566.49780273 -210.50639343]
[577.25036621 -200.04083252]
[587.33154297 -188.92701721]
[596.70227051 -177.20796204]
[605.32629395 -164.92900085]
[613.17022705 -152.13763428]
[620.20373535 -138.88336182]
[626.39965820 -125.21744537]
[631.73400879 -111.19277191]
[636.18609619 -96.86359406]
[639.73870850 -82.28534698]
[642.37817383 -67.51443481]
[644.09417725 -52.60799789]
[644.88018799 -37.62371445]
[644.73303223 -22.61955261]
[643.65344238 -7.65356016]
[641.64544678 7.21636009]
[638.71691895 21.93268013]
[634.87908936 36.43846512]
[630.14691162 50.67759323]
[624.53857422 64.59497833]
[618.07592773 78.13677216]
[610.78381348 91.25059509]
[602.69061279 103.88569641]
[593.82745361 115.99319458]
[584.22875977 127.52626038]
[573.93164062 138.44026184]
[562.97589111 148.69299316]
[551.40393066 158.24476624]
[539.26055908 167.05863953]
[526.59265137 175.10049438]
[513.44934082 182.33924866]
[499.88140869 188.74687195]
[485.94137573 194.29859924]
[471.68313599 198.97293091]
[457.16189575 202.75178528]
[442.43377686 205.62054443]
[427.55584717 207.56811523]
[412.58557129 208.58694458]
[397.58096313 208.67312622]
[382.59997559 207.82629395]
[367.70065308 206.04972839]
[352.94058228 203.35032654]
[338.37686157 199.73849487]
[324.06588745 195.22824097]
[310.06298828 189.83700562]
[296.42236328 183.58563232]
[283.19677734 176.49832153]
[270.43737793 168.60247803]
[258.19354248 159.92866516]
[246.51263428 150.51043701]
[235.43986511 140.38421631]
[225.01805115 129.58920288]
[215.28752136 118.16715240]
[206.28593445 106.16223907]
[198.04809570 93.62092590]
[190.60588074 80.59172821]
[183.98808289 67.12505341]
[170.14059448 72.89109039]
[156.29310608 78.65711975]
[142.44563293 84.42315674]
[129.06535339 91.20314789]
[116.22640991 98.95954132]
[108.51116180 113.85420990]
[91.73755646 114.00396729]
[79.01552582 121.95065308]
[71.41016388 135.82397461]
[56.51665115 136.00433350]
[43.79461288 143.95101929]
[31.07257843 151.89770508]
[37.96001816 165.23246765]
[43.73762894 179.08425903]
[48.36695480 193.36088562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 207]
[73 206]
[74 205]
[76 203]
[77 202]
[80 200]
[81 199]
[92 198]
[93 197]
[94 196]
[95 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
