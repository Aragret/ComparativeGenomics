%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[16.21498489 246.66596985]
[19.43778801 261.32742310]
[21.25232315 276.22885132]
[21.64215279 291.23526001]
[20.60375214 306.21078491]
[18.14652061 321.01980591]
[14.29271507 335.52816772]
[9.07723522 349.60452271]
[2.54731441 363.12136841]
[-5.23790932 375.95626831]
[-14.20793056 387.99304199]
[-24.28151321 399.12261963]
[-35.36742783 409.24423218]
[-47.36527634 418.26623535]
[-60.16640091 426.10690308]
[-73.65486908 432.69522095]
[-87.70852661 437.97152710]
[-102.20010376 441.88803101]
[-116.99834442 444.40930176]
[-131.96923828 445.51245117]
[-146.97721863 445.18753052]
[-161.88633728 443.43746948]
[-176.56159973 440.27810669]
[-190.87008667 435.73803711]
[-204.68220520 429.85842896]
[-217.87289429 422.69250488]
[-230.32267761 414.30514526]
[-241.91880798 404.77233887]
[-252.55627441 394.18041992]
[-262.13873291 382.62527466]
[-270.57937622 370.21154785]
[-277.80181885 357.05172729]
[-283.74060059 343.26495361]
[-288.34197998 328.97604370]
[-291.56423950 314.31448364]
[-293.37823486 299.41299438]
[-293.76751709 284.40655518]
[-292.72857666 269.43106079]
[-290.27081299 254.62214661]
[-286.41647339 240.11390686]
[-281.20046997 226.03776550]
[-274.67004395 212.52116394]
[-266.88436890 199.68652344]
[-257.91390991 187.65010071]
[-247.83992004 176.52087402]
[-236.75363159 166.39965820]
[-224.75546265 157.37809753]
[-211.95404053 149.53790283]
[-198.46533203 142.95008850]
[-184.41148376 137.67428589]
[-169.91976929 133.75830078]
[-155.12142944 131.23757935]
[-140.15049744 130.13496399]
[-125.14253998 130.46043396]
[-110.23347473 132.21105957]
[-95.55833435 135.37095642]
[-81.25001526 139.91151428]
[-67.43810272 145.79164124]
[-54.24767685 152.95805359]
[-41.79819870 161.34585571]
[-30.20241356 170.87908936]
[-19.56534004 181.47140503]
[-8.01903725 171.89628601]
[3.52726412 162.32116699]
[15.07356548 152.74604797]
[26.61986732 143.17092896]
[11.82439899 140.70230103]
[2.99614763 128.57539368]
[5.19233799 113.73704529]
[17.15489197 104.68733215]
[32.03111649 106.61034393]
[41.29923248 118.40449524]
[39.65049744 133.31272888]
[52.00500488 124.80590057]
[64.35951233 116.29907227]
[76.71402740 107.79224396]
[88.87548065 99.01164246]
[100.77011108 89.87284088]
[112.59638214 80.64573669]
[124.42265320 71.41864014]
[136.24891663 62.19154358]
[142.36970520 47.60227966]
[157.16363525 45.87345505]
[168.98989868 36.64635468]
[180.81617737 27.41925812]
[192.64244080 18.19215965]
[190.18345642 1.84146404]
[196.27082825 -13.43071461]
[209.15513611 -23.49110603]
[225.26150513 -25.66849518]
[240.18119812 -19.46242905]
[251.86877441 -28.86458015]
[263.55636597 -38.26673126]
[275.24392700 -47.66888428]
[266.73727417 -60.03208542]
[259.17828369 -72.99642944]
[252.60928345 -86.48940277]
[247.06698608 -100.43555450]
[242.58239746 -114.75688934]
[239.18057251 -129.37330627]
[236.88055420 -144.20307922]
[235.69522095 -159.16326904]
[235.63116455 -174.17021179]
[236.68878174 -189.13996887]
[238.86212158 -203.98883057]
[242.13905334 -218.63375854]
[246.50125122 -232.99284363]
[251.92430115 -246.98579407]
[258.37789917 -260.53436279]
[265.82592773 -273.56274414]
[274.22677612 -285.99810791]
[283.53341675 -297.77090454]
[293.69381714 -308.81527710]
[304.65115356 -319.06948853]
[316.34417725 -328.47616577]
[328.70745850 -336.98272705]
[341.67184448 -344.54159546]
[355.16488647 -351.11047363]
[369.11108398 -356.65264893]
[383.43246460 -361.13711548]
[398.04891968 -364.53881836]
[412.87872314 -366.83871460]
[427.83889771 -368.02392578]
[442.84585571 -368.08782959]
[457.81558228 -367.03009033]
[472.66442871 -364.85659790]
[487.30932617 -361.57955933]
[501.66839600 -357.21722412]
[515.66131592 -351.79403687]
[529.20977783 -345.34033203]
[542.23809814 -337.89218140]
[554.67340088 -329.49124146]
[566.44610596 -320.18450928]
[577.49041748 -310.02398682]
[587.74450684 -299.06655884]
[597.15112305 -287.37347412]
[605.65753174 -275.01010132]
[613.21630859 -262.04565430]
[619.78503418 -248.55255127]
[625.32708740 -234.60629272]
[629.81146240 -220.28488159]
[633.21301270 -205.66839600]
[635.51275635 -190.83859253]
[636.69787598 -175.87838745]
[636.76165771 -160.87144470]
[635.70379639 -145.90170288]
[633.53015137 -131.05288696]
[630.25299072 -116.40801239]
[625.89050293 -102.04899597]
[620.46722412 -88.05613708]
[614.01336670 -74.50769806]
[606.56512451 -61.47944260]
[598.16406250 -49.04422760]
[588.85723877 -37.27159882]
[578.69659424 -26.22739410]
[567.73907471 -15.97337914]
[556.04589844 -6.56689787]
[543.68249512 1.93944323]
[530.71795654 9.49807358]
[517.22479248 16.06672096]
[503.27850342 21.60865211]
[488.95703125 26.09287071]
[474.34054565 29.49430275]
[459.51071167 31.79392242]
[444.55047607 32.97887421]
[429.54354858 33.04252243]
[414.57382202 31.98451996]
[399.72500610 29.81077957]
[385.08016968 26.53345871]
[370.72119141 22.17088699]
[356.72839355 16.74745941]
[343.17999268 10.29350567]
[330.15179443 2.84512281]
[317.71667480 -5.55603647]
[305.94412231 -14.86298847]
[294.89999390 -25.02368546]
[284.64608765 -35.98130035]
[272.95849609 -26.57915115]
[261.27093506 -17.17700005]
[249.58334351 -7.77484846]
[252.56135559 5.55363798]
[249.49139404 18.92914009]
[240.91700745 29.72863770]
[228.46687317 35.80913162]
[214.54563904 35.93277359]
[201.86953735 30.01842880]
[190.04327393 39.24552536]
[178.21701050 48.47262573]
[166.39073181 57.69972229]
[161.11584473 71.62900543]
[145.47601318 74.01781464]
[133.64974976 83.24491119]
[121.82347870 92.47200775]
[109.99720764 101.69910431]
[106.08441162 108.74627686]
[97.92547607 110.97397614]
[95.89668274 115.78345490]
[92.55962372 119.01103973]
[88.73593903 120.42330933]
[85.22084808 120.14675140]
[72.86634064 128.65357971]
[60.51183319 137.16040039]
[48.15732574 145.66723633]
[36.19498825 154.71723938]
[24.64868546 164.29235840]
[13.10238361 173.86747742]
[1.55608213 183.44259644]
[-9.99021912 193.01771545]
[-1.54910445 205.43110657]
[5.67380619 218.59068298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 208]
[63 207]
[64 206]
[65 205]
[66 204]
[73 203]
[74 202]
[75 201]
[76 200]
[77 196]
[78 194]
[79 193]
[80 192]
[81 191]
[83 189]
[84 188]
[85 187]
[86 186]
[91 180]
[92 179]
[93 178]
[94 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
