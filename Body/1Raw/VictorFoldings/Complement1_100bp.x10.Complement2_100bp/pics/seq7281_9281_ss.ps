%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[101.17823792 725.13195801]
[86.68004608 721.25836182]
[72.50328064 716.33679199]
[58.72359848 710.39349365]
[45.41450500 703.46020508]
[32.64701843 695.57391357]
[20.48926163 686.77667236]
[9.00609493 677.11541748]
[-1.74120796 666.64178467]
[-11.69530678 655.41149902]
[-20.80309105 643.48461914]
[-29.01596832 630.92474365]
[-36.29011536 617.79882812]
[-42.58672333 604.17700195]
[-47.87219620 590.13183594]
[-52.11833191 575.73834229]
[-55.30247879 561.07330322]
[-57.40764618 546.21490479]
[-58.42259979 531.24255371]
[-58.34193039 516.23602295]
[-57.16606140 501.27542114]
[-54.90126801 486.44055176]
[-51.55963516 471.81057739]
[-47.15899658 457.46356201]
[-41.72282410 443.47607422]
[-35.28012466 429.92269897]
[-27.86527824 416.87576294]
[-19.51784134 404.40487671]
[-10.28235245 392.57659912]
[-0.20808810 381.45404053]
[10.65120029 371.09649658]
[22.23757362 361.55929565]
[34.48921204 352.89328003]
[47.34074783 345.14471436]
[60.72361374 338.35491943]
[74.56639862 332.56011963]
[88.79525757 327.79125977]
[103.33425903 324.07376099]
[118.10583496 321.42745972]
[116.54531097 306.50885010]
[114.98478699 291.59024048]
[113.42426300 276.67163086]
[111.86373901 261.75302124]
[110.30321503 246.83442688]
[108.74269867 231.91581726]
[107.18217468 216.99720764]
[98.16278076 205.14395142]
[104.42239380 190.61372375]
[102.63993073 175.72000122]
[93.27161407 164.14053345]
[99.09583282 149.43037415]
[87.13226318 140.63215637]
[84.88814545 125.58494568]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[84.92479706 44.31132507]
[82.92078400 29.44579697]
[80.91677094 14.58026791]
[78.91275787 -0.28526011]
[76.90874481 -15.15078831]
[74.90473175 -30.01631737]
[70.03687286 -15.82815266]
[61.70686340 -3.35374069]
[50.46720505 6.57953787]
[37.06337738 13.31284332]
[22.38440895 16.39958191]
[7.40390730 15.63501740]
[-6.88452768 11.06986427]
[-19.53319550 3.00691104]
[-29.70315361 -8.01905537]
[-36.71986771 -21.27672195]
[-40.11794281 -35.88675690]
[-39.67199707 -50.88012695]
[-35.41160965 -65.26237488]
[-27.61935425 -78.07958221]
[-16.81206703 -88.48162079]
[-3.70655179 -95.77857208]
[10.82794666 -99.48645020]
[25.82740784 -99.35932922]
[40.29697037 -95.40563202]
[53.27692413 -87.88759613]
[63.90634918 -77.30387115]
[71.48023987 -64.35643005]
[75.49697113 -49.89895248]
[78.38224030 -64.61884308]
[81.15785217 -79.35980988]
[83.82364655 -94.12102509]
[86.04876709 -108.95507050]
[87.83123016 -123.84878540]
[89.61370087 -138.74250793]
[91.39616394 -153.63621521]
[93.17862701 -168.52993774]
[94.96109772 -183.42366028]
[92.87362671 -192.31636047]
[96.88257599 -198.52523804]
[98.88658905 -213.39076233]
[100.89060211 -228.25628662]
[87.16435242 -234.58728027]
[75.91511536 -244.68411255]
[68.14317322 -257.64898682]
[64.53960419 -272.32910156]
[65.42483521 -287.41909790]
[70.72014618 -301.57717896]
[79.95468140 -313.54440308]
[92.30731964 -322.25668335]
[106.67967224 -326.93930054]
[121.79374695 -327.17590332]
[136.30563354 -322.94546509]
[148.92491150 -314.62411499]
[158.52952576 -302.95178223]
[164.26539612 -288.96640015]
[165.62252808 -273.91149902]
[162.48022461 -259.12579346]
[155.11790466 -245.92398071]
[144.19023132 -235.47998047]
[130.66886902 -228.72245789]
[115.75613403 -226.25227356]
[113.75212097 -211.38674927]
[111.74810791 -196.52122498]
[109.85481262 -181.64118958]
[108.07234955 -166.74746704]
[106.28987885 -151.85375977]
[104.50741577 -136.96003723]
[102.72495270 -122.06632233]
[100.94248199 -107.17259979]
[102.56705475 -104.88810730]
[103.38459778 -101.82245636]
[103.09304047 -98.27980042]
[101.50589752 -94.66794586]
[98.58486938 -91.45523071]
[95.91907501 -76.69400787]
[97.82379913 -69.55301666]
[93.10213470 -61.73357010]
[90.21686554 -47.01367950]
[89.77025604 -32.02032852]
[91.77426910 -17.15480232]
[93.77828217 -2.28927374]
[95.78229523 12.57625484]
[97.78630829 27.44178200]
[99.79032135 42.30731201]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[121.34744263 120.66988373]
[123.16803741 135.77420044]
[113.96136475 147.42636108]
[123.47301483 160.06910706]
[117.50545502 173.71598816]
[121.23758698 179.17333984]
[121.59912109 184.84487915]
[119.34099579 189.05319214]
[128.47201538 201.97352600]
[122.10077667 215.43669128]
[123.66130066 230.35530090]
[125.22182465 245.27389526]
[126.78234863 260.19250488]
[128.34286499 275.11111450]
[129.90339661 290.02972412]
[131.46391296 304.94833374]
[133.02444458 319.86691284]
[148.02389526 319.39910889]
[163.01747131 320.02743530]
[177.92520142 321.74853516]
[192.66751099 324.55325317]
[207.16577148 328.42660522]
[221.34262085 333.34796143]
[235.12239075 339.29101562]
[248.43161011 346.22409058]
[261.19921875 354.11016846]
[273.35711670 362.90722656]
[284.84045410 372.56823730]
[295.58792114 383.04174805]
[305.54220581 394.27182007]
[314.65017700 406.19857788]
[322.86328125 418.75833130]
[330.13763428 431.88409424]
[336.43444824 445.50585938]
[341.72015381 459.55093384]
[345.96655273 473.94436646]
[349.15093994 488.60934448]
[351.25634766 503.46768188]
[352.27154541 518.44006348]
[352.19110107 533.44659424]
[351.01550293 548.40716553]
[348.75094604 563.24206543]
[345.40954590 577.87213135]
[341.00915527 592.21917725]
[335.57321167 606.20678711]
[329.13073730 619.76025391]
[321.71609497 632.80731201]
[313.36886597 645.27832031]
[304.13357544 657.10675049]
[294.05947876 668.22949219]
[283.20037842 678.58721924]
[271.61416626 688.12463379]
[259.36267090 696.79083252]
[246.51124573 704.53961182]
[233.12849426 711.32965088]
[219.28579712 717.12463379]
[205.05702209 721.89373779]
[190.51808167 725.61151123]
[175.74655151 728.25805664]
[160.82124329 729.81927490]
[145.82177734 730.28686523]
[130.82820129 729.65826416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 165]
[40 164]
[41 163]
[42 162]
[43 161]
[44 160]
[45 159]
[46 158]
[48 156]
[49 153]
[51 151]
[54 148]
[56 146]
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[62 140]
[63 139]
[64 138]
[87 137]
[88 136]
[89 134]
[90 133]
[91 128]
[92 127]
[93 126]
[94 125]
[95 124]
[96 123]
[98 122]
[99 121]
[100 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
