%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[232.18284607 355.38882446]
[234.19601440 340.51507568]
[237.48037720 325.86944580]
[242.01158142 311.56036377]
[247.75610352 297.69378662]
[254.67141724 284.37237549]
[262.70629883 271.69476318]
[271.80130005 259.75479126]
[260.69406128 249.67366028]
[249.51208496 239.67549133]
[238.25598145 229.76084900]
[226.99989319 219.84619141]
[215.74378967 209.93153381]
[204.48770142 200.01689148]
[199.74932861 199.41950989]
[195.33590698 195.83918762]
[193.04972839 189.63555908]
[182.09381104 179.39016724]
[171.13790894 169.14477539]
[160.18199158 158.89938354]
[148.85240173 149.06880188]
[137.16482544 139.66665649]
[125.47724152 130.26451111]
[113.78966522 120.86235809]
[102.10208130 111.46020508]
[106.82916260 125.69589233]
[104.99736786 140.58361816]
[96.96038818 153.24880981]
[84.27004242 161.24600220]
[69.37664032 163.03108215]
[55.15585709 158.25935364]
[44.35350800 147.85218811]
[39.05535126 133.81903076]
[40.28438568 118.86946106]
[47.80329895 105.89002228]
[60.16030884 97.38682556]
[74.96946716 95.00171661]
[89.37248230 99.19583130]
[81.38465118 94.76499176]
[79.48140717 87.62359619]
[69.82060242 76.14889526]
[60.15979004 64.67419434]
[56.02703476 63.34216309]
[52.85240555 60.99988556]
[50.83584213 58.07262421]
[50.01863098 55.00688171]
[50.29022980 52.21683121]
[41.32953262 40.18745422]
[32.36883545 28.15807533]
[17.91989899 21.71301651]
[16.52187920 6.88416624]
[7.56118250 -5.14521122]
[-1.39951348 -17.17458916]
[-14.27181530 -9.44914627]
[-27.84936523 -3.04377794]
[-41.99721909 1.97785425]
[-56.57477188 5.56584167]
[-71.43713379 7.68452501]
[-86.43659210 8.31284618]
[-101.42407990 7.44456196]
[-116.25063324 5.08830023]
[-130.76889038 1.26748073]
[-144.83457947 -3.97992325]
[-158.30787659 -10.60175896]
[-171.05490112 -18.53221512]
[-182.94894409 -27.69247055]
[-193.87179565 -37.99148560]
[-203.71492004 -49.32690430]
[-212.38046265 -61.58605957]
[-219.78230286 -74.64711761]
[-225.84689331 -88.38027191]
[-230.51394653 -102.64901733]
[-233.73707581 -117.31156158]
[-235.48425293 -132.22215271]
[-235.73811340 -147.23262024]
[-234.49613953 -162.19378662]
[-231.77066040 -176.95692444]
[-227.58876038 -191.37532043]
[-221.99203491 -205.30569458]
[-215.03607178 -218.60957336]
[-206.79002380 -231.15473938]
[-197.33583069 -242.81651306]
[-186.76748657 -253.47900391]
[-175.18998718 -263.03622437]
[-162.71842957 -271.39315796]
[-149.47674561 -278.46679688]
[-135.59654236 -284.18682861]
[-121.21578217 -288.49639893]
[-106.47738647 -291.35266113]
[-91.52783203 -292.72726440]
[-76.51570129 -292.60650635]
[-61.59019852 -290.99157715]
[-46.89965820 -287.89859009]
[-32.59009171 -283.35824585]
[-18.80370903 -277.41564941]
[-5.67753601 -270.12991333]
[6.65797234 -261.57339478]
[18.08021545 -251.83116150]
[28.47567368 -241.00004578]
[37.74102783 -229.18768311]
[45.78419113 -216.51148987]
[52.52522659 -203.09742737]
[57.89713669 -189.07882690]
[61.84653091 -174.59500122]
[64.33415985 -159.78993225]
[65.33529663 -144.81072998]
[64.83998871 -129.80628967]
[62.85316467 -114.92572784]
[59.39456940 -100.31694031]
[54.49857712 -86.12511444]
[48.21384430 -72.49130249]
[40.60283661 -59.55101395]
[31.74119377 -47.43284988]
[21.71699524 -36.25724792]
[10.62986374 -26.13528442]
[19.59056091 -14.10590744]
[28.55125618 -2.07652974]
[42.35926437 3.50810814]
[44.39821243 19.19738007]
[53.35890961 31.22675705]
[62.31960678 43.25613403]
[71.63449097 55.01338577]
[81.29529572 66.48809052]
[90.95610809 77.96278381]
[100.70207214 89.36524963]
[111.50423431 99.77262115]
[123.19181061 109.17477417]
[134.87939453 118.57692719]
[146.56697083 127.97907257]
[158.25456238 137.38122559]
[159.25851440 122.41486359]
[171.49798584 113.74333954]
[185.95048523 117.75897980]
[191.96217346 131.50160217]
[185.10144043 144.84066772]
[170.42738342 147.94348145]
[181.38330078 158.18887329]
[192.33920288 168.43426514]
[203.29512024 178.67965698]
[214.40235901 188.76078796]
[225.65844727 198.67544556]
[236.91455078 208.59010315]
[248.17063904 218.50474548]
[259.42672729 228.41940308]
[267.93493652 231.74333191]
[270.77520752 238.56643677]
[281.88241577 248.64756775]
[292.88769531 238.44140625]
[304.72958374 229.21911621]
[317.32046509 221.04893494]
[330.56704712 213.99139404]
[344.37133789 208.09872437]
[358.63107300 203.41456604]
[373.24069214 199.97360229]
[388.09204102 197.80128479]
[403.07513428 196.91372681]
[418.07910156 197.31747437]
[432.99279785 199.00955200]
[447.70581055 201.97743225]
[462.10925293 206.19912720]
[476.09643555 211.64340210]
[489.56381226 218.26994324]
[502.41168213 226.02967834]
[514.54492188 234.86517334]
[525.87371826 244.71098328]
[536.31414795 255.49423218]
[545.78894043 267.13510132]
[554.22796631 279.54736328]
[561.56872559 292.63916016]
[567.75689697 306.31350708]
[572.74658203 320.46923828]
[576.50091553 335.00149536]
[578.99206543 349.80270386]
[580.20159912 364.76324463]
[580.12054443 379.77243042]
[578.74957275 394.71905518]
[576.09875488 409.49249268]
[572.18774414 423.98336792]
[567.04547119 438.08438110]
[560.71008301 451.69113159]
[553.22839355 464.70291138]
[544.65582275 477.02334595]
[535.05590820 488.56121826]
[524.49963379 499.23110962]
[513.06518555 508.95404053]
[500.83728027 517.65802002]
[487.90637207 525.27856445]
[474.36822510 531.75927734]
[460.32305908 537.05224609]
[445.87487793 541.11816406]
[431.13067627 543.92700195]
[416.19958496 545.45800781]
[401.19213867 545.69970703]
[386.21948242 544.65045166]
[371.39245605 542.31787109]
[356.82086182 538.71936035]
[342.61251831 533.88153076]
[328.87268066 527.84014893]
[315.70303345 520.64001465]
[303.20114136 512.33435059]
[291.45950317 502.98474121]
[280.56506348 492.66033936]
[270.59851074 481.43762207]
[261.63363647 469.39968872]
[253.73678589 456.63562012]
[246.96643066 443.23995972]
[241.37271118 429.31185913]
[236.99702454 414.95446777]
[233.87178040 400.27407837]
[232.02012634 385.37933350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 147]
[9 146]
[10 144]
[11 143]
[12 142]
[13 141]
[14 140]
[17 139]
[18 138]
[19 137]
[20 136]
[21 130]
[22 129]
[23 128]
[24 127]
[25 126]
[38 125]
[40 124]
[41 123]
[42 122]
[47 121]
[48 120]
[49 119]
[51 117]
[52 116]
[53 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
