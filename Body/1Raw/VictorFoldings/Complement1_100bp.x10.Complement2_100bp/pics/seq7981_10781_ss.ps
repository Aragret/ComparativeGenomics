%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[308.17617798 547.03161621]
[301.69668579 533.50323486]
[295.21716309 519.97491455]
[288.73767090 506.44656372]
[282.25817871 492.91821289]
[275.77868652 479.38986206]
[263.30273438 471.25354004]
[264.31973267 455.46505737]
[250.22985840 450.77340698]
[243.46601868 437.14605713]
[248.48255920 422.39910889]
[242.00306702 408.87078857]
[235.52357483 395.34243774]
[229.79914856 390.66775513]
[229.05000305 381.56408691]
[222.77264404 367.94076538]
[216.49528503 354.31744385]
[210.21791077 340.69412231]
[203.94055176 327.07083130]
[197.66319275 313.44750977]
[191.18370056 299.91915894]
[184.50350952 286.48876953]
[177.82330322 273.05841064]
[163.32649231 276.81848145]
[148.35885620 277.48236084]
[133.57453918 275.01864624]
[119.62015533 269.53259277]
[107.10656738 261.26171875]
[96.58209229 250.56556702]
[88.50848389 237.90994263]
[83.24071503 223.84671021]
[81.01129913 208.98976135]
[81.92011261 193.98812866]
[85.92984009 179.49768066]
[92.86756134 166.15246582]
[102.43218994 154.53692627]
[114.20751953 145.16033936]
[101.61181641 137.21064758]
[102.39362335 121.40876770]
[95.71342468 107.97839355]
[92.26821899 106.24549103]
[89.60358429 103.00241852]
[88.37683868 98.63181305]
[89.04992676 93.79582214]
[82.97609711 80.08055878]
[76.90225983 66.36529541]
[70.82843018 52.65002441]
[64.75459290 38.93475723]
[52.09198761 29.44956207]
[54.01304245 14.67936039]
[47.73567963 1.05604458]
[41.25618362 -12.47230053]
[28.31678391 -21.57628059]
[29.79722023 -36.39712906]
[16.85781860 -45.50111008]
[18.33825684 -60.32196045]
[11.85876083 -73.85030365]
[5.37926483 -87.37864685]
[-1.20076263 -100.85838318]
[-7.88095713 -114.28875732]
[-14.56115150 -127.71913910]
[-21.44056511 -141.04856873]
[-28.51766968 -154.27409363]
[-35.59477615 -167.49961853]
[-42.67188263 -180.72514343]
[-49.74898529 -193.95066833]
[-63.82060623 -188.69017029]
[-78.46784210 -185.35223389]
[-93.42930603 -183.99641418]
[-108.43797302 -184.64694214]
[-123.22602081 -187.29217529]
[-137.52951050 -191.88493347]
[-151.09321594 -198.34323120]
[-163.67503357 -206.55183411]
[-175.05046082 -216.36422729]
[-185.01647949 -227.60531616]
[-193.39523315 -240.07447815]
[-200.03718567 -253.54919434]
[-204.82380676 -267.78897095]
[-207.66969299 -282.53973389]
[-208.52401733 -297.53817749]
[-207.37158203 -312.51666260]
[-204.23291016 -327.20788574]
[-199.16403198 -341.34967041]
[-192.25541687 -354.68963623]
[-183.63035583 -366.98971558]
[-173.44274902 -378.03036499]
[-161.87443542 -387.61459351]
[-149.13185120 -395.57135010]
[-135.44239807 -401.75863647]
[-121.05039215 -406.06600952]
[-106.21266937 -408.41662598]
[-91.19402313 -408.76855469]
[-76.26248932 -407.11547852]
[-61.68453217 -403.48687744]
[-47.72031021 -397.94757080]
[-34.61903763 -390.59637451]
[-22.61451340 -381.56451416]
[-11.92098045 -371.01312256]
[-2.72927308 -359.13052368]
[4.79657030 -346.12878418]
[10.52224255 -332.23992920]
[14.34556293 -317.71185303]
[16.19829941 -302.80377197]
[16.04738617 -287.78176880]
[13.89551926 -272.91390991]
[9.78109932 -258.46554565]
[3.77755332 -244.69453430]
[-4.00797796 -231.84661865]
[-13.43655300 -220.15109253]
[-24.33990860 -209.81666565]
[-36.52346039 -201.02778625]
[-29.44635391 -187.80224609]
[-22.36924744 -174.57672119]
[-15.29214191 -161.35119629]
[-8.21503735 -148.12567139]
[-3.98492861 -145.90864563]
[-1.10263574 -141.01074219]
[-1.13077593 -134.39933777]
[5.54941893 -120.96895599]
[12.22961330 -107.53858185]
[18.02301025 -102.94963837]
[18.90760994 -93.85814667]
[25.38710594 -80.32980347]
[31.86660194 -66.80145264]
[44.34254837 -58.66511154]
[43.32556534 -42.87662506]
[55.80150986 -34.74028397]
[54.78453064 -18.95179749]
[61.26402664 -5.42345142]
[65.39092255 -3.01974726]
[68.05163574 2.00196743]
[67.72830963 8.60552692]
[79.95647430 17.10971642]
[78.46986389 32.86092377]
[84.54369354 46.57619095]
[90.61753082 60.29145813]
[96.69136047 74.00672150]
[102.76519775 87.72199249]
[109.14379883 101.29820251]
[115.82399750 114.72857666]
[128.89750671 123.63889313]
[127.63789368 138.48014832]
[142.22007751 134.74665833]
[157.25399780 134.12701416]
[172.08241272 136.64585876]
[186.05760193 142.19071960]
[198.56954956 150.51693726]
[209.07273865 161.25856018]
[217.10977173 173.94436646]
[222.33142090 188.01853943]
[224.51173401 202.86505127]
[223.55778503 217.83457947]
[219.51371765 232.27297974]
[212.55863953 245.54975891]
[202.99871826 257.08575439]
[191.25369263 266.37820435]
[197.93388367 279.80859375]
[204.61407471 293.23895264]
[209.90357971 297.20541382]
[212.07061768 302.45907593]
[211.28651428 307.17013550]
[217.56387329 320.79345703]
[223.84123230 334.41677856]
[230.11859131 348.04010010]
[236.39595032 361.66342163]
[242.67330933 375.28671265]
[249.05192566 388.86294556]
[255.53141785 402.39126587]
[262.01092529 415.91961670]
[276.64572144 421.25439453]
[283.02413940 435.06637573]
[277.84808350 448.98556519]
[290.78747559 458.08953857]
[289.30703735 472.91036987]
[295.78652954 486.43872070]
[302.26602173 499.96707153]
[308.74551392 513.49542236]
[315.22500610 527.02374268]
[321.70449829 540.55212402]
[336.25854492 536.73413086]
[351.27212524 535.73980713]
[366.20254517 537.60504150]
[380.51007080 542.26245117]
[393.67749023 549.54364014]
[405.22879028 559.18542480]
[414.74645996 570.83917236]
[421.88638306 584.08374023]
[426.39047241 598.44024658]
[428.09591675 613.38977051]
[426.94104004 628.39184570]
[422.96762085 642.90423584]
[416.31930542 656.40222168]
[407.23638916 668.39794922]
[396.04721069 678.45770264]
[383.15628052 686.21789551]
[369.02960205 691.39801025]
[354.17782593 693.81066895]
[339.13784790 693.36883545]
[324.45333862 690.08831787]
[310.65512085 684.08782959]
[298.24203491 675.58416748]
[287.66278076 664.88482666]
[279.29980469 652.37658691]
[273.45538330 638.51153564]
[270.34085083 623.79095459]
[270.06872559 608.74688721]
[272.64892578 593.92333984]
[277.98809814 579.85601807]
[285.89328003 567.05346680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[3 178]
[4 177]
[5 176]
[6 175]
[8 173]
[11 170]
[12 169]
[13 168]
[15 167]
[16 166]
[17 165]
[18 164]
[19 163]
[20 162]
[21 159]
[22 158]
[23 157]
[37 143]
[39 141]
[40 140]
[44 139]
[45 138]
[46 137]
[47 136]
[48 135]
[50 133]
[51 130]
[52 129]
[54 127]
[56 125]
[57 124]
[58 123]
[59 121]
[60 120]
[61 119]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
