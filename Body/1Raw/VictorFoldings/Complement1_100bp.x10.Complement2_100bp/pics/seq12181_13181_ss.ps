%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[269.57055664 472.31411743]
[279.98529053 461.47531128]
[291.96740723 452.39926147]
[284.89031982 439.17373657]
[277.81320190 425.94818115]
[270.73611450 412.72265625]
[263.65899658 399.49713135]
[257.73153687 395.08273315]
[256.57662964 386.02160645]
[249.69721985 372.69216919]
[242.81781006 359.36273193]
[235.93840027 346.03332520]
[229.05899048 332.70388794]
[222.17958069 319.37445068]
[215.30017090 306.04501343]
[208.42074585 292.71560669]
[201.54133606 279.38616943]
[194.66192627 266.05673218]
[187.09754944 253.10374451]
[178.86874390 240.56233215]
[170.63993835 228.02093506]
[162.41111755 215.47953796]
[158.00009155 213.64874268]
[154.69232178 209.02751160]
[154.13050842 202.43995667]
[146.27874756 189.65911865]
[133.02404785 182.86485291]
[132.39295959 167.05624390]
[119.13824463 160.26199341]
[118.50715637 144.45336914]
[110.65539551 131.67253113]
[102.80364227 118.89168549]
[88.73545837 115.42291260]
[81.15090942 103.07702637]
[84.41551208 88.96006775]
[76.56375885 76.17922211]
[68.71200562 63.39838409]
[60.86024857 50.61754227]
[53.00849152 37.83669662]
[47.38621140 34.35797882]
[44.75910568 29.31859970]
[45.11978531 24.55635643]
[37.65204620 11.54740429]
[30.18430328 -1.46154797]
[22.71656227 -14.47049999]
[15.24882126 -27.47945213]
[7.78108025 -40.48840332]
[0.31333908 -53.49735641]
[0.55406982 -38.49929047]
[-4.28390741 -24.30090904]
[-13.63223171 -12.57023048]
[-26.39267159 -4.68535995]
[-41.06614304 -1.57260489]
[-55.92882156 -3.59764838]
[-69.23464966 -10.52259064]
[-79.42048645 -21.53389549]
[-85.28968811 -35.33796692]
[-86.15277100 -50.31311798]
[-81.90831757 -64.70008087]
[-73.05497742 -76.80868530]
[-60.63283157 -85.21643066]
[-46.10121155 -88.93558502]
[-31.16728783 -87.52922058]
[-17.58547592 -81.16255951]
[-6.95045137 -70.58226776]
[-18.23230934 -81.67416382]
[-14.35516548 -96.05529785]
[-18.54217720 -110.45908356]
[-22.72918701 -124.86286163]
[-26.91619873 -139.26664734]
[-41.36596298 -144.60617065]
[-49.80234528 -157.28216553]
[-49.16452026 -172.31735229]
[-39.90648270 -183.95465088]
[-44.09349442 -198.35844421]
[-48.28050232 -212.76222229]
[-52.46751404 -227.16600037]
[-55.61903381 -212.50080872]
[-63.30508804 -199.61964417]
[-74.71455383 -189.88186646]
[-88.64336395 -184.31517029]
[-103.62158203 -183.50697327]
[-118.06850433 -187.54260254]
[-130.45953369 -195.99615479]
[-139.48699951 -207.97550964]
[-144.19821167 -222.21644592]
[-144.09600830 -237.21609497]
[-139.19114685 -251.39151001]
[-130.00125122 -263.24670410]
[-117.49617767 -271.53060913]
[-102.99559021 -275.36898804]
[-88.02978516 -274.35675049]
[-74.17813110 -268.60073853]
[-62.90243149 -258.70837402]
[-55.39257050 -245.72348022]
[-55.83917618 -260.71682739]
[-56.28578186 -275.71017456]
[-56.73238754 -290.70352173]
[-70.69593811 -296.86648560]
[-80.59613037 -308.48321533]
[-84.46726990 -323.24728394]
[-81.54073334 -338.22720337]
[-72.39759827 -350.44873047]
[-58.85322952 -357.48526001]
[-43.59687805 -357.93969727]
[-29.65770149 -351.72183228]
[-19.80333519 -340.06616211]
[-15.99036980 -325.28698730]
[-18.97587013 -310.31869507]
[-28.16706657 -298.13327026]
[-41.73903656 -291.15011597]
[-41.29243088 -276.15676880]
[-40.84582520 -261.16342163]
[-40.39921951 -246.17007446]
[-38.06373215 -231.35301208]
[-33.87672043 -216.94923401]
[-29.68971062 -202.54545593]
[-25.50269890 -188.14166260]
[-11.44885445 -183.28085327]
[-2.85037994 -170.93054199]
[-3.17678118 -155.70730591]
[-12.51241684 -143.45365906]
[-8.32540512 -129.04988098]
[-4.13839436 -114.64609528]
[0.04861687 -100.24230957]
[11.03099155 -90.18066406]
[7.45333052 -74.76927185]
[13.32229137 -60.96509933]
[20.79003334 -47.95614624]
[28.25777435 -34.94719315]
[35.72551346 -21.93824196]
[43.19325638 -8.92928886]
[50.66099548 4.07966328]
[58.12873840 17.08861542]
[65.78933716 29.98494339]
[73.64109039 42.76578522]
[81.49284363 55.54662704]
[89.34460449 68.32746887]
[97.19635773 81.10831451]
[111.26454163 84.57708740]
[118.84909058 96.92297363]
[115.58448792 111.03993225]
[123.43624115 123.82077789]
[131.28799438 136.60162354]
[145.10430908 144.31004333]
[145.17379761 159.20448303]
[158.99011230 166.91291809]
[159.05960083 181.80735779]
[166.91134644 194.58821106]
[174.95252991 207.25073242]
[183.18133545 219.79212952]
[191.41014099 232.33352661]
[199.63894653 244.87492371]
[202.60241699 230.17057800]
[214.24545288 220.71333313]
[229.24502563 220.82690430]
[240.74353027 230.45938110]
[243.48399353 245.20690918]
[236.21353149 258.32714844]
[222.25608826 263.82165527]
[207.99136353 259.17733765]
[214.87077332 272.50674438]
[221.75018311 285.83618164]
[228.62959290 299.16561890]
[235.50900269 312.49505615]
[242.38841248 325.82446289]
[249.26783752 339.15390015]
[256.14724731 352.48333740]
[263.02664185 365.81274414]
[269.90606689 379.14218140]
[276.88452148 392.42004395]
[283.96163940 405.64556885]
[291.03872681 418.87109375]
[298.11584473 432.09661865]
[305.19293213 445.32214355]
[319.39175415 440.38851929]
[334.18753052 437.73696899]
[349.21597290 437.43273926]
[364.10696411 439.48333740]
[378.49380493 443.83828735]
[392.02218628 450.39031982]
[404.35897827 458.97811890]
[415.20037842 469.39013672]
[424.27941895 481.37002563]
[431.37246704 494.62277222]
[436.30493164 508.82199097]
[438.95526123 523.61798096]
[439.25823975 538.64648438]
[437.20642090 553.53729248]
[432.85028076 567.92376709]
[426.29711914 581.45159912]
[417.70834351 593.78765869]
[407.29541016 604.62823486]
[395.31475830 613.70623779]
[382.06143188 620.79821777]
[367.86181641 625.72949219]
[353.06558228 628.37866211]
[338.03710938 628.68035889]
[323.14645386 626.62731934]
[308.76034546 622.27001953]
[295.23303223 615.71569824]
[282.89764404 607.12591553]
[272.05798340 596.71209717]
[262.98092651 584.73071289]
[255.89004517 571.47680664]
[250.95994568 557.27679443]
[248.31204224 542.48028564]
[248.01153564 527.45178223]
[250.06582642 512.56134033]
[254.42433167 498.17556763]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 175]
[4 174]
[5 173]
[6 172]
[7 171]
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[18 161]
[19 153]
[20 152]
[21 151]
[22 150]
[25 149]
[26 148]
[28 146]
[30 144]
[31 143]
[32 142]
[35 139]
[36 138]
[37 137]
[38 136]
[39 135]
[42 134]
[43 133]
[44 132]
[45 131]
[46 130]
[47 129]
[48 128]
[65 127]
[67 125]
[68 124]
[69 123]
[70 122]
[74 118]
[75 117]
[76 116]
[77 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
