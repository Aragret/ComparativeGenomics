%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[27.49538803 633.82745361]
[15.86567688 643.31512451]
[3.48283815 651.79638672]
[-9.56627083 659.21173096]
[-23.19011879 665.50915527]
[-37.29314423 670.64447021]
[-51.77642059 674.58160400]
[-66.53835297 677.29302979]
[-81.47540283 678.75970459]
[-96.48279572 678.97125244]
[-111.45526123 677.92633057]
[-126.28777313 675.63220215]
[-140.87629700 672.10491943]
[-155.11849976 667.36926270]
[-168.91447449 661.45849609]
[-182.16744995 654.41400146]
[-194.78448486 646.28521729]
[-206.67706299 637.12915039]
[-217.76177979 627.01007080]
[-227.96084595 615.99896240]
[-237.20275879 604.17297363]
[-245.42268372 591.61511230]
[-252.56295776 578.41351318]
[-258.57348633 564.66064453]
[-263.41213989 550.45312500]
[-267.04492188 535.89050293]
[-269.44641113 521.07501221]
[-270.59973145 506.11050415]
[-270.49682617 491.10198975]
[-269.13836670 476.15469360]
[-266.53390503 461.37353516]
[-262.70169067 446.86212158]
[-257.66864014 432.72229004]
[-251.47006226 419.05319214]
[-244.14939880 405.95074463]
[-235.75801086 393.50680542]
[-226.35478210 381.80871582]
[-216.00563049 370.93847656]
[-204.78318787 360.97238159]
[-192.76614380 351.98031616]
[-180.03880310 344.02536011]
[-166.69044495 337.16329956]
[-152.81469727 331.44226074]
[-138.50889587 326.90240479]
[-123.87336731 323.57556152]
[-109.01078033 321.48504639]
[-94.02539825 320.64556885]
[-79.02231598 321.06298828]
[-64.10678864 322.73434448]
[-49.38343048 325.64797974]
[-34.95551682 329.78341675]
[-20.92425156 335.11166382]
[-14.44475555 321.58331299]
[-19.62083244 307.66412354]
[-13.24241829 293.85217285]
[1.39240229 288.51739502]
[7.87189817 274.98904419]
[14.35139370 261.46069336]
[20.83089066 247.93235779]
[19.35045242 233.11151123]
[32.28985596 224.00752258]
[38.76934814 210.47918701]
[45.24884415 196.95083618]
[51.72834015 183.42248535]
[58.20783615 169.89414978]
[53.03176117 155.97496033]
[59.41017532 142.16297913]
[74.04499817 136.82821655]
[80.52449036 123.29987335]
[87.00399017 109.77152252]
[83.80295563 98.57354736]
[88.91191101 88.10742188]
[99.70967865 83.74285126]
[106.38987732 70.31247711]
[113.07006836 56.88210297]
[119.75026703 43.45172501]
[126.43045807 30.02135086]
[118.40270996 15.13339138]
[120.80685425 -1.44133043]
[132.49937439 -13.19916439]
[148.73176575 -15.64599514]
[155.21125793 -29.17434120]
[154.19427490 -44.96282959]
[166.67022705 -53.09917068]
[173.14971924 -66.62751770]
[172.13273621 -82.41600037]
[184.60868835 -90.55234528]
[191.08818054 -104.08068848]
[197.56767273 -117.60903168]
[184.72882080 -125.38917542]
[172.71438599 -134.39030457]
[161.64009094 -144.52571106]
[151.61256409 -155.69779968]
[142.72840881 -167.79898071]
[135.07316589 -180.71269226]
[128.72056580 -194.31457520]
[123.73178101 -208.47363281]
[120.15487671 -223.05349731]
[118.02429199 -237.91375732]
[117.36054993 -252.91130066]
[118.17003632 -267.90167236]
[120.44495392 -282.74053955]
[124.16339874 -297.28494263]
[129.28955078 -311.39486694]
[135.77406311 -324.93435669]
[143.55445862 -337.77304077]
[152.55581665 -349.78729248]
[162.69145203 -360.86138916]
[173.86375427 -370.88870239]
[185.96510315 -379.77261353]
[198.87896729 -387.42761230]
[212.48097229 -393.77993774]
[226.64013672 -398.76843262]
[241.22007751 -402.34503174]
[256.08038330 -404.47534180]
[271.07794189 -405.13876343]
[286.06829834 -404.32897949]
[300.90710449 -402.05377197]
[315.45144653 -398.33505249]
[329.56124878 -393.20858765]
[343.10061646 -386.72381592]
[355.93914795 -378.94317627]
[367.95321655 -369.94155884]
[379.02713013 -359.80569458]
[389.05419922 -348.63320923]
[397.93786621 -336.53167725]
[405.59262085 -323.61767578]
[411.94467163 -310.01553345]
[416.93286133 -295.85626221]
[420.50918579 -281.27624512]
[422.63919067 -266.41592407]
[423.30233765 -251.41835022]
[422.49224854 -236.42799377]
[420.21673584 -221.58923340]
[416.49771118 -207.04496765]
[411.37097168 -192.93527222]
[404.88592529 -179.39604187]
[397.10501099 -166.55764771]
[388.10317993 -154.54376221]
[377.96710205 -143.47006226]
[366.79440308 -133.44320679]
[354.69271851 -124.55976868]
[341.77853394 -116.90530396]
[328.17626953 -110.55352020]
[314.01690674 -105.56558990]
[299.43682861 -101.98956299]
[284.57644653 -99.85987091]
[269.57885742 -99.19702148]
[254.58851624 -100.00740814]
[239.74980164 -102.28321838]
[225.20561218 -106.00253296]
[211.09602356 -111.12953949]
[204.61653137 -97.60119629]
[198.13703918 -84.07284546]
[199.61747742 -69.25199890]
[186.67807007 -60.14801788]
[180.19857788 -46.61967468]
[181.67901611 -31.79882431]
[168.73960876 -22.69484520]
[162.26011658 -9.16649914]
[169.67384338 1.93659317]
[170.64093018 15.36078358]
[164.80209351 27.60731506]
[153.58590698 35.43135071]
[139.86083984 36.70154572]
[133.18063354 50.13191986]
[126.50044250 63.56229782]
[119.82025146 76.99267578]
[113.14005280 90.42304993]
[114.61179352 107.13263702]
[100.53233337 116.25102234]
[94.05283356 129.77937317]
[87.57334137 143.30770874]
[92.58988953 158.05464172]
[85.82604218 171.68200684]
[71.73618317 176.37364197]
[65.25669098 189.90199280]
[58.77719116 203.43032837]
[52.29769516 216.95867920]
[45.81819916 230.48701477]
[46.83518219 246.27551270]
[34.35923386 254.41184998]
[27.87973976 267.94018555]
[21.40024376 281.46853638]
[14.92074776 294.99688721]
[19.93729782 309.74380493]
[13.17345047 323.37118530]
[-0.91640979 328.06280518]
[-7.39590549 341.59115601]
[5.55064869 349.18414307]
[17.81642914 357.83383179]
[29.31539536 367.47958374]
[39.96689224 378.05368042]
[49.69620514 389.48202515]
[58.43509293 401.68441772]
[66.12224579 414.57528687]
[72.70375824 428.06417847]
[78.13345337 442.05648804]
[82.37325287 456.45410156]
[85.39340973 471.15597534]
[87.17274475 486.05902100]
[87.69877625 501.05865479]
[86.96781158 516.04974365]
[84.98498535 530.92706299]
[81.76419067 545.58630371]
[77.32804108 559.92462158]
[71.70763397 573.84143066]
[64.94239807 587.23913574]
[57.07979965 600.02368164]
[48.17497635 612.10552979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 189]
[53 188]
[56 185]
[57 184]
[58 183]
[59 182]
[61 180]
[62 179]
[63 178]
[64 177]
[65 176]
[68 173]
[69 172]
[70 171]
[73 169]
[74 168]
[75 167]
[76 166]
[77 165]
[81 160]
[82 159]
[84 157]
[85 156]
[87 154]
[88 153]
[89 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
