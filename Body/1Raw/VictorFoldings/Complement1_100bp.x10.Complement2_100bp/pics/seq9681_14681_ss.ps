%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[71.38759613 543.13055420]
[61.12281418 532.13287354]
[53.05382919 519.43621826]
[47.45547104 505.47290039]
[44.51841354 490.71865845]
[44.34268951 475.67590332]
[46.93429184 460.85705566]
[52.20494461 446.76681519]
[59.97513199 433.88510132]
[69.98020935 422.65063477]
[81.87940216 413.44607544]
[95.26742554 406.58493042]
[109.68830109 402.30090332]
[108.12777710 387.38229370]
[106.56725311 372.46368408]
[97.54785919 360.61041260]
[103.80747223 346.08016968]
[102.24694824 331.16159058]
[100.68643188 316.24298096]
[99.12590790 301.32437134]
[97.56538391 286.40576172]
[90.02407074 299.37219238]
[77.05931091 306.91641235]
[62.06005859 307.06634521]
[48.94708633 299.78280640]
[41.14809036 286.96969604]
[40.70170975 271.97631836]
[47.72462845 258.72195435]
[60.38107300 250.67120361]
[75.36267853 249.92855835]
[88.75328827 256.68811035]
[97.05234528 269.18209839]
[97.72212982 254.19706726]
[98.39191437 239.21202087]
[99.06169891 224.22698975]
[99.73148346 209.24194336]
[99.50815582 194.24360657]
[98.39250946 179.28515625]
[97.27685547 164.32670593]
[83.00347137 162.10038757]
[69.58572388 156.74780273]
[57.69910812 148.53839111]
[47.94201660 137.88543701]
[40.80564499 125.32525635]
[36.64925385 111.49014282]
[35.68208694 97.07658386]
[37.95283127 82.81019592]
[43.34717560 69.40918732]
[51.59355545 57.54818344]
[62.27682877 47.82431030]
[74.85916901 40.72707748]
[88.70716095 36.61378479]
[87.81434631 21.64037895]
[86.92153168 6.66697264]
[86.02871704 -8.30643272]
[85.13590240 -23.27983856]
[78.29913330 -9.92848682]
[66.92338562 -0.15135448]
[52.69617462 4.60117769]
[37.72803116 3.62410069]
[24.23938751 -2.93764257]
[14.23120213 -14.11065674]
[9.18813133 -28.23748970]
[9.85828400 -43.22251129]
[16.14224815 -56.84278488]
[27.10783195 -67.07781982]
[41.12836075 -72.40930939]
[56.12397003 -72.04636383]
[69.87014771 -66.04281616]
[80.32773590 -55.28926849]
[85.94504547 -41.38281250]
[88.17016602 -56.21685410]
[90.39527893 -71.05089569]
[77.98155212 -78.03304291]
[68.71615601 -88.81050110]
[63.69659424 -102.07538605]
[63.50675964 -116.22708893]
[68.14906311 -129.56542969]
[77.04660797 -140.49488831]
[89.11480713 -147.71548462]
[102.89354706 -150.37738037]
[105.33927155 -165.17665100]
[107.78500366 -179.97592163]
[110.23072815 -194.77519226]
[112.45584869 -209.60923767]
[114.45986176 -224.47476196]
[116.46387482 -239.34030151]
[118.46788788 -254.20582581]
[120.47190094 -269.07135010]
[120.91851044 -284.06469727]
[119.80285645 -299.02316284]
[118.68721008 -313.98159790]
[117.57156372 -328.94006348]
[102.83229065 -332.29348755]
[89.73712158 -339.84384155]
[79.45045471 -350.91973877]
[72.88697052 -364.53634644]
[70.63031006 -379.48287964]
[72.88111115 -394.43029785]
[79.43924713 -408.04949951]
[89.72157288 -419.12945557]
[102.81378174 -426.68493652]
[117.55173492 -430.04412842]
[132.62493896 -428.90835571]
[146.69308472 -423.37857056]
[158.50526428 -413.94650269]
[167.01112366 -401.45083618]
[171.45434570 -387.00265503]
[171.43983459 -371.88674927]
[166.96887207 -357.44714355]
[158.43902588 -344.96783447]
[146.60876465 -335.55847168]
[132.53001404 -330.05572510]
[133.64566040 -315.09725952]
[134.76130676 -300.13879395]
[135.87696838 -285.18035889]
[142.51419067 -298.63201904]
[153.74311829 -308.57742310]
[167.89797974 -313.54125977]
[182.87901306 -312.78713989]
[196.46385193 -306.42694092]
[206.63728333 -295.40417480]
[211.89012146 -281.35400391]
[211.44314575 -266.36065674]
[205.36267090 -252.64834595]
[194.55068970 -242.25117493]
[180.61108398 -236.71153259]
[165.61174011 -236.85118103]
[151.77769470 -242.64939880]
[141.16116333 -253.24606323]
[135.33743286 -267.06735229]
[133.33341980 -252.20181274]
[131.32940674 -237.33628845]
[129.32539368 -222.47074890]
[127.32137299 -207.60522461]
[129.45320129 -203.33154297]
[128.92295837 -197.67329407]
[125.02999878 -192.32946777]
[122.58427429 -177.53019714]
[120.13854218 -162.73092651]
[117.69281769 -147.93165588]
[131.27589417 -139.76916504]
[140.70954895 -126.98812866]
[144.52546692 -111.52806091]
[142.11062622 -95.74919891]
[133.80554199 -82.07216644]
[120.85666656 -72.60659790]
[105.22932434 -68.82578278]
[103.00421143 -53.99173737]
[100.77909088 -39.15769196]
[100.10930634 -24.17265511]
[101.00212097 -9.19924927]
[101.89493561 5.77415657]
[102.78775024 20.74756241]
[103.68057251 35.72097015]
[118.92206573 38.45898819]
[133.06895447 44.75703812]
[145.30287170 54.25078964]
[154.91610718 66.39103699]
[161.35253906 80.47550964]
[164.23985291 95.68943024]
[163.41102600 111.15270233]
[158.91398621 125.97081757]
[151.00888062 139.28657532]
[140.15301514 150.32968140]
[126.97436523 158.46130371]
[112.23531342 163.21105957]
[113.35095978 178.16950989]
[114.46660614 193.12796021]
[123.47451782 181.13389587]
[137.77767944 176.61511230]
[152.04138184 181.25700378]
[160.94558716 193.32824707]
[161.16928101 208.32656860]
[152.62899780 220.65798950]
[138.51008606 225.72315979]
[124.07852173 221.63291931]
[114.71652222 209.91172791]
[114.04673767 224.89677429]
[113.37695312 239.88180542]
[112.70716858 254.86685181]
[112.03738403 269.85189819]
[112.48398590 284.84524536]
[114.04450989 299.76385498]
[115.60503387 314.68243408]
[117.16555786 329.60104370]
[118.72608185 344.51965332]
[127.85709381 357.44000244]
[121.48585510 370.90316772]
[123.04637909 385.82174683]
[124.60690308 400.74035645]
[139.60215759 401.94741821]
[154.12023926 405.88952637]
[167.66664124 412.43240356]
[179.78001404 421.35321045]
[190.04776001 432.34814453]
[198.12016296 445.04266357]
[203.72229004 459.00442505]
[206.66333008 473.75790405]
[206.84309387 488.80056763]
[204.25549316 503.62011719]
[198.98863220 517.71179199]
[191.22192383 530.59558105]
[181.21987915 541.83276367]
[169.32316589 551.04052734]
[155.93698120 557.90527344]
[141.51727295 562.19323730]
[126.55514526 563.75830078]
[111.56021881 562.54718018]
[97.04320526 558.60119629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 191]
[14 190]
[15 189]
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 169]
[38 168]
[39 167]
[52 155]
[53 154]
[54 153]
[55 152]
[56 151]
[71 150]
[72 149]
[73 148]
[81 141]
[82 140]
[83 139]
[84 138]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
