%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[69.68743896 513.79162598]
[58.31211853 523.57891846]
[46.27474594 532.53942871]
[33.63528824 540.62854004]
[20.45672035 547.80584717]
[6.80469561 554.03570557]
[-7.25277233 559.28704834]
[-21.64564896 563.53369141]
[-36.30222702 566.75451660]
[-51.14949036 568.93341064]
[-66.11347198 570.05963135]
[-81.11961365 570.12744141]
[-96.09315491 569.13653564]
[-110.95951080 567.09191895]
[-125.64460754 564.00372314]
[-140.07528687 559.88739014]
[-154.17964172 554.76330566]
[-167.88742065 548.65710449]
[-181.13032532 541.59918213]
[-193.84239197 533.62469482]
[-205.96026611 524.77337646]
[-217.42359924 515.08935547]
[-228.17526245 504.62075806]
[-238.16169739 493.41989136]
[-247.33316040 481.54244995]
[-255.64395142 469.04766846]
[-263.05267334 455.99777222]
[-269.52239990 442.45776367]
[-275.02090454 428.49511719]
[-279.52078247 414.17941284]
[-282.99966431 399.58193970]
[-285.44015503 384.77542114]
[-286.83013916 369.83361816]
[-287.16268921 354.83102417]
[-286.43612671 339.84231567]
[-284.65408325 324.94219971]
[-281.82543945 310.20492554]
[-277.96426392 295.70388794]
[-273.08984375 281.51132202]
[-267.22640991 267.69793701]
[-260.40319824 254.33259583]
[-252.65420532 241.48182678]
[-244.01803589 229.20968628]
[-234.53770447 217.57730103]
[-224.26045227 206.64263916]
[-213.23747253 196.46015930]
[-201.52369690 187.08059692]
[-189.17745972 178.55067444]
[-176.26028442 170.91290283]
[-162.83653259 164.20532227]
[-148.97306824 158.46134949]
[-134.73895264 153.70960999]
[-120.20511627 149.97377014]
[-105.44396210 147.27244568]
[-90.52902222 145.61907959]
[-75.53461456 145.02192688]
[-60.53543472 145.48396301]
[-45.60620499 147.00286865]
[-30.82131004 149.57110596]
[-16.25440407 153.17584229]
[-1.97806156 157.79914856]
[11.93659496 163.41798401]
[25.42024231 170.00434875]
[38.40570450 177.52542114]
[46.82032013 165.10792542]
[55.23493958 152.69042969]
[63.64955902 140.27293396]
[72.06417847 127.85544586]
[72.79866028 112.97895813]
[86.94539642 105.89514923]
[88.14216614 91.96463013]
[100.63710785 85.69023132]
[109.05172729 73.27273560]
[105.00443268 60.42617798]
[109.03614044 47.77881622]
[119.46149445 39.87982178]
[132.33903503 39.43442917]
[140.93759155 27.14359093]
[149.53616333 14.85275269]
[158.13471985 2.56191492]
[160.48983765 -6.26368618]
[166.95393372 -9.84661007]
[175.73454285 -22.00806618]
[184.51513672 -34.16952133]
[173.02174377 -43.81858444]
[162.26336670 -54.28087234]
[152.29737854 -65.50056458]
[143.17695618 -77.41780090]
[134.95079041 -89.96899414]
[127.66274261 -103.08718109]
[121.35171509 -116.70236969]
[116.05136871 -130.74191284]
[111.78999329 -145.13090515]
[108.59031677 -159.79257202]
[106.46942139 -174.64868164]
[105.43860626 -189.61997986]
[105.50338745 -204.62658691]
[106.66341400 -219.58843994]
[108.91249084 -234.42568970]
[112.23863220 -249.05918884]
[116.62407684 -263.41085815]
[122.04543304 -277.40411377]
[128.47377014 -290.96429443]
[135.87480164 -304.01907349]
[144.20903015 -316.49877930]
[153.43197632 -328.33682251]
[163.49446106 -339.47006226]
[174.34277344 -349.83908081]
[185.91903687 -359.38854980]
[198.16149902 -368.06753540]
[211.00482178 -375.82971191]
[224.38047791 -382.63369751]
[238.21713257 -388.44314575]
[252.44091797 -393.22708130]
[266.97598267 -396.95996094]
[281.74475098 -399.62191772]
[296.66842651 -401.19869995]
[311.66738892 -401.68191528]
[326.66162109 -401.06896973]
[341.57107544 -399.36315918]
[356.31628418 -396.57357788]
[370.81851196 -392.71508789]
[385.00039673 -387.80831909]
[398.78625488 -381.87939453]
[412.10256958 -374.95999146]
[424.87826538 -367.08700562]
[437.04519653 -358.30242920]
[448.53842163 -348.65319824]
[459.29666138 -338.19073486]
[469.26245117 -326.97085571]
[478.38265991 -315.05349731]
[486.60864258 -302.50216675]
[493.89645386 -289.38385010]
[500.20727539 -275.76855469]
[505.50738525 -261.72894287]
[509.76852417 -247.33987427]
[512.96795654 -232.67814636]
[515.08862305 -217.82199097]
[516.11920166 -202.85067749]
[516.05413818 -187.84407043]
[514.89385986 -172.88224792]
[512.64453125 -158.04502869]
[509.31817627 -143.41159058]
[504.93249512 -129.05999756]
[499.51092529 -115.06683350]
[493.08233643 -101.50674438]
[485.68112183 -88.45208740]
[477.34667969 -75.97251892]
[468.12353516 -64.13462067]
[458.06085205 -53.00154877]
[447.21237183 -42.63270950]
[435.63595581 -33.08342361]
[423.39337158 -24.40464401]
[410.54989624 -16.64267349]
[397.17413330 -9.83892727]
[383.33740234 -4.02970505]
[369.11352539 0.75399721]
[354.57839966 4.48665619]
[339.80960083 7.14835644]
[324.88589478 8.72489643]
[309.88690186 9.20786381]
[294.89270020 8.59468269]
[279.98324585 6.88862467]
[265.23809814 4.09879208]
[250.73594666 0.24007000]
[236.55413818 -4.66695309]
[222.76837158 -10.59609604]
[209.45216370 -17.51572418]
[196.67658997 -25.38891792]
[187.89599609 -13.22746277]
[179.11538696 -1.06600666]
[170.42556763 11.16047859]
[161.82699585 23.45131683]
[153.22843933 35.74215317]
[144.62986755 48.03299332]
[148.26206970 64.45389557]
[138.70593262 78.70153046]
[121.46921539 81.68735504]
[113.05460358 94.10485077]
[111.85783386 108.03536987]
[99.36289215 114.30976868]
[98.02654266 130.07443237]
[84.48167419 136.27006531]
[76.06705475 148.68756104]
[67.65243530 161.10505676]
[59.23781586 173.52255249]
[50.82320023 185.94004822]
[62.62128830 195.21334839]
[73.73585510 205.29576111]
[84.11153412 216.13708496]
[93.69662476 227.68330383]
[102.44337463 239.87687683]
[110.30821228 252.65705872]
[117.25195312 265.96020508]
[123.24000549 279.72000122]
[128.24253845 293.86791992]
[132.23461914 308.33346558]
[135.19636536 323.04458618]
[137.11302185 337.92797852]
[137.97505188 352.90948486]
[137.77813721 367.91448975]
[136.52326965 382.86822510]
[134.21670532 397.69619751]
[130.86993408 412.32452393]
[126.49962616 426.68035889]
[121.12755585 440.69210815]
[114.78048706 454.29003906]
[107.49004364 467.40637207]
[99.29253387 479.97579956]
[90.22882080 491.93563843]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 187]
[65 186]
[66 185]
[67 184]
[68 183]
[70 181]
[72 179]
[73 178]
[77 175]
[78 174]
[79 173]
[80 172]
[82 171]
[83 170]
[84 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
