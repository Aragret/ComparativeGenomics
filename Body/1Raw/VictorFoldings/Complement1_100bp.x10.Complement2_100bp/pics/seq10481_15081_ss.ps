%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[7.11736107 495.69387817]
[10.14902306 510.58944702]
[7.24472570 525.51031494]
[-1.15264714 538.18127441]
[-13.76255703 546.66998291]
[-28.66208458 549.68206787]
[-43.57915878 546.75817871]
[-56.23903656 538.34411621]
[-64.71117401 525.72308350]
[-67.70363617 510.81958008]
[-64.76009369 495.90637207]
[-56.32941437 483.25756836]
[-43.69721603 474.80203247]
[-28.78981400 471.82919312]
[-25.90454292 457.10928345]
[-23.01926994 442.38940430]
[-20.13399696 427.66949463]
[-17.24872398 412.94961548]
[-18.69888496 410.55062866]
[-19.28614616 407.43264771]
[-18.73190689 403.92150879]
[-16.88052559 400.43768311]
[-13.72863293 397.45114136]
[-18.03223801 383.19180298]
[-7.08562899 371.76892090]
[-3.32932830 357.24685669]
[0.42697230 342.72479248]
[-5.43981600 332.14617920]
[-2.42922950 320.01687622]
[8.37415218 312.97061157]
[12.34624863 298.50607300]
[16.31834412 284.04156494]
[20.29044151 269.57702637]
[7.29742002 277.07244873]
[-7.49514103 274.58648682]
[-17.32428360 263.25564575]
[-17.69625473 248.26023865]
[-8.44099426 236.45599365]
[6.21011639 233.23963928]
[19.55878639 240.08164978]
[25.50230217 253.85578918]
[30.95765877 239.88298035]
[36.41301727 225.91018677]
[41.86837387 211.93739319]
[47.32373047 197.96459961]
[32.74742508 201.50454712]
[20.79863930 192.43667603]
[20.28557396 177.44544983]
[31.58644295 167.58186340]
[46.37066269 170.11697388]
[53.73974609 183.18035889]
[60.21924210 169.65200806]
[66.69873810 156.12365723]
[72.97609711 142.50035095]
[71.05504608 127.73014069]
[83.71765137 118.24494934]
[89.79148102 104.52967834]
[95.76304626 90.76957703]
[101.63200378 76.96540070]
[107.50096893 63.16122437]
[113.36992645 49.35704422]
[119.23889160 35.55286789]
[108.70233154 19.57424545]
[109.91551971 0.62331533]
[122.20760345 -13.65371132]
[140.47434998 -17.60578346]
[145.72106934 -31.65825462]
[150.96778870 -45.71072388]
[156.21450806 -59.76319504]
[153.79299927 -75.39799500]
[165.49330139 -84.61493683]
[170.74002075 -98.66741180]
[175.98674011 -112.71987915]
[180.06640625 -127.15443420]
[175.12808228 -142.18518066]
[185.16900635 -153.18650818]
[188.05427551 -167.90640259]
[190.93954468 -182.62629700]
[193.82481384 -197.34617615]
[183.80122375 -211.68309021]
[187.18124390 -228.50242615]
[201.39448547 -237.49256897]
[204.06027222 -252.25378418]
[206.72607422 -267.01501465]
[200.02635193 -278.03665161]
[202.55059814 -290.27642822]
[212.41140747 -297.28292847]
[215.29667664 -312.00280762]
[210.35833740 -327.03356934]
[220.39926147 -338.03488159]
[223.28454590 -352.75476074]
[226.16981506 -367.47467041]
[229.05508423 -382.19454956]
[231.72088623 -396.95578003]
[234.16661072 -411.75503540]
[236.61233521 -426.55432129]
[239.05805969 -441.35357666]
[241.50378418 -456.15286255]
[243.94952393 -470.95211792]
[230.14505005 -477.02563477]
[218.28520203 -486.34201050]
[209.11550903 -498.31561279]
[203.21235657 -512.19378662]
[200.94683838 -527.10412598]
[202.46138000 -542.10937500]
[207.66075134 -556.26623535]
[216.21812439 -568.68487549]
[227.59558105 -578.58459473]
[241.07792664 -585.34307861]
[255.81762695 -588.53552246]
[270.88815308 -587.96124268]
[285.34216309 -583.65631104]
[298.27105713 -575.89135742]
[308.86212158 -565.15447998]
[316.44958496 -552.12060547]
[320.55648804 -537.60913086]
[320.92468262 -522.53210449]
[317.53100586 -507.83743286]
[310.58877563 -494.44876099]
[300.53442383 -483.20773315]
[287.99996948 -474.82095337]
[273.77331543 -469.81561279]
[258.74877930 -468.50640869]
[256.30307007 -453.70712280]
[253.85733032 -438.90786743]
[251.41160583 -424.10858154]
[248.96588135 -409.30932617]
[246.52015686 -394.51004028]
[248.52378845 -390.17477417]
[247.82531738 -384.53482056]
[243.77497864 -379.30929565]
[240.88970947 -364.58938599]
[238.00442505 -349.86950684]
[235.11915588 -335.14959717]
[240.26387024 -321.17172241]
[230.01657104 -309.11752319]
[227.13128662 -294.39764404]
[233.70494080 -278.12637329]
[221.48728943 -264.34921265]
[218.82148743 -249.58798218]
[216.15570068 -234.82676697]
[224.91142273 -225.37338257]
[226.64959717 -212.40954590]
[220.51353455 -200.63842773]
[208.54470825 -194.46090698]
[205.65943909 -179.74101257]
[202.77416992 -165.02113342]
[199.88888550 -150.30123901]
[205.03359985 -136.32334900]
[194.78630066 -124.26916504]
[205.46913147 -134.79898071]
[219.79466248 -139.24635315]
[234.56254578 -136.61770630]
[246.47358704 -127.50028992]
[252.86682129 -113.93096924]
[252.31401062 -98.94116211]
[244.93862915 -85.87962341]
[232.38836670 -77.66433716]
[217.46697998 -76.13062286]
[203.50794983 -81.62110901]
[193.62976074 -92.90921021]
[190.03921509 -107.47316742]
[184.79249573 -93.42069244]
[179.54577637 -79.36822510]
[182.34255981 -64.73854828]
[170.26696777 -54.51647949]
[165.02024841 -40.46400833]
[159.77354431 -26.41153526]
[154.52682495 -12.35906506]
[162.33399963 -4.39046764]
[166.62327576 5.96329069]
[166.73957825 17.22105598]
[162.62782288 27.75681877]
[154.84637451 36.03456116]
[144.49150085 40.83218002]
[133.04306030 41.42182922]
[127.17410278 55.22600555]
[121.30514526 69.03018188]
[115.43618774 82.83435822]
[109.56722260 96.63853455]
[109.56221771 104.69908905]
[103.50675201 110.60351562]
[97.43291473 124.31877899]
[98.91952515 140.06999207]
[86.69136047 148.57417297]
[87.01469421 155.17773438]
[84.35397339 160.19944763]
[80.22708130 162.60314941]
[73.74758911 176.13150024]
[67.26808929 189.65985107]
[61.29652786 203.41995239]
[55.84117126 217.39274597]
[50.38581467 231.36553955]
[44.93045425 245.33834839]
[39.47509766 259.31115723]
[34.75496674 273.54913330]
[30.78286934 288.01364136]
[26.81077194 302.47817993]
[22.83867645 316.94268799]
[27.90637589 334.64581299]
[14.94903183 346.48110962]
[11.19273090 361.00317383]
[7.43642998 375.52520752]
[11.47135925 390.82324219]
[0.79342645 401.20742798]
[-2.52883315 415.83489990]
[-5.41410589 430.55477905]
[-8.29937840 445.27465820]
[-11.18465137 459.99456787]
[-14.06992340 474.71444702]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[18 206]
[23 205]
[25 203]
[26 202]
[27 201]
[30 199]
[31 198]
[32 197]
[33 196]
[41 195]
[42 194]
[43 193]
[44 192]
[45 191]
[51 190]
[52 189]
[53 188]
[54 185]
[56 183]
[57 182]
[58 180]
[59 179]
[60 178]
[61 177]
[62 176]
[66 169]
[67 168]
[68 167]
[69 166]
[71 164]
[72 163]
[73 162]
[74 150]
[76 148]
[77 147]
[78 146]
[79 145]
[82 141]
[83 140]
[84 139]
[87 137]
[88 136]
[90 134]
[91 133]
[92 132]
[93 131]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
