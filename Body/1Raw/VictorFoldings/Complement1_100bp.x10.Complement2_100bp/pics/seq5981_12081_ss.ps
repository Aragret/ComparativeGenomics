%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[77.19808197 701.94256592]
[62.19342422 701.97509766]
[47.21469116 701.09283447]
[32.31760406 699.29907227]
[17.55758476 696.60040283]
[2.98954058 693.00695801]
[-11.33233452 688.53204346]
[-25.35476112 683.19238281]
[-39.02557755 677.00775146]
[-52.29392242 670.00115967]
[-65.11043549 662.19873047]
[-77.42745209 653.62951660]
[-89.19912720 644.32525635]
[-100.38169098 634.32073975]
[-110.93354034 623.65307617]
[-120.81540680 612.36193848]
[-129.99053955 600.48937988]
[-138.42480469 588.07952881]
[-146.08683777 575.17858887]
[-152.94812012 561.83453369]
[-158.98312378 548.09698486]
[-164.16940308 534.01715088]
[-168.48768616 519.64721680]
[-171.92187500 505.04083252]
[-174.45921326 490.25222778]
[-176.09024048 475.33645630]
[-176.80892944 460.34896851]
[-176.61256409 445.34558105]
[-175.50190735 430.38204956]
[-173.48107910 415.51403809]
[-170.55758667 400.79690552]
[-166.74230957 386.28536987]
[-162.04945374 372.03344727]
[-156.49647522 358.09408569]
[-150.10401917 344.51922607]
[-142.89587402 331.35928345]
[-134.89884949 318.66329956]
[-126.14269257 306.47842407]
[-116.65999603 294.85006714]
[-106.48601532 283.82141113]
[-95.65860748 273.43353271]
[-84.21805573 263.72503662]
[-72.20690918 254.73210144]
[-59.66985703 246.48811340]
[-46.65353775 239.02378845]
[-33.20637131 232.36686707]
[-19.37838554 226.54211426]
[-5.22101831 221.57121277]
[9.21306133 217.47265625]
[23.87015915 214.26168823]
[38.69574738 211.95024109]
[53.63467407 210.54692078]
[68.63137054 210.05696106]
[83.63003540 210.48216248]
[84.96826935 195.54197693]
[86.30650330 180.60179138]
[78.07575226 165.10270691]
[88.79380035 150.12922668]
[89.90944672 135.17077637]
[91.02509308 120.21232605]
[92.14074707 105.25386810]
[89.70652771 100.60752106]
[90.04884338 94.92807770]
[93.51882935 89.86881256]
[91.17991638 83.68487549]
[92.16694641 78.08820343]
[95.35437012 74.53160095]
[97.35838318 59.66607666]
[99.36239624 44.80054855]
[101.36640930 29.93501854]
[103.37042236 15.06949043]
[105.37443542 0.20396213]
[107.37844849 -14.66156578]
[109.38246918 -29.52709389]
[100.66854858 -17.31776619]
[88.64572144 -8.34828854]
[74.45991516 -3.47357488]
[59.46322632 -3.15825248]
[45.08505249 -7.43237543]
[32.69582748 -15.88856220]
[23.47641182 -27.72082138]
[18.30554008 -41.80138016]
[17.67607117 -56.78816605]
[21.64799881 -71.25273895]
[29.84274483 -83.81642151]
[41.47923660 -93.28172302]
[55.44836044 -98.74648285]
[70.41867065 -99.68982697]
[84.96328735 -96.02183533]
[97.69590759 -88.09213257]
[107.40295410 -76.65650940]
[113.15919495 -62.80495453]
[114.41591644 -47.85656357]
[120.28487396 -61.66074371]
[126.15383148 -75.46492004]
[132.02279663 -89.26909637]
[137.89175415 -103.07327271]
[125.01657104 -110.81767273]
[113.34455109 -120.27864838]
[103.10289001 -131.27203369]
[94.49094391 -143.58384705]
[87.67635345 -156.97441101]
[82.79176331 -171.18310547]
[79.93225098 -185.93333435]
[79.15348053 -200.93798828]
[80.47061157 -215.90499878]
[83.85800171 -230.54301453]
[89.24971771 -244.56712341]
[96.54080963 -257.70434570]
[105.58934784 -269.69891357]
[116.21920776 -280.31741333]
[128.22348022 -289.35308838]
[141.36848450 -296.63012695]
[155.39834595 -302.00680542]
[170.03999329 -305.37854004]
[185.00839233 -306.67962646]
[200.01220703 -305.88479614]
[214.75936890 -303.00949097]
[228.96282959 -298.10971069]
[242.34609985 -291.28076172]
[254.64866638 -282.65563965]
[265.63107300 -272.40222168]
[275.07955933 -260.72009277]
[282.81018066 -247.83660889]
[288.67245483 -234.00260925]
[292.55227661 -219.48733521]
[294.37414551 -204.57334900]
[294.10256958 -189.55094910]
[291.74282837 -174.71255493]
[287.34091187 -160.34701538]
[280.98245239 -146.73391724]
[272.79122925 -134.13829041]
[262.92666626 -122.80529022]
[251.58084106 -112.95551300]
[238.97454834 -104.78069305]
[225.35319519 -98.43995667]
[210.98193359 -94.05673218]
[196.14047241 -91.71633148]
[181.11773682 -91.46431732]
[166.20614624 -93.30558777]
[151.69593811 -97.20431519]
[145.82696533 -83.40013885]
[139.95800781 -69.59595490]
[134.08905029 -55.79178238]
[128.22009277 -41.98760605]
[124.24799347 -27.52308083]
[122.24398041 -12.65755272]
[120.23996735 2.20797586]
[118.23595428 17.07350349]
[116.23194122 31.93903160]
[114.22792816 46.80456161]
[112.22391510 61.67008972]
[110.21990204 76.53561401]
[108.43743134 91.42933655]
[107.09919739 106.36952209]
[105.98355103 121.32797241]
[104.86790466 136.28642273]
[103.75225067 151.24487305]
[111.56224823 161.50971985]
[110.32506561 173.94567871]
[101.24668884 181.94001770]
[99.90845490 196.88020325]
[98.57022095 211.82038879]
[113.40569305 214.06752014]
[128.07658386 217.21488953]
[142.52830505 221.25080872]
[156.70709229 226.16026306]
[170.56021118 231.92497253]
[184.03611755 238.52351379]
[197.08470154 245.93132019]
[209.65737915 254.12084961]
[221.70742798 263.06161499]
[233.18997192 272.72039795]
[244.06233215 283.06121826]
[254.28405762 294.04562378]
[263.81710815 305.63278198]
[272.62600708 317.77954102]
[280.67803955 330.44073486]
[287.94317627 343.56927490]
[294.39447021 357.11630249]
[300.00784302 371.03143311]
[304.76248169 385.26287842]
[308.64065552 399.75772095]
[311.62792969 414.46203613]
[313.71322632 429.32113647]
[314.88879395 444.27969360]
[315.15020752 459.28210449]
[314.49655151 474.27255249]
[312.93020630 489.19528198]
[310.45703125 503.99475098]
[307.08624268 518.61590576]
[302.83032227 533.00439453]
[297.70516968 547.10662842]
[291.72979736 560.87023926]
[284.92645264 574.24389648]
[277.32043457 587.17791748]
[268.94009399 599.62426758]
[259.81652832 611.53649902]
[249.98371887 622.87036133]
[239.47824097 633.58374023]
[228.33917236 643.63665771]
[216.60795593 652.99188232]
[204.32823181 661.61444092]
[191.54566956 669.47241211]
[178.30784607 676.53643799]
[164.66398621 682.78027344]
[150.66484070 688.18078613]
[136.36251831 692.71771240]
[121.81018829 696.37432861]
[107.06201172 699.13696289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 163]
[55 162]
[56 161]
[58 158]
[59 157]
[60 156]
[61 155]
[64 154]
[67 153]
[68 152]
[69 151]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
[93 145]
[94 144]
[95 143]
[96 142]
[97 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
