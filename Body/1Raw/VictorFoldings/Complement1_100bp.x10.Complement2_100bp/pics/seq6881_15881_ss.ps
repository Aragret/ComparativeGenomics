%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[90.43916321 569.74731445]
[76.94573975 576.33209229]
[62.82882309 581.44531250]
[48.24837875 585.02899170]
[33.36960983 587.04254150]
[18.36110497 587.46313477]
[3.39292288 586.28601074]
[-11.36533546 583.52447510]
[-25.74644852 579.20989990]
[-39.58746719 573.39111328]
[-52.73155975 566.13403320]
[-65.02979279 557.52093506]
[-76.34282684 547.64941406]
[-86.54246521 536.63122559]
[-95.51314545 524.59136963]
[-103.15322113 511.66613770]
[-109.37612152 498.00204468]
[-114.11134338 483.75387573]
[-117.30522156 469.08312988]
[-118.92157745 454.15597534]
[-118.94209290 439.14160156]
[-117.36653137 424.21011353]
[-114.21275330 409.53067017]
[-109.51648712 395.26962280]
[-103.33094788 381.58859253]
[-95.72621918 368.64251709]
[-86.78847504 356.57815552]
[-76.61898041 345.53219604]
[-65.33296967 335.62976074]
[-53.05831146 326.98309326]
[-39.93410110 319.69015503]
[-26.10903358 313.83355713]
[-11.73976517 309.47967529]
[3.01089168 306.67785645]
[17.97580147 305.45983887]
[32.98539734 305.83941650]
[47.86961365 307.81228638]
[51.40928650 293.23590088]
[54.94895935 278.65954590]
[58.48863220 264.08316040]
[62.02830505 249.50677490]
[65.56797791 234.93040466]
[68.78125000 220.27862549]
[71.66651917 205.55873108]
[74.55179596 190.83883667]
[77.43706512 176.11894226]
[80.32234192 161.39904785]
[75.17763519 147.42117310]
[85.42493439 135.36697388]
[88.31020355 120.64708710]
[91.19548035 105.92720032]
[93.19949341 91.06166840]
[94.31513977 76.10321808]
[95.43079376 61.14476395]
[96.54644012 46.18630981]
[97.66208649 31.22785568]
[98.77774048 16.26940346]
[99.89338684 1.31094933]
[89.72844696 12.34154701]
[75.24079132 16.22842026]
[60.91957092 11.76718140]
[51.20237350 0.34019247]
[49.10018158 -14.51176929]
[55.26437378 -28.18666267]
[67.78491974 -36.44717026]
[82.78218079 -36.73368835]
[95.60910034 -28.95743370]
[102.29116058 -15.52770996]
[105.39527130 -30.20301247]
[108.49938202 -44.87831497]
[96.32883453 -51.30660248]
[86.24981689 -60.66115189]
[78.94677734 -72.29769135]
[74.91330719 -85.41730499]
[74.41878510 -99.12126923]
[77.49040985 -112.47261810]
[83.91178131 -124.56021881]
[93.23812103 -134.56094360]
[104.82711029 -141.79568481]
[117.88307953 -145.77557373]
[131.51168823 -146.23484802]
[135.05136108 -160.81121826]
[138.59103394 -175.38760376]
[142.13070679 -189.96397400]
[145.67037964 -204.54034424]
[149.21005249 -219.11672974]
[147.73887634 -224.12500000]
[148.28163147 -228.73571777]
[150.34962463 -232.24832153]
[153.24694824 -234.25775146]
[157.43395996 -248.66154480]
[161.62097168 -263.06533813]
[165.80798340 -277.46911621]
[169.99499512 -291.87289429]
[174.18200684 -306.27667236]
[178.36901855 -320.68045044]
[182.55603027 -335.08422852]
[169.03256226 -341.65872192]
[156.81481934 -350.42428589]
[146.25433350 -361.12866211]
[137.65492249 -373.46389771]
[131.26403809 -387.07510376]
[127.26554108 -401.57061768]
[125.77448273 -416.53341675]
[126.83377075 -431.53292847]
[130.41291809 -446.13763428]
[136.40893555 -459.92733765]
[144.64932251 -472.50524902]
[154.89698792 -483.50952148]
[166.85707092 -492.62347412]
[180.18547058 -499.58493042]
[194.49870300 -504.19357300]
[209.38493347 -506.31680298]
[224.41586304 -505.89355469]
[239.15901184 -502.93597412]
[253.19021606 -497.52917480]
[266.10574341 -489.82873535]
[277.53402710 -480.05618286]
[287.14617920 -468.49267578]
[294.66571045 -455.47097778]
[299.87625122 -441.36572266]
[302.62786865 -426.58273315]
[302.84140015 -411.54736328]
[300.51068115 -396.69219971]
[295.70281982 -382.44467163]
[288.55612183 -369.21469116]
[279.27618408 -357.38290405]
[268.13006592 -347.28976440]
[255.43840027 -339.22561646]
[241.56640625 -333.42254639]
[226.91317749 -330.04751587]
[211.90032959 -329.19757080]
[196.95980835 -330.89721680]
[192.77279663 -316.49343872]
[188.58578491 -302.08966064]
[184.39877319 -287.68588257]
[180.21176147 -273.28210449]
[176.02474976 -258.87832642]
[171.83773804 -244.47453308]
[167.65072632 -230.07075500]
[163.78642273 -215.57705688]
[160.24674988 -201.00068665]
[156.70707703 -186.42430115]
[153.16740417 -171.84793091]
[149.62773132 -157.27154541]
[146.08805847 -142.69517517]
[160.10636902 -134.37020874]
[170.88217163 -122.11016846]
[177.35409546 -107.10519409]
[178.87930298 -90.81660461]
[175.29736328 -74.83459473]
[166.94694519 -60.72303009]
[154.63395691 -49.86635590]
[139.55363464 -43.33383560]
[123.17468262 -41.77420425]
[120.07057190 -27.09890175]
[116.96646118 -12.42359924]
[114.85183716 2.42659807]
[113.73619080 17.38505173]
[112.62054443 32.34350586]
[111.50489044 47.30195999]
[110.38924408 62.26041031]
[109.27359772 77.21886444]
[108.15794373 92.17731476]
[118.84541321 81.65219879]
[133.66064453 79.30515289]
[147.07795715 86.01157379]
[154.09298706 99.27012634]
[152.08932495 114.13570404]
[141.81428528 125.06381226]
[127.10019684 127.97853088]
[113.43505859 121.79275513]
[105.91537476 108.81246948]
[103.03009796 123.53236389]
[100.14482880 138.25225830]
[105.08316040 153.28300476]
[95.04222870 164.28433228]
[92.15695953 179.00421143]
[89.27169037 193.72410583]
[86.38641357 208.44400024]
[83.50114441 223.16389465]
[85.19447327 228.10147095]
[84.85814667 232.73182678]
[82.94906616 236.33328247]
[80.14434814 238.47007751]
[76.60468292 253.04644775]
[73.06501007 267.62283325]
[69.52533722 282.19921875]
[65.98566437 296.77557373]
[62.44598770 311.35195923]
[76.57733917 316.42510986]
[90.08938599 322.97161865]
[102.82901001 330.91732788]
[114.65187073 340.17214966]
[125.42401123 350.63128662]
[135.02336121 362.17617798]
[143.34117126 374.67602539]
[150.28317261 387.98919678]
[155.77072144 401.96484375]
[159.74163818 416.44461060]
[162.15093994 431.26446533]
[162.97129822 446.25640869]
[162.19343567 461.25064087]
[159.82617188 476.07727051]
[155.89631653 490.56823730]
[150.44841003 504.55938721]
[143.54415894 517.89221191]
[135.26182556 530.41558838]
[125.69524384 541.98760986]
[114.95279694 552.47723389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 190]
[38 189]
[39 188]
[40 187]
[41 186]
[42 185]
[43 181]
[44 180]
[45 179]
[46 178]
[47 177]
[49 175]
[50 174]
[51 173]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[58 158]
[68 157]
[69 156]
[70 155]
[81 146]
[82 145]
[83 144]
[84 143]
[85 142]
[86 141]
[90 140]
[91 139]
[92 138]
[93 137]
[94 136]
[95 135]
[96 134]
[97 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
