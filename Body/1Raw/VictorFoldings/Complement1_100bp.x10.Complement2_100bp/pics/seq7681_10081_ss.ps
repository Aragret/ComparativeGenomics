%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[116.69937897 666.79370117]
[114.15070343 651.97637939]
[114.07579803 636.94158936]
[116.47670746 622.09954834]
[121.28793335 607.85522461]
[128.37821960 594.59710693]
[137.55413818 582.68688965]
[148.56535339 572.44958496]
[161.11149597 564.16436768]
[174.85028076 558.05737305]
[171.09397888 543.53533936]
[167.33767700 529.01324463]
[163.58137512 514.49121094]
[159.82507324 499.96914673]
[156.06877136 485.44708252]
[153.72460938 483.90988159]
[151.84809875 481.35147095]
[150.83126831 477.94540405]
[150.99612427 474.00366211]
[152.54869080 469.94860840]
[149.66340637 455.22869873]
[146.77813721 440.50881958]
[143.89286804 425.78890991]
[139.52146912 419.82968140]
[141.07592773 410.82849121]
[138.41014099 396.06726074]
[135.74433899 381.30603027]
[125.86832428 370.15643311]
[131.02989197 355.20089722]
[128.36408997 340.43966675]
[114.58974457 340.38671875]
[101.03421021 337.91992188]
[88.11730957 333.11431885]
[76.23932648 326.11749268]
[65.76859283 317.14483643]
[57.03006363 306.47314453]
[50.29523087 294.43191528]
[45.77369690 281.39324951]
[43.60665131 267.76025391]
[43.86245346 253.95478821]
[46.53448868 240.40417480]
[51.54132080 227.52810669]
[58.72918701 215.72563171]
[67.87670135 205.36274719]
[78.70168304 196.76107788]
[90.86988068 190.18789673]
[104.00525665 185.84782410]
[102.00124359 170.98229980]
[99.99723053 156.11677551]
[97.99320984 141.25123596]
[95.98919678 126.38571167]
[93.98518372 111.52018738]
[91.53945923 96.72091675]
[88.65418243 82.00102234]
[85.76891327 67.28113556]
[82.88364410 52.56124115]
[79.99836731 37.84135056]
[77.11309814 23.12145805]
[66.86579895 11.06727028]
[72.01049805 -2.91061473]
[69.12522888 -17.63050652]
[58.87792969 -29.68469429]
[64.02263641 -43.66257858]
[61.13736343 -58.38246918]
[58.25209045 -73.10236359]
[55.36681747 -87.82225037]
[52.48154449 -102.54214478]
[43.23615646 -90.73016357]
[28.36366653 -88.77850342]
[16.38370705 -97.80516815]
[14.15894508 -112.63926697]
[22.96382523 -124.78315735]
[37.75451279 -127.28026581]
[50.05771255 -118.70093536]
[40.92670059 -131.62127686]
[47.29793549 -145.08444214]
[45.73741150 -160.00303650]
[44.17688751 -174.92164612]
[40.17167282 -183.13114929]
[42.70589066 -190.07374573]
[41.36765671 -205.01393127]
[40.02942276 -219.95411682]
[38.69118881 -234.89430237]
[23.69399071 -235.90948486]
[9.04027271 -239.25836182]
[-4.90910673 -244.85847473]
[-17.81063080 -252.57191467]
[-29.34659004 -262.20874023]
[-39.23289871 -273.53161621]
[-47.22609711 -286.26168823]
[-53.12934875 -300.08551025]
[-56.79727936 -314.66265869]
[-58.13956070 -329.63412476]
[-57.12313843 -344.63122559]
[-53.77304459 -359.28466797]
[-48.17177582 -373.23358154]
[-40.45727158 -386.13449097]
[-30.81950951 -397.66964722]
[-19.49582291 -407.55502319]
[-6.76507092 -415.54718018]
[7.05924082 -421.44927979]
[21.63667488 -425.11599731]
[36.60825348 -426.45706177]
[51.60528183 -425.43939209]
[66.25844574 -422.08807373]
[80.20690155 -416.48565674]
[93.10715485 -408.77011108]
[104.64151764 -399.13137817]
[114.52596283 -387.80688477]
[122.51705933 -375.07546997]
[128.41802979 -361.25067139]
[132.08355713 -346.67294312]
[133.42335510 -331.70126343]
[132.40446472 -316.70431519]
[129.05195618 -302.05142212]
[123.44838715 -288.10342407]
[115.73175049 -275.20379639]
[106.09208679 -263.67022705]
[94.76676941 -253.78672791]
[82.03469849 -245.79667664]
[68.20941162 -239.89685059]
[53.63137054 -236.23252869]
[54.96960831 -221.29234314]
[56.30784225 -206.35215759]
[57.64607620 -191.41197205]
[59.09549332 -176.48216248]
[60.65601730 -161.56356812]
[62.21654129 -146.64495850]
[71.23593140 -134.79170227]
[64.97631836 -120.26145935]
[67.20143890 -105.42741394]
[70.08670807 -90.70752716]
[72.97198486 -75.98763275]
[75.85725403 -61.26774216]
[78.74252319 -46.54785156]
[88.78344727 -35.54652786]
[83.84512329 -20.51577950]
[86.73039246 -5.79588747]
[96.77131653 5.20543528]
[91.83298492 20.23618507]
[94.71826172 34.95607758]
[97.60353088 49.67596817]
[100.48880768 64.39585876]
[103.37407684 79.11575317]
[106.25934601 93.83563995]
[108.63560486 95.74428558]
[110.36989594 98.55973816]
[111.12502289 102.04588318]
[110.65573883 105.84535980]
[108.85071564 109.51617432]
[110.85472870 124.38169861]
[112.85874176 139.24722290]
[114.86275482 154.11276245]
[116.86676788 168.97828674]
[118.87078094 183.84381104]
[135.12286377 184.93179321]
[150.79693604 189.34367371]
[165.22093201 196.88803101]
[177.77684021 207.23912048]
[187.92720032 219.95106506]
[195.23812866 234.47692871]
[199.39782715 250.19238281]
[200.22987366 266.42239380]
[197.70075989 282.47036743]
[191.92117310 297.64788818]
[183.14120483 311.30444336]
[171.73947144 322.85507202]
[158.20684814 331.80566406]
[143.12532043 337.77386475]
[145.79110718 352.53509521]
[155.85780334 364.74050903]
[150.50555420 378.64025879]
[153.17135620 393.40145874]
[155.83714294 408.16268921]
[158.61276245 422.90365601]
[161.49803162 437.62353516]
[164.38330078 452.34341431]
[167.26858521 467.06332397]
[170.59083557 481.69079590]
[174.34713745 496.21282959]
[178.10343933 510.73489380]
[181.85974121 525.25695801]
[185.61604309 539.77899170]
[189.37234497 554.30108643]
[204.34918213 552.98046875]
[219.33911133 554.14312744]
[233.93319702 557.75732422]
[247.73330688 563.72448730]
[260.36294556 571.88183594]
[271.47756958 582.00677490]
[280.77398682 593.82312012]
[287.99856567 607.00854492]
[292.95422363 621.20330811]
[295.50573730 636.02020264]
[295.58355713 651.05493164]
[293.18551636 665.89746094]
[288.37701416 680.14270020]
[281.28930664 693.40222168]
[272.11566162 705.31414795]
[261.10641479 715.55358887]
[248.56187439 723.84118652]
[234.82426453 729.95086670]
[220.26837158 733.71594238]
[205.29127502 735.03363037]
[190.30155945 733.86810303]
[175.70817566 730.25109863]
[161.90922546 724.28125000]
[149.28115845 716.12152100]
[138.16847229 705.99438477]
[128.87432861 694.17626953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 184]
[11 183]
[12 182]
[13 181]
[14 180]
[15 179]
[20 178]
[21 177]
[22 176]
[23 175]
[25 174]
[26 173]
[27 172]
[29 170]
[30 169]
[47 155]
[48 154]
[49 153]
[50 152]
[51 151]
[52 150]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 140]
[60 138]
[61 137]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[74 130]
[76 128]
[77 127]
[78 126]
[80 125]
[81 124]
[82 123]
[83 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
