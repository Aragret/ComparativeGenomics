%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[80.07841492 472.62225342]
[70.64349365 460.94998169]
[62.20469666 448.53845215]
[54.81966400 435.47244263]
[48.53884506 421.84118652]
[43.40514755 407.73782349]
[39.45363998 393.25869751]
[36.71131516 378.50271606]
[35.19690323 363.57067871]
[34.92075348 348.56457520]
[35.88475418 333.58691406]
[38.08231354 318.74002075]
[41.49842453 304.12530518]
[46.10974884 289.84262085]
[51.88478470 275.98950195]
[58.78408813 262.66061401]
[66.76052094 249.94700623]
[75.75960541 237.93551636]
[85.71986389 226.70819092]
[96.57324982 216.34172058]
[108.24562836 206.90693665]
[120.65726471 198.46829224]
[133.72337341 191.08341980]
[127.44600677 177.46009827]
[121.16864777 163.83677673]
[114.89128113 150.21347046]
[108.61392212 136.59014893]
[102.33656311 122.96683502]
[96.05920410 109.34351349]
[90.09387207 103.92250824]
[89.79148102 95.47032166]
[83.71765137 81.75505066]
[77.64381409 68.03978729]
[71.56998444 54.32452011]
[65.49614716 40.60925293]
[59.42231369 26.89398575]
[45.38438797 32.19074631]
[31.07155418 36.69205856]
[16.52884483 40.38376236]
[1.80201888 43.25423813]
[-13.06258869 45.29446030]
[-28.01820755 46.49800110]
[-43.01778030 46.86108017]
[-58.01411438 46.38255310]
[-72.96002960 45.06392670]
[-87.80848694 42.90934753]
[-102.51278687 39.92559433]
[-117.02664185 36.12205887]
[-131.30441284 31.51070786]
[-145.30114746 26.10604668]
[-158.97282410 19.92508507]
[-172.27641296 12.98726654]
[-185.17007446 5.31442308]
[-197.61323547 -3.06930518]
[-209.56674194 -12.13753891]
[-220.99296570 -21.86174583]
[-231.85598755 -32.21133041]
[-242.12161255 -43.15372849]
[-251.75753784 -54.65451431]
[-260.73342896 -66.67749786]
[-269.02108765 -79.18484497]
[-276.59442139 -92.13721466]
[-283.42956543 -105.49385071]
[-289.50506592 -119.21272278]
[-294.80175781 -133.25067139]
[-299.30303955 -147.56352234]
[-302.99468994 -162.10624695]
[-305.86511230 -176.83308411]
[-307.90527344 -191.69769287]
[-309.10876465 -206.65332031]
[-309.47177124 -221.65289307]
[-308.99319458 -236.64923096]
[-307.67449951 -251.59512329]
[-305.51986694 -266.44357300]
[-302.53607178 -281.14785767]
[-298.73248291 -295.66171265]
[-294.12106323 -309.93945312]
[-288.71636963 -323.93618774]
[-282.53533936 -337.60781860]
[-275.59747314 -350.91140747]
[-267.92459106 -363.80502319]
[-259.54083252 -376.24816895]
[-250.47253418 -388.20162964]
[-240.74829102 -399.62783813]
[-230.39866638 -410.49081421]
[-219.45622253 -420.75637817]
[-207.95541382 -430.39227295]
[-195.93238831 -439.36813354]
[-183.42500305 -447.65573120]
[-170.47261047 -455.22900391]
[-157.11595154 -462.06411743]
[-143.39706421 -468.13955688]
[-129.35910034 -473.43621826]
[-115.04622650 -477.93740845]
[-100.50349426 -481.62902832]
[-85.77664185 -484.49938965]
[-70.91201782 -486.53948975]
[-55.95639420 -487.74291992]
[-40.95681763 -488.10589600]
[-25.96048546 -487.62725830]
[-11.01458359 -486.30850220]
[3.83386230 -484.15383911]
[18.53813362 -481.16995239]
[33.05196762 -477.36633301]
[47.32969284 -472.75485229]
[61.32639313 -467.35009766]
[74.99802399 -461.16903687]
[88.30156708 -454.23110962]
[101.19517517 -446.55816650]
[113.63826752 -438.17434692]
[125.59170532 -429.10604858]
[137.01786804 -419.38174438]
[147.88079834 -409.03207397]
[158.14634705 -398.08959961]
[167.78218079 -386.58874512]
[176.75799561 -374.56570435]
[185.04556274 -362.05828857]
[192.61878967 -349.10586548]
[199.45384216 -335.74917603]
[205.52923584 -322.03027344]
[210.82583618 -307.99227905]
[215.32699585 -293.67938232]
[219.01853943 -279.13662720]
[221.88883972 -264.40979004]
[223.92889404 -249.54515076]
[225.13227844 -234.58952332]
[225.49519348 -219.58993530]
[225.01649475 -204.59361267]
[223.69769287 -189.64772034]
[221.54295349 -174.79928589]
[218.55903625 -160.09501648]
[214.75534058 -145.58119202]
[210.14382935 -131.30348206]
[204.73901367 -117.30680847]
[198.55790710 -103.63520050]
[191.61993408 -90.33168030]
[183.94694519 -77.43810272]
[175.56307983 -64.99504089]
[166.49472046 -53.04164124]
[156.77038574 -41.61551666]
[146.42066956 -30.75261497]
[135.47816467 -20.48711586]
[123.97727203 -10.85132122]
[111.95418549 -1.87554598]
[99.44674683 6.41196728]
[86.49429321 13.98514271]
[73.13758087 20.82015228]
[79.21141815 34.53541946]
[85.28524780 48.25068665]
[91.35908508 61.96595383]
[97.43291473 75.68122101]
[103.50675201 89.39648438]
[109.68251801 103.06615448]
[115.95987701 116.68947601]
[122.23724365 130.31278992]
[128.51460266 143.93611145]
[134.79196167 157.55941772]
[141.06932068 171.18273926]
[147.34667969 184.80606079]
[161.44985962 179.67184448]
[175.92884827 175.71983337]
[190.68473816 172.97697449]
[205.61672974 171.46203613]
[220.62283325 171.18534851]
[235.60052490 172.14880371]
[250.44749451 174.34584045]
[265.06231689 177.76142883]
[279.34518433 182.37223816]
[293.19848633 188.14677429]
[306.52761841 195.04560852]
[319.24151611 203.02159119]
[331.25332642 212.02023315]
[342.48101807 221.98008728]
[352.84786987 232.83311462]
[362.28308105 244.50515747]
[370.72216797 256.91647339]
[378.10751343 269.98233032]
[384.38864136 283.61343384]
[389.52267456 297.71664429]
[393.47454834 312.19567871]
[396.21722412 326.95159912]
[397.73199463 341.88363647]
[398.00848389 356.88973999]
[397.04486084 371.86740112]
[394.84762573 386.71435547]
[391.43188477 401.32913208]
[386.82089233 415.61193848]
[381.04617310 429.46517944]
[374.14721680 442.79421997]
[366.17108154 455.50802612]
[357.17227173 467.51974487]
[347.21228027 478.74731445]
[336.35916138 489.11404419]
[324.68698120 498.54910278]
[312.27557373 506.98803711]
[299.20962524 514.37322998]
[285.57846069 520.65423584]
[271.47515869 525.78808594]
[256.99609375 529.73974609]
[242.24012756 532.48223877]
[227.30809021 533.99682617]
[212.30198669 534.27319336]
[197.32432556 533.30938721]
[182.47740173 531.11199951]
[167.86265564 527.69604492]
[153.57991028 523.08489990]
[139.72673035 517.30999756]
[126.39776611 510.41085815]
[113.68405914 502.43457031]
[101.67245483 493.43563843]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 159]
[24 158]
[25 157]
[26 156]
[27 155]
[28 154]
[29 153]
[31 152]
[32 151]
[33 150]
[34 149]
[35 148]
[36 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
