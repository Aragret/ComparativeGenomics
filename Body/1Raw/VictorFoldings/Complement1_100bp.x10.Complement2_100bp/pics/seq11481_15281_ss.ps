%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[-8.89680195 354.62066650]
[-7.54507637 369.57153320]
[-7.64264536 384.58306885]
[-9.18859768 399.51510620]
[-12.16849899 414.22821045]
[-16.55452728 428.58502197]
[-22.30572701 442.45150757]
[-29.36840439 455.69818115]
[-37.67661285 468.20132446]
[-47.15277481 479.84426880]
[-57.70841980 490.51824951]
[-69.24498749 500.12362671]
[-81.65475464 508.57070923]
[-94.82186127 515.78063965]
[-108.62336731 521.68603516]
[-122.93039703 526.23187256]
[-137.60937500 529.37561035]
[-152.52323914 531.08789062]
[-167.53274536 531.35284424]
[-182.49775696 530.16784668]
[-197.27853394 527.54406738]
[-211.73706055 523.50598145]
[-225.73835754 518.09124756]
[-239.15168762 511.35046387]
[-251.85182190 503.34655762]
[-263.72015381 494.15426636]
[-274.64590454 483.85943604]
[-284.52700806 472.55816650]
[-293.27127075 460.35595703]
[-300.79699707 447.36676025]
[-307.03393555 433.71188354]
[-311.92385864 419.51876831]
[-315.42111206 404.91998291]
[-317.49301147 390.05181885]
[-318.12026978 375.05307007]
[-317.29696655 360.06381226]
[-315.03082275 345.22399902]
[-311.34298706 330.67218018]
[-306.26791382 316.54421997]
[-299.85296631 302.97204590]
[-292.15805054 290.08236694]
[-283.25500488 277.99554443]
[-273.22695923 266.82443237]
[-262.16757202 256.67330933]
[-250.18005371 247.63700867]
[-237.37635803 239.79985046]
[-223.87603760 233.23501587]
[-209.80514526 228.00382996]
[-195.29504395 224.15512085]
[-180.48123169 221.72482300]
[-165.50201416 220.73561096]
[-150.49725342 221.19676208]
[-135.60704041 223.10392761]
[-120.97042084 226.43933105]
[-106.72404480 231.17179871]
[-93.00093842 237.25718689]
[-79.92922974 244.63864136]
[-67.63096619 253.24725342]
[-56.22097397 263.00265503]
[-45.41881943 252.59527588]
[-34.61666107 242.18789673]
[-23.81450653 231.78051758]
[-13.01234913 221.37315369]
[-2.76695800 210.41723633]
[6.89385271 198.94253540]
[16.55466270 187.46783447]
[18.83283424 172.74848938]
[33.63977051 167.17488098]
[35.91794205 152.45552063]
[50.72487640 146.88191223]
[60.38568878 135.40721130]
[70.04650116 123.93251038]
[79.70730591 112.45780945]
[89.36811829 100.98310852]
[97.78273773 88.56561279]
[104.85984039 75.34008789]
[104.54886627 59.52193832]
[117.37567902 51.95079041]
[124.45278168 38.72526169]
[131.52989197 25.49973679]
[138.60699463 12.27420807]
[145.68409729 -0.95131904]
[150.72100830 -15.08034897]
[153.60629272 -29.80023956]
[156.49156189 -44.52013016]
[159.37683105 -59.24002457]
[162.26210022 -73.95991516]
[157.32377625 -88.99066162]
[167.36470032 -99.99198914]
[160.99433899 -117.26914215]
[173.03552246 -130.03536987]
[175.70132446 -144.79660034]
[178.36711121 -159.55781555]
[181.03291321 -174.31903076]
[183.69871521 -189.08024597]
[186.36450195 -203.84146118]
[172.35929871 -209.34967041]
[159.69795227 -217.48457336]
[148.86715698 -227.93350220]
[140.28320312 -240.29481506]
[134.27603149 -254.09336853]
[131.07655334 -268.79879761]
[130.80773926 -283.84585571]
[133.47991943 -298.65615845]
[138.99040222 -312.66049194]
[147.12736511 -325.32049561]
[157.57803345 -336.14962769]
[169.94073486 -344.73156738]
[183.74026489 -350.73651123]
[198.44619751 -353.93362427]
[213.49330139 -354.19998169]
[228.30319214 -351.52539062]
[242.30662537 -346.01266479]
[254.96533203 -337.87365723]
[265.79275513 -327.42123413]
[274.37271118 -315.05712891]
[280.37539673 -301.25665283]
[283.57012939 -286.55017090]
[283.83404541 -271.50302124]
[281.15707397 -256.69357300]
[275.64205933 -242.69104004]
[267.50100708 -230.03366089]
[257.04684448 -219.20793152]
[244.68136597 -210.62997437]
[230.87988281 -204.62951660]
[216.17291260 -201.43717957]
[201.12571716 -201.17565918]
[198.45993042 -186.41444397]
[195.79412842 -171.65322876]
[193.12834167 -156.89201355]
[190.46253967 -142.13079834]
[187.79673767 -127.36958313]
[194.43408203 -117.25660706]
[192.33396912 -104.93697357]
[182.08459473 -97.10671234]
[187.22929382 -83.12882996]
[176.98199463 -71.07463837]
[174.09672546 -56.35475159]
[171.21145630 -41.63485718]
[168.32618713 -26.91496658]
[165.44090271 -12.19507599]
[174.71356201 -23.98566055]
[186.89889526 -32.73310089]
[201.03591919 -37.74753189]
[216.00973511 -38.63349915]
[230.63943481 -35.32112885]
[243.77127075 -28.07164955]
[254.36959839 -17.45678711]
[261.59860229 -4.31367159]
[264.88818359 10.32117558]
[263.97888184 25.29358864]
[258.94241333 39.42278290]
[250.17599487 51.59446716]
[238.37097168 60.84873581]
[224.45834351 66.45575714]
[209.53530884 67.97333527]
[194.77876282 65.28179169]
[181.35247803 58.59339142]
[170.31529236 48.43560791]
[162.53764343 35.60952759]
[158.63293457 21.12667084]
[158.90962219 6.12578630]
[151.83251953 19.35131454]
[144.75541687 32.57684326]
[137.67831421 45.80236816]
[130.60121155 59.02789688]
[131.41838074 73.90007019]
[118.08537292 82.41719055]
[111.00826263 95.64272308]
[123.82234192 87.84532928]
[138.63296509 85.46929932]
[153.24305725 88.86711121]
[165.48530579 97.53472137]
[173.54364014 110.18632507]
[176.22265625 124.94515228]
[173.12493896 139.62181091]
[164.71002197 152.03909302]
[152.22619629 160.35498047]
[137.52537537 163.33587646]
[122.78832245 160.53955078]
[110.20120239 152.38084412]
[101.63124847 140.07003784]
[98.34974670 125.43338776]
[100.84281921 110.64392090]
[91.18200684 122.11862183]
[81.52120209 133.59332275]
[71.86038971 145.06802368]
[62.19957733 156.54272461]
[59.23040009 172.08280945]
[45.11447144 176.83567810]
[42.14529419 192.37577820]
[28.02936363 197.12864685]
[18.36855316 208.60334778]
[8.70774174 220.07804871]
[23.64504433 218.70800781]
[36.03959656 227.15638733]
[40.22477722 241.56069946]
[34.28718185 255.33549500]
[20.94139099 262.18310547]
[6.28892803 258.97293091]
[-2.97130156 247.17257690]
[-2.60497642 232.17530823]
[-13.40713310 242.58267212]
[-24.20928955 252.99005127]
[-35.01144409 263.39743042]
[-45.81360245 273.80480957]
[-36.48957825 285.56991577]
[-28.34459877 298.18002319]
[-21.45470810 311.51739502]
[-15.88423920 325.45745850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 206]
[60 205]
[61 204]
[62 203]
[63 202]
[64 194]
[65 193]
[66 192]
[68 190]
[70 188]
[71 187]
[72 186]
[73 185]
[74 184]
[75 169]
[76 168]
[78 166]
[79 165]
[80 164]
[81 163]
[82 162]
[83 141]
[84 140]
[85 139]
[86 138]
[87 137]
[89 135]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
