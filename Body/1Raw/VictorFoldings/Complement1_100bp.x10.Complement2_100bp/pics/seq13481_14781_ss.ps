%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[85.31154633 351.53652954]
[80.93530273 365.89462280]
[75.28962708 379.80261230]
[68.41995239 393.14855957]
[60.38160706 405.82495117]
[51.23930740 417.72976685]
[41.06666183 428.76715088]
[29.94557571 438.84820557]
[17.96559525 447.89178467]
[5.22317553 455.82507324]
[-8.17908764 462.58416748]
[-22.13328362 468.11468506]
[-36.52706146 472.37210083]
[-51.24452209 475.32208252]
[-66.16717529 476.94094849]
[-81.17486572 477.21560669]
[-96.14676666 476.14385986]
[-110.96231079 473.73434448]
[-125.50222778 470.00646973]
[-139.64944458 464.99026489]
[-153.29005432 458.72604370]
[-166.31422424 451.26434326]
[-178.61708069 442.66516113]
[-190.09959412 432.99777222]
[-200.66928101 422.34002686]
[-210.24107361 410.77770996]
[-218.73786926 398.40393066]
[-226.09126282 385.31829834]
[-232.24206543 371.62615967]
[-237.14074707 357.43783569]
[-240.74784851 342.86749268]
[-243.03434753 328.03244019]
[-243.98182678 313.05218506]
[-243.58265686 298.04727173]
[-241.84005737 283.13858032]
[-238.76805115 268.44610596]
[-234.39137268 254.08813477]
[-228.74526978 240.18029785]
[-221.87518311 226.83457947]
[-213.83645630 214.15843201]
[-204.69378662 202.25389099]
[-194.52081299 191.21682739]
[-183.39941406 181.13610840]
[-171.41915894 172.09289551]
[-158.67649841 164.16000366]
[-145.27403259 157.40130615]
[-131.31965637 151.87121582]
[-116.92575836 147.61425781]
[-102.20819855 144.66470337]
[-87.28549957 143.04631042]
[-72.27780151 142.77210999]
[-57.30593491 143.84429932]
[-42.49045944 146.25425720]
[-27.95065689 149.98257446]
[-13.80359459 154.99923706]
[-0.16317968 161.26385498]
[12.86076164 168.72596741]
[25.16336441 177.32551575]
[34.82417679 165.85081482]
[44.48498535 154.37611389]
[54.14579773 142.90141296]
[56.42396545 128.18206787]
[71.23090363 122.60844421]
[80.89171600 111.13375092]
[90.55252075 99.65904999]
[91.29879761 94.46703339]
[94.90093231 90.06272125]
[100.67582703 87.99209595]
[110.67400360 76.81011963]
[120.67217255 65.62814331]
[130.67034912 54.44617081]
[140.66851807 43.26419449]
[150.66668701 32.08221817]
[160.15559387 20.46495628]
[169.11628723 8.43557930]
[178.07698059 -3.59379888]
[187.03767395 -15.62317657]
[195.99836731 -27.65255356]
[204.95907593 -39.68193054]
[193.53080750 -49.40579987]
[182.75592041 -59.84902573]
[172.67964172 -70.96781158]
[163.34420776 -82.71551514]
[154.78877258 -95.04286194]
[147.04924011 -107.89815521]
[140.15806580 -121.22746277]
[134.14413452 -134.97488403]
[129.03269958 -149.08276367]
[124.84518433 -163.49191284]
[121.59915924 -178.14190674]
[119.30823517 -192.97128296]
[117.98201752 -207.91786194]
[117.62608337 -222.91893005]
[118.24190521 -237.91159058]
[119.82691956 -252.83293152]
[122.37446594 -267.62039185]
[125.87386322 -282.21194458]
[130.31042480 -296.54635620]
[135.66555786 -310.56353760]
[141.91679382 -324.20471191]
[149.03791809 -337.41259766]
[156.99903870 -350.13183594]
[165.76679993 -362.30911255]
[175.30439758 -373.89328003]
[185.57183838 -384.83578491]
[196.52606201 -395.09072876]
[208.12110901 -404.61511230]
[220.30834961 -413.36895752]
[233.03666687 -421.31558228]
[246.25268555 -428.42163086]
[259.90097046 -434.65728760]
[273.92425537 -439.99642944]
[288.26373291 -444.41665649]
[302.85925293 -447.89938354]
[317.64959717 -450.43005371]
[332.57275391 -451.99804688]
[347.56610107 -452.59677124]
[362.56674194 -452.22372437]
[377.51181030 -450.88046265]
[392.33856201 -448.57263184]
[406.98483276 -445.30987549]
[421.38922119 -441.10592651]
[435.49124146 -435.97839355]
[449.23178101 -429.94879150]
[462.55322266 -423.04241943]
[475.39968872 -415.28820801]
[487.71728516 -406.71871948]
[499.45431519 -397.36990356]
[510.56158447 -387.28094482]
[520.99255371 -376.49414062]
[530.70336914 -365.05480957]
[539.65332031 -353.01086426]
[547.80493164 -340.41284180]
[555.12402344 -327.31356812]
[561.57977295 -313.76803589]
[567.14520264 -299.83300781]
[571.79699707 -285.56695557]
[575.51550293 -271.02972412]
[578.28527832 -256.28228760]
[580.09460449 -241.38647461]
[580.93597412 -226.40476990]
[580.80578613 -211.40003967]
[579.70465088 -196.43521118]
[577.63708496 -181.57302856]
[574.61187744 -166.87585449]
[570.64166260 -152.40533447]
[565.74304199 -138.22215271]
[559.93664551 -124.38578796]
[553.24682617 -110.95429993]
[545.70159912 -97.98400879]
[537.33264160 -85.52931976]
[528.17498779 -73.64247894]
[518.26715088 -62.37334061]
[507.65066528 -51.76916885]
[496.36999512 -41.87444305]
[484.47250366 -32.73066711]
[472.00808716 -24.37619400]
[459.02902222 -16.84606361]
[445.58975220 -10.17185974]
[431.74664307 -4.38157845]
[417.55776978 0.50049484]
[403.08264160 4.45388269]
[388.38195801 7.46200323]
[373.51736450 9.51223850]
[358.55126953 10.59599018]
[343.54638672 10.70871258]
[328.56570435 9.84993172]
[313.67199707 8.02324963]
[298.92779541 5.23633003]
[284.39489746 1.50086033]
[270.13424683 -3.16749072]
[256.20571899 -8.74914265]
[242.66769409 -15.22068310]
[229.57696533 -22.55496788]
[216.98844910 -30.72123528]
[208.02775574 -18.69185829]
[199.06706238 -6.66248035]
[190.10635376 5.36689711]
[181.14566040 17.39627457]
[172.18496704 29.42565346]
[187.14512634 28.33315086]
[198.58573914 38.03430557]
[199.95310974 52.97185135]
[190.46392822 64.58889008]
[175.55404663 66.23064423]
[163.76451111 56.95665359]
[161.84866333 42.08039093]
[151.85049438 53.26236725]
[141.85232544 64.44434357]
[131.85415649 75.62631226]
[121.85597992 86.80828857]
[111.85780334 97.99026489]
[102.02722168 109.31985474]
[92.36641693 120.79455566]
[82.70560455 132.26925659]
[79.73642731 147.80935669]
[65.62049866 152.56222534]
[55.95968628 164.03692627]
[46.29887390 175.51162720]
[36.63806534 186.98632812]
[47.20808411 197.64375305]
[56.78021622 209.20578003]
[65.27738953 221.57931519]
[72.63119507 234.66471863]
[78.78241730 248.35664368]
[83.68152618 262.54483032]
[87.28907776 277.11508179]
[89.57602692 291.95004272]
[90.52396393 306.93029785]
[90.12525177 321.93518066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 200]
[59 199]
[60 198]
[61 197]
[63 195]
[64 194]
[65 193]
[68 192]
[69 191]
[70 190]
[71 189]
[72 188]
[73 187]
[74 180]
[75 179]
[76 178]
[77 177]
[78 176]
[79 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
