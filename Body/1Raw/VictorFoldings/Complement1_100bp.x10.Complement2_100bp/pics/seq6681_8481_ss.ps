%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[37.98185730 411.19824219]
[43.30131912 425.28356934]
[45.57564163 440.16717529]
[44.70539856 455.19833374]
[40.72863388 469.72003174]
[33.81919479 483.09738159]
[24.27913094 494.74557495]
[12.52549267 504.15545654]
[-0.92789871 510.91561890]
[-15.49292088 514.73059082]
[-30.53285217 515.43353271]
[-45.39021301 512.99371338]
[-59.41550064 507.51788330]
[-71.99559784 499.24536133]
[-82.58054352 488.53775024]
[-90.70761871 475.86318970]
[-96.02153778 461.77575684]
[-98.29000854 446.89129639]
[-97.41384888 431.86044312]
[-93.43137360 417.34033203]
[-86.51667023 403.96572876]
[-76.97202301 392.32125854]
[-65.21469116 382.91601562]
[-51.75863647 376.16113281]
[-37.19211578 372.35189819]
[-22.15190887 371.65487671]
[-7.29550934 374.10049438]
[-1.84015214 360.12771606]
[3.61520505 346.15490723]
[9.07056236 332.18209839]
[14.52591896 318.20932007]
[11.94725800 303.53961182]
[24.17369843 293.49847412]
[29.42041588 279.44598389]
[34.45733261 265.31695557]
[39.49424744 251.18794250]
[44.53116608 237.05891418]
[49.35716248 222.85646057]
[53.97117233 208.58372498]
[58.58518219 194.31098938]
[63.19918823 180.03825378]
[67.81320190 165.76551819]
[66.54193115 162.47671509]
[66.80046844 158.40876770]
[68.93766022 154.28739929]
[72.96505737 150.96667480]
[78.21177673 136.91419983]
[83.45848846 122.86173248]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[107.73575592 57.83907700]
[112.98247528 43.78660583]
[113.05244446 34.65244293]
[118.41333008 29.56494331]
[123.86869049 15.59214592]
[121.68022919 -0.07697094]
[133.51646423 -9.11869526]
[138.97183228 -23.09149361]
[142.18510437 -37.74327850]
[143.07791138 -52.71668625]
[143.97073364 -67.69009399]
[144.86354065 -82.66349792]
[142.25047302 -91.41619110]
[145.88276672 -97.85267639]
[146.99841309 -112.81112671]
[148.11405945 -127.76958466]
[138.07772827 -139.68217468]
[139.42224121 -154.83627319]
[150.84092712 -164.33097839]
[151.95657349 -179.28942871]
[153.07221985 -194.24787903]
[154.18786621 -209.20632935]
[155.30351257 -224.16477966]
[156.41915894 -239.12324524]
[157.53482056 -254.08169556]
[142.74923706 -256.68276978]
[128.29614258 -260.74310303]
[114.31913757 -266.22235107]
[100.95715332 -273.06604004]
[88.34299469 -281.20614624]
[76.60202789 -290.56179810]
[65.85093689 -301.04000854]
[56.19657516 -312.53662109]
[47.73490143 -324.93734741]
[40.55000687 -338.11901855]
[34.71330261 -351.95056152]
[30.28280067 -366.29452515]
[27.30253029 -381.00833130]
[25.80211258 -395.94577026]
[25.79646111 -410.95840454]
[27.28563118 -425.89697266]
[30.25482178 -440.61303711]
[34.67452621 -454.96032715]
[40.50081253 -468.79626465]
[47.67577744 -481.98330688]
[56.12811279 -494.39044189]
[65.77381134 -505.89431763]
[76.51701355 -516.38061523]
[88.25093842 -525.74511719]
[100.85896301 -533.89471436]
[114.21578979 -540.74847412]
[128.18865967 -546.23822021]
[142.63870239 -550.30944824]
[157.42230225 -552.92163086]
[172.39254761 -554.04888916]
[187.40061951 -553.67993164]
[202.29739380 -551.81848145]
[216.93478394 -548.48303223]
[231.16732788 -543.70666504]
[244.85357666 -537.53698730]
[257.85751343 -530.03521729]
[270.04986572 -521.27593994]
[281.30947876 -511.34616089]
[291.52441406 -500.34466553]
[300.59323120 -488.38073730]
[308.42568970 -475.57327271]
[314.94403076 -462.04959106]
[320.08343506 -447.94409180]
[323.79281616 -433.39697266]
[326.03533936 -418.55279541]
[326.78866577 -403.55908203]
[326.04537964 -388.56488037]
[323.81280518 -373.71920776]
[320.11312866 -359.16958618]
[314.98318481 -345.06066895]
[308.47387695 -331.53262329]
[300.64996338 -318.71994019]
[291.58920288 -306.74993896]
[281.38159180 -295.74160767]
[270.12863159 -285.80432129]
[257.94213867 -277.03689575]
[244.94323730 -269.52639771]
[231.26112366 -263.34753418]
[217.03176880 -258.56170654]
[202.39660645 -255.21644592]
[187.50109863 -253.34503174]
[172.49327087 -252.96604919]
[171.37762451 -238.00758362]
[170.26196289 -223.04913330]
[169.14631653 -208.09068298]
[168.03067017 -193.13223267]
[166.91502380 -178.17378235]
[165.79937744 -163.21531677]
[175.68327332 -152.13182068]
[174.76493835 -136.94592285]
[163.07250977 -126.65393066]
[161.95686340 -111.69548035]
[160.84121704 -96.73702240]
[159.83695984 -81.77068329]
[158.94413757 -66.79727936]
[158.05131531 -51.82387161]
[157.15850830 -36.85046387]
[164.71224976 -49.80966949]
[175.44369507 -60.28993988]
[188.57812500 -67.53469849]
[203.16737366 -71.02093506]
[218.15821838 -70.49697113]
[232.46846008 -66.00064087]
[245.06503296 -57.85653687]
[255.03857422 -46.65258408]
[261.66909790 -33.19760895]
[264.47790527 -18.46293831]
[263.26226807 -3.51227903]
[258.10992432 10.57506752]
[249.39282227 22.78212357]
[237.74026489 32.22764969]
[223.99345398 38.22977066]
[209.14480591 40.35517883]
[194.26622009 38.45044708]
[180.43182373 32.65307999]
[168.64033508 23.38158798]
[159.74296570 11.30529213]
[154.38204956 -2.70400953]
[152.94462585 -17.63613510]
[147.48927307 -3.66333795]
[150.06793213 11.00635052]
[137.84149170 21.04750252]
[132.38612366 35.02030182]
[127.03494263 49.03332520]
[121.78822327 63.08579636]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[97.51096344 128.10845947]
[92.26424408 142.16091919]
[87.01752472 156.21339417]
[82.08592987 170.37953186]
[77.47192383 184.65226746]
[72.85791779 198.92500305]
[68.24390411 213.19772339]
[63.62989426 227.47045898]
[64.63846588 234.00454712]
[62.51462555 239.27581787]
[58.66019440 242.09582520]
[53.62327957 256.22485352]
[48.58636093 270.35388184]
[43.54944611 284.48291016]
[44.36302567 291.04412842]
[42.08317947 296.24984741]
[38.14649582 298.95382690]
[40.33495331 314.62295532]
[28.49871635 323.66467285]
[23.04335976 337.63745117]
[17.58800316 351.61026001]
[12.13264561 365.58306885]
[6.67728853 379.55584717]
[19.26063538 387.82345581]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 209]
[28 208]
[29 207]
[30 206]
[31 205]
[33 203]
[34 200]
[35 199]
[36 198]
[37 197]
[38 194]
[39 193]
[40 192]
[41 191]
[42 190]
[46 189]
[47 188]
[48 187]
[49 186]
[51 184]
[52 183]
[53 182]
[54 181]
[56 180]
[57 179]
[59 177]
[60 176]
[61 154]
[62 153]
[63 152]
[64 151]
[66 150]
[67 149]
[68 148]
[71 145]
[72 144]
[73 143]
[74 142]
[75 141]
[76 140]
[77 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
