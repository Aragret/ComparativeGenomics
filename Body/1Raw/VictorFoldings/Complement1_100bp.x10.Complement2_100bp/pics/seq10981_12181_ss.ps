%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[189.37147522 559.91186523]
[187.60131836 545.00109863]
[187.48225403 529.98614502]
[189.01570129 515.04925537]
[192.18305969 500.37167358]
[196.94586182 486.13162231]
[203.24632263 472.50198364]
[211.00793457 459.64816284]
[220.13648987 447.72622681]
[230.52117920 436.88085938]
[242.03593445 427.24377441]
[254.54096985 418.93191528]
[247.66156006 405.60247803]
[240.78215027 392.27304077]
[233.90274048 378.94363403]
[226.82562256 365.71810913]
[219.55239868 352.59939575]
[212.27917480 339.48071289]
[205.00593567 326.36199951]
[197.73271179 313.24331665]
[190.45948792 300.12463379]
[183.18624878 287.00592041]
[168.29159546 286.88375854]
[155.37199402 279.27194214]
[147.94799805 266.12847900]
[148.10064697 250.93395996]
[155.88903809 237.77006531]
[148.61581421 224.65136719]
[141.34259033 211.53268433]
[134.76281738 225.01254272]
[120.15538025 228.42175293]
[108.28833008 219.24717712]
[107.90960693 204.25195312]
[119.29840088 194.49002075]
[134.05796814 197.15653992]
[127.78060913 183.53321838]
[121.50325012 169.90989685]
[115.22589111 156.28659058]
[112.06253052 154.72918701]
[109.49635315 151.56219482]
[108.27565002 147.08300781]
[108.98761749 141.91191101]
[103.32482910 128.02188110]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[70.41056061 67.78289795]
[72.77053070 53.07644272]
[67.10774231 39.18641663]
[61.44495392 25.29638863]
[49.07037354 15.43838310]
[51.43033981 0.73192817]
[45.76755142 -13.15809917]
[40.10476685 -27.04812622]
[33.32477570 -40.42839813]
[25.47301865 -53.20923996]
[21.58358383 -55.13959503]
[18.79153633 -57.92688751]
[17.23151398 -61.12090302]
[16.87811852 -64.27394867]
[17.56059265 -66.99284363]
[10.48348713 -80.21836853]
[3.40638137 -93.44390106]
[-3.67072415 -106.66942596]
[-10.74782944 -119.89495087]
[-17.82493401 -133.12048340]
[-31.92945290 -127.94276428]
[-46.61732101 -124.77848816]
[-61.60263443 -123.68923950]
[-76.59370422 -124.69621277]
[-91.29872131 -127.77982330]
[-105.43144226 -132.88003540]
[-118.71678162 -139.89758301]
[-130.89613342 -148.69584656]
[-141.73242188 -159.10359192]
[-151.01470947 -170.91821289]
[-158.56231689 -183.90974426]
[-164.22833252 -197.82528687]
[-167.90245056 -212.39398193]
[-169.51318359 -227.33224487]
[-169.02914429 -242.34928894]
[-166.45977783 -257.15283203]
[-161.85508728 -271.45468140]
[-155.30470276 -284.97647095]
[-146.93614197 -297.45498657]
[-136.91229248 -308.64730835]
[-125.42826080 -318.33563232]
[-112.70761108 -326.33129883]
[-98.99793243 -332.47872925]
[-84.56610107 -336.65826416]
[-69.69303131 -338.78848267]
[-54.66823196 -338.82800293]
[-39.78416443 -336.77600098]
[-25.33055687 -332.67242432]
[-11.58874798 -326.59713745]
[1.17377222 -318.66845703]
[12.70857811 -309.04064941]
[22.79114151 -297.90118408]
[31.22520065 -285.46682739]
[37.84658813 -271.97967529]
[42.52640915 -257.70223999]
[45.17358017 -242.91242981]
[45.73656464 -227.89813232]
[44.20440674 -212.95159912]
[40.60692978 -198.36378479]
[35.01416016 -184.41864014]
[27.53496361 -171.38761902]
[18.31492424 -159.52435303]
[7.53351259 -149.05976868]
[-4.59940720 -140.19758606]
[2.47769809 -126.97206116]
[9.55480385 -113.74652863]
[16.63190842 -100.52100372]
[23.70901489 -87.29547882]
[30.78611946 -74.06994629]
[38.25386047 -61.06099701]
[46.10561752 -48.28015518]
[46.82770538 -63.26276398]
[54.35014343 -76.24016571]
[66.99239349 -84.31317139]
[81.93015289 -85.67826080]
[95.82627869 -80.03045654]
[105.57634735 -68.63150024]
[109.00216675 -54.02794647]
[105.33839417 -39.48226547]
[95.40353394 -28.24400330]
[81.41706085 -22.82381058]
[66.50357819 -24.43257523]
[53.99479294 -32.71091080]
[59.65757751 -18.82088470]
[65.32036591 -4.93085861]
[77.28990936 3.93363953]
[75.33498383 19.63360214]
[80.99777222 33.52362823]
[86.66055298 47.41365814]
[98.63009644 56.27815628]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[117.21485138 122.35909271]
[122.87763977 136.24913025]
[128.84919739 150.00923157]
[135.12657166 163.63253784]
[141.40393066 177.25585938]
[147.68128967 190.87918091]
[154.46127319 204.25944519]
[161.73451233 217.37814331]
[169.00773621 230.49684143]
[184.29862976 230.86517334]
[197.26651001 238.78544617]
[204.48089600 252.04513550]
[204.09220886 267.03527832]
[196.30494690 279.73269653]
[203.57817078 292.85137939]
[210.85140991 305.97009277]
[218.12463379 319.08877563]
[225.39785767 332.20748901]
[232.67109680 345.32617188]
[239.94432068 358.44485474]
[245.40567017 362.17117310]
[247.80513000 367.32281494]
[247.23216248 372.06420898]
[254.11157227 385.39364624]
[260.99099731 398.72305298]
[267.87039185 412.05249023]
[281.88983154 406.67489624]
[296.41577148 402.87219238]
[311.27188110 400.69061279]
[326.27780151 400.15655518]
[341.25140381 401.27658081]
[356.01092529 404.03701782]
[370.37716675 408.40441895]
[384.17575073 414.32574463]
[397.23919678 421.72912598]
[409.40887451 430.52468872]
[420.53710938 440.60562134]
[430.48880005 451.84960938]
[439.14312744 464.12014771]
[446.39505005 477.26824951]
[452.15652466 491.13433838]
[456.35760498 505.55010986]
[458.94732666 520.34051514]
[459.89422607 535.32604980]
[459.18679810 550.32482910]
[456.83367920 565.15472412]
[452.86337280 579.63574219]
[447.32412720 593.59210205]
[440.28314209 606.85437012]
[431.82592773 619.26159668]
[422.05511475 630.66308594]
[411.08932495 640.92053223]
[399.06167603 649.90930176]
[386.11816406 657.52038574]
[372.41589355 663.66137695]
[358.12124634 668.25769043]
[343.40771484 671.25354004]
[328.45391846 672.61260986]
[313.44137573 672.31829834]
[298.55230713 670.37426758]
[283.96749878 666.80413818]
[269.86395264 661.65112305]
[256.41290283 654.97790527]
[243.77760315 646.86535645]
[232.11145020 637.41210938]
[221.55607605 626.73284912]
[212.23957825 614.95715332]
[204.27508545 602.22808838]
[197.75926208 588.70007324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 167]
[13 166]
[14 165]
[15 164]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[21 156]
[22 155]
[27 150]
[28 149]
[29 148]
[35 147]
[36 146]
[37 145]
[38 144]
[42 143]
[43 142]
[44 141]
[46 139]
[47 138]
[49 136]
[50 135]
[51 134]
[53 132]
[54 131]
[55 130]
[56 118]
[57 117]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
