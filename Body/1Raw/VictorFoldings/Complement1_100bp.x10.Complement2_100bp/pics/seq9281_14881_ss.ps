%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[170.40991211 672.32513428]
[183.27209473 664.17138672]
[181.04698181 649.33734131]
[178.82186890 634.50329590]
[176.59674072 619.66925049]
[164.94099426 606.55017090]
[171.82293701 589.47033691]
[169.37721252 574.67108154]
[159.66828918 563.37567139]
[165.05195618 548.49859619]
[162.60621643 533.69934082]
[160.05038452 518.91870117]
[157.38459778 504.15747070]
[155.16125488 502.45016479]
[153.48022461 499.75927734]
[152.71954346 496.28698730]
[153.17710876 492.36843872]
[155.02697754 488.44009399]
[153.24450684 473.54635620]
[151.46205139 458.65264893]
[142.26716614 446.93499756]
[148.30976868 432.31317139]
[146.52729797 417.41943359]
[144.74482727 402.52572632]
[142.96237183 387.63201904]
[141.17990112 372.73828125]
[138.95478821 357.90423584]
[136.28898621 343.14303589]
[133.62318420 328.38180542]
[118.64203644 328.30944824]
[103.92536926 325.48464966]
[89.97467041 320.00219727]
[77.26559448 312.04745483]
[66.23175049 301.89004517]
[57.24990463 289.87487793]
[50.62713623 276.41021729]
[46.59030151 261.95404053]
[45.27829742 246.99824524]
[46.73726654 232.05206299]
[50.91898346 217.62464905]
[57.68243408 204.20777893]
[66.79858398 192.25904846]
[77.95813751 182.18627930]
[90.78201294 174.33361816]
[104.83423615 168.96972656]
[102.16844177 154.20851135]
[92.29241943 143.05891418]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[85.11899567 59.80123138]
[75.05230713 47.59580994]
[80.40454865 33.69607162]
[77.73875427 18.93485451]
[75.07295990 4.17363739]
[62.85530472 -9.60353565]
[69.42895508 -25.87480164]
[66.54367828 -40.59469223]
[63.65840530 -55.31458282]
[60.66363144 -70.01258850]
[57.55952072 -84.68788910]
[47.13389206 -96.58817291]
[52.06991577 -110.64110565]
[48.96580505 -125.31641388]
[43.25456619 -111.44623566]
[31.81117821 -101.74835968]
[17.19212341 -98.38930511]
[2.66333604 -102.11949921]
[-8.52941608 -112.10559845]
[-13.88564205 -126.11669922]
[-12.20874977 -141.02267456]
[-3.87335920 -153.49348450]
[9.25838089 -160.74313354]
[24.25280762 -161.15202332]
[37.76012421 -154.62881470]
[46.76277542 -142.63076782]
[46.09299088 -157.61581421]
[45.42320633 -172.60084534]
[44.75342178 -187.58589172]
[44.08363724 -202.57092285]
[32.70282745 -213.20648193]
[32.23703766 -228.41297913]
[42.44654846 -239.19729614]
[41.77676392 -254.18234253]
[41.10697937 -269.16738892]
[29.72617149 -279.80291748]
[29.26038170 -295.00942993]
[39.46989441 -305.79373169]
[38.80010605 -320.77877808]
[35.56974411 -326.54733276]
[35.71563339 -332.22851562]
[38.34020233 -336.21859741]
[38.11687469 -351.21691895]
[34.86004639 -359.75103760]
[38.00354767 -366.43984985]
[38.00354767 -381.43984985]
[38.00354767 -396.43984985]
[24.22967720 -403.01580811]
[14.67975044 -414.92218018]
[11.24991131 -429.79492188]
[14.62115574 -444.68109131]
[24.12412071 -456.62496948]
[37.87198639 -463.25512695]
[53.13510513 -463.25512695]
[66.88297272 -456.62496948]
[76.38593292 -444.68109131]
[79.75717926 -429.79492188]
[76.32733917 -414.92218018]
[66.77741241 -403.01580811]
[53.00354767 -396.43984985]
[53.00354767 -381.43984985]
[53.00354767 -366.43984985]
[53.11521149 -351.44024658]
[53.33853912 -336.44192505]
[53.78514481 -321.44857788]
[54.45493317 -306.46353149]
[65.58586121 -296.63305664]
[66.47858429 -281.44564819]
[56.09201813 -269.83715820]
[56.76180267 -254.85212708]
[57.43158722 -239.86708069]
[68.56251526 -230.03662109]
[69.45523834 -214.84919739]
[59.06867599 -203.24070740]
[59.73846054 -188.25567627]
[60.40824509 -173.27062988]
[61.07802963 -158.28559875]
[61.74781418 -143.30055237]
[63.64110565 -128.42051697]
[66.74521637 -113.74521637]
[76.94882202 -102.89460754]
[72.23482513 -87.79199982]
[75.33893585 -73.11669922]
[79.79857635 -67.22319794]
[78.37829590 -58.19985580]
[81.26357269 -43.47996521]
[84.14884186 -28.76007462]
[94.00965118 -21.75357437]
[96.53388977 -9.51380348]
[89.83417511 1.50784183]
[92.49996948 16.26905823]
[95.16576385 31.03027534]
[105.04178619 42.17987442]
[99.88021851 57.13543320]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[122.28189850 137.64297485]
[116.92965698 151.54270935]
[119.59545135 166.30392456]
[134.63619995 166.41378784]
[149.39672852 169.28486633]
[163.37461853 174.81794739]
[176.09434509 182.82324219]
[187.12353516 193.02685547]
[196.08752441 205.08021545]
[202.68223572 218.57194519]
[206.68435669 233.04191589]
[207.95903015 247.99693298]
[206.46429443 262.92755127]
[202.25250244 277.32543945]
[195.46852112 290.70065308]
[186.34468079 302.59829712]
[175.19288635 312.61413574]
[162.39390564 320.40811157]
[148.38441467 325.71603394]
[151.05020142 340.47723389]
[153.71600342 355.23846436]
[156.63703918 358.45117188]
[158.22416687 362.06301880]
[158.51573181 365.60568237]
[157.69818115 368.67132568]
[156.07360840 370.95584106]
[157.85607910 385.84954834]
[159.63854980 400.74325562]
[161.42102051 415.63699341]
[163.20347595 430.53070068]
[172.52584839 443.31365967]
[166.35575867 456.87017822]
[168.13822937 471.76388550]
[169.92070007 486.65762329]
[172.14581299 501.49166870]
[174.81161499 516.25286865]
[179.41632080 524.14172363]
[177.40548706 531.25360107]
[179.85122681 546.05285645]
[189.73507690 558.40679932]
[184.17648315 572.22534180]
[186.62220764 587.02459717]
[196.63391113 595.15655518]
[198.36628723 607.53326416]
[191.43078613 617.44409180]
[193.65591431 632.27813721]
[195.88102722 647.11218262]
[198.10614014 661.94622803]
[212.79457092 665.96740723]
[224.57345581 675.62030029]
[231.40200806 689.23242188]
[232.09716797 704.44549561]
[226.53848267 718.62365723]
[215.68902588 729.31054688]
[201.42852783 734.65454102]
[186.22772217 733.72973633]
[172.72021484 726.69647217]
[163.24629211 714.77319336]
[159.44734192 700.02569580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[5 196]
[7 193]
[8 192]
[10 190]
[11 189]
[12 187]
[13 186]
[18 185]
[19 184]
[20 183]
[22 181]
[23 180]
[24 179]
[25 178]
[26 177]
[27 172]
[28 171]
[29 170]
[45 154]
[46 153]
[48 151]
[49 150]
[51 148]
[52 147]
[53 146]
[55 144]
[56 143]
[57 142]
[59 139]
[60 138]
[61 137]
[62 135]
[63 134]
[65 132]
[66 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[85 123]
[86 122]
[87 121]
[90 118]
[91 117]
[94 116]
[95 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
