%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[41.56676483 284.52157593]
[42.98306656 299.46682739]
[42.92763519 314.47894287]
[41.40100861 329.41336060]
[38.41788864 344.12619019]
[34.00700760 358.47579956]
[28.21083832 372.32394409]
[21.08520699 385.53726196]
[12.69874001 397.98852539]
[3.13220358 409.55780029]
[-7.52226782 420.13366699]
[-19.16206360 429.61428833]
[-31.67508316 437.90832520]
[-44.94081497 444.93594360]
[-58.83150101 450.62939453]
[-73.21336365 454.93392944]
[-87.94789124 457.80801392]
[-102.89318848 459.22402954]
[-117.90530396 459.16827393]
[-132.83967590 457.64135742]
[-147.55245972 454.65795898]
[-161.90196228 450.24676514]
[-175.75000000 444.45031738]
[-188.96318054 437.32443237]
[-201.41427612 428.93771362]
[-212.98336792 419.37094116]
[-223.55902100 408.71627808]
[-233.03939819 397.07629395]
[-241.33319092 384.56311035]
[-248.36051941 371.29721069]
[-254.05371094 357.40643311]
[-258.35794067 343.02447510]
[-261.23175049 328.28988647]
[-262.64746094 313.34457397]
[-262.59143066 298.33245850]
[-261.06420898 283.39813232]
[-258.08047485 268.68539429]
[-253.66903687 254.33596802]
[-247.87231445 240.48805237]
[-240.74615479 227.27500916]
[-232.35917664 214.82408142]
[-222.79219055 203.25518799]
[-212.13728333 192.67974854]
[-200.49711609 183.19960022]
[-187.98376465 174.90605164]
[-174.71775818 167.87898254]
[-160.82684326 162.18606567]
[-146.44480896 157.88214111]
[-131.71015930 155.00862122]
[-116.76480865 153.59321594]
[-101.75269318 153.64955139]
[-86.81838989 155.17707825]
[-72.10572052 158.16107178]
[-57.75639343 162.57281494]
[-43.90859222 168.36982727]
[-30.69568634 175.49624634]
[-18.24492645 183.88345337]
[-6.67622280 193.45068359]
[3.96978593 182.88363647]
[14.61579514 172.31658936]
[25.26180267 161.74954224]
[27.79457855 154.80642700]
[36.14585876 151.10589600]
[46.94801331 140.69851685]
[50.74514771 126.29605865]
[66.05158997 122.29312134]
[76.85374451 111.88574982]
[74.00114441 98.96092224]
[77.87611389 86.30496979]
[87.47595215 77.19280243]
[100.31656647 73.98231506]
[113.07525635 77.50427246]
[124.03116608 67.25888062]
[134.98707581 57.01348877]
[145.94299316 46.76809692]
[156.89889526 36.52270508]
[167.85481262 26.27731323]
[178.42185974 15.63130474]
[182.08197021 0.23929025]
[196.39605713 -3.87852883]
[206.55960083 -14.91040611]
[216.72314453 -25.94228363]
[226.88668823 -36.97415924]
[237.05023193 -48.00603867]
[245.55706787 -60.36054611]
[252.23725891 -73.79092407]
[258.91744995 -87.22129822]
[265.59765625 -100.65167236]
[272.27783203 -114.08205414]
[259.54455566 -122.03308105]
[247.63810730 -131.17594910]
[236.66966248 -141.42527771]
[226.74165344 -152.68539429]
[217.94674683 -164.85113525]
[210.36708069 -177.80891418]
[204.07344055 -191.43775940]
[199.12454224 -205.61041260]
[195.56665039 -220.19454956]
[193.43293762 -235.05398560]
[192.74334717 -250.04997253]
[193.50431824 -265.04251099]
[195.70875549 -279.89163208]
[199.33605957 -294.45864868]
[204.35235596 -308.60757446]
[210.71083069 -322.20629883]
[218.35209656 -335.12786865]
[227.20481873 -347.25158691]
[237.18632507 -358.46429443]
[248.20344543 -368.66131592]
[260.15328979 -377.74737549]
[272.92428589 -385.63769531]
[286.39718628 -392.25857544]
[300.44622803 -397.54821777]
[314.94018555 -401.45724487]
[329.74377441 -403.94909668]
[344.71875000 -405.00054932]
[359.72531128 -404.60180664]
[374.62332153 -402.75656128]
[389.27368164 -399.48202515]
[403.53958130 -394.80880737]
[417.28787231 -388.78054810]
[430.39016724 -381.45349121]
[442.72412109 -372.89605713]
[454.17456055 -363.18820190]
[464.63458252 -352.42050171]
[474.00653076 -340.69354248]
[482.20291138 -328.11676025]
[489.14718628 -314.80764771]
[494.77447510 -300.89041138]
[499.03231812 -286.49505615]
[501.88088989 -271.75595093]
[503.29360962 -256.81072998]
[503.25729370 -241.79893494]
[501.77227783 -226.86071777]
[498.85244751 -212.13555908]
[494.52505493 -197.76097107]
[488.83047485 -183.87113953]
[481.82192993 -170.59576416]
[473.56481934 -158.05879211]
[464.13623047 -146.37728882]
[453.62423706 -135.66032410]
[442.12698364 -126.00794983]
[429.75177002 -117.51029968]
[416.61419678 -110.24671173]
[402.83691406 -104.28501129]
[388.54855347 -99.68086243]
[373.88250732 -96.47724915]
[358.97576904 -94.70407867]
[343.96746826 -94.37791443]
[328.99774170 -95.50180817]
[314.20639038 -98.06525421]
[299.73150635 -102.04431915]
[285.70822144 -107.40185547]
[279.02801514 -93.97148132]
[272.34783936 -80.54110718]
[265.66763306 -67.11072540]
[258.98742676 -53.68035126]
[271.10317993 -62.52392960]
[285.26770020 -67.46017456]
[300.25561523 -68.06204987]
[314.77032471 -64.27748108]
[327.55618286 -56.43388367]
[337.50704956 -45.20980072]
[343.76211548 -31.57622910]
[345.78021240 -16.71260643]
[343.38677979 -1.90478778]
[336.78887939 11.56620407]
[326.55728149 22.53499222]
[313.57711792 30.05266762]
[298.97131348 33.46887589]
[284.00341797 32.48808289]
[269.96829224 27.19513321]
[258.08013916 18.04792404]
[249.36735535 5.83777618]
[244.58374023 -8.37900734]
[244.14308167 -23.37253380]
[248.08210754 -37.84249115]
[237.91856384 -26.81061363]
[227.75502014 -15.77873707]
[217.59147644 -4.74685955]
[207.42793274 6.28501797]
[204.49478149 20.88795853]
[189.45373535 25.79485130]
[204.31930542 27.79857254]
[212.15193176 40.59114838]
[207.17768860 54.74236679]
[193.06341553 59.82047653]
[180.21362305 52.08208466]
[178.10020447 37.23322296]
[167.14428711 47.47861481]
[156.18838501 57.72400665]
[145.23246765 67.96939850]
[134.27656555 78.21479034]
[123.32064819 88.46018219]
[125.61777496 104.55519104]
[117.91306305 118.87173462]
[103.21462250 125.82027435]
[87.26111603 122.68790436]
[76.45896149 133.09527588]
[71.88918304 148.24215698]
[57.35538864 151.50068665]
[46.55323029 161.90805054]
[35.82884979 172.39555359]
[25.18284225 182.96260071]
[14.53683376 193.52964783]
[3.89082503 204.09669495]
[13.37166691 215.73629761]
[21.66596031 228.24916077]
[28.69382286 241.51475525]
[34.38757324 255.40531921]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 206]
[59 205]
[60 204]
[61 203]
[63 202]
[64 201]
[66 199]
[67 198]
[72 194]
[73 193]
[74 192]
[75 191]
[76 190]
[77 189]
[78 183]
[80 181]
[81 180]
[82 179]
[83 178]
[84 177]
[85 157]
[86 156]
[87 155]
[88 154]
[89 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
