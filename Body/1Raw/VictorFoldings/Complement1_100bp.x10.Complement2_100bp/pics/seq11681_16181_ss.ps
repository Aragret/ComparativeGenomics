%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[225.03259277 452.10598755]
[219.57722473 438.13320923]
[214.12187195 424.16040039]
[208.66651917 410.18759155]
[205.60147095 408.44467163]
[203.22834778 405.13055420]
[202.27641296 400.58663940]
[203.29489136 395.46710205]
[198.46890259 381.26464844]
[193.64289856 367.06219482]
[188.50094604 352.97103882]
[183.04557800 338.99826050]
[177.59022522 325.02545166]
[172.13487244 311.05267334]
[166.67951965 297.07986450]
[161.22415161 283.10705566]
[146.97290039 284.63967896]
[132.79930115 282.42523193]
[119.67253876 276.60873413]
[108.49190521 267.58181763]
[100.02512360 255.95622253]
[94.85568237 242.52243042]
[93.34257507 228.19587708]
[95.59542847 213.95460510]
[101.46656036 200.77244568]
[110.56062317 189.55249023]
[122.26127625 181.06513977]
[117.01455688 167.01266479]
[105.31424713 157.79571533]
[107.73575592 142.16091919]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[82.77178192 84.24578857]
[83.48669434 76.88979340]
[78.44977570 62.76076508]
[73.41285706 48.63173676]
[68.37594604 34.50270462]
[62.86570358 48.45395279]
[50.26974106 56.59899521]
[35.28604126 55.89993668]
[23.50314903 46.61751175]
[19.31579399 32.21382904]
[24.28575706 18.06110954]
[36.55936432 9.43796635]
[51.55886459 9.56062126]
[63.69050217 18.38426781]
[53.08884811 6.64052391]
[57.81509781 -7.48434162]
[54.49283981 -22.11180115]
[51.17057800 -36.73926163]
[47.84832001 -51.36672211]
[44.52605820 -65.99417877]
[41.20380020 -80.62164307]
[37.88154221 -95.24909973]
[34.55928040 -109.87656403]
[21.73863220 -123.09444427]
[27.57917023 -139.64300537]
[24.03949928 -154.21939087]
[20.49982643 -168.79576111]
[16.96015358 -183.37214661]
[13.42048168 -197.94851685]
[9.88080883 -212.52488708]
[6.01650333 -227.01858521]
[1.82949209 -241.42236328]
[-2.35751915 -255.82614136]
[-6.54453039 -270.22991943]
[-21.33655739 -267.64941406]
[-36.32268906 -266.71182251]
[-51.32100677 -267.42855835]
[-66.14944458 -269.79089355]
[-80.62799072 -273.77017212]
[-94.58090210 -279.31811523]
[-107.83879852 -286.36730957]
[-120.24073792 -294.83224487]
[-131.63618469 -304.61013794]
[-141.88677979 -315.58230591]
[-150.86811829 -327.61553955]
[-158.47117615 -340.56378174]
[-164.60363770 -354.26983643]
[-169.19107056 -368.56735229]
[-172.17778015 -383.28271484]
[-173.52754211 -398.23736572]
[-173.22392273 -413.24972534]
[-171.27064514 -428.13757324]
[-167.69142151 -442.72018433]
[-162.52966309 -456.82052612]
[-155.84806824 -470.26742554]
[-147.72772217 -482.89767456]
[-138.26721191 -494.55795288]
[-127.58138275 -505.10668945]
[-115.79992676 -514.41589355]
[-103.06587982 -522.37243652]
[-89.53382111 -528.87988281]
[-75.36801147 -533.85913086]
[-60.74040985 -537.24975586]
[-45.82858658 -539.01068115]
[-30.81355667 -539.12042236]
[-15.87758732 -537.57769775]
[-1.20198834 -534.40118408]
[13.03509235 -529.62957764]
[26.66082954 -523.32061768]
[39.50981903 -515.55102539]
[51.42608643 -506.41506958]
[62.26498032 -496.02365112]
[71.89492035 -484.50292969]
[80.19902039 -471.99270630]
[87.07646179 -458.64489746]
[92.44376373 -444.62152100]
[96.23577881 -430.09280396]
[98.40647125 -415.23510742]
[98.92948151 -400.22879028]
[97.79847717 -385.25601196]
[95.02717590 -370.49853516]
[90.64922333 -356.13549805]
[84.71776581 -342.34124756]
[77.30479431 -329.28326416]
[68.50031281 -317.12002563]
[58.41118622 -305.99920654]
[47.15989304 -296.05578613]
[34.88301468 -287.41049194]
[21.72957611 -280.16821289]
[7.85925150 -274.41693115]
[12.04626274 -260.01315308]
[16.23327446 -245.60937500]
[20.42028618 -231.20559692]
[23.31761551 -229.19616699]
[25.38560677 -225.68354797]
[25.92835426 -221.07283020]
[24.45718384 -216.06455994]
[27.99685669 -201.48818970]
[31.53652954 -186.91180420]
[35.07620239 -172.33543396]
[38.61587524 -157.75906372]
[42.15554810 -143.18267822]
[52.31937408 -136.62348938]
[55.38763046 -124.50862885]
[49.18674088 -113.19882202]
[52.50899887 -98.57136536]
[55.83126068 -83.94390106]
[59.15351868 -69.31644440]
[62.47578049 -54.68898010]
[65.79804230 -40.06151962]
[69.12030029 -25.43406105]
[72.44255829 -10.80660152]
[82.80657959 -0.10911153]
[78.31796265 15.06200790]
[82.50497437 29.46578979]
[87.54188538 43.59481812]
[92.57880402 57.72385025]
[97.61572266 71.85287476]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[121.78822327 136.91419983]
[133.86381531 147.13627625]
[131.06703186 161.76594543]
[136.31375122 175.81842041]
[151.99598694 174.63255310]
[167.36370850 177.90606689]
[181.17573547 185.36622620]
[192.31893921 196.40252686]
[199.89787292 210.11657715]
[203.30673218 225.39532471]
[202.27783203 241.00132751]
[196.90252686 255.67298889]
[187.62322998 268.22659302]
[175.19696045 277.65170288]
[180.65231323 291.62451172]
[186.10766602 305.59729004]
[191.56301880 319.57009888]
[197.01838684 333.54290771]
[202.47373962 347.51568604]
[206.55012512 350.77609253]
[208.74844360 354.86517334]
[209.06752014 358.92883301]
[207.84535217 362.23620605]
[212.67135620 376.43865967]
[217.49736023 390.64111328]
[222.63931274 404.73223877]
[228.09466553 418.70504761]
[233.55003357 432.67785645]
[239.00538635 446.65063477]
[253.90486145 444.42504883]
[268.92599487 445.57122803]
[283.31527710 450.03167725]
[296.35101318 457.58267212]
[307.37930298 467.84545898]
[315.84698486 480.30523682]
[321.32928467 494.33706665]
[323.55126953 509.23709106]
[322.40145874 524.25793457]
[317.93750000 538.64617920]
[310.38336182 551.68005371]
[300.11791992 562.70587158]
[287.65606689 571.17047119]
[273.62292480 576.64941406]
[258.72235107 578.86779785]
[243.70179749 577.71435547]
[229.31466675 573.24688721]
[216.28259277 565.68957520]
[205.25927734 555.42144775]
[196.79765320 542.95758057]
[191.32212830 528.92309570]
[189.10737610 514.02203369]
[190.26448059 499.00173950]
[194.73538208 484.61566162]
[202.29585266 471.58541870]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[8 181]
[9 180]
[10 179]
[11 175]
[12 174]
[13 173]
[14 172]
[15 171]
[16 170]
[27 160]
[28 159]
[30 157]
[31 156]
[32 155]
[34 153]
[36 152]
[37 151]
[38 150]
[39 149]
[48 148]
[50 146]
[51 145]
[52 144]
[53 143]
[54 142]
[55 141]
[56 140]
[57 139]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[65 127]
[66 126]
[67 125]
[68 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
