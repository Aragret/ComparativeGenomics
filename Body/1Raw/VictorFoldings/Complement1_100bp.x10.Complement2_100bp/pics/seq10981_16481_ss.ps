%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[110.76541901 251.68910217]
[112.79145050 266.58886719]
[112.27010345 281.61672974]
[109.21636200 296.34027100]
[103.71810150 310.33587646]
[95.93351746 323.20086670]
[86.08657837 334.56512451]
[74.46060944 344.10162354]
[61.39010620 351.53598022]
[47.25113678 356.65435791]
[32.45050812 359.30941772]
[17.41406250 359.42480469]
[2.57442951 356.99719238]
[-11.64142704 352.09643555]
[-24.82448578 344.86352539]
[-36.59544754 335.50659180]
[-46.61563492 324.29483032]
[-54.59674835 311.55081177]
[-60.30915833 297.64123535]
[-63.58850098 282.96627808]
[-64.34042358 267.94821167]
[-62.54330063 253.01908875]
[-58.24883270 238.60848999]
[-51.58057785 225.13101196]
[-42.73040009 212.97444153]
[-31.95293236 202.48852539]
[-19.55826759 193.97499084]
[-5.90302181 187.67878723]
[8.61991405 183.78105164]
[23.59268761 182.39393616]
[38.58449936 183.55735779]
[53.16400909 187.23783875]
[59.23784256 173.52256775]
[57.31679153 158.75236511]
[69.97939301 149.26716614]
[76.05323029 135.55189514]
[82.12706757 121.83663177]
[88.20089722 108.12136841]
[86.90288544 94.19991302]
[98.08383179 85.80480194]
[104.15766907 72.08953094]
[110.23150635 58.37426758]
[109.67382050 53.18426895]
[111.02734375 48.74340439]
[113.68667603 45.65422821]
[116.89499664 44.19169998]
[123.57519531 30.76132202]
[130.25538635 17.33094597]
[136.93557739 3.90057063]
[143.61578369 -9.52980518]
[150.29597473 -22.96018219]
[137.17430115 -30.23318863]
[124.38964081 -38.08350754]
[111.96737671 -46.49554825]
[99.93218231 -55.45261383]
[88.30793762 -64.93691254]
[77.11773682 -74.92962646]
[66.38378143 -85.41091156]
[56.12739563 -96.35994720]
[46.36893463 -107.75501251]
[37.12777710 -119.57347107]
[28.42226791 -131.79185486]
[20.26969337 -144.38592529]
[12.68623829 -157.33065796]
[5.68695879 -170.60037231]
[-0.71424824 -184.16870117]
[-6.50467348 -198.00871277]
[-11.67282104 -212.09292603]
[-16.20842934 -226.39338684]
[-20.10249519 -240.88169861]
[-23.34728432 -255.52909851]
[-25.93635559 -270.30651855]
[-27.86457062 -285.18457031]
[-29.12809944 -300.13378906]
[-29.72443199 -315.12442017]
[-29.65238762 -330.12673950]
[-28.91210556 -345.11096191]
[-27.50506020 -360.04733276]
[-25.43404007 -374.90621948]
[-22.70316124 -389.65805054]
[-19.31784248 -404.27362061]
[-15.28480721 -418.72387695]
[-10.61206150 -432.98010254]
[-5.30888319 -447.01403809]
[0.61419898 -460.79779053]
[7.14542532 -474.30401611]
[14.27182865 -487.50588989]
[21.97925949 -500.37719727]
[30.25241661 -512.89239502]
[39.07487106 -525.02661133]
[48.42911148 -536.75573730]
[58.29656601 -548.05657959]
[68.65763855 -558.90661621]
[79.49176025 -569.28430176]
[90.77742004 -579.16906738]
[102.49221802 -588.54132080]
[114.61288452 -597.38238525]
[127.11536407 -605.67474365]
[139.97482300 -613.40191650]
[153.16575623 -620.54852295]
[166.66194153 -627.10046387]
[180.43659973 -633.04467773]
[194.46237183 -638.36938477]
[208.71144104 -643.06402588]
[223.15547180 -647.11920166]
[237.76582336 -650.52691650]
[252.51347351 -653.28045654]
[267.36914062 -655.37426758]
[282.30334473 -656.80419922]
[297.28640747 -657.56750488]
[312.28860474 -657.66253662]
[327.28015137 -657.08923340]
[342.23126221 -655.84863281]
[357.11227417 -653.94323730]
[371.89364624 -651.37683105]
[386.54598999 -648.15454102]
[401.04028320 -644.28265381]
[415.34768677 -639.76904297]
[429.43981934 -634.62249756]
[443.28869629 -628.85327148]
[456.86682129 -622.47290039]
[470.14724731 -615.49401855]
[483.10360718 -607.93041992]
[495.71014404 -599.79718018]
[507.94189453 -591.11041260]
[519.77453613 -581.88739014]
[531.18450928 -572.14642334]
[542.14929199 -561.90686035]
[552.64703369 -551.18896484]
[562.65692139 -540.01409912]
[572.15899658 -528.40441895]
[581.13452148 -516.38299561]
[589.56561279 -503.97366333]
[597.43554688 -491.20104980]
[604.72869873 -478.09054565]
[611.43054199 -464.66818237]
[617.52783203 -450.96060181]
[623.00842285 -436.99499512]
[627.86145020 -422.79910278]
[632.07727051 -408.40112305]
[635.64752197 -393.82965088]
[638.56512451 -379.11358643]
[640.82427979 -364.28213501]
[642.42047119 -349.36480713]
[643.35058594 -334.39117432]
[643.61273193 -319.39096069]
[643.20642090 -304.39395142]
[642.13244629 -289.42996216]
[640.39294434 -274.52865601]
[637.99133301 -259.71960449]
[634.93243408 -245.03227234]
[631.22222900 -230.49577332]
[626.86822510 -216.13899231]
[621.87896729 -201.99040222]
[616.26440430 -188.07812500]
[610.03564453 -174.42976379]
[603.20507812 -161.07243347]
[595.78625488 -148.03263855]
[587.79394531 -135.33627319]
[579.24395752 -123.00853729]
[570.15332031 -111.07392120]
[560.54003906 -99.55611420]
[550.42321777 -88.47798157]
[539.82299805 -77.86151886]
[528.76031494 -67.72780609]
[517.25720215 -58.09695435]
[505.33645630 -48.98809433]
[493.02178955 -40.41931152]
[480.33764648 -32.40761185]
[467.30920410 -24.96890640]
[453.96231079 -18.11796379]
[440.32345581 -11.86838341]
[426.41976929 -6.23257494]
[412.27883911 -1.22172749]
[397.92871094 3.15421009]
[383.39788818 6.88654995]
[368.71524048 9.96788120]
[353.90988159 12.39208794]
[339.01126099 14.15435505]
[324.04888916 15.25118446]
[309.05255127 15.68039894]
[294.05194092 15.44114685]
[279.07690430 14.53390121]
[264.15713501 12.96046448]
[249.32228088 10.72396088]
[234.60177612 7.82883072]
[220.02485657 4.28082132]
[205.62046814 0.08697743]
[191.41719055 -4.74437428]
[177.44323730 -10.20364189]
[163.72634888 -16.27998734]
[157.04615784 -2.84961081]
[150.36595154 10.58076477]
[143.68576050 24.01114082]
[137.00556946 37.44151688]
[130.32537842 50.87189484]
[123.94676971 64.44809723]
[117.87293243 78.16336823]
[111.79910278 91.87863159]
[113.09711456 105.80008698]
[101.91616821 114.19519806]
[95.84233093 127.91046906]
[89.76849365 141.62573242]
[83.69466400 155.34100342]
[85.18127441 171.09220886]
[72.95310974 179.59640503]
[66.87927246 193.31166077]
[79.40314484 201.63397217]
[90.34027100 211.95323181]
[99.37597656 223.97254944]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 207]
[33 206]
[35 204]
[36 203]
[37 202]
[38 201]
[40 199]
[41 198]
[42 197]
[46 196]
[47 195]
[48 194]
[49 193]
[50 192]
[51 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
