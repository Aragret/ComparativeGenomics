%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[62.42056656 831.72442627]
[47.42495728 831.23382568]
[32.47729874 829.93902588]
[17.62068939 827.84375000]
[2.89796758 824.95404053]
[-11.64841938 821.27819824]
[-25.97652817 816.82684326]
[-40.04504776 811.61285400]
[-53.81341934 805.65124512]
[-67.24193573 798.95916748]
[-80.29188538 791.55590820]
[-92.92564392 783.46289062]
[-105.10678101 774.70336914]
[-116.80017090 765.30267334]
[-127.97210693 755.28778076]
[-138.59037781 744.68774414]
[-148.62434387 733.53302002]
[-158.04512024 721.85577393]
[-166.82550049 709.68963623]
[-174.94020081 697.06976318]
[-182.36579895 684.03253174]
[-189.08088684 670.61553955]
[-195.06613159 656.85742188]
[-200.30424500 642.79785156]
[-204.78013611 628.47741699]
[-208.48091125 613.93731689]
[-211.39587402 599.21960449]
[-213.51663208 584.36657715]
[-214.83708191 569.42120361]
[-215.35340881 554.42645264]
[-215.06411743 539.42559814]
[-213.97004700 524.46191406]
[-212.07435608 509.57849121]
[-209.38249207 494.81832886]
[-205.90223694 480.22390747]
[-201.64363098 465.83734131]
[-196.61892700 451.70010376]
[-190.84263611 437.85296631]
[-184.33139038 424.33584595]
[-177.10398865 411.18768311]
[-169.18124390 398.44644165]
[-160.58601379 386.14883423]
[-151.34309387 374.33032227]
[-141.47911072 363.02499390]
[-131.02250671 352.26541138]
[-120.00344849 342.08261108]
[-108.45368958 332.50595093]
[-96.40653992 323.56307983]
[-83.89673615 315.27972412]
[-70.96034241 307.67980957]
[-57.63465881 300.78521729]
[-43.95810699 294.61587524]
[-29.97012138 289.18951416]
[-15.71103096 284.52182007]
[-1.22195148 280.62622070]
[13.45534325 277.51397705]
[28.27853394 275.19406128]
[43.20487976 273.67312622]
[58.19134521 272.95559692]
[73.19472504 273.04351807]
[74.08753967 258.07009888]
[74.98035431 243.09671021]
[75.87316895 228.12329102]
[76.76598358 213.14988708]
[69.79994202 199.98464966]
[78.34493256 186.66947937]
[79.23774719 171.69607544]
[80.13056183 156.72267151]
[71.26556396 168.82273865]
[58.06939316 175.95443726]
[43.09001541 176.74072266]
[29.21971703 171.02978516]
[19.13663292 159.92431641]
[14.78765202 145.56860352]
[17.01249123 130.73452759]
[25.38157272 118.28629303]
[38.27895355 110.62746429]
[53.21435547 109.23685455]
[67.30398560 114.38295746]
[77.82735443 125.07214355]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[94.86899567 56.55867004]
[105.39114380 46.01667023]
[108.93081665 31.44029427]
[104.66856384 16.20402908]
[115.19071198 5.66202927]
[118.73038483 -8.91434574]
[104.78132629 -14.50044632]
[91.76927185 -22.01491928]
[79.95914459 -31.30477905]
[69.59136200 -42.18089676]
[60.87701797 -54.42185211]
[53.99351501 -67.77842712]
[49.08099747 -81.97870636]
[46.23947144 -96.73358917]
[45.52679443 -111.74268341]
[46.95747375 -126.70041656]
[50.50237656 -141.30227661]
[56.08934021 -155.25099182]
[63.60461807 -168.26257324]
[72.89521027 -180.07214355]
[83.77197266 -190.43923950]
[96.01346588 -199.15283203]
[109.37046814 -206.03550720]
[123.57104492 -210.94714355]
[138.32611084 -213.78776550]
[153.33523560 -214.49951172]
[168.29289246 -213.06790161]
[182.89453125 -209.52209473]
[196.84289551 -203.93426514]
[209.85401917 -196.41818237]
[221.66300964 -187.12686157]
[232.02943420 -176.24946594]
[240.74226379 -164.00743103]
[247.62411499 -150.64999390]
[252.53488159 -136.44911194]
[255.37457275 -121.69388580]
[256.08538818 -106.68470001]
[254.65286255 -91.72714233]
[251.10615540 -77.12571716]
[245.51747131 -63.17769623]
[238.00057983 -50.16703796]
[228.70852661 -38.35863113]
[217.83047485 -27.99287415]
[205.58790588 -19.28079987]
[192.23005676 -12.39977741]
[178.02886963 -7.48989487]
[163.27345276 -4.65111113]
[148.26423645 -3.94121981]
[133.30676270 -5.37467384]
[129.76708984 9.20170116]
[134.28251648 23.39536858]
[123.50718689 34.97996902]
[119.96751404 49.55634308]
[124.48294830 63.75000763]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[95.10396576 157.61547852]
[94.21115112 172.58888245]
[93.31833649 187.56230164]
[100.22051239 201.79853821]
[91.73939514 214.04270935]
[90.84658051 229.01611328]
[89.95375824 243.98951721]
[89.06094360 258.96292114]
[88.16812897 273.93634033]
[103.07564545 275.63189697]
[117.87065887 278.12521362]
[132.51051331 281.40905762]
[146.95300293 285.47402954]
[161.15646362 290.30831909]
[175.07995605 295.89807129]
[188.68334961 302.22711182]
[201.92739868 309.27722168]
[214.77394104 317.02807617]
[227.18591309 325.45730591]
[239.12754822 334.54061890]
[250.56439209 344.25183105]
[261.46350098 354.56292725]
[271.79339600 365.44418335]
[281.52435303 376.86422729]
[290.62829590 388.79016113]
[299.07894897 401.18753052]
[306.85198975 414.02066040]
[313.92498779 427.25250244]
[320.27752686 440.84494019]
[325.89132690 454.75875854]
[330.75015259 468.95385742]
[334.84005737 483.38928223]
[338.14920044 498.02343750]
[340.66809082 512.81414795]
[342.38940430 527.71868896]
[343.30822754 542.69415283]
[343.42187500 557.69738770]
[342.73004150 572.68505859]
[341.23471069 587.61401367]
[338.94021606 602.44116211]
[335.85314941 617.12371826]
[331.98242188 631.61950684]
[327.33917236 645.88653564]
[321.93682861 659.88385010]
[315.79092407 673.57092285]
[308.91921997 686.90844727]
[301.34149170 699.85784912]
[293.07962036 712.38183594]
[284.15737915 724.44427490]
[274.60055542 736.01043701]
[264.43667603 747.04699707]
[253.69505310 757.52203369]
[242.40663147 767.40533447]
[230.60398865 776.66851807]
[218.32113647 785.28485107]
[205.59350586 793.22943115]
[192.45777893 800.47937012]
[178.95182800 807.01379395]
[165.11460876 812.81384277]
[150.98600769 817.86273193]
[136.60678101 822.14605713]
[122.01834869 825.65130615]
[107.26280975 828.36846924]
[92.38269043 830.28967285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 155]
[61 154]
[62 153]
[63 152]
[64 151]
[66 149]
[67 148]
[68 147]
[81 146]
[82 145]
[83 144]
[85 142]
[86 141]
[88 139]
[89 138]
[91 136]
[92 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
