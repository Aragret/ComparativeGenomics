%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[69.96035767 578.50854492]
[54.45876312 577.81567383]
[42.34598160 568.11718750]
[38.27962875 553.14239502]
[43.82329941 538.64935303]
[56.84533691 530.21099854]
[57.51512527 515.22595215]
[50.35384369 502.16589355]
[58.69963455 488.72497559]
[59.36942291 473.73995972]
[60.03920746 458.75491333]
[60.70899200 443.76986694]
[52.78005219 434.63430786]
[53.21541977 422.14456177]
[62.32678986 413.01516724]
[63.21960449 398.04174805]
[64.11241913 383.06835938]
[61.66863632 378.96505737]
[61.77656937 373.28305054]
[65.26129150 367.66448975]
[66.59952545 352.72430420]
[67.93775940 337.78411865]
[58.37355423 329.14956665]
[55.48574448 316.39248657]
[60.54715729 304.12088013]
[71.91712952 296.90017700]
[73.47765350 281.98159790]
[75.03817749 267.06298828]
[72.60760498 260.08343506]
[76.73460388 251.93446350]
[78.51706696 237.04074097]
[80.29953766 222.14703369]
[70.99665070 213.23155212]
[68.48995209 200.39414978]
[73.91448975 188.27867126]
[85.49440765 181.39971924]
[87.49842072 166.53419495]
[89.50243378 151.66867065]
[91.50644684 136.80313110]
[92.51071167 121.83679199]
[92.51071167 106.83679199]
[89.36151123 99.41687775]
[92.62403870 91.61387634]
[92.84736633 76.61553955]
[93.07069397 61.61720657]
[92.84736633 46.61886978]
[92.17758179 31.63382912]
[91.50779724 16.64879036]
[90.83801270 1.66375148]
[90.16822815 -13.32128716]
[81.82243347 -26.76220703]
[88.98371124 -39.82227325]
[88.31392670 -54.80731201]
[73.88253784 -57.08584595]
[60.18052292 -62.14213181]
[47.73681259 -69.77890778]
[37.03138351 -79.69932556]
[28.47670174 -91.51851654]
[22.40185356 -104.77849579]
[19.03987885 -118.96591949]
[18.51883316 -133.53195190]
[20.85691261 -147.91351318]
[25.96182251 -161.55502319]
[33.63442230 -173.92990112]
[43.57649612 -184.56082153]
[55.40232849 -193.03822327]
[68.65369415 -199.03601074]
[82.81758118 -202.32411194]
[74.67282867 -215.88780212]
[82.02776337 -228.83979797]
[81.58115387 -243.83314514]
[73.43640137 -257.39685059]
[80.79133606 -270.34884644]
[80.34472656 -285.34219360]
[79.89812469 -300.33554077]
[79.45151520 -315.32888794]
[65.34919739 -324.66809082]
[59.64886093 -340.41632080]
[64.41075134 -356.29983521]
[77.56844330 -366.11578369]
[76.89865875 -381.10083008]
[76.22887421 -396.08584595]
[67.88308716 -409.52676392]
[75.04436493 -422.58685303]
[74.15155029 -437.56024170]
[73.03589630 -452.51870728]
[71.92024994 -467.47714233]
[70.80460358 -482.43560791]
[55.87482452 -484.35568237]
[41.63728333 -489.24212646]
[28.67499161 -496.89483643]
[17.51875114 -507.00042725]
[8.62539959 -519.14508057]
[2.35911560 -532.83154297]
[-1.02349985 -547.49926758]
[-1.38393152 -562.54772949]
[1.29258037 -577.36059570]
[6.89643431 -591.33129883]
[15.19815540 -603.88781738]
[25.85779381 -614.51599121]
[38.43884659 -622.78045654]
[52.42612076 -628.34295654]
[67.24685669 -630.97558594]
[82.29414368 -630.57061768]
[96.95180511 -627.14453125]
[110.61962891 -620.83776855]
[122.73792267 -611.90850830]
[132.81044006 -600.72241211]
[140.42472839 -587.73748779]
[145.26899719 -573.48553467]
[147.14485168 -558.55017090]
[145.97549438 -543.54290771]
[141.80879211 -529.07830811]
[134.81539917 -515.74877930]
[125.28165436 -504.10006714]
[113.59799194 -494.60916138]
[100.24282837 -487.66479492]
[85.76305389 -483.55126953]
[86.87870789 -468.59280396]
[87.99435425 -453.63433838]
[89.11000061 -438.67590332]
[92.08007812 -434.93588257]
[92.73223877 -429.29037476]
[90.02940369 -423.25662231]
[98.32728577 -410.88754272]
[91.21391296 -396.75564575]
[91.88369751 -381.77059937]
[92.55348206 -366.78555298]
[104.32870483 -360.49380493]
[111.51501465 -349.11395264]
[112.14489746 -335.56134033]
[105.94699860 -323.37100220]
[94.44487000 -315.77548218]
[94.89147186 -300.78213501]
[95.33808136 -285.78878784]
[95.78468323 -270.79544067]
[103.89749146 -258.30416870]
[96.57450867 -244.27975464]
[97.02111053 -229.28640747]
[105.13391876 -216.79515076]
[97.81093597 -202.77072144]
[112.99593353 -200.09367371]
[127.30109406 -194.32415771]
[140.10379028 -185.71076965]
[150.84625244 -174.62594604]
[159.05989075 -161.54985046]
[164.38572693 -147.04957581]
[166.59007263 -131.75453186]
[165.57479858 -116.32919312]
[161.38169861 -101.44415283]
[154.19076538 -87.74700165]
[144.31248474 -75.83417511]
[132.17437744 -66.22492981]
[118.30258179 -59.33877182]
[103.29896545 -55.47709656]
[103.96875000 -40.49205780]
[112.26663971 -28.12296867]
[105.15326691 -13.99107265]
[105.82305145 0.99396640]
[106.49283600 15.97900486]
[107.16262054 30.96404457]
[107.83240509 45.94908142]
[109.80772400 47.93812180]
[111.11417389 50.82945251]
[111.40413666 54.37223816]
[110.42714691 58.19454193]
[108.06903076 61.84053421]
[107.84570312 76.83886719]
[107.62237549 91.83721161]
[107.51071167 106.83679199]
[107.51071167 121.83679199]
[116.82707214 110.08071136]
[130.98550415 105.12705994]
[145.59887695 108.51078033]
[156.13905334 119.18338776]
[159.34007263 133.83786011]
[154.21003723 147.93334961]
[142.33856201 157.10221863]
[127.40415192 158.50338745]
[114.03438568 151.70268250]
[106.37197876 138.80714417]
[104.36796570 153.67268372]
[102.36395264 168.53820801]
[100.35993958 183.40373230]
[111.21911621 197.11860657]
[108.84619141 214.10931396]
[95.19325256 223.92948914]
[93.41078949 238.82321167]
[91.62831879 253.71693420]
[89.95677948 268.62350464]
[88.39625549 283.54211426]
[86.83573151 298.46072388]
[98.09844208 311.84619141]
[96.23244476 328.89999390]
[82.87794495 339.12234497]
[81.53971100 354.06253052]
[80.20147705 369.00271606]
[79.08583069 383.96115112]
[78.19300842 398.93457031]
[77.30019379 413.90795898]
[85.92169189 430.17916870]
[75.69403076 444.43966675]
[75.02424622 459.42468262]
[74.35446167 474.40972900]
[73.68467712 489.39477539]
[80.79804993 503.52667236]
[72.50016022 515.89575195]
[71.83037567 530.88079834]
[84.04765320 540.44726562]
[88.27621460 555.37707520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[9 205]
[10 204]
[11 203]
[12 202]
[15 200]
[16 199]
[17 198]
[20 197]
[21 196]
[22 195]
[26 192]
[27 191]
[28 190]
[30 189]
[31 188]
[32 187]
[36 184]
[37 183]
[38 182]
[39 181]
[40 171]
[41 170]
[43 169]
[44 168]
[45 167]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[52 156]
[53 155]
[68 141]
[70 139]
[71 138]
[73 136]
[74 135]
[75 134]
[76 133]
[80 128]
[81 127]
[82 126]
[84 124]
[85 121]
[86 120]
[87 119]
[88 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
