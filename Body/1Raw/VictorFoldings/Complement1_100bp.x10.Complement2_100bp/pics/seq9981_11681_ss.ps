%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[156.14054871 649.15332031]
[144.99014282 639.10375977]
[134.81455994 628.06829834]
[125.70063019 616.14099121]
[117.72609711 603.42358398]
[110.95900726 590.02465820]
[105.45709991 576.05853271]
[101.26731110 561.64428711]
[98.42538452 546.90490723]
[96.95557404 531.96624756]
[96.87041473 516.95568848]
[98.17063141 502.00128174]
[100.84513855 487.23062134]
[104.87110901 472.76977539]
[110.21420288 458.74209595]
[116.82881927 445.26724243]
[124.65854645 432.46020508]
[133.63656616 420.43026733]
[143.68627930 409.28002930]
[154.72193909 399.10461426]
[166.64941406 389.99087524]
[179.36691284 382.01657104]
[192.76594543 375.24969482]
[206.73219299 369.74801636]
[202.54519653 355.34423828]
[198.35818481 340.94046021]
[194.17117310 326.53668213]
[189.98416138 312.13290405]
[185.79714966 297.72912598]
[181.61013794 283.32534790]
[175.94734192 269.43530273]
[168.87023926 256.20977783]
[161.79313660 242.98425293]
[154.71603394 229.75872803]
[141.88922119 222.18757629]
[142.20019531 206.36943054]
[135.12309265 193.14390564]
[132.48237610 192.20327759]
[130.05514526 190.15995789]
[128.26325989 187.09001160]
[127.49329376 183.22068787]
[128.04510498 178.91377258]
[121.76774597 165.29046631]
[115.49038696 151.66714478]
[109.21302795 138.04383850]
[102.93566132 124.42051697]
[96.65830231 110.79719543]
[92.41470337 125.18441010]
[80.59563446 134.42073059]
[65.60932159 135.06124878]
[53.04527664 126.86705017]
[47.58958817 112.89437866]
[51.27708817 98.35469818]
[62.73243332 88.67094421]
[77.68305969 87.45491791]
[90.55352783 95.16104889]
[85.93952179 80.88831329]
[81.32550812 66.61558533]
[69.71840668 55.86450195]
[73.16564941 41.37430573]
[68.55164337 27.10157394]
[63.93763351 12.82884026]
[61.35266495 27.60442543]
[54.38390732 40.88736343]
[43.69558716 51.41160965]
[30.30643845 58.17406082]
[15.49263477 60.53016281]
[0.66613150 58.25534439]
[-12.75990295 51.56642914]
[-23.50578499 41.10095978]
[-30.54728699 27.85644150]
[-33.21325302 13.09525490]
[-31.24958611 -1.77565646]
[-24.84344673 -15.33889294]
[-14.60542870 -26.30169296]
[-1.51135445 -33.61915207]
[13.19073296 -36.59381866]
[28.09952354 -34.94216156]
[41.79400635 -28.82161140]
[52.96891022 -18.81553841]
[60.55953217 -5.87660122]
[59.88974762 -20.86163902]
[59.21996307 -35.84667969]
[58.55017853 -50.83171844]
[50.20438385 -64.27263641]
[57.36566544 -77.33270264]
[56.69588089 -92.31774139]
[56.02609634 -107.30278015]
[55.35630798 -122.28781891]
[40.49031830 -124.65155792]
[26.40457726 -129.95973206]
[13.67588139 -137.99497986]
[2.82546735 -148.42825317]
[-5.70234871 -160.83233643]
[-11.55835819 -174.69927979]
[-14.50276089 -189.46124268]
[-14.41498470 -204.51371765]
[-11.29862499 -219.24034119]
[-5.28129435 -233.03804016]
[3.39060116 -245.34182739]
[14.36195278 -255.64785767]
[27.18349075 -263.53411865]
[41.33018112 -268.67764282]
[56.22272491 -270.86785889]
[71.25128937 -270.01504517]
[85.80044556 -266.15411377]
[99.27443695 -259.44317627]
[111.12149811 -250.15705872]
[120.85649872 -238.67601013]
[128.08081055 -225.47016907]
[132.49858093 -211.08030701]
[133.92892456 -196.09567261]
[132.31326294 -181.12989807]
[127.71775055 -166.79580688]
[120.33058167 -153.68037415]
[110.45424652 -142.32067871]
[98.49317932 -133.18186951]
[84.93717194 -126.63819122]
[70.34134674 -122.95760345]
[71.01113129 -107.97256470]
[71.68091583 -92.98752594]
[72.35070038 -78.00248718]
[80.64859009 -65.63339996]
[73.53521729 -51.50150299]
[74.20500183 -36.51646423]
[74.87478638 -21.53142548]
[75.54457092 -6.54638624]
[78.21036530 8.21483135]
[82.82437897 22.48756409]
[87.43838501 36.76029968]
[98.71546173 46.49049759]
[95.59824371 62.00157547]
[100.21224976 76.27430725]
[104.82626343 90.54704285]
[110.28161621 104.51983643]
[116.55898285 118.14315796]
[122.83634186 131.76646423]
[129.11370850 145.38978577]
[135.39106750 159.01310730]
[141.66842651 172.63641357]
[148.34861755 186.06678772]
[155.42572021 199.29232788]
[168.75872803 207.80944824]
[167.94155884 222.68162537]
[175.01866150 235.90715027]
[182.09576416 249.13267517]
[189.17286682 262.35821533]
[189.79475403 247.37109375]
[196.03480530 233.73065186]
[206.96737671 223.46035767]
[220.97065735 218.08372498]
[235.96734619 218.39836121]
[249.73280334 224.35760498]
[260.22497559 235.07740784]
[265.88742065 248.96757507]
[265.88015747 263.96755981]
[260.20422363 277.85223389]
[249.70167542 288.56188965]
[235.93046570 294.50775146]
[220.93345642 294.80786133]
[206.93539429 289.41766357]
[196.01391602 279.13833618]
[200.20092773 293.54211426]
[204.38793945 307.94589233]
[208.57495117 322.34967041]
[212.76196289 336.75344849]
[216.94897461 351.15722656]
[221.13598633 365.56100464]
[235.87518311 362.71835327]
[250.81379700 361.24780273]
[265.82437134 361.16189575]
[280.77883911 362.46136475]
[295.54959106 365.13513184]
[310.01065063 369.16036987]
[324.03860474 374.50274658]
[337.51376343 381.11669922]
[350.32119751 388.94580078]
[362.35159302 397.92321777]
[373.50234985 407.97235107]
[383.67831421 419.00750732]
[392.79263306 430.93453979]
[400.76757812 443.65164185]
[407.53512573 457.05032349]
[413.03750610 471.01632690]
[417.22775269 485.43041992]
[420.07019043 500.16964722]
[421.54049683 515.10827637]
[421.62615967 530.11889648]
[420.32641602 545.07330322]
[417.65240479 559.84405518]
[413.62692261 574.30499268]
[408.28430176 588.33288574]
[401.67013550 601.80792236]
[393.84082031 614.61523438]
[384.86322021 626.64550781]
[374.81387329 637.79608154]
[363.77853394 647.97186279]
[351.85137939 657.08599854]
[339.13415527 665.06072998]
[325.73532104 671.82800293]
[311.76925659 677.33013916]
[297.35510254 681.52020264]
[282.61581421 684.36236572]
[267.67715454 685.83245850]
[252.66656494 685.91784668]
[237.71214294 684.61785889]
[222.94146729 681.94360352]
[208.48056030 677.91790771]
[194.45277405 672.57501221]
[180.97782898 665.96063232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 168]
[25 167]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[31 147]
[32 146]
[33 145]
[34 144]
[36 142]
[37 141]
[42 140]
[43 139]
[44 138]
[45 137]
[46 136]
[47 135]
[56 134]
[57 133]
[58 132]
[60 130]
[61 129]
[62 128]
[81 127]
[82 126]
[83 125]
[84 124]
[86 122]
[87 121]
[88 120]
[89 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
