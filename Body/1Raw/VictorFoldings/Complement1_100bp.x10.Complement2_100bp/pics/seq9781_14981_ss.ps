%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[202.48497009 498.59609985]
[209.79260254 485.45651245]
[219.16337585 473.69903564]
[230.34167480 463.64440918]
[243.02253723 455.56692505]
[237.15357971 441.76275635]
[231.28462219 427.95858765]
[216.51231384 430.38088989]
[201.58056641 429.19650269]
[187.35766602 424.46987915]
[174.67173767 416.47167969]
[164.26251221 405.66317749]
[156.73818970 392.66961670]
[152.53991699 378.24411011]
[151.91587830 363.22396851]
[154.90672302 348.48214722]
[161.34280396 334.87643433]
[170.85397339 323.19952393]
[182.89070129 314.13296509]
[177.02174377 300.32876587]
[171.15278625 286.52459717]
[165.28381348 272.72042847]
[159.41485596 258.91625977]
[145.54853821 253.60014343]
[139.39993286 239.68435669]
[145.06996155 225.17613220]
[132.96977234 216.49082947]
[134.69073486 200.76348877]
[128.82177734 186.95932007]
[122.95281219 173.15513611]
[117.08384705 159.35096741]
[101.20485687 161.74903870]
[85.24440765 159.97222900]
[70.28159332 154.14065552]
[57.32804871 144.64862061]
[47.25957489 132.13786316]
[40.75690842 117.45426178]
[38.25969696 101.59056091]
[39.93677521 85.61932373]
[45.67475510 70.62036896]
[55.08569336 57.60778427]
[67.53330994 47.46135712]
[61.25594711 33.83804321]
[48.45352554 24.54242325]
[50.15445709 9.74525738]
[37.35203552 0.44963872]
[39.05297089 -14.34752655]
[32.61943436 -20.83192825]
[32.78525162 -28.22072220]
[26.71141624 -41.93598938]
[12.24191952 -47.70412827]
[6.27756739 -61.69988251]
[11.86577606 -75.45878601]
[5.79194212 -89.17405701]
[-0.28189203 -102.88932037]
[-6.35572577 -116.60459137]
[-12.42955971 -130.31985474]
[-18.50339317 -144.03512573]
[-32.73067474 -139.24877930]
[-47.33889771 -135.79559326]
[-62.20342255 -133.70501709]
[-77.19743347 -132.99491882]
[-92.19300842 -133.67132568]
[-107.06219482 -135.72846985]
[-121.67813873 -139.14881897]
[-135.91613770 -143.90318298]
[-149.65472412 -149.95100403]
[-162.77667236 -157.24066162]
[-175.17002869 -165.70997620]
[-186.72904968 -175.28669739]
[-197.35513306 -185.88909912]
[-206.95761108 -197.42674255]
[-215.45455933 -209.80116272]
[-222.77346802 -222.90681458]
[-228.85191345 -236.63188171]
[-233.63803101 -250.85923767]
[-237.09097290 -265.46752930]
[-239.18128967 -280.33209229]
[-239.89114380 -295.32611084]
[-239.21449280 -310.32165527]
[-237.15708923 -325.19082642]
[-233.73649597 -339.80670166]
[-228.98188782 -354.04461670]
[-222.93385315 -367.78311157]
[-215.64398193 -380.90493774]
[-207.17445374 -393.29815674]
[-197.59754944 -404.85702515]
[-186.99496460 -415.48294067]
[-175.45716858 -425.08520508]
[-163.08258057 -433.58193970]
[-149.97680664 -440.90063477]
[-136.25164795 -446.97885132]
[-122.02421570 -451.76473999]
[-107.41587830 -455.21743774]
[-92.55128479 -457.30749512]
[-77.55724335 -458.01712036]
[-62.56169891 -457.34020996]
[-47.69257736 -455.28256226]
[-33.07674789 -451.86172485]
[-18.83890533 -447.10687256]
[-5.10052443 -441.05862427]
[8.02117920 -433.76852417]
[20.41425514 -425.29879761]
[31.97296524 -415.72167969]
[42.59869385 -405.11892700]
[52.20078659 -393.58096313]
[60.69731522 -381.20623779]
[68.01579285 -368.10034180]
[74.09378052 -354.37509155]
[78.87941742 -340.14758301]
[82.33187866 -325.53918457]
[84.42169952 -310.67456055]
[85.13105774 -295.68051147]
[84.45389557 -280.68496704]
[82.39600372 -265.81588745]
[78.97492218 -251.20010376]
[74.21984863 -236.96234131]
[68.17134857 -223.22406006]
[60.88103485 -210.10247803]
[52.41109848 -197.70954895]
[42.83380508 -186.15100098]
[32.23086929 -175.52543640]
[20.69274902 -165.92353821]
[8.31789112 -157.42721558]
[-4.78812742 -150.10896301]
[1.28570676 -136.39369202]
[7.35954094 -122.67842102]
[13.43337440 -108.96315765]
[19.50720787 -95.24788666]
[25.58104324 -81.53262329]
[39.52497101 -76.42356110]
[45.88008118 -62.60085678]
[40.42668152 -48.00982285]
[46.50051880 -34.29455566]
[52.67628479 -20.62488747]
[65.02970886 -12.30369854]
[63.77777481 3.46789718]
[76.13120270 11.78908539]
[74.87926483 27.56068039]
[81.15662384 41.18399811]
[94.76752472 38.46126175]
[108.64273071 38.84692764]
[122.08137512 42.32151413]
[134.40466309 48.70951462]
[144.99012756 57.68826294]
[153.30308533 68.80422974]
[158.92362976 81.49593353]
[161.56787109 95.12230682]
[161.10224915 108.99505615]
[157.55026245 122.41345215]
[151.09133911 134.69972229]
[142.05172729 145.23326111]
[130.88803101 153.48200989]
[136.75698853 167.28617859]
[142.62594604 181.09036255]
[148.49490356 194.89453125]
[161.01489258 204.56721497]
[158.87414551 219.30717468]
[173.25616455 225.29010010]
[179.01147461 239.37310791]
[173.21903992 253.04728699]
[179.08799744 266.85147095]
[184.95695496 280.65563965]
[190.82591248 294.45980835]
[196.69488525 308.26397705]
[211.57550049 305.88644409]
[226.58363342 307.13876343]
[240.84722900 311.94384766]
[253.53857422 320.01824951]
[263.92224121 330.88897705]
[271.39782715 343.92111206]
[275.53448486 358.35494995]
[276.09600830 373.35031128]
[273.05404663 388.03533936]
[266.58969116 401.55734253]
[257.08261108 413.13211060]
[245.08879089 422.08963013]
[250.95774841 435.89379883]
[256.82672119 449.69796753]
[271.44195557 446.17028809]
[286.43850708 445.09646606]
[301.40725708 446.50576782]
[315.93988037 450.35980225]
[329.63983154 456.55337524]
[342.13345337 464.91757202]
[353.07986450 475.22415161]
[362.18045044 487.19198608]
[369.18695068 500.49459839]
[373.90820312 514.76904297]
[376.21542358 529.62591553]
[376.04565430 544.65991211]
[373.40353394 559.46087646]
[368.36114502 573.62506104]
[361.05606079 586.76605225]
[351.68753052 598.52532959]
[340.51116943 608.58209229]
[327.83187866 616.66204834]
[313.99551392 622.54467773]
[299.37960815 626.06951904]
[284.38284302 627.14050293]
[269.41433716 625.72827148]
[254.88249207 621.87145996]
[241.18371582 615.67523193]
[228.69171143 607.30865479]
[217.74728394 596.99993896]
[208.64900208 585.03033447]
[201.64508057 571.72644043]
[196.92657471 557.45104980]
[194.62222290 542.59375000]
[194.79489136 527.55975342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 179]
[6 178]
[7 177]
[19 165]
[20 164]
[21 163]
[22 162]
[23 161]
[26 158]
[28 156]
[29 155]
[30 154]
[31 153]
[42 140]
[43 139]
[45 137]
[47 135]
[49 134]
[50 133]
[53 130]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
