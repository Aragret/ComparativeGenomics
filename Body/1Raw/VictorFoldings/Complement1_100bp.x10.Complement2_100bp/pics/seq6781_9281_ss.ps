%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[207.59420776 505.63223267]
[216.61077881 493.60098267]
[227.48475647 483.21798706]
[239.91949463 474.76654053]
[233.64213562 461.14321899]
[227.36477661 447.51989746]
[221.08741760 433.89657593]
[214.81005859 420.27328491]
[208.53269958 406.64996338]
[194.51425171 401.74905396]
[187.95404053 388.02252197]
[193.18959045 373.35189819]
[186.91223145 359.72857666]
[180.63487244 346.10525513]
[174.25627136 332.52905273]
[167.77677917 319.00070190]
[161.29727173 305.47238159]
[156.39585876 319.64898682]
[143.59370422 327.46591187]
[128.74377441 325.34942627]
[118.63526154 314.26708984]
[117.88964081 299.28561401]
[126.84780884 287.25436401]
[141.41419983 283.67382812]
[154.93055725 290.18231201]
[143.36877441 280.79217529]
[146.02279663 265.19515991]
[140.98587036 251.06613159]
[135.94895935 236.93710327]
[130.91204834 222.80807495]
[125.87512207 208.67904663]
[122.86332703 206.84562683]
[120.58992767 203.46234131]
[119.77371216 198.89208984]
[120.94417572 193.80514526]
[116.54317474 179.46530151]
[101.66112518 181.15202332]
[86.72251892 180.07569885]
[72.23597717 176.27299500]
[58.69474030 169.87335205]
[46.55985641 161.09468079]
[36.24448395 150.23588562]
[28.09984589 137.66667175]
[22.40324402 123.81497955]
[19.34863472 109.15245056]
[19.04002380 94.17829895]
[21.48791695 79.40235901]
[26.60896873 65.32772827]
[34.22881699 52.43360901]
[44.08802795 41.15901566]
[55.85091400 31.88782692]
[69.11697388 24.93570137]
[64.71598053 10.59585476]
[60.31497955 -3.74399233]
[55.91398239 -18.08383942]
[51.51298523 -32.42368698]
[46.89897537 -46.69641876]
[35.13309097 -57.27349472]
[38.36421585 -71.81340790]
[33.53821945 -86.01586914]
[28.71222115 -100.21832275]
[23.88622284 -114.42077637]
[14.31475925 -116.00739288]
[6.02832174 -120.94148254]
[0.14364836 -128.50900269]
[-2.56416321 -137.64454651]
[-1.76356089 -147.08113098]
[2.39346313 -155.52601624]
[9.29801655 -161.83772278]
[5.32592058 -176.30224609]
[1.35382426 -190.76676941]
[-2.61827207 -205.23129272]
[-16.01634407 -217.86352539]
[-10.92056179 -234.65638733]
[-15.10757256 -249.06016541]
[-19.29458427 -263.46395874]
[-23.48159599 -277.86773682]
[-31.63630104 -265.27801514]
[-46.27536774 -262.00729370]
[-59.01287460 -269.92913818]
[-62.55219650 -284.50561523]
[-54.86585236 -297.38659668]
[-40.35692596 -301.19332886]
[-27.33737755 -293.74584961]
[-30.22265053 -308.46572876]
[-33.10792160 -323.18563843]
[-35.99319458 -337.90551758]
[-51.05005264 -338.76681519]
[-65.41941833 -343.34634399]
[-78.19803619 -351.35620117]
[-88.58261108 -362.29290771]
[-95.92037201 -375.46896362]
[-99.75006104 -390.05609131]
[-99.83093262 -405.13732910]
[-96.15791321 -419.76470947]
[-88.96189117 -433.01867676]
[-78.69520569 -444.06613159]
[-66.00323486 -452.21258545]
[-51.68380737 -456.94595337]
[-36.63705444 -457.96868896]
[-21.80882454 -455.21652222]
[-8.13123512 -448.86245728]
[3.53592873 -439.30587769]
[12.45925999 -427.14755249]
[18.07783127 -413.15173340]
[20.03845406 -398.19824219]
[18.21788216 -383.22708130]
[12.73055649 -369.17929077]
[3.92141652 -356.93798828]
[-7.65578747 -347.27261353]
[-21.27330399 -340.79080200]
[-18.38803101 -326.07089233]
[-15.50275803 -311.35101318]
[-12.61748600 -296.63110352]
[-9.07781315 -282.05474854]
[-4.89080191 -267.65097046]
[-0.70379072 -253.24717712]
[3.48322058 -238.84339905]
[13.92979527 -232.74456787]
[17.53594589 -220.77880859]
[11.84625149 -209.20339966]
[15.81834793 -194.73887634]
[19.79044342 -180.27435303]
[23.76254082 -165.80982971]
[42.31383514 -157.22837830]
[48.58723831 -137.46630859]
[38.08868027 -119.24677277]
[42.91467667 -105.04431915]
[47.74067307 -90.84186554]
[52.56667328 -76.63940430]
[63.98736954 -67.07818604]
[61.10143280 -51.52241898]
[64.91345215 -48.64534378]
[66.95857239 -43.34303284]
[65.85282898 -36.82468414]
[70.25382996 -22.48483849]
[74.65483093 -8.14499092]
[79.05582428 6.19485664]
[83.45682526 20.53470421]
[98.33887482 18.84797859]
[113.27748108 19.92429543]
[127.76402283 23.72700882]
[141.30525208 30.12664604]
[153.44013977 38.90531158]
[163.75550842 49.76411438]
[171.90016174 62.33333588]
[177.59675598 76.18502045]
[180.65136719 90.84754944]
[180.95997620 105.82170105]
[178.51208496 120.59764099]
[173.39103699 134.67227173]
[165.77117920 147.56639099]
[155.91197205 158.84098816]
[144.14907837 168.11216736]
[130.88302612 175.06430054]
[135.28402710 189.40414429]
[140.00415039 203.64213562]
[145.04107666 217.77116394]
[150.07798767 231.90019226]
[155.11489868 246.02922058]
[160.15182495 260.15826416]
[172.07388306 270.55899048]
[169.05958557 285.14538574]
[174.82562256 298.99288940]
[181.30511475 312.52120972]
[187.78460693 326.04956055]
[194.31398010 332.43746948]
[194.25819397 339.82791138]
[200.53555298 353.45123291]
[206.81291199 367.07455444]
[221.36668396 372.62661743]
[227.53874207 386.53201294]
[222.15600586 400.37258911]
[228.43336487 413.99591064]
[234.71072388 427.61923218]
[240.98809814 441.24255371]
[247.26545715 454.86584473]
[253.54281616 468.48916626]
[268.04653931 464.52789307]
[283.00448608 463.00805664]
[298.00857544 463.97106934]
[312.64947510 467.39068604]
[326.52777100 473.17361450]
[339.26489258 481.16210938]
[350.51330566 491.13821411]
[359.96618652 502.82980347]
[367.36563110 515.91790771]
[372.50979614 530.04541016]
[375.25833130 544.82702637]
[375.53625488 559.85937500]
[373.33599854 574.73248291]
[368.71755981 589.04052734]
[361.80697632 602.39318848]
[352.79272461 614.42620850]
[341.92074585 624.81127930]
[329.48764038 633.26513672]
[315.83255005 639.55712891]
[301.32806396 643.51556396]
[286.36984253 645.03259277]
[271.36593628 644.06665039]
[256.72570801 640.64422607]
[242.84851074 634.85858154]
[230.11294556 626.86767578]
[218.86643982 616.88940430]
[209.41580200 605.19598389]
[202.01887512 592.10644531]
[196.87744141 577.97796631]
[194.13174438 563.19580078]
[193.85671997 548.16339111]
[196.05984497 533.29071045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 178]
[5 177]
[6 176]
[7 175]
[8 174]
[9 173]
[12 170]
[13 169]
[14 168]
[15 166]
[16 165]
[17 164]
[25 163]
[27 161]
[28 160]
[29 159]
[30 158]
[31 157]
[35 156]
[36 155]
[52 139]
[53 138]
[54 137]
[55 136]
[56 135]
[57 132]
[59 130]
[60 129]
[61 128]
[62 127]
[69 124]
[70 123]
[71 122]
[72 121]
[74 118]
[75 117]
[76 116]
[77 115]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
