%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[-54.87898254 490.48098755]
[-49.02037048 504.33706665]
[-45.80779648 519.03381348]
[-45.35068130 534.07061768]
[-47.66458893 548.93536377]
[-52.67071533 563.12176514]
[-60.19854736 576.14660645]
[-69.99169159 587.56622314]
[-81.71659851 596.99182129]
[-94.97392273 604.10223389]
[-109.31212616 608.65533447]
[-124.24285126 610.49603271]
[-139.25755310 609.56164551]
[-153.84486389 605.88397217]
[-167.50791931 599.58825684]
[-179.78137207 590.88903809]
[-190.24719238 580.08245850]
[-198.54891968 567.53674316]
[-204.40379333 553.67907715]
[-207.61241150 538.98144531]
[-208.06546021 523.94451904]
[-205.74755859 509.08041382]
[-200.73760986 494.89538574]
[-193.20625305 481.87255859]
[-183.41003418 470.45553589]
[-171.68258667 461.03314209]
[-158.42335510 453.92630005]
[-144.08392334 449.37707520]
[-129.15270996 447.54040527]
[-114.13824463 448.47885132]
[-99.55193329 452.16043091]
[-93.27457428 438.53713989]
[-86.99721527 424.91381836]
[-80.71984863 411.29049683]
[-92.30995178 399.33535767]
[-98.43270111 383.81137085]
[-98.12253571 367.08972168]
[-91.39879608 351.73611450]
[-79.26708984 340.11727905]
[-63.56897354 334.03601074]
[-46.70246506 334.45159912]
[-40.83350372 320.64743042]
[-34.96454239 306.84326172]
[-29.09558105 293.03909302]
[-41.72621536 301.13024902]
[-56.66199112 302.51681519]
[-70.56622314 296.88897705]
[-80.33266449 285.50405884]
[-83.77947235 270.90545654]
[-80.13661957 256.35452271]
[-70.21793365 245.10198975]
[-56.23926163 239.66169739]
[-41.32348251 241.24900818]
[-28.80282211 249.50933838]
[-21.47442436 262.59729004]
[-20.97547722 277.58901978]
[-12.93430424 264.92648315]
[-4.89313078 252.26397705]
[-4.60190153 237.37220764]
[9.32765388 229.87034607]
[17.36882591 217.20780945]
[25.40999985 204.54528809]
[33.45117188 191.88276672]
[41.49234390 179.22024536]
[49.53351974 166.55772400]
[57.57469177 153.89518738]
[65.61586761 141.23266602]
[65.41008759 123.68488312]
[81.80169678 115.29462433]
[89.65345764 102.51377869]
[96.43344879 89.13350677]
[102.09622955 75.24347687]
[107.65545654 61.31167984]
[113.11081696 47.33888245]
[118.56616974 33.36608505]
[124.02153015 19.39328575]
[129.47688293 5.42048788]
[123.17677307 -1.95778406]
[120.01563263 -11.06917286]
[120.38787079 -20.64822769]
[124.20022583 -29.38070488]
[130.89035034 -36.08387756]
[139.50935364 -39.86670303]
[148.85627747 -40.24812317]
[155.13363647 -53.87144089]
[161.41099548 -67.49475861]
[167.68835449 -81.11807251]
[173.96571350 -94.74138641]
[172.71379089 -110.51298523]
[185.06721497 -118.83417511]
[183.81527710 -134.60577393]
[196.16870117 -142.92695618]
[202.44606018 -156.55027771]
[201.19412231 -172.32186890]
[213.54754639 -180.64305115]
[219.82490540 -194.26637268]
[226.10226440 -207.88969421]
[213.41719055 -215.93782043]
[201.91806030 -225.60493469]
[191.81007385 -236.71853638]
[183.27362061 -249.08026123]
[176.46104431 -262.46954346]
[171.49394226 -276.64736938]
[168.46093750 -291.36077881]
[167.41616821 -306.34716797]
[168.37828064 -321.33908081]
[171.33009338 -336.06900024]
[176.21893311 -350.27401733]
[182.95755005 -363.70065308]
[191.42570496 -376.10928345]
[201.47224426 -387.27844238]
[212.91789246 -397.00885010]
[225.55839539 -405.12680054]
[239.16815186 -411.48745728]
[253.50428772 -415.97729492]
[268.31097412 -418.51620483]
[283.32391357 -419.05883789]
[298.27523804 -417.59552002]
[312.89813232 -414.15240479]
[326.93157959 -408.79092407]
[340.12515259 -401.60671997]
[352.24343872 -392.72802734]
[363.07012939 -382.31332397]
[372.41201782 -370.54843140]
[380.10238647 -357.64334106]
[386.00399780 -343.82833862]
[390.01153564 -329.34997559]
[392.05349731 -314.46661377]
[392.09338379 -299.44390869]
[390.13052368 -284.54992676]
[386.19995117 -270.05047607]
[380.37182617 -256.20431519]
[372.75009155 -243.25856018]
[363.47082520 -231.44421387]
[352.69961548 -220.97213745]
[340.62869263 -212.02922058]
[327.47344971 -204.77503967]
[313.46865845 -199.33906555]
[298.86428833 -195.81831360]
[283.92095947 -194.27561951]
[268.90530396 -194.73849487]
[254.08537292 -197.19869995]
[239.72558594 -201.61233521]
[233.44822693 -187.98901367]
[227.17086792 -174.36569214]
[228.87179565 -159.56852722]
[216.06938171 -150.27291870]
[209.79200745 -136.64959717]
[211.49295044 -121.85243225]
[198.69052124 -112.55680847]
[200.39146423 -97.75964355]
[187.58903503 -88.46402740]
[181.31167603 -74.84071350]
[175.03431702 -61.21739578]
[168.75695801 -47.59407806]
[162.47959900 -33.97076416]
[171.14405823 -15.45809650]
[163.21524048 3.69990158]
[143.44969177 10.87584496]
[137.99432373 24.84864235]
[132.53897095 38.82144165]
[127.08361053 52.79423904]
[121.62825775 66.76703644]
[122.12383270 74.14105988]
[115.98625946 80.90626526]
[110.32347107 94.79629517]
[122.83223724 86.51795959]
[137.74571228 84.90918732]
[151.73219299 90.32936859]
[161.66706848 101.56762695]
[165.33084106 116.11330414]
[161.90502930 130.71685791]
[152.15498352 142.11582947]
[138.25885010 147.76364136]
[123.32109833 146.39855957]
[110.67884064 138.32556152]
[103.15639496 125.34816742]
[102.43429565 110.36553192]
[94.58254242 123.14637756]
[96.81498718 135.84988403]
[90.01212311 146.33343506]
[78.27838898 149.27383423]
[70.23721313 161.93637085]
[62.19604492 174.59889221]
[54.15486908 187.26141357]
[46.11369705 199.92393494]
[38.07252502 212.58647156]
[30.03135109 225.24899292]
[21.99017906 237.91151428]
[21.12379074 253.70898438]
[7.76939392 260.30514526]
[-0.27177885 272.96768188]
[-8.31295204 285.63018799]
[-15.29140377 298.90805054]
[-21.16036415 312.71221924]
[-27.02932549 326.51638794]
[-32.89828491 340.32055664]
[-22.96162796 349.37164307]
[-16.30872536 361.02438354]
[-13.57481670 374.13781738]
[-15.01221466 387.43295288]
[-20.46708107 399.61746216]
[-29.39575958 409.51135254]
[-40.91892624 416.16119385]
[-53.90818024 418.93197632]
[-67.09653473 417.56784058]
[-73.37389374 431.19116211]
[-79.65125275 444.81448364]
[-85.92861938 458.43780518]
[-73.65281677 467.13375854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 209]
[32 208]
[33 207]
[34 206]
[41 197]
[42 196]
[43 195]
[44 194]
[56 193]
[57 192]
[58 191]
[60 189]
[61 188]
[62 187]
[63 186]
[64 185]
[65 184]
[66 183]
[67 182]
[69 179]
[70 178]
[71 166]
[72 165]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[90 150]
[92 148]
[93 147]
[95 145]
[96 144]
[97 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
