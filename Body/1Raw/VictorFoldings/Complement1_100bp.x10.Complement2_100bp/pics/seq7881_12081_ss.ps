%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[91.11989594 1014.38830566]
[76.14160156 1013.55297852]
[61.20211792 1012.18963623]
[46.32005310 1010.29986572]
[31.51395226 1007.88604736]
[16.80226326 1004.95123291]
[2.20331025 1001.49908447]
[-12.26471519 997.53381348]
[-26.58378792 993.06042480]
[-40.73606873 988.08453369]
[-54.70392609 982.61224365]
[-68.46995544 976.65039062]
[-82.01700592 970.20648193]
[-95.32820892 963.28845215]
[-108.38696289 955.90496826]
[-121.17701721 948.06518555]
[-133.68241882 939.77899170]
[-145.88760376 931.05657959]
[-157.77735901 921.90881348]
[-169.33686829 912.34722900]
[-180.55172729 902.38360596]
[-191.40797424 892.03039551]
[-201.89207458 881.30047607]
[-211.99098206 870.20727539]
[-221.69209290 858.76458740]
[-230.98333740 846.98663330]
[-239.85311890 834.88812256]
[-248.29042053 822.48413086]
[-256.28469849 809.79010010]
[-263.82601929 796.82183838]
[-270.90493774 783.59552002]
[-277.51269531 770.12762451]
[-283.64105225 756.43487549]
[-289.28231812 742.53442383]
[-294.42953491 728.44354248]
[-299.07623291 714.17974854]
[-303.21664429 699.76092529]
[-306.84564209 685.20489502]
[-309.95864868 670.52990723]
[-312.55181885 655.75415039]
[-314.62191772 640.89611816]
[-316.16638184 625.97424316]
[-317.18322754 611.00720215]
[-317.67126465 596.01354980]
[-317.62985229 581.01202393]
[-317.05902100 566.02136230]
[-315.95950317 551.06011963]
[-314.33267212 536.14703369]
[-312.18057251 521.30065918]
[-309.50582886 506.53942871]
[-306.31182861 491.88183594]
[-302.60250854 477.34609985]
[-298.38250732 462.95028687]
[-293.65710449 448.71240234]
[-288.43215942 434.65014648]
[-282.71420288 420.78106689]
[-276.51034546 407.12240601]
[-269.82830811 393.69119263]
[-262.67645264 380.50415039]
[-255.06362915 367.57775879]
[-246.99935913 354.92807007]
[-238.49369812 342.57086182]
[-229.55723572 330.52151489]
[-220.20109558 318.79507446]
[-210.43693542 307.40609741]
[-200.27693176 296.36883545]
[-189.73371887 285.69702148]
[-178.82046509 275.40393066]
[-167.55075073 265.50238037]
[-155.93861389 256.00473022]
[-143.99851990 246.92282104]
[-131.74536133 238.26794434]
[-119.19438171 230.05088806]
[-106.36123657 222.28189087]
[-93.26190186 214.97064209]
[-79.91269684 208.12623596]
[-66.33026886 201.75721741]
[-52.53152084 195.87150574]
[-38.53365707 190.47642517]
[-24.35411263 185.57873535]
[-10.01055336 181.18449402]
[4.47914934 177.29919434]
[19.09694290 173.92768860]
[33.82461929 171.07417297]
[48.64382172 168.74218750]
[63.53609467 166.93463135]
[78.48287964 165.65379333]
[93.46556091 164.90124512]
[93.24223328 149.90290833]
[93.01890564 134.90457153]
[92.79557800 119.90622711]
[82.71508026 112.22265625]
[78.83075714 100.15760040]
[82.53501892 88.03604889]
[92.50000000 80.20323944]
[92.50000000 65.20323944]
[84.76270294 51.40306854]
[92.50000000 38.67579651]
[92.50000000 23.67579651]
[78.72612762 17.09983444]
[69.17620850 5.19346285]
[65.74636841 -9.67929554]
[69.11760712 -24.56544685]
[78.62057495 -36.50933075]
[92.36843872 -43.13948441]
[107.63156128 -43.13948441]
[121.37942505 -36.50933075]
[130.88238525 -24.56544685]
[134.25363159 -9.67929554]
[130.82379150 5.19346285]
[121.27387238 17.09983444]
[107.50000000 23.67579651]
[107.50000000 38.67579651]
[115.23729706 51.40306854]
[107.50000000 65.20323944]
[107.50000000 80.20323944]
[119.43340302 91.60330963]
[119.55626678 108.10642242]
[107.79391479 119.68289948]
[108.01724243 134.68124390]
[108.24057007 149.67958069]
[108.46389771 164.67791748]
[123.46234131 164.98403931]
[138.44062805 165.81930542]
[153.38012695 167.18263245]
[168.26219177 169.07237244]
[183.06829834 171.48612976]
[197.77998352 174.42091370]
[212.37895203 177.87307739]
[226.84698486 181.83830261]
[241.16606140 186.31166077]
[255.31834412 191.28756714]
[269.28622437 196.75982666]
[283.05224609 202.72163391]
[296.59933472 209.16554260]
[309.91052246 216.08354187]
[322.96929932 223.46699524]
[335.75936890 231.30671692]
[348.26480103 239.59294128]
[360.47000122 248.31533813]
[372.35977173 257.46304321]
[383.91928101 267.02462769]
[395.13415527 276.98825073]
[405.99044800 287.34143066]
[416.47454834 298.07128906]
[426.57348633 309.16448975]
[436.27462769 320.60717773]
[445.56588745 332.38510132]
[454.43569946 344.48358154]
[462.87301636 356.88754272]
[470.86730957 369.58157349]
[478.40863037 382.54980469]
[485.48760986 395.77612305]
[492.09539795 409.24401855]
[498.22375488 422.93670654]
[503.86505127 436.83718872]
[509.01229858 450.92807007]
[513.65899658 465.19183350]
[517.79943848 479.61068726]
[521.42846680 494.16668701]
[524.54150391 508.84170532]
[527.13470459 523.61743164]
[529.20483398 538.47546387]
[530.74932861 553.39733887]
[531.76623535 568.36437988]
[532.25427246 583.35803223]
[532.21289062 598.35949707]
[531.64208984 613.35021973]
[530.54260254 628.31146240]
[528.91577148 643.22454834]
[526.76367188 658.07092285]
[524.08898926 672.83215332]
[520.89501953 687.48974609]
[517.18572998 702.02551270]
[512.96575928 716.42132568]
[508.24038696 730.65917969]
[503.01547241 744.72143555]
[497.29754639 758.59057617]
[491.09368896 772.24926758]
[484.41168213 785.68048096]
[477.25982666 798.86749268]
[469.64706421 811.79394531]
[461.58282471 824.44366455]
[453.07717896 836.80084229]
[444.14071655 848.85021973]
[434.78460693 860.57666016]
[425.02047729 871.96563721]
[414.86047363 883.00292969]
[404.31729126 893.67480469]
[393.40405273 903.96789551]
[382.13436890 913.86944580]
[370.52224731 923.36712646]
[358.58218384 932.44903564]
[346.32901001 941.10394287]
[333.77807617 949.32104492]
[320.94491577 957.09002686]
[307.84561157 964.40130615]
[294.49642944 971.24578857]
[280.91400146 977.61480713]
[267.11526489 983.50054932]
[253.11740112 988.89562988]
[238.93786621 993.79339600]
[224.59431458 998.18762207]
[210.10462952 1002.07293701]
[195.48683167 1005.44451904]
[180.75917053 1008.29803467]
[165.93997192 1010.63006592]
[151.04769897 1012.43762207]
[136.10092163 1013.71850586]
[121.11824036 1014.47106934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 122]
[89 121]
[90 120]
[91 119]
[95 116]
[96 115]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
