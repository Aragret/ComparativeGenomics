%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[-57.06392288 234.30447388]
[-52.89173508 248.72259521]
[-49.99205780 263.44949341]
[-48.38695908 278.37304688]
[-48.08865356 293.37973022]
[-49.09941483 308.35531616]
[-51.41154861 323.18579102]
[-55.00745773 337.75833130]
[-59.85977554 351.96200562]
[-65.93157196 365.68872070]
[-73.17662811 378.83401489]
[-81.53981781 391.29782104]
[-90.95748138 402.98529053]
[-101.35794830 413.80746460]
[-112.66206360 423.68200684]
[-124.78379059 432.53372192]
[-137.63087463 440.29528809]
[-151.10554504 446.90759277]
[-165.10523987 452.32034302]
[-179.52342224 456.49234009]
[-194.25035095 459.39181519]
[-209.17395020 460.99670410]
[-224.18061829 461.29476929]
[-239.15618896 460.28381348]
[-253.98663330 457.97146606]
[-268.55911255 454.37536621]
[-282.76272583 449.52285767]
[-296.48934937 443.45086670]
[-309.63455200 436.20559692]
[-322.09823608 427.84225464]
[-333.78555298 418.42440796]
[-344.60760498 408.02380371]
[-354.48196411 396.71954346]
[-363.33352661 384.59768677]
[-371.09490967 371.75051880]
[-377.70703125 358.27575684]
[-383.11959839 344.27597046]
[-387.29138184 329.85772705]
[-390.19064331 315.13076782]
[-391.79531860 300.20715332]
[-392.09320068 285.20046997]
[-391.08203125 270.22491455]
[-388.76947021 255.39448547]
[-385.17315674 240.82205200]
[-380.32043457 226.61851501]
[-374.24826050 212.89196777]
[-367.00283813 199.74690247]
[-358.63928223 187.28332520]
[-349.22128296 175.59611511]
[-338.82052612 164.77423096]
[-327.51614380 154.90000916]
[-315.39416504 146.04862976]
[-302.54687500 138.28742981]
[-289.07202148 131.67549133]
[-275.07214355 126.26313782]
[-260.65386963 122.09155273]
[-245.92684937 119.19249725]
[-231.00320435 117.58802795]
[-215.99652100 117.29035187]
[-201.02099609 118.30174255]
[-186.19059753 120.61450195]
[-171.61820984 124.21102142]
[-157.41474915 129.06393433]
[-143.68829346 135.13630676]
[-130.54330444 142.38192749]
[-118.07985687 150.74563599]
[-106.39278412 160.16378784]
[-95.57103729 170.56471252]
[-85.69697571 181.86924744]
[-76.84575653 193.99134827]
[-64.00682068 186.23495483]
[-51.16788101 178.47856140]
[-38.32893753 170.72216797]
[-25.48999786 162.96577454]
[-12.65105820 155.20938110]
[-10.65737438 150.86953735]
[-5.91625834 147.73603821]
[0.68764251 147.41976929]
[13.75182724 140.04907227]
[26.81601334 132.67839050]
[39.88019943 125.30769348]
[52.94438171 117.93700409]
[66.00856781 110.56631470]
[79.07275391 103.19562531]
[80.99811554 90.66779327]
[89.73513031 81.48529816]
[102.15181732 78.93981934]
[113.79714203 83.94383240]
[126.96961212 76.76846313]
[139.97856140 69.30072021]
[152.81750488 61.54433060]
[165.65644836 53.78793716]
[173.46751404 40.02938843]
[188.36206055 40.07078934]
[201.20100403 32.31439972]
[194.34593201 18.96566391]
[188.42814636 5.17579508]
[183.47584534 -8.98949242]
[179.51263428 -23.46269417]
[176.55738831 -38.17483902]
[174.62419128 -53.05581284]
[173.72225952 -68.03470612]
[173.85589600 -83.04013062]
[175.02445984 -98.00057983]
[177.22238159 -112.84476471]
[180.43919373 -127.50194550]
[184.65956116 -141.90226746]
[189.86335754 -155.97709656]
[196.02581787 -169.65937805]
[203.11753845 -182.88391113]
[211.10475159 -195.58766174]
[219.94937134 -207.71008301]
[229.60926819 -219.19342041]
[240.03840637 -229.98295593]
[251.18707275 -240.02725220]
[263.00213623 -249.27845764]
[275.42730713 -257.69247437]
[288.40338135 -265.22921753]
[301.86849976 -271.85275269]
[315.75848389 -277.53155518]
[330.00717163 -282.23849487]
[344.54666138 -285.95120239]
[359.30764771 -288.65197754]
[374.21978760 -290.32791138]
[389.21200562 -290.97106934]
[404.21289062 -290.57833862]
[419.15093994 -289.15161133]
[433.95495605 -286.69769287]
[448.55438232 -283.22827148]
[462.87969971 -278.75988770]
[476.86257935 -273.31381226]
[490.43640137 -266.91601562]
[503.53649902 -259.59698486]
[516.10046387 -251.39161682]
[528.06835938 -242.33897400]
[539.38317871 -232.48223877]
[549.99096680 -221.86834717]
[559.84124756 -210.54789734]
[568.88708496 -198.57484436]
[577.08526611 -186.00624084]
[584.39685059 -172.90196228]
[590.78686523 -159.32449341]
[596.22497559 -145.33850098]
[600.68518066 -131.01065063]
[604.14630127 -116.40923309]
[606.59173584 -101.60382080]
[608.00994873 -86.66496277]
[608.39410400 -71.66386414]
[607.74243164 -56.67199707]
[606.05798340 -41.76081848]
[603.34881592 -27.00138092]
[599.62780762 -12.46402168]
[594.91271973 1.78198111]
[589.22601318 15.66873741]
[582.59478760 29.13007164]
[575.05059814 42.10183334]
[566.62951660 54.52220535]
[557.37158203 66.33199310]
[547.32092285 77.47492981]
[536.52545166 87.89790344]
[525.03662109 97.55124664]
[512.90911865 106.38895416]
[500.20083618 114.36891174]
[486.97225952 121.45309448]
[473.28646851 127.60773468]
[459.20864868 132.80351257]
[444.80593872 137.01565552]
[430.14691162 140.22410583]
[415.30148315 142.41355896]
[400.34036255 143.57359314]
[385.33486938 143.69866943]
[370.35647583 142.78819275]
[355.47662354 140.84651184]
[340.76617432 137.88285828]
[326.29522705 133.91139221]
[312.13278198 128.95100403]
[298.34628296 123.02535248]
[285.00146484 116.16267395]
[272.16189575 108.39566040]
[259.88879395 99.76133728]
[248.24061584 90.30084991]
[237.27290344 80.05928040]
[227.03788757 69.08543396]
[217.58438110 57.43161011]
[208.95739746 45.15333939]
[196.11845398 52.90972900]
[189.22570801 66.11349487]
[173.41284180 66.62687683]
[160.57389832 74.38327026]
[147.73495483 82.13966370]
[146.53976440 85.45687103]
[143.67846680 88.35997772]
[139.36320496 90.07221985]
[134.14497375 89.94094086]
[120.97250366 97.11630249]
[116.66979980 113.04911804]
[102.23611450 121.05139923]
[86.44344330 116.25981140]
[73.37925720 123.63050079]
[60.31507111 131.00119019]
[47.25088882 138.37187195]
[34.18670273 145.74256897]
[21.12251663 153.11325073]
[8.05833244 160.48394775]
[-4.89466667 168.04832458]
[-17.73360634 175.80471802]
[-30.57254791 183.56111145]
[-43.41148758 191.31750488]
[-56.25042725 199.07389832]
[-69.08937073 206.83027649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 210]
[71 209]
[72 208]
[73 207]
[74 206]
[75 205]
[78 204]
[79 203]
[80 202]
[81 201]
[82 200]
[83 199]
[84 198]
[88 195]
[89 194]
[90 190]
[91 189]
[92 188]
[94 186]
[95 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
