%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[2.49450421 591.25170898]
[-7.76057291 602.20977783]
[-18.86416054 612.30712891]
[-30.74424934 621.47827148]
[-43.32378769 629.66375732]
[-56.52119446 636.81036377]
[-70.25087738 642.87194824]
[-84.42378998 647.80902100]
[-98.94802094 651.58959961]
[-113.72937012 654.18927002]
[-128.67196655 655.59106445]
[-143.67890930 655.78594971]
[-158.65286255 654.77258301]
[-173.49673462 652.55761719]
[-188.11422729 649.15539551]
[-202.41055298 644.58801270]
[-216.29299927 638.88500977]
[-229.67152405 632.08343506]
[-242.45936584 624.22735596]
[-254.57357788 615.36779785]
[-265.93560791 605.56213379]
[-276.47174072 594.87402344]
[-286.11370850 583.37274170]
[-294.79888916 571.13293457]
[-302.47103882 558.23388672]
[-309.08035278 544.75939941]
[-314.58395386 530.79669189]
[-318.94619751 516.43640137]
[-322.13876343 501.77169800]
[-324.14093018 486.89764404]
[-324.93975830 471.91070557]
[-324.52999878 456.90811157]
[-322.91439819 441.98709106]
[-320.10336304 427.24450684]
[-316.11514282 412.77587891]
[-310.97561646 398.67514038]
[-304.71810913 385.03366089]
[-297.38320923 371.93994141]
[-289.01846313 359.47888184]
[-279.67816162 347.73135376]
[-269.42282104 336.77349854]
[-258.31903076 326.67636108]
[-246.43873596 317.50549316]
[-233.85900879 309.32031250]
[-220.66145325 302.17395020]
[-206.93164062 296.11273193]
[-192.75860596 291.17596436]
[-178.23429871 287.39566040]
[-163.45289612 284.79632568]
[-148.51026917 283.39486694]
[-133.50331116 283.20034790]
[-118.52938080 284.21398926]
[-103.68556213 286.42929077]
[-89.06814575 289.83181763]
[-74.77191162 294.39956665]
[-60.88959503 300.10284424]
[-47.51122284 306.90472412]
[-39.65946960 294.12387085]
[-31.80771255 281.34304810]
[-23.95595741 268.56219482]
[-16.10420227 255.78135681]
[-16.56347847 252.28544617]
[-15.35229683 248.39338684]
[-12.30290985 244.89274597]
[-7.60563850 242.61618042]
[0.80897987 230.19868469]
[9.22359848 217.78118896]
[17.63821793 205.36369324]
[26.05283546 192.94619751]
[34.46745300 180.52870178]
[34.16473389 177.01576233]
[35.54850006 173.18168640]
[38.75115585 169.82067871]
[43.54539490 167.75613403]
[52.50609207 155.72676086]
[61.46678925 143.69738770]
[70.42748260 131.66799927]
[79.38818359 119.63862610]
[87.52339935 107.03631592]
[87.47257233 93.05458069]
[99.35791016 85.69045258]
[106.63114166 72.57176208]
[113.90436554 59.45306396]
[121.17759705 46.33436966]
[128.15605164 33.05652618]
[134.83624268 19.62615013]
[141.51643372 6.19577312]
[148.19664001 -7.23460293]
[149.21649170 -16.31192017]
[155.07757568 -20.81409454]
[161.95698547 -34.14352417]
[168.83639526 -47.47295380]
[175.71580505 -60.80238342]
[175.16935730 -76.61415100]
[187.88201904 -84.37542725]
[194.76144409 -97.70485687]
[182.34245300 -106.15034485]
[171.03204346 -116.03123474]
[160.99513245 -127.20342255]
[152.37811279 -139.50399780]
[145.30661011 -152.75357056]
[139.88377380 -166.75894165]
[136.18867493 -181.31585693]
[134.27520752 -196.21202087]
[134.17127991 -211.23022461]
[135.87837219 -226.15145874]
[139.37164307 -240.75811768]
[144.60009766 -254.83720398]
[151.48753357 -268.18338013]
[159.93348694 -280.60205078]
[169.81478882 -291.91210938]
[180.98736572 -301.94857788]
[193.28825378 -310.56515503]
[206.53810120 -317.63616943]
[220.54367065 -323.05847168]
[235.10070801 -326.75302124]
[249.99696350 -328.66592407]
[265.01516724 -328.76931763]
[279.93634033 -327.06164551]
[294.54287720 -323.56784058]
[308.62176514 -318.33883667]
[321.96768188 -311.45092773]
[334.38601685 -303.00451660]
[345.69570923 -293.12277222]
[355.73178101 -281.94982910]
[364.34790039 -269.64862061]
[371.41839600 -256.39849854]
[376.84017944 -242.39273071]
[380.53417969 -227.83554077]
[382.44653320 -212.93922424]
[382.54934692 -197.92102051]
[380.84112549 -182.99990845]
[377.34677124 -168.39350891]
[372.11727905 -154.31481934]
[365.22885132 -140.96914673]
[356.78195190 -128.55111694]
[346.89981079 -117.24181366]
[335.72647095 -107.20616150]
[323.42495728 -98.59050751]
[310.17456055 -91.52050018]
[296.16860962 -86.09923553]
[281.61126709 -82.40577698]
[266.71487427 -80.49398041]
[251.69667053 -80.39172363]
[236.77563477 -82.10050201]
[222.16935730 -85.59539795]
[208.09086609 -90.82544708]
[201.21145630 -77.49601746]
[202.24996948 -62.63765717]
[189.04524231 -53.92296982]
[182.16583252 -40.59354019]
[175.28640747 -27.26411057]
[168.40699768 -13.93468189]
[161.62701416 -0.55440813]
[154.94682312 12.87596798]
[148.26661682 26.30634308]
[141.58642578 39.73672104]
[142.35575867 43.17771530]
[141.49664307 47.16230774]
[138.77172852 50.92105103]
[134.29629517 53.60760117]
[127.02306366 66.72629547]
[119.74983215 79.84498596]
[112.47660065 92.96368408]
[112.52742767 106.94541931]
[100.64208984 114.30954742]
[114.49030304 108.54525757]
[129.27491760 111.07806396]
[140.41476440 121.12315369]
[144.45803833 135.56794739]
[140.15188599 149.93655396]
[128.83062744 159.77671814]
[114.00225067 162.03936768]
[100.26152039 156.02337646]
[91.86613464 143.59286499]
[91.41755676 128.59931946]
[82.45686340 140.62870789]
[73.49616241 152.65808105]
[64.53546906 164.68745422]
[55.57477570 176.71684265]
[46.88494873 188.94331360]
[38.47032928 201.36080933]
[30.05571175 213.77830505]
[21.64109421 226.19580078]
[13.22647572 238.61329651]
[4.81185675 251.03079224]
[-3.32335901 263.63311768]
[-11.17511463 276.41394043]
[-19.02687073 289.19479370]
[-26.87862587 301.97564697]
[-34.73038101 314.75646973]
[-22.61597061 323.61578369]
[-11.25372791 333.42117310]
[-0.71734113 344.10906982]
[8.92485523 355.61013794]
[17.61032677 367.84976196]
[25.28274536 380.74862671]
[31.89234924 394.22302246]
[37.39627457 408.18557739]
[41.75882721 422.54574585]
[44.95170975 437.21038818]
[46.95421600 452.08441162]
[47.75335693 467.07131958]
[47.34395599 482.07394409]
[45.72866440 496.99499512]
[42.91795731 511.73764038]
[38.93006516 526.20635986]
[33.79084778 540.30725098]
[27.53363991 553.94885254]
[20.19902229 567.04272461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 191]
[58 190]
[59 189]
[60 188]
[61 187]
[65 186]
[66 185]
[67 184]
[68 183]
[69 182]
[70 181]
[74 180]
[75 179]
[76 178]
[77 177]
[78 176]
[79 166]
[81 164]
[82 163]
[83 162]
[84 161]
[85 157]
[86 156]
[87 155]
[88 154]
[90 153]
[91 152]
[92 151]
[93 150]
[95 148]
[96 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
