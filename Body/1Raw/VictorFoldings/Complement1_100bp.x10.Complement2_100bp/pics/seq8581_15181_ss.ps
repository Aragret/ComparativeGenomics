%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[82.63726807 624.51348877]
[67.65042877 625.30639648]
[52.64757538 624.92095947]
[37.72121048 623.35968018]
[22.96336365 620.63201904]
[8.46501827 616.75488281]
[-5.68443489 611.75219727]
[-19.39775848 605.65472412]
[-32.59040451 598.50012207]
[-45.18103790 590.33251953]
[-57.09202576 581.20220947]
[-68.24993896 571.16552734]
[-78.58597565 560.28436279]
[-88.03642273 548.62573242]
[-96.54299927 536.26159668]
[-104.05326843 523.26812744]
[-110.52092743 509.72546387]
[-115.90609741 495.71710205]
[-120.17557526 481.32940674]
[-123.30303192 466.65109253]
[-125.26920319 451.77264404]
[-126.06195068 436.78579712]
[-125.67639160 421.78295898]
[-124.11490631 406.85659790]
[-121.38711548 392.09878540]
[-117.50984192 377.60046387]
[-112.50698853 363.45108032]
[-106.40940857 349.73782349]
[-99.25467682 336.54522705]
[-91.08692932 323.95468140]
[-81.95650482 312.04379272]
[-71.91970062 300.88598633]
[-61.03840256 290.55004883]
[-49.37969208 281.09973145]
[-37.01545715 272.59329224]
[-24.02192307 265.08312988]
[-10.47920322 258.61563110]
[3.52920890 253.23060608]
[17.91694450 248.96127319]
[32.59529495 245.83395386]
[47.47376633 243.86795044]
[62.46062088 243.07534790]
[77.46346283 243.46105957]
[79.02398682 228.54244995]
[80.58451080 213.62385559]
[82.14503479 198.70524597]
[83.70555878 183.78663635]
[74.15604401 172.41375732]
[75.52611542 157.26194763]
[87.51978302 147.32264709]
[81.14854431 133.85949707]
[90.27956390 120.93914795]
[91.84008789 106.02054596]
[89.47990417 98.31327057]
[93.53651428 90.89202881]
[95.31897736 75.99831390]
[97.10144806 61.10459518]
[98.88391113 46.21087646]
[87.14652252 55.55077362]
[72.14884949 55.28663635]
[60.74762344 45.53922272]
[58.15533447 30.76491928]
[65.55714417 17.71833992]
[79.56903839 12.36420345]
[93.78497314 17.15035057]
[101.70600128 29.89043045]
[105.02825928 15.26296997]
[108.35051727 0.63550949]
[111.56378937 -14.01627731]
[114.66790009 -28.69157982]
[117.77201080 -43.36688232]
[104.95331573 -51.42333221]
[95.68183136 -63.35696411]
[91.06132507 -77.71562195]
[91.63108826 -92.76040649]
[97.30307007 -106.67623138]
[107.37482452 -117.79082489]
[120.61644745 -124.77569580]
[135.42076111 -126.80488586]
[138.52487183 -141.48019409]
[141.62898254 -156.15548706]
[144.73309326 -170.83079529]
[147.83720398 -185.50610352]
[133.55329895 -190.13081360]
[119.83107758 -196.22328186]
[106.82086945 -203.71675110]
[94.66522980 -212.52914429]
[83.49734497 -222.56388855]
[73.43956757 -233.71102905]
[64.60210419 -245.84844971]
[57.08178329 -258.84317017]
[50.96099472 -272.55276489]
[46.30680466 -286.82708740]
[43.17020798 -301.50973511]
[41.58557129 -316.43978882]
[41.57025528 -331.45370483]
[43.12442780 -346.38696289]
[46.23106384 -361.07595825]
[50.85611725 -375.35974121]
[56.94892120 -389.08181763]
[64.44271851 -402.09182739]
[73.25540161 -414.24725342]
[83.29041290 -425.41491699]
[94.43779755 -435.47241211]
[106.57543182 -444.30957031]
[119.57032776 -451.82958984]
[133.28009033 -457.95004272]
[147.55453491 -462.60388184]
[162.23722839 -465.74011230]
[177.16732788 -467.32440186]
[192.18122864 -467.33935547]
[207.11445618 -465.78482056]
[221.80337524 -462.67782593]
[236.08705139 -458.05242920]
[249.80897522 -451.95928955]
[262.81881714 -444.46517944]
[274.97402954 -435.65219116]
[286.14144897 -425.61691284]
[296.19866943 -414.46926880]
[305.03555298 -402.33142090]
[312.55523682 -389.33636475]
[318.67535400 -375.62643433]
[323.32885742 -361.35189819]
[326.46472168 -346.66909790]
[328.04864502 -331.73898315]
[328.06323242 -316.72506714]
[326.50833130 -301.79187012]
[323.40100098 -287.10302734]
[318.77523804 -272.81948853]
[312.68176270 -259.09768677]
[305.18734741 -246.08802795]
[296.37405396 -233.93304443]
[286.33850098 -222.76588440]
[275.19064331 -212.70892334]
[263.05258179 -203.87234497]
[250.05731201 -196.35296631]
[236.34724426 -190.23316956]
[222.07258606 -185.58003235]
[207.38973999 -182.44450378]
[192.45956421 -180.86094666]
[177.44564819 -180.84672546]
[162.51251221 -182.40199280]
[159.40840149 -167.72668457]
[156.30429077 -153.05137634]
[153.20018005 -138.37608337]
[150.09606934 -123.70077515]
[162.81074524 -115.85079193]
[172.08990479 -104.10233307]
[176.79847717 -89.86141205]
[176.34983826 -74.84075165]
[170.77883911 -60.85383224]
[160.73992920 -49.59592056]
[147.43034363 -42.43862152]
[132.44731140 -40.26277161]
[129.34320068 -25.58746910]
[126.23909760 -10.91216755]
[127.93035889 -3.71762753]
[122.97798157 3.95776892]
[119.65571594 18.58522987]
[116.33345795 33.21268845]
[113.77762604 47.99334335]
[111.99516296 62.88706207]
[110.21269226 77.78077698]
[108.43022919 92.67449188]
[106.75868988 107.58106995]
[105.19816589 122.49967194]
[111.45777893 137.02990723]
[102.43838501 148.88316345]
[112.11559296 161.08929443]
[110.32047272 176.19665527]
[98.62416077 185.34716797]
[97.06363678 200.26576233]
[95.50312042 215.18437195]
[93.94259644 230.10298157]
[92.38207245 245.02157593]
[107.13997650 247.74891663]
[121.63839722 251.62574768]
[135.78794861 256.62817383]
[149.50140381 262.72534180]
[162.69419861 269.87963867]
[175.28498840 278.04702759]
[187.19616699 287.17709351]
[198.35427856 297.21353149]
[208.69055176 308.09451294]
[218.14123535 319.75292969]
[226.64805603 332.11691284]
[234.15859985 345.11022949]
[240.62652588 358.65274048]
[246.01197815 372.66098022]
[250.28175354 387.04858398]
[253.40951538 401.72683716]
[255.37599182 416.60525513]
[256.16903687 431.59210205]
[255.78378296 446.59494019]
[254.22261047 461.52133179]
[251.49511719 476.27920532]
[247.61814880 490.77758789]
[242.61558533 504.92709351]
[236.51828003 518.64050293]
[229.36381531 531.83319092]
[221.19631958 544.42388916]
[212.06614685 556.33502197]
[202.02957153 567.49298096]
[191.14848328 577.82916260]
[179.48995972 587.27972412]
[167.12590027 595.78643799]
[154.13252258 603.29681396]
[140.58993530 609.76464844]
[126.58163452 615.14996338]
[112.19398499 619.41955566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 175]
[44 174]
[45 173]
[46 172]
[47 171]
[50 168]
[52 166]
[53 165]
[55 164]
[56 163]
[57 162]
[58 161]
[66 160]
[67 159]
[68 158]
[69 156]
[70 155]
[71 154]
[79 146]
[80 145]
[81 144]
[82 143]
[83 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
