%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[79.09328461 490.49145508]
[83.32184601 475.56164551]
[95.53912354 465.99517822]
[94.86933899 451.01013184]
[94.19955444 436.02508545]
[93.52976990 421.04003906]
[92.85998535 406.05502319]
[92.19020081 391.06997681]
[83.89231110 378.70089722]
[91.00568390 364.56900024]
[76.94236755 359.55377197]
[65.84049988 349.50918579]
[59.41274261 335.94271851]
[58.66672134 320.90838623]
[63.74721527 306.69564819]
[73.90937042 295.48077393]
[87.62770081 288.99362183]
[86.95791626 274.00857544]
[86.28813171 259.02352905]
[74.39367676 268.16256714]
[59.79650497 264.70968628]
[53.25710297 251.21018982]
[59.59607697 237.61543274]
[74.14057159 233.94694519]
[86.16815186 242.90756226]
[86.61476135 227.91421509]
[87.06136322 212.92086792]
[87.50797272 197.92750549]
[84.56501770 191.14807129]
[88.07449341 182.71472168]
[88.74427795 167.72969055]
[78.80405426 159.53080750]
[75.34949493 146.91542053]
[79.85790253 134.43003845]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[95.02529144 57.42491913]
[82.24460602 65.27692413]
[68.08586121 60.32414627]
[62.98636627 46.21758270]
[70.70526886 33.35606766]
[85.55249023 31.22063637]
[96.58258820 41.38391113]
[90.75836945 26.67374420]
[100.12667847 15.09427929]
[102.13069153 0.22875135]
[104.13470459 -14.63677692]
[105.69522858 -29.55538177]
[106.81088257 -44.51383591]
[107.92652893 -59.47229004]
[109.04217529 -74.43074036]
[108.14936066 -89.40414429]
[105.26409149 -104.12403870]
[95.01679230 -116.17823029]
[100.16149139 -130.15611267]
[97.27622223 -144.87600708]
[94.39095306 -159.59590149]
[91.50567627 -174.31578064]
[88.62040710 -189.03567505]
[85.73513031 -203.75556946]
[82.84986115 -218.47546387]
[79.96458435 -233.19535828]
[64.52823639 -240.11019897]
[56.33645630 -254.71829224]
[58.44483948 -271.16567993]
[69.82598877 -282.99557495]
[66.72187805 -297.67089844]
[63.61776733 -312.34619141]
[60.51365662 -327.02148438]
[45.56017303 -325.63952637]
[30.54736519 -326.00292969]
[15.67825985 -328.10681152]
[1.15394962 -331.92269897]
[-12.82914352 -337.39895630]
[-26.08191299 -344.46157837]
[-38.42512894 -353.01504517]
[-49.69186783 -362.94363403]
[-59.72975540 -374.11312866]
[-68.40304565 -386.37243652]
[-75.59442902 -399.55575562]
[-81.20667267 -413.48486328]
[-85.16385651 -427.97131348]
[-87.41247559 -442.81921387]
[-87.92211914 -457.82775879]
[-86.68589020 -472.79400635]
[-83.72050476 -487.51550293]
[-79.06607819 -501.79321289]
[-72.78554535 -515.43402100]
[-64.96385193 -528.25341797]
[-55.70676804 -540.07812500]
[-45.13948822 -550.74810791]
[-33.40493011 -560.11920166]
[-20.66178131 -568.06451416]
[-7.08238220 -574.47674561]
[7.14962149 -579.26910400]
[21.84175873 -582.37677002]
[36.79533386 -583.75775146]
[51.80812073 -583.39331055]
[66.67708588 -581.28845215]
[81.20114136 -577.47161865]
[95.18386841 -571.99438477]
[108.43616486 -564.93090820]
[120.77880859 -556.37664795]
[132.04489136 -546.44726562]
[142.08203125 -535.27709961]
[150.75450134 -523.01721191]
[157.94500732 -509.83340454]
[163.55632019 -495.90396118]
[167.51254272 -481.41723633]
[169.76016235 -466.56918335]
[170.26879883 -451.56060791]
[169.03157043 -436.59445190]
[166.06521606 -421.87310791]
[161.40983582 -407.59573364]
[155.12838745 -393.95535278]
[147.30583191 -381.13644409]
[138.04795837 -369.31237793]
[127.47997284 -358.64309692]
[115.74478912 -349.27282715]
[103.00111389 -341.32830811]
[89.42128754 -334.91699219]
[75.18895721 -330.12561035]
[78.29306793 -315.45031738]
[81.39717865 -300.77499390]
[84.50128937 -286.09970093]
[97.14479828 -281.81207275]
[106.09040833 -271.75619507]
[108.92159271 -258.48767090]
[104.79425049 -245.44990540]
[94.68447876 -236.08062744]
[97.56974792 -221.36073303]
[100.45502472 -206.64083862]
[103.34029388 -191.92094421]
[106.22557068 -177.20106506]
[109.11083984 -162.48117065]
[111.99611664 -147.76127625]
[114.88138580 -133.04138184]
[124.92230988 -122.04006195]
[119.98397827 -107.00930786]
[122.86925507 -92.28942108]
[127.19170380 -106.65313721]
[135.68951416 -119.01385498]
[147.55270386 -128.19342041]
[161.65057373 -133.31690979]
[176.63938904 -133.89598083]
[191.09053040 -129.87542725]
[203.62657166 -121.63848114]
[213.05270386 -109.97022247]
[218.47044373 -95.98280334]
[219.36343384 -81.00940704]
[215.64656067 -66.47720337]
[207.67407227 -53.77132034]
[196.20587158 -44.10279083]
[182.33503723 -38.39316177]
[167.38363647 -37.18663788]
[152.77674866 -40.59821701]
[139.90661621 -48.30273056]
[129.99992371 -59.56583405]
[124.00063324 -73.31509399]
[122.88497925 -58.35663986]
[121.76933289 -43.39818573]
[120.65368652 -28.43973351]
[122.37864685 -26.23006058]
[123.33226013 -23.20396805]
[123.19918060 -19.65182877]
[121.77490234 -15.97270393]
[119.00023651 -12.63276291]
[116.99622345 2.23276496]
[114.99221039 17.09829330]
[120.95977020 30.74517822]
[111.44812012 43.38792419]
[109.99870300 58.31773376]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[117.71669006 140.47088623]
[116.61404419 157.59101868]
[103.72931671 168.39947510]
[103.05953217 183.38450623]
[102.50131989 198.37411499]
[102.05471039 213.36746216]
[101.60810852 228.36082458]
[101.16149902 243.35417175]
[101.27317047 258.35375977]
[101.94295502 273.33880615]
[102.61273956 288.32382202]
[116.85512543 293.56121826]
[127.97729492 303.82476807]
[134.30552673 317.52758789]
[134.90377808 332.56851196]
[129.71199036 346.65432739]
[119.55053711 357.64932251]
[105.99072266 363.89920044]
[114.33651733 377.34011841]
[107.17523956 390.40017700]
[107.84502411 405.38522339]
[108.51480865 420.37026978]
[109.18459320 435.35531616]
[109.85437775 450.34033203]
[110.52416229 465.32537842]
[123.54620361 473.76376343]
[129.08987427 488.25677490]
[125.02352142 503.23153687]
[112.91074371 512.92999268]
[97.40914154 513.62286377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 205]
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[10 198]
[17 191]
[18 190]
[19 189]
[25 188]
[26 187]
[27 186]
[28 185]
[30 184]
[31 183]
[35 180]
[36 179]
[38 177]
[39 176]
[40 175]
[46 174]
[48 172]
[49 171]
[50 170]
[51 165]
[52 164]
[53 163]
[54 162]
[55 143]
[56 142]
[58 140]
[59 139]
[60 138]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[69 128]
[70 127]
[71 126]
[72 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
