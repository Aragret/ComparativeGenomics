%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[64.04769897 564.80053711]
[54.04935455 576.00457764]
[42.83899307 585.99584961]
[30.56276512 594.64404297]
[17.38071442 601.83654785]
[3.46469808 607.47943115]
[-11.00386047 611.49920654]
[-25.83633423 613.84344482]
[-40.83935165 614.48156738]
[-55.81731796 613.40533447]
[-70.57495880 610.62872314]
[-84.91989136 606.18786621]
[-98.66508484 600.14080811]
[-111.63135529 592.56628418]
[-123.64965057 583.56304932]
[-134.56329346 573.24847412]
[-144.22999573 561.75701904]
[-152.52374268 549.23858643]
[-159.33641052 535.85632324]
[-164.57916260 521.78466797]
[-168.18365479 507.20709229]
[-170.10290527 492.31369019]
[-170.31188965 477.29855347]
[-168.80789185 462.35748291]
[-165.61050415 447.68524170]
[-160.76141357 433.47311401]
[-154.32383728 419.90643311]
[-146.38171387 407.16198730]
[-137.03857422 395.40600586]
[-126.41622162 384.79168701]
[-114.65315247 375.45745850]
[-101.90271759 367.52499390]
[-88.33114624 361.09768677]
[-74.11536407 356.25936890]
[-59.44071579 353.07308960]
[-44.49850845 351.58038330]
[-29.48354149 351.80075073]
[-14.59156895 353.73126221]
[-0.01673936 357.34680176]
[5.22997904 343.29434204]
[10.47669697 329.24185181]
[15.72341537 315.18939209]
[20.97013283 301.13693237]
[25.90172768 286.97079468]
[22.45448112 272.48059082]
[34.06158447 261.72949219]
[38.67559433 247.45677185]
[43.28960419 233.18403625]
[47.90361404 218.91130066]
[52.51762390 204.63856506]
[57.13162994 190.36584473]
[61.74563980 176.09310913]
[66.35964966 161.82037354]
[52.54640961 167.66796875]
[38.59290695 162.16345215]
[32.49234009 148.46005249]
[37.73939514 134.40769958]
[51.32831955 128.05622864]
[65.47475433 133.04403687]
[72.07492828 146.51295471]
[77.94388580 132.70877075]
[75.80313873 117.96881104]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[93.78050232 73.60311127]
[98.95295715 62.22640610]
[110.12068939 57.57793045]
[116.19452667 43.86266327]
[122.26835632 30.14739609]
[128.34219360 16.43212891]
[134.41603088 2.71686268]
[140.48986816 -10.99840355]
[146.56369019 -24.71367073]
[152.63752747 -38.42893600]
[151.15092468 -54.18014526]
[163.37908936 -62.68433380]
[169.45291138 -76.39960480]
[159.89230347 -91.80585480]
[161.47970581 -109.71003723]
[173.39146423 -122.95996857]
[190.71771240 -126.37653351]
[196.38049316 -140.26655579]
[202.04328918 -154.15658569]
[207.70606995 -168.04661560]
[193.07867432 -164.72407532]
[181.26622009 -173.96884155]
[180.97640991 -188.96604919]
[192.42288208 -198.66029358]
[207.16772461 -195.90533447]
[214.34149170 -182.73368835]
[221.02168274 -196.16407776]
[227.70187378 -209.59445190]
[234.38208008 -223.02482605]
[234.35392761 -229.63623047]
[237.23622131 -234.53413391]
[241.46633911 -236.75115967]
[248.54344177 -249.97668457]
[255.62054443 -263.20220947]
[243.43699646 -271.99111938]
[232.53364563 -282.32553101]
[223.10507202 -294.02105713]
[215.31953430 -306.86898804]
[209.31599426 -320.63998413]
[205.20156860 -335.08834839]
[203.04969788 -349.95620728]
[202.89878845 -364.97821045]
[204.75152588 -379.88629150]
[208.57484436 -394.41436768]
[214.30052185 -408.30322266]
[221.82635498 -421.30496216]
[231.01806641 -433.18756104]
[241.71159363 -443.73895264]
[253.71612549 -452.77081299]
[266.81738281 -460.12200928]
[280.78161621 -465.66131592]
[295.35958862 -469.28988647]
[310.29110718 -470.94299316]
[325.30975342 -470.59106445]
[340.14749146 -468.24044800]
[354.53948975 -463.93307495]
[368.22894287 -457.74578857]
[380.97152710 -449.78903198]
[392.53982544 -440.20480347]
[402.72744751 -429.16412354]
[411.35250854 -416.86407471]
[418.26113892 -403.52410889]
[423.32998657 -389.38232422]
[426.46865845 -374.69110107]
[427.62112427 -359.71261597]
[426.76678467 -344.71417236]
[423.92089844 -329.96340942]
[419.13427734 -315.72363281]
[412.49230957 -302.24890137]
[404.11355591 -289.77975464]
[394.14755249 -278.53866577]
[382.77212524 -268.72625732]
[370.19030762 -260.51766968]
[356.62658691 -254.05937195]
[342.32308960 -249.46661377]
[327.53506470 -246.82138062]
[312.52639771 -246.17085266]
[297.56494141 -247.52667236]
[282.91769409 -250.86460876]
[268.84606934 -256.12512207]
[261.76898193 -242.89958191]
[254.69186401 -229.67405701]
[247.81245422 -216.34463501]
[241.13224792 -202.91424561]
[234.45205688 -189.48387146]
[227.77186584 -176.05349731]
[221.59609985 -162.38383484]
[215.93330383 -148.49380493]
[210.27052307 -134.60377502]
[204.60774231 -120.71375275]
[212.46704102 -111.46136475]
[215.66564941 -99.67570496]
[213.53732300 -87.57730103]
[206.42552185 -77.47275543]
[195.62969971 -71.31494904]
[183.16818237 -70.32576752]
[177.09434509 -56.61050034]
[179.01539612 -41.84030151]
[166.35279846 -32.35510254]
[160.27896118 -18.63983727]
[154.20512390 -4.92457008]
[148.13128662 8.79069710]
[142.05746460 22.50596428]
[135.98362732 36.22122955]
[129.90979004 49.93649673]
[123.83596039 63.65176392]
[126.64251709 80.97487640]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[103.84825897 129.89242554]
[91.74806213 138.57772827]
[85.87910461 152.38191223]
[80.63238525 166.43438721]
[76.01837158 180.70710754]
[71.40436554 194.97984314]
[66.79035187 209.25257874]
[62.17634583 223.52531433]
[57.56233597 237.79804993]
[52.94832611 252.07078552]
[48.33432007 266.34350586]
[51.45153809 281.85458374]
[40.17446136 291.58477783]
[41.26905823 296.68859863]
[40.38488388 301.24618530]
[38.06136322 304.59527588]
[35.02260590 306.38363647]
[29.77588654 320.43609619]
[24.52916908 334.48858643]
[19.28244972 348.54104614]
[14.03573227 362.59350586]
[27.41371346 369.41461182]
[39.92692566 377.71624756]
[51.41223907 387.39022827]
[61.71991348 398.31036377]
[70.71556854 410.33435059]
[78.28192902 423.30538940]
[84.32035065 437.05438232]
[88.75210571 451.40209961]
[91.51943207 466.16149902]
[92.58623505 481.14013672]
[91.93861389 496.14276123]
[89.58501434 510.97375488]
[85.55611420 525.43975830]
[79.90444183 539.35223389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 196]
[40 195]
[41 194]
[42 193]
[43 192]
[44 188]
[46 186]
[47 185]
[48 184]
[49 183]
[50 182]
[51 181]
[52 180]
[53 179]
[60 178]
[61 177]
[63 175]
[65 173]
[68 171]
[69 170]
[70 169]
[71 168]
[72 167]
[73 166]
[74 165]
[75 164]
[77 162]
[78 161]
[82 155]
[83 154]
[84 153]
[85 152]
[91 151]
[92 150]
[93 149]
[94 148]
[97 147]
[98 146]
[99 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
