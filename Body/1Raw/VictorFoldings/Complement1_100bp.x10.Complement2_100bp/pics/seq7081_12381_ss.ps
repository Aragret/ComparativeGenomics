%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[63.79746246 585.88946533]
[51.43269730 594.39794922]
[38.38227081 601.81195068]
[24.74280357 608.07666016]
[10.61528111 613.14562988]
[-3.89570045 616.98138428]
[-18.68270493 619.55548096]
[-33.63625336 620.84887695]
[-48.64562988 620.85198975]
[-63.59971237 619.56475830]
[-78.38778687 616.99682617]
[-92.90035248 613.16711426]
[-107.02997589 608.10400391]
[-120.67204285 601.84497070]
[-133.72554016 594.43634033]
[-146.09382629 585.93298340]
[-157.68533325 576.39788818]
[-168.41424561 565.90161133]
[-178.20112610 554.52185059]
[-186.97349548 542.34289551]
[-194.66644287 529.45489502]
[-201.22296143 515.95330811]
[-206.59455872 501.93804932]
[-210.74143982 487.51290894]
[-213.63288879 472.78466797]
[-215.24752808 457.86239624]
[-215.57337952 442.85653687]
[-214.60804749 427.87823486]
[-212.35865784 413.03839111]
[-208.84188843 398.44680786]
[-204.08377075 384.21157837]
[-198.11952209 370.43807983]
[-190.99330139 357.22830200]
[-182.75787354 344.68002319]
[-173.47422791 332.88616943]
[-163.21107483 321.93402100]
[-152.04440308 311.90472412]
[-140.05690002 302.87249756]
[-127.33731079 294.90420532]
[-113.97981262 288.05886841]
[-100.08329773 282.38714600]
[-85.75065613 277.93106079]
[-71.08800507 274.72357178]
[-56.20389175 272.78845215]
[-41.20852661 272.13998413]
[-26.21293068 272.78302002]
[-11.32812405 274.71279907]
[3.33568764 277.91497803]
[17.66993713 282.36590576]
[23.33272362 268.47589111]
[28.99551010 254.58586121]
[26.63554382 239.87940979]
[39.01012802 230.02140808]
[36.65016174 215.31494141]
[49.02474213 205.45693970]
[54.68753052 191.56690979]
[60.35031891 177.67689514]
[54.35493088 164.09046936]
[59.89993286 149.92333984]
[74.19127655 143.72694397]
[79.85406494 129.83691406]
[85.51685333 115.94688416]
[91.17963409 102.05686188]
[90.20281219 98.32614899]
[90.87517548 94.18299103]
[93.34405518 90.37357330]
[97.41790771 87.68218231]
[103.69527435 74.05886841]
[104.44441223 64.95520782]
[110.16884613 60.28052521]
[116.64834595 46.75217819]
[123.12783813 33.22383499]
[129.60733032 19.69548798]
[129.20442200 14.49118710]
[130.68957520 10.09259129]
[133.43969727 7.08396387]
[136.69013977 5.71760511]
[143.76724243 -7.50792265]
[143.45626831 -23.32607269]
[156.28308105 -30.89721870]
[163.36018372 -44.12274551]
[163.04920959 -59.94089508]
[175.87602234 -67.51203918]
[182.95312500 -80.73757172]
[190.03022766 -93.96309662]
[177.43563843 -102.12659454]
[165.56832886 -111.31535339]
[154.51152039 -121.46492767]
[144.34281921 -132.50411987]
[135.13349915 -144.35549927]
[126.94820404 -156.93594360]
[119.84432220 -170.15718079]
[113.87168884 -183.92651367]
[109.07219696 -198.14732361]
[105.47951508 -212.71986389]
[103.11884308 -227.54193115]
[102.00673676 -242.50956726]
[102.15100098 -257.51776123]
[103.55062103 -272.46124268]
[106.19577789 -287.23516846]
[110.06792450 -301.73596191]
[115.13990021 -315.86190796]
[121.37611389 -329.51385498]
[128.73283386 -342.59609985]
[137.15846252 -355.01687622]
[146.59388733 -366.68902588]
[156.97291565 -377.53073120]
[168.22277832 -387.46588135]
[180.26454163 -396.42480469]
[193.01373291 -404.34469604]
[206.38093567 -411.16995239]
[220.27238464 -416.85275269]
[234.59065247 -421.35317993]
[249.23529053 -424.63970947]
[264.10357666 -426.68927002]
[279.09121704 -427.48748779]
[294.09307861 -427.02877808]
[309.00393677 -425.31631470]
[323.71923828 -422.36215210]
[338.13571167 -418.18698120]
[352.15225220 -412.82012939]
[365.67053223 -406.29919434]
[378.59573364 -398.66995239]
[390.83721924 -389.98590088]
[402.30908203 -380.30795288]
[412.93090820 -369.70401001]
[422.62814331 -358.24844360]
[431.33276367 -346.02157593]
[438.98376465 -333.10922241]
[445.52743530 -319.60192871]
[450.91787720 -305.59445190]
[455.11727905 -291.18502808]
[458.09619141 -276.47473145]
[459.83374023 -261.56677246]
[460.31771851 -246.56568909]
[459.54473877 -231.57672119]
[457.52020264 -216.70501709]
[454.25833130 -202.05487061]
[449.78198242 -187.72906494]
[444.12258911 -173.82806396]
[437.31982422 -160.44938660]
[429.42138672 -147.68688965]
[420.48272705 -135.63006592]
[410.56652832 -124.36351013]
[399.74230957 -113.96623993]
[388.08605957 -104.51118469]
[375.67947388 -96.06467438]
[362.60964966 -88.68595123]
[348.96817017 -82.42676544]
[334.85083008 -77.33103180]
[320.35656738 -73.43449402]
[305.58706665 -70.76447296]
[290.64596558 -69.33970642]
[275.63806152 -69.17018890]
[260.66857910 -70.25710297]
[245.84255981 -72.59282684]
[231.26397705 -76.16098785]
[217.03511047 -80.93653870]
[203.25576782 -86.88599396]
[196.17864990 -73.66046143]
[189.10154724 -60.43493652]
[189.91873169 -45.56276703]
[176.58572388 -37.04563904]
[169.50860596 -23.82011414]
[170.32579041 -8.94794178]
[156.99278259 -0.43081710]
[149.91566467 12.79471016]
[143.13568115 26.17498398]
[136.65618896 39.70333099]
[130.17668152 53.23167419]
[123.69718933 66.76001740]
[117.31858826 80.33622742]
[111.04122925 93.95954132]
[105.06966400 107.71965027]
[99.40687561 121.60967255]
[93.74408722 135.49969482]
[88.08130646 149.38972473]
[93.96671295 163.81192017]
[88.02597046 177.81771851]
[74.24034119 183.33967590]
[68.57756042 197.22970581]
[62.91477203 211.11973572]
[64.86969757 226.81968689]
[52.90015411 235.68418884]
[54.85507965 251.38415527]
[42.88553619 260.24865723]
[37.22275162 274.13867188]
[31.55996323 288.02871704]
[44.92029953 294.86849976]
[57.64318848 302.83151245]
[69.63443756 311.85876465]
[80.80525970 321.88345337]
[91.07295227 332.83132935]
[100.36149597 344.62133789]
[108.60211945 357.16619873]
[115.73381042 370.37304688]
[121.70376587 384.14404297]
[126.46778870 398.37731934]
[129.99061584 412.96740723]
[132.24613953 427.80636597]
[133.21769714 442.78424072]
[132.89805603 457.79022217]
[131.28961182 472.71316528]
[128.40426636 487.44259644]
[124.26336670 501.86947632]
[118.89758301 515.88696289]
[112.34664917 529.39129639]
[104.65905762 542.28247070]
[95.89173126 554.46502686]
[86.10957336 565.84881592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 188]
[50 187]
[51 186]
[53 184]
[55 182]
[56 181]
[57 180]
[60 177]
[61 176]
[62 175]
[63 174]
[67 173]
[68 172]
[70 171]
[71 170]
[72 169]
[73 168]
[77 167]
[78 166]
[80 164]
[81 163]
[83 161]
[84 160]
[85 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
