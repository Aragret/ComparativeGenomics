%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[135.31723022 706.52868652]
[127.44576263 693.74359131]
[120.95384216 680.20574951]
[115.91259766 666.06353760]
[112.37725830 651.47174072]
[110.38656616 636.59039307]
[109.96232605 621.58245850]
[111.10919189 606.61242676]
[113.81459808 591.84429932]
[118.04889679 577.43981934]
[123.76569366 563.55688477]
[130.90235901 550.34759521]
[139.38070679 537.95660400]
[149.10781860 526.51983643]
[159.97714233 516.16241455]
[171.86958313 506.99795532]
[184.65483093 499.12680054]
[198.19281006 492.63519287]
[193.15589905 478.50616455]
[188.11898804 464.37713623]
[183.08206177 450.24810791]
[178.04515076 436.11907959]
[173.00823975 421.99005127]
[167.97131348 407.86102295]
[162.93440247 393.73199463]
[157.68768311 379.67953491]
[155.02122498 394.44061279]
[146.64888000 406.88665771]
[133.98155212 414.92025757]
[119.15390778 417.18765259]
[104.66466522 413.30670166]
[92.95551300 403.93142700]
[85.99964905 390.64172363]
[84.96926117 375.67715454]
[90.03798676 361.55950928]
[100.35165405 350.66784668]
[114.17223358 344.83761597]
[129.17071533 345.05130005]
[142.81958008 351.27291870]
[152.81959534 362.45541382]
[150.15380859 347.69418335]
[147.48800659 332.93298340]
[144.82221985 318.17175293]
[142.15641785 303.41055298]
[139.49061584 288.64932251]
[136.82482910 273.88809204]
[126.94880676 262.73849487]
[132.11038208 247.78294373]
[128.78811646 233.15548706]
[124.81601715 218.69096375]
[120.84392548 204.22644043]
[116.87182617 189.76191711]
[112.89973450 175.29739380]
[97.96368408 176.36723328]
[83.10588074 174.50294495]
[68.89716339 169.77616882]
[55.88346100 162.36851501]
[44.56476593 152.56457520]
[35.37595749 140.74105835]
[28.67008209 127.35220337]
[24.70479012 112.91245270]
[23.63242912 97.97659302]
[25.49420166 83.11846924]
[30.21857643 68.90895844]
[37.62403488 55.89399719]
[47.42605591 44.57364655]
[59.24803162 35.38284302]
[72.63574219 28.67470551]
[68.66365051 14.21018124]
[64.69155121 -0.25434259]
[60.97647858 -3.92112684]
[59.21549988 -8.21673584]
[59.32091904 -12.29152870]
[60.88052750 -15.45380020]
[57.55826950 -30.08126068]
[46.95661545 -41.82500458]
[51.68286514 -55.94986725]
[41.20489120 -63.47149658]
[38.73890686 -75.72313690]
[45.07220459 -86.02924347]
[41.96809387 -100.70455170]
[38.86398697 -115.37985229]
[35.75987625 -130.05516052]
[25.33424377 -141.95544434]
[30.27026749 -156.00837708]
[27.16615868 -170.68367004]
[12.09893608 -171.17585754]
[-2.41248202 -175.26023865]
[-15.52442074 -182.69935608]
[-26.47456932 -193.06071472]
[-34.62630081 -205.74191284]
[-39.50568008 -220.00567627]
[-40.82903290 -235.02275085]
[-38.51942062 -249.92002869]
[-32.71111679 -263.83142090]
[-23.74180984 -275.94815063]
[-12.13296604 -285.56576538]
[1.44049382 -292.12506104]
[16.18942642 -295.24475098]
[31.25634766 -294.74343872]
[45.76528549 -290.65023804]
[58.87271118 -283.20318604]
[69.81657410 -272.83517456]
[77.96061707 -260.14904785]
[82.83135223 -245.88232422]
[84.14559937 -230.86447144]
[81.82695770 -215.96858215]
[76.01021576 -202.06071472]
[67.03356934 -189.94943237]
[55.41889572 -180.33886719]
[41.84146118 -173.78778076]
[44.94557190 -159.11248779]
[55.14917374 -148.26187134]
[50.43517685 -133.15925598]
[53.53928757 -118.48396301]
[56.64339828 -103.80865479]
[59.74750900 -89.13335419]
[72.16345215 -76.73129272]
[66.31032562 -59.27212906]
[76.67434692 -48.57463837]
[72.18572998 -33.40351868]
[75.50798798 -18.77606010]
[79.15607452 -4.22643900]
[83.12817383 10.23808479]
[87.10026550 24.70260811]
[102.03631592 23.63277054]
[116.89411926 25.49705505]
[131.10282898 30.22382927]
[144.11654663 37.63148880]
[155.43524170 47.43542099]
[164.62403870 59.25894928]
[171.32991028 72.64779663]
[175.29521179 87.08754730]
[176.36756897 102.02340698]
[174.50579834 116.88153076]
[169.78141785 131.09104919]
[162.37596130 144.10600281]
[152.57394409 155.42634583]
[140.75196838 164.61715698]
[127.36425781 171.32530212]
[131.33634949 185.78982544]
[135.30844116 200.25434875]
[139.28054810 214.71887207]
[143.25263977 229.18339539]
[151.59388733 216.71649170]
[166.28002930 213.66406250]
[178.89817810 221.77470398]
[182.22007751 236.40223694]
[174.34281921 249.16737366]
[159.77882385 252.75764465]
[146.87159729 245.11715698]
[156.93829346 257.32257080]
[151.58604431 271.22232056]
[154.25183105 285.98352051]
[156.91763306 300.74475098]
[159.58343506 315.50595093]
[162.24922180 330.26718140]
[164.91502380 345.02838135]
[167.58081055 359.78961182]
[171.66047668 374.22415161]
[176.57502747 378.64669800]
[178.26470947 384.07275391]
[177.06343079 388.69506836]
[182.10034180 402.82409668]
[187.13726807 416.95312500]
[192.17417908 431.08215332]
[197.21109009 445.21118164]
[202.24801636 459.34020996]
[207.28492737 473.46926880]
[212.32185364 487.59829712]
[226.91333008 484.06188965]
[241.79455566 482.07009888]
[256.80242920 481.64477539]
[271.77258301 482.79055786]
[286.54092407 485.49487305]
[300.94570923 489.72811890]
[314.82904053 495.44390869]
[328.03887939 502.57962036]
[340.43041992 511.05706787]
[351.86795044 520.78332520]
[362.22613525 531.65191650]
[371.39147949 543.54370117]
[379.26358032 556.32836914]
[385.75616455 569.86584473]
[390.79809570 584.00787354]
[394.33413696 598.59948730]
[396.32556152 613.48071289]
[396.75051880 628.48864746]
[395.60437012 643.45874023]
[392.89968872 658.22698975]
[388.66610718 672.63165283]
[382.94995117 686.51489258]
[375.81393433 699.72454834]
[367.33621216 712.11590576]
[357.60964966 723.55322266]
[346.74081421 733.91113281]
[334.84881592 743.07617188]
[322.06396484 750.94793701]
[308.52630615 757.44018555]
[294.38415527 762.48175049]
[279.79248047 766.01745605]
[264.91119385 768.00854492]
[249.90327454 768.43310547]
[234.93319702 767.28662109]
[220.16496277 764.58160400]
[205.76040649 760.34765625]
[191.87733459 754.63116455]
[178.66784668 747.49481201]
[166.27670288 739.01678467]
[154.83964539 729.28991699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 170]
[19 169]
[20 168]
[21 167]
[22 166]
[23 165]
[24 164]
[25 163]
[26 160]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[48 151]
[49 144]
[50 143]
[51 142]
[52 141]
[53 140]
[68 125]
[69 124]
[70 123]
[74 122]
[75 121]
[77 119]
[80 117]
[81 116]
[82 115]
[83 114]
[85 112]
[86 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
