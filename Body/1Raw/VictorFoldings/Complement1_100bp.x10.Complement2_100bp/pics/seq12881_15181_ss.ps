%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[86.62025452 476.38171387]
[73.44310760 468.49130249]
[65.99059296 455.06164551]
[66.26740265 439.70526123]
[74.19906616 426.55291748]
[87.65201569 419.14251709]
[87.87534332 404.14419556]
[88.09867096 389.14584351]
[88.32199860 374.14752197]
[80.77504730 361.30645752]
[88.71695709 347.62301636]
[81.17000580 334.78195190]
[89.11190796 321.09851074]
[89.33523560 306.10015869]
[81.78828430 293.25909424]
[89.73019409 279.57565308]
[89.95352173 264.57733154]
[90.17684937 249.57899475]
[90.40017700 234.58065796]
[77.01355743 228.00311279]
[67.77227783 216.21719360]
[64.55143738 201.52749634]
[68.04219055 186.83618164]
[77.60429382 175.06956482]
[91.38270569 168.59526062]
[91.60603333 153.59692383]
[91.82936096 138.59858704]
[92.05268860 123.60024261]
[92.27601624 108.60190582]
[83.63460541 120.86265564]
[70.32749939 127.78514862]
[55.32754517 127.82289124]
[41.98577499 120.96744537]
[33.28276825 108.75034332]
[31.16280174 93.90090942]
[36.09947968 79.73654175]
[46.98994064 69.42160797]
[61.40122223 65.26048279]
[76.11380768 68.18276978]
[87.84087372 77.53562927]
[93.96255493 91.22962952]
[96.62835693 76.46841431]
[99.29415131 61.70719528]
[101.95994568 46.94598007]
[91.71990204 57.90688324]
[77.76976013 63.41992950]
[62.80308533 62.42062759]
[49.70970154 55.10193253]
[41.01773453 42.87696838]
[38.40547180 28.10618401]
[42.37730026 13.64158630]
[52.16631699 2.27606177]
[65.88241577 -3.79588389]
[80.87724304 -3.40185332]
[94.25552368 3.38207245]
[103.43412018 15.24602318]
[106.64078522 29.90053177]
[111.88750458 15.84806061]
[117.13422394 1.79558933]
[122.38094330 -12.25688171]
[127.62766266 -26.30935287]
[132.87437439 -40.36182404]
[121.74442291 -30.30577660]
[108.17031097 -23.92271614]
[93.32633972 -21.76484108]
[78.49665070 -24.01883125]
[64.96417236 -30.48969460]
[53.89959717 -40.61763382]
[46.26012039 -53.52648163]
[42.70663071 -68.09949493]
[43.54654312 -83.07595825]
[48.70719528 -97.16027069]
[57.74214172 -109.13397980]
[69.86976624 -117.96125031]
[84.04090881 -122.87843323]
[99.02962494 -123.46014404]
[113.53923798 -119.65605927]
[126.31452942 -111.79527283]
[136.25028992 -100.55780792]
[142.48699951 -86.91583252]
[144.48510742 -72.04951477]
[142.07283020 -57.24827957]
[151.03353882 -69.27765656]
[159.99423218 -81.30702972]
[168.95492554 -93.33641052]
[177.91561890 -105.36579132]
[179.63340759 -123.69965363]
[196.00781250 -130.01200867]
[204.78842163 -142.17346191]
[213.56901550 -154.33491516]
[222.34962463 -166.49636841]
[231.13023376 -178.65782166]
[239.91082764 -190.81929016]
[248.50939941 -203.11012268]
[256.92401123 -215.52761841]
[265.33862305 -227.94511414]
[273.75326538 -240.36260986]
[282.16787720 -252.78010559]
[290.58248901 -265.19760132]
[279.21218872 -275.00741577]
[269.05761719 -286.07095337]
[260.25616455 -298.23855591]
[252.92680359 -311.34570312]
[247.16870117 -325.21511841]
[243.05970764 -339.65924072]
[240.65538025 -354.48272705]
[239.98826599 -369.48510742]
[241.06735229 -384.46347046]
[243.87808228 -399.21530151]
[248.38241577 -413.54107666]
[254.51943970 -427.24703979]
[262.20617676 -440.14782715]
[271.33865356 -452.06900024]
[281.79336548 -462.84933472]
[293.42892456 -472.34301758]
[306.08801270 -480.42166138]
[319.59936523 -486.97604370]
[333.78027344 -491.91748047]
[348.43899536 -495.17916870]
[363.37725830 -496.71701050]
[378.39303589 -496.51016235]
[393.28326416 -494.56146240]
[407.84658813 -490.89724731]
[421.88601685 -485.56707764]
[435.21173096 -478.64303589]
[447.64346313 -470.21875000]
[459.01312256 -460.40820312]
[469.16693115 -449.34399414]
[477.96759033 -437.17578125]
[485.29608154 -424.06814575]
[491.05325317 -410.19836426]
[495.16128540 -395.75396729]
[497.56460571 -380.93032837]
[498.23074341 -365.92788696]
[497.15063477 -350.94958496]
[494.33892822 -336.19793701]
[489.83364868 -321.87246704]
[483.69570923 -308.16693115]
[476.00811768 -295.26663208]
[466.87481689 -283.34606934]
[456.41940308 -272.56643677]
[444.78320312 -263.07354736]
[432.12359619 -254.99572754]
[418.61178589 -248.44226074]
[404.43054199 -243.50177002]
[389.77160645 -240.24105835]
[374.83325195 -238.70422363]
[359.81747437 -238.91206360]
[344.92736816 -240.86175537]
[330.36428833 -244.52694702]
[316.32522583 -249.85804749]
[303.00000000 -256.78298950]
[294.58535767 -244.36547852]
[286.17074585 -231.94798279]
[277.75613403 -219.53048706]
[269.34152222 -207.11299133]
[260.92687988 -194.69549561]
[260.93237305 -189.91963196]
[257.93774414 -185.08959961]
[252.07228088 -182.03868103]
[243.29168701 -169.87722778]
[234.51107788 -157.71577454]
[225.73048401 -145.55430603]
[216.94987488 -133.39285278]
[208.16926575 -121.23139954]
[209.78695679 -109.24350739]
[202.57122803 -99.03973389]
[189.94499207 -96.40509033]
[180.98429871 -84.37571716]
[172.02360535 -72.34633636]
[163.06291199 -60.31695938]
[154.10221863 -48.28758240]
[146.92684937 -35.11510468]
[141.68013000 -21.06263542]
[136.43341064 -7.01016378]
[131.18669128 7.04230738]
[125.93997955 21.09477806]
[120.69326019 35.14725113]
[116.72116089 49.61177444]
[114.05536652 64.37299347]
[111.38957214 79.13420868]
[108.72377777 93.89542389]
[107.27436066 108.82523346]
[107.05102539 123.82357025]
[106.82769775 138.82191467]
[106.60437012 153.82025146]
[106.38104248 168.81858826]
[119.96059418 175.70025635]
[129.16810608 187.74635315]
[132.21990967 202.53507996]
[128.56312561 217.12237549]
[118.97503662 228.62792969]
[105.39851379 234.80398560]
[105.17518616 249.80232239]
[104.95185852 264.80065918]
[104.72853088 279.79898071]
[112.25950623 293.71282959]
[104.33357239 306.32348633]
[104.11024475 321.32183838]
[111.64122772 335.23565674]
[103.71529388 347.84634399]
[111.24626923 361.76016235]
[103.32033539 374.37084961]
[103.09700775 389.36917114]
[102.87368011 404.36752319]
[102.65035248 419.36584473]
[115.87670898 427.17349243]
[123.41326141 440.55615234]
[123.23272705 455.91400146]
[115.38366699 469.11581421]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 206]
[7 205]
[8 204]
[9 203]
[11 201]
[13 199]
[14 198]
[16 196]
[17 195]
[18 194]
[19 193]
[25 187]
[26 186]
[27 185]
[28 184]
[29 183]
[41 182]
[42 181]
[43 180]
[44 179]
[57 178]
[58 177]
[59 176]
[60 175]
[61 174]
[62 173]
[82 172]
[83 171]
[84 170]
[85 169]
[86 168]
[88 165]
[89 164]
[90 163]
[91 162]
[92 161]
[93 160]
[94 157]
[95 156]
[96 155]
[97 154]
[98 153]
[99 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
