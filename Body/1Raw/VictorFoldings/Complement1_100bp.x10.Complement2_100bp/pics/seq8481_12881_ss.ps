%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[142.48255920 689.01647949]
[130.03477478 680.63641357]
[118.18113708 671.43511963]
[106.97571564 661.45452881]
[96.46964264 650.74029541]
[86.71086884 639.34118652]
[77.74390411 627.30932617]
[69.60967255 614.69952393]
[62.34528351 601.56933594]
[55.98389053 587.97869873]
[50.55451202 573.98956299]
[46.08192444 559.66583252]
[42.58653641 545.07287598]
[40.08429718 530.27722168]
[38.58662033 515.34637451]
[38.10034180 500.34848022]
[38.62768173 485.35198975]
[40.16622925 470.42532349]
[42.70896912 455.63656616]
[46.24429703 441.05319214]
[50.75608444 426.74176025]
[56.22373962 412.76760864]
[62.62231827 399.19442749]
[69.92263031 386.08416748]
[78.09135437 373.49667358]
[87.09122467 361.48937988]
[96.88117981 350.11706543]
[107.41654205 339.43161011]
[118.64924622 329.48175049]
[130.52803040 320.31292725]
[142.99871826 311.96697998]
[156.00437927 304.48193359]
[169.48568726 297.89199829]
[157.51614380 289.02749634]
[159.47106934 273.32754517]
[153.80827332 259.43753052]
[148.14549255 245.54748535]
[142.48271179 231.65747070]
[129.24659729 232.43135071]
[116.39402008 229.08329773]
[105.17927551 221.92556763]
[96.70128632 211.64285278]
[91.79592896 199.22691345]
[90.95362091 185.88085938]
[94.27034760 172.90258789]
[101.43694305 161.55854797]
[111.76783752 152.96018982]
[106.52111816 138.90773010]
[94.82081604 129.69078064]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.10730743 63.12524414]
[72.65194702 49.15244675]
[67.19659424 35.17964935]
[61.74123383 21.20685005]
[56.28587723 7.23405218]
[55.00437927 22.17921066]
[50.47310638 36.47842789]
[42.91315842 49.43400955]
[32.69339752 60.41382980]
[20.31246567 68.88215637]
[6.37445927 74.42580414]
[-8.44055557 76.77427673]
[-23.40972137 75.81299591]
[-37.80266190 71.58885956]
[-50.91711044 64.30798340]
[-62.11318207 54.32559967]
[-70.84460449 42.12878418]
[-76.68534088 28.31264305]
[-79.35041809 13.55129623]
[-78.70980072 -1.43501782]
[-74.79473114 -15.91508293]
[-67.79625702 -29.18238449]
[-58.05583191 -40.58958435]
[-46.04872131 -49.58009338]
[-32.36077881 -55.71525192]
[-17.65986252 -58.69570541]
[-2.66327000 -58.37603760]
[11.89728546 -54.77184296]
[25.31136131 -48.05897522]
[36.92445374 -38.56497192]
[46.16993713 -26.75307083]
[52.59454346 -13.20584965]
[52.81787109 -28.20418739]
[45.28689194 -42.11802673]
[53.21282578 -54.72869110]
[53.43615341 -69.72702789]
[53.65948105 -84.72536469]
[53.77114487 -99.72495270]
[53.77114487 -114.72495270]
[53.77114487 -129.72494507]
[39.13193130 -133.32450867]
[25.77985954 -140.32347107]
[14.49120522 -150.31495667]
[5.92227507 -162.71806335]
[0.57125622 -176.81167603]
[-1.25075078 -191.77642822]
[0.56218332 -206.74227905]
[5.90465689 -220.83914185]
[14.46606541 -233.24742126]
[25.74866104 -243.24575806]
[39.09648514 -250.25282288]
[53.73351669 -253.86125183]
[68.80877686 -253.86125183]
[83.44580841 -250.25282288]
[96.79363251 -243.24575806]
[108.07622528 -233.24742126]
[116.63763428 -220.83914185]
[121.98011017 -206.74227905]
[123.79304504 -191.77642822]
[121.97103882 -176.81167603]
[116.62001801 -162.71806335]
[108.05108643 -150.31495667]
[96.76243591 -140.32347107]
[83.41036224 -133.32450867]
[68.77114868 -129.72494507]
[68.77114868 -114.72495270]
[68.77114868 -99.72495270]
[71.91464996 -93.03614044]
[68.65781403 -84.50203705]
[68.43448639 -69.50370026]
[68.21115875 -54.50536346]
[75.75811768 -41.66430664]
[67.81620789 -27.98085976]
[67.59288025 -12.98252201]
[70.25867462 1.77869499]
[75.71403503 15.75149250]
[81.16938782 29.72429085]
[86.62474823 43.69709015]
[92.08010101 57.66988754]
[97.44099426 62.75738525]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[123.37037659 119.03133392]
[120.57359314 133.66101074]
[125.82031250 147.71347046]
[142.68855286 148.05143738]
[158.09947205 154.82757568]
[169.70027161 166.97653198]
[175.73171997 182.61505127]
[175.29492188 199.33389282]
[168.48510742 214.56898499]
[156.37272644 225.99467468]
[162.03552246 239.88470459]
[167.69830322 253.77473450]
[173.36109924 267.66476440]
[185.73567200 277.52276611]
[183.37570190 292.22921753]
[197.62174988 287.51507568]
[212.15354919 283.77343750]
[226.90478516 281.02136230]
[241.80816650 279.27145386]
[256.79568481 278.53161621]
[271.79895020 278.80532837]
[286.74951172 280.09124756]
[301.57916260 282.38357544]
[316.22021484 285.67178345]
[330.60586548 289.94094849]
[344.67050171 295.17153931]
[358.34994507 301.33969116]
[371.58175659 308.41726685]
[384.30557251 316.37197876]
[396.46331787 325.16754150]
[407.99957275 334.76379395]
[418.86163330 345.11697388]
[429.00000000 356.17984009]
[438.36834717 367.90188599]
[446.92398071 380.22964478]
[454.62786865 393.10690308]
[461.44482422 406.47485352]
[467.34375000 420.27252197]
[472.29772949 434.43695068]
[476.28417969 448.90350342]
[479.28491211 463.60617065]
[481.28619385 478.47787476]
[482.27893066 493.45077515]
[482.25860596 508.45651245]
[481.22525024 523.42663574]
[479.18362427 538.29290771]
[476.14306641 552.98736572]
[472.11740112 567.44305420]
[467.12500000 581.59399414]
[461.18869019 595.37561035]
[454.33551025 608.72503662]
[446.59674072 621.58129883]
[438.00769043 633.88586426]
[428.60757446 645.58245850]
[418.43927002 656.61779785]
[407.54913330 666.94146729]
[395.98693848 676.50640869]
[383.80535889 685.26892090]
[371.06002808 693.18914795]
[357.80905151 700.23083496]
[344.11294556 706.36181641]
[330.03417969 711.55426025]
[315.63699341 715.78436279]
[300.98709106 719.03289795]
[286.15127563 721.28497314]
[271.19729614 722.53039551]
[256.19332886 722.76336670]
[241.20787048 721.98291016]
[226.30929565 720.19256592]
[211.56556702 717.40051270]
[197.04397583 713.61950684]
[182.81077576 708.86669922]
[168.93089294 703.16394043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 152]
[35 150]
[36 149]
[37 148]
[38 147]
[47 140]
[48 139]
[50 137]
[52 135]
[53 134]
[54 132]
[55 131]
[56 130]
[57 129]
[58 128]
[85 127]
[86 126]
[88 124]
[89 123]
[90 122]
[91 120]
[92 119]
[93 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
