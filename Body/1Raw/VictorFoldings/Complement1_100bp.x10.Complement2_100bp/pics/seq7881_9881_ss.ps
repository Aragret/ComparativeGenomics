%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[44.04613876 570.25024414]
[33.51254654 580.96942139]
[21.49893188 589.99884033]
[8.27368450 597.13684082]
[-5.86774158 602.22381592]
[-20.60941887 605.14624023]
[-35.62201691 605.83880615]
[-50.57014084 604.28601074]
[-65.11985016 600.52258301]
[-78.94609833 594.63250732]
[-91.74000549 586.74749756]
[-103.21574402 577.04364014]
[-113.11694336 565.73773193]
[-121.22240448 553.08233643]
[-127.35105896 539.36016846]
[-131.36598206 524.87780762]
[-133.17747498 509.95883179]
[-132.74508667 494.93649292]
[-130.07844543 480.14642334]
[-125.23715973 465.91900635]
[-118.32936096 452.57208252]
[-109.50938416 440.40386963]
[-98.97426605 429.68615723]
[-86.95936584 420.65844727]
[-73.73309326 413.52236938]
[-59.59094620 408.43737793]
[-44.84885406 405.51702881]
[-29.83615875 404.82662964]
[-14.88825321 406.38156128]
[-11.13195324 391.85949707]
[-7.37565231 377.33743286]
[-12.96916103 360.70373535]
[0.04686231 347.67819214]
[3.58653474 333.10183716]
[7.12620735 318.52545166]
[10.66587925 303.94906616]
[6.15045166 289.75540161]
[16.92577744 278.17080688]
[20.46545029 263.59442139]
[9.59115410 273.92642212]
[-4.66239357 278.59936523]
[-19.54305458 276.71099854]
[-32.17760849 268.62594604]
[-40.12652206 255.90528870]
[-41.85498047 241.00521851]
[-37.02924728 226.80267334]
[-26.58109665 216.03994751]
[-12.52790260 210.79516602]
[2.41688251 212.08100891]
[15.36765671 219.64918518]
[23.82382584 232.03842163]
[26.15255547 246.85781860]
[32.22639084 233.14254761]
[38.30022430 219.42729187]
[32.71201706 205.66838074]
[38.67636871 191.67262268]
[53.14586258 185.90447998]
[59.21969986 172.18922424]
[65.29353333 158.47395325]
[71.36736298 144.75868225]
[67.30391693 133.36505127]
[72.25188446 121.88892365]
[84.05957031 116.69843292]
[90.33693695 103.07511902]
[90.58193207 95.01828766]
[96.81050873 89.29677582]
[103.29000854 75.76843262]
[109.76950073 62.24008560]
[116.24900055 48.71174240]
[101.44977570 51.15776062]
[90.20852661 41.22628021]
[90.81187439 26.23842049]
[102.81506348 17.24267197]
[117.36978149 20.87036514]
[123.74684143 34.44564819]
[131.21458435 21.43669701]
[131.37471008 5.61630154]
[144.42126465 -1.56958640]
[151.88899231 -14.57853889]
[147.98316956 -29.65773773]
[155.74183655 -42.74428558]
[170.14161682 -46.37496948]
[177.60935974 -59.38391876]
[177.76948547 -75.20431519]
[190.81604004 -82.39020538]
[198.28378296 -95.39915466]
[199.84211731 -104.39968109]
[205.96078491 -108.54501343]
[213.62138367 -121.44133759]
[214.01702881 -137.25759888]
[227.16911316 -144.24844360]
[234.82971191 -157.14477539]
[242.49031067 -170.04109192]
[250.15090942 -182.93742371]
[257.81149292 -195.83375549]
[265.47210693 -208.73007202]
[273.13269043 -221.62640381]
[280.79330444 -234.52273560]
[288.45388794 -247.41905212]
[276.60278320 -256.64697266]
[266.00173950 -267.28750610]
[256.81793213 -279.17282104]
[249.19619751 -292.11547852]
[243.25675964 -305.91137695]
[239.09329224 -320.34289551]
[236.77143860 -335.18243408]
[236.32785034 -350.19598389]
[237.76950073 -365.14672852]
[241.07365417 -379.79888916]
[246.18821716 -393.92138672]
[253.03250122 -407.29144287]
[261.49856567 -419.69827271]
[271.45291138 -430.94610596]
[282.73852539 -440.85763550]
[295.17742920 -449.27648926]
[308.57339478 -456.06991577]
[322.71524048 -461.13076782]
[337.37985229 -464.37921143]
[352.33596802 -465.76403809]
[367.34771729 -465.26339722]
[382.17831421 -462.88516235]
[396.59393311 -458.66690063]
[410.36712646 -452.67507935]
[423.28073120 -445.00421143]
[435.13107300 -435.77529907]
[445.73123169 -425.13388062]
[454.91403198 -413.24777222]
[462.53466797 -400.30447388]
[468.47296143 -386.50808716]
[472.63519287 -372.07623291]
[474.95581055 -357.23648071]
[475.39813232 -342.22290039]
[473.95520020 -327.27227783]
[470.64981079 -312.62039185]
[465.53408813 -298.49832153]
[458.68865967 -285.12884521]
[450.22155762 -272.72274780]
[440.26626587 -261.47570801]
[428.97982788 -251.56513977]
[416.54022217 -243.14732361]
[403.14364624 -236.35502625]
[389.00140381 -231.29537964]
[374.33651733 -228.04815674]
[359.38027954 -226.66459656]
[344.36859131 -227.16650391]
[329.53817749 -229.54597473]
[315.12292480 -233.76547241]
[301.35021973 -239.75846863]
[293.68963623 -226.86213684]
[286.02902222 -213.96580505]
[278.36843872 -201.06948853]
[270.70782471 -188.17315674]
[263.04724121 -175.27682495]
[255.38664246 -162.38049316]
[247.72604370 -149.48417664]
[240.06544495 -136.58784485]
[240.21772766 -121.69402313]
[226.51770020 -113.78073883]
[218.85710144 -100.88441467]
[211.29272461 -87.93141174]
[203.82498169 -74.92246246]
[204.19900513 -60.03255463]
[190.61831665 -51.91617966]
[183.15057373 -38.90722656]
[187.27705383 -24.64161110]
[179.88902283 -11.34230328]
[164.89794922 -7.11079788]
[157.43020630 5.89815474]
[157.80422974 20.78806305]
[144.22354126 28.90443802]
[136.75579834 41.91339111]
[129.77734375 55.19123840]
[123.29784393 68.71958160]
[116.81835175 82.24792480]
[110.33885956 95.77627563]
[103.96025085 109.35247803]
[97.68289185 122.97579956]
[99.79631042 141.26828003]
[85.08263397 150.83251953]
[79.00879669 164.54779053]
[72.93496704 178.26304626]
[66.86112976 191.97831726]
[72.31452942 206.56935120]
[65.95941925 220.39205933]
[52.01549149 225.50111389]
[45.94165802 239.21638489]
[39.86782074 252.93165588]
[35.04182434 267.13409424]
[31.50215340 281.71047974]
[35.76440048 296.94674683]
[25.24225426 307.48873901]
[21.70258331 322.06512451]
[18.16291046 336.64151001]
[14.62323761 351.21786499]
[20.65505219 362.61874390]
[17.40676689 374.68658447]
[7.14640713 381.09371948]
[3.39010644 395.61578369]
[-0.36619422 410.13784790]
[13.46089363 416.02590942]
[26.25592041 423.90911865]
[37.73303986 433.61135864]
[47.63584900 444.91586304]
[55.74311829 457.57009888]
[61.87372208 471.29138184]
[65.89070892 485.77316284]
[67.70433044 500.69186401]
[67.27407074 515.71429443]
[64.60955048 530.50476074]
[59.77028275 544.73284912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 199]
[30 198]
[31 197]
[33 194]
[34 193]
[35 192]
[36 191]
[38 189]
[39 188]
[52 187]
[53 186]
[54 185]
[57 182]
[58 181]
[59 180]
[60 179]
[63 177]
[64 176]
[66 175]
[67 174]
[68 173]
[69 172]
[75 171]
[76 170]
[78 168]
[79 167]
[82 164]
[83 163]
[85 161]
[86 160]
[88 159]
[89 158]
[91 156]
[92 155]
[93 154]
[94 153]
[95 152]
[96 151]
[97 150]
[98 149]
[99 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
