%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[102.82306671 762.23181152]
[88.23775482 758.70654297]
[73.91122437 754.24456787]
[59.90355682 748.86456299]
[46.27351761 742.58917236]
[33.07826996 735.44464111]
[20.37316132 727.46093750]
[8.21148109 718.67163086]
[-3.35575914 709.11346436]
[-14.28004265 698.82666016]
[-24.51554871 687.85424805]
[-34.01934433 676.24230957]
[-42.75156784 664.03955078]
[-50.67559433 651.29718018]
[-57.75818634 638.06860352]
[-63.96963882 624.40924072]
[-69.28389740 610.37652588]
[-73.67866516 596.02923584]
[-77.13552094 581.42755127]
[-79.63996124 566.63275146]
[-81.18147278 551.70684814]
[-81.75360107 536.71246338]
[-81.35394287 521.71246338]
[-79.98416901 506.76983643]
[-77.65003204 491.94720459]
[-74.36132050 477.30673218]
[-70.13182831 462.90985107]
[-64.97930145 448.81692505]
[-58.92533493 435.08709717]
[-51.99533463 421.77792358]
[-44.21836472 408.94522095]
[-35.62704468 396.64288330]
[-26.25741005 384.92242432]
[-16.14875984 373.83306885]
[-5.34349442 363.42126465]
[6.11306572 353.73077393]
[18.17286682 344.80215454]
[30.78532600 336.67288208]
[43.89754105 329.37710571]
[57.45451736 322.94534302]
[71.39938354 317.40463257]
[85.67366028 312.77819824]
[100.21746826 309.08541870]
[114.96981049 306.34182739]
[113.18734741 291.44812012]
[111.40488434 276.55438232]
[109.62241364 261.66067505]
[97.79116058 252.68531799]
[95.77131653 237.60636902]
[105.26571655 225.25750732]
[103.48325348 210.36380005]
[101.70079041 195.47007751]
[99.91831970 180.57635498]
[96.78420258 176.97270203]
[95.88060760 171.36195374]
[98.31133270 165.21351624]
[96.97309875 150.27333069]
[95.63486481 135.33314514]
[86.79294586 123.34692383]
[93.26820374 108.91149139]
[91.81877899 93.98168182]
[82.68776703 81.06134033]
[89.05900574 67.59818268]
[87.49848175 52.67958069]
[85.93795776 37.76097488]
[84.37743378 22.84237099]
[69.70207214 19.11957359]
[57.20932007 10.61645126]
[48.39610291 -1.62476778]
[44.31045914 -16.11537170]
[45.42692566 -31.10119820]
[51.59149551 -44.77498627]
[62.04255676 -55.49433517]
[75.50491333 -61.97895813]
[73.94438934 -76.89756012]
[72.38386536 -91.81616974]
[70.82334137 -106.73477173]
[69.26281738 -121.65337372]
[67.70229340 -136.57197571]
[66.14177704 -151.49058533]
[51.30071640 -154.25157166]
[37.85255432 -161.07572937]
[26.88329315 -171.40242004]
[19.27604866 -184.38848877]
[15.63995361 -198.97720337]
[16.26139450 -213.98420715]
[21.08146858 -228.19361877]
[29.70144844 -240.45664978]
[41.41575623 -249.78436279]
[55.26971436 -255.42752075]
[53.70919037 -270.34613037]
[52.14866638 -285.26473999]
[37.31608963 -288.17782593]
[24.00192070 -295.33493042]
[13.39004135 -306.09967041]
[6.42405605 -319.51480103]
[3.72337508 -334.38754272]
[5.52814102 -349.39532471]
[11.67787552 -363.20373535]
[21.62574768 -374.58493042]
[34.48720169 -382.52685547]
[49.11860275 -386.32339478]
[64.21894073 -385.63687134]
[78.44549561 -380.52841187]
[90.53325653 -371.45220947]
[99.40739441 -359.21533203]
[104.27882385 -344.90588379]
[104.71437073 -329.79623413]
[100.67531586 -315.22991943]
[92.52080536 -302.50216675]
[80.97593689 -292.74475098]
[67.06727600 -286.82525635]
[68.62779236 -271.90664673]
[70.18831635 -256.98803711]
[84.91018677 -254.33398438]
[98.30120087 -247.63235474]
[109.27230835 -237.41860962]
[116.92855072 -224.51423645]
[120.64209747 -209.96069336]
[120.10371399 -194.93530273]
[115.34848022 -180.65609741]
[106.75367737 -168.28295898]
[95.00881958 -158.82354736]
[81.06037903 -153.05110168]
[82.62090302 -138.13250732]
[84.18142700 -123.21389771]
[85.74195099 -108.29529572]
[87.30246735 -93.37668610]
[88.86299133 -78.45808411]
[90.42351532 -63.53947830]
[104.93639374 -59.98113632]
[117.37949371 -51.65657425]
[126.24028778 -39.55447388]
[130.43376160 -25.12408066]
[129.43525696 -10.10166264]
[123.34601593 3.69838953]
[112.88332367 14.60270786]
[99.29603577 21.28184891]
[100.85655975 36.20045090]
[102.41708374 51.11905670]
[103.97760773 66.03765869]
[112.99700165 77.89092255]
[106.73738861 92.42115784]
[110.64142609 99.47318268]
[108.20838165 107.57325745]
[117.14601898 120.62811279]
[110.57505035 133.99491882]
[111.91328430 148.93510437]
[113.25151825 163.87528992]
[114.81204224 178.79389954]
[116.59450531 193.68760681]
[118.37696838 208.58132935]
[120.15943909 223.47505188]
[132.29975891 233.23468018]
[133.89526367 248.36441040]
[124.51612854 259.87820435]
[126.29859924 274.77191162]
[128.08106995 289.66564941]
[129.86352539 304.55935669]
[144.84666443 303.74423218]
[159.85115051 303.90069580]
[174.81404114 305.02807617]
[189.67256165 307.12161255]
[204.36442566 310.17257690]
[218.82797241 314.16812134]
[233.00256348 319.09152222]
[246.82873535 324.92214966]
[260.24850464 331.63546753]
[273.20556641 339.20339966]
[285.64556885 347.59417725]
[297.51635742 356.77258301]
[308.76812744 366.70013428]
[319.35369873 377.33520508]
[329.22866821 388.63317871]
[338.35159302 400.54666138]
[346.68423462 413.02569580]
[354.19161987 426.01791382]
[360.84228516 439.46884155]
[366.60833740 453.32208252]
[371.46554565 467.51947021]
[375.39358521 482.00149536]
[378.37597656 496.70742798]
[380.40017700 511.57556152]
[381.45773315 526.54357910]
[381.54415894 541.54858398]
[380.65914917 556.52777100]
[378.80639648 571.41827393]
[375.99368286 586.15759277]
[372.23275757 600.68389893]
[367.53945923 614.93634033]
[361.93344116 628.85510254]
[355.43820190 642.38177490]
[348.08099365 655.45959473]
[339.89270020 668.03381348]
[330.90765381 680.05163574]
[321.16354370 691.46264648]
[310.70120239 702.21899414]
[299.56457520 712.27551270]
[287.80032349 721.59008789]
[275.45782471 730.12365723]
[262.58883667 737.84039307]
[249.24731445 744.70788574]
[235.48924255 750.69744873]
[221.37232971 755.78381348]
[206.95576477 759.94580078]
[192.30004883 763.16583252]
[177.46662903 765.43041992]
[162.51771545 766.73016357]
[147.51603699 767.05950928]
[132.52450562 766.41705322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 159]
[45 158]
[46 157]
[47 156]
[50 153]
[51 152]
[52 151]
[53 150]
[56 149]
[57 148]
[58 147]
[60 145]
[61 143]
[63 141]
[64 140]
[65 139]
[66 138]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
