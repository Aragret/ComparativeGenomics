%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[33.27827835 635.50988770]
[24.28271103 647.95880127]
[10.26130962 654.22741699]
[-5.01424026 652.62957764]
[-17.43489075 643.59503174]
[-23.65954971 629.55407715]
[-22.01381683 614.28356934]
[-12.94038391 601.89129639]
[1.12004113 595.71069336]
[2.68056417 580.79211426]
[-4.69056082 571.20080566]
[-3.51255870 558.75909424]
[6.12604713 550.18817139]
[7.90851307 535.29449463]
[9.69097900 520.40075684]
[11.47344494 505.50704956]
[13.25591087 490.61331177]
[15.03837681 475.71960449]
[8.86829472 462.16308594]
[18.19066048 449.38012695]
[19.97312737 434.48641968]
[12.74561882 424.78643799]
[14.10872936 412.36364746]
[23.87387466 403.93719482]
[25.87788773 389.07168579]
[27.88190269 374.20614624]
[29.88591576 359.34060669]
[31.88992882 344.47509766]
[33.89394379 329.60955811]
[22.59896088 339.47988892]
[7.67028809 340.94094849]
[-5.32405090 333.44781494]
[-11.53748894 319.79522705]
[-8.65256596 305.07525635]
[2.25471163 294.77810669]
[17.11619949 292.74435425]
[30.38893127 299.73254395]
[37.12268448 313.13739014]
[40.87898636 298.61532593]
[44.63528442 284.09326172]
[48.39158630 269.57119751]
[52.14788818 255.04914856]
[55.90418625 240.52708435]
[59.66048813 226.00503540]
[63.41679001 211.48297119]
[67.17308807 196.96090698]
[70.92938995 182.43885803]
[74.68569183 167.91679382]
[59.36810303 160.02127075]
[46.34733200 148.73291016]
[36.35941696 134.68978882]
[29.96894836 118.68572998]
[27.53716278 101.62541962]
[29.20152283 84.47323608]
[34.86794662 68.19873047]
[44.21612930 53.72187805]
[56.71763229 41.86101532]
[71.66578674 33.28660583]
[88.21559906 28.48333931]
[105.43155670 27.72273636]
[108.09735107 12.96151829]
[110.76314545 -1.79969883]
[113.42894745 -16.56091690]
[116.09474182 -31.32213402]
[115.75976562 -46.31839371]
[112.43750763 -60.94585419]
[109.11524200 -75.57331085]
[105.79298401 -90.20077515]
[95.19132996 -101.94451904]
[99.91757965 -116.06938171]
[96.59532166 -130.69683838]
[93.27306366 -145.32429504]
[89.95080566 -159.95176697]
[86.62854004 -174.57922363]
[83.30628204 -189.20668030]
[78.35389709 -196.88208008]
[80.04516602 -204.07661438]
[76.94105530 -218.75192261]
[73.83694458 -233.42723083]
[68.99938965 -241.17550659]
[70.79758453 -248.34407043]
[67.91231537 -263.06396484]
[57.66501236 -275.11813354]
[62.80971909 -289.09603882]
[59.92444611 -303.81591797]
[57.03917313 -318.53582764]
[54.15390015 -333.25570679]
[39.09704208 -334.11700439]
[24.72767258 -338.69653320]
[11.94906235 -346.70639038]
[1.56448472 -357.64309692]
[-5.77327681 -370.81915283]
[-9.60296345 -385.40628052]
[-9.68383980 -400.48751831]
[-6.01081991 -415.11489868]
[1.18520606 -428.36886597]
[11.45188999 -439.41632080]
[24.14385986 -447.56277466]
[38.46328735 -452.29614258]
[53.51004028 -453.31887817]
[68.33827209 -450.56671143]
[82.01586151 -444.21264648]
[93.68302155 -434.65606689]
[102.60635376 -422.49774170]
[108.22492981 -408.50192261]
[110.18554688 -393.54843140]
[108.36497498 -378.57727051]
[102.87764740 -364.52947998]
[94.06851196 -352.28817749]
[82.49131012 -342.62280273]
[68.87379456 -336.14099121]
[71.75906372 -321.42108154]
[74.64433289 -306.70120239]
[77.52960968 -291.98129272]
[87.57053375 -280.97998047]
[82.63220215 -265.94921875]
[85.51747894 -251.22933960]
[88.51225281 -236.53134155]
[91.61636353 -221.85603333]
[94.72046661 -207.18072510]
[97.93374634 -192.52894592]
[101.25600433 -177.90148926]
[104.57826233 -163.27401733]
[107.90052032 -148.64656067]
[111.22278595 -134.01910400]
[114.54504395 -119.39163971]
[124.90906525 -108.69415283]
[120.42044830 -93.52303314]
[123.74270630 -78.89556885]
[127.06496429 -64.26811218]
[130.38722229 -49.64065170]
[133.86972046 -64.23078918]
[140.36721802 -77.75050354]
[149.58412170 -89.58472443]
[161.10110474 -99.19508362]
[174.39424133 -106.14437103]
[188.85876465 -110.11644745]
[203.83665466 -110.93059540]
[218.64651489 -108.54978180]
[232.61457825 -103.08232880]
[245.10540771 -94.77695465]
[255.55075073 -84.01150513]
[263.47540283 -71.27574158]
[268.51885986 -57.14904404]
[270.45166016 -42.27408981]
[269.18591309 -27.32758904]
[264.77914429 -12.98951054]
[257.43188477 0.08786261]
[247.47836304 11.30959511]
[235.37138367 20.16517448]
[221.66175842 26.25172997]
[206.97317505 29.29236221]
[191.97386169 29.14874649]
[177.34619141 25.82741547]
[163.75563049 19.47946358]
[151.82044983 10.39368534]
[142.08361816 -1.01657927]
[134.98809814 -14.23223972]
[130.85595703 -28.65633774]
[128.19015503 -13.89512062]
[125.52436829 0.86609668]
[122.85857391 15.62731361]
[120.19277191 30.38853073]
[132.13319397 35.03106689]
[143.06974792 41.70332718]
[152.66072083 50.19685364]
[160.60650635 60.24630356]
[166.65885925 71.53771973]
[170.62869263 83.71833038]
[172.39198303 96.40760803]
[171.89364624 109.20911407]
[169.14926147 121.72291565]
[164.24453735 133.55805969]
[157.33273315 144.34480286]
[148.62977600 153.74615479]
[138.40754700 161.46839905]
[126.98542023 167.27029419]
[114.72023010 170.97055054]
[101.99515533 172.45359802]
[89.20774841 171.67309570]
[85.45144653 186.19514465]
[81.69515228 200.71720886]
[77.93885040 215.23927307]
[74.18254852 229.76132202]
[70.42624664 244.28338623]
[66.66994476 258.80545044]
[62.91364670 273.32751465]
[59.15734482 287.84957886]
[55.40104294 302.37161255]
[51.64474487 316.89367676]
[48.75947189 331.61358643]
[46.75545883 346.47909546]
[44.75144577 361.34463501]
[42.74742889 376.21017456]
[40.74341583 391.07568359]
[38.73940277 405.94122314]
[46.12682343 422.80856323]
[34.86684418 436.26885986]
[33.08437729 451.16259766]
[39.12696838 465.78442383]
[29.93209457 477.50207520]
[28.14962769 492.39578247]
[26.36716270 507.28952026]
[24.58469582 522.18322754]
[22.80223083 537.07696533]
[21.01976395 551.97064209]
[28.65749550 568.72613525]
[17.59916878 582.35260010]
[16.03864670 597.27124023]
[28.51568985 606.22772217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 209]
[10 208]
[13 206]
[14 205]
[15 204]
[16 203]
[17 202]
[18 201]
[20 199]
[21 198]
[24 196]
[25 195]
[26 194]
[27 193]
[28 192]
[29 191]
[38 190]
[39 189]
[40 188]
[41 187]
[42 186]
[43 185]
[44 184]
[45 183]
[46 182]
[47 181]
[48 180]
[60 163]
[61 162]
[62 161]
[63 160]
[64 159]
[65 131]
[66 130]
[67 129]
[68 128]
[70 126]
[71 125]
[72 124]
[73 123]
[74 122]
[75 121]
[77 120]
[78 119]
[79 118]
[81 117]
[82 116]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
