%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[39.76565552 589.03948975]
[28.52022743 598.98657227]
[16.31162071 607.72460938]
[3.26925325 615.16107178]
[-10.46862030 621.21704102]
[-24.75637054 625.82836914]
[-39.44253922 628.94616699]
[-54.37144089 630.53735352]
[-69.38482666 630.58502197]
[-84.32354736 629.08880615]
[-99.02923584 626.06445312]
[-113.34600830 621.54406738]
[-127.12210083 615.57550049]
[-140.21147156 608.22210693]
[-152.47538757 599.56182861]
[-163.78381348 589.68646240]
[-174.01689148 578.70062256]
[-183.06614685 566.72082520]
[-190.83564758 553.87408447]
[-197.24302673 540.29656982]
[-202.22036743 526.13214111]
[-205.71492004 511.53106689]
[-207.68962097 496.64804077]
[-208.12353516 481.64083862]
[-207.01208496 466.66857910]
[-204.36705017 451.88995361]
[-200.21644592 437.46163940]
[-194.60427856 423.53656006]
[-187.59005737 410.26235962]
[-179.24812317 397.77972412]
[-169.66690063 386.22097778]
[-158.94798279 375.70867920]
[-147.20495605 366.35424805]
[-134.56233215 358.25683594]
[-121.15412140 351.50228882]
[-107.12245941 346.16220093]
[-92.61608887 342.29318237]
[-77.78878021 339.93627930]
[-62.79772186 339.11642456]
[-47.80181885 339.84234619]
[-32.96004105 342.10635376]
[-18.42971611 345.88439941]
[-13.18299866 331.83193970]
[-7.93628073 317.77944946]
[-2.68956232 303.72698975]
[2.55715585 289.67449951]
[7.80387402 275.62203979]
[-6.25669861 280.84701538]
[-19.95049477 274.72491455]
[-25.43308449 260.76278687]
[-19.56379318 246.95875549]
[-5.70481634 241.22039795]
[8.20479393 246.83489990]
[14.19696045 260.58508301]
[12.71652222 245.76423645]
[25.65592384 236.66026306]
[24.17548752 221.83940125]
[37.11488724 212.73542786]
[35.63445282 197.91458130]
[48.57385254 188.81059265]
[55.05334854 175.28225708]
[61.53284454 161.75390625]
[68.01234436 148.22555542]
[74.49183655 134.69721985]
[74.54608917 127.30676270]
[81.16983032 121.01678467]
[87.85002899 107.58641052]
[87.17493439 93.62088776]
[98.71959686 85.73339844]
[105.39978790 72.30302429]
[112.07998657 58.87264633]
[118.76017761 45.44226837]
[125.13878632 31.86606216]
[131.21261597 18.15079498]
[137.28645325 4.43552828]
[143.36029053 -9.27973843]
[143.03695679 -15.88329792]
[145.69767761 -20.90501213]
[149.82456970 -23.30871582]
[150.70916748 -32.40021133]
[156.50256348 -36.98915100]
[163.18275452 -50.41952515]
[169.86296082 -63.84990311]
[164.13563538 -76.04057312]
[166.44149780 -89.11318970]
[175.71807861 -98.33420563]
[188.42066956 -100.49606323]
[195.30007935 -113.82549286]
[202.17948914 -127.15492249]
[208.85969543 -140.58529663]
[215.33918762 -154.11364746]
[221.71778870 -167.68984985]
[227.99514771 -181.31315613]
[234.27250671 -194.93647766]
[240.54988098 -208.55979919]
[246.82723999 -222.18310547]
[234.10008240 -230.16107178]
[222.49765015 -239.70109558]
[212.21046448 -250.64649963]
[203.40744019 -262.81759644]
[196.23315430 -276.01446533]
[190.80540466 -290.02047729]
[187.21330261 -304.60556030]
[185.51585388 -319.53027344]
[185.74092102 -334.54953003]
[187.88482666 -349.41665649]
[191.91233826 -363.88757324]
[197.75733948 -377.72463989]
[205.32383728 -390.70065308]
[214.48759460 -402.60247803]
[225.09814453 -413.23474121]
[236.98121643 -422.42282104]
[249.94171143 -430.01583862]
[263.76678467 -435.88909912]
[278.22946167 -439.94619751]
[293.09219360 -442.12048340]
[308.11093140 -442.37625122]
[323.03909302 -440.70932007]
[337.63150024 -437.14706421]
[351.64855957 -431.74795532]
[364.86007690 -424.60064697]
[377.04913330 -415.82254028]
[388.01556396 -405.55773926]
[397.57928467 -393.97485352]
[405.58325195 -381.26403809]
[411.89602661 -367.63403320]
[416.41397095 -353.30862427]
[419.06286621 -338.52310181]
[419.79922485 -323.52023315]
[418.61096191 -308.54638672]
[415.51757812 -293.84744263]
[410.56988525 -279.66473389]
[403.84912109 -266.23120117]
[395.46566772 -253.76742554]
[385.55712891 -242.47807312]
[374.28628540 -232.54850769]
[361.83816528 -224.14179993]
[348.41720581 -217.39599609]
[334.24377441 -212.42185974]
[319.55059814 -209.30107117]
[304.57897949 -208.08486938]
[289.57476807 -208.79324341]
[274.78433228 -211.41455078]
[260.45056152 -215.90574646]
[254.17318726 -202.28244019]
[247.89582825 -188.65911865]
[241.61846924 -175.03579712]
[235.34111023 -161.41249084]
[235.39689636 -154.02204895]
[228.86753845 -147.63414001]
[222.38803101 -134.10580444]
[223.10191345 -129.38357544]
[220.85690308 -124.16275787]
[215.50892639 -120.27550507]
[208.62951660 -106.94607544]
[201.75010681 -93.61664581]
[207.54357910 -77.82822418]
[199.97660828 -62.43160629]
[183.29333496 -57.16970825]
[176.61312866 -43.73933029]
[169.93293762 -30.30895424]
[163.35292053 -16.82921982]
[157.07554626 -3.20590425]
[151.00172424 10.50936222]
[144.92788696 24.22462845]
[138.85404968 37.93989563]
[139.77627563 41.34310913]
[139.09593201 45.36208725]
[136.54156494 49.23875427]
[132.19055176 52.12246323]
[125.51036072 65.55284119]
[118.83016968 78.98321533]
[112.14997101 92.41358948]
[112.82506561 106.37911224]
[101.28040314 114.26660156]
[94.60021210 127.69697571]
[88.02017975 141.17671204]
[81.54068756 154.70506287]
[75.06118774 168.23339844]
[68.58169556 181.76174927]
[62.10219955 195.29010010]
[63.11917877 211.07858276]
[50.64323425 219.21492004]
[51.66021729 235.00341797]
[39.18426895 243.13975525]
[40.20125198 258.92825317]
[27.72530556 267.06457520]
[21.85634613 280.86874390]
[16.60962677 294.92123413]
[11.36290932 308.97369385]
[6.11619091 323.02618408]
[0.86947250 337.07864380]
[-4.37724590 351.13110352]
[9.07363129 357.80029297]
[21.76747322 365.81716919]
[33.56971741 375.09677124]
[44.35525513 385.54074097]
[54.00975418 397.03833008]
[62.43087006 409.46768188]
[69.52933502 422.69705200]
[75.22989655 436.58615112]
[79.47212982 450.98779297]
[82.21106720 465.74932861]
[83.41767120 480.71420288]
[83.07915497 495.72384644]
[81.19909668 510.61914062]
[77.79743958 525.24218750]
[72.91023254 539.43792725]
[66.58928680 553.05590820]
[58.90161133 565.95178223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 193]
[43 192]
[44 191]
[45 190]
[46 189]
[47 188]
[54 187]
[56 185]
[58 183]
[60 181]
[61 180]
[62 179]
[63 178]
[64 177]
[66 176]
[67 175]
[69 173]
[70 172]
[71 171]
[72 170]
[73 166]
[74 165]
[75 164]
[76 163]
[79 162]
[81 161]
[82 160]
[83 159]
[87 156]
[88 155]
[89 154]
[90 151]
[91 150]
[92 148]
[93 147]
[94 146]
[95 145]
[96 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
