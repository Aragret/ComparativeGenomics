%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[124.74174500 525.79260254]
[115.24326324 514.17523193]
[106.57830811 501.92355347]
[98.78910065 489.09729004]
[91.91358948 475.75894165]
[85.98526001 461.97344971]
[81.03301239 447.80798340]
[77.08095551 433.33160400]
[74.14836121 418.61477661]
[72.24950409 403.72924805]
[71.39363861 388.74752808]
[71.58493805 373.74258423]
[72.82246399 358.78753662]
[75.10018921 343.95526123]
[78.40702820 329.31799316]
[82.72685242 314.94705200]
[88.03862762 300.91247559]
[94.31646729 287.28259277]
[101.52979279 274.12384033]
[109.64346313 261.50033569]
[118.61794281 249.47354126]
[128.40950012 238.10209656]
[138.97045898 227.44137573]
[150.24934387 217.54330444]
[162.19120789 208.45614624]
[153.96240234 195.91474915]
[145.73358154 183.37333679]
[137.50477600 170.83193970]
[129.27597046 158.29054260]
[121.04716492 145.74914551]
[112.81835938 133.20774841]
[104.58954620 120.66634369]
[91.96092224 119.58404541]
[82.21408081 111.48140717]
[78.84300232 99.26300049]
[83.05612946 87.30879211]
[69.12657166 79.80692291]
[68.83534241 64.91516113]
[60.79417038 52.25263596]
[52.75299835 39.59011078]
[44.71182251 26.92758751]
[36.67065048 14.26506138]
[28.62947845 1.60253692]
[20.58830452 -11.05998802]
[7.36676264 -3.96116877]
[-6.33769083 2.15359688]
[-20.45193672 7.25168419]
[-34.90066528 11.30589199]
[-49.60679245 14.29458809]
[-64.49184418 16.20182800]
[-79.47640991 17.01743507]
[-94.48053741 16.73705673]
[-109.42417145 15.36219120]
[-124.22757721 12.90017223]
[-138.81176758 9.36413574]
[-153.09895325 4.77294922]
[-167.01287842 -0.84889179]
[-180.47930908 -7.47139168]
[-193.42640686 -15.05921650]
[-205.78509521 -23.57188034]
[-217.48941040 -32.96396637]
[-228.47692871 -43.18535995]
[-238.68901062 -54.18153000]
[-248.07118225 -65.89379883]
[-256.57336426 -78.25968170]
[-264.15023804 -91.21320343]
[-270.76132202 -104.68524170]
[-276.37136841 -118.60392761]
[-280.95046997 -132.89498901]
[-284.47415161 -147.48217773]
[-286.92361450 -162.28765869]
[-288.28582764 -177.23245239]
[-288.55349731 -192.23681641]
[-287.72521973 -207.22067261]
[-285.80535889 -222.10411072]
[-282.80419922 -236.80769348]
[-278.73776245 -251.25299072]
[-273.62774658 -265.36291504]
[-267.50137329 -279.06219482]
[-260.39135742 -292.27770996]
[-252.33561707 -304.93896484]
[-243.37716675 -316.97842407]
[-233.56379700 -328.33184814]
[-222.94784546 -338.93862915]
[-211.58596802 -348.74221802]
[-199.53877258 -357.69027710]
[-186.87055969 -365.73504639]
[-173.64889526 -372.83364868]
[-159.94433594 -378.94821167]
[-145.83001709 -384.04605103]
[-131.38121033 -388.10003662]
[-116.67504120 -391.08847046]
[-101.78995514 -392.99548340]
[-86.80537415 -393.81082153]
[-71.80125427 -393.53021240]
[-56.85764694 -392.15509033]
[-42.05427933 -389.69284058]
[-27.47013855 -386.15655518]
[-13.18303776 -381.56515503]
[0.73079449 -375.94308472]
[14.19712162 -369.32034302]
[27.14409447 -361.73229980]
[39.50263214 -353.21945190]
[51.20679855 -343.82717896]
[62.19414902 -333.60559082]
[72.40605164 -322.60925293]
[81.78803253 -310.89682007]
[90.29002380 -298.53079224]
[97.86666870 -285.57714844]
[104.47753906 -272.10501099]
[110.08736420 -258.18624878]
[114.66621399 -243.89511108]
[118.18965912 -229.30786133]
[120.63889313 -214.50233459]
[122.00086212 -199.55752563]
[122.26828003 -184.55316162]
[121.43973541 -169.56930542]
[119.51964569 -154.68589783]
[116.51825714 -139.98236084]
[112.45157623 -125.53713226]
[107.34130859 -111.42729950]
[101.21470642 -97.72812653]
[94.10447693 -84.51271820]
[86.04854584 -71.85158539]
[77.08989716 -59.81227112]
[67.27632904 -48.45901871]
[56.66020584 -37.85240555]
[45.29816437 -28.04901695]
[33.25082779 -19.10116196]
[41.29200363 -6.43863630]
[49.33317566 6.22388887]
[57.37434769 18.88641357]
[65.41551971 31.54893875]
[73.45669556 44.21146393]
[81.49786377 56.87398911]
[94.85226440 63.47014999]
[95.71865082 79.26761627]
[111.90378571 82.49395752]
[120.85445404 96.35949707]
[117.13095093 112.43753815]
[125.35975647 124.97893524]
[133.58856201 137.52033997]
[141.81736755 150.06173706]
[150.04617310 162.60313416]
[158.27499390 175.14453125]
[166.50379944 187.68594360]
[174.73260498 200.22734070]
[187.82273865 192.89022827]
[201.39279175 186.48411560]
[215.37666321 181.04020691]
[229.70622253 176.58503723]
[244.31164551 173.14028931]
[259.12179565 170.72277832]
[274.06448364 169.34425354]
[289.06695557 169.01144409]
[304.05609131 169.72596741]
[318.95886230 171.48434448]
[333.70269775 174.27801514]
[348.21569824 178.09335327]
[362.42724609 182.91178894]
[376.26803589 188.70983887]
[389.67065430 195.45924377]
[402.56979370 203.12713623]
[414.90264893 211.67614746]
[426.60910034 221.06463623]
[437.63211060 231.24685669]
[447.91799927 242.17321777]
[457.41665649 253.79046631]
[466.08178711 266.04199219]
[473.87118530 278.86816406]
[480.74688721 292.20642090]
[486.67541504 305.99182129]
[491.62786865 320.15719604]
[495.58010864 334.63354492]
[498.51293945 349.35031128]
[500.41198730 364.23580933]
[501.26806641 379.21752930]
[501.07699585 394.22247314]
[499.83969116 409.17752075]
[497.56216431 424.00985718]
[494.25555420 438.64715576]
[489.93591309 453.01815796]
[484.62435913 467.05282593]
[478.34671021 480.68280029]
[471.13357544 493.84164429]
[463.02008057 506.46527100]
[454.04577637 518.49218750]
[444.25436401 529.86376953]
[433.69357300 540.52465820]
[422.41482544 550.42285156]
[410.47308350 559.51019287]
[397.92654419 567.74237061]
[384.83630371 575.07934570]
[371.26617432 581.48522949]
[357.28222656 586.92895508]
[342.95260620 591.38391113]
[328.34713745 594.82843018]
[313.53695679 597.24572754]
[298.59420776 598.62408447]
[283.59176636 598.95666504]
[268.60263062 598.24188232]
[253.69987488 596.48333740]
[238.95610046 593.68945312]
[224.44313049 589.87390137]
[210.23167419 585.05523682]
[196.39096069 579.25701904]
[182.98843384 572.50738525]
[170.08940125 564.83935547]
[157.75666809 556.29016113]
[146.05035400 546.90148926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 147]
[26 146]
[27 145]
[28 144]
[29 143]
[30 142]
[31 141]
[32 140]
[36 137]
[38 135]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[44 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
