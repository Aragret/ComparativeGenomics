%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[37.64138412 463.24731445]
[28.53635025 475.17507935]
[18.64684296 486.46093750]
[8.01798916 497.05340576]
[-3.30171371 506.90414429]
[-15.26061630 515.96826172]
[-27.80415154 524.20428467]
[-40.87508774 531.57476807]
[-54.41378021 538.04595947]
[-68.35845947 543.58843994]
[-82.64550018 548.17681885]
[-97.20970917 551.79028320]
[-111.98462677 554.41223145]
[-126.90285492 556.03070068]
[-141.89630127 556.63842773]
[-156.89657593 556.23248291]
[-171.83522034 554.81488037]
[-186.64408875 552.39190674]
[-201.25559998 548.97479248]
[-215.60307312 544.57904053]
[-229.62106323 539.22467041]
[-243.24559021 532.93621826]
[-256.41452026 525.74230957]
[-269.06771851 517.67572021]
[-281.14749146 508.77337646]
[-292.59872437 499.07580566]
[-303.36911011 488.62731934]
[-313.40957642 477.47552490]
[-322.67428589 465.67135620]
[-331.12094116 453.26867676]
[-338.71099854 440.32403564]
[-345.40988159 426.89651489]
[-351.18698120 413.04739380]
[-356.01596069 398.83987427]
[-359.87475586 384.33874512]
[-362.74575806 369.61019897]
[-364.61590576 354.72140503]
[-365.47665405 339.74035645]
[-365.32403564 324.73538208]
[-364.15881348 309.77493286]
[-361.98626709 294.92727661]
[-358.81628418 280.26016235]
[-354.66336060 265.84051514]
[-349.54647827 251.73411560]
[-343.48892212 238.00535583]
[-336.51834106 224.71685791]
[-328.66656494 211.92926025]
[-319.96942139 199.70091248]
[-310.46658325 188.08760071]
[-300.20138550 177.14231873]
[-289.22073364 166.91502380]
[-277.57464600 157.45236206]
[-265.31631470 148.79751587]
[-252.50167847 140.98995972]
[-239.18917847 134.06535339]
[-225.43957520 128.05526733]
[-211.31558228 122.98712158]
[-196.88168335 118.88404846]
[-182.20370483 115.76477051]
[-167.34861755 113.64352417]
[-152.38423157 112.52998352]
[-137.37881470 112.42922974]
[-122.40081787 113.34172058]
[-107.51859283 115.26329803]
[-92.80004883 118.18518829]
[-78.31234741 122.09405518]
[-64.12157440 126.97207642]
[-50.29249954 132.79699707]
[-36.88821411 139.54222107]
[-23.96987724 147.17697144]
[-11.59643650 155.66642761]
[0.17565246 164.97184753]
[11.29267502 175.05078125]
[22.09483147 164.64340210]
[32.89698792 154.23603821]
[43.69914627 143.82865906]
[54.50130081 133.42127991]
[58.29843521 119.01882172]
[73.60487366 115.01588440]
[84.40702820 104.60851288]
[88.63172913 88.37496185]
[104.95558167 84.51383209]
[115.60158539 73.94678497]
[107.54851532 60.59767151]
[102.91934204 45.71985245]
[101.97801971 30.17569733]
[104.77487183 14.86515522]
[111.14391327 0.67365104]
[120.71269989 -11.57911682]
[132.92410278 -21.18652534]
[147.06875610 -27.59576988]
[162.32623291 -30.43968582]
[177.81266785 -29.55776215]
[192.63195801 -25.00520897]
[205.92756653 -17.04951286]
[216.41506958 -27.77389336]
[226.90257263 -38.49827194]
[237.39007568 -49.22265244]
[247.87757874 -59.94703293]
[238.19084167 -71.41489410]
[229.63806152 -83.75162506]
[222.29672241 -96.84548950]
[216.23327637 -110.57791901]
[211.50267029 -124.82453156]
[208.14770508 -139.45631409]
[206.19880676 -154.34074402]
[205.67358398 -169.34304810]
[206.57682800 -184.32733154]
[208.90034485 -199.15791321]
[212.62309265 -213.70046997]
[217.71136475 -227.82330322]
[224.11906433 -241.39849854]
[231.78816223 -254.30313110]
[240.64923096 -266.42031860]
[250.62197876 -277.64035034]
[261.61611938 -287.86157227]
[273.53207397 -296.99145508]
[286.26193237 -304.94729614]
[299.69042969 -311.65704346]
[313.69589233 -317.05993652]
[328.15155029 -321.10705566]
[342.92645264 -323.76171875]
[357.88677979 -324.99990845]
[372.89706421 -324.81039429]
[387.82138062 -323.19491577]
[402.52453613 -320.16809082]
[416.87341309 -315.75732422]
[430.73800659 -310.00256348]
[443.99282837 -302.95596313]
[456.51779175 -294.68127441]
[468.19943237 -285.25347900]
[478.93203735 -274.75793457]
[488.61834717 -263.28973389]
[497.17068481 -250.95268250]
[504.51153564 -237.85855103]
[510.57449341 -224.12590027]
[515.30456543 -209.87911987]
[518.65899658 -195.24722290]
[520.60736084 -180.36270142]
[521.13201904 -165.36039734]
[520.22827148 -150.37612915]
[517.90417480 -135.54563904]
[514.18090820 -121.00321960]
[509.09213257 -106.88057709]
[502.68392944 -93.30561066]
[495.01437378 -80.40125275]
[486.15286255 -68.28437805]
[476.17968750 -57.06472397]
[465.18518066 -46.84389114]
[453.26889038 -37.71444702]
[440.53872681 -29.75907135]
[427.11001587 -23.04981232]
[413.10433960 -17.64742851]
[398.64855957 -13.60084915]
[383.87356567 -10.94671822]
[368.91317749 -9.70907497]
[353.90289307 -9.89912701]
[338.97863770 -11.51515293]
[324.27557373 -14.54251766]
[309.92687988 -18.95380402]
[296.06246948 -24.70906258]
[282.80792236 -31.75617027]
[270.28329468 -40.03130722]
[258.60195923 -49.45952988]
[248.11445618 -38.73515320]
[237.62695312 -28.01077080]
[227.13945007 -17.28639221]
[216.65194702 -6.56201220]
[224.44747925 5.60916138]
[229.33486938 19.21939850]
[231.06478882 33.58428574]
[229.54676819 47.98066330]
[224.85394287 61.68304062]
[217.21951294 74.00014496]
[207.02517700 84.30979156]
[194.78202820 92.09033203]
[181.10496521 96.94703674]
[166.68177795 98.63211060]
[152.23857117 97.05735016]
[138.50320435 92.29873657]
[126.16863251 84.59279633]
[115.52262878 95.15984344]
[114.77757263 106.78250122]
[106.45079803 114.92535400]
[94.81440735 115.41066742]
[84.01224518 125.81803894]
[79.44247437 140.96490479]
[64.90867615 144.22343445]
[54.10651779 154.63081360]
[43.30436325 165.03819275]
[32.50220490 175.44555664]
[21.70004845 185.85293579]
[31.35828400 197.33734131]
[40.21916962 209.44755554]
[48.24228287 222.12835693]
[55.39101028 235.32186890]
[61.63273239 248.96788025]
[66.93897247 263.00415039]
[71.28551483 277.36660767]
[74.65253448 291.98974609]
[77.02466583 306.80685425]
[78.39108276 321.75027466]
[78.74555206 336.75183105]
[78.08644867 351.74313354]
[76.41679382 366.65570068]
[73.74420166 381.42153931]
[70.08085632 395.97326660]
[65.44348907 410.24450684]
[59.85324478 424.17010498]
[53.33563614 437.68652344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 192]
[74 191]
[75 190]
[76 189]
[77 188]
[79 186]
[80 185]
[82 182]
[83 181]
[95 168]
[96 167]
[97 166]
[98 165]
[99 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
