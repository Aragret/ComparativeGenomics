%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[143.64770508 419.04544067]
[146.62985229 404.32434082]
[151.43356323 390.09313965]
[157.98309326 376.57623291]
[166.17514038 363.98678589]
[175.88049316 352.52340698]
[186.94610596 342.36685181]
[199.19744873 333.67733765]
[192.12033081 320.45181274]
[185.04322815 307.22625732]
[177.96612549 294.00073242]
[172.59326172 308.00546265]
[158.94793701 314.23483276]
[144.84678650 309.12036133]
[138.36761475 295.59185791]
[143.22198486 281.39904785]
[156.62907410 274.67227173]
[170.90797424 279.26425171]
[165.03901672 265.46008301]
[159.17005920 251.65589905]
[153.30110168 237.85173035]
[147.22726440 224.13645935]
[140.94990540 210.51313782]
[134.67254639 196.88983154]
[128.39518738 183.26651001]
[122.11782074 169.64318848]
[115.84046173 156.01988220]
[109.56310272 142.39656067]
[106.39974213 140.83915710]
[103.83356476 137.67216492]
[102.61286163 133.19297791]
[103.32482910 128.02188110]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[70.41056061 67.78289795]
[72.77053070 53.07644272]
[65.10993195 40.18011475]
[55.62103271 28.56285286]
[46.13213348 16.94558907]
[36.64323807 5.32832623]
[27.15433693 -6.28893709]
[21.11769867 -8.98532867]
[17.84087944 -13.62854767]
[17.56208611 -18.39628410]
[8.42328358 -30.29091835]
[-0.71551925 -42.18555069]
[-9.85432148 -54.08018494]
[-18.99312401 -65.97481537]
[-28.13192558 -77.86944580]
[-40.85084915 -69.89613342]
[-54.27009964 -63.16794586]
[-68.26814270 -57.74582291]
[-82.71821594 -53.67886734]
[-97.48945618 -51.00390625]
[-112.44807434 -49.74517441]
[-127.45861053 -49.91406250]
[-142.38513184 -51.50904465]
[-157.09243774 -54.51567459]
[-171.44734192 -58.90672684]
[-185.31985474 -64.64243317]
[-198.58432007 -71.67084503]
[-211.12062073 -79.92832184]
[-222.81523132 -89.34006500]
[-233.56222534 -99.82084656]
[-243.26428223 -111.27574921]
[-251.83354187 -123.60102844]
[-259.19238281 -136.68507385]
[-265.27416992 -150.40937805]
[-270.02383423 -164.64965820]
[-273.39834595 -179.27693176]
[-275.36715698 -194.15875244]
[-275.91244507 -209.16033936]
[-275.02923584 -224.14581299]
[-272.72552490 -238.97949219]
[-269.02224731 -253.52700806]
[-263.95285034 -267.65661621]
[-257.56332397 -281.24038696]
[-249.91146851 -294.15527344]
[-241.06661987 -306.28430176]
[-231.10887146 -317.51763916]
[-220.12840271 -327.75357056]
[-208.22467041 -336.89935303]
[-195.50544739 -344.87222290]
[-182.08595276 -351.59991455]
[-168.08770752 -357.02151489]
[-153.63749695 -361.08795166]
[-138.86616516 -363.76239014]
[-123.90749359 -365.02056885]
[-108.89696503 -364.85113525]
[-93.97050476 -363.25561523]
[-79.26331329 -360.24844360]
[-64.90856171 -355.85687256]
[-51.03626251 -350.12063599]
[-37.77204895 -343.09173584]
[-25.23604584 -334.83383179]
[-13.54178333 -325.42166138]
[-2.79516768 -314.94049072]
[6.90647459 -303.48522949]
[15.47528267 -291.15963745]
[22.83365250 -278.07531738]
[28.91494751 -264.35079956]
[33.66408920 -250.11033630]
[37.03807068 -235.48294067]
[39.00633240 -220.60104370]
[39.55105209 -205.59944153]
[38.66729736 -190.61399841]
[36.36307144 -175.78041077]
[32.65924072 -161.23301697]
[27.58934593 -147.10359192]
[21.19930649 -133.52006531]
[13.54699135 -120.60546875]
[4.70170212 -108.47675323]
[-5.25645447 -97.24377441]
[-16.23729324 -87.00825500]
[-7.09849119 -75.11361694]
[2.04031134 -63.21898651]
[11.17911339 -51.32435226]
[20.31791687 -39.42971802]
[29.45671844 -27.53508759]
[38.77160263 -15.77783585]
[48.26049805 -4.16057205]
[57.74939728 7.45669127]
[67.23829651 19.07395363]
[76.72719574 30.69121742]
[73.57047272 16.02714348]
[74.61550140 1.06359041]
[79.77986908 -13.01935196]
[88.65629578 -25.11104584]
[100.54474640 -34.25788879]
[114.50765228 -39.73852158]
[129.44383240 -41.12071991]
[144.17536926 -38.29547501]
[157.54045105 -31.48560333]
[168.48507690 -21.22815514]
[176.14608765 -8.33207703]
[179.91932678 6.18559217]
[179.50720215 21.17992973]
[174.94221497 35.46841812]
[166.58438110 47.92420959]
[155.09284973 57.56498718]
[141.37387085 63.63043594]
[126.50939178 65.64221191]
[111.67168427 63.44166565]
[98.03091431 57.20232773]
[86.66055298 47.41365814]
[98.63009644 56.27815628]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[117.21485138 122.35909271]
[123.18641663 136.11920166]
[129.46377563 149.74250793]
[135.74113464 163.36582947]
[142.01849365 176.98915100]
[148.29585266 190.61245728]
[154.57322693 204.23577881]
[160.85058594 217.85910034]
[166.01965332 221.98126221]
[168.02929688 227.29711914]
[167.10527039 231.98275757]
[172.97424316 245.78694153]
[178.84320068 259.59112549]
[184.71215820 273.39529419]
[191.19165039 286.92364502]
[198.26875305 300.14916992]
[205.34587097 313.37469482]
[212.42297363 326.60021973]
[226.44953918 321.22821045]
[241.03880310 317.65658569]
[255.96069336 315.94171143]
[270.97982788 316.11059570]
[285.85937500 318.16061401]
[300.36462402 322.05941772]
[314.26684570 327.74551392]
[327.34677124 335.12921143]
[339.39807129 344.09408569]
[350.23074341 354.49874878]
[359.67388916 366.17907715]
[367.57858276 378.95086670]
[373.82019043 392.61270142]
[378.30026245 406.94909668]
[380.94812012 421.73394775]
[381.72198486 436.73410034]
[380.60971069 451.71295166]
[377.62881470 466.43429565]
[372.82629395 480.66589355]
[366.27789307 494.18334961]
[358.08691406 506.77346802]
[348.38250732 518.23767090]
[337.31777954 528.39514160]
[325.06716919 537.08575439]
[311.82391357 544.17230225]
[297.79690552 549.54315186]
[283.20733643 553.11352539]
[268.28530884 554.82714844]
[253.26617432 554.65698242]
[238.38681030 552.60577393]
[223.88188171 548.70574951]
[209.98013306 543.01849365]
[196.90084839 535.63366699]
[184.85028076 526.66778564]
[174.01850891 516.26220703]
[164.57633972 504.58108521]
[156.67269897 491.80862427]
[150.43225098 478.14627075]
[145.95339966 463.80947876]
[143.30679321 449.02438354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 170]
[9 169]
[10 168]
[11 167]
[18 166]
[19 165]
[20 164]
[21 163]
[22 160]
[23 159]
[24 158]
[25 157]
[26 156]
[27 155]
[28 154]
[32 153]
[33 152]
[35 150]
[36 149]
[38 147]
[39 126]
[40 125]
[41 124]
[42 123]
[43 122]
[46 121]
[47 120]
[48 119]
[49 118]
[50 117]
[51 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
