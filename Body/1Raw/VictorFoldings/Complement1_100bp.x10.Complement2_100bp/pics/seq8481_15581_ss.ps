%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[52.80715179 816.82751465]
[37.80490112 816.90093994]
[22.81390762 816.31530762]
[7.86310291 815.07177734]
[-7.01865149 813.17279053]
[-21.80262947 810.62188721]
[-36.46029282 807.42413330]
[-50.96335220 803.58563232]
[-65.28381348 799.11376953]
[-79.39402008 794.01721191]
[-93.26675415 788.30584717]
[-106.87522888 781.99060059]
[-120.19317627 775.08367920]
[-133.19488525 767.59851074]
[-145.85527039 759.54943848]
[-158.14988708 750.95202637]
[-170.05500793 741.82287598]
[-181.54763794 732.17962646]
[-192.60560608 722.04089355]
[-203.20756531 711.42620850]
[-213.33305359 700.35607910]
[-222.96250916 688.85186768]
[-232.07737732 676.93585205]
[-240.66003418 664.63092041]
[-248.69392395 651.96093750]
[-256.16354370 638.95025635]
[-263.05447388 625.62402344]
[-269.35339355 612.00799561]
[-275.04815674 598.12841797]
[-280.12777710 584.01208496]
[-284.58245850 569.68627930]
[-288.40359497 555.17864990]
[-291.58377075 540.51715088]
[-294.11691284 525.73010254]
[-295.99810791 510.84609985]
[-297.22369385 495.89382935]
[-297.79132080 480.90213013]
[-297.69992065 465.89999390]
[-296.94964600 450.91632080]
[-295.54196167 435.98007202]
[-293.47955322 421.12008667]
[-290.76644897 406.36502075]
[-287.40783691 391.74337769]
[-283.41021729 377.28335571]
[-278.78131104 363.01290894]
[-273.53005981 348.95953369]
[-267.66659546 335.15039062]
[-261.20220947 321.61212158]
[-254.14942932 308.37084961]
[-246.52183533 295.45214844]
[-238.33415222 282.88095093]
[-229.60220337 270.68154907]
[-220.34281921 258.87744141]
[-210.57389832 247.49143982]
[-200.31427002 236.54553223]
[-189.58375549 226.06082153]
[-178.40307617 216.05757141]
[-166.79379272 206.55506897]
[-154.77832031 197.57167053]
[-142.37986755 189.12471008]
[-129.62234497 181.23049927]
[-116.53038788 173.90428162]
[-103.12927246 167.16017151]
[-89.44485474 161.01121521]
[-75.50355530 155.46926880]
[-61.33229065 150.54504395]
[-46.95840836 146.24801636]
[-32.40965652 142.58650208]
[-17.71411514 139.56758118]
[-2.90015173 137.19705200]
[12.00363731 135.47949219]
[26.96848297 134.41824341]
[41.96550369 134.01533508]
[56.96574402 134.27154541]
[71.94025421 135.18638611]
[86.86013031 136.75810242]
[89.08524323 121.92404938]
[91.31036377 107.09000397]
[79.30009460 116.07630157]
[64.31693268 115.36573792]
[53.21097946 105.28319550]
[51.05972672 90.43825531]
[58.84669495 77.61783600]
[73.01179504 72.68326569]
[87.07892609 77.89054871]
[94.61711884 90.86081696]
[98.37342072 76.33876038]
[102.12972260 61.81669998]
[105.88602448 47.29464340]
[109.64232635 32.77258301]
[113.39862061 18.25052261]
[99.48516846 12.58490086]
[86.45104980 5.11529303]
[74.52886200 -4.02499819]
[63.93137741 -14.67285252]
[54.84772491 -26.63824654]
[47.44000626 -39.70764542]
[41.84042358 -53.64780426]
[38.14890671 -68.20995331]
[36.43133545 -83.13420868]
[36.71836472 -98.15422821]
[39.00487137 -113.00196838]
[43.25004578 -127.41244507]
[49.37813187 -141.12849426]
[57.27976608 -153.90533447]
[66.81393433 -165.51495361]
[77.81048584 -175.75015259]
[90.07318115 -184.42826843]
[103.38317108 -191.39445496]
[117.50292206 -196.52436829]
[132.18045044 -199.72645569]
[147.15383911 -200.94360352]
[162.15583801 -200.15406799]
[176.91873169 -197.37193298]
[191.17906189 -192.64686584]
[204.68234253 -186.06318665]
[217.18759155 -177.73837280]
[228.47161865 -167.82101440]
[238.33306885 -156.48808289]
[246.59593201 -143.94183350]
[253.11276245 -130.40615845]
[257.76727295 -116.12263489]
[260.47634888 -101.34616089]
[261.19171143 -86.34043884]
[259.90054321 -71.37326050]
[256.62591553 -56.71173859]
[251.42623901 -42.61752701]
[244.39433289 -29.34214592]
[235.65567017 -17.12251472]
[225.36622620 -6.17670631]
[213.70960999 3.29993820]
[200.89385986 11.13829708]
[187.14767456 17.19848633]
[172.71638489 21.37235451]
[157.85751343 23.58541298]
[142.83625793 23.79816818]
[127.92068481 22.00682449]
[124.16438293 36.52888489]
[120.40808105 51.05094147]
[116.65177917 65.57299805]
[112.89547729 80.09506226]
[109.13918304 94.61711884]
[106.14440918 109.31512451]
[103.91928864 124.14916992]
[101.69416809 138.98321533]
[116.41855621 141.85816956]
[131.00245667 145.37710571]
[145.41769409 149.53323364]
[159.63648987 154.31854248]
[173.63134766 159.72377014]
[187.37528992 165.73849487]
[200.84178162 172.35112000]
[214.00480652 179.54885864]
[226.83898926 187.31782532]
[239.31953430 195.64302063]
[251.42234802 204.50839233]
[263.12408447 213.89680481]
[274.40213013 223.79016113]
[285.23474121 234.16934204]
[295.60101318 245.01431274]
[305.48089600 256.30413818]
[314.85537720 268.01705933]
[323.70629883 280.13043213]
[332.01663208 292.62088013]
[339.77029419 305.46432495]
[346.95236206 318.63592529]
[353.54891968 332.11026001]
[359.54727173 345.86135864]
[364.93582153 359.86267090]
[369.70416260 374.08715820]
[373.84310913 388.50732422]
[377.34466553 403.09542847]
[380.20208740 417.82321167]
[382.40982056 432.66232300]
[383.96362305 447.58404541]
[384.86053467 462.55966187]
[385.09875488 477.56018066]
[384.67785645 492.55670166]
[383.59866333 507.52029419]
[381.86325073 522.42199707]
[379.47497559 537.23309326]
[376.43841553 551.92504883]
[372.75949097 566.46936035]
[368.44522095 580.83807373]
[363.50399780 595.00347900]
[357.94534302 608.93811035]
[351.77999878 622.61511230]
[345.01983643 636.00817871]
[337.67791748 649.09130859]
[329.76843262 661.83935547]
[321.30661011 674.22766113]
[312.30880737 686.23236084]
[302.79241943 697.83026123]
[292.77575684 708.99896240]
[282.27819824 719.71685791]
[271.31997681 729.96337891]
[259.92227173 739.71862793]
[248.10708618 748.96386719]
[235.89721680 757.68121338]
[223.31620789 765.85375977]
[210.38838196 773.46588135]
[197.13867188 780.50280762]
[183.59266663 786.95092773]
[169.77648926 792.79785156]
[155.71684265 798.03222656]
[141.44082642 802.64404297]
[126.97603607 806.62432861]
[112.35037231 809.96539307]
[97.59207153 812.66082764]
[82.72961426 814.70538330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 145]
[77 144]
[78 143]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
