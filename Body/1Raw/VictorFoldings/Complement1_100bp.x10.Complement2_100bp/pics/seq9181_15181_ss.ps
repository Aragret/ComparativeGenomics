%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[325.56857300 510.26693726]
[318.29534912 497.14825439]
[311.02209473 484.02954102]
[303.74887085 470.91085815]
[296.47564697 457.79217529]
[281.65670776 462.17660522]
[266.22726440 463.16247559]
[250.95703125 460.69757080]
[236.60853577 454.90176392]
[223.89889526 446.06143188]
[213.46408081 434.61514282]
[205.82710266 421.13201904]
[201.37171936 406.28332520]
[200.32322693 390.80911255]
[202.73701477 375.48138428]
[208.49571228 361.06539917]
[217.31480408 348.28173828]
[228.75680542 337.77001953]
[221.28906250 324.76104736]
[213.82131958 311.75210571]
[199.02413940 313.74526978]
[184.55197144 309.91098022]
[172.61813354 300.80337524]
[165.06004333 287.78558350]
[163.05635071 272.82568359]
[166.94328308 258.19915771]
[176.15859985 246.14289856]
[168.69085693 233.13395691]
[155.64431763 225.94805908]
[155.48417664 210.12767029]
[148.01644897 197.11871338]
[140.54870605 184.10975647]
[133.08096313 171.10081482]
[116.71154022 169.86807251]
[104.17689514 159.01245117]
[100.54664612 142.66244507]
[107.44483948 127.21864319]
[99.78424072 114.32231903]
[87.68491364 107.31533051]
[87.31942749 93.33827972]
[73.61940765 85.42499542]
[73.77169037 70.53117371]
[66.11109161 57.63484573]
[58.45049667 44.73851776]
[44.75047684 36.82523727]
[44.90275955 21.93141174]
[31.20273781 14.01813221]
[31.35502052 -0.87569469]
[27.49475861 -2.86374354]
[24.74451828 -5.69229412]
[23.23222351 -8.90918255]
[22.92581177 -12.06714439]
[23.64868927 -14.77557373]
[16.76927757 -28.10500336]
[9.88986397 -41.43443298]
[3.01045179 -54.76386261]
[-3.86896086 -68.09329224]
[-10.74837303 -81.42272186]
[-17.62778664 -94.75215149]
[-31.59669304 -89.25118256]
[-46.05046082 -85.19166565]
[-60.84076691 -82.61526489]
[-75.81584167 -81.54841614]
[-90.82201385 -82.00205994]
[-105.70529175 -83.97154999]
[-120.31296539 -87.43667603]
[-134.49511719 -92.36186981]
[-148.10621643 -98.69660187]
[-161.00660706 -106.37586975]
[-173.06388855 -115.32085419]
[-184.15435791 -125.43978119]
[-194.16418457 -136.62881470]
[-202.99066162 -148.77311707]
[-210.54321289 -161.74809265]
[-216.74435425 -175.42057800]
[-221.53042603 -189.65028381]
[-224.85232544 -204.29118347]
[-226.67596436 -219.19305420]
[-226.98262024 -234.20294189]
[-225.76916504 -249.16685486]
[-223.04804993 -263.93121338]
[-218.84718323 -278.34454346]
[-213.20967102 -292.25891113]
[-206.19337463 -305.53152466]
[-197.87030029 -318.02621460]
[-188.32583618 -329.61474609]
[-177.65792847 -340.17822266]
[-165.97605896 -349.60821533]
[-153.40010071 -357.80798340]
[-140.05908203 -364.69338989]
[-126.08994293 -370.19372559]
[-111.63599396 -374.25262451]
[-96.84557343 -376.82836914]
[-81.87045288 -377.89456177]
[-66.86430359 -377.44024658]
[-51.98110580 -375.47009277]
[-37.37358856 -372.00433350]
[-23.19165421 -367.07852173]
[-9.58082867 -360.74319458]
[3.31921935 -353.06335449]
[15.37611294 -344.11782837]
[26.46612930 -333.99841309]
[36.47546387 -322.80895996]
[45.30141068 -310.66424561]
[52.85339737 -297.68893433]
[59.05392456 -284.01617432]
[63.83937073 -269.78625488]
[67.16062164 -255.14521790]
[68.98360443 -240.24328613]
[69.28961182 -225.23336792]
[68.07550049 -210.26951599]
[65.35372925 -195.50526428]
[61.15222168 -181.09213257]
[55.51410294 -167.17802429]
[48.49722672 -153.90570068]
[40.17359161 -141.41137695]
[30.62861824 -129.82325745]
[19.96025276 -119.26026154]
[8.27796745 -109.83077240]
[-4.29835653 -101.63156128]
[2.58105588 -88.30213165]
[9.46046829 -74.97270203]
[16.33987999 -61.64327240]
[23.21929359 -48.31384277]
[30.09870529 -34.98441696]
[36.97811890 -21.65498543]
[44.25134659 -8.53629208]
[57.40343094 -1.54544437]
[57.79908752 14.27081394]
[70.95117188 21.26166153]
[71.34682465 37.07791901]
[79.00742340 49.97424698]
[86.66802216 62.87057495]
[99.82010651 69.86141968]
[100.21575928 85.67768097]
[112.31508636 92.68466949]
[112.68057251 106.66172028]
[120.34116364 119.55805206]
[134.12269592 119.80390167]
[145.88973999 126.77204895]
[152.62326050 138.55038452]
[152.65730286 152.00932312]
[146.08992004 163.63307190]
[153.55764771 176.64201355]
[161.02539062 189.65097046]
[168.49313354 202.65992737]
[182.07382202 210.77630615]
[181.69981384 225.66621399]
[189.16755676 238.67515564]
[204.22575378 236.79730225]
[218.81637573 240.81684875]
[230.72430420 250.09126282]
[238.15411377 263.18267822]
[240.00068665 278.08084106]
[236.01353455 292.51165771]
[226.83026123 304.28436279]
[234.29800415 317.29330444]
[241.76574707 330.30227661]
[255.66714478 325.90841675]
[270.17300415 324.50942993]
[284.64584351 326.16415405]
[298.45004272 330.79745483]
[310.98001099 338.20336914]
[321.68652344 348.05432129]
[330.10089111 359.91567993]
[335.85559082 373.26486206]
[338.70004272 387.51443481]
[338.51181030 402.03784180]
[335.30166626 416.19705200]
[329.21313477 429.37057495]
[320.51599121 440.98071289]
[309.59432983 450.51892090]
[316.86758423 463.63763428]
[324.14080811 476.75631714]
[331.41403198 489.87500000]
[338.68725586 502.99371338]
[352.88027954 498.02719116]
[367.70849609 495.53091431]
[382.74533081 495.57669067]
[397.55810547 498.16320801]
[411.72061157 503.21603394]
[424.82537842 510.58984375]
[436.49539185 520.07238770]
[446.39483643 531.39093018]
[454.23889160 544.21972656]
[459.80187988 558.18975830]
[462.92376709 572.89898682]
[463.51467896 587.92425537]
[461.55764771 602.83325195]
[457.10894775 617.19702148]
[450.29663086 630.60223389]
[441.31668091 642.66326904]
[430.42742920 653.03308105]
[417.94223022 661.41326904]
[404.22030640 667.56274414]
[389.65640259 671.30462646]
[374.66964722 672.53118896]
[359.69116211 671.20715332]
[345.15191650 667.37060547]
[331.47027588 661.13195801]
[319.03985596 652.67071533]
[308.21832275 642.23028564]
[299.31701660 630.11108398]
[292.59207153 616.66180420]
[288.23693848 602.26940918]
[286.37695312 587.34802246]
[287.06561279 572.32690430]
[290.28311157 557.63830566]
[295.93688965 543.70477295]
[303.86425781 530.92724609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[4 173]
[5 172]
[18 158]
[19 157]
[20 156]
[27 149]
[28 148]
[30 146]
[31 145]
[32 144]
[33 143]
[37 138]
[38 137]
[40 135]
[42 133]
[43 132]
[44 131]
[46 129]
[48 127]
[53 126]
[54 125]
[55 124]
[56 123]
[57 122]
[58 121]
[59 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
