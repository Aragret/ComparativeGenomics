%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[53.38454056 572.77111816]
[46.94972229 586.35394287]
[38.51681519 598.79522705]
[28.28349495 609.80340576]
[16.48964882 619.12036133]
[3.41173911 626.52770996]
[-10.64366817 631.85180664]
[-25.34709358 634.96783447]
[-40.35387039 635.80279541]
[-55.31221390 634.33703613]
[-69.87148285 630.60504150]
[-83.69038391 624.69415283]
[-96.44498444 616.74298096]
[-107.83630371 606.93798828]
[-117.59729767 595.50891113]
[-125.49917603 582.72375488]
[-131.35668945 568.88214111]
[-135.03253174 554.30859375]
[-136.44053650 539.34472656]
[-135.54771423 524.34124756]
[-132.37496948 509.64996338]
[-126.99669647 495.61520386]
[-119.53895569 482.56597900]
[-110.17656708 470.80816650]
[-99.12901306 460.61737061]
[-86.65525055 452.23254395]
[-73.04768372 445.85015869]
[-58.62530136 441.61987305]
[-43.72617722 439.64086914]
[-28.69956970 439.95947266]
[-13.89772511 442.56829834]
[-9.07172775 428.36584473]
[-4.24572992 414.16336060]
[0.58026767 399.96090698]
[-7.49118567 385.20657349]
[-2.29188657 368.85781860]
[13.42625523 361.17932129]
[18.04026413 346.90658569]
[22.65427399 332.63385010]
[27.26828384 318.36111450]
[31.88229179 304.08837891]
[30.54391861 299.50387573]
[32.07130432 294.02990723]
[36.85199356 289.46301270]
[41.88890839 275.33398438]
[46.92582703 261.20495605]
[45.75304413 257.87976074]
[46.13258362 253.82131958]
[48.39153671 249.76541138]
[52.51601410 246.56607056]
[58.17880249 232.67604065]
[63.84158707 218.78601074]
[69.50437164 204.89599609]
[67.14440918 190.18952942]
[79.51898956 180.33152771]
[85.18177795 166.44149780]
[88.61283875 151.83918762]
[89.72848511 136.88072205]
[90.84413910 121.92227173]
[91.95978546 106.96382141]
[91.95978546 91.96382141]
[83.21750641 78.77734375]
[89.98676300 65.50984955]
[88.87111664 50.55139923]
[87.75547028 35.59294510]
[79.01319122 22.40646935]
[85.78244781 9.13897514]
[83.44696045 -5.67809296]
[79.90728760 -20.25446892]
[69.13196564 -31.83906746]
[73.64739227 -46.03273392]
[70.10771942 -60.60910797]
[66.56804657 -75.18548584]
[63.02837372 -89.76186371]
[59.48870087 -104.33823395]
[48.89990234 -111.70302582]
[46.25178528 -123.91659546]
[52.43093491 -134.31585693]
[49.10867691 -148.94331360]
[45.78641891 -163.57077026]
[42.46415710 -178.19824219]
[39.14189911 -192.82569885]
[35.81963730 -207.45315552]
[20.77021599 -207.13728333]
[5.96533489 -209.85765076]
[-7.98875570 -215.50283813]
[-20.52064323 -223.84170532]
[-31.11715698 -234.53277588]
[-39.34437180 -247.13822937]
[-44.86539459 -261.14190674]
[-47.45413971 -275.97039795]
[-47.00459671 -291.01641846]
[-43.53517914 -305.66384888]
[-37.18795395 -319.31295776]
[-28.22283936 -331.40475464]
[-17.00694847 -341.44412231]
[-3.99956656 -349.01992798]
[10.26666355 -353.82196045]
[25.20754814 -355.65356445]
[40.21126938 -354.43978882]
[54.66342926 -350.23028564]
[67.97222137 -343.19744873]
[79.59266663 -333.62924194]
[89.04891205 -321.91754150]
[95.95372009 -308.54187012]
[100.02436066 -294.04998779]
[101.09413147 -279.03530884]
[99.11922455 -264.11267090]
[94.18051910 -249.89318848]
[86.48024750 -236.95909119]
[76.33373260 -225.84005737]
[64.15646362 -216.99137878]
[50.44709778 -210.77542114]
[53.76935959 -196.14794922]
[57.09161758 -181.52049255]
[60.41387939 -166.89303589]
[63.73613739 -152.26557922]
[67.05839539 -137.63812256]
[79.65761566 -125.42227936]
[74.06507874 -107.87790680]
[77.60475159 -93.30152893]
[81.14441681 -78.72515869]
[84.68408966 -64.14878082]
[88.22376251 -49.57240677]
[98.74591064 -39.03040695]
[94.48366547 -23.79413986]
[98.02333832 -9.21776581]
[103.31907654 -23.25183678]
[114.46865082 -33.28612900]
[128.98121643 -37.07895660]
[143.61462402 -33.78299332]
[155.09973145 -24.13456535]
[160.87074280 -10.28915501]
[159.63839722 4.66013718]
[151.67800903 17.37360001]
[138.76794434 25.01101494]
[123.79233551 25.86616325]
[110.09678650 19.74800301]
[100.74089813 8.02332592]
[109.40338135 20.13987160]
[102.71392059 34.47729492]
[103.82956696 49.43574905]
[104.94522095 64.39420319]
[113.60769653 76.51074982]
[106.91823578 90.84817505]
[114.84226990 78.11201477]
[128.02589417 70.95716095]
[143.02296448 71.25388336]
[155.91326904 78.92462158]
[163.32731628 91.96424866]
[163.32708740 106.96424866]
[155.91264343 120.00365448]
[143.02210999 127.67399597]
[128.02503967 127.97026825]
[114.84162140 120.81501770]
[106.91823578 108.07946777]
[105.80258942 123.03792572]
[104.68694305 137.99636841]
[103.57128906 152.95483398]
[111.31713867 140.10952759]
[122.20343018 129.79019165]
[135.44427490 122.74179077]
[150.08381653 119.47315216]
[165.06520081 120.22024536]
[179.30691528 124.92913818]
[191.78082275 133.25988770]
[201.58645630 144.61108398]
[208.01589966 158.16328430]
[210.60502625 172.93814087]
[209.16693115 187.86904907]
[203.80541992 201.87812805]
[194.90753174 213.95404053]
[183.11564636 223.22503662]
[169.28100586 229.02182007]
[154.40234375 230.92591858]
[139.55378723 228.79988098]
[125.80723572 222.79718018]
[114.15508270 213.35115051]
[105.43849945 201.14372253]
[100.28675079 187.05616760]
[99.07180786 172.10429382]
[93.40901947 185.99432373]
[95.36394501 201.69427490]
[83.39440155 210.55877686]
[77.73161316 224.44880676]
[72.06882477 238.33883667]
[66.40604401 252.22885132]
[61.05485535 266.24188232]
[56.01794052 280.37091064]
[50.98102188 294.49993896]
[46.15502548 308.70239258]
[41.54101562 322.97512817]
[36.92700577 337.24786377]
[32.31299973 351.52059937]
[27.69898796 365.79333496]
[35.17132187 376.99951172]
[34.83017731 390.26956177]
[27.02408791 400.76467896]
[14.78272343 404.78692627]
[9.95672607 418.98937988]
[5.13072824 433.19183350]
[0.30473039 447.39428711]
[13.63165188 454.34365845]
[25.74150658 463.24600220]
[36.35042191 473.89266968]
[45.20970917 486.03405762]
[52.11169434 499.38555908]
[56.89458466 513.63421631]
[59.44626236 528.44604492]
[59.70691299 543.47375488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 202]
[32 201]
[33 200]
[34 199]
[37 195]
[38 194]
[39 193]
[40 192]
[41 191]
[44 190]
[45 189]
[46 188]
[50 187]
[51 186]
[52 185]
[53 184]
[55 182]
[56 181]
[57 159]
[58 158]
[59 157]
[60 156]
[61 145]
[63 143]
[64 142]
[65 141]
[67 139]
[68 127]
[69 126]
[71 124]
[72 123]
[73 122]
[74 121]
[75 120]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[83 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
