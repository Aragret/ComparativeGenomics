%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[38.23620224 892.70172119]
[23.23866463 893.10107422]
[8.23911285 892.78631592]
[-6.72847319 891.75823975]
[-21.63018799 890.01910400]
[-36.43227386 887.57293701]
[-51.10119629 884.42523193]
[-65.60372925 880.58306885]
[-79.90702057 876.05517578]
[-93.97866821 870.85192871]
[-107.78679657 864.98492432]
[-121.30011749 858.46759033]
[-134.48802185 851.31463623]
[-147.32064819 843.54229736]
[-159.76890564 835.16815186]
[-171.80461121 826.21118164]
[-183.40048218 816.69165039]
[-194.53027344 806.63116455]
[-205.16874695 796.05249023]
[-215.29183960 784.97961426]
[-224.87657166 773.43756104]
[-233.90127563 761.45257568]
[-242.34547424 749.05169678]
[-250.19004822 736.26312256]
[-257.41723633 723.11572266]
[-264.01065063 709.63940430]
[-269.95538330 695.86456299]
[-275.23794556 681.82244873]
[-279.84637451 667.54492188]
[-283.77020264 653.06427002]
[-287.00061035 638.41333008]
[-289.53021240 623.62530518]
[-291.35330200 608.73364258]
[-292.46575928 593.77209473]
[-292.86505127 578.77453613]
[-292.55029297 563.77496338]
[-291.52218628 548.80737305]
[-289.78302002 533.90570068]
[-287.33679199 519.10357666]
[-284.18902588 504.43469238]
[-280.34686279 489.93215942]
[-275.81896973 475.62887573]
[-270.61563110 461.55725098]
[-264.74862671 447.74914551]
[-258.23126221 434.23583984]
[-251.07829285 421.04794312]
[-243.30590820 408.21533203]
[-234.93173218 395.76708984]
[-225.97471619 383.73141479]
[-216.45518494 372.13555908]
[-206.39466858 361.00579834]
[-195.81596375 350.36734009]
[-184.74305725 340.24426270]
[-173.20101929 330.65954590]
[-161.21598816 321.63488770]
[-148.81510925 313.19073486]
[-136.02650452 305.34616089]
[-122.87911224 298.11901855]
[-109.40273285 291.52560425]
[-95.62789154 285.58093262]
[-81.58580017 280.29840088]
[-67.30825043 275.69000244]
[-52.82759857 271.76620483]
[-38.17664719 268.53582764]
[-23.38858223 266.00625610]
[-8.49690628 264.18319702]
[6.46464825 263.07077026]
[21.46218681 262.67150879]
[36.46173859 262.98632812]
[51.42931747 264.01446533]
[66.33102417 265.75366211]
[68.77674866 250.95437622]
[71.22248077 236.15510559]
[73.66820526 221.35583496]
[76.11393738 206.55656433]
[65.74481964 193.31570435]
[68.20890045 176.33798218]
[82.46473694 166.19941711]
[84.68985748 151.36537170]
[86.91497040 136.53132629]
[89.14009094 121.69728851]
[91.36520386 106.86324310]
[77.93495941 113.54370117]
[64.27454376 107.34749603]
[60.45390701 92.84222412]
[69.28948212 80.72064972]
[84.26800537 79.91833496]
[94.34739685 91.02513885]
[97.66966248 76.39768219]
[93.18103790 61.22655869]
[103.54505920 50.52907181]
[106.86732483 35.90161133]
[102.37870026 20.73049164]
[112.74272919 10.03300095]
[116.06498718 -4.59445858]
[102.17417908 -10.35237217]
[89.45636749 -18.37516403]
[78.27745819 -28.43200111]
[68.95909119 -40.23353195]
[61.76938248 -53.44020081]
[56.91518784 -67.67201996]
[54.53617477 -82.51952362]
[54.70079041 -97.55551147]
[57.40430069 -112.34736633]
[62.56891632 -126.46950531]
[70.04604340 -139.51559448]
[79.62055206 -151.11029053]
[91.01696014 -160.91996765]
[103.90737915 -168.66239929]
[117.92091370 -174.11480713]
[132.65437317 -177.12033081]
[147.68385315 -177.59248352]
[162.57690430 -175.51768494]
[176.90504456 -170.95562744]
[190.25602722 -164.03756714]
[202.24569702 -154.96255493]
[212.52909851 -143.99171448]
[220.81036377 -131.44065857]
[226.85121155 -117.67054749]
[230.47785950 -103.07755280]
[231.58592224 -88.08154297]
[230.14355469 -73.11399841]
[226.19223022 -58.60554504]
[219.84565735 -44.97363663]
[211.28642273 -32.61048126]
[200.76080322 -21.87179375]
[188.57164001 -13.06654930]
[175.06964111 -6.44809103]
[160.64328003 -2.20684528]
[145.70764160 -0.46484104]
[130.69244385 -1.27219927]
[127.37018585 13.35526085]
[132.09643555 27.48012733]
[121.49478149 39.22386932]
[118.17252350 53.85132980]
[122.89877319 67.97619629]
[112.29711914 79.71994019]
[108.97486115 94.34739685]
[106.19924927 109.08836365]
[103.97412872 123.92240906]
[101.74901581 138.75645447]
[99.52389526 153.59049988]
[97.29878235 168.42453003]
[106.49826813 178.26242065]
[108.32535553 191.41050720]
[102.33493805 203.03793335]
[90.91320801 209.00228882]
[88.46747589 223.80155945]
[86.02175140 238.60083008]
[83.57602692 253.40010071]
[81.13029480 268.19937134]
[95.79923248 271.34704590]
[110.30178833 275.18911743]
[124.60510254 279.71691895]
[138.67677307 284.92016602]
[152.48492432 290.78704834]
[165.99827576 297.30432129]
[179.18621826 304.45721436]
[192.01885986 312.22952271]
[204.46716309 320.60360718]
[216.50289917 329.56054688]
[228.09883118 339.08001709]
[239.22866821 349.14044189]
[249.86718750 359.71905518]
[259.99032593 370.79190063]
[269.57510376 382.33389282]
[278.59985352 394.31884766]
[287.04412842 406.71966553]
[294.88876343 419.50823975]
[302.11599731 432.65557861]
[308.70950317 446.13189697]
[314.65426636 459.90670776]
[319.93688965 473.94876099]
[324.54537964 488.22628784]
[328.46929932 502.70690918]
[331.69976807 517.35784912]
[334.22943115 532.14587402]
[336.05258179 547.03753662]
[337.16513062 561.99908447]
[337.56448364 576.99664307]
[337.24978638 591.99615479]
[336.22174072 606.96374512]
[334.48266602 621.86547852]
[332.03649902 636.66760254]
[328.88879395 651.33648682]
[325.04669189 665.83905029]
[320.51885986 680.14233398]
[315.31558228 694.21398926]
[309.44863892 708.02215576]
[302.93133545 721.53546143]
[295.77841187 734.72338867]
[288.00610352 747.55603027]
[279.63198853 760.00433350]
[270.67501831 772.04003906]
[261.15554810 783.63592529]
[251.09507751 794.76574707]
[240.51641846 805.40423584]
[229.44355774 815.52734375]
[217.90155029 825.11212158]
[205.91656494 834.13684082]
[193.51573181 842.58111572]
[180.72715759 850.42572021]
[167.57980347 857.65289307]
[154.10345459 864.24633789]
[140.32864380 870.19110107]
[126.28656769 875.47369385]
[112.00904083 880.08215332]
[97.52841187 884.00604248]
[82.87747192 887.23645020]
[68.08941650 889.76611328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[88 138]
[89 137]
[91 135]
[92 134]
[94 132]
[95 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
