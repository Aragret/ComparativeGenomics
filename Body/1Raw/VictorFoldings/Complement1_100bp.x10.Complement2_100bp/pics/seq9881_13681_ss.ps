%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[172.68434143 631.88623047]
[163.08956909 620.34790039]
[154.34237671 608.15441895]
[146.48735046 595.36804199]
[139.56451416 582.05383301]
[133.60913086 568.27972412]
[128.65158081 554.11584473]
[124.71709442 539.63433838]
[121.82573700 524.90911865]
[119.99224091 510.01507568]
[119.22595215 495.02822876]
[119.53076935 480.02487183]
[120.90513611 465.08151245]
[123.34206390 450.27426147]
[126.82911682 435.67858887]
[131.34854126 421.36886597]
[136.87728882 407.41799927]
[143.38720703 393.89712524]
[150.84509277 380.87512207]
[159.21298218 368.41830444]
[168.44821167 356.59020996]
[178.50370789 345.45108032]
[189.32826233 335.05770874]
[200.86668396 325.46301270]
[213.06018066 316.71591187]
[205.20843506 303.93505859]
[197.35667419 291.15423584]
[189.50491333 278.37338257]
[181.65316772 265.59252930]
[173.80140686 252.81170654]
[171.10939026 252.02992249]
[168.56483459 250.13470459]
[166.59339905 247.17684937]
[165.59449768 243.36021423]
[165.88897705 239.02809143]
[153.06216431 231.45695496]
[153.37313843 215.63880920]
[146.29603577 202.41326904]
[139.21893311 189.18774414]
[132.14183044 175.96221924]
[125.06472015 162.73669434]
[117.98761749 149.51116943]
[105.16081238 141.94001770]
[105.47178650 126.12187195]
[98.39467621 112.89633942]
[90.92693329 99.88739014]
[83.07518005 87.10654449]
[69.25885773 79.39811707]
[69.18938446 64.50367737]
[61.33762360 51.72283173]
[53.48587036 38.94198990]
[39.66955185 31.23355865]
[39.60007095 16.33911705]
[31.74831390 3.55827355]
[23.89655876 -9.22256851]
[16.04480362 -22.00341225]
[2.22848344 -29.71184158]
[2.15900254 -44.60628510]
[-5.69275284 -57.38712692]
[-13.54450798 -70.16796875]
[-21.39626312 -82.94881439]
[-35.03184891 -76.65538788]
[-49.31607819 -72.01889038]
[-64.04843140 -69.10442352]
[-79.02208710 -67.95289612]
[-94.02684021 -68.58046722]
[-108.85203552 -70.97833252]
[-123.28956604 -75.11283112]
[-137.13674927 -80.92592621]
[-150.19918823 -88.33599854]
[-162.29348755 -97.23902130]
[-173.24990845 -107.51002502]
[-182.91459656 -119.00481415]
[-191.15188599 -131.56201172]
[-197.84616089 -145.00534058]
[-202.90341187 -159.14608765]
[-206.25267029 -173.78572083]
[-207.84689331 -188.71873474]
[-207.66371155 -203.73547363]
[-205.70570374 -218.62515259]
[-202.00035095 -233.17874146]
[-196.59967041 -247.19190979]
[-189.57946777 -260.46795654]
[-181.03831482 -272.82049561]
[-171.09611511 -284.07611084]
[-159.89242554 -294.07678223]
[-147.58453369 -302.68215942]
[-134.34524536 -309.77139282]
[-120.36038208 -315.24496460]
[-105.82629395 -319.02606201]
[-90.94701385 -321.06161499]
[-75.93141937 -321.32296753]
[-60.99031067 -319.80654907]
[-46.33343506 -316.53356934]
[-32.16654968 -311.55001831]
[-18.68853760 -304.92587280]
[-6.08860922 -296.75408936]
[5.45635176 -287.14938354]
[15.78427219 -276.24661255]
[24.75016594 -264.19882202]
[32.22816467 -251.17515564]
[38.11328506 -237.35842896]
[42.32291794 -222.94262695]
[44.79795837 -208.13012695]
[45.50366592 -193.12884521]
[44.43013000 -178.14939880]
[41.59242249 -163.40206909]
[37.03038025 -149.09387207]
[30.80805016 -135.42570496]
[23.01278114 -122.58942413]
[13.75400734 -110.76523590]
[3.16170645 -100.11913300]
[-8.61542130 -90.80056763]
[-0.76366574 -78.01972198]
[7.08808994 -65.23888397]
[14.93984509 -52.45803833]
[28.19455528 -45.66378021]
[28.82564545 -29.85516739]
[36.67740250 -17.07432365]
[44.52915573 -4.29348183]
[52.38091278 8.48736095]
[65.63562012 15.28161907]
[66.26671600 31.09023285]
[74.11846924 43.87107468]
[81.97022247 56.65191650]
[95.22492981 63.44617462]
[95.85602570 79.25479126]
[103.70777893 92.03563690]
[106.60153961 92.99254608]
[109.21106720 95.02352142]
[111.13788605 98.02532196]
[112.02722931 101.74893951]
[111.62020874 105.81923676]
[118.69731140 119.04476166]
[132.03031921 127.56188965]
[131.21315002 142.43406677]
[138.29025269 155.65959167]
[145.36735535 168.88511658]
[152.44445801 182.11064148]
[159.52156067 195.33616638]
[166.59867859 208.56169128]
[179.93168640 217.07882690]
[179.11450195 231.95098877]
[186.58224487 244.95994568]
[194.43400574 257.74078369]
[202.28576660 270.52163696]
[210.13751221 283.30245972]
[217.98927307 296.08331299]
[225.84101868 308.86416626]
[239.15505981 301.94100952]
[252.92904663 295.98532104]
[267.09283447 291.02743530]
[281.57421875 287.09262085]
[296.29940796 284.20092773]
[311.19338989 282.36709595]
[326.18023682 281.60046387]
[341.18356323 281.90493774]
[356.12698364 283.27896118]
[370.93429565 285.71554565]
[385.53002930 289.20223999]
[399.83987427 293.72134399]
[413.79083252 299.24978638]
[427.31185913 305.75936890]
[440.33407593 313.21697998]
[452.79104614 321.58456421]
[464.61935425 330.81951904]
[475.75872803 340.87478638]
[486.15234375 351.69906616]
[495.74731445 363.23727417]
[504.49468994 375.43057251]
[512.34991455 388.21685791]
[519.27294922 401.53094482]
[525.22851562 415.30499268]
[530.18634033 429.46878052]
[534.12103271 443.95019531]
[537.01257324 458.67541504]
[538.84631348 473.56939697]
[539.61285400 488.55627441]
[539.30828857 503.55960083]
[537.93414307 518.50299072]
[535.49743652 533.31030273]
[532.01062012 547.90600586]
[527.49139404 562.21582031]
[521.96282959 576.16674805]
[515.45312500 589.68774414]
[507.99545288 602.70983887]
[499.62774658 615.16680908]
[490.39273071 626.99499512]
[480.33737183 638.13427734]
[469.51300049 648.52783203]
[457.97473145 658.12274170]
[445.78134155 666.86999512]
[432.99502563 674.72515869]
[419.68087769 681.64807129]
[405.90679932 687.60357666]
[391.74295044 692.56121826]
[377.26150513 696.49578857]
[362.53625488 699.38726807]
[347.64227295 701.22088623]
[332.65539551 701.98730469]
[317.65206909 701.68261719]
[302.70867920 700.30834961]
[287.90139771 697.87152100]
[273.30569458 694.38458252]
[258.99594116 689.86529541]
[245.04505920 684.33660889]
[231.52412415 677.82684326]
[218.50204468 670.36901855]
[206.04518127 662.00122070]
[194.21702576 652.76611328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 149]
[26 148]
[27 147]
[28 146]
[29 145]
[30 144]
[35 143]
[37 141]
[38 140]
[39 139]
[40 138]
[41 137]
[42 136]
[44 134]
[45 133]
[46 128]
[47 127]
[49 125]
[50 124]
[51 123]
[53 121]
[54 120]
[55 119]
[56 118]
[58 116]
[59 115]
[60 114]
[61 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
