%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[-7.24387741 1006.92541504]
[-22.23875618 1007.39624023]
[-37.24010468 1007.23022461]
[-52.22089005 1006.42767334]
[-67.15412140 1004.99005127]
[-82.01287842 1002.91992188]
[-96.77038574 1000.22106934]
[-111.40006256 996.89831543]
[-125.87552643 992.95764160]
[-140.17070007 988.40618896]
[-154.25982666 983.25207520]
[-168.11752319 977.50469971]
[-181.71879578 971.17431641]
[-195.03913879 964.27246094]
[-208.05456543 956.81140137]
[-220.74160767 948.80474854]
[-233.07740784 940.26678467]
[-245.03971863 931.21301270]
[-256.60699463 921.65972900]
[-267.75842285 911.62408447]
[-278.47384644 901.12420654]
[-288.73400879 890.17901611]
[-298.52038574 878.80822754]
[-307.81536865 867.03228760]
[-316.60217285 854.87255859]
[-324.86499023 842.35083008]
[-332.58895874 829.48968506]
[-339.76007080 816.31231689]
[-346.36550903 802.84246826]
[-352.39328003 789.10443115]
[-357.83258057 775.12292480]
[-362.67358398 760.92321777]
[-366.90756226 746.53082275]
[-370.52688599 731.97167969]
[-373.52505493 717.27203369]
[-375.89666748 702.45837402]
[-377.63739014 687.55749512]
[-378.74417114 672.59606934]
[-379.21496582 657.60119629]
[-379.04891968 642.59985352]
[-378.24636841 627.61907959]
[-376.80871582 612.68585205]
[-374.73858643 597.82708740]
[-372.03970337 583.06958008]
[-368.71691895 568.43994141]
[-364.77621460 553.96447754]
[-360.22473145 539.66931152]
[-355.07061768 525.58013916]
[-349.32321167 511.72250366]
[-342.99282837 498.12121582]
[-336.09091187 484.80087280]
[-328.62985229 471.78546143]
[-320.62316895 459.09844971]
[-312.08520508 446.76266479]
[-303.03140259 434.80035400]
[-293.47805786 423.23309326]
[-283.44241333 412.08169556]
[-272.94250488 401.36627197]
[-261.99731445 391.10614014]
[-250.62651062 381.31976318]
[-238.85060120 372.02481079]
[-226.69082642 363.23803711]
[-214.16908264 354.97521973]
[-201.30793762 347.25131226]
[-188.13055420 340.08016968]
[-174.66070557 333.47479248]
[-160.92265320 327.44702148]
[-146.94116211 322.00775146]
[-132.74140930 317.16677856]
[-118.34899139 312.93283081]
[-103.78984833 309.31350708]
[-89.09021759 306.31536865]
[-74.27658081 303.94378662]
[-59.37564850 302.20306396]
[-44.41425705 301.09631348]
[-29.41937828 300.62554932]
[-14.41802979 300.79162598]
[0.56275392 301.59420776]
[15.49597740 303.03186035]
[30.35472870 305.10202026]
[45.11223221 307.80093384]
[48.43449020 293.17349243]
[51.75675201 278.54602051]
[55.07901001 263.91854858]
[58.40126801 249.29109192]
[61.72352982 234.66363525]
[65.04579163 220.03617859]
[68.36804962 205.40872192]
[71.69030762 190.78126526]
[75.01256561 176.15379333]
[78.33482361 161.52633667]
[81.65708923 146.89888000]
[84.97934723 132.27142334]
[88.30160522 117.64395905]
[80.31895447 107.79860687]
[79.39141846 95.15766907]
[85.85149384 84.25257111]
[97.38341522 78.99250031]
[100.92308807 64.41612244]
[87.34799194 57.90379333]
[75.42377472 48.71104050]
[65.67170715 37.23973083]
[58.51811600 23.99134254]
[54.27572250 9.54503536]
[53.12998581 -5.46765804]
[55.13098907 -20.39044762]
[60.19126511 -34.57097626]
[68.08959198 -47.38932419]
[78.48069000 -58.28513718]
[90.91030884 -66.78208923]
[104.83508301 -72.50874329]
[119.64627075 -75.21473694]
[134.69639587 -74.78178406]
[149.32752991 -71.22881317]
[162.90005493 -64.71114349]
[174.82066345 -55.51370239]
[184.56820679 -44.03855896]
[191.71658325 -30.78735542]
[195.95330811 -16.33938026]
[197.09312439 -1.32623732]
[195.08625793 13.59576416]
[190.02040100 27.77429962]
[182.11703491 40.58954239]
[171.72164917 51.48126602]
[159.28868103 59.97332764]
[145.36166382 65.69449615]
[130.54942322 68.39466858]
[115.49946594 67.95579529]
[111.95979309 82.53217316]
[120.86601257 96.42630768]
[117.09102631 112.49233246]
[102.92906189 120.96621704]
[99.60680389 135.59367371]
[96.28454590 150.22113037]
[92.96228790 164.84860229]
[89.64002991 179.47605896]
[86.31776428 194.10351562]
[82.99550629 208.73097229]
[79.67324829 223.35844421]
[76.35099030 237.98590088]
[73.02873230 252.61335754]
[69.70646667 267.24081421]
[66.38420868 281.86828613]
[63.06195068 296.49572754]
[59.73969269 311.12319946]
[74.21517181 315.06381226]
[88.51036072 319.61526489]
[102.59951019 324.76928711]
[116.45721436 330.51663208]
[130.05850220 336.84695435]
[143.37887573 343.74880981]
[156.39433289 351.20977783]
[169.08139038 359.21643066]
[181.41722107 367.75433350]
[193.37956238 376.80807495]
[204.94688416 386.36135864]
[216.09832764 396.39694214]
[226.81379700 406.89678955]
[237.07398987 417.84194946]
[246.86039734 429.21270752]
[256.15542603 440.98855591]
[264.94226074 453.14831543]
[273.20513916 465.67001343]
[280.92910767 478.53112793]
[288.10028076 491.70846558]
[294.70574951 505.17828369]
[300.73358154 518.91632080]
[306.17291260 532.89776611]
[311.01394653 547.09747314]
[315.24798584 561.48986816]
[318.86737061 576.04901123]
[321.86560059 590.74865723]
[324.23724365 605.56225586]
[325.97802734 620.46319580]
[327.08483887 635.42456055]
[327.55569458 650.41943359]
[327.38970947 665.42077637]
[326.58718872 680.40161133]
[325.14959717 695.33483887]
[323.07949829 710.19360352]
[320.38067627 724.95111084]
[317.05792236 739.58074951]
[313.11727905 754.05621338]
[308.56582642 768.35144043]
[303.41177368 782.44055176]
[297.66439819 796.29827881]
[291.33407593 809.89953613]
[284.43218994 823.21990967]
[276.97119141 836.23535156]
[268.96450806 848.92236328]
[260.42660522 861.25817871]
[251.37284851 873.22052002]
[241.81954956 884.78784180]
[231.78392029 895.93927002]
[221.28405762 906.65472412]
[210.33888245 916.91491699]
[198.96810913 926.70129395]
[187.19224548 935.99627686]
[175.03248596 944.78314209]
[162.51077271 953.04595947]
[149.64964294 960.76989746]
[136.47230530 967.94110107]
[123.00247192 974.54650879]
[109.26443481 980.57434082]
[95.28295135 986.01361084]
[81.08321381 990.85467529]
[66.69081116 995.08868408]
[52.13168335 998.70800781]
[37.43206406 1001.70623779]
[22.61843872 1004.07781982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 145]
[82 144]
[83 143]
[84 142]
[85 141]
[86 140]
[87 139]
[88 138]
[89 137]
[90 136]
[91 135]
[92 134]
[93 133]
[94 132]
[98 129]
[99 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
