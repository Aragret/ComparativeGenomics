%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[15.77368832 487.87637329]
[11.41972351 502.24093628]
[5.81324339 516.16448975]
[-1.00187206 529.53802490]
[-8.97228527 542.25689697]
[-18.03561592 554.22161865]
[-28.12092781 565.33843994]
[-39.14929199 575.52044678]
[-51.03438950 584.68786621]
[-63.68320847 592.76904297]
[-76.99674988 599.70062256]
[-90.87081146 605.42846680]
[-105.19680786 609.90765381]
[-119.86262512 613.10321045]
[-134.75347900 614.99005127]
[-149.75282288 615.55346680]
[-164.74325562 614.78900146]
[-179.60746765 612.70269775]
[-194.22912598 609.31079102]
[-208.49377441 604.63989258]
[-222.28979492 598.72656250]
[-235.50920105 591.61706543]
[-248.04853821 583.36706543]
[-259.80966187 574.04107666]
[-270.70050049 563.71215820]
[-280.63586426 552.46112061]
[-289.53796387 540.37597656]
[-297.33712769 527.55139160]
[-303.97232056 514.08764648]
[-309.39163208 500.09017944]
[-313.55261230 485.66854858]
[-316.42269897 470.93557739]
[-317.97946167 456.00662231]
[-318.21069336 440.99847412]
[-317.11456299 426.02862549]
[-314.69970703 411.21423340]
[-310.98498535 396.67126465]
[-305.99945068 382.51348877]
[-299.78216553 368.85177612]
[-292.38177490 355.79296875]
[-283.85620117 343.43936157]
[-274.27215576 331.88757324]
[-263.70468140 321.22802734]
[-252.23643494 311.54415894]
[-239.95719910 302.91177368]
[-226.96308899 295.39840698]
[-213.35578918 289.06289673]
[-199.24179077 283.95477295]
[-184.73156738 280.11407471]
[-169.93867493 277.57083130]
[-154.97891235 276.34494019]
[-139.96932983 276.44598389]
[-125.02742004 277.87322998]
[-110.27011871 280.61544800]
[-95.81293488 284.65121460]
[-81.76900482 289.94891357]
[-68.24824524 296.46710205]
[-55.35648346 304.15475464]
[-43.19461441 312.95172119]
[-33.36403275 301.62213135]
[-23.53345108 290.29251099]
[-13.70287037 278.96292114]
[-3.87228918 267.63333130]
[5.95829153 256.30374146]
[14.46511841 243.94923401]
[21.54222488 230.72370911]
[28.61932945 217.49818420]
[35.69643402 204.27265930]
[31.14704514 190.13623047]
[38.13583374 176.62284851]
[52.99426651 171.94686890]
[60.07137299 158.72134399]
[67.14847565 145.49581909]
[74.22558594 132.27029419]
[81.30268860 119.04476166]
[88.37979126 105.81923676]
[95.05998993 92.38886261]
[101.33734894 78.76554108]
[107.61470795 65.14222717]
[113.89207458 51.51890945]
[117.75637817 37.02521896]
[119.09461212 22.08503342]
[120.43284607 7.14484787]
[121.77108002 -7.79533720]
[123.10931396 -22.73552132]
[124.44754791 -37.67570877]
[122.09623718 -46.50232315]
[125.91854858 -52.82780457]
[127.47907257 -67.74640656]
[112.94396210 -71.57147217]
[99.16313934 -77.57058716]
[86.45964813 -85.60312653]
[75.13126373 -95.48078918]
[65.44355011 -106.97203064]
[57.62359619 -119.80747986]
[51.85471344 -133.68624878]
[48.27213669 -148.28302002]
[46.95984650 -163.25559998]
[47.94859695 -178.25303650]
[51.21521759 -192.92373657]
[56.68313217 -206.92382812]
[64.22416687 -219.92509460]
[73.66154480 -231.62280273]
[84.77404785 -241.74272156]
[97.30117035 -250.04763794]
[110.94927216 -256.34286499]
[125.39841461 -260.48083496]
[140.30989075 -262.36453247]
[155.33415222 -261.94982910]
[170.11900330 -259.24642944]
[184.31788635 -254.31770325]
[197.59794617 -247.27919006]
[209.64787292 -238.29589844]
[220.18519592 -227.57838440]
[228.96293640 -215.37789917]
[235.77528381 -201.98042297]
[240.46260071 -187.70004272]
[242.91496277 -172.87147522]
[243.07490540 -157.84233093]
[240.93867493 -142.96493530]
[236.55635071 -128.58802795]
[230.03065491 -115.04860687]
[221.51457214 -102.66407776]
[211.20771790 -91.72473145]
[199.35169983 -82.48702240]
[186.22445679 -75.16748047]
[172.13368225 -69.93769073]
[157.40971375 -66.92024994]
[142.39767456 -66.18588257]
[140.83715820 -51.26728058]
[139.38772583 -36.33747482]
[138.04949951 -21.39728737]
[136.71125793 -6.45710278]
[135.37303162 8.48308182]
[134.03479004 23.42326736]
[132.69656372 38.36345291]
[140.55049133 25.58394623]
[151.30023193 15.12243938]
[164.28842163 7.61865902]
[178.72085571 3.53146315]
[193.71495056 3.11078525]
[208.35383606 6.38234997]
[221.74232483 13.14610004]
[233.06170654 22.98843002]
[241.61981201 35.30747604]
[246.89329529 49.34992599]
[248.55967712 64.25708008]
[246.51707458 79.11735535]
[240.89038086 93.02204132]
[232.02366638 105.12085724]
[220.45915222 114.67396545]
[206.90400696 121.09719086]
[192.18710327 123.99774170]
[177.20843506 123.19824982]
[162.88391113 118.74760437]
[150.08950806 110.91796875]
[139.60760498 100.18812561]
[132.07916260 87.21420288]
[127.96454620 72.78957367]
[127.51538849 57.79627228]
[121.23802948 71.41958618]
[114.96066284 85.04290771]
[108.68330383 98.66622162]
[109.49261475 101.60467529]
[109.25062561 104.90254974]
[107.82215881 108.17102814]
[105.21756744 110.97679901]
[101.60532379 112.89633942]
[94.52821350 126.12187195]
[87.45111084 139.34739685]
[80.37400818 152.57292175]
[73.29689789 165.79844666]
[66.21979523 179.02397156]
[70.57285309 193.98020935]
[63.20726395 207.29194641]
[48.92196274 211.34976196]
[41.84485626 224.57528687]
[34.76774979 237.80081177]
[27.69064713 251.02633667]
[40.38528442 243.03596497]
[55.09504700 240.09948730]
[69.88460541 242.60324097]
[82.80815125 250.21784973]
[92.16535950 261.94143677]
[96.72512817 276.23159790]
[95.88755035 291.20819092]
[89.76281738 304.90078735]
[79.15673828 315.50793457]
[65.46473694 321.63403320]
[50.48822403 322.47308350]
[36.19761658 317.91473389]
[24.47309303 308.55868530]
[16.85721588 295.63589478]
[14.35198402 280.84658813]
[17.28788567 266.13433838]
[7.45730400 277.46392822]
[-2.37327695 288.79351807]
[-12.20385742 300.12310791]
[-22.03443909 311.45269775]
[-31.86501884 322.78228760]
[-21.44139481 333.58255005]
[-12.01309776 345.26181030]
[-3.65391827 357.72863770]
[3.57071972 370.88546753]
[9.60427284 384.62933350]
[14.39951992 398.85266113]
[17.91893005 413.44415283]
[20.13496017 428.28958130]
[21.03026390 443.27276611]
[20.59783554 458.27645874]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 200]
[60 199]
[61 198]
[62 197]
[63 196]
[64 195]
[65 179]
[66 178]
[67 177]
[68 176]
[71 173]
[72 172]
[73 171]
[74 170]
[75 169]
[76 168]
[77 163]
[78 162]
[79 161]
[80 160]
[81 136]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[88 130]
[89 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
