%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[161.35498047 428.55505371]
[170.26718140 416.45245361]
[180.92247009 405.85220337]
[193.07106018 397.00277710]
[186.19165039 383.67337036]
[173.47898865 375.91207886]
[174.02543640 360.10031128]
[167.14602661 346.77087402]
[160.26661682 333.44146729]
[153.38720703 320.11203003]
[146.50778198 306.78259277]
[133.79512024 299.02130127]
[134.34156799 283.20953369]
[134.06977844 298.20709229]
[129.00495911 312.32614136]
[119.68163300 324.07669067]
[107.08368683 332.21868896]
[92.54063416 335.89285278]
[77.58722687 334.71148682]
[63.80154037 328.79922485]
[52.63840485 318.77999878]
[45.27589798 305.71121216]
[42.49099731 290.97201538]
[44.57760239 276.11785889]
[51.31550980 262.71633911]
[61.99365234 252.18176270]
[75.48513794 245.62585449]
[90.36618042 243.74049377]
[105.06634521 246.72463989]
[118.03429413 254.26336670]
[127.90158081 265.56124878]
[124.57932281 250.93379211]
[121.25706482 236.30633545]
[117.93480682 221.67887878]
[113.38790894 215.85241699]
[114.67369080 206.80894470]
[111.56958008 192.13363647]
[108.46546936 177.45832825]
[98.26186371 166.60772705]
[102.97586060 151.50511169]
[99.87174988 136.82981873]
[89.66814423 125.97920227]
[94.38214111 110.87659454]
[90.27402496 125.30307770]
[81.96119690 137.78894043]
[70.23598480 147.14411926]
[56.21595764 152.47694397]
[41.23742294 153.27909851]
[26.72803497 149.47415161]
[14.07073402 141.42475891]
[4.47193623 129.89813232]
[-1.15346289 115.99292755]
[-2.26928639 101.03448486]
[1.23081923 86.44855499]
[9.01324558 73.62538147]
[20.33622169 63.78718185]
[34.12051392 57.87166977]
[49.05229187 56.44267273]
[63.70835114 59.63640213]
[76.69177246 67.14844513]
[86.76506042 78.26280212]
[92.96839142 91.92121887]
[93.86120605 76.94780731]
[94.75402069 61.97440338]
[95.64683533 47.00099945]
[93.56642914 43.18971634]
[92.87643433 39.30533218]
[93.42910004 35.79392624]
[94.94697571 33.00777435]
[97.06475830 31.17116356]
[98.84722900 16.27744484]
[100.51876831 1.37087142]
[102.07929230 -13.54773331]
[103.63981628 -28.46633720]
[97.38019562 -42.99657440]
[106.39958954 -54.84983444]
[107.96011353 -69.76844025]
[109.52063751 -84.68704224]
[111.08116150 -99.60565186]
[111.41613770 -114.60190582]
[110.52332306 -129.57531738]
[109.63050842 -144.54872131]
[106.31461334 -150.26853943]
[106.37590790 -155.95126343]
[108.94078064 -159.97996521]
[108.49417114 -174.97331238]
[108.04756165 -189.96667480]
[105.30268860 -194.40657043]
[104.60511780 -198.99641418]
[105.66912079 -202.93125916]
[107.93090820 -205.63618469]
[108.15423584 -220.63452148]
[108.37756348 -235.63285828]
[108.60089111 -250.63119507]
[108.82421875 -265.62954712]
[109.04754639 -280.62786865]
[94.66623688 -285.28289795]
[82.29689026 -293.97143555]
[73.03938293 -305.92089844]
[67.71689606 -320.06878662]
[66.80268860 -335.15704346]
[70.37805939 -349.84405518]
[78.12509155 -362.82385254]
[89.35491180 -372.94226074]
[103.06898499 -379.29959106]
[118.04785919 -381.33053589]
[132.95962524 -378.85452271]
[146.47833252 -372.09167480]
[157.40191650 -361.64340210]
[164.75904846 -348.43872070]
[167.89555359 -333.65176392]
[166.53251648 -318.59741211]
[160.79115295 -304.61425781]
[151.18197632 -292.94570923]
[138.55941772 -284.62930298]
[124.04588318 -280.40454102]
[123.82255554 -265.40621948]
[123.59922791 -250.40786743]
[123.37590027 -235.40953064]
[123.15257263 -220.41119385]
[122.92924500 -205.41285706]
[123.04091644 -190.41326904]
[123.48751831 -175.41992188]
[123.93412781 -160.42657471]
[124.60391235 -145.44154358]
[125.49672699 -130.46812439]
[126.38954163 -115.49472809]
[134.09510803 -128.36422729]
[146.85049438 -136.25729370]
[161.80609131 -137.41056824]
[175.62078857 -131.56643677]
[185.20835876 -120.03046417]
[188.42689514 -105.37983704]
[184.55738831 -90.88752747]
[174.46429443 -79.79116821]
[160.40242004 -74.56970978]
[145.51322937 -76.38963318]
[133.12301636 -84.84436798]
[125.99976349 -98.04512787]
[124.43924713 -83.12651825]
[122.87872314 -68.20791626]
[121.31819916 -53.28931046]
[127.68943024 -39.82615280]
[118.55841827 -26.90581512]
[116.99789429 -11.98721027]
[115.43737030 2.93139434]
[117.86794281 9.91094398]
[113.74094391 18.05991173]
[111.95848083 32.95362854]
[110.62024689 47.89381409]
[109.72743225 62.86721802]
[108.83460999 77.84062195]
[107.94179535 92.81403351]
[109.05744934 107.77248383]
[119.48307800 119.67276764]
[114.54705048 133.72570801]
[117.65116119 148.40100098]
[128.07679749 160.30128479]
[123.14076996 174.35421753]
[126.24488068 189.02952576]
[129.34898376 203.70483398]
[132.56227112 218.35661316]
[135.88452148 232.98406982]
[139.20678711 247.61154175]
[142.52903748 262.23898315]
[147.67100525 276.33013916]
[160.87573242 285.04483032]
[159.83721924 299.90316772]
[166.71662903 313.23260498]
[173.59603882 326.56204224]
[180.47544861 339.89147949]
[187.35487366 353.22088623]
[200.55960083 361.93557739]
[199.52108765 376.79394531]
[206.40049744 390.12338257]
[220.65158081 385.34771729]
[235.46467590 382.80355835]
[250.49252319 382.55053711]
[265.38287354 384.59457397]
[279.78665161 388.88775635]
[293.36624146 395.32946777]
[305.80328369 403.76867676]
[316.80624390 414.00759888]
[326.11721802 425.80615234]
[333.51791382 438.88781738]
[338.83486938 452.94592285]
[341.94345093 467.65093994]
[342.77078247 482.65814209]
[341.29745483 497.61572266]
[337.55804443 512.17309570]
[331.64016724 525.98901367]
[323.68255615 538.73956299]
[313.87176514 550.12591553]
[302.43774414 559.88110352]
[289.64855957 567.77648926]
[275.80398560 573.62701416]
[261.22857666 577.29541016]
[246.26396179 578.69586182]
[231.26097107 577.79541016]
[216.57128906 574.61523438]
[202.53926086 569.22979736]
[189.49380493 561.76544189]
[177.74073792 552.39709473]
[167.55557251 541.34436035]
[159.17706299 528.86639404]
[152.80158997 515.25555420]
[148.57862854 500.83105469]
[146.60717773 485.93090820]
[146.93342590 470.90447998]
[149.54972839 456.10394287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 175]
[5 174]
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[13 166]
[31 165]
[32 164]
[33 163]
[34 162]
[36 161]
[37 160]
[38 159]
[40 157]
[41 156]
[43 154]
[62 153]
[63 152]
[64 151]
[65 150]
[70 149]
[71 148]
[72 146]
[73 145]
[74 144]
[76 142]
[77 141]
[78 140]
[79 139]
[80 127]
[81 126]
[82 125]
[85 124]
[86 123]
[87 122]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
