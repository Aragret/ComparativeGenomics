%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[72.69445801 617.18768311]
[58.11785126 620.74450684]
[43.35910034 623.44769287]
[28.46814156 625.28814697]
[13.49535942 626.25970459]
[-1.50857973 626.35900879]
[-16.49290848 625.58575439]
[-31.40692520 623.94250488]
[-46.20016479 621.43487549]
[-60.82256699 618.07135010]
[-75.22466278 613.86328125]
[-89.35771179 608.82495117]
[-103.17389679 602.97338867]
[-116.62646484 596.32830811]
[-129.66989136 588.91235352]
[-142.26005554 580.75048828]
[-154.35435486 571.87042236]
[-165.91184998 562.30212402]
[-176.89344788 552.07800293]
[-187.26197815 541.23260498]
[-196.98236084 529.80273438]
[-206.02172852 517.82702637]
[-214.34945679 505.34594727]
[-221.93739319 492.40179443]
[-228.75984192 479.03833008]
[-234.79373169 465.30078125]
[-240.01866150 451.23562622]
[-244.41691589 436.89047241]
[-247.97363281 422.31387329]
[-250.67678833 407.55511475]
[-252.51721191 392.66412354]
[-253.48867798 377.69134521]
[-253.58792114 362.68740845]
[-252.81459045 347.70309448]
[-251.17129517 332.78906250]
[-248.66362000 317.99584961]
[-245.30003357 303.37344360]
[-241.09190369 288.97137451]
[-236.05349731 274.83834839]
[-230.20185852 261.02218628]
[-223.55676270 247.56965637]
[-216.14071655 234.52624512]
[-207.97882080 221.93612671]
[-199.09866333 209.84185791]
[-189.53031921 198.28440857]
[-179.30615234 187.30285645]
[-168.46076965 176.93437195]
[-157.03085327 167.21401978]
[-145.05508423 158.17471313]
[-132.57397461 149.84703064]
[-119.62978363 142.25915527]
[-106.26629639 135.43675232]
[-92.52872467 129.40292358]
[-78.46355438 124.17806244]
[-64.11838531 119.77986145]
[-49.54175568 116.22319794]
[-34.78298187 113.52011871]
[-19.89200592 111.67975616]
[-4.91921663 110.70834351]
[10.08472347 110.60916138]
[25.06904602 111.38255310]
[39.98304749 113.02590179]
[54.77626801 115.53364563]
[69.39864349 118.89730072]
[83.80070496 123.10547638]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[102.07026672 71.85760498]
[107.10718536 57.72857666]
[112.14410400 43.59954834]
[117.18101501 29.47051620]
[116.23886108 24.33637238]
[117.25833893 19.80713844]
[119.68054962 16.52872849]
[122.77120209 14.83162403]
[128.43399048 0.94159681]
[134.09677124 -12.94843006]
[120.67422485 -19.66094398]
[107.80490112 -27.38125420]
[95.56432343 -36.06405640]
[84.02433014 -45.65839005]
[73.25263977 -56.10795975]
[63.31246948 -67.35143280]
[54.26214981 -79.32283783]
[46.15479279 -91.95191193]
[39.03797531 -105.16454315]
[32.95346451 -118.88319397]
[27.93696785 -133.02735901]
[24.01792145 -147.51403809]
[21.21932602 -162.25820923]
[19.55760384 -177.17335510]
[19.04250717 -192.17193604]
[19.67705917 -207.16593933]
[21.45753670 -222.06736755]
[24.37348938 -236.78878784]
[28.40780640 -251.24378967]
[33.53681183 -265.34753418]
[39.73040390 -279.01730347]
[46.95224380 -292.17282104]
[55.15993881 -304.73690796]
[64.30532837 -316.63583374]
[74.33474731 -327.79977417]
[85.18933105 -338.16320801]
[96.80538940 -347.66531372]
[109.11473846 -356.25033569]
[122.04515076 -363.86788940]
[135.52075195 -370.47329712]
[149.46244812 -376.02774048]
[163.78842163 -380.49865723]
[178.41461182 -383.85980225]
[193.25517273 -386.09146118]
[208.22303772 -387.18051147]
[223.23033142 -387.12060547]
[238.18902588 -385.91204834]
[253.01129150 -383.56198120]
[267.61016846 -380.08416748]
[281.89999390 -375.49899292]
[295.79690552 -369.83340454]
[309.21932983 -363.12063599]
[322.08850098 -355.40008545]
[334.32891846 -346.71704102]
[345.86874390 -337.12249756]
[356.64022827 -326.67272949]
[366.58020020 -315.42907715]
[375.63027954 -303.45748901]
[383.73739624 -290.82824707]
[390.85397339 -277.61547852]
[396.93820190 -263.89672852]
[401.95443726 -249.75245667]
[405.87319946 -235.26570129]
[408.67153931 -220.52148438]
[410.33297729 -205.60630798]
[410.84777832 -190.60771179]
[410.21295166 -175.61372375]
[408.43218994 -160.71232605]
[405.51596069 -145.99098206]
[401.48135376 -131.53605652]
[396.35208130 -117.43238831]
[390.15823364 -103.76275635]
[382.93615723 -90.60736847]
[374.72821045 -78.04342651]
[365.58261108 -66.14466858]
[355.55297852 -54.98091888]
[344.69818115 -44.61769485]
[333.08193970 -35.11580658]
[320.77243042 -26.53101730]
[307.84188843 -18.91370773]
[294.36614990 -12.30858040]
[280.42434692 -6.75439739]
[266.09829712 -2.28375173]
[251.47204590 1.07711983]
[236.63142395 3.30849433]
[221.66355896 4.39727688]
[206.65625000 4.33707809]
[191.69760132 3.12825131]
[176.87536621 0.77789044]
[162.27653503 -2.70021152]
[147.98680115 -7.28564358]
[142.32402039 6.60438347]
[136.66123962 20.49440956]
[131.31004333 34.50743484]
[126.27313232 48.63646317]
[121.23621368 62.76549149]
[116.19929504 76.89452362]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[97.92973328 128.14239502]
[111.74596405 133.99386597]
[125.19858551 140.63879395]
[138.24208069 148.05467224]
[150.83230591 156.21643066]
[162.92668152 165.09642029]
[174.48425293 174.66462708]
[185.46592712 184.88865662]
[195.83456421 195.73391724]
[205.55503845 207.16371155]
[214.59449768 219.13937378]
[222.92233276 231.62036133]
[230.51037598 244.56446838]
[237.33293152 257.92785645]
[243.36694336 271.66537476]
[248.59197998 285.73046875]
[252.99035645 300.07559204]
[256.54721069 314.65216064]
[259.25045776 329.41091919]
[261.09100342 344.30187988]
[262.06262207 359.27462769]
[262.16198730 374.27859497]
[261.38876343 389.26290894]
[259.74560547 404.17694092]
[257.23803711 418.97018433]
[253.87457275 433.59259033]
[249.66658020 447.99472046]
[244.62828064 462.12777710]
[238.77674866 475.94400024]
[232.13177490 489.39657593]
[224.71583557 502.44006348]
[216.55403137 515.03027344]
[207.67399597 527.12457275]
[198.10574341 538.68212891]
[187.88166809 549.66375732]
[177.03636169 560.03234863]
[165.60652161 569.75274658]
[153.63082886 578.79217529]
[141.14979553 587.11993408]
[128.20567322 594.70794678]
[114.84223175 601.53045654]
[101.10471344 607.56439209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 169]
[66 168]
[68 166]
[69 165]
[70 164]
[71 163]
[72 162]
[76 161]
[77 160]
[78 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
