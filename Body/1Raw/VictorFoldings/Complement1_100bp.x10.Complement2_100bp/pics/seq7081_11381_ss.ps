%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[140.99101257 532.34295654]
[130.54801941 543.28820801]
[117.23290253 550.46893311]
[102.35015106 553.18164062]
[87.35780334 551.16052246]
[73.72467804 544.60363770]
[62.78639603 534.15332031]
[55.61458588 520.83337402]
[52.91186523 505.94882202]
[54.94301987 490.95782471]
[61.50905991 477.32910156]
[71.96670532 466.39782715]
[85.29143524 459.23492432]
[100.17781067 456.54217529]
[94.21025085 442.89529419]
[103.72190094 430.25256348]
[105.72591400 415.38702393]
[107.72992706 400.52148438]
[109.73394012 385.65597534]
[110.62676239 370.68255615]
[102.70082855 358.07189941]
[110.23180389 344.15805054]
[110.00847626 329.15972900]
[99.17517090 319.00219727]
[98.73503113 303.79495239]
[109.46262360 292.50085449]
[109.23929596 277.50250244]
[109.01596832 262.50418091]
[108.45775604 247.51455688]
[107.56494141 232.54115295]
[106.67211914 217.56774902]
[105.22270203 202.63793945]
[103.21868896 187.77241516]
[101.21467590 172.90689087]
[99.21066284 158.04135132]
[95.20171356 151.83248901]
[97.28918457 142.93977356]
[95.50671387 128.04605103]
[91.59065247 121.77818298]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.37781525 73.76294708]
[87.15270233 58.92890549]
[77.45386505 46.42917252]
[83.21759033 32.69495392]
[80.99246979 17.86090851]
[71.29364014 5.36117792]
[77.05735779 -8.37304211]
[74.83224487 -23.20708656]
[65.13341522 -35.70681763]
[70.89713287 -49.44103622]
[68.67201233 -64.27507782]
[54.04652405 -64.86473846]
[39.78432846 -68.13915253]
[26.37382698 -73.98464203]
[14.27395916 -82.19950104]
[3.89850616 -92.50095367]
[-4.39805841 -104.53492737]
[-10.33268070 -117.88817596]
[-13.70338345 -132.10249329]
[-14.39613914 -146.69042969]
[-12.38872719 -161.15202332]
[-7.75144339 -174.99192810]
[-0.64463860 -187.73634338]
[8.68682480 -198.94927979]
[19.92200851 -208.24749756]
[32.67493820 -215.31350708]
[46.50786591 -219.90652466]
[44.50385284 -234.77204895]
[42.49983597 -249.63758850]
[40.49582291 -264.50311279]
[38.49180984 -279.36865234]
[35.29992676 -283.49890137]
[34.12863159 -287.99124146]
[34.77750397 -292.01544189]
[36.74561310 -294.94097900]
[27.80797577 -307.99584961]
[34.37895203 -321.36264038]
[33.04071808 -336.30282593]
[31.70248222 -351.24301147]
[29.92001724 -366.13674927]
[27.69489861 -380.97079468]
[25.46978188 -395.80484009]
[23.24466515 -410.63888550]
[21.01954842 -425.47293091]
[18.79442978 -440.30694580]
[3.77206206 -441.43664551]
[-10.62213230 -445.88128662]
[-23.66614532 -453.41796875]
[-34.70569611 -463.66864014]
[-43.18704224 -476.11911011]
[-48.68476486 -490.14489746]
[-50.92310333 -505.04248047]
[-49.78977966 -520.06457520]
[-45.34164047 -534.45770264]
[-37.80180740 -547.49987793]
[-27.54847145 -558.53692627]
[-15.09593487 -567.01525879]
[-1.06881344 -572.50958252]
[13.82929802 -574.74432373]
[28.85111809 -573.60736084]
[43.24315643 -569.15570068]
[56.28351593 -561.61273193]
[67.31809998 -551.35675049]
[75.79341125 -538.90216064]
[81.28433228 -524.87365723]
[83.51544952 -509.97503662]
[82.37484741 -494.95349121]
[77.91973877 -480.56253052]
[70.37358093 -467.52398682]
[60.11489868 -456.49191284]
[47.65825653 -448.01959229]
[33.62847519 -442.53207397]
[35.85359192 -427.69802856]
[38.07870865 -412.86398315]
[40.30382538 -398.02993774]
[42.52894211 -383.19589233]
[44.75405884 -368.36184692]
[46.92558670 -366.58911133]
[48.52574539 -363.84939575]
[49.18271255 -360.35598755]
[48.60867691 -356.45278931]
[46.64266586 -352.58126831]
[47.98089981 -337.64108276]
[49.31913376 -322.70089722]
[58.16105270 -310.71466064]
[51.68579865 -296.27923584]
[53.35733795 -281.37265015]
[55.36135101 -266.50711060]
[57.36536407 -251.64160156]
[59.36938095 -236.77606201]
[61.37339401 -221.91053772]
[76.73647308 -221.02232361]
[91.63787079 -217.16169739]
[105.50793457 -210.47436523]
[117.81607819 -201.21412659]
[128.09106445 -189.73327637]
[135.93907166 -176.46914673]
[141.05877686 -161.92747498]
[143.25289917 -146.66311646]
[142.43585205 -131.25888062]
[138.63705444 -116.30326080]
[131.99981689 -102.36798096]
[122.77607727 -89.98610687]
[111.31669617 -79.63168335]
[98.05818176 -71.70156097]
[83.50605774 -66.50019836]
[85.73117065 -51.66615295]
[95.27085114 -40.22745514]
[89.66628265 -25.43220329]
[91.89140320 -10.59815979]
[101.43107605 0.84054101]
[95.82651520 15.63579178]
[98.05162811 30.46983528]
[107.59130859 41.90853500]
[101.98674011 56.70378494]
[104.21186066 71.53782654]
[106.81475067 73.91633606]
[108.39492035 77.67374420]
[108.31680298 82.31564331]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.40043640 126.26358795]
[112.18289948 141.15730286]
[114.07618713 156.03733826]
[116.08020782 170.90287781]
[118.08422089 185.76840210]
[120.08823395 200.63392639]
[131.11990356 190.47016907]
[145.96691895 192.60699463]
[153.68461609 205.46923828]
[148.58378601 219.57531738]
[134.42457581 224.52676392]
[121.64553070 216.67494202]
[122.53834534 231.64834595]
[123.43115997 246.62174988]
[126.30700684 250.97795105]
[127.14093018 255.54499817]
[126.19455719 259.50976562]
[124.01430511 262.28085327]
[124.23763275 277.27917480]
[124.46096039 292.27752686]
[135.52006531 303.24719238]
[135.53288269 318.46084595]
[125.00681305 328.93640137]
[125.23014069 343.93472290]
[133.17204285 357.61816406]
[125.62509918 370.45922852]
[134.29315186 358.21731567]
[147.87927246 351.85983276]
[162.83207703 353.04867554]
[175.24296570 361.47305298]
[181.86772156 374.93087769]
[180.97468567 389.90426636]
[172.79727173 402.47921753]
[159.47305298 409.36871338]
[144.48492432 408.77182007]
[131.75077820 400.84457397]
[124.59947205 387.65997314]
[122.59545898 402.52551270]
[120.59144592 417.39105225]
[118.58743286 432.25656128]
[124.41165161 446.96673584]
[115.04334259 458.54620361]
[128.68524170 465.08483887]
[139.63751221 475.52047729]
[146.82717896 488.83078003]
[149.54983521 503.71173096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 206]
[16 204]
[17 203]
[18 202]
[19 201]
[20 190]
[22 188]
[23 187]
[26 184]
[27 183]
[28 182]
[29 178]
[30 177]
[31 176]
[32 170]
[33 169]
[34 168]
[35 167]
[37 166]
[38 165]
[40 164]
[42 162]
[43 158]
[44 157]
[46 155]
[47 154]
[49 152]
[50 151]
[52 149]
[53 148]
[69 133]
[70 132]
[71 131]
[72 130]
[73 129]
[77 128]
[79 126]
[80 125]
[81 124]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
