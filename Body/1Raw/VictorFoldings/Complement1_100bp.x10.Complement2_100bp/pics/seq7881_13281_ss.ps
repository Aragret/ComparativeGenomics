%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[88.57952881 398.70404053]
[82.44715118 412.41818237]
[74.54152679 425.19256592]
[65.00373077 436.79919434]
[54.00398254 447.03094482]
[41.73857880 455.70523071]
[28.42641449 462.66726685]
[14.30506039 467.79275513]
[-0.37347338 470.99026489]
[-15.34722996 472.20272827]
[-30.34898376 471.40850830]
[-45.11101532 468.62176514]
[-59.36987305 463.89224243]
[-72.87109375 457.30432129]
[-85.37373352 448.97561646]
[-96.65466309 439.05471802]
[-106.51256561 427.71871948]
[-114.77151489 415.16989136]
[-121.28411865 401.63217163]
[-125.93415070 387.34719849]
[-128.63864136 372.56988525]
[-129.34928894 357.56393433]
[-128.05345154 342.59716797]
[-124.77423096 327.93667603]
[-119.57015991 313.84408569]
[-112.53410339 300.57089233]
[-103.79163361 288.35400391]
[-93.49876404 277.41140747]
[-81.83918762 267.93841553]
[-69.02098846 260.10406494]
[-55.27291107 254.04815674]
[-40.84031296 249.87879944]
[-25.98075867 247.67037964]
[-10.95943642 247.46232605]
[3.95558333 249.25833130]
[18.49812317 253.02635193]
[16.13815689 238.31988525]
[28.51273918 228.46188354]
[34.17552567 214.57185364]
[39.83831406 200.68183899]
[35.43743515 189.41423035]
[40.04151917 177.79588318]
[51.68943405 172.25613403]
[57.55839539 158.45195007]
[63.42735672 144.64778137]
[61.28660965 129.90782166]
[73.80659485 120.23513794]
[62.43862534 130.02131653]
[49.30513763 137.26780701]
[34.96457291 141.66645813]
[20.02670097 143.03027344]
[5.12668657 141.30123901]
[-9.10191441 136.55288696]
[-22.05409431 128.98710632]
[-33.17911911 118.92559814]
[-42.00395203 106.79619598]
[-48.15334702 93.11464691]
[-51.36583710 78.46268463]
[-51.50482559 63.46332932]
[-48.56439590 48.75435638]
[-42.66958237 34.96120071]
[-34.07103348 22.67035103]
[-23.13436317 12.40442467]
[-10.32460499 4.59993124]
[3.81356263 -0.41127700]
[18.67897797 -2.41612148]
[33.63955688 -1.32935500]
[48.05916977 2.80281234]
[61.32468414 9.80467892]
[72.87204742 19.37852287]
[82.21025085 31.11725616]
[88.94223785 44.52174377]
[92.78176117 59.02202225]
[93.56555939 74.00153351]
[91.26030731 88.82333374]
[85.96394348 102.85735321]
[90.21636963 89.53787994]
[103.79066467 86.18673706]
[114.74657440 75.94134521]
[125.70248413 65.69595337]
[136.18998718 54.97157288]
[146.18815613 43.78960037]
[156.18632507 32.60762405]
[155.48554993 17.04656219]
[165.78440857 5.84887743]
[180.62382507 5.27668715]
[190.62199402 -5.90528727]
[193.96859741 -24.01279259]
[210.84086609 -28.83911705]
[220.67144775 -40.16870880]
[230.50202942 -51.49830246]
[229.56964111 -67.04720306]
[239.70065308 -78.39698792]
[254.52989197 -79.19004822]
[264.36047363 -90.51963806]
[274.19107056 -101.84923553]
[284.02163696 -113.17882538]
[293.85223389 -124.50842285]
[283.53192139 -135.41062927]
[274.32995605 -147.27192688]
[266.33489990 -159.97807312]
[259.62377930 -173.40669250]
[254.26124573 -187.42845154]
[250.29890442 -201.90832520]
[247.77494812 -216.70684814]
[246.71368408 -231.68151855]
[247.12530518 -246.68809509]
[249.00587463 -261.58206177]
[252.33726501 -276.21997070]
[257.08740234 -290.46087646]
[263.21054077 -304.16757202]
[270.64770508 -317.20812988]
[279.32723999 -329.45687866]
[289.16561890 -340.79589844]
[300.06802368 -351.11596680]
[311.92950439 -360.31771851]
[324.63580322 -368.31250000]
[338.06457520 -375.02334595]
[352.08642578 -380.38562012]
[366.56637573 -384.34765625]
[381.36495972 -386.87130737]
[396.33966064 -387.93231201]
[411.34622192 -387.52035522]
[426.24014282 -385.63949585]
[440.87799072 -382.30783081]
[455.11880493 -377.55740356]
[468.82537842 -371.43399048]
[481.86578369 -363.99658203]
[494.11434937 -355.31677246]
[505.45318604 -345.47817993]
[515.77307129 -334.57556152]
[524.97454834 -322.71389771]
[532.96911621 -310.00744629]
[539.67968750 -296.57855225]
[545.04162598 -282.55657959]
[549.00341797 -268.07653809]
[551.52673340 -253.27790833]
[552.58746338 -238.30320740]
[552.17523193 -223.29664612]
[550.29406738 -208.40275574]
[546.96209717 -193.76496887]
[542.21136475 -179.52426147]
[536.08770752 -165.81779480]
[528.65002441 -152.77755737]
[519.96997070 -140.52914429]
[510.13113403 -129.19052124]
[499.22830200 -118.87088013]
[487.36645508 -109.66960907]
[474.65985107 -101.67532349]
[461.23083496 -94.96501160]
[447.20874023 -89.60330963]
[432.72863770 -85.64185333]
[417.92993164 -83.11878204]
[402.95523071 -82.05840302]
[387.94866943 -82.47093201]
[373.05480957 -84.35239410]
[358.41708374 -87.68466949]
[344.17648315 -92.43565369]
[330.47015381 -98.55960846]
[317.43005371 -105.99755096]
[305.18182373 -114.67784119]
[295.35122681 -103.34824371]
[285.52066040 -92.01865387]
[275.69006348 -80.68906403]
[265.85949707 -69.35946655]
[267.16488647 -54.56651306]
[257.35668945 -42.93665314]
[241.83161926 -41.66772079]
[232.00103760 -30.33812904]
[222.17047119 -19.00853539]
[222.71218872 -6.92412043]
[214.61489868 2.59520483]
[201.80397034 4.09288454]
[191.80580139 15.27485943]
[192.89082336 30.08560944]
[182.91053772 41.56814957]
[167.36830139 42.60579681]
[157.37013245 53.78776932]
[147.37196350 64.96974945]
[162.36993408 65.21627808]
[172.89942932 75.89942932]
[172.92868042 90.89939880]
[162.44091797 101.62352753]
[147.44401550 101.92855072]
[136.52888489 91.63972473]
[135.94787598 76.65186310]
[124.99196625 86.89725494]
[114.03605652 97.14264679]
[109.78363037 110.46212006]
[96.20933533 113.81326294]
[87.61077118 126.10410309]
[89.33172607 141.83143616]
[77.23153687 150.51673889]
[71.36257172 164.32090759]
[65.49361420 178.12509155]
[68.15073395 196.34654236]
[53.72834015 206.34461975]
[48.06555176 220.23464966]
[42.40276718 234.12467957]
[44.35769272 249.82463074]
[32.38814926 258.68914795]
[45.41994095 266.16281128]
[57.33926773 275.30682373]
[67.93342590 285.95800781]
[77.01333618 297.92623901]
[84.41697693 310.99792480]
[90.01219940 324.93984985]
[93.69916534 339.50314331]
[95.41207123 354.42794800]
[95.12034607 369.44787598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 201]
[38 199]
[39 198]
[40 197]
[43 195]
[44 194]
[45 193]
[47 191]
[76 190]
[78 188]
[79 187]
[80 186]
[81 179]
[82 178]
[83 177]
[86 174]
[87 173]
[89 170]
[90 169]
[91 168]
[94 165]
[95 164]
[96 163]
[97 162]
[98 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
