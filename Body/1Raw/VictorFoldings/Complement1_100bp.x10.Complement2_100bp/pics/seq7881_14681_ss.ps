%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[183.45698547 384.75152588]
[196.16923523 376.66781616]
[191.13232422 362.53878784]
[186.09539795 348.40975952]
[181.05848694 334.28073120]
[176.02157593 320.15170288]
[165.23051453 314.68548584]
[160.91853333 302.95556641]
[165.90916443 291.06204224]
[161.08316040 276.85955811]
[156.25717163 262.65710449]
[151.43116760 248.45466614]
[140.01046753 238.89343262]
[142.89640808 223.33767700]
[138.07041931 209.13520813]
[133.24441528 194.93275452]
[128.41841125 180.73030090]
[123.59242249 166.52784729]
[117.82638550 152.68035889]
[111.14619446 139.24998474]
[104.46599579 125.81961060]
[97.78580475 112.38923645]
[90.80735016 99.11138916]
[83.53411865 85.99269104]
[71.37308502 81.69479370]
[65.58526611 70.61846924]
[68.79003906 58.95417023]
[61.71293640 45.72864151]
[54.63582993 32.50311279]
[47.55872726 19.27758598]
[37.98360443 7.73128414]
[26.29602432 -1.67086709]
[14.60844421 -11.07301807]
[-0.89499182 -9.56264114]
[-12.61392403 -19.26425362]
[-13.95829487 -34.05371857]
[-25.64587593 -43.45586777]
[-37.33345795 -52.85802078]
[-47.67435455 -41.98027420]
[-58.87821579 -31.99363136]
[-70.86850739 -22.96631432]
[-83.56331635 -14.95998764]
[-96.87593842 -8.02934361]
[-110.71541595 -2.22172832]
[-124.98721313 2.42318749]
[-139.59384155 5.87367344]
[-154.43553162 8.10615921]
[-169.41087341 9.10539341]
[-184.41758728 8.86455154]
[-199.35316467 7.38527775]
[-214.11555481 4.67767763]
[-228.60394287 0.76024675]
[-242.71934509 -4.34025431]
[-256.36532593 -10.58898258]
[-269.44869995 -17.94325447]
[-281.88003540 -26.35282898]
[-293.57446289 -35.76026154]
[-304.45208740 -46.10128784]
[-314.43859863 -57.30527115]
[-323.46578979 -69.29566956]
[-331.47195435 -81.99057770]
[-338.40243530 -95.30327606]
[-344.20989990 -109.14282227]
[-348.85464478 -123.41467285]
[-352.30496216 -138.02134705]
[-354.53726196 -152.86305237]
[-355.53631592 -167.83842468]
[-355.29528809 -182.84513855]
[-353.81582642 -197.78068542]
[-351.10806274 -212.54306030]
[-347.19046021 -227.03138733]
[-342.08978271 -241.14672852]
[-335.84091187 -254.79263306]
[-328.48648071 -267.87591553]
[-320.07675171 -280.30715942]
[-310.66918945 -292.00149536]
[-300.32803345 -302.87896729]
[-289.12393188 -312.86535645]
[-277.13342285 -321.89239502]
[-264.43841553 -329.89840698]
[-251.12562561 -336.82873535]
[-237.28601074 -342.63601685]
[-223.01409912 -347.28060913]
[-208.40739441 -350.73074341]
[-193.56565857 -352.96286011]
[-178.59028625 -353.96176147]
[-163.58357239 -353.72055054]
[-148.64804077 -352.24090576]
[-133.88569641 -349.53295898]
[-119.39740753 -345.61520386]
[-105.28213501 -340.51434326]
[-91.63629913 -334.26528931]
[-78.55311584 -326.91070557]
[-66.12196350 -318.50085449]
[-54.42775345 -309.09313965]
[-43.55037689 -298.75183105]
[-33.56413651 -287.54763794]
[-24.53724670 -275.55700684]
[-16.53137398 -262.86190796]
[-9.60120678 -249.54905701]
[-3.79408574 -235.70936584]
[0.85031986 -221.43739319]
[4.30028391 -206.83064270]
[6.53223848 -191.98887634]
[7.53093767 -177.01350403]
[7.28955936 -162.00679016]
[5.80975151 -147.07127380]
[3.10162330 -132.30897522]
[-0.81632531 -117.82072449]
[-5.91733074 -103.70551300]
[-12.16654778 -90.05975342]
[-19.52128601 -76.97665405]
[-27.93130684 -64.54560089]
[-16.24372482 -55.14345169]
[-4.55614376 -45.74129868]
[10.17798424 -47.59630966]
[22.16479111 -38.22768402]
[24.01059532 -22.76059914]
[35.69817734 -13.35844803]
[47.38575745 -3.95629716]
[41.05503845 -17.55489922]
[37.75224686 -32.18676758]
[37.62764359 -47.18625259]
[40.68689346 -61.87097168]
[46.79082108 -75.57286835]
[55.66173553 -87.66860962]
[66.89608002 -97.60790253]
[79.98274994 -104.93859100]
[94.32640839 -109.32716370]
[109.27449799 -110.57398224]
[124.14698792 -108.62231445]
[138.26728821 -103.56095886]
[150.99299622 -95.62016296]
[161.74519348 -85.16118622]
[170.03472900 -72.65984344]
[175.48448181 -58.68485641]
[177.84651184 -43.87199783]
[177.01338196 -28.89515305]
[173.02297974 -14.43566895]
[166.05685425 -1.15135419]
[156.43190002 10.35344219]
[144.58599854 19.55533028]
[131.05805969 26.03568268]
[116.46352386 29.49968910]
[101.46633148 29.78976059]
[86.74875641 26.89269829]
[72.98034668 20.94030190]
[60.78425217 12.20048046]
[67.86135864 25.42600822]
[74.93846130 38.65153503]
[82.01557159 51.87706375]
[97.39984894 60.32045746]
[96.65281677 78.71946716]
[103.92604065 91.83815765]
[107.44519043 93.41549683]
[110.25198364 96.53635406]
[111.67266083 100.84781647]
[111.21617889 105.70903778]
[117.89636993 119.13941956]
[124.57656860 132.56979370]
[131.25675964 146.00016785]
[134.36271667 131.32525635]
[144.83351135 120.58455658]
[159.42463684 117.10618591]
[173.61488342 121.96796417]
[183.00724792 133.66340637]
[184.69140625 148.56857300]
[178.14549255 162.06489563]
[165.39785767 169.97044373]
[150.39845276 169.83555603]
[137.79487610 161.70184326]
[142.62088013 175.90431213]
[147.44686890 190.10676575]
[152.27287292 204.30921936]
[157.09886169 218.51167297]
[168.86474609 229.08874512]
[165.63362122 243.62866211]
[170.45962524 257.83111572]
[175.28561401 272.03356934]
[180.11161804 286.23602295]
[194.23782349 298.04840088]
[190.15060425 315.11477661]
[195.18751526 329.24380493]
[200.22442627 343.37283325]
[205.26135254 357.50186157]
[210.29826355 371.63088989]
[225.25740051 369.84991455]
[240.23773193 371.44281006]
[254.48785400 376.32971191]
[267.29299927 384.26547241]
[278.01083374 394.85208130]
[286.10375977 407.55844116]
[291.16586304 421.74728394]
[292.94323730 436.70684814]
[291.34671021 451.68679810]
[286.45635986 465.93572998]
[278.51748657 478.73892212]
[267.92828369 489.45419312]
[255.21995544 497.54406738]
[241.02990723 502.60272217]
[226.06990051 504.37646484]
[211.09034729 502.77630615]
[196.84259033 497.88250732]
[184.04132080 489.94052124]
[173.32861328 479.34875488]
[165.24182129 466.63845825]
[160.18659973 452.44717407]
[158.41648865 437.48675537]
[160.02027893 422.50756836]
[164.91752625 408.26101685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[9 180]
[10 179]
[11 178]
[12 177]
[14 175]
[15 174]
[16 173]
[17 172]
[18 171]
[19 161]
[20 160]
[21 159]
[22 158]
[23 154]
[24 153]
[27 151]
[28 150]
[29 149]
[30 148]
[31 120]
[32 119]
[33 118]
[36 115]
[37 114]
[38 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
