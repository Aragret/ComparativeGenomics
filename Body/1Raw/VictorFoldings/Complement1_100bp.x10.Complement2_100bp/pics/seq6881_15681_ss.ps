%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[0.09633458 510.81076050]
[2.71264529 525.61126709]
[3.03889322 540.63769531]
[1.06743038 555.53784180]
[-3.15552926 569.96240234]
[-9.53099346 583.57318115]
[-17.90951157 596.05120850]
[-28.09468079 607.10394287]
[-39.84774399 616.47229004]
[-52.89319229 623.93664551]
[-66.92522430 629.32202148]
[-81.61490631 632.50219727]
[-96.61789703 633.40264893]
[-111.58249664 632.00225830]
[-126.15792084 628.33380127]
[-140.00248718 622.48327637]
[-152.79168701 614.58789062]
[-164.22569275 604.83270264]
[-174.03648376 593.44641113]
[-181.99409485 580.69580078]
[-187.91197205 566.87994385]
[-191.65139771 552.32257080]
[-193.12471008 537.36492920]
[-192.29739380 522.35772705]
[-189.18881226 507.65274048]
[-183.87184143 493.59463501]
[-176.47114563 480.51296997]
[-167.16017151 468.71438599]
[-156.15721130 458.47549438]
[-143.72016907 450.03628540]
[-130.14059448 443.59457397]
[-115.73680878 439.30136108]
[-100.84646606 437.25732422]
[-85.81861115 437.51034546]
[-71.00551605 440.05450439]
[-56.75443268 444.83016968]
[-49.87501907 431.50076294]
[-42.99560547 418.17132568]
[-36.31541061 404.74093628]
[-29.83591461 391.21258545]
[-23.35641861 377.68426514]
[-16.87692261 364.15591431]
[-10.59956264 350.53259277]
[-4.52572870 336.81732178]
[1.54810512 323.10205078]
[7.62193918 309.38677979]
[13.69577312 295.67153931]
[8.10756397 281.91262817]
[14.07191658 267.91687012]
[28.54141426 262.14871216]
[34.61524582 248.43345642]
[40.68908310 234.71818542]
[46.76291656 221.00292969]
[52.83675003 207.28765869]
[58.91058350 193.57238770]
[53.32237625 179.81349182]
[59.28672791 165.81773376]
[73.75622559 160.04959106]
[79.83005524 146.33432007]
[84.65605164 132.13186646]
[88.19572449 117.55549622]
[91.73539734 102.97911835]
[90.37599182 100.25120544]
[89.97910309 96.96836853]
[90.75219727 93.48616028]
[92.76846313 90.23178864]
[95.94402313 87.65326691]
[100.34502411 73.31342316]
[96.99720764 57.85047531]
[108.12817383 47.95345688]
[112.42229462 33.58124542]
[116.60930634 19.17746162]
[120.79631805 4.77367973]
[124.98332977 -9.63010216]
[127.53916168 -24.41075516]
[128.43197632 -39.38416290]
[129.32479858 -54.35756683]
[130.21760559 -69.33097076]
[116.59738159 -76.02164459]
[106.60332489 -87.38658905]
[101.73500061 -101.67340088]
[102.70478058 -116.69496155]
[109.33380890 -130.16421509]
[120.58399200 -140.04240417]
[134.72042847 -144.84767151]
[135.61323547 -159.82107544]
[136.50605774 -174.79447937]
[137.39888000 -189.76788330]
[125.58110809 -199.64952087]
[121.89111328 -214.42237854]
[127.54064178 -228.37037659]
[140.16885376 -236.22317505]
[141.06166077 -251.19657898]
[141.95448303 -266.16998291]
[142.84730530 -281.14337158]
[143.74011230 -296.11679077]
[144.52143860 -311.09643555]
[145.19122314 -326.08148193]
[131.09576416 -331.61291504]
[119.56170654 -341.42330933]
[111.84018707 -354.44854736]
[108.76876068 -369.27572632]
[110.68060303 -384.29650879]
[117.36833954 -397.88153076]
[128.10652161 -408.55722046]
[141.73034668 -415.16552734]
[156.76202393 -416.98965454]
[171.57101440 -413.83175659]
[184.55096436 -406.03433228]
[194.29388428 -394.44320679]
[199.74295044 -380.31570435]
[200.30708313 -365.18426514]
[195.92509460 -350.69021606]
[187.07231140 -338.40579224]
[174.70899963 -329.66354370]
[160.17625427 -325.41168213]
[159.50646973 -310.42663574]
[162.34817505 -303.60412598]
[158.71351624 -295.22396851]
[157.82070923 -280.25057983]
[156.92788696 -265.27716064]
[156.03507996 -250.30375671]
[155.14225769 -235.33035278]
[166.74783325 -226.03257751]
[170.69987488 -211.51206970]
[165.28054810 -197.28237915]
[152.37228394 -188.87507629]
[151.47946167 -173.90167236]
[150.58665466 -158.92826843]
[149.69383240 -143.95486450]
[163.15908813 -137.50379944]
[173.15571594 -126.35871887]
[178.13720703 -112.19716644]
[177.31509399 -97.16680908]
[170.78353882 -83.55973053]
[159.50979614 -73.46291351]
[145.19100952 -68.43815613]
[144.29820251 -53.46475220]
[143.40538025 -38.49134445]
[142.51257324 -23.51794052]
[150.69821167 -36.08755875]
[162.82902527 -44.91043091]
[177.30902100 -48.82575226]
[192.23309326 -47.31840134]
[205.63772583 -40.58668900]
[215.75930786 -29.51629448]
[221.26615906 -15.56371307]
[221.43377686 -0.56464928]
[216.24009705 13.50751209]
[206.36845398 24.80133629]
[193.11759949 31.83092690]
[178.23094177 33.67142105]
[163.66706848 30.08066750]
[151.34210205 21.53109360]
[142.87760925 9.14754391]
[139.38711548 -5.44309139]
[135.20010376 8.96069050]
[131.01309204 23.36447334]
[126.82608032 37.76825333]
[127.97755432 45.06865692]
[122.46801758 52.35445404]
[126.13061523 66.79171753]
[114.68486786 77.71442413]
[110.28387451 92.05426788]
[106.31177521 106.51879120]
[102.77210236 121.09516907]
[99.23242950 135.67153931]
[110.10672760 125.33956909]
[124.36027527 120.66662598]
[139.24093628 122.55498505]
[151.87548828 130.64004517]
[159.82440186 143.36068726]
[161.55285645 158.26075745]
[156.72712708 172.46331787]
[146.27897644 183.22602844]
[132.22578430 188.47080994]
[117.28099823 187.18498230]
[104.33022308 179.61679077]
[95.87405396 167.22755432]
[93.54532623 152.40815735]
[87.47148895 166.12342834]
[92.92488861 180.71446228]
[86.56977844 194.53717041]
[72.62584686 199.64622498]
[66.55201721 213.36149597]
[60.47818375 227.07676697]
[54.40434647 240.79202271]
[48.33051300 254.50729370]
[42.25667953 268.22256470]
[47.71007538 282.81359863]
[41.35496521 296.63629150]
[27.41103935 301.74536133]
[21.33720589 315.46063232]
[15.26337147 329.17590332]
[9.18953800 342.89117432]
[3.11570382 356.60641479]
[3.43903089 363.20999146]
[0.77831554 368.23168945]
[-3.34857798 370.63540649]
[-9.82807350 384.16375732]
[-16.30756950 397.69210815]
[-22.78706551 411.22042847]
[-22.66049385 417.83068848]
[-25.46954536 422.77096558]
[-29.66617584 425.05072021]
[-36.54558945 438.38015747]
[-43.42500305 451.70959473]
[-31.27640152 460.55899048]
[-20.62111282 471.15924072]
[-11.70891094 483.26184082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 207]
[37 206]
[38 205]
[39 202]
[40 201]
[41 200]
[42 199]
[43 196]
[44 195]
[45 194]
[46 193]
[47 192]
[50 189]
[51 188]
[52 187]
[53 186]
[54 185]
[55 184]
[58 181]
[59 180]
[60 167]
[61 166]
[62 165]
[67 164]
[68 163]
[70 161]
[71 159]
[72 158]
[73 157]
[74 156]
[75 140]
[76 139]
[77 138]
[78 137]
[85 130]
[86 129]
[87 128]
[88 127]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
