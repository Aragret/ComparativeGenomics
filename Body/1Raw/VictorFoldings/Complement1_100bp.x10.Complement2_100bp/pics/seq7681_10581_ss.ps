%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[-8.14582729 273.71664429]
[-6.62510204 288.64877319]
[-6.39365578 303.65637207]
[-7.45320225 318.62829590]
[-9.79589653 333.45373535]
[-13.40439415 348.02288818]
[-18.25197792 362.22787476]
[-24.30275917 375.96359253]
[-31.51193810 389.12829590]
[-39.82613754 401.62451172]
[-49.18380356 413.35974121]
[-59.51565552 424.24707031]
[-70.74519348 434.20593262]
[-82.78928375 443.16256714]
[-95.55874634 451.05068970]
[-108.95904541 457.81185913]
[-122.89096069 463.39602661]
[-137.25135803 467.76187134]
[-151.93389893 470.87704468]
[-166.82989502 472.71850586]
[-181.82904053 473.27261353]
[-196.82029724 472.53524780]
[-211.69265747 470.51190186]
[-226.33604431 467.21749878]
[-240.64199829 462.67648315]
[-254.50463867 456.92245483]
[-267.82131958 449.99801636]
[-280.49340820 441.95446777]
[-292.42715454 432.85128784]
[-303.53414917 422.75595093]
[-313.73214722 411.74313354]
[-322.94570923 399.89443970]
[-331.10656738 387.29754639]
[-338.15432739 374.04571533]
[-344.03680420 360.23709106]
[-348.71041870 345.97390747]
[-352.14059448 331.36172485]
[-354.30194092 316.50878906]
[-355.17843628 301.52502441]
[-354.76358032 286.52139282]
[-353.06048584 271.60894775]
[-350.08172607 256.89810181]
[-345.84939575 242.49780273]
[-340.39477539 228.51464844]
[-333.75830078 215.05216980]
[-325.98907471 202.21002197]
[-317.14462280 190.08331299]
[-307.29043579 178.76181030]
[-296.49945068 168.32934570]
[-284.85162354 158.86314392]
[-272.43310547 150.43328857]
[-259.33590698 143.10221863]
[-245.65696716 136.92419434]
[-231.49757385 131.94494629]
[-216.96253967 128.20137024]
[-202.15950012 125.72114563]
[-187.19804382 124.52265930]
[-172.18894958 124.61478424]
[-157.24333191 125.99682617]
[-142.47186279 128.65856934]
[-127.98387909 132.58027649]
[-113.88666534 137.73295593]
[-100.28459167 144.07843018]
[-87.27835846 151.56971741]
[-74.96427155 160.15135193]
[-63.43349075 169.75982666]
[-52.77139282 180.32395935]
[-43.05691910 191.76557922]
[-30.83043480 183.07574463]
[-24.93883324 169.39590454]
[-9.20794010 167.70782471]
[3.01854563 159.01800537]
[15.24503136 150.32818604]
[27.47151756 141.63835144]
[39.69800186 132.94853210]
[51.92448807 124.25870514]
[54.24972153 112.38774109]
[64.36469269 105.04804230]
[77.16722870 106.61575317]
[89.52173615 98.10893250]
[101.13899994 88.62003326]
[111.94116211 78.21265411]
[116.51093292 63.06578445]
[131.04473877 59.80725479]
[141.84689331 49.39988327]
[152.64904785 38.99251175]
[163.45120239 28.58513641]
[174.25335693 18.17776299]
[185.05551147 7.77039051]
[189.62528992 -7.37648106]
[204.15908813 -10.63501072]
[214.96124268 -21.04238319]
[205.40637207 -32.61507034]
[196.76541138 -44.88521957]
[189.08908081 -57.78083038]
[182.42243958 -71.22621918]
[176.80459595 -85.14249420]
[172.26852417 -99.44797516]
[168.84083557 -114.05871582]
[166.54165649 -128.88897705]
[165.38447571 -143.85171509]
[165.37608337 -158.85913086]
[166.51654053 -173.82316589]
[168.79913330 -188.65597534]
[172.21047974 -203.27055359]
[176.73054504 -217.58108521]
[182.33282471 -231.50363159]
[188.98443604 -244.95646667]
[196.64634705 -257.86065674]
[205.27357483 -270.14047241]
[214.81550598 -281.72381592]
[225.21614075 -292.54275513]
[236.41445923 -302.53378296]
[248.34471130 -311.63827515]
[260.93692017 -319.80279541]
[274.11715698 -326.97943115]
[287.80807495 -333.12603760]
[301.92938232 -338.20660400]
[316.39813232 -342.19125366]
[331.12948608 -345.05667114]
[346.03692627 -346.78594971]
[361.03302002 -347.36904907]
[376.02975464 -346.80245972]
[390.93908691 -345.08953857]
[405.67358398 -342.24032593]
[420.14669800 -338.27157593]
[434.27355957 -333.20654297]
[447.97125244 -327.07498169]
[461.15939331 -319.91284180]
[473.76055908 -311.76217651]
[485.70080566 -302.67080688]
[496.91009521 -292.69207764]
[507.32260132 -281.88458252]
[516.87725830 -270.31170654]
[525.51800537 -258.04138184]
[533.19409180 -245.14564514]
[539.86047363 -231.70011902]
[545.47802734 -217.78375244]
[550.01385498 -203.47817993]
[553.44128418 -188.86737061]
[555.74017334 -174.03707886]
[556.89703369 -159.07431030]
[556.90515137 -144.06687927]
[555.76440430 -129.10287476]
[553.48156738 -114.27010345]
[550.06994629 -99.65560150]
[545.54956055 -85.34514618]
[539.94702148 -71.42270660]
[533.29516602 -57.96999741]
[525.63299561 -45.06595612]
[517.00555420 -32.78631592]
[507.46340942 -21.20313644]
[497.06256104 -10.38439274]
[485.86407471 -0.39357573]
[473.93362427 8.71068382]
[461.34127808 16.87495995]
[448.16088867 24.05133629]
[434.46984863 30.19770432]
[420.34848022 35.27798843]
[405.87963867 39.26237869]
[391.14822388 42.12749481]
[376.24075317 43.85651779]
[361.24462891 44.43930435]
[346.24792480 43.87243271]
[331.33862305 42.15922928]
[316.60418701 39.30974960]
[302.13113403 35.34071732]
[288.00436401 30.27542114]
[274.30679321 24.14358711]
[261.11880493 16.98120117]
[248.51779175 8.83029366]
[236.57771301 -0.26129997]
[225.36862183 -10.24022675]
[214.56646729 0.16714606]
[210.76933289 14.56961250]
[195.46289062 18.57254601]
[184.66073608 28.97991943]
[173.85858154 39.38729477]
[163.05641174 49.79466629]
[152.25425720 60.20204163]
[141.45210266 70.60941315]
[137.65496826 85.01187897]
[122.34853363 89.01481628]
[111.54637909 99.42218781]
[126.33586121 96.91796875]
[140.62344360 101.48577881]
[151.21725464 112.10516357]
[155.75057983 126.40373230]
[153.21069336 141.18713379]
[144.16499329 153.15272522]
[130.63432312 159.62736511]
[115.64146423 159.16459656]
[102.53585815 151.86781311]
[94.24533844 139.36711121]
[92.62201691 124.45521545]
[98.02856445 110.46343994]
[85.67405701 118.97026825]
[78.14898682 135.77665710]
[60.61431122 136.48519897]
[48.38782883 145.17501831]
[36.16134262 153.86483765]
[23.93485641 162.55467224]
[11.70837021 171.24449158]
[-0.51811570 179.93431091]
[-7.28423738 194.23571777]
[-22.14060974 195.30223083]
[-34.36709595 203.99206543]
[-26.75539207 216.92819214]
[-20.28392792 230.47077942]
[-15.00061607 244.51954651]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 207]
[69 206]
[71 204]
[72 203]
[73 202]
[74 201]
[75 200]
[76 199]
[79 197]
[80 196]
[81 184]
[82 183]
[84 181]
[85 180]
[86 179]
[87 178]
[88 177]
[89 176]
[91 174]
[92 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
