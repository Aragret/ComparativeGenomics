%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[68.93624115 564.42633057]
[54.27331543 559.63024902]
[44.54874420 547.65380859]
[42.86560440 532.31854248]
[49.76097870 518.51788330]
[63.03458023 510.65563965]
[63.48118591 495.66229248]
[60.53823090 488.88284302]
[64.04770660 480.44949341]
[64.71749115 465.46444702]
[65.38727570 450.47943115]
[66.05706787 435.49438477]
[58.89578247 422.43432617]
[67.24157715 408.99340820]
[67.91136169 394.00836182]
[65.81458282 391.17361450]
[64.98667145 387.18240356]
[65.95619965 382.64221191]
[68.96047974 378.37356567]
[70.29871368 363.43338013]
[71.63694763 348.49319458]
[72.97518158 333.55300903]
[60.11485291 325.99804688]
[51.77576447 313.55743408]
[49.65641403 298.66885376]
[54.23019409 284.27786255]
[64.64096832 273.25503540]
[78.86275482 267.82345581]
[80.20099640 252.88327026]
[81.53923035 237.94308472]
[82.87746429 223.00289917]
[84.21569824 208.06271362]
[75.98493958 192.56362915]
[86.70298767 177.59016418]
[87.81864166 162.63169861]
[88.93428802 147.67324829]
[82.16503143 134.40576172]
[90.90731049 121.21928406]
[92.02295685 106.26082611]
[89.43434906 98.62724304]
[93.26820374 91.08850861]
[94.60643768 76.14832306]
[95.94467163 61.20813751]
[97.28290558 46.26795578]
[87.42504120 34.20726013]
[88.99503326 19.07485199]
[100.55381012 9.75121403]
[101.89204407 -5.18897104]
[103.23027802 -20.12915611]
[96.75502014 -34.56458664]
[105.59693909 -46.55081940]
[106.93517303 -61.49100113]
[108.27340698 -76.43119049]
[101.79814911 -90.86661530]
[110.64006805 -102.85285187]
[111.97830200 -117.79303741]
[113.31653595 -132.73321533]
[114.65476990 -147.67340088]
[106.25457001 -135.24615479]
[94.15133667 -126.38546753]
[79.76695251 -122.13228607]
[64.79128265 -122.98626709]
[50.98365402 -128.84709167]
[39.96616745 -139.02624512]
[33.03314590 -152.32786560]
[30.99908257 -167.18931580]
[34.10292816 -181.86466980]
[41.98005295 -194.62989807]
[53.70505524 -203.98533630]
[67.90049744 -208.83193970]
[82.89870453 -208.60031128]
[96.93771362 -203.31767273]
[108.36823273 -193.60462952]
[115.84741211 -180.60224915]
[118.49661255 -165.83647156]
[123.32260895 -180.03892517]
[128.14860535 -194.24137878]
[132.97460938 -208.44383240]
[137.37561035 -222.78369141]
[141.34770203 -237.24821472]
[145.31979370 -251.71273804]
[132.32678223 -244.21730042]
[117.53421021 -246.70329285]
[107.70507050 -258.03414917]
[107.33309937 -273.02951050]
[116.58836365 -284.83377075]
[131.23947144 -288.05014038]
[144.58813477 -281.20812988]
[150.53166199 -267.43399048]
[155.98701477 -281.40676880]
[161.44236755 -295.37957764]
[166.89772034 -309.35238647]
[172.35308838 -323.32516479]
[177.80844116 -337.29797363]
[183.26379395 -351.27078247]
[188.71916199 -365.24356079]
[186.53070068 -380.91268921]
[198.36692810 -389.95440674]
[185.36361694 -397.49191284]
[173.66334534 -406.92611694]
[163.54040527 -418.03588867]
[155.23210144 -430.56076050]
[148.93318176 -444.20715332]
[144.79129028 -458.65515137]
[142.90354919 -473.56613159]
[143.31417847 -488.59048462]
[146.01356506 -503.37609863]
[150.93843079 -517.57629395]
[157.97334290 -530.85827637]
[166.95336914 -542.91064453]
[177.66802979 -553.45086670]
[189.86613464 -562.23193359]
[203.26174927 -569.04791260]
[217.54087830 -573.73907471]
[232.36877441 -576.19543457]
[247.39785767 -576.35949707]
[262.27584839 -574.22729492]
[276.65393066 -569.84887695]
[290.19512939 -563.32684326]
[302.58197021 -554.81414795]
[313.52410889 -544.51025391]
[322.76504517 -532.65673828]
[330.08813477 -519.53143311]
[335.32174683 -505.44210815]
[338.34317017 -490.71896362]
[339.08160400 -475.70712280]
[337.51974487 -460.75851440]
[333.69415283 -446.22354126]
[327.69454956 -432.44293213]
[319.66159058 -419.73971558]
[309.78350830 -408.41168213]
[298.29193115 -398.72436523]
[285.45620728 -390.90487671]
[271.57723999 -385.13647461]
[256.98034668 -381.55441284]
[242.00772095 -380.24264526]
[227.01033020 -381.23190308]
[212.33973694 -384.49905396]
[214.91839600 -369.82937622]
[202.69195557 -359.78820801]
[197.23660278 -345.81539917]
[191.78123474 -331.84262085]
[186.32588196 -317.86981201]
[180.87052917 -303.89703369]
[175.41516113 -289.92422485]
[169.95980835 -275.95141602]
[164.50445557 -261.97863770]
[159.78431702 -247.74063110]
[155.81222534 -233.27610779]
[151.84013367 -218.81158447]
[153.10783386 -216.31138611]
[153.46157837 -213.15837097]
[152.64772034 -209.69816589]
[150.54235840 -206.36169434]
[147.17706299 -203.61784363]
[142.35105896 -189.41539001]
[137.52507019 -175.21292114]
[132.69906616 -161.01046753]
[129.59495544 -146.33517456]
[128.25672913 -131.39498901]
[126.91848755 -116.45480347]
[125.58025360 -101.51461792]
[132.15122986 -88.14780426]
[123.21359253 -75.09295654]
[121.87535858 -60.15276718]
[120.53712463 -45.21258545]
[127.10810089 -31.84577560]
[118.17046356 -18.79092216]
[116.83222961 -3.85073686]
[115.49399567 11.08944798]
[125.21177673 22.31888771]
[124.06744385 37.48942184]
[112.22309113 47.60618973]
[110.88484955 62.54637146]
[109.54661560 77.48655701]
[108.20838165 92.42674255]
[106.98140717 107.37648010]
[105.86576080 122.33493042]
[112.55522156 136.67234802]
[103.89273834 148.78889465]
[102.77709198 163.74736023]
[101.66144562 178.70581055]
[109.47143555 188.97064209]
[108.23426056 201.40660095]
[99.15588379 209.40095520]
[97.81764984 224.34114075]
[96.47940826 239.28132629]
[95.14117432 254.22151184]
[93.80294037 269.16168213]
[106.83303833 277.03430176]
[115.11911011 289.73184204]
[117.06252289 304.70660400]
[112.33091736 318.98150635]
[101.91363525 329.74206543]
[87.91536713 334.89123535]
[86.57713318 349.83142090]
[85.23889160 364.77160645]
[83.90065765 379.71179199]
[82.89640045 394.67813110]
[82.22661591 409.66317749]
[89.33998871 423.79507446]
[81.04210663 436.16415405]
[80.37231445 451.14920044]
[79.70252991 466.13424683]
[79.03274536 481.11929321]
[78.47454071 496.10888672]
[78.02793121 511.10223389]
[90.81002808 519.74060059]
[96.87174988 533.92718506]
[94.27882385 549.13507080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 207]
[7 206]
[9 205]
[10 204]
[11 203]
[12 202]
[14 200]
[15 199]
[19 198]
[20 197]
[21 196]
[22 195]
[28 189]
[29 188]
[30 187]
[31 186]
[32 185]
[34 182]
[35 181]
[36 180]
[38 178]
[39 177]
[41 176]
[42 175]
[43 174]
[44 173]
[47 170]
[48 169]
[49 168]
[51 166]
[52 165]
[53 164]
[55 162]
[56 161]
[57 160]
[58 159]
[75 158]
[76 157]
[77 156]
[78 155]
[79 150]
[80 149]
[81 148]
[89 147]
[90 146]
[91 145]
[92 144]
[93 143]
[94 142]
[95 141]
[96 140]
[98 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
