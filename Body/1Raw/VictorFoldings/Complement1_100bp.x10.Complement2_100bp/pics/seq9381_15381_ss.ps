%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[83.24151611 578.71374512]
[78.62147522 564.42004395]
[75.90672302 549.64556885]
[75.14371490 534.64312744]
[76.34549713 519.66949463]
[79.49151611 504.98077393]
[84.52793121 490.82843018]
[91.36856842 477.45452881]
[99.89637756 465.08798218]
[109.96543121 453.94036865]
[121.40343475 444.20245361]
[134.01466370 436.04086304]
[147.58334351 429.59524536]
[142.96932983 415.32250977]
[138.35533142 401.04977417]
[133.74131775 386.77703857]
[129.12730408 372.50430298]
[124.19571686 358.33816528]
[118.94899750 344.28570557]
[113.70227814 330.23321533]
[105.19569397 342.58789062]
[90.24414062 343.79251099]
[79.86934662 332.95904541]
[81.71922302 318.07354736]
[94.43011475 310.10906982]
[108.63082886 314.93551636]
[97.64846039 304.87387085]
[101.22612000 289.46249390]
[97.03910828 275.05871582]
[92.85209656 260.65493774]
[88.66508484 246.25114441]
[84.47807312 231.84736633]
[81.85844421 246.61683655]
[75.94702148 260.40289307]
[67.05390167 272.48229980]
[55.64561081 282.22143555]
[42.32059479 289.10940552]
[27.77786064 292.78485107]
[12.78029442 293.05499268]
[-1.88536572 289.90563965]
[-15.44978714 283.50201416]
[-27.20140648 274.18002319]
[-36.52375793 262.42868042]
[-42.92781067 248.86447144]
[-46.07762146 234.19891357]
[-45.80795288 219.20133972]
[-42.13295746 204.65849304]
[-35.24541092 191.33325195]
[-25.50662804 179.92465210]
[-13.42748165 171.03117371]
[0.35838076 165.11930847]
[15.12777901 162.49922180]
[30.10594177 163.30834961]
[44.50714111 167.50422668]
[57.57592392 174.86676025]
[68.62672424 185.00973511]
[77.07983398 197.40104675]
[82.49224854 211.39230347]
[83.83049011 196.45211792]
[85.16872406 181.51193237]
[86.50695801 166.57174683]
[87.84519196 151.63156128]
[89.18342590 136.69137573]
[90.52165985 121.75119781]
[91.85989380 106.81101227]
[92.30649567 91.81766510]
[91.85989380 76.82431030]
[83.71514130 63.26062775]
[91.07006836 50.30862808]
[90.62346649 35.31527710]
[90.17685699 20.32192802]
[74.97444153 15.95074844]
[61.88299561 7.10652733]
[52.17731094 -5.33502626]
[46.79800415 -20.14862442]
[46.26036453 -35.88007355]
[50.60502243 -50.98900986]
[59.39513016 -63.99975204]
[71.76027679 -73.64540100]
[86.48265839 -78.99121857]
[85.81287384 -93.97625732]
[85.14308929 -108.96129608]
[84.47330475 -123.94633484]
[82.00768280 -127.52050018]
[80.91732025 -131.31202698]
[81.10167694 -134.86187744]
[82.32146454 -137.79081726]
[84.23667908 -139.83778381]
[76.70570374 -153.75163269]
[84.63163757 -166.36228943]
[84.85496521 -181.36062622]
[85.07829285 -196.35896301]
[85.30162048 -211.35729980]
[85.52494812 -226.35563660]
[85.74827576 -241.35397339]
[71.27046204 -245.63131714]
[58.48415756 -253.65708923]
[48.33818436 -264.83572388]
[41.58543777 -278.33767700]
[38.72702026 -293.16104126]
[39.97504425 -308.20581055]
[45.23689651 -322.35556030]
[54.12211609 -334.56030273]
[65.97135925 -343.91433716]
[79.90533447 -349.72354126]
[94.89004517 -351.55685425]
[109.81352997 -349.27819824]
[123.56835938 -343.05670166]
[135.13385010 -333.35400391]
[143.65174866 -320.89013672]
[148.48997498 -306.58999634]
[149.28950500 -291.51473999]
[145.99101257 -276.78305054]
[138.83924866 -263.48812866]
[128.36494446 -252.61654663]
[115.34535217 -244.97503662]
[100.74661255 -241.13064575]
[100.52328491 -226.13230896]
[100.29995728 -211.13397217]
[100.07662964 -196.13563538]
[99.85330200 -181.13729858]
[99.62997437 -166.13896179]
[107.17692566 -153.29791260]
[99.23501587 -139.61445618]
[99.45834351 -124.61612701]
[100.12812805 -109.63108826]
[100.79791260 -94.64604950]
[101.46770477 -79.66101074]
[115.29709625 -76.20648956]
[127.60588074 -68.98610687]
[137.39144897 -58.57759476]
[143.85380554 -45.81877136]
[146.46095276 -31.74013710]
[144.99266052 -17.48161697]
[139.55905151 -4.20028210]
[130.59242249 7.02355289]
[118.81280518 15.27420521]
[105.17021179 19.87532234]
[105.61681366 34.86867142]
[106.06342316 49.86202240]
[114.17623138 62.35328293]
[106.85324097 76.37770844]
[107.29985046 91.37105560]
[116.83433533 79.79118347]
[131.32501221 75.91557312]
[145.36720276 81.18972778]
[153.72352600 93.64653015]
[153.27728271 108.63989258]
[144.19490051 120.57765961]
[129.86389160 125.00734711]
[115.62935638 120.27677917]
[106.80007935 108.14924622]
[105.46184540 123.08943176]
[104.12361145 138.02961731]
[102.78537750 152.96980286]
[101.44714355 167.90998840]
[100.10890198 182.85017395]
[98.77066803 197.79035950]
[97.43243408 212.73054504]
[98.88185883 227.66035461]
[103.06887054 242.06413269]
[107.25587463 256.46792603]
[111.44288635 270.87170410]
[115.62989807 285.27548218]
[126.91175842 296.36737061]
[123.03461456 310.74850464]
[127.75474548 324.98651123]
[133.00146484 339.03897095]
[138.24818420 353.09143066]
[142.27557373 356.41217041]
[144.41276550 360.53353882]
[144.67131042 364.60147095]
[143.40003967 367.89028931]
[148.01405334 382.16302490]
[152.62806702 396.43576050]
[157.24206543 410.70849609]
[161.85607910 424.98123169]
[176.63017273 422.26437378]
[191.63249207 421.49920654]
[206.60632324 422.69885254]
[221.29545593 425.84277344]
[235.44854736 430.87716675]
[248.82341003 437.71591187]
[261.19116211 446.24194336]
[272.34020996 456.30938721]
[282.07977295 467.74600220]
[290.24316406 480.35607910]
[296.69073486 493.92382812]
[301.31213379 508.21710205]
[304.02828979 522.99133301]
[304.79272461 537.99365234]
[303.59237671 552.96746826]
[300.44775391 567.65643311]
[295.41268921 581.80932617]
[288.57333374 595.18383789]
[280.04669189 607.55120850]
[269.97869873 618.69976807]
[258.54162598 628.43878174]
[245.93116760 636.60156250]
[232.36311340 643.04846191]
[218.06961060 647.66918945]
[203.29527283 650.38464355]
[188.29287720 651.14837646]
[173.31915283 649.94732666]
[158.63031006 646.80200195]
[144.47770691 641.76623535]
[131.10350037 634.92626953]
[118.73654175 626.39904785]
[107.58845520 616.33050537]
[97.84999084 604.89294434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 169]
[19 168]
[20 167]
[26 166]
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[58 159]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[65 152]
[66 143]
[67 142]
[69 140]
[70 139]
[71 138]
[80 128]
[81 127]
[82 126]
[83 125]
[88 124]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
