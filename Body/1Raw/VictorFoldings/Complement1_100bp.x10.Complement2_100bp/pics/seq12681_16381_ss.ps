%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[-61.73258591 322.45281982]
[-54.42324829 335.57641602]
[-48.88946533 349.54180908]
[-45.22593689 364.11004639]
[-43.49534225 379.03182983]
[-43.72730255 394.05187988]
[-45.91783905 408.91311646]
[-50.02947998 423.36126709]
[-55.99185944 437.14913940]
[-63.70295715 450.04077148]
[-73.03083038 461.81555176]
[-83.81585693 472.27203369]
[-95.87350464 481.23129272]
[-108.99744415 488.54000854]
[-122.96309662 494.07312012]
[-137.53150940 497.73596191]
[-152.45339966 499.46585083]
[-167.47340393 499.23318481]
[-182.33454895 497.04193115]
[-196.78251648 492.92959595]
[-210.57008362 486.96655273]
[-223.46134949 479.25485229]
[-235.23570251 469.92642212]
[-245.69168091 459.14089966]
[-254.65036011 447.08282471]
[-261.95843506 433.95852661]
[-267.49090576 419.99261475]
[-271.15304565 405.42404175]
[-272.88220215 390.50207520]
[-272.64883423 375.48205566]
[-270.45687866 360.62103271]
[-266.34387207 346.17324829]
[-260.38015747 332.38595581]
[-252.66783142 319.49508667]
[-243.33885193 307.72116089]
[-232.55282593 297.26571655]
[-220.49432373 288.30758667]
[-207.36968994 281.00012207]
[-193.40350342 275.46835327]
[-178.83474731 271.80688477]
[-163.91270447 270.07843018]
[-148.89270020 270.31253052]
[-134.03176880 272.50518799]
[-119.58419800 276.61889648]
[-105.79718781 282.58325195]
[-92.90666962 290.29617310]
[-83.59178162 278.53894043]
[-74.27690125 266.78167725]
[-64.96202087 255.02442932]
[-63.12310791 240.24378967]
[-48.48868179 234.23178101]
[-39.17380142 222.47453308]
[-29.85891724 210.71726990]
[-20.54403496 198.96002197]
[-18.85426331 191.76513672]
[-11.00189590 187.09843445]
[-25.27237701 191.71940613]
[-40.14605713 189.77682495]
[-52.75106430 181.64578247]
[-60.65356827 168.89625549]
[-62.32772064 153.98997498]
[-57.45026398 139.80511475]
[-46.96296310 129.08053589]
[-32.89075089 123.88700104]
[-17.95075035 125.22728729]
[-5.02764130 132.84262085]
[3.38332582 145.26258850]
[5.65812492 160.08909607]
[1.35690308 174.46047974]
[12.75936604 164.71452332]
[24.16182899 154.96855164]
[35.56428909 145.22257996]
[40.21194077 131.07167053]
[55.72950363 127.98688507]
[67.13196564 118.24092102]
[78.53443146 108.49494934]
[89.93688965 98.74898529]
[93.53111267 91.53413391]
[101.58243561 88.94433594]
[113.12873840 79.36921692]
[118.81243134 64.60417938]
[133.54832458 62.43565369]
[145.09463501 52.86053467]
[156.64093018 43.28541183]
[158.25625610 27.79256058]
[170.10224915 18.24650955]
[184.86235046 19.88194466]
[196.40866089 10.30682468]
[207.95495605 0.73170525]
[210.60633850 -5.32483959]
[215.22503662 -8.63613415]
[219.99057007 -8.95041370]
[231.81683350 -18.17751312]
[243.64309692 -27.40460968]
[248.48400879 -35.15080261]
[255.71482849 -36.67948151]
[267.67718506 -45.72948074]
[279.63949585 -54.77947998]
[291.60183716 -63.82947922]
[283.56567383 -76.50541687]
[276.60372925 -89.80168915]
[270.76358032 -103.62746429]
[266.08508301 -117.88829803]
[262.60025024 -132.48677063]
[260.33285522 -147.32316589]
[259.29837036 -162.29611206]
[259.50390625 -177.30335999]
[260.94802856 -192.24237061]
[263.62091064 -207.01109314]
[267.50424194 -221.50865173]
[272.57150269 -235.63601685]
[278.78811646 -249.29666138]
[286.11157227 -262.39727783]
[294.49188232 -274.84838867]
[303.87176514 -286.56494141]
[314.18719482 -297.46685791]
[325.36764526 -307.47970581]
[337.33676147 -316.53506470]
[350.01278687 -324.57107544]
[363.30914307 -331.53286743]
[377.13500977 -337.37286377]
[391.39587402 -342.05117798]
[405.99441528 -345.53582764]
[420.83081055 -347.80307007]
[435.80377197 -348.83734131]
[450.81103516 -348.63162231]
[465.75003052 -347.18731689]
[480.51870728 -344.51428223]
[495.01623535 -340.63079834]
[509.14352417 -335.56335449]
[522.80407715 -329.34658813]
[535.90466309 -322.02294922]
[548.35565186 -313.64248657]
[560.07208252 -304.26248169]
[570.97387695 -293.94692993]
[580.98657227 -282.76635742]
[590.04180908 -270.79711914]
[598.07763672 -258.12100220]
[605.03930664 -244.82455444]
[610.87915039 -230.99864197]
[615.55725098 -216.73770142]
[619.04174805 -202.13914490]
[621.30877686 -187.30270386]
[622.34289551 -172.32971191]
[622.13702393 -157.32247925]
[620.69256592 -142.38349915]
[618.01934814 -127.61483765]
[614.13562012 -113.11737061]
[609.06805420 -98.99013519]
[602.85113525 -85.32963562]
[595.52734375 -72.22918701]
[587.14672852 -59.77827835]
[577.76654053 -48.06196594]
[567.45086670 -37.16028976]
[556.27020264 -27.14771461]
[544.30084229 -18.09263992]
[531.62463379 -10.05692005]
[518.32812500 -3.09544945]
[504.50210571 2.74421716]
[490.24111938 7.42218876]
[475.64251709 10.90650940]
[460.80606079 13.17337799]
[445.83306885 14.20730782]
[430.82583618 14.00123787]
[415.88687134 12.55657387]
[401.11822510 9.88318634]
[386.62081909 5.99933577]
[372.49362183 0.93155462]
[358.83322144 -5.28553915]
[345.73284912 -12.60947609]
[333.28204346 -20.99022484]
[321.56582642 -30.37053680]
[310.66427612 -40.68633270]
[300.65185547 -51.86714172]
[288.68951416 -42.81714249]
[276.72717285 -33.76714325]
[264.76483154 -24.71714401]
[252.87020874 -15.57834053]
[241.04393005 -6.35124254]
[229.21766663 2.87585568]
[217.53007507 12.27800655]
[205.98377991 21.85312653]
[194.43748474 31.42824554]
[193.31344604 46.23608780]
[181.74026489 56.11110306]
[166.21604919 54.83171463]
[154.66975403 64.40683746]
[143.12344360 73.98195648]
[138.26562500 88.06211090]
[122.70385742 90.91551971]
[111.15755463 100.49063873]
[99.68285370 110.15145111]
[88.28039551 119.89741516]
[76.87792969 129.64338684]
[65.47547150 139.38934326]
[60.01223755 154.23736572]
[45.31025696 156.62504578]
[33.90779495 166.37101746]
[22.50533104 176.11697388]
[11.10286903 185.86294556]
[0.61536765 196.58732605]
[-8.78678322 208.27490234]
[-18.10166550 220.03216553]
[-27.41654968 231.78941345]
[-36.73143005 243.54666138]
[-39.23660660 259.16827393]
[-53.20476913 264.33932495]
[-62.51964951 276.09655762]
[-71.83453369 287.85382080]
[-81.14941406 299.61108398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 210]
[47 209]
[48 208]
[49 207]
[51 205]
[52 204]
[53 203]
[54 202]
[56 201]
[69 200]
[70 199]
[71 198]
[72 197]
[74 195]
[75 194]
[76 193]
[77 192]
[79 191]
[80 190]
[82 188]
[83 187]
[84 186]
[87 183]
[88 182]
[89 181]
[92 180]
[93 179]
[94 178]
[96 177]
[97 176]
[98 175]
[99 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
