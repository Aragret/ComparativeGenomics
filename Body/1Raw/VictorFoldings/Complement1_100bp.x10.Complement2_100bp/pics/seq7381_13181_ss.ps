%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[100.90968323 960.00708008]
[85.94346619 958.97454834]
[71.02703094 957.37634277]
[56.18176651 955.21484375]
[41.42892456 952.49316406]
[26.78964424 949.21508789]
[12.28489494 945.38543701]
[-2.06454611 941.00964355]
[-16.23812294 936.09399414]
[-30.21553040 930.64550781]
[-43.97674942 924.67199707]
[-57.50206375 918.18200684]
[-70.77210236 911.18481445]
[-83.76784515 903.69055176]
[-96.47069550 895.70983887]
[-108.86243439 887.25415039]
[-120.92533112 878.33557129]
[-132.64208984 868.96691895]
[-143.99594116 859.16162109]
[-154.97059631 848.93365479]
[-165.55036926 838.29772949]
[-175.72007751 827.26910400]
[-185.46514893 815.86352539]
[-194.77165222 804.09735107]
[-203.62623596 791.98742676]
[-212.01622009 779.55108643]
[-219.92958069 766.80615234]
[-227.35499573 753.77093506]
[-234.28181458 740.46405029]
[-240.70011902 726.90454102]
[-246.60070801 713.11193848]
[-251.97514343 699.10589600]
[-256.81573486 684.90649414]
[-261.11550903 670.53405762]
[-264.86831665 656.00927734]
[-268.06881714 641.35284424]
[-270.71243286 626.58581543]
[-272.79531860 611.72930908]
[-274.31451416 596.80462646]
[-275.26785278 581.83312988]
[-275.65396118 566.83630371]
[-275.47229004 551.83557129]
[-274.72311401 536.85253906]
[-273.40750122 521.90850830]
[-271.52731323 507.02499390]
[-269.08523560 492.22329712]
[-266.08480835 477.52459717]
[-262.53030396 462.94998169]
[-258.42684937 448.52032471]
[-253.78025818 434.25625610]
[-248.59722900 420.17825317]
[-242.88519287 406.30645752]
[-236.65229797 392.66076660]
[-229.90751648 379.26068115]
[-222.66047668 366.12545776]
[-214.92156982 353.27386475]
[-206.70187378 340.72433472]
[-198.01318359 328.49484253]
[-188.86791992 316.60287476]
[-179.27922058 305.06552124]
[-169.26077271 293.89929199]
[-158.82696533 283.12014771]
[-147.99273682 272.74356079]
[-136.77360535 262.78439331]
[-125.18563080 253.25691223]
[-113.24542236 244.17475891]
[-100.97008514 235.55094910]
[-88.37720490 227.39782715]
[-75.48481750 219.72708130]
[-62.31138611 212.54969788]
[-48.87578964 205.87596130]
[-35.19727325 199.71542358]
[-21.29543114 194.07691956]
[-7.19017410 188.96850586]
[7.09828854 184.39753723]
[21.54948997 180.37051392]
[36.14273071 176.89324951]
[50.85710144 173.97070312]
[65.67153168 171.60705566]
[80.56478882 169.80570984]
[95.51554871 168.56922913]
[94.84576416 153.58419800]
[94.17597198 138.59915161]
[93.50618744 123.61411285]
[92.83640289 108.62907410]
[82.77893829 119.75775146]
[67.93889618 121.94249725]
[55.10094452 114.18447113]
[50.13441467 100.03054810]
[55.30994797 85.95169830]
[68.26135254 78.38459778]
[83.06742096 80.78881073]
[92.95970154 92.06688690]
[93.85252380 77.09348297]
[85.23102570 60.82229996]
[95.45868683 46.56179810]
[96.12847137 31.57676125]
[96.79825592 16.59172249]
[97.46804047 1.60668290]
[83.56235504 -4.47578096]
[72.79568481 -15.17359734]
[66.62413788 -29.03997421]
[65.88235474 -44.19959641]
[70.67066956 -58.60225296]
[80.34149170 -70.30010223]
[93.58692169 -77.71110535]
[108.61563110 -79.83298492]
[123.39510345 -76.37876892]
[135.92654419 -67.81562042]
[144.51516724 -55.30163193]
[147.99945068 -40.52921677]
[145.90814209 -25.49622154]
[138.52410889 -12.23573875]
[126.84596252 -2.54113650]
[112.45307922 2.27646804]
[111.78329468 17.26150703]
[111.11351013 32.24654388]
[110.44372559 47.23158264]
[118.37266541 56.36714554]
[117.93729401 68.85691071]
[108.82592773 77.98629761]
[107.93311310 92.95970154]
[107.82144165 107.95928955]
[108.49122620 122.94432831]
[109.16101074 137.92936707]
[109.83080292 152.91439819]
[110.50058746 167.89944458]
[125.50203705 167.79714966]
[140.49661255 168.26260376]
[155.46284485 169.29515076]
[170.37927246 170.89329529]
[185.22454834 173.05474854]
[199.97740173 175.77642822]
[214.61668396 179.05442810]
[229.12144470 182.88404846]
[243.47088623 187.25981140]
[257.64447021 192.17544556]
[271.62188721 197.62391663]
[285.38311768 203.59739685]
[298.90844727 210.08735657]
[312.17852783 217.08448792]
[325.17428589 224.57875061]
[337.87713623 232.55943298]
[350.26889038 241.01510620]
[362.33181763 249.93362427]
[374.04861450 259.30224609]
[385.40246582 269.10754395]
[396.37716675 279.33544922]
[406.95693970 289.97134399]
[417.12667847 300.99996948]
[426.87179565 312.40554810]
[436.17831421 324.17169189]
[445.03292847 336.28161621]
[453.42294312 348.71792603]
[461.33633423 361.46279907]
[468.76174927 374.49801636]
[475.68859863 387.80490112]
[482.10693359 401.36434937]
[488.00756836 415.15698242]
[493.38204956 429.16302490]
[498.22265625 443.36242676]
[502.52246094 457.73480225]
[506.27532959 472.25961304]
[509.47586060 486.91604614]
[512.11950684 501.68307495]
[514.20239258 516.53955078]
[515.72161865 531.46423340]
[516.67498779 546.43572998]
[517.06115723 561.43255615]
[516.87951660 576.43322754]
[516.13037109 591.41632080]
[514.81475830 606.36035156]
[512.93463135 621.24383545]
[510.49261475 636.04559326]
[507.49221802 650.74426270]
[503.93774414 665.31890869]
[499.83428955 679.74859619]
[495.18774414 694.01263428]
[490.00476074 708.09063721]
[484.29275513 721.96246338]
[478.05990601 735.60815430]
[471.31512451 749.00823975]
[464.06811523 762.14349365]
[456.32925415 774.99511719]
[448.10958862 787.54467773]
[439.42092896 799.77416992]
[430.27569580 811.66613770]
[420.68701172 823.20355225]
[410.66860962 834.36981201]
[400.23480225 845.14898682]
[389.40060425 855.52557373]
[378.18148804 865.48474121]
[366.59353638 875.01226807]
[354.65335083 884.09448242]
[342.37802124 892.71832275]
[329.78515625 900.87145996]
[316.89279175 908.54223633]
[303.71939087 915.71960449]
[290.28381348 922.39337158]
[276.60531616 928.55395508]
[262.70346069 934.19250488]
[248.59823608 939.30096436]
[234.30978394 943.87194824]
[219.85858154 947.89898682]
[205.26535034 951.37628174]
[190.55099487 954.29888916]
[175.73657227 956.66259766]
[160.84330750 958.46392822]
[145.89256287 959.70043945]
[130.90571594 960.37030029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[93 122]
[94 121]
[96 118]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
