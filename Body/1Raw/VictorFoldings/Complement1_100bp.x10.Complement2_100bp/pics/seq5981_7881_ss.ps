%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[37.95710373 585.47308350]
[45.05181885 598.78155518]
[48.61315536 613.43652344]
[48.41724396 628.51672363]
[44.47639847 643.07421875]
[37.03834534 656.19390869]
[26.57064438 667.05102539]
[13.73130703 674.96319580]
[-0.67257649 679.43298340]
[-15.73556614 680.17944336]
[-30.51078987 677.15557861]
[-44.06946182 670.55157471]
[-55.55928040 660.78247070]
[-64.25797272 648.46240234]
[-69.61874390 634.36584473]
[-71.30461121 619.37890625]
[-69.20958710 604.44366455]
[-63.46538162 590.49896240]
[-54.43307114 578.42138672]
[-42.68043518 568.97009277]
[-28.94625664 562.73925781]
[-14.09387684 560.12060547]
[0.94307131 561.27862549]
[5.76906872 547.07617188]
[10.59506702 532.87371826]
[7.36394119 518.33380127]
[19.12982559 507.75668335]
[23.95582390 493.55422974]
[28.78182030 479.35177612]
[25.55069542 464.81185913]
[37.31657791 454.23480225]
[42.14257812 440.03234863]
[46.96857452 425.82989502]
[51.79457092 411.62744141]
[48.56344604 397.08752441]
[60.32933044 386.51043701]
[65.15532684 372.30798340]
[53.87904358 362.52151489]
[47.19056702 349.12713623]
[46.13697433 334.15200806]
[50.90987778 319.87591553]
[60.81150436 308.48416138]
[74.35649872 301.73315430]
[89.49471283 300.67947388]
[94.32070923 286.47702026]
[99.14670563 272.27456665]
[103.97270203 258.07211304]
[105.86599731 243.19207764]
[104.75034332 228.23362732]
[101.11806488 221.79714966]
[103.73113251 213.04444885]
[102.83831787 198.07104492]
[101.94550323 183.09764099]
[101.05268860 168.12423706]
[99.60326385 153.19442749]
[97.59925079 138.32890320]
[95.59523773 123.46337128]
[82.68946838 116.44010925]
[76.34077454 103.18948364]
[78.95397949 88.73071289]
[89.53923035 78.54064178]
[87.53521729 63.67511368]
[75.25093842 54.09731674]
[73.43034363 38.99301147]
[82.63701630 27.34085083]
[80.63300323 12.47532272]
[78.62899017 -2.39020538]
[76.62497711 -17.25573349]
[74.62096405 -32.12126160]
[64.85581970 -40.54769135]
[63.49270630 -52.97048187]
[70.72021484 -62.67046738]
[68.82691956 -77.55049896]
[66.71229553 -92.40069580]
[64.48718262 -107.23474121]
[62.26206207 -122.06878662]
[60.03694534 -136.90283203]
[57.81182861 -151.73687744]
[51.94223785 -137.93296814]
[41.02123642 -127.65037537]
[26.88920212 -122.62189484]
[11.92763138 -123.69491577]
[-1.34218931 -130.68861389]
[-10.68406105 -142.42443848]
[-14.52371407 -156.92468262]
[-12.21409988 -171.74580383]
[-4.14442825 -184.39018250]
[8.32541847 -192.72703552]
[23.09405136 -195.35142517]
[37.67269897 -191.82112122]
[49.60459900 -182.73103333]
[56.87951279 -169.61141968]
[49.76613998 -183.74331665]
[58.06402588 -196.11239624]
[58.73381042 -211.09744263]
[51.62043762 -225.22933960]
[59.91832352 -237.59841919]
[60.58810806 -252.58346558]
[46.49264908 -258.11489868]
[34.95859528 -267.92532349]
[27.23706818 -280.95056152]
[24.16564560 -295.77774048]
[26.07748985 -310.79849243]
[32.76522064 -324.38351440]
[43.50340271 -335.05920410]
[57.12723541 -341.66751099]
[72.15891266 -343.49166870]
[86.96790314 -340.33374023]
[99.94784546 -332.53631592]
[109.69077301 -320.94519043]
[115.13983154 -306.81768799]
[115.70397186 -291.68624878]
[111.32197571 -277.19223022]
[102.46919250 -264.90780640]
[90.10588837 -256.16552734]
[75.57314301 -251.91368103]
[74.90335846 -236.92863464]
[82.06464386 -223.86857605]
[73.71884918 -210.42765808]
[73.04906464 -195.44261169]
[80.21034241 -182.38255310]
[71.86454773 -168.94163513]
[72.64587402 -153.96199036]
[74.87098694 -139.12794495]
[77.09610748 -124.29390717]
[79.32122040 -109.45986176]
[81.54634094 -94.62581635]
[85.64728546 -88.47731781]
[83.69245148 -79.55451202]
[87.70140076 -73.34564209]
[85.61392975 -64.45293427]
[96.87390900 -50.99262619]
[89.48648834 -34.12527466]
[91.49050140 -19.25974655]
[93.49451447 -4.39421892]
[95.49852753 10.47130871]
[97.50254059 25.33683777]
[109.46611786 34.13504791]
[111.71023560 49.18226242]
[102.40074921 61.67110062]
[104.40476227 76.53662872]
[117.31053162 83.55989075]
[123.65922546 96.81051636]
[121.04602051 111.26928711]
[110.46076965 121.45935822]
[112.46478271 136.32489014]
[114.46879578 151.19041443]
[125.50047302 141.02664185]
[140.34748840 143.16348267]
[148.06518555 156.02572632]
[142.96434021 170.13180542]
[128.80513000 175.08325195]
[116.02609253 167.23141479]
[116.91890717 182.20481873]
[117.81172180 197.17823792]
[118.70453644 212.15164185]
[119.70880127 227.11798096]
[120.82444763 242.07643127]
[126.43273926 228.16432190]
[134.86387634 215.75802612]
[145.73429871 205.42198181]
[158.54948425 197.62638855]
[172.72640991 192.72590637]
[187.62011719 190.94346619]
[202.55307007 192.36016846]
[216.84590149 196.91154480]
[229.84838867 204.39054871]
[240.96897888 214.45693970]
[249.70179749 226.65275574]
[255.64955139 240.42317200]
[258.54162598 255.14172363]
[258.24649048 270.13882446]
[254.77755737 284.73217773]
[248.29263306 298.25793457]
[239.08673096 310.10070801]
[227.57868958 319.72177124]
[214.29202271 326.68341064]
[199.83119202 330.66894531]
[184.85406494 331.49700928]
[170.04200745 329.12997437]
[156.06886292 323.67547607]
[143.57031250 315.38174438]
[133.11497498 304.62600708]
[125.17848206 291.89761353]
[120.12189484 277.77560425]
[118.17515564 262.89810181]
[113.34915924 277.10058594]
[108.52316284 291.30303955]
[103.69716644 305.50549316]
[115.05944061 315.56402588]
[121.68721008 329.16976929]
[122.59850311 344.23571777]
[117.68553925 358.46423340]
[107.72640991 369.69723511]
[94.26203156 376.24368286]
[79.35778809 377.13397217]
[74.53178406 391.33642578]
[77.41772461 406.89221191]
[65.99703217 416.45343018]
[61.17103195 430.65588379]
[56.34503174 444.85833740]
[51.51903534 459.06079102]
[54.40497208 474.61657715]
[42.98427582 484.17779541]
[38.15827942 498.38024902]
[33.33228302 512.58270264]
[36.21821976 528.13848877]
[24.79752159 537.69970703]
[19.97152519 551.90216064]
[15.14552689 566.10461426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 210]
[24 209]
[25 208]
[27 206]
[28 205]
[29 204]
[31 202]
[32 201]
[33 200]
[34 199]
[36 197]
[37 196]
[44 189]
[45 188]
[46 187]
[47 186]
[48 158]
[49 157]
[51 156]
[52 155]
[53 154]
[54 153]
[55 147]
[56 146]
[57 145]
[61 141]
[62 140]
[65 137]
[66 136]
[67 135]
[68 134]
[69 133]
[72 131]
[73 129]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[92 122]
[94 120]
[95 119]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
