%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[57.71703339 698.75238037]
[45.31824493 707.21319580]
[32.20143890 714.51147461]
[18.47530365 720.58666992]
[4.25358248 725.38854980]
[-10.34587479 728.87725830]
[-25.20209122 731.02386475]
[-40.19196320 731.81066895]
[-55.19127274 731.23107910]
[-70.07572937 729.28991699]
[-84.72200012 726.00329590]
[-99.00871277 721.39837646]
[-112.81747437 715.51336670]
[-126.03387451 708.39703369]
[-138.54838562 700.10833740]
[-150.25730896 690.71600342]
[-161.06361389 680.29779053]
[-170.87776184 668.94006348]
[-179.61840820 656.73693848]
[-187.21316528 643.78955078]
[-193.59906006 630.20513916]
[-198.72319031 616.09637451]
[-202.54309082 601.58001709]
[-205.02711487 586.77648926]
[-206.15467834 571.80841064]
[-205.91644287 556.79980469]
[-204.31436157 541.87500000]
[-201.36172485 527.15777588]
[-197.08299255 512.77001953]
[-191.51364136 498.83096313]
[-184.69979858 485.45611572]
[-176.69792175 472.75628662]
[-167.57434082 460.83673096]
[-157.40464783 449.79623413]
[-146.27311707 439.72628784]
[-134.27198792 430.71029663]
[-121.50070190 422.82299805]
[-108.06509399 416.12973022]
[-94.07649231 410.68597412]
[-79.65082550 406.53686523]
[-64.90761566 403.71673584]
[-49.96904373 402.24896240]
[-34.95889282 402.14575195]
[-20.00154877 403.40792847]
[-5.22095060 406.02499390]
[9.26042080 409.97534180]
[14.50713825 395.92288208]
[11.71035290 381.29318237]
[23.78594017 371.07113647]
[17.38869476 357.66921997]
[22.50942993 343.34329224]
[36.60994720 336.72412109]
[41.85666656 322.67166138]
[47.10338593 308.61920166]
[52.35010147 294.56671143]
[57.59682083 280.51425171]
[62.84354019 266.46176147]
[68.09025574 252.40930176]
[73.33697510 238.35682678]
[78.58369446 224.30436707]
[83.83041382 210.25189209]
[87.47850037 195.70227051]
[89.48251343 180.83674622]
[91.48652649 165.97120667]
[93.49053955 151.10568237]
[94.16032410 136.12065125]
[93.49053955 121.13560486]
[92.82075500 106.15056610]
[89.85165405 101.82640076]
[89.51665497 96.14651489]
[92.36084747 90.71076202]
[92.13751984 75.71242523]
[91.91419220 60.71408463]
[91.69086456 45.71574783]
[83.74896240 32.03230286]
[91.29591370 19.19124413]
[83.35400391 5.50779867]
[90.90095520 -7.33325958]
[90.67762756 -22.33159637]
[82.73572540 -36.01504135]
[90.28267670 -48.85610199]
[90.05934906 -63.85443878]
[82.11743927 -77.53788757]
[89.66439819 -90.37894440]
[89.44107056 -105.37728119]
[74.27119446 -109.52627563]
[60.89503098 -117.77011108]
[50.39007187 -129.43510437]
[43.59982300 -143.57240295]
[41.06606674 -159.03511047]
[42.98565292 -174.57138062]
[49.19522095 -188.92572021]
[59.18507767 -200.94049072]
[72.14100647 -209.64923096]
[87.01065063 -214.35441589]
[86.56404114 -229.34776306]
[86.11743927 -244.34111023]
[71.89424896 -249.70481873]
[60.80975342 -260.10684204]
[54.55426025 -273.96099854]
[54.08168411 -289.15457153]
[59.46409225 -303.37069702]
[69.88069916 -314.44149780]
[83.74305725 -320.67877197]
[98.93725586 -321.13134766]
[113.14628601 -315.73025513]
[124.20337677 -305.29910278]
[130.42239380 -291.42852783]
[130.85499573 -276.23376465]
[125.43521118 -262.03186035]
[114.98950958 -250.98849487]
[101.11078644 -244.78771973]
[101.55739594 -229.79437256]
[102.00399780 -214.80102539]
[115.94240570 -211.45916748]
[128.54942322 -204.61386108]
[138.96084595 -194.72721863]
[146.46107483 -182.47004700]
[150.53242493 -168.67639160]
[150.89071655 -154.28674316]
[147.50518799 -140.28398132]
[140.60099792 -127.62611389]
[130.64428711 -117.18087006]
[118.31066132 -109.66612244]
[104.43940735 -105.60060883]
[104.66273499 -90.60227203]
[112.58866882 -77.99160767]
[105.05768585 -64.07776642]
[105.28101349 -49.07942963]
[113.20694733 -36.46876526]
[105.67597198 -22.55492401]
[105.89929962 -7.55658722]
[113.82522583 5.05407715]
[106.29425049 18.96791649]
[114.22018433 31.57858086]
[106.68920135 45.49242020]
[106.91252899 60.49075699]
[107.13585663 75.48909760]
[107.35918427 90.48743439]
[107.80579376 105.48078156]
[108.47557831 120.46582031]
[109.14536285 135.45086670]
[116.70342255 122.49417114]
[129.08604431 114.02832031]
[143.90234375 111.68791962]
[158.29150391 115.92487335]
[169.47523499 125.92108917]
[175.29411316 139.74645996]
[174.62460327 154.73150635]
[167.59599304 167.98286438]
[155.56538391 176.94190979]
[140.85569763 179.87876892]
[126.30714417 176.22640991]
[114.72883606 166.69001770]
[108.35607147 153.10969543]
[106.35205078 167.97521973]
[104.34803772 182.84075928]
[102.34402466 197.70628357]
[111.44187927 185.78030396]
[124.19532013 177.88410950]
[138.92642212 175.05661011]
[153.69703674 177.66978455]
[166.56385803 185.37983704]
[175.83403015 197.17237854]
[180.28788757 211.49589539]
[179.33946228 226.46588135]
[173.11352539 240.11277771]
[162.42921448 250.64111328]
[148.69224548 256.66567993]
[133.70993042 257.39385986]
[119.45346069 252.72982788]
[107.79851532 243.28724670]
[100.27851105 230.30844116]
[97.88288116 215.49861145]
[92.63616180 229.55108643]
[87.38944244 243.60354614]
[82.14273071 257.65603638]
[76.89601135 271.70849609]
[71.64929199 285.76095581]
[66.40257263 299.81344604]
[61.15585709 313.86590576]
[55.90913773 327.91836548]
[50.66241837 341.97085571]
[56.97462082 356.21142578]
[51.45351791 370.38787842]
[37.83841324 376.31784058]
[40.25991821 391.95263672]
[28.55961037 401.16958618]
[23.31289101 415.22204590]
[36.83969879 421.72903442]
[49.71874619 429.43911743]
[61.84330750 438.28842163]
[73.11291504 448.20361328]
[83.43418884 459.10253906]
[92.72158813 470.89489746]
[100.89816284 483.48294067]
[107.89616394 496.76235962]
[113.65758514 510.62313843]
[118.13470459 524.95043945]
[121.29040527 539.62548828]
[123.09854889 554.52667236]
[123.54414368 569.53057861]
[122.62350464 584.51281738]
[120.34426117 599.34924316]
[116.72529602 613.91699219]
[111.79659271 628.09521484]
[105.59900665 641.76654053]
[98.18388367 654.81762695]
[89.61266327 667.14038086]
[79.95639038 678.63262939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 189]
[47 188]
[49 186]
[52 183]
[53 182]
[54 181]
[55 180]
[56 179]
[57 178]
[58 177]
[59 176]
[60 175]
[61 174]
[62 158]
[63 157]
[64 156]
[65 155]
[66 142]
[67 141]
[68 140]
[71 139]
[72 138]
[73 137]
[74 136]
[76 134]
[78 132]
[79 131]
[81 129]
[82 128]
[84 126]
[85 125]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
