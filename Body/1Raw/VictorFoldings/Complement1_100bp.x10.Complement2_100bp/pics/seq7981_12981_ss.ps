%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[10.72245312 597.76202393]
[12.77152348 612.68682861]
[11.44762325 627.69329834]
[6.81715918 642.02880859]
[-0.88760602 654.97424316]
[-11.28020477 665.88031006]
[-23.83934975 674.19989014]
[-37.93507767 679.51574707]
[-52.86035156 681.56115723]
[-67.86653137 680.23364258]
[-82.20090485 675.59967041]
[-95.14447784 667.89178467]
[-106.04799652 657.49658203]
[-114.36454773 644.93542480]
[-119.67697144 630.83837891]
[-121.71881104 615.91259766]
[-120.38764191 600.90673828]
[-115.75022888 586.57348633]
[-108.03919220 573.63177490]
[-97.64131165 562.73077393]
[-85.07813263 554.41729736]
[-70.97983551 549.10827637]
[-56.05356598 547.07006836]
[-41.04803467 548.40484619]
[-44.49527740 533.91467285]
[-32.88817596 523.16357422]
[-28.27416611 508.89086914]
[-23.66015625 494.61813354]
[-19.04614639 480.34539795]
[-14.43213749 466.07266235]
[-9.81812859 451.79992676]
[-13.26537323 437.30972290]
[-1.65827024 426.55865479]
[2.95573902 412.28591919]
[7.56974840 398.01318359]
[11.75675964 383.60940552]
[15.51306057 369.08734131]
[11.20945549 354.82803345]
[22.15606308 343.40512085]
[25.91236496 328.88308716]
[21.60875893 314.62374878]
[32.55536652 303.20086670]
[36.31166840 288.67880249]
[40.06797028 274.15673828]
[43.82427216 259.63467407]
[47.58057022 245.11262512]
[51.33687210 230.59057617]
[55.09317398 216.06851196]
[53.78837585 213.58744812]
[53.38773727 210.44006348]
[54.14998245 206.96810913]
[56.20544052 203.60067749]
[59.52951050 200.80702209]
[64.14351654 186.53428650]
[68.75753021 172.26155090]
[55.30075455 164.80587769]
[43.55088043 154.87550354]
[33.95658875 142.84963989]
[26.88424683 129.18750000]
[22.60392570 114.41081238]
[21.27907181 99.08382416]
[22.96027756 83.79181671]
[27.58334541 69.11874390]
[34.97173309 55.62490845]
[44.84331131 43.82559586]
[56.82111740 34.17137146]
[70.44776154 27.03090096]
[85.20290375 22.67684746]
[100.52308655 21.27547836]
[115.82329559 22.88030434]
[120.22428894 8.54045773]
[124.62528992 -5.79938889]
[121.27748108 -21.26233673]
[132.40843201 -31.15935516]
[136.27275085 -45.65304947]
[139.59500122 -60.28050995]
[142.91726685 -74.90796661]
[146.23951721 -89.53543091]
[134.92526245 -102.10855865]
[133.35023499 -118.78250122]
[141.93794250 -132.96745300]
[157.13450623 -139.17567444]
[160.23861694 -153.85098267]
[163.34272766 -168.52627563]
[158.62873840 -183.62889099]
[168.83233643 -194.47949219]
[171.93644714 -209.15480042]
[175.04055786 -223.83010864]
[170.32655334 -238.93270874]
[180.53016663 -249.78332520]
[182.97589111 -264.58258057]
[184.75836182 -279.47631836]
[177.12062073 -296.23181152]
[188.17895508 -309.85827637]
[189.73947144 -324.77685547]
[191.30000305 -339.69546509]
[192.86051941 -354.61407471]
[178.71902466 -359.85516357]
[166.32568359 -368.44909668]
[156.45956421 -379.85571289]
[149.74084473 -393.35791016]
[146.59185791 -408.10696411]
[147.21058655 -423.17575073]
[151.55810547 -437.61700439]
[159.36114502 -450.52294922]
[170.12918091 -461.08230591]
[183.18534851 -468.63131714]
[197.70890808 -472.69540405]
[212.78691101 -473.01913452]
[227.47152710 -469.58215332]
[240.83967590 -462.60052490]
[252.05102539 -452.51306152]
[260.40081787 -439.95394897]
[265.36416626 -425.71258545]
[266.62911987 -410.68426514]
[264.11608887 -395.81362915]
[257.98309326 -382.03549194]
[248.61566162 -370.21594238]
[236.60260010 -361.09796143]
[222.69909668 -355.25473022]
[207.77912903 -353.05355835]
[206.21859741 -338.13494873]
[204.65808105 -323.21633911]
[203.09756470 -308.29772949]
[210.46868896 -298.70645142]
[209.29067993 -286.26473999]
[199.65206909 -277.69384766]
[197.86961365 -262.80014038]
[210.30010986 -271.19552612]
[225.05184937 -268.47775269]
[233.67436218 -256.20370483]
[231.22828674 -241.40451050]
[219.11483765 -232.55778503]
[204.27314758 -234.73136902]
[195.20547485 -246.67921448]
[200.14149475 -232.62628174]
[189.71586609 -220.72599792]
[186.61175537 -206.05068970]
[183.50764465 -191.37538147]
[188.44366455 -177.32244873]
[178.01803589 -165.42216492]
[174.91392517 -150.74687195]
[171.80981445 -136.07156372]
[181.63426208 -127.03152466]
[185.74185181 -114.21466064]
[182.95782471 -100.93615723]
[173.90469360 -90.68630981]
[160.86698914 -86.21317291]
[157.54472351 -71.58570862]
[154.22245789 -56.95824814]
[150.90020752 -42.33078766]
[164.79011536 -47.99385071]
[177.95184326 -40.79878616]
[180.68304443 -26.04953003]
[170.97038269 -14.61868572]
[155.97367859 -14.93264580]
[146.74829102 -26.75835800]
[150.41088867 -12.32109261]
[138.96513367 -1.39839101]
[134.56413269 12.94145584]
[130.16314697 27.28130341]
[143.04811096 34.08578110]
[154.45835876 43.14833450]
[164.00297546 54.15849304]
[171.35499573 66.73908234]
[176.26255798 80.45911407]
[178.55754089 94.84857178]
[178.16131592 109.41450500]
[175.08746338 123.65791321]
[169.44128418 137.09086609]
[161.41619873 149.25315857]
[151.28713989 159.72816467]
[139.40110779 168.15699768]
[126.16526794 174.25094604]
[112.03307343 177.80120850]
[97.48864746 178.68618774]
[83.03025818 176.87556458]
[78.41625214 191.14830017]
[73.80224609 205.42103577]
[69.61523438 219.82481384]
[65.85893250 234.34686279]
[62.10263062 248.86892700]
[58.34632874 263.39099121]
[54.59003067 277.91305542]
[50.83372879 292.43511963]
[47.07742691 306.95715332]
[51.11235809 322.25518799]
[40.43442535 332.63937378]
[36.67812347 347.16143799]
[40.71305084 362.45947266]
[30.03512001 372.84362793]
[26.27881813 387.36569214]
[27.58727264 391.50598145]
[27.51721573 395.45056152]
[26.29944611 398.79006958]
[24.27399063 401.23223877]
[21.84248161 402.62719727]
[17.22847176 416.89993286]
[12.61446285 431.17266846]
[15.73168278 446.68374634]
[4.45460510 456.41394043]
[-0.15940441 470.68667603]
[-4.77341366 484.95941162]
[-9.38742256 499.23214722]
[-14.00143242 513.50488281]
[-18.61544228 527.77758789]
[-15.49822140 543.28869629]
[-26.77529907 553.01885986]
[-13.82799625 560.72052002]
[-2.91944242 571.11047363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 208]
[26 206]
[27 205]
[28 204]
[29 203]
[30 202]
[31 201]
[33 199]
[34 198]
[35 197]
[36 192]
[37 191]
[39 189]
[40 188]
[42 186]
[43 185]
[44 184]
[45 183]
[46 182]
[47 181]
[48 180]
[53 179]
[54 178]
[55 177]
[70 161]
[71 160]
[72 159]
[74 157]
[75 151]
[76 150]
[77 149]
[78 148]
[82 143]
[83 142]
[84 141]
[86 139]
[87 138]
[88 137]
[90 135]
[91 128]
[92 127]
[94 124]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
