%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[147.18821716 619.60717773]
[137.03300476 608.55554199]
[127.83819580 596.69293213]
[119.66828918 584.10247803]
[112.58057404 570.87255859]
[106.62478638 557.09594727]
[101.84268951 542.86926270]
[98.26782990 528.29235840]
[95.92528534 513.46740723]
[94.83148193 498.49844360]
[94.99410248 483.49041748]
[96.41199493 468.54867554]
[99.07521820 453.77795410]
[102.96509552 439.28192139]
[108.05433655 425.16220093]
[114.30724335 411.51788330]
[121.67995453 398.44464111]
[130.12075806 386.03417969]
[139.57044983 374.37356567]
[149.96273804 363.54458618]
[161.22473145 353.62319946]
[173.27745056 344.67898560]
[186.03631592 336.77471924]
[199.41186523 329.96578979]
[193.74906921 316.07577515]
[188.08628845 302.18572998]
[182.01245117 288.47045898]
[175.53295898 274.94210815]
[169.05346680 261.41378784]
[162.57395935 247.88543701]
[156.09446716 234.35708618]
[149.61497498 220.82873535]
[137.13902283 212.69239807]
[138.15600586 196.90391541]
[125.68006134 188.76756287]
[126.69704437 172.97908020]
[120.21754456 159.45072937]
[107.74160004 151.31439209]
[108.75858307 135.52590942]
[102.27909088 121.99755859]
[95.79959106 108.46921539]
[91.37529755 105.65148163]
[88.84467316 100.55548096]
[89.33531189 94.44023895]
[83.26147461 80.72496796]
[77.18764496 67.00970459]
[71.11380768 53.29443741]
[70.49695587 68.28174591]
[66.81922913 82.82390594]
[60.23700333 96.30256653]
[51.03016663 108.14461517]
[39.59019089 117.84651947]
[26.40351105 124.99575043]
[12.03083324 129.28831482]
[-2.91670895 130.54170227]
[-17.80353928 128.70260620]
[-31.99666214 123.84923553]
[-44.89258194 116.18795013]
[-55.94295120 106.04450989]
[-64.67790222 93.85022736]
[-70.72602844 80.12360382]
[-73.83016205 65.44830322]
[-73.85829926 50.44832993]
[-70.80925751 35.76148987]
[-64.81267548 22.01227188]
[-56.12353134 9.78529930]
[-45.11129761 -0.39952740]
[-32.24421692 -8.10914612]
[-18.06940460 -13.01573944]
[-3.18957853 -14.91067791]
[11.76256180 -13.71338558]
[26.15124321 -9.47477341]
[39.36465454 -2.37506843]
[50.84095001 7.28384542]
[60.09215546 19.09126663]
[66.72496796 32.54529953]
[66.72496796 17.54530144]
[66.72496796 2.54530120]
[66.72496796 -12.45469856]
[66.72496796 -27.45469856]
[66.38999176 -42.45095825]
[65.72019958 -57.43599701]
[65.05041504 -72.42103577]
[64.38063049 -87.40607452]
[63.71084595 -102.39111328]
[60.90017319 -106.78965759]
[60.13434219 -111.36860657]
[61.13964462 -115.31885529]
[63.36090851 -118.05715942]
[63.36090851 -133.05715942]
[63.36090851 -148.05715942]
[63.36090851 -163.05715942]
[63.36090851 -178.05715942]
[54.80908585 -187.71267700]
[55.11789322 -200.20620728]
[63.57653427 -208.85363770]
[63.79986191 -223.85197449]
[64.02318573 -238.85031128]
[49.94256973 -244.51605225]
[38.86215973 -254.88856506]
[32.28049469 -268.56503296]
[31.08768463 -283.69586182]
[35.44505310 -298.23471069]
[44.76329803 -310.21530151]
[57.78220749 -318.01739502]
[72.74107361 -320.58578491]
[87.61684418 -317.57315063]
[100.39768219 -309.38690186]
[109.35508728 -297.13415527]
[113.27764893 -282.47204590]
[111.63486481 -267.38345337]
[104.64891815 -253.90899658]
[93.26459503 -243.87098694]
[79.02152252 -238.62698364]
[78.79819489 -223.62864685]
[78.57486725 -208.63031006]
[87.93560028 -193.78633118]
[78.36090851 -178.05715942]
[78.36090851 -163.05715942]
[78.36090851 -148.05715942]
[78.36090851 -133.05715942]
[78.36090851 -118.05715942]
[78.69588470 -103.06089783]
[79.36566925 -88.07585907]
[80.03545380 -73.09082031]
[80.70523834 -58.10578156]
[81.37503052 -43.12074280]
[83.71634674 -40.48435593]
[84.89703369 -36.58293915]
[84.33642578 -31.97435951]
[81.72496796 -27.45469856]
[81.72496796 -12.45469856]
[81.72496796 2.54530120]
[81.72496796 17.54530144]
[81.72496796 32.54529953]
[84.82907104 47.22060394]
[90.90290833 60.93587112]
[96.97674561 74.65113831]
[103.05057526 88.36640167]
[109.32793427 101.98972321]
[115.80743408 115.51806641]
[122.28692627 129.04641724]
[135.22633362 138.15039062]
[133.74589539 152.97123718]
[140.22538757 166.49958801]
[153.16479492 175.60356140]
[151.68435669 190.42440796]
[164.62374878 199.52839661]
[163.14331055 214.34924316]
[169.62281799 227.87759399]
[176.10231018 241.40592957]
[182.58180237 254.93428040]
[189.06129456 268.46261597]
[195.54080200 281.99096680]
[199.20829773 284.31549072]
[201.69522095 287.37811279]
[202.91448975 290.71710205]
[202.93794250 293.88980103]
[201.97631836 296.52294922]
[207.63909912 310.41296387]
[213.30187988 324.30300903]
[227.62541199 319.81936646]
[242.27389526 316.55001831]
[257.14456177 314.51791382]
[272.13314819 313.73727417]
[287.13446045 314.21362305]
[302.04330444 315.94354248]
[316.75512695 318.91497803]
[331.16668701 323.10705566]
[345.17691040 328.49035645]
[358.68753052 335.02713013]
[371.60379028 342.67153931]
[383.83508301 351.36996460]
[395.29559326 361.06134033]
[405.90493774 371.67776489]
[415.58874512 383.14468384]
[424.27902222 395.38174438]
[431.91485596 408.30307007]
[438.44265747 421.81805420]
[443.81668091 435.83184814]
[447.99917603 450.24618530]
[450.96084595 464.95996094]
[452.68087769 479.86993408]
[453.14724731 494.87158203]
[452.35668945 509.85961914]
[450.31469727 524.72894287]
[447.03564453 539.37524414]
[442.54248047 553.69580078]
[436.86679077 567.59014893]
[430.04830933 580.96081543]
[422.13494873 593.71405029]
[413.18212891 605.76037598]
[403.25271606 617.01531982]
[392.41632080 627.39990234]
[380.74896240 636.84124756]
[368.33248901 645.27319336]
[355.25399780 652.63659668]
[341.60522461 658.87976074]
[327.48187256 663.95892334]
[312.98306274 667.83843994]
[298.21044922 670.49114990]
[283.26770020 671.89837646]
[268.25958252 672.05029297]
[253.29139709 670.94580078]
[238.46812439 668.59271240]
[223.89373779 665.00744629]
[209.67048645 660.21520996]
[195.89813232 654.24957275]
[182.67326355 647.15240479]
[170.08865356 638.97351074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 161]
[25 160]
[26 159]
[27 154]
[28 153]
[29 152]
[30 151]
[31 150]
[32 149]
[34 147]
[36 145]
[37 144]
[39 142]
[40 141]
[41 140]
[44 139]
[45 138]
[46 137]
[47 136]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
