%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[60.60256958 592.99975586]
[45.10097122 592.30688477]
[32.98818970 582.60839844]
[28.92183685 567.63360596]
[34.46550751 553.14062500]
[47.48754883 544.70227051]
[48.15733337 529.71722412]
[48.82711792 514.73217773]
[49.49690247 499.74713135]
[38.48669434 509.93414307]
[23.51091385 510.78622437]
[11.41628838 501.91378784]
[7.73231792 487.37322998]
[14.14326286 473.81225586]
[27.71812630 467.43078613]
[42.25066376 471.14633179]
[51.09731674 483.26199341]
[53.32243347 468.42794800]
[55.54755020 453.59390259]
[48.61205292 443.68304443]
[50.34442902 431.30633545]
[60.35613251 423.17437744]
[58.34529877 416.06253052]
[62.95001984 408.17367554]
[65.61581421 393.41244507]
[68.28160858 378.65124512]
[70.94740295 363.89001465]
[65.59516144 349.99026489]
[75.66185760 337.78485107]
[78.32765198 323.02365112]
[80.99344635 308.26242065]
[82.66498566 293.35586548]
[83.33477020 278.37081909]
[84.00455475 263.38577271]
[84.67433929 248.40074158]
[85.34412384 233.41569519]
[85.23246002 218.41610718]
[84.33964539 203.44270325]
[83.44683075 188.46929932]
[76.08251190 201.53707886]
[63.82730865 210.18635559]
[49.04750061 212.74708557]
[34.59684372 208.72483826]
[23.26552963 198.89624023]
[17.24145889 185.15904236]
[17.68778610 170.16567993]
[24.51832962 156.81114197]
[36.41421890 147.67398071]
[51.07854843 144.51843262]
[65.67986298 147.95378113]
[77.39887238 157.31672668]
[83.97312164 170.80067444]
[85.75559235 155.90695190]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[91.94741058 82.19377899]
[91.93841553 77.55123138]
[93.57434845 73.81776428]
[96.21236420 71.47827911]
[98.65809631 56.67900467]
[91.77615356 39.59918213]
[103.43190002 26.48009491]
[97.82733917 11.68484402]
[107.36701202 0.24614371]
[109.59213257 -14.58790016]
[111.81724548 -29.42194366]
[114.04236603 -44.25598907]
[116.26748657 -59.09003067]
[118.49259949 -73.92407227]
[120.71772003 -88.75811768]
[122.94283295 -103.59216309]
[125.16795349 -118.42620850]
[123.25582886 -123.28324890]
[123.38507080 -127.92400360]
[125.13143158 -131.60711670]
[127.83793640 -133.86701965]
[130.72320557 -148.58691406]
[133.60847473 -163.30679321]
[136.49375916 -178.02668762]
[137.83198547 -192.96687317]
[126.77288818 -203.93655396]
[126.76005554 -219.15019226]
[137.28613281 -229.62574768]
[137.06280518 -244.62408447]
[136.83947754 -259.62243652]
[136.61614990 -274.62075806]
[136.39282227 -289.61911011]
[127.69818878 -299.14624023]
[127.82095337 -311.64297485]
[136.14990234 -320.41537476]
[136.14990234 -335.41537476]
[121.57278442 -339.31024170]
[108.50092316 -346.84606934]
[97.82557678 -357.50906372]
[90.27460480 -370.57220459]
[86.36285400 -385.14480591]
[86.35702515 -400.23327637]
[90.25752258 -414.80889893]
[97.79840088 -427.87783813]
[108.46551514 -438.54907227]
[121.53155518 -446.09500122]
[136.10566711 -450.00112915]
[151.19415283 -450.00112915]
[165.76824951 -446.09500122]
[178.83430481 -438.54907227]
[189.50140381 -427.87783813]
[197.04228210 -414.80889893]
[200.94277954 -400.23327637]
[200.93696594 -385.14480591]
[197.02520752 -370.57220459]
[189.47424316 -357.50906372]
[178.79888916 -346.84606934]
[165.72702026 -339.31024170]
[151.14990234 -335.41537476]
[151.14990234 -320.41537476]
[160.73060608 -305.71240234]
[151.39115906 -289.84243774]
[151.61448669 -274.84408569]
[151.83781433 -259.84576416]
[152.06114197 -244.84741211]
[152.28446960 -229.84907532]
[163.11776733 -219.69155884]
[163.55792236 -204.48429871]
[152.83032227 -193.19020081]
[160.25643921 -206.22296143]
[172.05741882 -215.48239136]
[186.48265076 -219.59489441]
[201.39222717 -217.95043945]
[214.57443237 -210.79293823]
[224.07373047 -199.18417358]
[228.48097229 -184.84625244]
[227.14237976 -169.90609741]
[220.25650024 -156.58000183]
[208.84483337 -146.84481812]
[194.60021973 -142.14469910]
[179.63578796 -143.17686462]
[166.17138672 -149.78822327]
[156.20440674 -160.99800110]
[151.21365356 -175.14141846]
[148.32836914 -160.42152405]
[145.44309998 -145.70162964]
[142.55783081 -130.98173523]
[140.00199890 -116.20108795]
[137.77688599 -101.36704254]
[135.55175781 -86.53300476]
[133.32664490 -71.69895935]
[131.10153198 -56.86491394]
[128.87640381 -42.03086853]
[126.65129089 -27.19682693]
[124.42617798 -12.36278248]
[122.20105743 2.47126079]
[127.96477509 16.20548058]
[118.26594543 28.70521164]
[125.20144653 38.61608505]
[123.46907043 50.99278259]
[113.45736694 59.12473297]
[111.01163483 73.92400360]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[100.64930725 157.68942261]
[98.86683655 172.58312988]
[98.42023468 187.57647705]
[99.31304932 202.54989624]
[100.20586395 217.52330017]
[110.09652710 206.24610901]
[124.90239716 203.84066772]
[137.85443115 211.40669250]
[143.03114319 225.48510742]
[138.06579590 239.63943481]
[125.22849274 247.39852905]
[110.38826752 245.21502686]
[100.32916260 234.08547974]
[99.65937805 249.07052612]
[98.98959351 264.05557251]
[98.31980896 279.04058838]
[97.65002441 294.02563477]
[107.48203278 282.69726562]
[121.84754181 278.38076782]
[136.29524231 282.41363525]
[146.34835815 293.54623413]
[148.89181519 308.32904053]
[143.13749695 322.18139648]
[130.86845398 330.81103516]
[115.88637543 331.54394531]
[102.83361053 324.15304565]
[95.75466156 310.92822266]
[93.08886719 325.68942261]
[90.42307281 340.45065308]
[95.58464050 355.40621948]
[85.70862579 366.55581665]
[83.04282379 381.31701660]
[80.37702942 396.07824707]
[77.71123505 410.83947754]
[75.15540314 425.62011719]
[82.03734589 442.69995117]
[70.38159180 455.81903076]
[68.15647888 470.65307617]
[65.93135834 485.48712158]
[64.48194122 500.41693115]
[63.81215668 515.40197754]
[63.14237213 530.38702393]
[62.47258759 545.37207031]
[74.68986511 554.93853760]
[78.91842651 569.86834717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[8 206]
[9 205]
[17 204]
[18 203]
[19 202]
[22 200]
[24 199]
[25 198]
[26 197]
[27 196]
[29 194]
[30 193]
[31 192]
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 170]
[38 169]
[39 168]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[58 161]
[62 160]
[63 159]
[65 156]
[67 154]
[68 153]
[69 152]
[70 151]
[71 150]
[72 149]
[73 148]
[74 147]
[75 146]
[79 145]
[80 144]
[81 143]
[82 142]
[83 127]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[93 118]
[94 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
