%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[154.28141785 657.41827393]
[152.72814941 642.45739746]
[153.87142944 627.45965576]
[157.67448425 612.90710449]
[164.01507568 599.26757812]
[172.68937683 586.97949219]
[183.41853333 576.43792725]
[195.85766602 567.98175049]
[209.60690308 561.88269043]
[206.06723022 547.30633545]
[202.52755737 532.72991943]
[198.98788452 518.15356445]
[195.44821167 503.57717896]
[180.47863770 503.55847168]
[165.93981934 499.95532227]
[152.67791748 492.97293091]
[141.46585083 483.01336670]
[132.95822144 470.65228271]
[127.65318298 456.60574341]
[125.86314392 441.68875122]
[127.69647217 426.76788330]
[133.05090332 412.71099854]
[141.61927795 400.33673096]
[152.90705872 390.36688232]
[166.26100159 383.38421631]
[162.72132874 368.80783081]
[159.18165588 354.23144531]
[155.64198303 339.65509033]
[152.10231018 325.07870483]
[148.56263733 310.50231934]
[145.02296448 295.92596436]
[141.48329163 281.34957886]
[137.94361877 266.77319336]
[134.07931519 252.27951050]
[129.89230347 237.87571716]
[125.70529175 223.47193909]
[121.51828003 209.06816101]
[110.53591156 199.00651550]
[114.11357117 183.59512329]
[110.43382263 180.55070496]
[108.62749481 175.16236877]
[110.02319336 168.69989014]
[106.26689148 154.17782593]
[102.51059723 139.65577698]
[98.75429535 125.13371277]
[89.73056793 122.97377014]
[82.10300446 117.69047546]
[76.90859222 110.00210571]
[74.85352325 100.95391846]
[76.21719360 91.77604675]
[80.81420898 83.71623993]
[88.01959229 77.87026978]
[85.13431549 63.15037537]
[82.24904633 48.43048477]
[79.36377716 33.71059418]
[66.94235229 20.11684990]
[73.27301788 3.74951506]
[70.16890717 -10.92578697]
[67.06479645 -25.60108948]
[63.96068573 -40.27639389]
[60.85657501 -54.95169449]
[57.75246429 -69.62699890]
[51.07057953 -56.19746399]
[38.24373627 -48.42108536]
[23.24646950 -48.70745850]
[10.72584724 -56.96784592]
[4.56152153 -70.64268494]
[6.66357470 -85.49466705]
[16.38066292 -96.92174530]
[30.70183945 -101.38312531]
[45.18953323 -97.49638367]
[55.35469055 -86.46565247]
[54.23904037 -101.42411041]
[53.12339401 -116.38256073]
[52.00774384 -131.34101868]
[37.57223129 -133.38319397]
[23.88521004 -138.38749695]
[11.54712009 -146.13166809]
[1.09867024 -156.27334595]
[-7.00286865 -168.36517334]
[-12.40367317 -181.87449646]
[-14.86881828 -196.20686340]
[-14.29249763 -210.73219299]
[-10.70255756 -224.81243896]
[-4.25916815 -237.82963562]
[4.75232363 -249.21301270]
[15.93403053 -258.46401978]
[28.79309082 -265.17822266]
[42.76339722 -269.06286621]
[41.87058258 -284.03625488]
[40.97776413 -299.00967407]
[40.08494949 -313.98309326]
[39.19213486 -328.95648193]
[30.08076477 -338.08587646]
[29.64539337 -350.57565308]
[37.57433319 -359.71121216]
[36.90454865 -374.69622803]
[22.71416473 -380.22369385]
[12.00343704 -391.04959106]
[6.62806749 -405.29830933]
[7.51937008 -420.50109863]
[14.52292156 -434.02404785]
[26.42531395 -443.52420044]
[41.16438675 -447.35562134]
[56.18650436 -444.85446167]
[68.88899994 -436.45407104]
[77.07108307 -423.60986328]
[79.31515503 -408.54718018]
[75.23242950 -393.87573242]
[65.53025055 -382.13745117]
[51.88958740 -375.36602783]
[52.55937195 -360.38098145]
[62.78703308 -346.12048340]
[54.16553879 -329.84930420]
[55.05835342 -314.87588501]
[55.95117188 -299.90249634]
[56.84398651 -284.92907715]
[57.73680115 -269.95568848]
[72.99578857 -267.50866699]
[87.33731842 -261.73281860]
[100.04460144 -252.91351318]
[110.48177338 -241.48826599]
[118.12574768 -228.02511597]
[122.59238434 -213.19436646]
[123.65583801 -197.73515320]
[121.25997162 -182.41868591]
[115.52126312 -168.00975037]
[106.72321320 -155.22848511]
[95.30229950 -144.71443176]
[81.82631683 -136.99452209]
[66.96620178 -132.45666504]
[68.08184814 -117.49821472]
[69.19749451 -102.53975677]
[70.31314087 -87.58130646]
[72.42776489 -72.73110962]
[75.53187561 -58.05580521]
[78.63598633 -43.38050079]
[81.74009705 -28.70520020]
[84.84420776 -14.02989769]
[87.94831848 0.64540493]
[97.91234589 7.50431538]
[100.61853790 19.70514679]
[94.08366394 30.82531929]
[96.96894073 45.54521179]
[99.85420990 60.26510239]
[102.73947906 74.98499298]
[120.24240112 85.05006409]
[124.71427917 104.73915100]
[113.27635193 121.37741089]
[117.03265381 135.89947510]
[120.78895569 150.42152405]
[124.54525757 164.94358826]
[128.51734924 179.40811157]
[139.79920959 190.50001526]
[135.92205811 204.88114929]
[140.10906982 219.28492737]
[144.29608154 233.68870544]
[148.48309326 248.09249878]
[152.25234985 251.70356750]
[154.07708740 255.97247314]
[154.03234863 260.04840088]
[152.52000427 263.23352051]
[156.05967712 277.80990601]
[159.59934998 292.38629150]
[163.13900757 306.96264648]
[166.67868042 321.53903198]
[170.21835327 336.11541748]
[173.75802612 350.69177246]
[177.29769897 365.26815796]
[180.83737183 379.84454346]
[195.90652466 379.92504883]
[210.50962830 383.60766602]
[223.79888916 390.67410278]
[235.00387573 400.70977783]
[243.47615051 413.12805176]
[248.72680664 427.20468140]
[250.45471191 442.11987305]
[248.56373596 457.00610352]
[243.16810608 470.99865723]
[234.58551025 483.28567505]
[223.31840515 493.15542603]
[210.02459717 500.03750610]
[213.56425476 514.61389160]
[217.10392761 529.19024658]
[220.64360046 543.76666260]
[224.18327332 558.34301758]
[239.19842529 557.45703125]
[254.13046265 559.26654053]
[268.49935913 563.71337891]
[281.84323120 570.65460205]
[293.73312378 579.86712646]
[303.78683472 591.05474854]
[311.68115234 603.85784912]
[317.16232300 617.86486816]
[320.05416870 632.62554932]
[320.26370239 647.66534424]
[317.78421021 662.50085449]
[312.69537354 676.65509033]
[305.16079712 689.67315674]
[295.42266846 701.13653564]
[283.79406738 710.67669678]
[270.64874268 717.98699951]
[256.40930176 722.83245850]
[241.53349304 725.05725098]
[226.49948120 724.58990479]
[211.79057312 721.44543457]
[197.87957764 715.72491455]
[185.21369934 707.61230469]
[174.20007324 697.36828613]
[165.19274902 685.32220459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 186]
[10 185]
[11 184]
[12 183]
[13 182]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[34 158]
[35 157]
[36 156]
[37 155]
[39 153]
[42 152]
[43 151]
[44 150]
[45 149]
[52 146]
[53 145]
[54 144]
[55 143]
[57 140]
[58 139]
[59 138]
[60 137]
[61 136]
[62 135]
[72 134]
[73 133]
[74 132]
[75 131]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
