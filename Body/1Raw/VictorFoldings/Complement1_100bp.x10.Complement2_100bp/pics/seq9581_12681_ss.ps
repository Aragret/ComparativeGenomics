%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[5.40787935 343.11447144]
[6.79207563 358.17898560]
[3.45136094 372.93344116]
[-4.28697634 385.93243408]
[-15.66481209 395.90237427]
[-29.56746292 401.86657715]
[-44.63288879 403.24066162]
[-59.38513184 399.89007568]
[-72.37891388 392.14303589]
[-82.34124756 380.75851440]
[-88.29611206 366.85186768]
[-89.66011810 351.78552246]
[-86.29963684 337.03552246]
[-78.54388428 324.04693604]
[-67.15269470 314.09225464]
[-53.24206543 308.14669800]
[-38.17481232 306.79278564]
[-34.85255432 292.16531372]
[-31.53029442 277.53787231]
[-28.20803642 262.91040039]
[-24.88577652 248.28294373]
[-34.75291824 259.58071899]
[-47.72083282 267.11947632]
[-62.42098618 270.10369873]
[-77.30204010 268.21838379]
[-90.79354858 261.66253662]
[-101.47173309 251.12802124]
[-108.20970154 237.72653198]
[-110.29636383 222.87237549]
[-107.51152802 208.13316345]
[-100.14907074 195.06433105]
[-88.98597717 185.04508972]
[-75.20031738 179.13276672]
[-60.24691391 177.95132446]
[-45.70384598 181.62544250]
[-33.10586929 189.76737976]
[-23.78248787 201.51788330]
[-18.71761322 215.63691711]
[-18.44578552 230.63464355]
[-11.56637287 217.30522156]
[-4.68696022 203.97578430]
[-17.06889534 212.44264221]
[-31.51147842 216.49378967]
[-46.49055099 215.70170593]
[-60.42533112 210.14996338]
[-71.84525299 200.42445374]
[-79.54515076 187.55155945]
[-82.71241760 172.88975525]
[-81.01282501 157.98635864]
[-74.62572479 144.41413879]
[-64.22515869 133.60542297]
[-50.90872955 126.70088196]
[-36.08175278 124.42916107]
[-21.30895042 127.02999878]
[-8.14933586 134.22891235]
[2.00832915 145.26622009]
[8.09208012 158.97708130]
[9.45988464 173.91459656]
[5.96732140 188.50251770]
[15.96549320 177.32054138]
[25.96366501 166.13856506]
[26.13299179 162.61668396]
[28.01658821 159.00184631]
[31.63956642 156.09886169]
[36.66665268 154.69332886]
[47.15415192 143.96894836]
[57.64165497 133.24456787]
[68.12915802 122.52019501]
[78.53652954 111.71804047]
[88.86319733 100.83869934]
[99.10858917 89.88278961]
[109.27213287 78.85091400]
[119.10271454 67.52132416]
[128.59161377 55.90406036]
[138.08052063 44.28679657]
[147.56941223 32.66953278]
[150.10414124 14.43065453]
[166.74407959 8.85575771]
[176.05895996 -2.90149331]
[185.37384033 -14.65874481]
[194.68872070 -26.41599655]
[204.00360107 -38.17324829]
[196.09120178 -52.16975784]
[194.16038513 -68.09277344]
[198.47741699 -83.50052643]
[208.35279846 -96.04168701]
[222.25111389 -103.81419373]
[238.02973938 -105.65368652]
[253.26916504 -101.30788422]
[262.40795898 -113.20252228]
[264.68026733 -128.85969543]
[278.56991577 -134.23812866]
[280.84222412 -149.89530945]
[294.73184204 -155.27374268]
[303.87063599 -167.16838074]
[313.00946045 -179.06301880]
[322.14825439 -190.95764160]
[331.28704834 -202.85227966]
[340.42584229 -214.74691772]
[329.57772827 -225.12791443]
[319.91558838 -236.62097168]
[311.55273438 -249.09133911]
[304.58721924 -262.39279175]
[299.10067749 -276.36938477]
[295.15750122 -290.85726929]
[292.80386353 -305.68655396]
[292.06735229 -320.68338013]
[292.95666504 -335.67190552]
[295.46133423 -350.47644043]
[299.55197144 -364.92337036]
[305.18066406 -378.84332275]
[312.28140259 -392.07308960]
[320.77090454 -404.45758057]
[330.54968262 -415.85156250]
[341.50305176 -426.12145996]
[353.50259399 -435.14688110]
[366.40765381 -442.82196045]
[380.06686401 -449.05676270]
[394.32015991 -453.77816772]
[409.00033569 -456.93081665]
[423.93533325 -458.47775269]
[438.95004272 -458.40081787]
[453.86840820 -456.70095825]
[468.51553345 -453.39807129]
[482.71966553 -448.53085327]
[496.31430054 -442.15643311]
[509.14001465 -434.34951782]
[521.04644775 -425.20166016]
[531.89404297 -414.82006836]
[541.55554199 -403.32647705]
[549.91772461 -390.85565186]
[556.88256836 -377.55383301]
[562.36834717 -363.57693481]
[566.31072998 -349.08886719]
[568.66357422 -334.25946045]
[569.39929199 -319.26257324]
[568.50915527 -304.27407837]
[566.00372314 -289.46969604]
[561.91229248 -275.02297974]
[556.28283691 -261.10333252]
[549.18139648 -247.87394714]
[540.69122314 -235.48992920]
[530.91180420 -224.09646606]
[519.95788574 -213.82714844]
[507.95785522 -204.80239868]
[495.05239868 -197.12799072]
[481.39285278 -190.89392090]
[467.13931274 -186.17329407]
[452.45895386 -183.02142334]
[437.52389526 -181.47529602]
[422.50918579 -181.55302429]
[407.59091187 -183.25370789]
[392.94396973 -186.55738831]
[378.74008179 -191.42533875]
[365.14578247 -197.80050659]
[352.32049561 -205.60810852]
[343.18170166 -193.71347046]
[334.04287720 -181.81884766]
[324.90408325 -169.92420959]
[315.76528931 -158.02957153]
[306.62646484 -146.13494873]
[305.00784302 -131.32855225]
[290.46453857 -125.09932709]
[288.84588623 -110.29293823]
[274.30261230 -104.06371307]
[265.16378784 -92.16908264]
[272.63079834 -80.28703308]
[275.59982300 -66.54063416]
[273.69427490 -52.57681274]
[267.12283325 -40.07566833]
[256.65686035 -30.54833984]
[243.53977966 -25.15433311]
[229.33947754 -24.56043816]
[215.76084900 -28.85836411]
[206.44596863 -17.10111237]
[197.13108826 -5.34386158]
[187.81620789 6.41338968]
[178.50132751 18.17064095]
[179.58210754 30.21881294]
[171.91793823 40.09020615]
[159.18667603 42.15843201]
[149.69776917 53.77569580]
[140.20887756 65.39295959]
[130.71998596 77.01022339]
[130.86672974 79.80961609]
[129.91343689 82.83580780]
[127.76817322 85.67010498]
[124.49211884 87.86829376]
[120.30401611 89.01446533]
[110.14046478 100.04634094]
[107.42906189 107.63717651]
[99.74253082 111.16537476]
[89.41586304 122.04470825]
[85.77760315 130.42330933]
[78.85353851 133.00769043]
[68.36603546 143.73207092]
[57.87853241 154.45645142]
[47.39103317 165.18083191]
[37.14564133 176.13674927]
[27.14746857 187.31871033]
[17.14929581 198.50068665]
[8.64246941 210.85519409]
[1.76305640 224.18463135]
[-5.11635590 237.51405334]
[-10.25831604 251.60519409]
[-13.58057499 266.23266602]
[-16.90283394 280.86010742]
[-20.22509384 295.48757935]
[-23.54735374 310.11505127]
[-10.54319763 317.84466553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 209]
[18 208]
[19 207]
[20 206]
[21 205]
[39 204]
[40 203]
[41 202]
[59 201]
[60 200]
[61 199]
[65 198]
[66 197]
[67 196]
[68 195]
[69 193]
[70 192]
[71 190]
[72 189]
[73 184]
[74 183]
[75 182]
[76 181]
[78 178]
[79 177]
[80 176]
[81 175]
[82 174]
[89 166]
[90 165]
[92 163]
[94 161]
[95 160]
[96 159]
[97 158]
[98 157]
[99 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
