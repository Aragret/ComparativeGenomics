%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[148.42730713 617.63208008]
[145.54203796 602.91223145]
[142.65676880 588.19232178]
[139.66198730 573.49432373]
[136.55787659 558.81903076]
[133.45376587 544.14373779]
[129.91409302 529.56732178]
[125.94200134 515.10278320]
[121.96990204 500.63827515]
[117.99781036 486.17376709]
[114.02571106 471.70922852]
[110.05361938 457.24472046]
[106.08152008 442.78018188]
[102.10942078 428.31567383]
[98.13732910 413.85113525]
[94.16522980 399.38662720]
[90.19313812 384.92208862]
[87.14167786 399.60842896]
[80.12708282 412.86721802]
[69.70253754 423.65280151]
[56.69016647 431.11459351]
[42.11618805 434.66412354]
[27.12996292 434.02145386]
[12.91336536 429.23727417]
[0.58757704 420.68890381]
[-8.87533855 409.05044556]
[-14.72909737 395.23983765]
[-16.51204681 380.34616089]
[-14.08357716 365.54406738]
[-7.63520622 352.00085449]
[2.32451987 340.78460693]
[15.01013565 332.77990723]
[29.42119980 328.61804199]
[44.42119598 328.62719727]
[58.82716370 332.80670166]
[71.50299072 340.82687378]
[81.44899750 352.05529785]
[87.88184357 365.60968018]
[80.52690887 352.65768433]
[88.67166138 339.09399414]
[89.11827087 324.10064697]
[89.45324707 309.10440063]
[89.67657471 294.10604858]
[76.23245239 284.68621826]
[70.99976349 268.95153809]
[76.22868347 253.04052734]
[90.04669189 243.28559875]
[90.04669189 228.28559875]
[90.04669189 213.28559875]
[90.04669189 198.28559875]
[82.20066833 191.73939514]
[79.18981171 181.74523926]
[82.23946381 171.53349304]
[90.57408142 164.54472351]
[91.02069092 149.55137634]
[91.46729279 134.55802917]
[91.91390228 119.56468201]
[80.32521057 107.81436157]
[80.69376373 91.31491089]
[92.79557800 80.09377289]
[93.01890564 65.09543610]
[93.24223328 50.09709549]
[85.71125031 36.18325806]
[93.63718414 23.57259369]
[93.86051178 8.57425594]
[94.08383942 -6.42408180]
[91.08255005 -15.05136681]
[94.42380524 -21.64361954]
[94.87040710 -36.63697052]
[82.60462952 -43.36106110]
[74.47140503 -54.66003799]
[72.01169586 -68.29557800]
[75.64939880 -81.59656525]
[84.61962891 -91.98230743]
[97.12867737 -97.46326447]
[97.79846191 -112.44830322]
[98.46824646 -127.43334198]
[99.13803101 -142.41838074]
[87.17445374 -152.12297058]
[83.26492310 -166.83924866]
[88.70615387 -180.86982727]
[101.21604919 -188.90975952]
[101.88584137 -203.89479065]
[99.47879028 -208.52655029]
[99.12452698 -213.15557861]
[100.47824097 -217.00036621]
[102.93495178 -219.52958679]
[104.27318573 -234.46977234]
[105.61141968 -249.40995789]
[106.94965363 -264.35012817]
[108.17662811 -279.29986572]
[109.29228210 -294.25833130]
[102.60282135 -308.59576416]
[111.26529694 -320.71231079]
[112.38095093 -335.67074585]
[113.49659729 -350.62921143]
[111.01412964 -359.41983032]
[114.74183655 -365.80151367]
[116.08007812 -380.74169922]
[102.15981293 -386.66467285]
[90.75248718 -396.60086060]
[82.97566223 -409.57687378]
[79.59124756 -424.32138062]
[80.93080139 -439.38992310]
[86.86309052 -453.30621338]
[96.80693054 -464.70687866]
[109.78812408 -472.47500610]
[124.53491211 -475.84954834]
[139.60255432 -474.49987793]
[153.51486206 -468.55825806]
[164.90885925 -458.60678101]
[172.66828918 -445.62039185]
[176.03294373 -430.87133789]
[174.67318726 -415.80462646]
[168.72225952 -401.89630127]
[158.76315308 -390.50897217]
[145.77156067 -382.75823975]
[131.02026367 -379.40347290]
[129.68202209 -364.46328735]
[128.45504761 -349.51354980]
[127.33940125 -334.55511475]
[126.22375488 -319.59664917]
[132.99301147 -306.32916260]
[124.25073242 -293.14266968]
[123.13508606 -278.18423462]
[125.77238464 -271.28015137]
[121.88983917 -263.01190186]
[120.55160522 -248.07171631]
[119.21337128 -233.13153076]
[117.87513733 -218.19134521]
[116.87088013 -203.22500610]
[116.20109558 -188.23997498]
[127.94381714 -179.11602783]
[132.11160278 -164.65596008]
[126.90473938 -150.34715271]
[114.12306976 -141.74859619]
[113.45328522 -126.76355743]
[112.78350067 -111.77851868]
[112.11371613 -96.79347992]
[125.94158173 -88.43271637]
[133.71096802 -74.15711975]
[133.21812439 -57.81777954]
[124.50292206 -43.87716293]
[109.86376190 -36.19036484]
[109.41715240 -21.19701385]
[109.08217621 -6.20075417]
[108.85884857 8.79758358]
[108.63552094 23.79592133]
[116.18247223 36.63697815]
[108.24057007 50.32042313]
[108.01724243 65.31876373]
[107.79391479 80.31710052]
[117.64116669 88.29740143]
[121.16455078 100.47275543]
[117.10102081 112.47864532]
[106.90724945 120.01128387]
[106.46064758 135.00463867]
[106.01403809 149.99798584]
[105.56743622 164.99133301]
[115.91379547 182.29206848]
[105.04669189 198.28559875]
[105.04669189 213.28559875]
[105.04669189 228.28559875]
[105.04669189 243.28559875]
[116.76986694 250.53529358]
[123.32797241 262.53570557]
[123.10188293 276.10104370]
[116.25758362 287.68981934]
[104.67491150 294.32937622]
[104.45158386 309.32772827]
[107.45288086 317.95498657]
[104.11161804 324.54724121]
[103.66501617 339.54058838]
[110.98799896 353.56503296]
[102.87519073 366.05627441]
[104.65766144 380.95001221]
[108.62975311 395.41452026]
[112.60185242 409.87905884]
[116.57394409 424.34356689]
[120.54604340 438.80810547]
[124.51814270 453.27261353]
[128.49023438 467.73715210]
[132.46232605 482.20166016]
[136.43443298 496.66619873]
[140.40652466 511.13070679]
[144.37861633 525.59521484]
[147.57463074 528.53454590]
[149.47767639 531.99041748]
[150.08412170 535.49291992]
[149.54335022 538.61926270]
[148.12907410 541.03961182]
[151.23318481 555.71490479]
[154.33729553 570.39019775]
[159.17485046 578.13848877]
[157.37664795 585.30706787]
[160.26193237 600.02691650]
[163.14720154 614.74682617]
[178.05459595 617.71966553]
[190.68679810 626.17523193]
[199.11747742 638.82403564]
[202.06101990 653.73724365]
[199.06855774 668.64068604]
[190.59642029 681.26177979]
[177.93653870 689.67578125]
[163.01947021 692.59973145]
[148.11994934 689.58764648]
[135.51004028 681.09893799]
[127.11266327 668.42797852]
[124.20836639 653.50708008]
[127.24002838 638.61151123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 193]
[5 192]
[6 191]
[7 186]
[8 185]
[9 184]
[10 183]
[11 182]
[12 181]
[13 180]
[14 179]
[15 178]
[16 177]
[17 176]
[38 175]
[40 173]
[41 172]
[42 170]
[43 169]
[47 164]
[48 163]
[49 162]
[50 161]
[54 159]
[55 158]
[56 157]
[57 156]
[60 152]
[61 151]
[62 150]
[64 148]
[65 147]
[66 146]
[68 145]
[69 144]
[75 139]
[76 138]
[77 137]
[78 136]
[82 132]
[83 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 125]
[92 124]
[94 122]
[95 121]
[96 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
