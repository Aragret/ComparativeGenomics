%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[74.59967041 733.08526611]
[59.68666077 731.42645264]
[44.90723038 728.83453369]
[30.31971550 725.31976318]
[15.98168087 720.89593506]
[1.94971490 715.58050537]
[-11.72080421 709.39453125]
[-24.97592545 702.36236572]
[-37.76333618 694.51184082]
[-50.03256989 685.87377930]
[-61.73520660 676.48242188]
[-72.82505798 666.37475586]
[-83.25836182 655.59069824]
[-92.99393463 644.17285156]
[-101.99336243 632.16619873]
[-110.22113037 619.61816406]
[-117.64475250 606.57824707]
[-124.23494720 593.09790039]
[-129.96569824 579.23040771]
[-134.81437683 565.03039551]
[-138.76187134 550.55401611]
[-141.79258728 535.85827637]
[-143.89457703 521.00122070]
[-145.05952454 506.04156494]
[-145.28285217 491.03823853]
[-144.56367493 476.05050659]
[-142.90481567 461.13751221]
[-140.31282043 446.35809326]
[-136.79794312 431.77059937]
[-132.37403870 417.43258667]
[-127.05857849 403.40063477]
[-120.87252808 389.73016357]
[-113.84030151 376.47506714]
[-105.98965454 363.68768311]
[-97.35157013 351.41851807]
[-87.96014404 339.71591187]
[-77.85243225 328.62612915]
[-67.06832886 318.19287109]
[-55.65039444 308.45736694]
[-43.64369202 299.45797729]
[-31.09560585 291.23028564]
[-18.05565643 283.80673218]
[-4.57530880 277.21661377]
[9.29223728 271.48593140]
[23.49225044 266.63732910]
[37.96869278 262.68991089]
[52.66442871 259.65927124]
[67.52146149 257.55737305]
[82.48116302 256.39248657]
[82.25783539 241.39414978]
[82.03450775 226.39581299]
[81.81118011 211.39747620]
[72.10533905 222.83410645]
[57.55856705 226.49354553]
[43.59645462 221.01089478]
[35.42651749 208.43107605]
[36.09594727 193.44601440]
[45.35506058 181.64479065]
[59.75043488 177.42897034]
[73.91295624 182.37094116]
[82.56069946 194.62858582]
[84.12121582 179.70997620]
[85.68173981 164.79136658]
[79.31050873 151.32821655]
[88.44152069 138.40788269]
[90.00204468 123.48927307]
[91.56256866 108.57066345]
[92.90080261 93.63047791]
[94.01644897 78.67202759]
[95.13209534 63.71357346]
[96.24774933 48.75511932]
[89.55828857 34.41769791]
[98.22077179 22.30115128]
[99.33641815 7.34269810]
[92.64695740 -6.99472475]
[101.30944061 -19.11127090]
[102.42508698 -34.06972504]
[87.63951874 -36.67079544]
[73.18640900 -40.73112869]
[59.20940781 -46.21036911]
[45.84742737 -53.05405807]
[33.23326874 -61.19417953]
[21.49230003 -70.54983521]
[10.74120903 -81.02803040]
[1.08684957 -92.52463531]
[-7.37482595 -104.92539215]
[-14.55971909 -118.10704041]
[-20.39642334 -131.93858337]
[-24.82692719 -146.28254700]
[-27.80719757 -160.99636841]
[-29.30761337 -175.93382263]
[-29.31326675 -190.94642639]
[-27.82409668 -205.88500977]
[-24.85490417 -220.60105896]
[-20.43520355 -234.94836426]
[-14.60891533 -248.78428650]
[-7.43394852 -261.97134399]
[1.01838732 -274.37847900]
[10.66408730 -285.88235474]
[21.40728569 -296.36862183]
[33.14120865 -305.73312378]
[45.74923325 -313.88275146]
[59.10606003 -320.73648071]
[73.07893372 -326.22625732]
[87.52897644 -330.29745483]
[102.31258392 -332.90966797]
[117.28282166 -334.03689575]
[132.29089355 -333.66793823]
[147.18766785 -331.80648804]
[161.82505798 -328.47103882]
[176.05760193 -323.69473267]
[189.74385071 -317.52502441]
[202.74777222 -310.02322388]
[214.94012451 -301.26394653]
[226.19973755 -291.33419800]
[236.41470337 -280.33270264]
[245.48348999 -268.36877441]
[253.31597900 -255.56130981]
[259.83432007 -242.03764343]
[264.97372437 -227.93212891]
[268.68310547 -213.38500977]
[270.92559814 -198.54081726]
[271.67895508 -183.54711914]
[270.93563843 -168.55291748]
[268.70306396 -153.70724487]
[265.00341797 -139.15762329]
[259.87344360 -125.04869080]
[253.36416626 -111.52065277]
[245.54025269 -98.70796204]
[236.47946167 -86.73796844]
[226.27186584 -75.72962952]
[215.01890564 -65.79235840]
[202.83241272 -57.02491379]
[189.83351135 -49.51443863]
[176.15139771 -43.33557510]
[161.92204285 -38.54973602]
[147.28688049 -35.20448303]
[132.39137268 -33.33306122]
[117.38353729 -32.95407486]
[116.26789093 -17.99562263]
[123.03714752 -4.72812843]
[114.29486847 8.45834637]
[113.17922211 23.41679955]
[119.94847870 36.68429565]
[111.20619965 49.87076950]
[110.09055328 64.82922363]
[108.97490692 79.78767395]
[107.85925293 94.74613190]
[110.29347229 99.39247894]
[109.95115662 105.07192230]
[106.48117065 110.13118744]
[104.92064667 125.04979706]
[103.36012268 139.96839905]
[109.61974335 154.49864197]
[100.60034943 166.35189819]
[99.03982544 181.27049255]
[97.47930145 196.18910217]
[96.80951691 211.17414856]
[97.03284454 226.17248535]
[97.25617218 241.17082214]
[97.47949982 256.16915894]
[112.46724701 256.88812256]
[127.38027954 258.54672241]
[142.15972900 261.13848877]
[156.74728394 264.65313721]
[171.08535767 269.07681274]
[185.11738586 274.39205933]
[198.78796387 280.57791138]
[212.04316711 287.60992432]
[224.83065796 295.46035767]
[237.09997559 304.09826660]
[248.80271912 313.48950195]
[259.89266968 323.59704590]
[270.32608032 334.38098145]
[280.06176758 345.79876709]
[289.06134033 357.80532837]
[297.28921509 370.35327148]
[304.71298218 383.39309692]
[311.30331421 396.87335205]
[317.03421021 410.74081421]
[321.88305664 424.94073486]
[325.83068848 439.41711426]
[328.86157227 454.11282349]
[330.96371460 468.96981812]
[332.12881470 483.92950439]
[332.35229492 498.93283081]
[331.63327026 513.92053223]
[329.97457886 528.83355713]
[327.38275146 543.61303711]
[323.86801147 558.20056152]
[319.44424438 572.53863525]
[314.12893677 586.57061768]
[307.94302368 600.24114990]
[300.91094971 613.49633789]
[293.06042480 626.28375244]
[284.42245483 638.55303955]
[275.03115845 650.25573730]
[264.92355347 661.34564209]
[254.13957214 671.77899170]
[242.72174072 681.51464844]
[230.71513367 690.51409912]
[218.16712952 698.74194336]
[205.12725830 706.16564941]
[191.64698792 712.75592041]
[177.77949524 718.48675537]
[163.57952881 723.33551025]
[149.10313416 727.28308105]
[134.40742493 730.31384277]
[119.55041504 732.41589355]
[104.59072876 733.58093262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 161]
[50 160]
[51 159]
[52 158]
[61 157]
[62 156]
[63 155]
[65 153]
[66 152]
[67 151]
[68 148]
[69 147]
[70 146]
[71 145]
[73 143]
[74 142]
[76 140]
[77 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
