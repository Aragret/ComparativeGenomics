%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[118.89582062 662.72222900]
[108.58736420 651.80932617]
[99.38028717 639.95245361]
[91.36055756 627.26232910]
[84.60306549 613.85742188]
[79.17089081 599.86291504]
[75.11476135 585.40942383]
[72.47254944 570.63189697]
[71.26892090 555.66839600]
[71.51511383 540.65856934]
[73.20883942 525.74261475]
[76.33426666 511.05969238]
[80.86222839 496.74700928]
[86.75044250 482.93814087]
[93.94393158 469.76205444]
[102.37552643 457.34176636]
[111.96650696 445.79324341]
[122.62731934 435.22430420]
[134.25842285 425.73361206]
[146.75122070 417.40982056]
[159.98907471 410.33062744]
[173.84837341 404.56216431]
[169.44737244 390.22232056]
[165.04637146 375.88244629]
[160.64537048 361.54260254]
[156.24436951 347.20275879]
[151.27671814 341.73062134]
[151.88632202 332.61657715]
[147.69931030 318.21276855]
[144.01956177 315.16836548]
[142.21322632 309.78002930]
[143.60893250 303.31753540]
[139.85263062 288.79550171]
[129.17469788 278.41131592]
[133.20962524 263.11328125]
[122.53169250 252.72911072]
[126.56661987 237.43107605]
[122.81032562 222.90901184]
[119.05402374 208.38696289]
[115.29772186 193.86489868]
[105.03736115 187.45774841]
[101.78907776 175.38992310]
[107.82089233 163.98904419]
[97.29874420 153.44703674]
[101.56099701 138.21076965]
[98.02132416 123.63439941]
[94.48165131 109.05802155]
[90.40198517 94.62347412]
[85.78797150 80.35073853]
[81.17396545 66.07800293]
[69.56685638 55.32692337]
[73.01410675 40.83672714]
[68.40009308 26.56399536]
[63.46850204 12.39786053]
[58.22178268 -1.65461123]
[43.75014877 -13.04114914]
[47.32742310 -30.22166252]
[41.87206650 -44.19446182]
[36.95752335 -48.61699295]
[35.26783752 -54.04303741]
[36.46911621 -58.66537094]
[31.43220139 -72.79440308]
[19.51014519 -83.19512939]
[22.52443314 -97.78153992]
[17.48751831 -111.91056824]
[12.45060158 -126.03959656]
[7.66991138 -130.60649109]
[6.14252663 -136.08044434]
[7.48089981 -140.66496277]
[2.86689043 -154.93769836]
[-1.74711871 -169.21041870]
[-6.36112785 -183.48315430]
[-18.97923470 -188.19462585]
[-26.47058105 -199.15319824]
[-26.28523827 -212.23171997]
[-18.71490288 -222.65858459]
[-23.11590195 -236.99842834]
[-27.51689911 -251.33828735]
[-42.44141388 -249.48623657]
[-57.46078110 -250.25415039]
[-72.11858368 -253.61865234]
[-85.96939087 -259.47750854]
[-98.59228516 -267.65270996]
[-109.60367584 -277.89578247]
[-118.66893768 -289.89544678]
[-125.51258850 -303.28707886]
[-129.92665100 -317.66369629]
[-131.77700806 -332.58840942]
[-131.00740051 -347.60769653]
[-127.64122772 -362.26510620]
[-121.78079224 -376.11523438]
[-113.60417175 -388.73721313]
[-103.35985565 -399.74743652]
[-91.35916138 -408.81134033]
[-77.96675873 -415.65347290]
[-63.58964157 -420.06591797]
[-48.66470718 -421.91458130]
[-33.64551544 -421.14324951]
[-18.98847389 -417.77542114]
[-5.13899755 -411.91342163]
[7.48204327 -403.73538208]
[18.49110985 -393.48980713]
[27.55364990 -381.48806763]
[34.39426041 -368.09490967]
[38.80506897 -353.71728516]
[40.65203094 -338.79214478]
[39.87901688 -323.77304077]
[36.50952530 -309.11639404]
[30.64594460 -295.26757812]
[22.46646690 -282.64746094]
[12.21965504 -271.63955688]
[0.21689838 -262.57836914]
[-13.17705250 -255.73927307]
[-8.77605438 -241.39942932]
[-4.37505674 -227.05958557]
[10.80578232 -219.82211304]
[16.16051483 -203.52360535]
[7.91160536 -188.09716797]
[12.52561474 -173.82443237]
[17.13962364 -159.55169678]
[21.75363350 -145.27897644]
[26.57963181 -131.07650757]
[31.61654663 -116.94748688]
[36.65346146 -102.81845093]
[48.21524811 -93.42832947]
[45.56122971 -77.83132172]
[50.59814835 -63.70228958]
[55.84486389 -49.64981842]
[61.30022049 -35.67702103]
[72.24925232 -30.53451538]
[76.90855408 -18.93819427]
[72.27425385 -6.90132952]
[77.52097321 7.15114212]
[80.55973053 8.93951416]
[82.88325500 12.28859043]
[83.76742554 16.84617043]
[82.67282867 21.94998550]
[87.28683472 36.22272110]
[98.56391907 45.95291901]
[95.44669342 61.46399689]
[100.06070709 75.73673248]
[104.67471313 90.00946045]
[113.72447968 78.04694366]
[128.71490479 77.51116180]
[138.59561157 88.79706573]
[136.08291626 103.58511353]
[123.02906799 110.97410583]
[109.05802155 105.51834869]
[112.59769440 120.09472656]
[116.13736725 134.67109680]
[126.91269684 146.25570679]
[122.39727020 160.44937134]
[135.41328430 173.47491455]
[129.81977844 190.10859680]
[133.57608032 204.63066101]
[137.33238220 219.15270996]
[141.08868408 233.67477417]
[152.03529358 245.09765625]
[147.73168945 259.35699463]
[158.67829895 270.77987671]
[154.37469482 285.03918457]
[158.13099670 299.56124878]
[162.10308838 314.02575684]
[166.29010010 328.42956543]
[170.58422852 342.80175781]
[174.98521423 357.14160156]
[179.38621521 371.48147583]
[183.78721619 385.82131958]
[188.18821716 400.16116333]
[202.89736938 397.16177368]
[217.82734680 395.59606934]
[232.83872986 395.47863770]
[247.79136658 396.81057739]
[262.54565430 399.57946777]
[276.96380615 403.75942993]
[290.91122437 409.31143188]
[304.25769043 416.18368530]
[316.87857056 424.31198120]
[328.65600586 433.62042236]
[339.48007202 444.02209473]
[349.24969482 455.41992188]
[357.87362671 467.70742798]
[365.27139282 480.76992798]
[371.37387085 494.48544312]
[376.12411499 508.72589111]
[379.47775269 523.35833740]
[381.40350342 538.24615479]
[381.88333130 553.25036621]
[380.91281128 568.23077393]
[378.50097656 583.04760742]
[374.67037964 597.56250000]
[369.45672607 611.63989258]
[362.90875244 625.14843750]
[355.08755493 637.96185303]
[346.06619263 649.96063232]
[335.92889404 661.03271484]
[324.77029419 671.07464600]
[312.69458008 679.99273682]
[299.81448364 687.70373535]
[286.25033569 694.13562012]
[272.12872314 699.22833252]
[257.58151245 702.93426514]
[242.74452209 705.21893311]
[227.75631714 706.06091309]
[212.75680542 705.45233154]
[197.88606262 703.39898682]
[183.28291321 699.91992188]
[169.08372498 695.04772949]
[155.42106628 688.82781982]
[142.42250061 681.31829834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 169]
[23 168]
[24 167]
[25 166]
[26 165]
[28 164]
[29 163]
[32 162]
[33 161]
[35 159]
[37 157]
[38 156]
[39 155]
[40 154]
[43 152]
[45 150]
[46 149]
[47 148]
[48 142]
[49 141]
[50 140]
[52 138]
[53 137]
[54 133]
[55 132]
[57 129]
[58 128]
[61 127]
[62 126]
[64 124]
[65 123]
[66 122]
[69 121]
[70 120]
[71 119]
[72 118]
[76 115]
[77 114]
[78 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
