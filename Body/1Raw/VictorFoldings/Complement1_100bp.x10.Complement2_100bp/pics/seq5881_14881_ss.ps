%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[133.31423950 432.90277100]
[131.53176880 418.00903320]
[129.74929810 403.11532593]
[127.96683502 388.22161865]
[125.96282196 373.35607910]
[123.73770142 358.52203369]
[121.51258850 343.68798828]
[119.28746796 328.85394287]
[117.06235504 314.01989746]
[107.52268219 302.58120728]
[113.12724304 287.78594971]
[110.90212250 272.95190430]
[108.29923248 270.57339478]
[106.71907043 266.81597900]
[106.79718018 262.17410278]
[108.92427063 257.40728760]
[107.36374664 242.48867798]
[98.34435272 230.63540649]
[104.60396576 216.10517883]
[95.58457184 204.25192261]
[101.84419250 189.72167969]
[100.28366852 174.80307007]
[98.72314453 159.88447571]
[97.16262054 144.96586609]
[95.60209656 130.04725647]
[94.04157257 115.12865448]
[85.45252991 107.26293182]
[84.32715607 95.67092133]
[91.24282074 86.29996490]
[82.30518341 73.24510956]
[88.87615967 59.87830353]
[87.53792572 44.93812180]
[86.19969177 29.99793434]
[84.86145782 15.05774975]
[83.52322388 0.11756513]
[82.18498993 -14.82261944]
[73.24735260 -27.87747383]
[79.81832886 -41.24428177]
[78.48009491 -56.18446732]
[77.14186096 -71.12464905]
[71.34853363 -57.28856277]
[61.61089706 -45.87898636]
[48.85707855 -37.98340988]
[34.30268860 -34.35439682]
[19.33496094 -35.33782959]
[5.38052511 -40.83998489]
[-6.23057365 -50.33642578]
[-14.39163780 -62.92201233]
[-18.32480812 -77.39717102]
[-17.65519714 -92.38221741]
[-12.44663048 -106.44887543]
[-3.19555473 -118.25640106]
[9.21627617 -126.67936707]
[23.60584641 -130.91496277]
[38.60163498 -130.55947876]
[52.77433395 -125.64678192]
[64.77309418 -116.64513397]
[73.45427704 -104.41250610]
[77.99060822 -90.11372375]
[80.65641022 -104.87493896]
[83.32220459 -119.63615417]
[85.98799896 -134.39736938]
[88.65379333 -149.15858459]
[91.31958771 -163.91979980]
[93.98538208 -178.68103027]
[84.81976318 -166.80703735]
[72.59613037 -158.11320496]
[58.37195206 -153.35162354]
[43.37776184 -152.93420410]
[28.91070557 -156.89706421]
[16.22233009 -164.89738464]
[6.41030741 -176.24305725]
[0.32347378 -189.95256042]
[-1.51159775 -204.83988953]
[1.06384456 -219.61712646]
[7.82699919 -233.00592041]
[18.19278526 -243.84799194]
[31.26445961 -251.20539856]
[45.91119003 -254.44163513]
[60.86589050 -253.27674866]
[74.83483124 -247.81150818]
[86.60955048 -238.51872253]
[95.17142487 -226.20230103]
[99.77976227 -211.92773438]
[100.03636169 -196.93341064]
[106.71655273 -210.36378479]
[113.39675140 -223.79415894]
[111.82890320 -242.14146423]
[126.82081604 -251.26338196]
[133.30030823 -264.79171753]
[139.77981567 -278.32006836]
[146.25930786 -291.84841919]
[152.73880005 -305.37677002]
[158.91456604 -319.04641724]
[164.78353882 -332.85061646]
[170.65249634 -346.65478516]
[176.52145386 -360.45895386]
[182.39041138 -374.26315308]
[188.25936890 -388.06732178]
[175.48623657 -395.98864746]
[164.07205200 -405.76702881]
[154.28437805 -417.17324829]
[146.35266113 -429.93994141]
[140.46284485 -443.76782227]
[136.75296021 -458.33276367]
[135.30999756 -473.29330444]
[136.16778564 -488.29879761]
[139.30619812 -502.99746704]
[144.65168762 -517.04473877]
[152.07891846 -530.11138916]
[161.41381836 -541.89105225]
[172.43754578 -552.10760498]
[184.89167786 -560.52154541]
[198.48429871 -566.93566895]
[212.89677429 -571.19964600]
[227.79122925 -573.21343994]
[242.81854248 -572.92993164]
[257.62643433 -570.35571289]
[271.86779785 -565.55114746]
[285.20880127 -558.62884521]
[297.33670044 -549.75109863]
[307.96719360 -539.12597656]
[316.85110474 -527.00256348]
[323.78018188 -513.66510010]
[328.59197998 -499.42617798]
[331.17370605 -484.61956787]
[331.46484375 -469.59240723]
[329.45858765 -454.69692993]
[325.20193481 -440.28228760]
[318.79470825 -426.68643188]
[310.38705444 -414.22802734]
[300.17611694 -403.19912720]
[288.40118408 -393.85824585]
[275.33834839 -386.42437744]
[261.29376221 -381.07177734]
[246.59671021 -377.92590332]
[231.59165955 -377.06051636]
[216.63037109 -378.49588013]
[202.06355286 -382.19836426]
[196.19459534 -368.39416504]
[190.32563782 -354.58999634]
[184.45666504 -340.78582764]
[178.58770752 -326.98165894]
[172.71875000 -313.17745972]
[173.69152832 -309.78836060]
[173.07110596 -305.75970459]
[170.57473755 -301.84542847]
[166.26715088 -298.89727783]
[159.78765869 -285.36892700]
[153.30815125 -271.84057617]
[146.82865906 -258.31222534]
[140.34916687 -244.78388977]
[144.07157898 -233.27432251]
[138.78411865 -221.95059204]
[126.82712555 -217.11396790]
[120.14693451 -203.68359375]
[113.46673584 -190.25321960]
[108.74660492 -176.01522827]
[106.08080292 -161.25401306]
[103.41500854 -146.49279785]
[100.74921417 -131.73158264]
[98.08341980 -116.97035980]
[95.41762543 -102.20914459]
[92.75183105 -87.44792175]
[92.08204651 -72.46288300]
[93.42028046 -57.52270126]
[94.75851440 -42.58251572]
[103.60043335 -30.59628487]
[97.12517548 -16.16085434]
[98.46340942 -1.22066903]
[99.80164337 13.71951580]
[101.13987732 28.65970039]
[102.47811127 43.59988785]
[103.81634521 58.54006958]
[112.65826416 70.52630615]
[106.18300629 84.96173096]
[116.18365479 98.42885590]
[108.96018219 113.56813049]
[110.52070618 128.48674011]
[112.08122253 143.40534973]
[113.64174652 158.32394409]
[115.20227051 173.24255371]
[116.76279449 188.16116333]
[125.89380646 201.08149719]
[119.52257538 214.54464722]
[128.65359497 227.46499634]
[122.28235626 240.92814636]
[123.84287262 255.84675598]
[125.73616791 270.72677612]
[127.96128845 285.56082153]
[137.66011047 298.06057739]
[131.89639282 311.79479980]
[134.12152100 326.62881470]
[136.34663391 341.46286011]
[138.57174683 356.29690552]
[140.79685974 371.13095093]
[144.60983276 376.53213501]
[145.05577087 382.19766235]
[142.86054993 386.43914795]
[144.64302063 401.33285522]
[146.42549133 416.22656250]
[148.20794678 431.12030029]
[162.13005066 437.76696777]
[170.22917175 450.89739990]
[169.92088318 466.32168579]
[161.30358887 479.11801147]
[147.12701416 485.20309448]
[131.91485596 482.63522339]
[120.52127075 472.23379517]
[116.58189392 457.31787109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[11 190]
[12 189]
[16 188]
[17 187]
[19 185]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[26 178]
[29 176]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 169]
[38 167]
[39 166]
[40 165]
[59 164]
[60 163]
[61 162]
[62 161]
[63 160]
[64 159]
[65 158]
[85 157]
[86 156]
[87 155]
[89 152]
[90 151]
[91 150]
[92 149]
[93 148]
[94 144]
[95 143]
[96 142]
[97 141]
[98 140]
[99 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
