%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[20.77051353 854.65417480]
[5.90580845 856.69531250]
[-9.05180168 857.87670898]
[-24.05262756 858.19433594]
[-39.04684067 857.64727783]
[-53.98463058 856.23724365]
[-68.81636810 853.96893311]
[-83.49279785 850.84991455]
[-97.96515656 846.89056396]
[-112.18536377 842.10394287]
[-126.10619354 836.50610352]
[-139.68139648 830.11547852]
[-152.86585999 822.95343018]
[-165.61581421 815.04364014]
[-177.88890076 806.41247559]
[-189.64433289 797.08856201]
[-200.84306335 787.10284424]
[-211.44790649 776.48858643]
[-221.42361450 765.28094482]
[-230.73706055 753.51721191]
[-239.35731506 741.23645020]
[-247.25572205 728.47943115]
[-254.40605164 715.28857422]
[-260.78454590 701.70770264]
[-266.37002563 687.78192139]
[-271.14395142 673.55743408]
[-275.09042358 659.08154297]
[-278.19635010 644.40234375]
[-280.45144653 629.56860352]
[-281.84817505 614.62957764]
[-282.38189697 599.63488770]
[-282.05087280 584.63433838]
[-280.85620117 569.67779541]
[-278.80181885 554.81488037]
[-275.89456177 540.09509277]
[-272.14410400 525.56719971]
[-267.56286621 511.27947998]
[-262.16613770 497.27944946]
[-255.97175598 483.61358643]
[-249.00036621 470.32730103]
[-241.27511597 457.46472168]
[-232.82164001 445.06857300]
[-223.66802979 433.18005371]
[-213.84471130 421.83862305]
[-203.38430786 411.08197021]
[-192.32156372 400.94583130]
[-180.69322205 391.46386719]
[-168.53791809 382.66760254]
[-155.89604187 374.58621216]
[-142.80957031 367.24661255]
[-129.32199097 360.67309570]
[-115.47809601 354.88757324]
[-101.32387543 349.90924072]
[-86.90635681 345.75463867]
[-72.27342987 342.43753052]
[-57.47370148 339.96899414]
[-42.55633545 338.35717773]
[-27.57088661 337.60748291]
[-12.56713581 337.72235107]
[2.40507483 338.70144653]
[17.29600906 340.54150391]
[32.05620193 343.23638916]
[35.59587479 328.66000366]
[39.13554764 314.08364868]
[42.67522049 299.50726318]
[46.21489334 284.93087769]
[37.07003403 276.94671631]
[32.15851593 265.76596069]
[32.46860504 253.48568726]
[38.00279999 242.43795776]
[47.76572800 234.74681091]
[59.94263458 231.92002869]
[63.91473007 217.45549011]
[67.88682556 202.99096680]
[71.85892487 188.52644348]
[75.50701141 173.97682190]
[78.82926941 159.34936523]
[82.15152740 144.72190857]
[85.47379303 130.09445190]
[88.79605103 115.46698761]
[81.16312408 103.15095520]
[84.37232208 89.02129364]
[96.57649231 81.21075439]
[99.89875031 66.58329010]
[103.22100830 51.95582962]
[106.54326630 37.32837296]
[109.86553192 22.70091057]
[103.66464233 11.39110088]
[106.73289490 -0.72374851]
[116.89672089 -7.28295183]
[120.43639374 -21.85932732]
[123.97606659 -36.43570328]
[125.64760590 -51.34227753]
[125.42427826 -66.34061432]
[125.20095062 -81.33895111]
[124.97762299 -96.33728790]
[110.57791901 -101.01994324]
[98.48039246 -110.12644958]
[89.99727631 -122.66899872]
[86.04877472 -137.28706360]
[87.06317902 -152.39500427]
[92.93045044 -166.35400391]
[103.01416779 -177.64990234]
[116.22051239 -185.05741882]
[131.11695862 -187.77301025]
[146.08766174 -185.50213623]
[159.50869751 -178.49111938]
[169.92427063 -167.50045776]
[176.20455933 -153.72233582]
[177.66833496 -138.65130615]
[174.15681458 -123.92214966]
[166.05090332 -111.13258362]
[154.22985840 -101.66992950]
[139.97596741 -96.56061554]
[140.19929504 -81.56227875]
[140.42262268 -66.56394196]
[140.64595032 -51.56560516]
[147.56840515 -64.87273407]
[158.39109802 -75.25875092]
[171.97187805 -81.62759399]
[186.87754822 -83.30713654]
[201.53507996 -80.12014771]
[214.39761353 -72.40294647]
[224.10774231 -60.96995163]
[229.64074707 -47.02771378]
[230.41268921 -32.04759216]
[226.34211731 -17.61046982]
[217.85861206 -5.23993540]
[205.85745239 3.75852084]
[191.60514832 8.43527031]
[176.60578918 8.29676437]
[162.44229126 3.35762048]
[150.60934448 -5.86092281]
[142.35572815 -18.38600922]
[138.55244446 -32.89603043]
[135.01277161 -18.31965446]
[131.47309875 -3.74327946]
[137.31364441 12.80528641]
[124.49298859 26.02317047]
[121.17073059 40.65063095]
[117.84847260 55.27809143]
[114.52620697 69.90554810]
[111.20394897 84.53301239]
[118.83687592 96.84904480]
[115.62767792 110.97870636]
[103.42350769 118.78924561]
[100.10124969 133.41670227]
[96.77899170 148.04417419]
[93.45673370 162.67163086]
[90.13446808 177.29908752]
[91.68004608 182.28489685]
[91.20600128 186.90318298]
[89.19053650 190.44619751]
[86.32344818 192.49855042]
[82.35134888 206.96307373]
[78.37925720 221.42759705]
[74.40715790 235.89212036]
[86.14736938 249.70968628]
[87.23346710 267.65124512]
[77.41899872 282.52160645]
[60.79126740 288.47055054]
[57.25159454 303.04693604]
[53.71192169 317.62332153]
[50.17224884 332.19967651]
[46.63257980 346.77606201]
[60.98485947 351.15072632]
[75.06126404 356.34500122]
[88.81504059 362.34164429]
[102.20048523 369.12066650]
[115.17314911 376.65963745]
[127.68993378 384.93344116]
[139.70925903 393.91461182]
[151.19117737 403.57333374]
[162.09757996 413.87753296]
[172.39222717 424.79293823]
[182.04089355 436.28329468]
[191.01156616 448.31048584]
[199.27442932 460.83447266]
[206.80203247 473.81375122]
[213.56936646 487.20510864]
[219.55395508 500.96411133]
[224.73591614 515.04504395]
[229.09803772 529.40118408]
[232.62582397 543.98474121]
[235.30755615 558.74731445]
[237.13433838 573.63989258]
[238.10009766 588.61297607]
[238.20161438 603.61682129]
[237.43856812 618.60156250]
[235.81347656 633.51751709]
[233.33175659 648.31506348]
[230.00163269 662.94500732]
[225.83416748 677.35882568]
[220.84323120 691.50860596]
[215.04537964 705.34735107]
[208.45986938 718.82904053]
[201.10859680 731.90899658]
[193.01597595 744.54364014]
[184.20887756 756.69110107]
[174.71656799 768.31103516]
[164.57058716 779.36474609]
[153.80461121 789.81555176]
[142.45443726 799.62878418]
[130.55775452 808.77178955]
[118.15407562 817.21417236]
[105.28462219 824.92797852]
[91.99212646 831.88757324]
[78.32076263 838.06976318]
[64.31593323 843.45404053]
[50.02416229 848.02252197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 165]
[63 164]
[64 163]
[65 162]
[66 161]
[72 157]
[73 156]
[74 155]
[75 154]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[83 143]
[84 142]
[85 141]
[86 140]
[87 139]
[90 137]
[91 136]
[92 135]
[93 117]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
