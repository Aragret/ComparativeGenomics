%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[106.44726562 670.99340820]
[95.01021576 661.27227783]
[84.49060822 650.56512451]
[74.97315216 638.95800781]
[66.53446960 626.54449463]
[59.24250412 613.42456055]
[53.15597153 599.70373535]
[48.32387924 585.49261475]
[44.78513336 570.90551758]
[42.56821823 556.05987549]
[41.69099426 541.07537842]
[42.16051483 526.07250977]
[43.97300720 511.17211914]
[47.11387634 496.49420166]
[51.55782700 482.15692139]
[57.26908875 468.27572632]
[64.20166779 454.96237183]
[72.29975128 442.32403564]
[81.49813843 430.46249390]
[91.72275543 419.47326660]
[102.89129639 409.44482422]
[114.91382599 400.45788574]
[127.69354248 392.58480835]
[141.12756348 385.88903809]
[155.10769653 380.42443848]
[150.92068481 366.02066040]
[146.73367310 351.61685181]
[142.54666138 337.21307373]
[138.35964966 322.80929565]
[134.17263794 308.40551758]
[129.98564148 294.00173950]
[126.30588531 290.95730591]
[124.49955750 285.56896973]
[125.89526367 279.10650635]
[122.13896179 264.58444214]
[114.60218048 277.55352783]
[100.53548431 282.76199341]
[86.36997986 277.82858276]
[78.58193207 265.00881958]
[80.73194885 250.16371155]
[91.83705902 240.08023071]
[106.82015991 239.36842346]
[118.83219910 248.35525513]
[116.60708618 233.52120972]
[114.38196564 218.68716431]
[112.15685272 203.85311890]
[102.61717224 192.41442871]
[108.22174072 177.61917114]
[105.99662018 162.78512573]
[103.22100830 148.04417419]
[99.89875031 133.41670227]
[96.57649231 118.78924561]
[84.37232208 110.97870636]
[81.16312408 96.84904480]
[88.79605103 84.53301239]
[85.47379303 69.90554810]
[82.15152740 55.27809143]
[71.54987335 43.53434753]
[76.27612305 29.40948105]
[72.95386505 14.78202152]
[69.63160706 0.15456158]
[64.80496216 14.35679722]
[54.67899323 25.42317581]
[40.96010208 31.48881912]
[25.96016312 31.53155708]
[12.20692921 25.54418945]
[2.01806283 14.53569412]
[-2.88943362 0.36119273]
[-1.68856096 -14.59066010]
[5.41831303 -27.80021477]
[17.23355484 -37.04143143]
[31.76609039 -40.75699997]
[46.56692886 -38.32078171]
[59.14187241 -30.14332390]
[67.37242889 -17.60112762]
[66.92581940 -32.59447861]
[66.47920990 -47.58782578]
[65.92100525 -62.57743835]
[65.25122070 -77.56247711]
[64.58142853 -92.54751587]
[50.15367889 -97.13720703]
[38.18918610 -106.36883545]
[30.12020683 -119.11292267]
[26.90430260 -133.82101440]
[28.91075897 -148.71382141]
[35.87828064 -161.99644470]
[46.94883728 -172.07472229]
[60.77329636 -177.74656677]
[60.10351181 -192.73159790]
[59.43372726 -207.71664429]
[58.76394272 -222.70167542]
[48.49645996 -237.98762512]
[57.18503189 -253.23478699]
[56.29221725 -268.20819092]
[55.39939880 -283.18157959]
[40.86480331 -287.48522949]
[28.68052673 -296.50296021]
[20.31788254 -309.14581299]
[16.78669930 -323.88714600]
[18.51338577 -338.94683838]
[25.28943443 -352.50634766]
[36.29660416 -362.92834473]
[50.20573044 -368.95431519]
[65.33721161 -369.85653687]
[79.86385345 -365.52612305]
[92.03148651 -356.48596191]
[100.37081909 -343.82772827]
[103.87483215 -329.07992554]
[102.12039948 -314.02343750]
[95.31936646 -300.47640991]
[84.29301453 -290.07470703]
[70.37280273 -284.07440186]
[71.26561737 -269.10101318]
[72.15843964 -254.12759399]
[80.99476624 -245.86650085]
[81.86112976 -233.39921570]
[73.74897766 -223.37145996]
[74.41876221 -208.38642883]
[75.08854675 -193.40138245]
[75.75833893 -178.41635132]
[90.03368378 -174.00048828]
[101.95923615 -164.95005798]
[110.08399200 -152.34201050]
[113.41111755 -137.68760681]
[111.52022552 -122.75125122]
[104.62039185 -109.33810425]
[93.52722168 -99.07586670]
[79.56646729 -93.21730042]
[80.23625946 -78.23226166]
[80.90604401 -63.24722290]
[84.34507751 -56.70544815]
[81.47256470 -48.03443146]
[81.91916656 -33.04108429]
[82.36577606 -18.04773331]
[84.25906372 -3.16769791]
[87.58132935 11.45976257]
[90.90358734 26.08722305]
[101.26760864 36.78471375]
[96.77899170 51.95582962]
[100.10124969 66.58329010]
[103.42350769 81.21075439]
[115.62767792 89.02129364]
[118.83687592 103.15095520]
[111.20394897 115.46698761]
[114.52620697 130.09445190]
[117.84847260 144.72190857]
[127.92938995 133.61447144]
[142.90783691 134.41821289]
[151.74226379 146.54061890]
[147.92025757 161.04553223]
[134.25926208 167.24044800]
[120.83066559 160.56001282]
[123.05577850 175.39405823]
[132.75460815 187.89378357]
[126.99089050 201.62800598]
[129.21600342 216.46205139]
[131.44113159 231.29609680]
[133.66624451 246.13014221]
[136.66102600 260.82815552]
[140.41731262 275.35018921]
[144.38941956 289.81472778]
[148.57643127 304.21850586]
[152.76344299 318.62228394]
[156.95045471 333.02606201]
[161.13746643 347.42987061]
[165.32447815 361.83364868]
[169.51148987 376.23742676]
[184.24252319 373.35601807]
[199.17256165 371.80670166]
[214.18136597 371.60195923]
[229.14811707 372.74343872]
[243.95227051 375.22192383]
[258.47467041 379.01748657]
[272.59835815 384.09957886]
[286.20962524 390.42724609]
[299.19891357 397.94955444]
[311.46157837 406.60595703]
[322.89892578 416.32672119]
[333.41885376 427.03359985]
[342.93667603 438.64038086]
[351.37573242 451.05361938]
[358.66809082 464.17337036]
[364.75503540 477.89398193]
[369.58758545 492.10498047]
[373.12677002 506.69198608]
[375.34414673 521.53747559]
[376.22180176 536.52203369]
[375.75274658 551.52490234]
[373.94070435 566.42535400]
[370.80029297 581.10333252]
[366.35678101 595.44073486]
[360.64593506 609.32214355]
[353.71377563 622.63568115]
[345.61605835 635.27429199]
[336.41806030 647.13610840]
[326.19375610 658.12561035]
[315.02554321 668.15441895]
[303.00326538 677.14172363]
[290.22378540 685.01519775]
[276.78997803 691.71136475]
[262.81002808 697.17639160]
[248.39643860 701.36627197]
[233.66529846 704.24725342]
[218.73521423 705.79608154]
[203.72640991 706.00036621]
[188.75970459 704.85845947]
[173.95561218 702.37951660]
[159.43333435 698.58349609]
[145.30979919 693.50097656]
[131.69871521 687.17291260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 167]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[31 161]
[34 160]
[35 159]
[43 158]
[44 157]
[45 156]
[46 155]
[48 153]
[49 152]
[50 146]
[51 145]
[52 144]
[55 141]
[56 140]
[57 139]
[59 137]
[60 136]
[61 135]
[75 134]
[76 133]
[77 132]
[78 130]
[79 129]
[80 128]
[88 120]
[89 119]
[90 118]
[91 117]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
