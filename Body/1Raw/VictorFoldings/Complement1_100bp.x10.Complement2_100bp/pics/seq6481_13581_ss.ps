%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[168.50662231 475.74291992]
[161.48309326 462.48233032]
[155.37080383 448.77783203]
[150.19766235 434.69198608]
[145.98725891 420.28903198]
[142.75878906 405.63467407]
[140.52702332 390.79580688]
[139.30210876 375.84011841]
[139.08964539 360.83584595]
[139.89060974 345.85147095]
[141.70133972 330.95535278]
[144.51358032 316.21548462]
[148.31448364 301.69906616]
[153.08673096 287.47238159]
[158.80853271 273.60034180]
[165.45378113 260.14620972]
[172.99215698 247.17138672]
[181.38926697 234.73509216]
[190.60679626 222.89404297]
[200.60267639 211.70230103]
[186.17234802 208.01249695]
[182.05557251 192.73628235]
[171.56806946 182.01190186]
[161.08056641 171.28752136]
[146.65023804 167.59770203]
[142.53346252 152.32148743]
[132.04595947 141.59710693]
[121.55845642 130.87272644]
[110.83408356 120.38523102]
[99.87817383 110.13983917]
[92.30773163 107.37200165]
[88.83685303 99.65941620]
[78.03469849 89.25204468]
[67.23254395 78.84467316]
[72.30744934 92.96009827]
[74.47828674 107.80218506]
[73.65858459 122.77976990]
[69.88099670 137.29631042]
[63.29598618 150.77360535]
[54.16582108 162.67486572]
[42.85416031 172.52607727]
[29.81154251 179.93486023]
[15.55744553 184.60614014]
[0.65960866 186.35383606]
[-14.28859425 185.10835266]
[-28.69178200 180.91929626]
[-41.97628021 173.95352173]
[-53.61297607 164.48846436]
[-63.13838196 152.90110779]
[-70.17310333 139.65298462]
[-74.43695068 125.27176666]
[-75.76009369 110.33023834]
[-74.08984375 95.42351532]
[-69.49270630 81.14533997]
[-62.15180588 68.06439209]
[-52.35951233 56.70169067]
[-40.50585556 47.50980377]
[-27.06295776 40.85483932]
[-12.56624889 37.00186539]
[2.40687513 36.10434341]
[17.26004028 38.19801712]
[31.40165138 43.19950485]
[44.26845169 50.90959167]
[55.34517288 61.01807785]
[43.11873245 50.97692490]
[45.69739532 36.30723953]
[40.24203873 22.33444023]
[34.78668213 8.36164188]
[33.49516678 23.30593872]
[28.83724403 37.56439972]
[21.05726433 50.38906097]
[10.56334591 61.10716248]
[-2.09402061 69.15645599]
[-16.25085449 74.11468506]
[-31.16451645 75.72175598]
[-46.05266571 73.89337158]
[-60.13430023 68.72543335]
[-72.67072296 60.48904800]
[-83.00430298 49.61627579]
[-90.59296417 36.67748642]
[-95.03860474 22.35141754]
[-96.10803223 7.38958931]
[-93.74514008 -7.42313290]
[-88.07387543 -21.30970192]
[-79.39175415 -33.54165649]
[-68.15421295 -43.47733307]
[-54.95075607 -50.59552765]
[-40.47400284 -54.52282715]
[-25.48338509 -55.05322266]
[-10.76527309 -52.15888596]
[2.90824723 -45.99164581]
[14.81989098 -36.87502670]
[24.34479713 -25.28726768]
[30.98386765 -11.83467770]
[30.98386765 -26.83467865]
[30.98386765 -41.83467865]
[30.98386765 -56.83467865]
[30.98386765 -71.83467865]
[30.98386765 -86.83467865]
[17.20999908 -93.41064453]
[7.66007280 -105.31700897]
[4.23023319 -120.18977356]
[7.60147762 -135.07592773]
[17.10444260 -147.01980591]
[30.85230827 -153.64996338]
[46.11542511 -153.64996338]
[59.86329269 -147.01980591]
[69.36625671 -135.07592773]
[72.73750305 -120.18977356]
[69.30766296 -105.31700897]
[59.75773621 -93.41064453]
[45.98386765 -86.83467865]
[45.98386765 -71.83467865]
[45.98386765 -56.83467865]
[45.98386765 -41.83467865]
[45.98386765 -26.83467865]
[45.98386765 -11.83467770]
[48.75947952 2.90628505]
[54.21483612 16.87908363]
[59.67019272 30.85188103]
[71.50643158 39.89360428]
[69.31797028 55.56272125]
[77.63991547 68.04251862]
[88.44207001 78.44989014]
[99.24422455 88.85726166]
[110.12356567 99.18392944]
[121.07947540 109.42932129]
[126.16430664 110.60897064]
[129.91329956 113.34729004]
[131.95642090 116.87442017]
[132.28283691 120.38523102]
[142.77033997 131.10960388]
[153.25784302 141.83398438]
[168.43830872 146.29087830]
[171.80494690 160.80001831]
[182.29244995 171.52439880]
[192.77995300 182.24877930]
[207.96041870 186.70567322]
[211.32705688 201.21479797]
[222.73924255 191.47134399]
[234.78317261 182.52053833]
[247.40388489 174.40325928]
[260.54382324 167.15650940]
[274.14297485 160.81336975]
[288.13937378 155.40278625]
[302.46908569 150.94943237]
[317.06674194 147.47364807]
[331.86575317 144.99128723]
[346.79858398 143.51365662]
[361.79711914 143.04751587]
[376.79287720 143.59500122]
[391.71746826 145.15359497]
[406.50280762 147.71618652]
[421.08142090 151.27110291]
[435.38674927 155.80210876]
[449.35357666 161.28851318]
[462.91815186 167.70532227]
[476.01858521 175.02322388]
[488.59509277 183.20884705]
[500.59030151 192.22483826]
[511.94946289 202.03005981]
[522.62078857 212.57975769]
[532.55548096 223.82582092]
[541.70837402 235.71690369]
[550.03759766 248.19879150]
[557.50512695 261.21447754]
[564.07696533 274.70462036]
[569.72308350 288.60766602]
[574.41772461 302.86013794]
[578.13946533 317.39706421]
[580.87133789 332.15203857]
[582.60083008 347.05780029]
[583.32012939 362.04632568]
[583.02593994 377.04919434]
[581.71954346 391.99798584]
[579.40692139 406.82449341]
[576.09863281 421.46102905]
[571.80981445 435.84082031]
[566.55999756 449.89828491]
[560.37310791 463.56924438]
[553.27740479 476.79135132]
[545.30529785 489.50427246]
[536.49310303 501.64999390]
[526.88104248 513.17309570]
[516.51300049 524.02099609]
[505.43627930 534.14416504]
[493.70141602 543.49645996]
[481.36193848 552.03521729]
[468.47418213 559.72149658]
[455.09689331 566.52014160]
[441.29116821 572.40014648]
[427.11999512 577.33477783]
[412.64797974 581.30139160]
[397.94122314 584.28198242]
[383.06677246 586.26293945]
[368.09255981 587.23516846]
[353.08682251 587.19427490]
[338.11813354 586.14044189]
[323.25469971 584.07849121]
[308.56439209 581.01776123]
[294.11422729 576.97235107]
[279.97015381 571.96057129]
[266.19665527 566.00537109]
[252.85664368 559.13397217]
[240.01095581 551.37756348]
[227.71818542 542.77172852]
[216.03446960 533.35559082]
[205.01307678 523.17218018]
[194.70431519 512.26794434]
[185.15521240 500.69262695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 139]
[22 137]
[23 136]
[24 135]
[26 133]
[27 132]
[28 131]
[29 127]
[30 126]
[32 125]
[33 124]
[34 123]
[64 122]
[66 120]
[67 119]
[68 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
