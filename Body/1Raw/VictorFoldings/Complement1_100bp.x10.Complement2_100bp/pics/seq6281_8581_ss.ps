%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[32.40763474 724.89978027]
[17.55919456 727.04620361]
[2.62647104 728.49420166]
[-12.35771275 729.24072266]
[-27.36041832 729.28405762]
[-42.34866714 728.62414551]
[-57.28950882 727.26245117]
[-72.15010071 725.20190430]
[-86.89778137 722.44708252]
[-101.50012207 719.00402832]
[-115.92503357 714.88031006]
[-130.14080811 710.08502197]
[-144.11618042 704.62866211]
[-157.82044983 698.52325439]
[-171.22346497 691.78216553]
[-184.29579163 684.42028809]
[-197.00868225 676.45373535]
[-209.33418274 667.90008545]
[-221.24520874 658.77813721]
[-232.71559143 649.10791016]
[-243.72007751 638.91064453]
[-254.23451233 628.20874023]
[-264.23574829 617.02581787]
[-273.70184326 605.38641357]
[-282.61196899 593.31610107]
[-290.94653320 580.84136963]
[-298.68722534 567.98974609]
[-305.81698608 554.78936768]
[-312.32022095 541.26934814]
[-318.18258667 527.45935059]
[-323.39117432 513.38977051]
[-327.93460083 499.09149170]
[-331.80282593 484.59597778]
[-334.98733521 469.93508911]
[-337.48120117 455.14105225]
[-339.27886963 440.24636841]
[-340.37640381 425.28381348]
[-340.77139282 410.28622437]
[-340.46301270 395.28665161]
[-339.45187378 380.31799316]
[-337.74026489 365.41317749]
[-335.33187866 350.60498047]
[-332.23205566 335.92593384]
[-328.44760132 321.40832520]
[-323.98684692 307.08404541]
[-318.85955811 292.98461914]
[-313.07705688 279.14102173]
[-306.65200806 265.58364868]
[-299.59857178 252.34236145]
[-291.93222046 239.44622803]
[-283.66986084 226.92359924]
[-274.82958984 214.80201721]
[-265.43084717 203.10812378]
[-255.49435425 191.86763000]
[-245.04188538 181.10523987]
[-234.09646606 170.84458923]
[-222.68212891 161.10827637]
[-210.82397461 151.91766357]
[-198.54806519 143.29298401]
[-185.88139343 135.25318909]
[-172.85180664 127.81593323]
[-159.48793030 120.99758148]
[-145.81915283 114.81312561]
[-131.87550354 109.27615356]
[-117.68766785 104.39883423]
[-103.28681183 100.19189453]
[-88.70458984 96.66458130]
[-73.97306824 93.82464600]
[-59.12461853 91.67832947]
[-44.19189072 90.23036194]
[-29.20770264 89.48390961]
[-14.20499802 89.44062805]
[0.78324705 90.10060120]
[15.72408390 91.46238708]
[30.58466911 93.52297974]
[45.33233643 96.27787018]
[59.93466568 99.72097778]
[74.35955811 103.84475708]
[88.57530212 108.64012146]
[86.65695953 94.79051971]
[97.45189667 85.90451813]
[102.90725708 71.93172455]
[108.36260986 57.95892334]
[113.81797028 43.98612595]
[119.27332306 30.01332855]
[105.86258698 23.26895332]
[93.14234161 15.29839993]
[81.22436523 6.17171335]
[70.21340942 -4.03089857]
[60.20623398 -15.21977329]
[51.29078293 -27.29657936]
[43.54541397 -40.15518188]
[37.03818893 -53.68258286]
[31.82629967 -67.75989532]
[27.95554543 -82.26339722]
[25.45994377 -97.06564331]
[24.36142921 -112.03654480]
[24.66965294 -127.04452515]
[26.38190842 -141.95768738]
[29.48314667 -156.64498901]
[33.94611359 -170.97734070]
[39.73158646 -184.82879639]
[46.78872681 -198.07762146]
[55.05550766 -210.60737610]
[64.45928192 -222.30795288]
[74.91740417 -233.07652283]
[86.33796692 -242.81845093]
[98.62061310 -251.44812012]
[111.65738678 -258.88970947]
[125.33371735 -265.07778931]
[139.52943420 -269.95797729]
[154.11975098 -273.48739624]
[168.97647095 -275.63507080]
[183.96902466 -276.38204956]
[198.96563721 -275.72183228]
[213.83453369 -273.66015625]
[228.44503784 -270.21520996]
[242.66874695 -265.41723633]
[256.38064575 -259.30841064]
[269.46026611 -251.94238281]
[281.79263306 -243.38392639]
[293.26937866 -233.70823669]
[303.78964233 -223.00036621]
[313.26095581 -211.35438538]
[321.60009766 -198.87268066]
[328.73376465 -185.66491699]
[334.59930420 -171.84716797]
[339.14511108 -157.54087830]
[342.33129883 -142.87176514]
[344.12979126 -127.96875000]
[344.52487183 -112.96280670]
[343.51300049 -97.98580170]
[341.10308838 -83.16936493]
[337.31631470 -68.64369965]
[332.18594360 -54.53647232]
[325.75711060 -40.97164917]
[318.08627319 -28.06844330]
[309.24084473 -15.94025230]
[299.29858398 -4.69366264]
[288.34683228 5.57248926]
[276.48187256 14.76798248]
[263.80795288 22.81200409]
[250.43647766 29.63386154]
[236.48492432 35.17360306]
[222.07592773 39.38254547]
[207.33610535 42.22369385]
[192.39498901 43.67208862]
[177.38391113 43.71499252]
[162.43476868 42.35203552]
[147.67895508 39.59518814]
[133.24612427 35.46868515]
[127.79076385 49.44148254]
[122.33541107 63.41427994]
[116.88005066 77.38707733]
[111.42469788 91.35987854]
[113.34304047 105.20948029]
[102.54810333 114.09548187]
[116.25239563 120.20084381]
[129.65544128 126.94185638]
[142.72779846 134.30368042]
[155.44071960 142.27015686]
[167.76626587 150.82376099]
[179.67733765 159.94567871]
[191.14775085 169.61587524]
[202.15228271 179.81309509]
[212.66676331 190.51490784]
[222.66806030 201.69779968]
[232.13420105 213.33717346]
[241.04437256 225.40747070]
[249.37898254 237.88212585]
[257.11972046 250.73374939]
[264.24957275 263.93405151]
[270.75283813 277.45407104]
[276.61526489 291.26403809]
[281.82394409 305.33358765]
[286.36740112 319.63183594]
[290.23568726 334.12734985]
[293.42028809 348.78823853]
[295.91418457 363.58227539]
[297.71191406 378.47692871]
[298.80953979 393.43948364]
[299.20458984 408.43707275]
[298.89627075 423.43664551]
[297.88522339 438.40533447]
[296.17364502 453.31015015]
[293.76535034 468.11834717]
[290.66558838 482.79739380]
[286.88119507 497.31503296]
[282.42050171 511.63931274]
[277.29327393 525.73876953]
[271.51083374 539.58239746]
[265.08584595 553.13977051]
[258.03247070 566.38110352]
[250.36616516 579.27728271]
[242.10383606 591.79992676]
[233.26362610 603.92156982]
[223.86494446 615.61547852]
[213.92849731 626.85601807]
[203.47607422 637.61846924]
[192.53070068 647.87915039]
[181.11640930 657.61553955]
[169.25828552 666.80621338]
[156.98242188 675.43090820]
[144.31578064 683.47076416]
[131.28622437 690.90808105]
[117.92237091 697.72650146]
[104.25361633 703.91101074]
[90.31000519 709.44805908]
[76.12218475 714.32543945]
[61.72134781 718.53240967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 157]
[81 155]
[82 154]
[83 153]
[84 152]
[85 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
