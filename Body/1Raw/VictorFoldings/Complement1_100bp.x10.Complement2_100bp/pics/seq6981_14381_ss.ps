%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[78.84851837 445.21279907]
[63.81410980 445.66714478]
[48.94021988 443.42947388]
[34.70498276 438.57171631]
[21.56599426 431.25006104]
[9.94562626 421.69982910]
[0.21742263 410.22805786]
[-7.30589485 397.20346069]
[-12.38248253 383.04479980]
[-14.84914970 368.20715332]
[-14.62660217 353.16754150]
[-11.72199535 338.40939331]
[-6.22869873 324.40713501]
[1.67670000 311.61087036]
[11.74007511 300.43194580]
[23.63793182 291.22973633]
[36.98780060 284.30001831]
[51.36054230 279.86560059]
[66.29412842 278.06900024]
[67.18694305 263.09558105]
[68.07975769 248.12219238]
[68.97257233 233.14877319]
[69.86538696 218.17536926]
[70.75820923 203.20196533]
[71.65102386 188.22856140]
[72.43234253 173.24893188]
[73.10212708 158.26388550]
[73.77191162 143.27885437]
[66.51756287 156.40798950]
[56.87214279 167.89562988]
[45.19624329 177.31228638]
[31.92638206 184.30590820]
[17.55866241 188.61503601]
[2.63023114 190.07858276]
[-12.30080032 188.64181519]
[-26.67622566 184.35845947]
[-39.95860672 177.38864136]
[-51.65137482 167.99295044]
[-61.31738663 156.52262878]
[-68.59526825 143.40650940]
[-73.21293640 129.13496399]
[-74.99774933 114.24152374]
[-73.88298798 99.28300476]
[-69.91032410 84.81863403]
[-63.22827911 71.38918304]
[-54.08666611 59.49671173]
[-42.82724762 49.58583069]
[-29.87097359 42.02706528]
[-15.70221615 37.10300827]
[-0.85068864 34.99774933]
[14.12837505 35.78998947]
[28.67497253 39.45011902]
[42.24526596 45.84129333]
[54.33192062 54.72457886]
[64.48307037 65.76786041]
[72.31920624 78.55828857]
[77.54737091 92.61767578]
[79.97209930 107.42040253]
[79.50352478 122.40700531]
[86.58062744 109.18147278]
[83.88280487 97.85173798]
[89.45400238 87.62417603]
[100.43589020 83.74610901]
[107.70912170 70.62741089]
[114.98234558 57.50871658]
[122.25557709 44.39002609]
[116.81782532 33.81800842]
[117.15514374 22.05420303]
[123.06809235 12.01772308]
[132.98806763 6.14320803]
[144.39164734 5.79055500]
[152.05224609 -7.10577154]
[159.71284485 -20.00209808]
[167.37344360 -32.89842606]
[175.03404236 -45.79475403]
[182.69464111 -58.69107819]
[168.90092468 -52.79755783]
[153.99697876 -54.49230576]
[141.87863159 -63.33232117]
[135.71360779 -77.00684357]
[137.11343384 -91.94138336]
[145.71218872 -104.23208618]
[159.26217651 -110.66620636]
[174.22146606 -109.56185913]
[186.67973328 -101.20773315]
[193.38043213 -87.78757477]
[192.57226562 -72.81021881]
[202.06115723 -84.42748260]
[211.55006409 -96.04474640]
[208.07772827 -107.41486359]
[210.50033569 -118.93144989]
[218.10284424 -127.75731659]
[228.90890503 -131.77534485]
[240.19364929 -130.09573364]
[250.02421570 -141.42533875]
[259.85479736 -152.75492859]
[269.68539429 -164.08451843]
[279.51596069 -175.41410828]
[269.19567871 -186.31632996]
[259.99368286 -198.17761230]
[251.99864197 -210.88375854]
[245.28752136 -224.31237793]
[239.92498779 -238.33413696]
[235.96266174 -252.81401062]
[233.43870544 -267.61254883]
[232.37742615 -282.58721924]
[232.78904724 -297.59378052]
[234.66961670 -312.48776245]
[238.00100708 -327.12567139]
[242.75114441 -341.36654663]
[248.87428284 -355.07327271]
[256.31143188 -368.11380005]
[264.99099731 -380.36257935]
[274.82934570 -391.70159912]
[285.73178101 -402.02166748]
[297.59326172 -411.22341919]
[310.29956055 -419.21820068]
[323.72830200 -425.92904663]
[337.75018311 -431.29132080]
[352.23013306 -435.25335693]
[367.02871704 -437.77700806]
[382.00338745 -438.83798218]
[397.00994873 -438.42605591]
[411.90390015 -436.54519653]
[426.54174805 -433.21350098]
[440.78253174 -428.46307373]
[454.48913574 -422.33969116]
[467.52951050 -414.90225220]
[479.77810669 -406.22247314]
[491.11691284 -396.38388062]
[501.43679810 -385.48126221]
[510.63830566 -373.61959839]
[518.63281250 -360.91311646]
[525.34338379 -347.48425293]
[530.70538330 -333.46224976]
[534.66711426 -318.98223877]
[537.19049072 -304.18359375]
[538.25115967 -289.20889282]
[537.83892822 -274.20233154]
[535.95776367 -259.30844116]
[532.62579346 -244.67065430]
[527.87512207 -230.42996216]
[521.75140381 -216.72348022]
[514.31372070 -203.68324280]
[505.63369751 -191.43482971]
[495.79489136 -180.09620667]
[484.89205933 -169.77656555]
[473.03021240 -160.57530212]
[460.32357788 -152.58100891]
[446.89456177 -145.87071228]
[432.87246704 -140.50900269]
[418.39236450 -136.54754639]
[403.59368896 -134.02447510]
[388.61895752 -132.96409607]
[373.61239624 -133.37661743]
[358.71856689 -135.25808716]
[344.08084106 -138.59036255]
[329.84024048 -143.34135437]
[316.13388062 -149.46530151]
[303.09381104 -156.90324402]
[290.84555054 -165.58352661]
[281.01498413 -154.25393677]
[271.18438721 -142.92434692]
[261.35382080 -131.59475708]
[251.52323914 -120.26515961]
[253.91360474 -102.11573029]
[242.07556152 -87.73609924]
[223.16732788 -86.55584717]
[213.67842102 -74.93858337]
[204.18952942 -63.32131958]
[195.59097290 -51.03048325]
[187.93037415 -38.13415527]
[180.26977539 -25.23782730]
[172.60917664 -12.34150124]
[164.94857788 0.55482566]
[157.28797913 13.45115280]
[162.86581421 30.88684845]
[153.77175903 47.14141846]
[135.37426758 51.66325378]
[128.10104370 64.78194427]
[120.82781219 77.90064240]
[113.55458069 91.01933289]
[114.27873230 107.77796936]
[99.80615234 116.25858307]
[92.72904968 129.48411560]
[88.75695038 143.94863892]
[88.08716583 158.93367004]
[87.41738129 173.91871643]
[90.16047668 182.63153076]
[86.62442780 189.12138367]
[85.73161316 204.09478760]
[84.83879852 219.06819153]
[83.94598389 234.04159546]
[83.05316162 249.01499939]
[82.16034698 263.98840332]
[81.26753235 278.96182251]
[95.88181305 282.52026367]
[109.62577057 288.63119507]
[122.05758667 297.09817505]
[132.77763367 307.64901733]
[141.44129944 319.94458008]
[147.77009583 333.58956909]
[151.56056213 348.14541626]
[152.69085693 363.14413452]
[151.12464905 378.10363770]
[146.91229248 392.54302979]
[140.18917847 405.99813843]
[131.17144775 418.03640747]
[120.14897156 428.27090454]
[107.47607422 436.37258911]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 196]
[20 195]
[21 194]
[22 193]
[23 192]
[24 191]
[25 190]
[26 188]
[27 187]
[28 186]
[59 185]
[60 184]
[63 182]
[64 181]
[65 180]
[66 179]
[71 176]
[72 175]
[73 174]
[74 173]
[75 172]
[76 171]
[87 170]
[88 169]
[89 168]
[94 165]
[95 164]
[96 163]
[97 162]
[98 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
