%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[68.38874054 560.99023438]
[53.79923248 565.10388184]
[38.68286133 563.97650146]
[24.86499596 557.74407959]
[14.01421356 547.15936279]
[7.44079638 533.50048828]
[5.93851852 518.41674805]
[9.68878651 503.72961426]
[18.23873711 491.21267700]
[30.55592346 482.37734985]
[45.15298462 478.29058838]
[46.26863098 463.33215332]
[47.38428116 448.37368774]
[48.49993134 433.41522217]
[40.03932953 418.04040527]
[50.53325653 402.90902710]
[51.42607498 387.93560791]
[52.31888962 372.96221924]
[38.61703110 364.39648438]
[31.06105614 350.00680542]
[31.79711342 333.67660522]
[40.71890259 319.86730957]
[55.47088623 312.39929199]
[56.14067078 297.41427612]
[56.81045532 282.42922974]
[57.48023987 267.44418335]
[58.15002441 252.45915222]
[48.31801987 263.78750610]
[33.95251083 268.10400391]
[19.50481224 264.07113647]
[9.45169830 252.93853760]
[6.90823746 238.15574646]
[12.66254711 224.30339050]
[24.93159294 215.67375183]
[39.91367722 214.94084167]
[52.96643829 222.33174133]
[60.04538727 235.55656433]
[62.71118164 220.79534912]
[65.37697601 206.03413391]
[68.04277802 191.27291870]
[59.36558533 179.22128296]
[61.85880280 164.21333313]
[74.55850220 155.19360352]
[77.22429657 140.43238831]
[79.89009094 125.67117310]
[70.96704865 137.72850037]
[59.53464127 147.43933105]
[46.19258881 154.29421997]
[31.64078712 157.93360901]
[16.64259720 158.16654968]
[1.98479116 154.98083496]
[-11.56371021 148.54359436]
[-23.29217911 139.19250488]
[-32.58536530 127.41809082]
[-38.95576477 113.83802795]
[-42.06919861 99.16470337]
[-41.76234436 84.16783905]
[-38.05130005 69.63415527]
[-31.13073540 56.32604218]
[-21.36369133 44.94162750]
[-9.26253033 36.07811356]
[4.53794861 30.20046425]
[19.31379890 27.61700439]
[34.28990936 28.46325874]
[48.68066025 32.69483566]
[61.73114395 40.08975601]
[72.75675964 50.26009750]
[81.17912292 62.67234039]
[86.55641937 76.67536926]
[88.60655212 91.53459930]
[87.22164917 106.47219086]
[87.79519653 92.50212860]
[99.99750519 85.67605591]
[107.84925842 72.89521027]
[115.70101929 60.11436844]
[123.55277252 47.33352661]
[123.62804413 28.91951561]
[139.37399292 21.17148590]
[147.03459167 8.27515888]
[154.69519043 -4.62116766]
[162.35578918 -17.51749420]
[170.01638794 -30.41382217]
[177.67698669 -43.31015015]
[185.33757019 -56.20647430]
[192.99816895 -69.10279846]
[193.46185303 -75.69799042]
[196.70043945 -80.36795044]
[201.08372498 -82.26422119]
[209.12490845 -94.92674255]
[217.16607666 -107.58927155]
[222.20298767 -121.71829987]
[223.98545837 -136.61201477]
[225.76792908 -151.50573730]
[218.13020325 -168.26123047]
[229.18852234 -181.88768005]
[222.92890930 -196.41792297]
[231.94830322 -208.27117920]
[233.50881958 -223.18978882]
[235.06935120 -238.10839844]
[221.16067505 -244.02787781]
[209.61581421 -253.78530884]
[201.46130371 -266.51306152]
[197.42225647 -281.07937622]
[197.85780334 -296.18902588]
[202.72921753 -310.49847412]
[211.60336304 -322.73535156]
[223.69113159 -331.81155396]
[237.91767883 -336.92001343]
[253.01802063 -337.60653687]
[267.64941406 -333.80999756]
[280.51086426 -325.86807251]
[290.45874023 -314.48687744]
[296.60848999 -300.67846680]
[298.41323853 -285.67068481]
[295.71255493 -270.79794312]
[288.74658203 -257.38281250]
[278.13470459 -246.61807251]
[264.82052612 -239.46095276]
[249.98794556 -236.54786682]
[248.42742920 -221.62927246]
[246.86691284 -206.71066284]
[253.23814392 -193.24749756]
[244.10713196 -180.32716370]
[251.47825623 -170.73585510]
[250.30024719 -158.29415894]
[240.66163635 -149.72326660]
[238.87918091 -134.82954407]
[237.09671021 -119.93583679]
[245.30746460 -132.48905945]
[255.78059387 -143.22747803]
[268.12451172 -151.74964905]
[281.87780762 -157.73692322]
[296.52621460 -160.96549988]
[311.52215576 -161.31466675]
[326.30496216 -158.77136230]
[340.32199097 -153.43067932]
[353.04919434 -145.49226379]
[364.01077271 -135.25291443]
[372.79687500 -123.09544373]
[379.07907104 -109.47435760]
[382.62246704 -94.89888763]
[383.29461670 -79.91395569]
[381.07037354 -65.07978058]
[376.03292847 -50.95095062]
[368.37054443 -38.05567932]
[358.36972046 -26.87607002]
[346.40435791 -17.83007622]
[332.92178345 -11.25589180]
[318.42602539 -7.39929724]
[303.45904541 -6.40447378]
[288.58041382 -8.30861378]
[274.34631348 -13.04052925]
[261.28897095 -20.42331314]
[249.89649963 -30.18095779]
[240.59481812 -41.94866180]
[233.73170471 -55.28648758]
[229.56370544 -69.69578552]
[228.24667358 -84.63785553]
[229.82859802 -99.54809570]
[221.78742981 -86.88557434]
[213.74626160 -74.22304535]
[205.89450073 -61.44220352]
[198.23390198 -48.54587936]
[190.57330322 -35.64955139]
[182.91270447 -22.75322342]
[175.25210571 -9.85689735]
[167.59152222 3.03942990]
[159.93092346 15.93575668]
[152.27032471 28.83208275]
[154.95106506 40.62785339]
[148.67443848 51.43469238]
[136.33361816 55.18528366]
[128.48185730 67.96612549]
[120.63010406 80.74697113]
[112.77835083 93.52780914]
[112.20480347 107.49787140]
[100.00249481 114.32394409]
[94.65130615 128.33697510]
[91.98551178 143.09819031]
[89.31971741 157.85940552]
[98.06226349 170.75148010]
[95.14849091 185.68347168]
[82.80399323 193.93870544]
[80.13819885 208.69992065]
[77.47239685 223.46115112]
[74.80660248 238.22236633]
[73.13506317 253.12893677]
[72.46527863 268.11398315]
[71.79549408 283.09899902]
[71.12570953 298.08404541]
[70.45592499 313.06909180]
[82.62023163 319.97506714]
[90.58432770 331.39385986]
[92.84075928 345.06451416]
[89.00542450 358.30987549]
[79.88155365 368.56091309]
[67.29229736 373.85501099]
[66.39947510 388.82843018]
[65.50666046 403.80184937]
[73.46862030 413.94924927]
[72.41673279 426.40225220]
[63.45838165 434.53088379]
[62.34273529 449.48934937]
[61.22708511 464.44778442]
[60.11143875 479.40625000]
[73.94076538 485.61312866]
[84.81103516 496.17785645]
[91.40961456 509.82461548]
[92.93968201 524.90557861]
[89.21649170 539.59954834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 205]
[12 204]
[13 203]
[14 202]
[16 199]
[17 198]
[18 197]
[23 191]
[24 190]
[25 189]
[26 188]
[27 187]
[37 186]
[38 185]
[39 184]
[40 183]
[43 180]
[44 179]
[45 178]
[71 177]
[73 175]
[74 174]
[75 173]
[76 172]
[78 169]
[79 168]
[80 167]
[81 166]
[82 165]
[83 164]
[84 163]
[85 162]
[88 161]
[89 160]
[90 159]
[91 128]
[92 127]
[93 126]
[95 123]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
