%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[149.10113525 850.07879639]
[134.76513672 845.65161133]
[120.70256042 840.42041016]
[106.95846558 834.40203857]
[93.57687378 827.61572266]
[80.60065460 820.08319092]
[68.07137299 811.82861328]
[56.02916718 802.87835693]
[44.51260376 793.26116943]
[33.55858231 783.00787354]
[23.20218658 772.15124512]
[13.47659492 760.72607422]
[4.41296005 748.76904297]
[-3.95968366 736.31829834]
[-11.61451626 723.41387939]
[-18.52701759 710.09698486]
[-24.67504311 696.41040039]
[-30.03890038 682.39788818]
[-34.60140610 668.10437012]
[-38.34794617 653.57562256]
[-41.26651764 638.85821533]
[-43.34777451 623.99920654]
[-44.58504486 609.04626465]
[-44.97437286 594.04730225]
[-44.51450348 579.05029297]
[-43.20691299 564.10333252]
[-41.05578995 549.25427246]
[-38.06802750 534.55072021]
[-34.25319290 520.03979492]
[-29.62350655 505.76788330]
[-24.19379997 491.78076172]
[-17.98146629 478.12322998]
[-11.00640678 464.83901978]
[-3.29096222 451.97073364]
[5.14015102 439.55953979]
[14.25992584 427.64523315]
[24.03914833 416.26596069]
[34.44649124 405.45816040]
[45.44861984 395.25646973]
[57.01029205 385.69357300]
[69.09446716 376.80010986]
[81.66242981 368.60452271]
[94.67394257 361.13311768]
[108.08730316 354.40982056]
[121.85955048 348.45611572]
[135.94657898 343.29116821]
[150.30323792 338.93142700]
[146.76356506 324.35504150]
[143.22390747 309.77868652]
[139.68423462 295.20230103]
[136.14456177 280.62591553]
[132.60488892 266.04956055]
[129.06521606 251.47317505]
[125.52553558 236.89680481]
[121.98586273 222.32041931]
[118.44618988 207.74404907]
[114.90651703 193.16767883]
[104.38437653 182.62567139]
[108.64662170 167.38940430]
[105.10694885 152.81303406]
[101.56727600 138.23664856]
[98.02760315 123.66027832]
[94.48793030 109.08390045]
[89.98030090 94.77721405]
[77.75386810 84.73606873]
[80.33252716 70.06637573]
[74.87716675 56.09357834]
[69.42181396 42.12078094]
[63.96645355 28.14798355]
[51.74001312 18.10683060]
[54.31867599 3.43714190]
[39.69882202 6.90211439]
[24.73901176 8.29859829]
[9.73043823 7.59941196]
[-5.03475046 4.81816387]
[-19.26914597 0.00899279]
[-32.69567108 -6.73448992]
[-45.05297470 -15.28102016]
[-56.10051727 -25.46423721]
[-65.62326050 -37.08592224]
[-73.43582916 -49.91985321]
[-79.38616180 -63.71621704]
[-83.35843658 -78.20646667]
[-85.27531433 -93.10853577]
[-85.09949493 -108.13235474]
[-82.83439636 -122.98548889]
[-78.52411652 -137.37879944]
[-72.25254822 -151.03213501]
[-64.14177704 -163.67973328]
[-54.34967041 -175.07537842]
[-43.06684113 -184.99726868]
[-30.51291656 -193.25227356]
[-16.93225670 -199.67970276]
[-2.58921528 -204.15443420]
[12.23701668 -206.58938599]
[27.25784111 -206.93714905]
[42.18087769 -205.19096375]
[56.71563721 -201.38479614]
[70.57920074 -195.59275818]
[83.50171661 -187.92759705]
[95.23162842 -178.53848267]
[105.54062653 -167.60821533]
[114.22803497 -155.34954834]
[121.12474823 -142.00108337]
[126.09651947 -127.82266235]
[129.04658508 -113.09027863]
[129.91751099 -98.09069061]
[128.69233704 -83.11587524]
[125.39492035 -68.45732117]
[120.08945465 -54.40036011]
[112.87919617 -41.21862030]
[103.90450287 -29.16868210]
[93.34006500 -18.48510361]
[81.39153290 -9.37584209]
[68.29147339 -2.01821518]
[80.12770844 7.02350903]
[77.93925476 22.69262505]
[83.39460754 36.66542435]
[88.84996796 50.63822174]
[94.30532074 64.61102295]
[106.14156342 73.65274048]
[103.95310211 89.32186127]
[108.35590363 74.98256683]
[119.74317932 65.21885681]
[134.58644104 63.05611420]
[148.28636169 69.16449738]
[156.59785461 81.65125275]
[156.94552612 96.64721680]
[149.22163391 109.50574493]
[135.81953430 116.24246216]
[120.89198303 114.76993561]
[109.06430817 105.54423523]
[112.60398102 120.12060547]
[116.14365387 134.69697571]
[119.68332672 149.27336121]
[123.22299957 163.84973145]
[133.99832153 175.43432617]
[129.48289490 189.62800598]
[133.02256775 204.20437622]
[136.56224060 218.78074646]
[140.10191345 233.35713196]
[143.64158630 247.93350220]
[147.18125916 262.50988770]
[150.72093201 277.08624268]
[154.26060486 291.66262817]
[157.80027771 306.23901367]
[161.33995056 320.81536865]
[164.87962341 335.39175415]
[179.63685608 332.68157959]
[194.52378845 330.81060791]
[209.49273682 329.78488159]
[224.49572754 329.60769653]
[239.48471069 330.27957153]
[254.41168213 331.79837036]
[269.22882080 334.15921021]
[283.88864136 337.35458374]
[298.34423828 341.37420654]
[312.54925537 346.20523071]
[326.45819092 351.83218384]
[340.02651978 358.23699951]
[353.21075439 365.39920044]
[365.96868896 373.29580688]
[378.25942993 381.90158081]
[390.04360962 391.18890381]
[401.28347778 401.12805176]
[411.94302368 411.68716431]
[421.98812866 422.83242798]
[431.38659668 434.52816772]
[440.10830688 446.73687744]
[448.12536621 459.41946411]
[455.41204834 472.53530884]
[461.94503784 486.04238892]
[467.70336914 499.89746094]
[472.66867065 514.05609131]
[476.82495117 528.47296143]
[480.15896606 543.10192871]
[482.66000366 557.89605713]
[484.32003784 572.80798340]
[485.13375854 587.78991699]
[485.09860229 602.79388428]
[484.21463013 617.77191162]
[482.48468018 632.67584229]
[479.91433716 647.45812988]
[476.51177979 662.07122803]
[472.28793335 676.46850586]
[467.25634766 690.60369873]
[461.43310547 704.43157959]
[454.83685303 717.90789795]
[447.48876953 730.98944092]
[439.41235352 743.63433838]
[430.63348389 755.80200195]
[421.18026733 767.45355225]
[411.08303833 778.55157471]
[400.37408447 789.06060791]
[389.08773804 798.94696045]
[377.26016235 808.17895508]
[364.92922974 816.72698975]
[352.13439941 824.56372070]
[338.91674805 831.66400146]
[325.31854248 838.00512695]
[311.38336182 843.56683350]
[297.15585327 848.33117676]
[282.68157959 852.28302002]
[268.00692749 855.40960693]
[253.17889404 857.70098877]
[238.24496460 859.14978027]
[223.25299072 859.75134277]
[208.25099182 859.50378418]
[193.28701782 858.40789795]
[178.40902710 856.46722412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 148]
[48 147]
[49 146]
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[57 138]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 122]
[66 120]
[67 119]
[68 118]
[69 117]
[71 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
