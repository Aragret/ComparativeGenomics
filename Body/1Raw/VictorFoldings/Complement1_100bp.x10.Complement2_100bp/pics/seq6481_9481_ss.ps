%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[148.28814697 606.78845215]
[135.77467346 598.47930908]
[124.42652130 588.63818359]
[114.43002319 577.42669678]
[105.94934082 565.02880859]
[99.12374115 551.64825439]
[94.06529236 537.50469971]
[90.85707092 522.83038330]
[89.55175018 507.86627197]
[90.17076874 492.85812378]
[92.70396423 478.05233765]
[97.10973358 463.69204712]
[103.31572723 450.01309204]
[111.22005463 437.24008179]
[120.69290161 425.58273315]
[131.57872009 415.23251343]
[143.69876099 406.35934448]
[156.85398865 399.10894775]
[170.82839966 393.60040283]
[185.39251709 389.92413330]
[183.61004639 375.03039551]
[181.82757568 360.13668823]
[180.04512024 345.24298096]
[178.26264954 330.34924316]
[175.92715454 315.53219604]
[173.04188538 300.81228638]
[170.15661621 286.09240723]
[167.27134705 271.37252808]
[162.87034607 257.03265381]
[157.00138855 243.22848511]
[151.13243103 229.42431641]
[145.05859375 215.70904541]
[138.78123474 202.08572388]
[132.50387573 188.46241760]
[126.22650909 174.83909607]
[119.94915009 161.21578979]
[105.79866791 164.12266541]
[91.35626984 163.80146790]
[77.34901428 160.26834106]
[64.48206329 153.70117188]
[53.40316772 144.43057251]
[44.67006683 132.92323303]
[38.72240067 119.75844574]
[35.85959244 105.59898376]
[36.22576141 91.15765381]
[39.80247498 77.16146851]
[46.40967178 64.31503296]
[55.71472931 53.26505280]
[67.24920654 44.56782532]
[61.17537308 30.85255623]
[55.10153961 17.13729095]
[49.99442291 12.93861485]
[48.06413269 7.59342909]
[49.05781937 2.92206597]
[43.39503479 -10.96796131]
[37.73224640 -24.85798836]
[32.06946182 -38.74801636]
[25.89369202 -52.41768646]
[19.21349716 -65.84806061]
[12.43350601 -79.22833252]
[5.55409288 -92.55776215]
[-1.32531953 -105.88719177]
[-15.35581970 -100.53694916]
[-29.89714432 -96.79130554]
[-44.76642227 -94.69734955]
[-59.77664948 -94.28142548]
[-74.73906708 -95.54875946]
[-89.46549988 -98.48341370]
[-103.77074432 -103.04848480]
[-117.47490692 -109.18656158]
[-130.40563965 -116.82044983]
[-142.40031433 -125.85414124]
[-153.30810547 -136.17404175]
[-162.99182129 -147.65034485]
[-171.32968140 -160.13874817]
[-178.21682739 -173.48217773]
[-183.56663513 -187.51284790]
[-187.31185913 -202.05427551]
[-189.40536499 -216.92361450]
[-189.82084656 -231.93386841]
[-188.55305481 -246.89624023]
[-185.61796570 -261.62258911]
[-181.05245972 -275.92770386]
[-174.91398621 -289.63168335]
[-167.27970886 -302.56216431]
[-158.24565125 -314.55657959]
[-147.92543030 -325.46405029]
[-136.44883728 -335.14743042]
[-123.96018219 -343.48492432]
[-110.61653900 -350.37167358]
[-96.58571625 -355.72106934]
[-82.04417419 -359.46585083]
[-67.17477417 -361.55889893]
[-52.16451645 -361.97393799]
[-37.20217514 -360.70571899]
[-22.47591972 -357.77017212]
[-8.17094326 -353.20425415]
[5.53285074 -347.06533813]
[18.46312332 -339.43069458]
[30.45726395 -330.39627075]
[41.36443329 -320.07571411]
[51.04745865 -308.59884644]
[59.38457108 -296.10992432]
[66.27091980 -282.76608276]
[71.61989594 -268.73510742]
[75.36424255 -254.19345093]
[77.45686340 -239.32398987]
[77.87144470 -224.31372070]
[76.60276794 -209.35142517]
[73.66679382 -194.62524414]
[69.10043335 -180.32040405]
[62.96113205 -166.61680603]
[55.32608414 -153.68675232]
[46.29130936 -141.69288635]
[35.97043610 -130.78602600]
[24.49325752 -121.10334015]
[12.00410938 -112.76660919]
[18.88352203 -99.43717957]
[25.76293564 -86.10774994]
[31.62401199 -81.60557556]
[32.64387131 -72.52825928]
[39.32406616 -59.09788132]
[46.49917221 -72.27050018]
[61.24427414 -75.02405548]
[72.68982697 -65.32872772]
[72.39859772 -50.33155441]
[60.58526993 -41.08789062]
[45.95948792 -44.41080093]
[51.62227249 -30.52077484]
[57.28506088 -16.63074684]
[62.94784546 -2.74072075]
[68.81681061 11.06345654]
[74.89064026 24.77872276]
[80.96447754 38.49398804]
[96.20089722 35.72786331]
[111.65708923 36.67975998]
[126.43894196 41.29460907]
[139.69134521 49.30545044]
[150.64768982 60.24887466]
[158.67416382 73.49182129]
[163.30644226 88.26821899]
[164.27656555 103.72327423]
[161.52842712 118.96295166]
[155.22097778 133.10565186]
[145.71910095 145.33325195]
[133.57246399 154.93841553]
[139.84982300 168.56173706]
[146.12718201 182.18505859]
[152.40454102 195.80836487]
[158.68190002 209.43168640]
[163.85096741 213.55386353]
[165.86062622 218.86972046]
[164.93659973 223.55535889]
[170.80555725 237.35952759]
[176.67453003 251.16371155]
[178.63101196 236.29185486]
[186.06312561 223.26251221]
[197.86836243 214.00851440]
[212.29547119 209.90263367]
[227.20429993 211.55397034]
[240.38319397 218.71752930]
[249.87715149 230.33065796]
[254.27780151 244.67060852]
[252.93232727 259.61013794]
[246.04032898 272.93307495]
[234.62417603 282.66299438]
[220.37741089 287.35656738]
[205.41343689 286.31750488]
[191.95208740 279.69995117]
[181.99124146 268.48724365]
[184.87651062 283.20712280]
[187.76177979 297.92703247]
[190.64704895 312.64691162]
[201.05421448 301.84454346]
[216.00209045 303.09390259]
[224.47167969 315.47396851]
[220.21949768 329.85864258]
[206.38011169 335.64407349]
[193.15637207 328.56680298]
[194.93882751 343.46051025]
[196.72129822 358.35421753]
[198.50376892 373.24795532]
[200.28622437 388.14166260]
[215.30654907 388.27728271]
[230.18620300 390.33264160]
[244.68083191 394.27389526]
[258.55245972 400.03640747]
[271.57327271 407.52551270]
[283.52947998 416.61825562]
[294.22470093 427.16528320]
[303.48336792 438.99343872]
[311.15344238 451.90850830]
[317.10891724 465.69836426]
[321.25207520 480.13659668]
[323.51480103 494.98614502]
[323.86001587 510.00308228]
[322.28201294 524.94091797]
[318.80667114 539.55426025]
[313.49111938 553.60321045]
[306.42263794 566.85705566]
[297.71725464 579.09820557]
[287.51794434 590.12554932]
[275.99218750 599.75805664]
[263.32925415 607.83758545]
[249.73707581 614.23138428]
[235.43884277 618.83453369]
[220.66935730 621.57141113]
[205.67114258 622.39709473]
[190.69047546 621.29803467]
[175.97335815 618.29223633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[25 173]
[26 172]
[27 171]
[28 170]
[29 155]
[30 154]
[31 153]
[32 150]
[33 149]
[34 148]
[35 147]
[36 146]
[49 134]
[50 133]
[51 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 122]
[59 121]
[60 119]
[61 118]
[62 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
