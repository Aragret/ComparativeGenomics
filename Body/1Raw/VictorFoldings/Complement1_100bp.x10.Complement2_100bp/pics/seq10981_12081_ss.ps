%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[75.81944275 76.92692566]
[88.21582794 68.72382355]
[86.21181488 53.85829163]
[84.20780182 38.99276352]
[82.20378876 24.12723541]
[80.19977570 9.26170731]
[78.19576263 -5.60382080]
[76.19174957 -20.46934891]
[74.18773651 -35.33487701]
[59.26129150 -33.83663177]
[44.29257965 -32.84610748]
[29.29886436 -32.36443710]
[14.29744053 -32.39218140]
[-0.69439000 -32.92930984]
[-15.65933609 -33.97520065]
[-30.58013725 -35.52864456]
[-45.43958282 -37.58785629]
[-60.22053528 -40.15045547]
[-74.90594482 -43.21348953]
[-89.47888184 -46.77342606]
[-103.92252350 -50.82615662]
[-118.22022247 -55.36700821]
[-132.35548401 -60.39074326]
[-146.31199646 -65.89156342]
[-160.07368469 -71.86312866]
[-173.62464905 -78.29855347]
[-186.94927979 -85.19041443]
[-200.03219604 -92.53076172]
[-212.85832214 -100.31111908]
[-225.41285706 -108.52252960]
[-237.68132019 -117.15550995]
[-249.64955139 -126.20011139]
[-261.30377197 -135.64590454]
[-272.63049316 -145.48197937]
[-283.61672974 -155.69699097]
[-294.24972534 -166.27917480]
[-304.51727295 -177.21632385]
[-314.40750122 -188.49581909]
[-323.90899658 -200.10464478]
[-333.01083374 -212.02940369]
[-341.70251465 -224.25636292]
[-349.97396851 -236.77140808]
[-357.81567383 -249.56010437]
[-365.21862793 -262.60772705]
[-372.17425537 -275.89916992]
[-378.67453003 -289.41915894]
[-384.71194458 -303.15206909]
[-390.27957153 -317.08206177]
[-395.37097168 -331.19311523]
[-399.98025513 -345.46887207]
[-404.10214233 -359.89294434]
[-407.73187256 -374.44866943]
[-410.86520386 -389.11923218]
[-413.49859619 -403.88772583]
[-415.62896729 -418.73715210]
[-417.25390625 -433.65032959]
[-418.37145996 -448.61007690]
[-418.98040771 -463.59918213]
[-419.08001709 -478.60028076]
[-418.67019653 -493.59613037]
[-417.75140381 -508.56942749]
[-416.32467651 -523.50286865]
[-414.39169312 -538.37927246]
[-411.95468140 -553.18145752]
[-409.01644897 -567.89233398]
[-405.58035278 -582.49499512]
[-401.65039062 -596.97247314]
[-397.23107910 -611.30822754]
[-392.32754517 -625.48565674]
[-386.94540405 -639.48834229]
[-381.09088135 -653.30023193]
[-374.77075195 -666.90533447]
[-367.99224854 -680.28802490]
[-360.76324463 -693.43280029]
[-353.09207153 -706.32452393]
[-344.98754883 -718.94830322]
[-336.45901489 -731.28961182]
[-327.51635742 -743.33416748]
[-318.16986084 -755.06817627]
[-308.43029785 -766.47802734]
[-298.30892944 -777.55053711]
[-287.81738281 -788.27301025]
[-276.96780396 -798.63305664]
[-265.77267456 -808.61865234]
[-254.24494934 -818.21838379]
[-242.39788818 -827.42114258]
[-230.24516296 -836.21630859]
[-217.80078125 -844.59375000]
[-205.07911682 -852.54376221]
[-192.09483337 -860.05718994]
[-178.86291504 -867.12536621]
[-165.39860535 -873.74023438]
[-151.71743774 -879.89404297]
[-137.83520508 -885.57971191]
[-123.76790619 -890.79071045]
[-109.53177643 -895.52105713]
[-95.14322662 -899.76525879]
[-80.61885834 -903.51837158]
[-65.97542572 -906.77618408]
[-51.22980881 -909.53485107]
[-36.39901733 -911.79125977]
[-21.50016403 -913.54272461]
[-6.55042887 -914.78723145]
[8.43294621 -915.52343750]
[23.43267822 -915.75036621]
[38.43146896 -915.46789551]
[53.41201401 -914.67626953]
[68.35704041 -913.37634277]
[83.24930573 -911.56976318]
[98.07164001 -909.25848389]
[112.80694580 -906.44525146]
[127.43821716 -903.13323975]
[141.94859314 -899.32635498]
[156.32133484 -895.02893066]
[170.53985596 -890.24591064]
[184.58775330 -884.98284912]
[198.44885254 -879.24578857]
[212.10713196 -873.04138184]
[225.54685974 -866.37677002]
[238.75253296 -859.25964355]
[251.70890808 -851.69818115]
[264.40106201 -843.70111084]
[276.81433105 -835.27764893]
[288.93438721 -826.43756104]
[300.74731445 -817.19104004]
[312.23944092 -807.54870605]
[323.39749146 -797.52166748]
[334.20864868 -787.12158203]
[344.66040039 -776.36035156]
[354.74072266 -765.25036621]
[364.43798828 -753.80456543]
[373.74096680 -742.03607178]
[382.63897705 -729.95843506]
[391.12176514 -717.58563232]
[399.17947388 -704.93194580]
[406.80288696 -692.01190186]
[413.98318481 -678.84045410]
[420.71206665 -665.43280029]
[426.98181152 -651.80438232]
[432.78515625 -637.97088623]
[438.11541748 -623.94836426]
[442.96643066 -609.75292969]
[447.33264160 -595.40087891]
[451.20895386 -580.90893555]
[454.59097290 -566.29370117]
[457.47473145 -551.57202148]
[459.85693359 -536.76092529]
[461.73483276 -521.87744141]
[463.10623169 -506.93884277]
[463.96960449 -491.96224976]
[464.32391357 -476.96499634]
[464.16876221 -461.96432495]
[463.50430298 -446.97760010]
[462.33135986 -432.02209473]
[460.65124512 -417.11502075]
[458.46591187 -402.27359009]
[455.77786255 -387.51495361]
[452.59020996 -372.85607910]
[448.90664673 -358.31390381]
[444.73138428 -343.90521240]
[440.06927490 -329.64657593]
[434.92565918 -315.55450439]
[429.30648804 -301.64520264]
[423.21826172 -287.93472290]
[416.66796875 -274.43890381]
[409.66320801 -261.17330933]
[402.21200562 -248.15318298]
[394.32299805 -235.39360046]
[386.00524902 -222.90927124]
[377.26837158 -210.71456909]
[368.12246704 -198.82359314]
[358.57803345 -187.25001526]
[348.64611816 -176.00723267]
[338.33816528 -165.10816956]
[327.66604614 -154.56542969]
[316.64208984 -144.39114380]
[305.27899170 -134.59707642]
[293.58990479 -125.19449615]
[281.58825684 -116.19426727]
[269.28793335 -107.60676575]
[256.70309448 -99.44189453]
[243.84823608 -91.70906830]
[230.73823547 -84.41721344]
[217.38818359 -77.57473755]
[203.81347656 -71.18952179]
[190.02978516 -65.26894379]
[176.05299377 -59.81983185]
[161.89923096 -54.84846497]
[147.58480835 -50.36058044]
[133.12626648 -46.36135101]
[118.54025269 -42.85539246]
[103.84360504 -39.84675217]
[89.05326080 -37.33889008]
[91.05727386 -22.47336197]
[93.06129456 -7.60783434]
[95.06530762 7.25769377]
[97.06932068 22.12322235]
[99.07333374 36.98875046]
[101.07734680 51.85427856]
[103.08135986 66.71980286]
[117.20745087 71.34742737]
[127.92981720 81.64267731]
[133.12753296 95.56909180]
[131.77244568 110.37197113]
[124.13261414 123.12321472]
[111.71923065 131.30056763]
[96.98772430 133.28651428]
[82.85205841 128.68821716]
[72.10834503 118.41525269]
[66.88173676 104.49965668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[6 196]
[7 195]
[8 194]
[9 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
