%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[155.92633057 644.32318115]
[142.89775085 636.88281250]
[130.27642822 628.77069092]
[118.09694672 620.00921631]
[106.39270782 610.62225342]
[95.19578552 600.63568115]
[84.53686523 590.07672119]
[74.44516754 578.97442627]
[64.94834900 567.35913086]
[56.07244492 555.26281738]
[47.84178162 542.71850586]
[40.27891541 529.76062012]
[33.40457916 516.42468262]
[27.23761559 502.74722290]
[21.79492569 488.76577759]
[17.09142685 474.51864624]
[13.14001465 460.04489136]
[9.95151711 445.38415527]
[7.53467417 430.57662964]
[5.89611053 415.66293335]
[5.04031706 400.68389893]
[4.96963978 385.68060303]
[5.68427229 370.69418335]
[7.18225622 355.76571655]
[9.45948505 340.93606567]
[12.50971699 326.24594116]
[16.32459068 311.73559570]
[20.89365387 297.44479370]
[26.20437813 283.41268921]
[32.24221039 269.67776489]
[38.99059677 256.27764893]
[46.43104553 243.24909973]
[54.54315948 230.62779236]
[63.30470657 218.44834900]
[72.69167328 206.74414062]
[82.67832184 195.54724121]
[93.23728943 184.88835144]
[104.33963013 174.79669189]
[115.95491028 165.29991150]
[128.05130005 156.42404175]
[119.82249451 143.88264465]
[111.59368134 131.34123230]
[103.36487579 118.79983521]
[89.19964600 115.75146484]
[81.25088501 103.63687134]
[84.09372711 89.42897034]
[75.86491394 76.88757324]
[67.63610840 64.34616852]
[59.40729904 51.80477142]
[46.21368027 58.95983505]
[32.46760941 64.98577881]
[18.26550484 69.84033966]
[3.70698667 73.48947144]
[-11.10582447 75.90756226]
[-26.06902695 77.07765961]
[-41.07766342 76.99155426]
[-56.02645493 75.64984894]
[-70.81054688 73.06195831]
[-85.32623291 69.24604034]
[-99.47170258 64.22884369]
[-113.14773560 58.04557800]
[-126.25839233 50.73960495]
[-138.71171570 42.36217880]
[-150.42034912 32.97205734]
[-161.30216980 22.63510704]
[-171.28083801 11.42383671]
[-180.28637695 -0.58311468]
[-188.25561523 -13.30152512]
[-195.13262939 -26.64218140]
[-200.86920166 -40.51150894]
[-205.42509460 -54.81222153]
[-208.76834106 -69.44400787]
[-210.87550354 -84.30423737]
[-211.73179626 -99.28867340]
[-211.33120728 -114.29221344]
[-209.67654419 -129.20960999]
[-206.77941895 -143.93621826]
[-202.66015625 -158.36875916]
[-197.34765625 -172.40599060]
[-190.87915039 -185.94944763]
[-183.30006409 -198.90412903]
[-174.66351318 -211.17916870]
[-165.03009033 -222.68846130]
[-154.46739197 -233.35128784]
[-143.04946899 -243.09283447]
[-130.85644531 -251.84478760]
[-117.97383881 -259.54574585]
[-104.49200439 -266.14169312]
[-90.50550842 -271.58639526]
[-76.11246490 -275.84161377]
[-61.41383362 -278.87753296]
[-46.51271439 -280.67282104]
[-31.51362419 -281.21493530]
[-16.52177811 -280.50003052]
[-1.64233208 -278.53314209]
[13.02034187 -275.32803345]
[27.36339378 -270.90725708]
[41.28621674 -265.30175781]
[54.69115067 -258.55090332]
[67.48416901 -250.70199585]
[79.57553101 -241.81011963]
[90.88043213 -231.93763733]
[101.31957245 -221.15380859]
[110.81972504 -209.53427124]
[119.31424713 -197.16052246]
[126.74356842 -184.11936951]
[133.05555725 -170.50227356]
[138.20596313 -156.40475464]
[142.15864563 -141.92570496]
[144.88587952 -127.16668701]
[146.36853027 -112.23121643]
[146.59620667 -97.22406006]
[145.56730652 -82.25048828]
[143.28904724 -67.41552734]
[139.77742004 -52.82323456]
[135.05703735 -38.57596970]
[129.16102600 -24.77366638]
[122.13072968 -11.51314163]
[114.01547241 1.11259341]
[104.87217712 13.01497459]
[94.76497650 24.11051369]
[83.76476288 34.32138443]
[71.94869995 43.57596207]
[80.17750549 56.11736298]
[88.40631866 68.65876007]
[96.63512421 81.20016479]
[110.80035400 84.24853516]
[118.74911499 96.36312866]
[115.90627289 110.57102966]
[124.13508606 123.11242676]
[132.36389160 135.65382385]
[140.59269714 148.19523621]
[153.55050659 140.63224792]
[166.88638306 133.75779724]
[180.56376648 127.59070587]
[194.54515076 122.14788818]
[208.79225159 117.44425964]
[223.26597595 113.49271393]
[237.92668152 110.30408478]
[252.73417664 107.88710785]
[267.64785767 106.24841309]
[282.62689209 105.39247894]
[297.63018799 105.32167053]
[312.61660767 106.03616333]
[327.54510498 107.53401184]
[342.37475586 109.81111145]
[357.06491089 112.86120605]
[371.57528687 116.67594910]
[385.86614990 121.24488068]
[399.89831543 126.55548096]
[413.63327026 132.59318542]
[427.03344727 139.34146118]
[440.06207275 146.78178406]
[452.68344116 154.89378357]
[464.86297607 163.65522766]
[476.56726074 173.04208374]
[487.76425171 183.02862549]
[498.42324829 193.58750916]
[508.51501465 204.68974304]
[518.01190186 216.30494690]
[526.88787842 228.40126038]
[535.11859131 240.94551086]
[542.68157959 253.90335083]
[549.55596924 267.23925781]
[555.72302246 280.91665649]
[561.16577148 294.89804077]
[565.86938477 309.14517212]
[569.82086182 323.61889648]
[573.00946045 338.27960205]
[575.42639160 353.08712769]
[577.06506348 368.00082397]
[577.92095947 382.97982788]
[577.99169922 397.98312378]
[577.27716064 412.96954346]
[575.77923584 427.89804077]
[573.50213623 442.72769165]
[570.45196533 457.41784668]
[566.63720703 471.92822266]
[562.06823730 486.21905518]
[556.75756836 500.25119019]
[550.71984863 513.98614502]
[543.97149658 527.38629150]
[536.53112793 540.41491699]
[528.41912842 553.03625488]
[519.65765381 565.21575928]
[510.27075195 576.92004395]
[500.28417969 588.11694336]
[489.72525024 598.77593994]
[478.62298584 608.86767578]
[467.00775146 618.36450195]
[454.91143799 627.24047852]
[442.36712646 635.47113037]
[429.40927124 643.03405762]
[416.07336426 649.90844727]
[402.39593506 656.07543945]
[388.41452026 661.51818848]
[374.16741943 666.22174072]
[359.69363403 670.17315674]
[345.03292847 673.36169434]
[330.22540283 675.77862549]
[315.31170654 677.41723633]
[300.33267212 678.27307129]
[285.32940674 678.34375000]
[270.34295654 677.62915039]
[255.41447449 676.13122559]
[240.58483887 673.85406494]
[225.89471436 670.80389404]
[211.38435364 666.98901367]
[197.09352112 662.42004395]
[183.06140137 657.10931396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 132]
[41 131]
[42 130]
[43 129]
[46 126]
[47 125]
[48 124]
[49 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
