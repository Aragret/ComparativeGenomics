%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[8.39989853 714.91583252]
[-5.98076820 719.19390869]
[-20.56717110 722.70709229]
[-35.31865692 725.44549561]
[-50.19410324 727.40167236]
[-65.15206146 728.57000732]
[-80.15082550 728.94726562]
[-95.14860535 728.53247070]
[-110.10359192 727.32672119]
[-124.97410583 725.33343506]
[-139.71868896 722.55810547]
[-154.29626465 719.00848389]
[-168.66618347 714.69445801]
[-182.78842163 709.62811279]
[-196.62358093 703.82348633]
[-210.13311768 697.29681396]
[-223.27938843 690.06622314]
[-236.02574158 682.15197754]
[-248.33665466 673.57598877]
[-260.17779541 664.36230469]
[-271.51620483 654.53649902]
[-282.32022095 644.12597656]
[-292.55978394 633.15979004]
[-302.20629883 621.66851807]
[-311.23294067 609.68414307]
[-319.61453247 597.24011230]
[-327.32769775 584.37103271]
[-334.35092163 571.11285400]
[-340.66467285 557.50250244]
[-346.25131226 543.57788086]
[-351.09530640 529.37786865]
[-355.18313599 514.94195557]
[-358.50338745 500.31042480]
[-361.04684448 485.52407837]
[-362.80639648 470.62411499]
[-363.77716064 455.65203857]
[-363.95639038 440.64959717]
[-363.34362793 425.65859985]
[-361.94055176 410.72082520]
[-359.75106812 395.87792969]
[-356.78131104 381.17126465]
[-353.03955078 366.64181519]
[-348.53619385 352.33010864]
[-343.28381348 338.27600098]
[-337.29702759 324.51867676]
[-330.59255981 311.09649658]
[-323.18905640 298.04684448]
[-315.10717773 285.40606689]
[-306.36944580 273.20947266]
[-297.00018311 261.49099731]
[-287.02554321 250.28332520]
[-276.47332764 239.61769104]
[-265.37292480 229.52380371]
[-253.75526428 220.02981567]
[-241.65275574 211.16220093]
[-229.09913635 202.94564819]
[-216.12936401 195.40306091]
[-202.77960205 188.55548096]
[-189.08706665 182.42198181]
[-175.08992004 177.01966858]
[-160.82714844 172.36357117]
[-146.33854675 168.46670532]
[-131.66447449 165.33990479]
[-116.84582520 162.99188232]
[-101.92391205 161.42919922]
[-86.94033051 160.65621948]
[-71.93682861 160.67506409]
[-56.95523071 161.48570251]
[-42.03729248 163.08587646]
[-27.22459602 165.47111511]
[-12.55842209 168.63478088]
[1.92034745 172.56805420]
[16.17136002 177.25996399]
[30.15489388 182.69744873]
[43.83197403 188.86534119]
[50.71138763 175.53590393]
[57.59080124 162.20648193]
[64.47021484 148.87704468]
[71.34962463 135.54762268]
[70.63160706 132.09555054]
[71.54995728 128.12419128]
[74.33052826 124.40643311]
[78.84546661 121.78681183]
[86.31320953 108.77786255]
[83.95391083 97.37281799]
[89.82715607 87.31566620]
[100.91963196 83.76628876]
[108.58023071 70.86996460]
[116.24082947 57.97363663]
[123.90142822 45.07730865]
[131.27210999 32.01312256]
[138.34922791 18.78759766]
[145.42633057 5.56206942]
[133.01565552 -2.88822055]
[121.57352448 -12.60983086]
[111.22957611 -23.49260902]
[102.10102081 -35.41324234]
[94.29129028 -48.23666382]
[87.88886261 -61.81757355]
[82.96630096 -76.00209045]
[79.57936859 -90.62948608]
[77.76645660 -105.53403473]
[77.54808807 -120.54683685]
[78.92675018 -135.49780273]
[81.88681030 -150.21752930]
[86.39474487 -164.53921509]
[92.39945984 -178.30058289]
[99.83293152 -191.34571838]
[108.61092377 -203.52680969]
[118.63397217 -214.70584106]
[129.78851318 -224.75611877]
[141.94816589 -233.56379700]
[154.97512817 -241.02905273]
[168.72181702 -247.06732178]
[183.03247070 -251.61016846]
[197.74491882 -254.60612488]
[212.69248962 -256.02124023]
[227.70578003 -255.83950806]
[242.61470032 -254.06294250]
[257.25030518 -250.71170044]
[271.44680786 -245.82374573]
[285.04327393 -239.45446777]
[297.88571167 -231.67602539]
[309.82858276 -222.57656860]
[320.73654175 -212.25920105]
[330.48602295 -200.84080505]
[338.96658325 -188.45079041]
[346.08206177 -175.22952271]
[351.75189209 -161.32681274]
[355.91177368 -146.90019226]
[358.51464844 -132.11312866]
[359.53097534 -117.13317108]
[358.94921875 -102.13005066]
[356.77603149 -87.27376556]
[353.03598022 -72.73264313]
[347.77148438 -58.67145157]
[341.04217529 -45.24951553]
[332.92428589 -32.61891174]
[323.50982666 -20.92275810]
[312.90545654 -10.29357910]
[301.23132324 -0.85181296]
[288.61972046 7.29555893]
[275.21356201 14.05622101]
[261.16470337 19.35356712]
[246.63235474 23.12757874]
[231.78118896 25.33548927]
[216.77946472 25.95228386]
[201.79718018 24.97097206]
[187.00407410 22.40267563]
[172.56777954 18.27649117]
[158.65185547 12.63917446]
[151.57475281 25.86470222]
[144.49765015 39.09022903]
[145.16418457 42.55260849]
[144.18681335 46.50985336]
[141.35119629 50.18579483]
[136.79776001 52.73790741]
[129.13716125 65.63423157]
[121.47656250 78.53056335]
[113.81596375 91.42688751]
[114.04082489 108.19965363]
[99.32216644 116.24560547]
[91.85442352 129.25456238]
[84.67905426 142.42703247]
[77.79964447 155.75645447]
[70.92022705 169.08589172]
[64.04081726 182.41531372]
[57.16140366 195.74475098]
[70.11227417 203.31973267]
[82.64531708 211.56765747]
[94.72561646 220.46551514]
[106.31948090 229.98851013]
[117.39461517 240.11012268]
[127.92014313 250.80210876]
[137.86672974 262.03469849]
[147.20663452 273.77655029]
[155.91384888 285.99496460]
[163.96411133 298.65588379]
[171.33496094 311.72402954]
[178.00585938 325.16293335]
[183.95820618 338.93518066]
[189.17543030 353.00238037]
[193.64299011 367.32531738]
[197.34840393 381.86407471]
[200.28138733 396.57809448]
[202.43373108 411.42642212]
[203.79945374 426.36764526]
[204.37474060 441.36013794]
[204.15798950 456.36209106]
[203.14979553 471.33169556]
[201.35299683 486.22723389]
[198.77258301 501.00717163]
[195.41574097 515.63031006]
[191.29182434 530.05596924]
[186.41235352 544.24383545]
[180.79089355 558.15441895]
[174.44314575 571.74896240]
[167.38676453 584.98956299]
[159.64146423 597.83929443]
[151.22879028 610.26232910]
[142.17221069 622.22412109]
[132.49696350 633.69122314]
[122.23002625 644.63177490]
[111.40000153 655.01519775]
[100.03707886 664.81262207]
[88.17292023 673.99670410]
[75.84061432 682.54187012]
[63.07451248 690.42425537]
[49.91020584 697.62194824]
[36.38438416 704.11480713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 168]
[76 167]
[77 166]
[78 165]
[79 164]
[83 163]
[84 162]
[87 160]
[88 159]
[89 158]
[90 157]
[91 153]
[92 152]
[93 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
