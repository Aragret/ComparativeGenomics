%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[112.54567719 756.79614258]
[98.49262238 751.51501465]
[85.03523254 744.86090088]
[72.30726624 736.89990234]
[60.43522263 727.71112061]
[49.53709030 717.38598633]
[39.72118378 706.02697754]
[31.08506203 693.74707031]
[23.71455383 680.66827393]
[17.68291664 666.92065430]
[13.05009460 652.64074707]
[9.86213207 637.97052002]
[8.15071392 623.05578613]
[7.93284941 608.04473877]
[9.21070385 593.08660889]
[11.97157764 578.33007812]
[16.18803024 563.92169189]
[21.81815529 550.00482178]
[28.80599785 536.71765137]
[37.08210373 524.19226074]
[46.56422806 512.55322266]
[57.15812302 501.91610718]
[68.75849915 492.38668823]
[81.25006866 484.05966187]
[94.50867462 477.01779175]
[108.40254974 471.33105469]
[122.79360199 467.05599976]
[137.53880310 464.23507690]
[136.20056152 449.29489136]
[134.86233521 434.35470581]
[133.52409363 419.41452026]
[132.18586731 404.47433472]
[130.84762573 389.53414917]
[129.50939941 374.59396362]
[128.17115784 359.65377808]
[126.72174835 344.72396851]
[117.70234680 332.87069702]
[123.96196747 318.34048462]
[114.94257355 306.48721313]
[121.20218658 291.95697021]
[119.64166260 277.03836060]
[117.63764954 262.17285156]
[115.19192505 247.37356567]
[112.74619293 232.57429504]
[110.30046844 217.77502441]
[100.65264130 210.47804260]
[98.49394989 198.16854858]
[105.51884460 187.35125732]
[103.29373169 172.51721191]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[83.58806610 88.36641693]
[74.54679871 100.33535767]
[62.28554916 108.97605133]
[47.97296524 113.46492767]
[32.97323990 113.37413025]
[18.71605110 108.71231842]
[6.56029987 99.92382050]
[-2.33540297 87.84629822]
[-7.12317562 73.63091278]
[-7.34667873 58.63257599]
[-2.98460889 44.28083801]
[5.54726887 31.94361687]
[17.43575096 22.79681396]
[31.54770088 17.71224403]
[46.53805923 17.17453957]
[60.97804260 21.23494720]
[73.49131775 29.50645828]
[82.88520813 41.20068359]
[88.26457977 55.20411301]
[90.04704285 40.31039429]
[87.80046082 34.09232330]
[88.87071228 28.51096153]
[92.11073303 25.00221443]
[94.33584595 10.16817093]
[96.56096649 -4.66587257]
[98.67559052 -19.51606941]
[100.67960358 -34.38159943]
[102.68361664 -49.24712753]
[96.85939789 -63.95729446]
[106.22770691 -75.53675842]
[108.23171997 -90.40228271]
[106.27688599 -99.32508850]
[110.37783051 -105.47358704]
[112.60295105 -120.30763245]
[114.82806396 -135.14167786]
[117.05318451 -149.97572327]
[119.27829742 -164.80976868]
[117.21784973 -171.09196472]
[118.45379639 -176.63899231]
[121.79685211 -180.04971313]
[124.46264648 -194.81092834]
[127.12844086 -209.57214355]
[129.79423523 -224.33335876]
[116.02777100 -230.47729492]
[104.13211060 -239.73777771]
[94.79884338 -251.57641602]
[88.57059479 -265.30496216]
[85.80947113 -280.12518311]
[86.67599487 -295.17553711]
[91.11979675 -309.58093262]
[98.88251495 -322.50393677]
[109.51283264 -333.19317627]
[122.39272308 -341.02719116]
[136.77336121 -345.55053711]
[151.81867981 -346.50024414]
[166.65394592 -343.82107544]
[180.41668701 -337.66879272]
[192.30673218 -328.40109253]
[201.63282776 -316.55679321]
[207.85275269 -302.82449341]
[210.60488892 -288.00259399]
[209.72923279 -272.95278931]
[205.27670288 -258.55004883]
[197.50614929 -245.63177490]
[186.86935425 -234.94898987]
[173.98472595 -227.12277222]
[159.60134888 -222.60813904]
[144.55545044 -221.66757202]
[141.88966370 -206.90635681]
[139.22386169 -192.14512634]
[136.55807495 -177.38391113]
[134.11233521 -162.58464050]
[131.88722229 -147.75059509]
[129.66210938 -132.91656494]
[127.43698883 -118.08251190]
[125.21187592 -103.24846649]
[123.09725189 -88.39826965]
[121.09323883 -73.53274536]
[127.06079865 -59.88586044]
[117.54914856 -47.24311447]
[115.54513550 -32.37758636]
[113.54111481 -17.51205635]
[115.76280975 -10.46323490]
[111.39501190 -2.44075561]
[109.16989136 12.39328766]
[106.94477844 27.22733116]
[104.94076538 42.09286118]
[103.15829468 56.98657608]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[118.12776947 170.29209900]
[120.35289001 185.12614441]
[132.15492249 199.26097107]
[125.09973907 215.32929993]
[127.54546356 230.12857056]
[129.99119568 244.92784119]
[132.43692017 259.72711182]
[135.30979919 262.98297119]
[136.84298706 266.61804199]
[137.08177185 270.16464233]
[136.21867371 273.21780396]
[134.56027222 275.47784424]
[136.12078857 290.39645386]
[145.25180054 303.31680298]
[138.88056946 316.77993774]
[148.01158142 329.70028687]
[141.64035034 343.16345215]
[145.64556885 351.37295532]
[143.11134338 358.31555176]
[144.44958496 373.25573730]
[145.78781128 388.19592285]
[147.12605286 403.13610840]
[148.46427917 418.07629395]
[149.80252075 433.01647949]
[151.14074707 447.95666504]
[152.47898865 462.89685059]
[167.49079895 463.05233765]
[182.41252136 464.70178223]
[197.09587097 467.82876587]
[211.39489746 472.40222168]
[225.16748047 478.37670898]
[238.27676392 485.69281006]
[250.59243774 494.27783203]
[261.99209595 504.04647827]
[272.36248779 514.90161133]
[281.60046387 526.73535156]
[289.61428833 539.43017578]
[296.32424927 552.85980225]
[301.66369629 566.89080811]
[305.57958984 581.38366699]
[308.03292847 596.19451904]
[308.99942017 611.17596436]
[308.46939087 626.17919922]
[306.44812012 641.05511475]
[302.95571899 655.65588379]
[298.02691650 669.83636475]
[291.71063232 683.45556641]
[284.06970215 696.37823486]
[275.18005371 708.47583008]
[265.13003540 719.62823486]
[254.01950073 729.72448730]
[241.95890808 738.66436768]
[229.06811523 746.35888672]
[215.47525024 752.73168945]
[201.31538391 757.71936035]
[186.72927856 761.27239990]
[171.86187744 763.35540771]
[156.86094666 763.94781494]
[141.87559509 763.04357910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 177]
[29 176]
[30 175]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 168]
[38 166]
[40 164]
[41 163]
[42 158]
[43 157]
[44 156]
[45 155]
[48 153]
[49 152]
[50 151]
[51 150]
[52 149]
[53 148]
[55 146]
[56 145]
[75 144]
[76 143]
[79 142]
[80 141]
[81 140]
[82 138]
[83 137]
[84 136]
[86 134]
[87 133]
[89 132]
[90 131]
[91 130]
[92 129]
[93 128]
[96 127]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
