%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[24.57426834 255.39103699]
[32.48150253 268.17874146]
[38.17596054 282.09359741]
[41.50230026 296.75598145]
[42.36977005 311.76589966]
[40.75471115 326.71383667]
[36.70117569 341.19204712]
[30.31975174 354.80557251]
[21.78452873 367.18295288]
[11.32835484 377.98657227]
[-0.76351947 386.92169189]
[-14.16121864 393.74456787]
[-28.49924278 398.26904297]
[-43.38644409 400.37170410]
[-58.41668320 399.99517822]
[-73.17992401 397.14974976]
[-87.27342224 391.91302490]
[-100.31269073 384.42788696]
[-111.94200897 374.89849854]
[-121.84411621 363.58489990]
[-129.74888611 350.79565430]
[-135.44067383 336.87969971]
[-138.76417542 322.21670532]
[-139.62875366 307.20660400]
[-138.01081848 292.25897217]
[-133.95449829 277.78152466]
[-127.57044983 264.16928101]
[-119.03284454 251.79351807]
[-108.57458496 240.99191284]
[-96.48098755 232.05911255]
[-83.08197784 225.23883057]
[-68.74308014 220.71711731]
[-53.85547638 218.61732483]
[-38.82530975 218.99674988]
[-24.06261635 221.84503174]
[-9.97012901 227.08445740]
[-2.50238800 214.07551575]
[4.96535301 201.06655884]
[12.43309402 188.05760193]
[12.05908108 173.16769409]
[25.63976669 165.05131531]
[33.10750961 152.04237366]
[20.62629890 160.36218262]
[6.48511553 165.36488342]
[-8.45130157 166.74453735]
[-23.26958656 164.41677856]
[-37.06359482 158.52395630]
[-48.98981476 149.42642212]
[-58.31895828 137.68048096]
[-64.48053741 124.00440979]
[-67.09777832 109.23450470]
[-66.01063538 94.27394867]
[-61.28557968 80.03759766]
[-53.21155548 67.39598846]
[-42.28228760 57.12218094]
[-29.16611290 49.84440994]
[-14.66508579 46.00772095]
[0.33405000 45.84672165]
[14.91409111 49.37126541]
[28.18346405 56.36581802]
[39.33073807 66.40266418]
[47.67425537 78.86804199]
[52.70380783 92.99969482]
[54.11183548 107.93346405]
[51.81223297 122.75614166]
[45.94561386 136.56134033]
[57.34807587 126.81538391]
[68.75054169 117.06941223]
[80.15299988 107.32344818]
[91.55546570 97.57748413]
[92.05014801 94.57003021]
[93.65006256 91.67610168]
[96.31524658 89.30539703]
[99.85498047 87.84713745]
[103.93901062 87.61545563]
[115.90135193 78.56546021]
[127.86368561 69.51545715]
[139.82601929 60.46545792]
[151.78836060 51.41545868]
[146.88331604 37.11867523]
[146.63775635 22.02622032]
[151.06314087 7.61634970]
[159.71405029 -4.70342636]
[171.73297119 -13.73382664]
[185.93528748 -18.60053635]
[200.92607117 -18.83884621]
[215.23699951 -14.43800068]
[227.47026062 -5.84101772]
[239.43260193 -14.89101791]
[251.39494324 -23.94101715]
[263.35726929 -32.99101639]
[273.92431641 -43.63702774]
[282.88500977 -55.66640472]
[291.84570312 -67.69578552]
[300.80642700 -79.72515869]
[309.76712036 -91.75453949]
[318.72781372 -103.78391266]
[327.68850708 -115.81329346]
[316.66867065 -126.01110077]
[306.79522705 -137.32249451]
[298.18011475 -149.61930847]
[290.92086792 -162.76219177]
[285.09976196 -176.60223389]
[280.78277588 -190.98263550]
[278.01882935 -205.74043274]
[276.83923340 -220.70841980]
[277.25732422 -235.71699524]
[279.26840210 -250.59609985]
[282.84963989 -265.17715454]
[287.96047974 -279.29489136]
[294.54306030 -292.78942871]
[302.52270508 -305.50781250]
[311.80905151 -317.30590820]
[322.29690552 -328.05010986]
[333.86737061 -337.61862183]
[346.38937378 -345.90304565]
[359.72100830 -352.80947876]
[373.71127319 -358.25970459]
[388.20159912 -362.19198608]
[403.02780151 -364.56170654]
[418.02191162 -365.34204102]
[433.01400757 -364.52416992]
[447.83422852 -362.11734009]
[462.31466675 -358.14883423]
[476.29122925 -352.66360474]
[489.60556030 -345.72381592]
[502.10681152 -337.40808105]
[513.65325928 -327.81063843]
[524.11419678 -317.04025269]
[533.37097168 -305.21893311]
[541.31878662 -292.48062134]
[547.86755371 -278.96966553]
[552.94305420 -264.83914185]
[556.48779297 -250.24919128]
[558.46160889 -235.36509705]
[558.84216309 -220.35552979]
[557.62506104 -205.39053345]
[554.82421875 -190.63970947]
[550.47125244 -176.27015686]
[544.61553955 -162.44471741]
[537.32342529 -149.32003784]
[528.67755127 -137.04483032]
[518.77581787 -125.75818634]
[507.73049927 -115.58798981]
[495.66671753 -106.64947510]
[482.72116089 -99.04392242]
[469.04049683 -92.85750580]
[454.77975464 -88.16033173]
[440.10052490 -85.00561523]
[425.16912842 -83.42910767]
[410.15475464 -83.44866180]
[395.22750854 -85.06406403]
[380.55654907 -88.25701141]
[366.30807495 -92.99131775]
[352.64358521 -99.21334839]
[339.71786499 -106.85260010]
[330.75717163 -94.82321930]
[321.79647827 -82.79383850]
[312.83578491 -70.76446533]
[303.87509155 -58.73508453]
[294.91439819 -46.70570755]
[285.95370483 -34.67633057]
[299.44824219 -41.22592163]
[314.26455688 -43.56627274]
[329.12084961 -41.49491501]
[342.73190308 -35.19104767]
[353.92025757 -25.20001221]
[361.71798706 -12.38613701]
[365.45053101 2.14205098]
[364.79495239 17.12771797]
[359.80798340 31.27445412]
[350.92105103 43.35842514]
[338.90295410 52.33424377]
[324.79336548 57.42541885]
[309.81295776 58.19150543]
[295.25762939 54.56623459]
[282.38659668 46.86322403]
[272.31329346 35.74886703]
[265.90921021 22.18465996]
[263.72833252 7.34404659]
[265.95935059 -7.48911190]
[272.40728760 -21.02868080]
[260.44494629 -11.97868061]
[248.48260498 -2.92868114]
[236.52026367 6.12131882]
[241.46598816 20.23162460]
[241.80868530 35.20001602]
[237.50219727 49.56087494]
[228.95623779 61.90418625]
[216.99737549 71.01396942]
[202.78915405 75.98806000]
[187.71887207 76.32746124]
[173.26214600 71.98634338]
[160.83836365 63.37779617]
[148.87602234 72.42779541]
[136.91368103 81.47779846]
[124.95134735 90.52779388]
[112.98901367 99.57779694]
[101.30142975 108.97994995]
[89.89897156 118.72591400]
[78.49650574 128.47187805]
[67.09403992 138.21784973]
[55.69158173 147.96380615]
[46.11645889 159.51011658]
[38.64871979 172.51905823]
[38.48859024 188.33946228]
[25.44204712 195.52534485]
[17.97430611 208.53430176]
[10.50656414 221.54325867]
[3.03882313 234.55220032]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 210]
[37 209]
[38 208]
[39 207]
[41 205]
[42 204]
[66 203]
[67 202]
[68 201]
[69 200]
[70 199]
[75 198]
[76 197]
[77 196]
[78 195]
[79 194]
[88 185]
[89 184]
[90 183]
[91 182]
[92 162]
[93 161]
[94 160]
[95 159]
[96 158]
[97 157]
[98 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
