%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[37.07247543 607.81988525]
[24.07254791 615.31311035]
[10.63191605 621.98364258]
[-3.19742107 627.80566406]
[-17.36196136 632.75665283]
[-31.80690193 636.81744385]
[-46.47636032 639.97235107]
[-61.31358337 642.20916748]
[-76.26116943 643.51922607]
[-91.26128387 643.89746094]
[-106.25589752 643.34240723]
[-121.18699646 641.85626221]
[-135.99682617 639.44464111]
[-150.62806702 636.11700439]
[-165.02412415 631.88623047]
[-179.12931824 626.76855469]
[-192.88905334 620.78387451]
[-206.25010681 613.95538330]
[-219.16078186 606.30938721]
[-231.57115173 597.87561035]
[-243.43316650 588.68652344]
[-254.70095825 578.77777100]
[-265.33093262 568.18768311]
[-275.28195190 556.95715332]
[-284.51553345 545.12976074]
[-292.99594116 532.75122070]
[-300.69036865 519.86932373]
[-307.56906128 506.53402710]
[-313.60537720 492.79687500]
[-318.77597046 478.71102905]
[-323.06085205 464.33096313]
[-326.44345093 449.71231079]
[-328.91067505 434.91168213]
[-330.45297241 419.98626709]
[-331.06436157 404.99383545]
[-330.74249268 389.99240112]
[-329.48861694 375.04000854]
[-327.30755615 360.19448853]
[-324.20779419 345.51327515]
[-320.20129395 331.05316162]
[-315.30355835 316.87011719]
[-309.53353882 303.01901245]
[-302.91357422 289.55340576]
[-295.46923828 276.52542114]
[-287.22937012 263.98544312]
[-278.22583008 251.98199463]
[-268.49346924 240.56150818]
[-258.06991577 229.76818848]
[-246.99548340 219.64376831]
[-235.31306458 210.22741699]
[-223.06782532 201.55558777]
[-210.30714417 193.66181946]
[-197.08039856 186.57666016]
[-183.43875122 180.32749939]
[-169.43498230 174.93852234]
[-155.12327576 170.43058777]
[-140.55899048 166.82112122]
[-125.79848480 164.12411499]
[-110.89885712 162.34996033]
[-95.91775513 161.50555420]
[-80.91313171 161.59416199]
[-65.94303894 162.61543274]
[-51.06540298 164.56541443]
[-36.33777618 167.43655396]
[-21.81713676 171.21775818]
[-7.55966234 175.89440918]
[6.37948608 181.44837952]
[19.94638062 187.85821533]
[33.08853149 195.09909058]
[33.37976074 180.20733643]
[47.30931854 172.70545959]
[55.35049057 160.04293823]
[63.20224762 147.26210022]
[70.86284637 134.36576843]
[78.52343750 121.46943665]
[86.18403625 108.57311249]
[85.95917511 91.80034637]
[100.67783356 83.75439453]
[108.14557648 70.74544525]
[115.61331940 57.73649216]
[123.08106232 44.72753906]
[130.54879761 31.71858788]
[138.01654053 18.70963669]
[143.36772156 4.69661283]
[146.47183228 -9.97868919]
[149.57594299 -24.65399170]
[152.68005371 -39.32929611]
[155.78416443 -54.00459671]
[157.56663513 -68.89831543]
[158.01324463 -83.89166260]
[158.45985413 -98.88501740]
[158.90644836 -113.87836456]
[144.27754211 -117.44048309]
[130.70909119 -123.96663666]
[118.79424286 -133.17153931]
[109.05387115 -144.65277100]
[101.91378021 -157.90844727]
[97.68611145 -172.35906982]
[96.55566406 -187.37292480]
[98.57187653 -202.29367065]
[103.64659119 -216.46902466]
[111.55797577 -229.27932739]
[121.96017456 -240.16455078]
[134.39843750 -248.64883423]
[148.32904053 -254.36128235]
[163.14297485 -257.05218506]
[178.19265747 -256.60391235]
[192.82015991 -253.03604126]
[206.38604736 -246.50454712]
[218.29727173 -237.29495239]
[228.03312683 -225.80989075]
[235.16799927 -212.55140686]
[239.38998413 -198.09912109]
[240.51452637 -183.08482361]
[238.49244690 -168.16488647]
[233.41213989 -153.99151611]
[225.49572754 -141.18432617]
[215.08924866 -130.30320740]
[202.64764404 -121.82381439]
[188.71479797 -116.11683655]
[173.89981079 -113.43175507]
[173.45320129 -98.43840790]
[173.00659180 -83.44506073]
[172.55998230 -68.45170593]
[181.06079102 -80.81036377]
[194.03877258 -88.33179474]
[208.98809814 -89.56372070]
[223.02227783 -84.26828766]
[233.43154907 -73.46795654]
[238.20602417 -59.24809647]
[236.42382812 -44.35434341]
[228.42909241 -31.66245270]
[215.76545715 -23.62302208]
[200.87808228 -21.78834343]
[186.64149475 -26.51266479]
[175.80451965 -36.88379288]
[170.45947266 -50.90048599]
[167.35536194 -36.22518539]
[164.25125122 -21.54988098]
[161.14714050 -6.87457943]
[158.04302979 7.80072308]
[167.43557739 -3.89457583]
[179.60295105 -12.66698074]
[193.66677856 -17.88320351]
[208.61175537 -19.16668129]
[223.35902405 -16.42475891]
[236.84394836 -9.85537815]
[248.09304810 0.06721292]
[256.29425049 12.62669277]
[260.85546875 26.91638184]
[261.44744873 41.90469742]
[258.02746582 56.50961685]
[250.84237671 69.67679596]
[240.41091919 80.45569611]
[227.48612976 88.06816864]
[213.00105286 91.96466064]
[198.00138855 91.86389160]
[183.56997681 87.77312469]
[170.74862671 79.98768616]
[160.46293640 69.06961060]
[153.45541382 55.80707932]
[150.23196411 41.15752792]
[151.02549744 26.17737770]
[143.55775452 39.18632889]
[136.09001160 52.19528198]
[128.62226868 65.20423126]
[121.15453339 78.21318817]
[113.68679047 91.22213745]
[116.04608917 102.62718201]
[110.17284393 112.68433380]
[99.08036804 116.23371124]
[91.41976929 129.13003540]
[83.75917053 142.02636719]
[76.09857178 154.92268372]
[75.63490295 161.51788330]
[72.39630127 166.18783569]
[68.01301575 168.08410645]
[59.97184372 180.74662781]
[59.10545349 196.54409790]
[45.75105667 203.14025879]
[57.89321136 211.95585632]
[69.46381378 221.50926208]
[80.41809845 231.76354980]
[90.71368408 242.67900085]
[100.31074524 254.21343994]
[109.17214203 266.32220459]
[117.26360321 278.95843506]
[124.55381775 292.07330322]
[131.01457214 305.61599731]
[136.62089539 319.53417969]
[141.35107422 333.77398682]
[145.18682861 348.28030396]
[148.11329651 362.99703979]
[150.11915588 377.86724854]
[151.19667053 392.83340454]
[151.34165955 407.83758545]
[150.55355835 422.82174683]
[148.83541870 437.72793579]
[146.19387817 452.49847412]
[142.63917542 467.07623291]
[138.18505859 481.40478516]
[132.84873962 495.42868042]
[126.65088654 509.09371948]
[119.61546326 522.34698486]
[111.76969910 535.13726807]
[103.14395142 547.41497803]
[93.77157593 559.13275146]
[83.68884277 570.24511719]
[72.93476105 580.70916748]
[61.55093002 590.48437500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 180]
[71 178]
[72 177]
[73 174]
[74 173]
[75 172]
[76 171]
[78 168]
[79 167]
[80 166]
[81 165]
[82 164]
[83 163]
[84 141]
[85 140]
[86 139]
[87 138]
[88 137]
[89 124]
[90 123]
[91 122]
[92 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
