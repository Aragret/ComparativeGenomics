%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[108.56452942 679.36663818]
[95.89146423 671.32250977]
[84.00241089 662.15924072]
[72.99588013 651.95275879]
[62.96308899 640.78771973]
[53.98716736 628.75659180]
[46.14249802 615.95910645]
[39.49407959 602.50122070]
[34.09701157 588.49456787]
[29.99600792 574.05511475]
[27.22505760 559.30261230]
[25.80712128 544.35919189]
[25.75394821 529.34881592]
[27.06597900 514.39575195]
[29.73234177 499.62396240]
[33.73094177 485.15585327]
[39.02864075 471.11129761]
[45.58154678 457.60665894]
[53.33535385 444.75390625]
[62.22581100 432.65948486]
[72.17925262 421.42361450]
[83.11318970 411.13946533]
[94.93702698 401.89218140]
[107.55278015 393.75842285]
[120.85591888 386.80560303]
[134.73619080 381.09130859]
[149.07859802 376.66290283]
[145.97448730 361.98760986]
[142.87037659 347.31228638]
[139.76626587 332.63699341]
[136.66215515 317.96170044]
[132.20251465 312.06820679]
[133.62280273 303.04486084]
[123.58187103 292.04351807]
[128.52020264 277.01278687]
[125.63492584 262.29287720]
[122.74965668 247.57299805]
[119.86437988 232.85310364]
[116.97911072 218.13320923]
[114.09384155 203.41333008]
[111.09906769 188.71531677]
[107.99495697 174.04002380]
[104.89084625 159.36471558]
[94.68724060 148.51409912]
[99.40123749 133.41149902]
[96.29712677 118.73619843]
[84.21060181 110.74481964]
[81.21212769 96.56894684]
[89.02757263 84.36791229]
[85.92346191 69.69261169]
[82.81935120 55.01731110]
[79.71524048 40.34200668]
[76.61112976 25.66670609]
[73.50701904 10.99140358]
[70.40290833 -3.68389893]
[67.29879761 -18.35920143]
[54.33618164 -26.99680710]
[51.39722443 -41.92387009]
[59.71174622 -54.22851562]
[56.60763550 -68.90381622]
[53.39436340 -83.55560303]
[42.79270935 -95.29934692]
[47.51895905 -109.42421722]
[44.19670105 -124.05167389]
[40.87443924 -138.67913818]
[37.55218124 -153.30659485]
[34.49060440 -156.38568115]
[32.74377441 -159.92306519]
[32.29431915 -163.44915771]
[32.97415161 -166.54826355]
[34.49509811 -168.90301514]
[32.04936981 -183.70228577]
[29.60364342 -198.50155640]
[27.15791512 -213.30082703]
[24.27264214 -228.02072144]
[20.95038223 -242.64817810]
[17.62812424 -257.27563477]
[14.30586433 -271.90310669]
[-0.68706650 -270.84835815]
[-15.66528130 -272.09475708]
[-30.27767181 -275.61306763]
[-44.18169785 -281.32083130]
[-57.05143356 -289.08422852]
[-68.58518982 -298.72128296]
[-78.51261139 -310.00607300]
[-86.60096741 -322.67410278]
[-92.66065979 -336.42840576]
[-96.54965210 -350.94653320]
[-98.17676544 -365.88818359]
[-97.50386810 -380.90310669]
[-94.54673004 -395.63931274]
[-89.37467957 -409.75137329]
[-82.10894012 -422.90847778]
[-72.91983795 -434.80221558]
[-62.02278900 -445.15377808]
[-49.67322159 -453.72048950]
[-36.16063690 -460.30154419]
[-21.80178452 -464.74270630]
[-6.93325663 -466.93981934]
[8.09640598 -466.84140015]
[22.93488503 -464.44976807]
[37.23434830 -459.82095337]
[50.65959549 -453.06350708]
[62.89591599 -444.33581543]
[73.65647888 -433.84243774]
[82.68903351 -421.82937622]
[89.78185272 -408.57824707]
[94.76866150 -394.39968872]
[97.53256989 -379.62600708]
[98.00878143 -364.60357666]
[96.18614197 -349.68450928]
[92.10736084 -335.21853638]
[85.86807251 -321.54479980]
[77.61451721 -308.98376465]
[67.54016876 -297.82992554]
[55.88120270 -288.34475708]
[42.91090393 -280.75054932]
[28.93332481 -275.22537231]
[32.25558472 -260.59790039]
[35.57784271 -245.97044373]
[38.90010452 -231.34298706]
[41.19746399 -229.73666382]
[42.99696350 -227.12353516]
[43.91193771 -223.68869019]
[43.62979889 -219.75360107]
[41.95718765 -215.74655151]
[44.40291214 -200.94728088]
[46.84864044 -186.14801025]
[49.29436874 -171.34873962]
[52.17964172 -156.62886047]
[55.50189972 -142.00138855]
[58.82416153 -127.37393188]
[62.14641953 -112.74647522]
[72.51044464 -102.04898834]
[68.02182007 -86.87786865]
[72.56871796 -81.05141449]
[71.28293610 -72.00792694]
[74.38704681 -57.33262634]
[86.97186279 -49.44859314]
[90.32893372 -34.60997009]
[81.97410583 -21.46331215]
[85.07821655 -6.78800917]
[88.18231964 7.88729334]
[91.28643036 22.56259537]
[94.39054108 37.23789978]
[97.49465179 51.91320038]
[100.59876251 66.58850098]
[103.70287323 81.26380157]
[115.78939819 89.25518036]
[118.78787231 103.43105316]
[110.97242737 115.63208771]
[114.07653809 130.30738831]
[124.50217438 142.20767212]
[119.56614685 156.26060486]
[122.67025757 170.93591309]
[125.77436829 185.61120605]
[130.61192322 193.35948181]
[128.81373596 200.52804565]
[131.69900513 215.24794006]
[134.58427429 229.96783447]
[137.46954346 244.68772888]
[140.35481262 259.40762329]
[143.24009705 274.12750244]
[153.48739624 286.18170166]
[148.34268188 300.15957642]
[151.33746338 314.85757446]
[154.44157410 329.53289795]
[157.54568481 344.20819092]
[160.64979553 358.88348389]
[163.75390625 373.55880737]
[178.66105652 371.80035400]
[193.66633606 371.40478516]
[208.64543152 372.37536621]
[223.47419739 374.70407104]
[238.02976990 378.37161255]
[252.19151306 383.34756470]
[265.84210205 389.59069824]
[278.86840820 397.04928589]
[291.16247559 405.66156006]
[302.62246704 415.35610962]
[313.15338135 426.05261230]
[322.66796875 437.66241455]
[331.08737183 450.08935547]
[338.34185791 463.23040771]
[344.37127686 476.97674561]
[349.12570190 491.21438599]
[352.56570435 505.82540894]
[354.66281128 520.68872070]
[355.39959717 535.68109131]
[354.76998901 550.67840576]
[352.77920532 565.55627441]
[349.44372559 580.19152832]
[344.79122925 594.46282959]
[338.86019897 608.25189209]
[331.69985962 621.44445801]
[323.36947632 633.93127441]
[313.93814087 645.60882568]
[303.48394775 656.38031006]
[292.09356689 666.15655518]
[279.86135864 674.85644531]
[266.88873291 682.40795898]
[253.28311157 688.74853516]
[239.15730286 693.82562256]
[224.62832642 697.59710693]
[209.81657410 700.03173828]
[194.84480286 701.10937500]
[179.83706665 700.82110596]
[164.91773987 699.16925049]
[150.21041870 696.16754150]
[135.83700562 691.84088135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 170]
[28 169]
[29 168]
[30 167]
[31 166]
[33 165]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[40 158]
[41 156]
[42 155]
[43 154]
[45 152]
[46 151]
[49 148]
[50 147]
[51 146]
[52 145]
[53 144]
[54 143]
[55 142]
[56 141]
[59 138]
[60 137]
[61 135]
[63 133]
[64 132]
[65 131]
[66 130]
[71 129]
[72 128]
[73 127]
[74 126]
[75 121]
[76 120]
[77 119]
[78 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
