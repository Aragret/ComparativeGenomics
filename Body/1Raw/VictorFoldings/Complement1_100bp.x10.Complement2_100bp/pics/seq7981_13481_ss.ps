%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[276.69165039 340.91867065]
[286.93164062 329.93231201]
[277.27084351 318.45761108]
[267.61001587 306.98291016]
[257.94921875 295.50820923]
[248.28840637 284.03350830]
[238.62759399 272.55880737]
[228.96678162 261.08410645]
[219.30596924 249.60942078]
[209.64517212 238.13471985]
[192.84661865 233.05772400]
[189.76997375 214.90240479]
[179.93940735 203.57281494]
[170.10882568 192.24320984]
[160.27824402 180.91362000]
[150.44766235 169.58403015]
[140.61708069 158.25444031]
[126.43194580 153.71226501]
[123.23172760 138.21809387]
[109.04660034 133.67591858]
[105.84638214 118.18174744]
[91.40087891 117.05319214]
[81.90485382 106.10916901]
[82.82402039 91.64883423]
[67.93574524 86.29628754]
[65.43867493 71.61248779]
[55.60809326 60.28289413]
[45.77751541 48.95330048]
[35.94693375 37.62370682]
[26.11635208 26.29411507]
[16.28577232 14.96452141]
[1.39749348 9.61197662]
[-1.09957397 -5.07182169]
[-13.88677883 -6.76007080]
[-21.84144974 -16.39889717]
[-21.11986542 -28.47390747]
[-30.78067589 -39.94860840]
[-40.44148636 -51.42330933]
[-50.10229874 -62.89801025]
[-56.17841339 -65.50422668]
[-59.52399826 -70.09814453]
[-59.87374496 -74.86119843]
[-69.18862915 -86.61845398]
[-78.50350952 -98.37570190]
[-87.81839752 -110.13294983]
[-97.13327789 -121.89020538]
[-109.63594055 -113.58659363]
[-122.78958893 -106.35831451]
[-136.50195312 -100.25605774]
[-150.67686462 -95.32263947]
[-165.21487427 -91.59265900]
[-180.01402283 -89.09226990]
[-194.97048950 -87.83902740]
[-209.97937012 -87.84171295]
[-224.93537903 -89.10031128]
[-239.73362732 -91.60599518]
[-254.27030945 -95.34118652]
[-268.44345093 -100.27967834]
[-282.15362549 -106.38684082]
[-295.30468750 -113.61983490]
[-307.80438232 -121.92791748]
[-319.56503296 -131.25282288]
[-330.50411987 -141.52912903]
[-340.54495239 -152.68476868]
[-349.61709595 -164.64147949]
[-357.65689087 -177.31539917]
[-364.60794067 -190.61763000]
[-370.42150879 -204.45486450]
[-375.05682373 -218.73002625]
[-378.48132324 -233.34301758]
[-380.67105103 -248.19129944]
[-381.61059570 -263.17074585]
[-381.29342651 -278.17626953]
[-379.72167969 -293.10263062]
[-376.90646362 -307.84512329]
[-372.86746216 -322.30035400]
[-367.63305664 -336.36688232]
[-361.23995972 -349.94607544]
[-353.73297119 -362.94268799]
[-345.16476440 -375.26553345]
[-335.59548950 -386.82818604]
[-325.09219360 -397.54956055]
[-313.72860718 -407.35440063]
[-301.58441162 -416.17401123]
[-288.74478149 -423.94644165]
[-275.29983521 -430.61721802]
[-261.34381104 -436.13955688]
[-246.97463989 -440.47470093]
[-232.29310608 -443.59225464]
[-217.40219116 -445.47036743]
[-202.40635681 -446.09582520]
[-187.41076660 -445.46423340]
[-172.52061462 -443.58007812]
[-157.84036255 -440.45654297]
[-143.47296143 -436.11553955]
[-129.51919556 -430.58752441]
[-116.07694244 -423.91125488]
[-103.24050140 -416.13357544]
[-91.09989929 -407.30905151]
[-79.74030304 -397.49954224]
[-69.24139404 -386.77389526]
[-59.67681122 -375.20733643]
[-51.11364365 -362.88101196]
[-43.61196136 -349.88134766]
[-37.22437668 -336.29953003]
[-31.99570274 -322.23086548]
[-27.96261215 -307.77401733]
[-25.15339279 -293.03036499]
[-23.58775330 -278.10336304]
[-23.27667236 -263.09771729]
[-24.22233391 -248.11865234]
[-26.41810417 -233.27125549]
[-29.84858131 -218.65966797]
[-34.48970413 -204.38639832]
[-40.30891418 -190.55152893]
[-47.26539612 -177.25213623]
[-55.31035233 -164.58149719]
[-64.38735962 -152.62847900]
[-74.43273163 -141.47694397]
[-85.37602997 -131.20509338]
[-76.06114197 -119.44783783]
[-66.74626160 -107.69058228]
[-57.43137741 -95.93333435]
[-48.11649323 -84.17607880]
[-38.62759781 -72.55882263]
[-28.96678543 -61.08411789]
[-19.30597496 -49.60941696]
[-9.64516544 -38.13471985]
[7.15337849 -33.05772781]
[10.23001957 -14.90240288]
[24.41514778 -10.36022568]
[27.61536407 5.13394070]
[37.44594574 16.46353340]
[47.27652740 27.79312706]
[57.10710907 39.12271881]
[66.93769073 50.45231247]
[76.76827240 61.78190613]
[90.95339966 66.32408142]
[94.15361786 81.81825256]
[108.59912109 82.94680786]
[118.09514618 93.89083099]
[117.17597961 108.35116577]
[132.06425476 113.70371246]
[134.56132507 128.38751221]
[149.44960022 133.74005127]
[151.94667053 148.42385864]
[161.77725220 159.75344849]
[171.60783386 171.08303833]
[181.43841553 182.41262817]
[191.26899719 193.74223328]
[201.09957886 205.07182312]
[213.88677979 206.76007080]
[221.84144592 216.39889526]
[221.11987305 228.47390747]
[230.78067017 239.94860840]
[240.44148254 251.42330933]
[250.10229492 262.89801025]
[259.76309204 274.37271118]
[269.42391968 285.84741211]
[279.08471680 297.32211304]
[288.74554443 308.79681396]
[298.40634155 320.27151489]
[310.97680664 312.05319214]
[324.44625854 305.41003418]
[338.61825562 300.43893433]
[353.28613281 297.21234131]
[368.23599243 295.77734375]
[383.24981689 296.15487671]
[398.10864258 298.33938599]
[412.59582520 302.29907227]
[426.50006104 307.97616577]
[439.61862183 315.28784180]
[451.76019287 324.12753296]
[462.74768066 334.36630249]
[472.42086792 345.85485840]
[480.63870239 358.42562866]
[487.28137207 371.89532471]
[492.25195312 386.06750488]
[495.47796631 400.73550415]
[496.91241455 415.68539429]
[496.53433228 430.69921875]
[494.34924316 445.55798340]
[490.38903809 460.04501343]
[484.71142578 473.94903564]
[477.39926147 487.06732178]
[468.55911255 499.20852661]
[458.31991577 510.19564819]
[446.83102417 519.86840820]
[434.25994873 528.08581543]
[420.79000854 534.72790527]
[406.61764526 539.69799805]
[391.94952393 542.92346191]
[376.99954224 544.35736084]
[361.98574829 543.97869873]
[347.12707520 541.79309082]
[332.64019775 537.83233643]
[318.73638916 532.15417480]
[305.61837769 524.84149170]
[293.47747803 516.00091553]
[282.49075317 505.76132202]
[272.81842041 494.27206421]
[264.60150146 481.70068359]
[257.95986938 468.23046875]
[252.99035645 454.05792236]
[249.76541138 439.38967896]
[248.33209229 424.43966675]
[248.71130371 409.42590332]
[250.89749146 394.56729126]
[254.85879517 380.08056641]
[260.53741455 366.17694092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 162]
[3 161]
[4 160]
[5 159]
[6 158]
[7 157]
[8 156]
[9 155]
[10 154]
[12 151]
[13 150]
[14 149]
[15 148]
[16 147]
[17 146]
[19 144]
[21 142]
[24 139]
[26 137]
[27 136]
[28 135]
[29 134]
[30 133]
[31 132]
[33 130]
[36 128]
[37 127]
[38 126]
[39 125]
[42 124]
[43 123]
[44 122]
[45 121]
[46 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
