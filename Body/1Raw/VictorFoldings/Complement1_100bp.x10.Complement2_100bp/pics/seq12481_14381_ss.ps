%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[76.15820312 647.46112061]
[61.23020554 648.97814941]
[46.23677444 649.56420898]
[31.23590851 649.21697998]
[16.28564835 647.93780518]
[1.44383609 645.73162842]
[-13.23211098 642.60705566]
[-27.68541336 638.57611084]
[-41.86015320 633.65435791]
[-55.70148849 627.86096191]
[-69.15587616 621.21820068]
[-82.17125702 613.75183105]
[-94.69728088 605.49078369]
[-106.68547821 596.46691895]
[-118.08948517 586.71527100]
[-128.86515808 576.27343750]
[-138.97084045 565.18194580]
[-148.36740112 553.48358154]
[-157.01850891 541.22369385]
[-164.89068604 528.44970703]
[-171.95346069 515.21099854]
[-178.17955017 501.55877686]
[-183.54481506 487.54592896]
[-188.02854919 473.22662354]
[-191.61335754 458.65625000]
[-194.28541565 443.89120483]
[-196.03434753 428.98858643]
[-196.85340881 414.00607300]
[-196.73942566 399.00161743]
[-195.69284058 384.03329468]
[-193.71769714 369.15896606]
[-190.82164001 354.43621826]
[-187.01588440 339.92199707]
[-182.31512451 325.67245483]
[-176.73757935 311.74270630]
[-170.30482483 298.18667603]
[-163.04171753 285.05679321]
[-154.97637939 272.40386963]
[-146.14002991 260.27682495]
[-136.56681824 248.72257996]
[-126.29380798 237.78587341]
[-115.36073303 227.50898743]
[-103.80989838 217.93168640]
[-91.68598175 209.09101868]
[-79.03590393 201.02119446]
[-65.90859222 193.75344849]
[-52.35484314 187.31587219]
[-38.42708588 181.73339844]
[-24.17921066 177.02758789]
[-9.66633701 173.21669006]
[5.05538607 170.31541443]
[19.92900276 168.33499146]
[34.89696884 167.28309631]
[49.90137863 167.16380310]
[64.88417816 167.97755432]
[79.78740692 169.72120667]
[82.45320129 154.95999146]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[82.88882446 68.28948975]
[68.58469391 63.75654221]
[54.60038757 58.31643677]
[40.99335861 51.99152756]
[27.81952858 44.80780411]
[15.13302994 36.79479218]
[2.98599434 27.98540878]
[-8.57166290 18.41586113]
[-19.49244690 8.12547207]
[-29.73148537 -2.84347439]
[-39.24670029 -14.44590378]
[-47.99898911 -26.63413811]
[-55.95239258 -39.35809326]
[-63.07422638 -52.56548309]
[-69.33522034 -66.20204163]
[-74.70965576 -80.21171570]
[-79.17543793 -94.53695679]
[-82.71422577 -109.11888885]
[-85.31146240 -123.89759064]
[-86.95648956 -138.81233215]
[-87.64254761 -153.80181885]
[-87.36680603 -168.80447388]
[-86.13040924 -183.75863647]
[-83.93842316 -198.60285950]
[-80.79987335 -213.27613831]
[-76.72764587 -227.71818542]
[-71.73847961 -241.86964417]
[-65.85287476 -255.67237854]
[-59.09500885 -269.06964111]
[-51.49266434 -282.00640869]
[-43.07707214 -294.42953491]
[-33.88282013 -306.28790283]
[-23.94768333 -317.53286743]
[-13.31249237 -328.11813354]
[-2.02094889 -338.00027466]
[9.88054848 -347.13867188]
[22.34309387 -355.49572754]
[35.31547165 -363.03717041]
[48.74438095 -369.73193359]
[62.57463837 -375.55258179]
[76.74940491 -380.47512817]
[91.21044159 -384.47940063]
[105.89832306 -387.54888916]
[120.75268555 -389.67105103]
[135.71249390 -390.83709717]
[150.71627808 -391.04226685]
[165.70239258 -390.28573608]
[180.60922241 -388.57058716]
[195.37554932 -385.90386963]
[209.94067383 -382.29653931]
[224.24475098 -377.76342773]
[238.22900391 -372.32318115]
[251.83596802 -365.99810791]
[265.00970459 -358.81423950]
[277.69613647 -350.80108643]
[289.84304810 -341.99157715]
[301.40060425 -332.42190552]
[312.32128906 -322.13137817]
[322.56021118 -311.16232300]
[332.07528687 -299.55978394]
[340.82745361 -287.37145996]
[348.78070068 -274.64743042]
[355.90237427 -261.43994141]
[362.16323853 -247.80332947]
[367.53750610 -233.79359436]
[372.00314331 -219.46829224]
[375.54174805 -204.88633728]
[378.13882446 -190.10760498]
[379.78369141 -175.19284058]
[380.46957397 -160.20333862]
[380.19366455 -145.20068359]
[378.95712280 -130.24653625]
[376.76495361 -115.40233612]
[373.62625122 -100.72909546]
[369.55386353 -86.28709412]
[364.56454468 -72.13568878]
[358.67877197 -58.33302689]
[351.92077637 -44.93582535]
[344.31826782 -31.99913979]
[335.90255737 -19.57612991]
[326.70816040 -7.71784449]
[316.77291870 3.52698874]
[306.13760376 14.11216164]
[294.84594727 23.99417686]
[282.94433594 33.13242722]
[270.48171997 41.48936081]
[257.50924683 49.03063965]
[244.08026123 55.72526932]
[230.24993896 61.54574585]
[216.07511902 66.46814728]
[201.61404419 70.47224426]
[186.92613220 73.54158783]
[172.07173157 75.66356659]
[157.11190796 76.82946014]
[142.10812378 77.03446960]
[127.12203217 76.27776337]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[97.21441650 157.62577820]
[94.54862213 172.38699341]
[109.12033081 175.96635437]
[123.44132996 180.44471741]
[137.45619202 185.80473328]
[151.11073303 192.02569580]
[164.35208130 199.08352661]
[177.12904358 206.95091248]
[189.39218140 215.59742737]
[201.09403992 224.98960876]
[212.18934631 235.09111023]
[222.63519287 245.86288452]
[232.39114380 257.26324463]
[241.41946411 269.24804688]
[249.68522644 281.77096558]
[257.15646362 294.78356934]
[263.80422974 308.23544312]
[269.60287476 322.07461548]
[274.52987671 336.24749756]
[278.56625366 350.69931030]
[281.69635010 365.37408447]
[283.90808105 380.21505737]
[285.19284058 395.16485596]
[285.54571533 410.16558838]
[284.96530151 425.15924072]
[283.45385742 440.08779907]
[281.01721191 454.89352417]
[277.66482544 469.51910400]
[273.40966797 483.90798950]
[268.26815796 498.00451660]
[262.26025391 511.75408936]
[255.40913391 525.10357666]
[247.74134827 538.00134277]
[239.28652954 550.39739990]
[230.07740784 562.24383545]
[220.14961243 573.49487305]
[209.54154968 584.10693359]
[198.29425049 594.03894043]
[186.45124817 603.25250244]
[174.05833435 611.71191406]
[161.16348267 619.38458252]
[147.81655884 626.24066162]
[134.06922913 632.25378418]
[119.97463989 637.40051270]
[105.58734894 641.66107178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 167]
[57 166]
[58 165]
[59 164]
[60 163]
[62 161]
[63 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
