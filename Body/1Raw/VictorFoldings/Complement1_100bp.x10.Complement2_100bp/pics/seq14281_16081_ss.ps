%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[66.12817383 511.61578369]
[51.20433044 510.11441040]
[36.34484863 508.07214355]
[21.56932068 505.49163818]
[6.89723778 502.37634277]
[-7.65204954 498.73034668]
[-22.05935287 494.55844116]
[-36.30566788 489.86614990]
[-50.37220764 484.65963745]
[-64.24041748 478.94580078]
[-77.89200592 472.73217773]
[-91.30896759 466.02694702]
[-104.47360992 458.83895874]
[-117.36856842 451.17767334]
[-129.97683716 443.05319214]
[-142.28176880 434.47628784]
[-154.26716614 425.45822144]
[-165.91719055 416.01089478]
[-177.21650696 406.14678955]
[-188.15019226 395.87887573]
[-198.70381165 385.22073364]
[-208.86347961 374.18643188]
[-218.61578369 362.79046631]
[-227.94784546 351.04791260]
[-236.84738159 338.97424316]
[-245.30264282 326.58538818]
[-253.30245972 313.89767456]
[-260.83630371 300.92785645]
[-267.89425659 287.69302368]
[-274.46694946 274.21063232]
[-280.54577637 260.49850464]
[-286.12268066 246.57466125]
[-291.19030762 232.45748901]
[-295.74200439 218.16563416]
[-299.77172852 203.71792603]
[-303.27420044 189.13342285]
[-306.24478149 174.43135071]
[-308.67956543 159.63111877]
[-310.57531738 144.75222778]
[-311.92953491 129.81431580]
[-312.74047852 114.83708191]
[-313.00704956 99.84027863]
[-312.72888184 84.84368896]
[-311.90637207 69.86708832]
[-310.54055786 54.93023300]
[-308.63330078 40.05281830]
[-306.18710327 25.25446701]
[-303.20513916 10.55470181]
[-299.69140625 -4.02709150]
[-295.65048218 -18.47168159]
[-291.08773804 -32.76001740]
[-286.00918579 -46.87325287]
[-280.42150879 -60.79277039]
[-274.33209229 -74.50022125]
[-267.74896240 -87.97751617]
[-260.68078613 -101.20687866]
[-253.13691711 -114.17086792]
[-245.12728882 -126.85238647]
[-236.66244507 -139.23469543]
[-227.75358582 -151.30148315]
[-218.41242981 -163.03681946]
[-208.65132141 -174.42523193]
[-198.48312378 -185.45169067]
[-187.92124939 -196.10166931]
[-176.97962952 -206.36109924]
[-165.67269897 -216.21647644]
[-154.01536560 -225.65478516]
[-142.02301025 -234.66357422]
[-129.71142578 -243.23097229]
[-117.09688568 -251.34567261]
[-104.19600677 -258.99697876]
[-91.02581024 -266.17480469]
[-77.60366821 -272.86965942]
[-63.94727707 -279.07272339]
[-50.07465363 -284.77584839]
[-36.00408936 -289.97146606]
[-21.75414848 -294.65270996]
[-7.34362411 -298.81347656]
[7.20847893 -302.44824219]
[4.10436869 -317.12353516]
[1.00025856 -331.79882812]
[-2.10385156 -346.47415161]
[-5.20796156 -361.14944458]
[-8.31207180 -375.82473755]
[-11.41618156 -390.50006104]
[-26.47915649 -390.73358154]
[-41.11238098 -394.31359863]
[-54.58185959 -401.06051636]
[-66.21196747 -410.63592529]
[-75.41934204 -422.55950928]
[-81.74214935 -436.23318481]
[-84.86323547 -450.97113037]
[-84.62605286 -466.03402710]
[-81.04249573 -480.66641235]
[-74.29231262 -494.13424683]
[-64.71409607 -505.76202393]
[-52.78827286 -514.96649170]
[-39.11304855 -521.28601074]
[-24.37436485 -524.40350342]
[-9.31150532 -524.16271973]
[5.31998253 -520.57556152]
[18.78618813 -513.82214355]
[30.41165543 -504.24111938]
[39.61325073 -492.31304932]
[45.92943192 -478.63629150]
[49.04337692 -463.89685059]
[48.79889297 -448.83404541]
[45.20824432 -434.20343018]
[38.45153809 -420.73886108]
[28.86768341 -409.11572266]
[16.93740463 -399.91702271]
[3.25912046 -393.60415649]
[6.36323071 -378.92886353]
[9.46734047 -364.25354004]
[12.57145119 -349.57824707]
[15.67556095 -334.90295410]
[18.77967072 -320.22763062]
[21.88378143 -305.55233765]
[36.66130447 -308.12136841]
[51.52236557 -310.15213013]
[66.44736481 -311.64190674]
[81.41661835 -312.58877563]
[96.41038513 -312.99148560]
[111.40888214 -312.84945679]
[126.39233398 -312.16293335]
[141.34097290 -310.93280029]
[156.23509216 -309.16067505]
[171.05503845 -306.84890747]
[185.78126526 -304.00051880]
[200.39436340 -300.61929321]
[214.87504578 -296.70968628]
[229.20420837 -292.27682495]
[243.36296082 -287.32662964]
[257.33264160 -281.86553955]
[271.09478760 -275.90081787]
[284.63128662 -269.44027710]
[297.92428589 -262.49252319]
[310.95623779 -255.06663513]
[323.70993042 -247.17245483]
[336.16857910 -238.82037354]
[348.31573486 -230.02142334]
[360.13540649 -220.78718567]
[371.61193848 -211.12986755]
[382.73025513 -201.06219482]
[393.47567749 -190.59744263]
[403.83401489 -179.74940491]
[413.79162598 -168.53240967]
[423.33538818 -156.96122742]
[432.45266724 -145.05114746]
[441.13150024 -132.81785583]
[449.36038208 -120.27749634]
[457.12847900 -107.44660950]
[464.42556763 -94.34211731]
[471.24197388 -80.98130035]
[477.56878662 -67.38179016]
[483.39758301 -53.56150818]
[488.72073364 -39.53869247]
[493.53115845 -25.33183479]
[497.82257080 -10.95967484]
[501.58926392 3.55883169]
[504.82632446 18.20453644]
[507.52941895 32.95812225]
[509.69503784 47.80013275]
[511.32028198 62.71099091]
[512.40301514 77.67102814]
[512.94183350 92.66052246]
[512.93603516 107.65969086]
[512.38562012 122.64875793]
[511.29122925 137.60795593]
[509.65441895 152.51754761]
[507.47732544 167.35787964]
[504.76275635 182.10935974]
[501.51437378 196.75254822]
[497.73641968 211.26812744]
[493.43386841 225.63696289]
[488.61239624 239.84008789]
[483.27838135 253.85876465]
[477.43887329 267.67453003]
[471.10153198 281.26913452]
[464.27474976 294.62466431]
[456.96749878 307.72348022]
[449.18945312 320.54833984]
[440.95083618 333.08230591]
[432.26254272 345.30886841]
[423.13601685 357.21188354]
[413.58331299 368.77566528]
[403.61700439 379.98492432]
[393.25024414 390.82492065]
[382.49673462 401.28134155]
[371.37060547 411.34039307]
[359.88656616 420.98883057]
[348.05975342 430.21386719]
[335.90576172 439.00341797]
[323.44064331 447.34582520]
[310.68081665 455.23010254]
[297.64312744 462.64587402]
[284.34475708 469.58334351]
[270.80325317 476.03335571]
[257.03646851 481.98742676]
[243.06257629 487.43768311]
[228.89997864 492.37692261]
[214.56738281 496.79864502]
[200.08367920 500.69702148]
[185.46795654 504.06692505]
[170.73953247 506.90386963]
[155.91780090 509.20416260]
[141.02230835 510.96475220]
[126.07271576 512.18328857]
[111.08873749 512.85821533]
[96.09013367 512.98858643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
