%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[39.47072983 212.31080627]
[38.96322632 227.30867004]
[37.38707352 242.23210144]
[34.75030899 257.00506592]
[31.06636429 271.55230713]
[26.35401344 285.79965210]
[20.63726807 299.67453003]
[13.94526386 313.10623169]
[6.31209898 326.02627563]
[-2.22332859 338.36889648]
[-11.61752415 350.07110596]
[-21.82261658 361.07336426]
[-32.78660202 371.31954956]
[-44.45360947 380.75744629]
[-56.76418686 389.33901978]
[-69.65560150 397.02044678]
[-83.06216431 403.76266479]
[-96.91555023 409.53128052]
[-111.14517212 414.29690552]
[-125.67851257 418.03524780]
[-140.44151306 420.72726440]
[-155.35894775 422.35925293]
[-170.35479736 422.92285156]
[-185.35266113 422.41525269]
[-200.27607727 420.83898926]
[-215.04904175 418.20208740]
[-229.59623718 414.51803589]
[-243.84355164 409.80557251]
[-257.71838379 404.08874512]
[-271.15002441 397.39663696]
[-284.07003784 389.76336670]
[-296.41256714 381.22784424]
[-308.11471558 371.83355713]
[-319.11688232 361.62838745]
[-329.36297607 350.66430664]
[-338.80081177 338.99722290]
[-347.38226318 326.68658447]
[-355.06362915 313.79510498]
[-361.80572510 300.38851929]
[-367.57424927 286.53506470]
[-372.33975220 272.30541992]
[-376.07797241 257.77203369]
[-378.76989746 243.00901794]
[-380.40176392 228.09156799]
[-380.96524048 213.09571838]
[-380.45751953 198.09786987]
[-378.88113403 183.17445374]
[-376.24414062 168.40151978]
[-372.55996704 153.85435486]
[-367.84741211 139.60707092]
[-362.13046265 125.73228455]
[-355.43823242 112.30069733]
[-347.80487061 99.38074493]
[-339.26925659 87.03828430]
[-329.87487793 75.33618927]
[-319.66961670 64.33409882]
[-308.70547485 54.08808517]
[-297.03833008 44.65034866]
[-284.72763062 36.06899261]
[-271.83609009 28.38773918]
[-258.42941284 21.64573288]
[-244.57594299 15.87732983]
[-230.34625244 11.11192417]
[-215.81285095 7.37380075]
[-201.04980469 4.68200731]
[-186.13235474 3.05026078]
[-171.13648987 2.48687673]
[-156.13864136 2.99472570]
[-141.21524048 4.57122040]
[-126.44232941 7.20832634]
[-111.89518738 10.89260578]
[-97.64794159 15.60528469]
[-83.77320099 21.32234764]
[-70.34166718 28.01466179]
[-57.42177582 35.64812469]
[-45.07937241 44.18383408]
[-33.37734985 53.57830048]
[-22.37534332 63.78364563]
[-12.12940979 74.74786377]
[-2.69176602 86.41509247]
[5.88949776 98.72586060]
[13.57065201 111.61745453]
[20.31255531 125.02416992]
[34.16004181 119.25814056]
[48.00752640 113.49210358]
[61.85501099 107.72606659]
[75.70249939 101.96003723]
[89.54998016 96.19400024]
[76.12995911 89.49303436]
[71.24827576 75.30962372]
[77.70138550 61.76866913]
[91.79264832 56.62704849]
[105.44995117 62.83011246]
[110.84977722 76.82446289]
[104.89952850 90.59284210]
[119.20621490 86.08521271]
[133.51290894 81.57758331]
[144.35009766 70.05084229]
[158.81422424 73.60585785]
[155.22169495 59.03718948]
[152.56039429 44.26999664]
[150.84104919 29.36374283]
[150.07057190 14.37845230]
[150.25209045 -0.62553293]
[151.38485718 -15.58779812]
[153.46430969 -30.44809341]
[156.48207092 -45.14658356]
[160.42599487 -59.62408066]
[165.28021240 -73.82228851]
[171.02516174 -87.68404388]
[177.63771057 -101.15351105]
[185.09123230 -114.17647552]
[193.35572815 -126.70047760]
[202.39790344 -138.67510986]
[212.18135071 -150.05212402]
[222.66668701 -160.78573608]
[233.81167603 -170.83270264]
[245.57144165 -180.15258789]
[257.89865112 -188.70787048]
[270.74365234 -196.46406555]
[284.05471802 -203.38996887]
[297.77822876 -209.45768738]
[311.85897827 -214.64277649]
[326.24023438 -218.92437744]
[340.86407471 -222.28524780]
[355.67166138 -224.71182251]
[370.60333252 -226.19438171]
[385.59893799 -226.72691345]
[400.59817505 -226.30728149]
[415.54055786 -224.93719482]
[430.36599731 -222.62214661]
[445.01473999 -219.37147522]
[459.42782593 -215.19825745]
[473.54718018 -210.11932373]
[487.31600952 -204.15509033]
[500.67883301 -197.32958984]
[513.58184814 -189.67031860]
[525.97314453 -181.20808411]
[537.80273438 -171.97700500]
[549.02301025 -162.01420593]
[559.58886719 -151.35984802]
[569.45770264 -140.05679321]
[578.58978271 -128.15058899]
[586.94830322 -115.68915558]
[594.49963379 -102.72267914]
[601.21343994 -89.30336761]
[607.06256104 -75.48526001]
[612.02355957 -61.32399750]
[616.07635498 -46.87660217]
[619.20465088 -32.20124817]
[621.39593506 -17.35702705]
[622.64129639 -2.40371346]
[622.93579102 12.59848022]
[622.27813721 27.58914566]
[620.67108154 42.50791931]
[618.12103271 57.29473114]
[614.63824463 71.89003754]
[610.23681641 86.23506165]
[604.93444824 100.27205658]
[598.75244141 113.94448090]
[591.71569824 127.19729614]
[583.85260010 139.97712708]
[575.19476318 152.23251343]
[565.77709961 163.91412354]
[555.63745117 174.97489929]
[544.81677246 185.37030029]
[533.35852051 195.05848694]
[521.30883789 204.00044250]
[508.71630859 212.16014099]
[495.63162231 219.50476074]
[482.10745239 226.00469971]
[468.19824219 231.63378906]
[453.96002197 236.36936951]
[439.45013428 240.19236755]
[424.72695923 243.08738708]
[409.84985352 245.04277039]
[394.87866211 246.05065918]
[379.87365723 246.10697937]
[364.89532471 245.21151733]
[350.00393677 243.36785889]
[335.25946045 240.58343506]
[320.72128296 236.86947632]
[306.44790649 232.24090576]
[292.49685669 226.71640015]
[278.92425537 220.31816101]
[265.78479004 213.07199097]
[253.13137817 205.00703430]
[241.01493835 196.15579224]
[229.48428345 186.55389404]
[218.58583069 176.24000549]
[208.36346436 165.25566101]
[198.85835266 153.64508057]
[190.10877991 141.45503235]
[182.14996338 128.73458862]
[175.01394653 115.53497314]
[168.72947693 101.90933990]
[163.32185364 87.91254425]
[153.50796509 99.11687469]
[138.02053833 95.88426971]
[123.71384430 100.39189911]
[109.40715790 104.89952850]
[95.31601715 110.04148865]
[81.46852875 115.80752563]
[67.62104797 121.57355499]
[53.77355957 127.33959198]
[39.92607498 133.10562134]
[26.07858849 138.87165833]
[30.84432220 153.10124207]
[34.58277893 167.63455200]
[37.27491379 182.39753723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 207]
[84 206]
[85 205]
[86 204]
[87 203]
[88 202]
[95 201]
[96 200]
[97 199]
[99 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
