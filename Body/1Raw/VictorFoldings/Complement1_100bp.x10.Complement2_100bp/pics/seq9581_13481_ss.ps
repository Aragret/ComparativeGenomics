%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[146.87199402 714.42449951]
[132.95777893 708.81213379]
[119.35637665 702.47924805]
[106.10504913 695.44317627]
[93.24011993 687.72326660]
[80.79685211 679.34063721]
[68.80935669 670.31823730]
[57.31048203 660.68084717]
[46.33174896 650.45483398]
[35.90325165 639.66827393]
[26.05357361 628.35070801]
[16.80970955 616.53314209]
[8.19699955 604.24798584]
[0.23904832 591.52893066]
[-7.04233074 578.41082764]
[-13.62718010 564.92956543]
[-19.49744987 551.12219238]
[-24.63705254 537.02655029]
[-29.03189850 522.68115234]
[-32.66994476 508.12548828]
[-35.54121399 493.39932251]
[-37.63784027 478.54309082]
[-38.95407867 463.59747314]
[-39.48631668 448.60348511]
[-39.23310089 433.60217285]
[-38.19512177 418.63464355]
[-36.37522125 403.74197388]
[-33.77839279 388.96496582]
[-30.41175461 374.34411621]
[-26.28453255 359.91949463]
[-21.40803719 345.73065186]
[-15.79563618 331.81646729]
[-9.46271420 318.21505737]
[-2.42662835 304.96377563]
[5.29333639 292.09884644]
[13.67601967 279.65560913]
[22.69844437 267.66815186]
[32.33588028 256.16931152]
[42.56191635 245.19059753]
[53.34851456 234.76213074]
[64.66611481 224.91249084]
[76.48370361 215.66865540]
[88.76887512 207.05598450]
[101.48796844 199.09806824]
[114.60610962 191.81674194]
[128.08735657 185.23193359]
[122.21839905 171.42774963]
[116.34943390 157.62356567]
[110.48047638 143.81939697]
[104.61151123 130.01521301]
[98.74255371 116.21104431]
[88.22370911 111.21151733]
[83.74676514 100.45985413]
[87.60864258 89.47225952]
[81.94585419 75.58223724]
[76.96601105 71.23336792]
[75.19572449 65.83307648]
[76.32804871 61.19337082]
[71.08133698 47.14089966]
[65.83461761 33.08842850]
[60.58789825 19.03595543]
[55.34117889 4.98348475]
[40.83044052 8.83124924]
[26.01242828 11.23816681]
[11.02984619 12.18105602]
[-3.97300911 11.65083694]
[-18.85164833 9.65261555]
[-33.46278000 6.20563555]
[-47.66568375 1.34309483]
[-61.32357407 -4.88817644]
[-74.30492401 -12.42816639]
[-86.48470306 -21.20425797]
[-97.74560547 -31.13193321]
[-107.97919464 -42.11557770]
[-117.08690643 -54.04941177]
[-124.98102570 -66.81850433]
[-131.58552551 -80.29987335]
[-136.83680725 -94.36368561]
[-140.68428040 -108.87450409]
[-143.09089661 -123.69256592]
[-144.03349304 -138.67517090]
[-143.50297546 -153.67800903]
[-141.50445557 -168.55661011]
[-138.05717468 -183.16766357]
[-133.19435120 -197.37048340]
[-126.96280670 -211.02824402]
[-119.42256165 -224.00944519]
[-110.64622498 -236.18904114]
[-100.71832275 -247.44975281]
[-89.73447418 -257.68313599]
[-77.80046082 -266.79058838]
[-65.03121185 -274.68444824]
[-51.54970551 -281.28869629]
[-37.48578644 -286.53967285]
[-22.97489357 -290.38687134]
[-8.15678406 -292.79318237]
[6.82583570 -293.73547363]
[21.82866859 -293.20465088]
[36.70722961 -291.20584106]
[51.31822205 -287.75827026]
[65.52092743 -282.89517212]
[79.17857361 -276.66336060]
[92.15962219 -269.12283325]
[104.33904266 -260.34628296]
[115.59955597 -250.41813660]
[125.83271027 -239.43408203]
[134.93994141 -227.49989319]
[142.83355713 -214.73048401]
[149.43751526 -201.24885559]
[154.68821716 -187.18482971]
[158.53511047 -172.67385864]
[160.94114685 -157.85569763]
[161.88313293 -142.87306213]
[161.35202026 -127.87023926]
[159.35290527 -112.99171448]
[155.90504456 -98.38079071]
[151.04165649 -84.17818451]
[144.80955505 -70.52066040]
[137.26879883 -57.53976822]
[128.49197388 -45.36051559]
[118.56362152 -34.10020065]
[107.57936096 -23.86727142]
[95.64498138 -14.76027679]
[82.87541962 -6.86692429]
[69.39365387 -0.26323351]
[74.64036560 13.78923798]
[79.88708496 27.84170914]
[85.13380432 41.89418030]
[90.38052368 55.94665146]
[95.83587646 69.91944885]
[101.49866486 83.80947876]
[115.01042938 93.74971771]
[112.54673004 110.34207916]
[118.41568756 124.14625549]
[124.28465271 137.95043945]
[130.15361023 151.75460815]
[136.02256775 165.55879211]
[141.89154053 179.36296082]
[155.98716736 174.22323608]
[170.33247375 169.82826233]
[184.88813782 166.19007874]
[199.61425781 163.31867981]
[214.47047424 161.22192383]
[229.41607666 159.90554810]
[244.41007996 159.37316895]
[259.41140747 159.62625122]
[274.37890625 160.66409302]
[289.27160645 162.48385620]
[304.04864502 165.08055115]
[318.66952515 168.44706726]
[333.09417725 172.57415771]
[347.28308105 177.45051575]
[361.19729614 183.06278992]
[374.79876709 189.39559937]
[388.05010986 196.43156433]
[400.91510010 204.15141296]
[413.35842896 212.53398132]
[425.34597778 221.55628967]
[436.84490967 231.19363403]
[447.82369995 241.41957092]
[458.25225830 252.20606995]
[468.10202026 263.52359009]
[477.34594727 275.34109497]
[485.95874023 287.62619019]
[493.91674805 300.34521484]
[501.19821167 313.46328735]
[507.78314209 326.94445801]
[513.65350342 340.75180054]
[518.79315186 354.84744263]
[523.18811035 369.19277954]
[526.82623291 383.74844360]
[529.69763184 398.47457886]
[531.79431152 413.33081055]
[533.11065674 428.27639771]
[533.64300537 443.27041626]
[533.38983154 458.27172852]
[532.35198975 473.23922729]
[530.53216553 488.13192749]
[527.93542480 502.90893555]
[524.56884766 517.52984619]
[520.44171143 531.95446777]
[515.56530762 546.14337158]
[509.95300293 560.05755615]
[503.62017822 573.65899658]
[496.58416748 586.91033936]
[488.86425781 599.77526855]
[480.48165894 612.21856689]
[471.45932007 624.20611572]
[461.82192993 635.70501709]
[451.59597778 646.68377686]
[440.80944824 657.11230469]
[429.49188232 666.96203613]
[417.67437744 676.20593262]
[405.38925171 684.81866455]
[392.67019653 692.77667236]
[379.55209351 700.05804443]
[366.07089233 706.64294434]
[352.26354980 712.51330566]
[338.16787720 717.65289307]
[323.82254028 722.04779053]
[309.26684570 725.68591309]
[294.54071045 728.55718994]
[279.68447876 730.65386963]
[264.73889160 731.97015381]
[249.74487305 732.50244141]
[234.74356079 732.24926758]
[219.77604675 731.21136475]
[204.88337708 729.39147949]
[190.10635376 726.79473877]
[175.48548889 723.42810059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 138]
[47 137]
[48 136]
[49 135]
[50 134]
[51 133]
[54 131]
[55 130]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
