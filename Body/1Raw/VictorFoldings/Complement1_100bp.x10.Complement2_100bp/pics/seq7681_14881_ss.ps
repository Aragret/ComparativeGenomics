%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[46.11207199 518.92327881]
[37.33175659 531.09362793]
[27.66649246 542.57385254]
[17.17033386 553.29962158]
[5.90198040 563.21105957]
[-6.07555056 572.25268555]
[-18.69527435 580.37396240]
[-31.88661575 587.52941895]
[-45.57580566 593.67907715]
[-59.68627930 598.78857422]
[-74.13913727 602.82922363]
[-88.85353851 605.77856445]
[-103.74720001 607.62005615]
[-118.73683167 608.34332275]
[-133.73860168 607.94445801]
[-148.66860962 606.42559814]
[-163.44337463 603.79522705]
[-177.98023987 600.06811523]
[-192.19793701 595.26507568]
[-206.01695251 589.41290283]
[-219.35998535 582.54449463]
[-232.15242004 574.69812012]
[-244.32273865 565.91766357]
[-255.80284119 556.25231934]
[-266.52856445 545.75604248]
[-276.43988037 534.48760986]
[-285.48141479 522.51000977]
[-293.60253906 509.89019775]
[-300.75790405 496.69882202]
[-306.90744019 483.00955200]
[-312.01678467 468.89904785]
[-316.05734253 454.44616699]
[-319.00656128 439.73171997]
[-320.84790039 424.83804321]
[-321.57107544 409.84841919]
[-321.17202759 394.84664917]
[-319.65301514 379.91665649]
[-317.02255249 365.14190674]
[-313.29528809 350.60507202]
[-308.49212646 336.38742065]
[-302.63989258 322.56845093]
[-295.77130127 309.22549438]
[-287.92480469 296.43310547]
[-279.14428711 284.26287842]
[-269.47882080 272.78286743]
[-258.98248291 262.05725098]
[-247.71394348 252.14601135]
[-235.73625183 243.10459900]
[-223.11637878 234.98356628]
[-209.92491150 227.82832336]
[-196.23562622 221.67890930]
[-182.12506104 216.56968689]
[-167.67213440 212.52925110]
[-152.95767212 209.58016968]
[-138.06398010 207.73896790]
[-123.07433319 207.01593018]
[-108.07257080 207.41508484]
[-93.14258575 208.93423462]
[-78.36787415 211.56483459]
[-63.83106613 215.29222107]
[-49.61345291 220.09552002]
[-35.79454803 225.94787598]
[-22.45163536 232.81657410]
[-9.65933323 240.66317749]
[2.51081848 249.44381714]
[12.17162895 237.96911621]
[21.83243942 226.49441528]
[31.49324989 215.01971436]
[41.15406036 203.54501343]
[50.81486893 192.07031250]
[60.47568130 180.59561157]
[67.94342041 167.58665466]
[72.98033905 153.45762634]
[78.01725769 139.32859802]
[83.05416870 125.19956970]
[88.09108734 111.07054138]
[84.64415741 94.65423584]
[97.54031372 83.92738342]
[94.65437317 68.37161255]
[106.07507324 58.81039429]
[110.90106964 44.60793686]
[115.72706604 30.40548134]
[103.45155334 39.02590942]
[88.51950836 40.45207977]
[74.83412933 34.31119919]
[65.97274017 22.20847702]
[64.25169373 7.30753851]
[70.12086487 -6.49654961]
[82.04606628 -15.59543133]
[96.91007233 -17.61067963]
[110.82747650 -12.01551437]
[120.16030121 -0.27249810]
[122.46905518 14.54789066]
[129.34846497 1.21846116]
[136.22787476 -12.11096764]
[143.10729980 -25.44039726]
[149.98670959 -38.76982498]
[156.86611938 -52.09925461]
[144.52996826 -60.67097855]
[133.41822815 -70.77960205]
[123.72104645 -82.25215912]
[115.60433197 -94.89234161]
[109.20699310 -108.48384857]
[104.63848877 -122.79411316]
[101.97698975 -137.57827759]
[101.26804352 -152.58335876]
[102.52377319 -167.55259705]
[105.72269440 -182.22985840]
[110.81007385 -196.36398315]
[117.69886017 -209.71311951]
[126.27117157 -222.04887390]
[136.38032532 -233.16012573]
[147.85334778 -242.85676575]
[160.49391174 -250.97286987]
[174.08572388 -257.36956787]
[188.39620972 -261.93737793]
[203.18049622 -264.59817505]
[218.18560791 -265.30642700]
[233.15478516 -264.04998779]
[247.83189392 -260.85034180]
[261.96578979 -255.76229858]
[275.31460571 -248.87287903]
[287.64993286 -240.29998779]
[298.76071167 -230.19029236]
[308.45678711 -218.71681213]
[316.57229614 -206.07586670]
[322.96835327 -192.48374939]
[327.53549194 -178.17304993]
[330.19558716 -163.38864136]
[330.90310669 -148.38348389]
[329.64593506 -133.41436768]
[326.44561768 -118.73741913]
[321.35690308 -104.60377502]
[314.46685791 -91.25527954]
[305.89337158 -78.92035675]
[295.78314209 -67.81006622]
[284.30920410 -58.11451721]
[271.66787720 -49.99961090]
[258.07543945 -43.60421371]
[243.76452637 -39.03775024]
[228.97999573 -36.37836075]
[213.97480774 -35.67155457]
[199.00575256 -36.92942429]
[184.32894897 -40.13044357]
[170.19554138 -45.21984482]
[163.31613159 -31.89041328]
[156.43672180 -18.56098557]
[149.55731201 -5.23155546]
[142.67790222 8.09787369]
[135.79847717 21.42730331]
[129.92951965 35.23147964]
[125.10352325 49.43393707]
[120.27752686 63.63639069]
[123.50865173 78.17630768]
[111.74276733 88.75337982]
[116.25178528 99.49163055]
[112.42272949 110.49069977]
[102.22011566 116.10745239]
[97.18319702 130.23648071]
[92.14628601 144.36550903]
[87.10936737 158.49453735]
[82.07244873 172.62358093]
[92.85556793 162.19647217]
[105.79587555 154.61039734]
[120.16152191 150.29437256]
[135.14007568 149.49249268]
[149.88441467 152.25009155]
[163.56068420 158.41123962]
[175.39541626 167.62747192]
[184.71931458 179.37757874]
[191.00505066 192.99703979]
[193.89714050 207.71559143]
[193.23202515 222.70083618]
[189.04731750 237.10528564]
[181.57968140 250.11430359]
[171.25146484 260.99215698]
[158.64675903 269.12365723]
[144.47842407 274.04891968]
[129.54774475 275.48944092]
[114.69914246 273.36367798]
[100.77235413 267.79190063]
[88.55502319 259.08920288]
[78.73809052 247.74778748]
[71.87675476 234.40904236]
[68.35906219 219.82734680]
[68.38394928 204.82736206]
[71.95037842 190.25642395]
[62.28956985 201.73112488]
[52.62876129 213.20582581]
[42.96794891 224.68052673]
[33.30714035 236.15522766]
[23.64632988 247.62992859]
[13.98551846 259.10461426]
[24.71141434 269.60067749]
[34.62294388 280.86895752]
[43.66467285 292.84640503]
[51.78603745 305.46606445]
[58.94162369 318.65734863]
[65.09140778 332.34646606]
[70.20099640 346.45690918]
[74.24182129 360.90972900]
[77.19128418 375.62408447]
[79.03288269 390.51773071]
[79.75631714 405.50735474]
[79.35755157 420.50912476]
[77.83881378 435.43917847]
[75.20858765 450.21395874]
[71.48159027 464.75085449]
[66.67866516 478.96859741]
[60.82667542 492.78765869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 193]
[66 192]
[67 191]
[68 190]
[69 189]
[70 188]
[71 187]
[72 162]
[73 161]
[74 160]
[75 159]
[76 158]
[78 155]
[80 153]
[81 152]
[82 151]
[93 150]
[94 149]
[95 148]
[96 147]
[97 146]
[98 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
