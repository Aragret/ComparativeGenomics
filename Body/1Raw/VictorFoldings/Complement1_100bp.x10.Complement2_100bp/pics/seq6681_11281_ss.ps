%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[48.91084290 742.58642578]
[34.78171158 747.64813232]
[20.28702164 751.54125977]
[5.52322960 754.24005127]
[-9.41141129 755.72637939]
[-24.41751099 755.99047852]
[-39.39520645 755.03057861]
[-54.24482346 752.85302734]
[-68.86753082 749.47235107]
[-83.16603088 744.91101074]
[-97.04515076 739.19934082]
[-110.41253662 732.37542725]
[-123.17922211 724.48468018]
[-135.26025391 715.57952881]
[-146.57524109 705.71929932]
[-157.04885864 694.96960449]
[-166.61141968 683.40197754]
[-175.19927979 671.09338379]
[-182.75531006 658.12573242]
[-189.22918701 644.58538818]
[-194.57786560 630.56237793]
[-198.76573181 616.15008545]
[-201.76490784 601.44439697]
[-203.55545044 586.54315186]
[-204.12544250 571.54553223]
[-203.47106934 556.55139160]
[-201.59672546 541.66046143]
[-198.51484680 526.97186279]
[-194.24595642 512.58337402]
[-188.81846619 498.59066772]
[-182.26849365 485.08694458]
[-174.63963318 472.16204834]
[-165.98263550 459.90197754]
[-156.35514832 448.38830566]
[-145.82121277 437.69772339]
[-134.45092773 427.90130615]
[-122.31998444 419.06430054]
[-109.50909424 411.24545288]
[-96.10352325 404.49688721]
[-82.19248962 398.86343384]
[-67.86855316 394.38259888]
[-53.22705078 391.08422852]
[-38.36542130 388.99026489]
[-23.38256073 388.11465454]
[-8.37818336 388.46319580]
[6.54785728 390.03356934]
[21.29623032 392.81533813]
[25.26832581 378.35083008]
[29.24042320 363.88629150]
[33.21252060 349.42178345]
[37.18461609 334.95724487]
[28.24927902 320.70950317]
[32.46626282 304.08023071]
[47.69950485 295.47979736]
[51.45580673 280.95773315]
[55.21210861 266.43566895]
[58.96840668 251.91362000]
[62.72470856 237.39155579]
[66.48101044 222.86950684]
[70.23731232 208.34744263]
[73.55957031 193.71998596]
[76.44483948 179.00009155]
[79.33011627 164.28019714]
[82.21538544 149.56030273]
[85.10066223 134.84042358]
[87.98593140 120.12052155]
[86.11225891 115.72753143]
[86.97834778 110.11087036]
[91.18247223 105.00823975]
[89.75488281 97.07511139]
[94.66461945 90.18849945]
[98.20429230 75.61212158]
[101.74396515 61.03575134]
[105.17502594 46.43342590]
[108.49728394 31.80596733]
[111.81954193 17.17850685]
[115.14180756 2.55104685]
[118.35507965 -12.10074043]
[121.45919037 -26.77604294]
[116.74519348 -41.87865067]
[126.94879913 -52.72925949]
[130.05290222 -67.40456390]
[132.16752625 -82.25476074]
[133.28317261 -97.21321106]
[134.39883423 -112.17166901]
[135.51448059 -127.13011932]
[136.63012695 -142.08857727]
[121.96652222 -145.37440491]
[107.93764496 -150.76034546]
[94.84250641 -158.13159180]
[82.96024323 -167.33102417]
[72.54411316 -178.16256714]
[63.81614685 -190.39532471]
[56.96237946 -203.76856995]
[52.12889481 -217.99725342]
[49.41872406 -232.77807617]
[48.88963318 -247.79598999]
[50.55289841 -262.73089600]
[54.37306976 -277.26446533]
[60.26871872 -291.08688354]
[68.11418152 -303.90353394]
[77.74222565 -315.44122314]
[88.94763184 -325.45404053]
[101.49155426 -333.72857666]
[115.10662079 -340.08843994]
[129.50262451 -344.39807129]
[144.37272644 -346.56558228]
[159.39994812 -346.54483032]
[174.26399231 -344.33621216]
[188.64804077 -339.98681641]
[202.24546814 -333.58935547]
[214.76647949 -325.28018188]
[225.94416809 -315.23641968]
[235.54028320 -303.67214966]
[243.35029602 -290.83386230]
[249.20771790 -276.99520874]
[252.98770142 -262.45114136]
[254.60968018 -247.51170349]
[254.03909302 -232.49530029]
[251.28807068 -217.72201538]
[246.41528320 -203.50675964]
[239.52458191 -190.15251160]
[230.76283264 -177.94390869]
[220.31681824 -167.14120483]
[208.40916443 -157.97465515]
[195.29370117 -150.63961792]
[181.25000000 -145.29248047]
[166.57736206 -142.04719543]
[151.58857727 -140.97293091]
[150.47293091 -126.01447296]
[149.35728455 -111.05601501]
[148.24163818 -96.09756470]
[147.12597656 -81.13911438]
[157.29092407 -92.16970825]
[171.77857971 -96.05657959]
[186.09979248 -91.59534454]
[195.81698608 -80.16835785]
[197.91918945 -65.31639099]
[191.75498962 -51.64149857]
[179.23445129 -43.38098907]
[164.23718262 -43.09447479]
[151.41026306 -50.87072754]
[144.72821045 -64.30045319]
[141.62409973 -49.62514877]
[146.56011963 -35.57221603]
[136.13449097 -23.67193222]
[133.03038025 -8.99663067]
[134.72164917 -1.80209017]
[129.76927185 5.87330627]
[126.44700623 20.50076675]
[123.12474823 35.12822723]
[119.80248260 49.75568771]
[121.38645172 56.97460938]
[116.32034302 64.57542419]
[112.78067017 79.15179443]
[109.24099731 93.72817230]
[105.80993652 108.33049774]
[102.70582581 123.00579834]
[99.82054901 137.72569275]
[96.93527985 152.44558716]
[94.05000305 167.16546631]
[91.16473389 181.88536072]
[88.27945709 196.60525513]
[89.83203125 200.66030884]
[89.99687958 204.60205078]
[88.98004150 208.00814819]
[87.10353851 210.56652832]
[84.75936890 212.10374451]
[81.00306702 226.62580872]
[77.24676514 241.14785767]
[73.49047089 255.66992188]
[69.73416901 270.19198608]
[65.97786713 284.71405029]
[62.22156525 299.23608398]
[70.34765625 309.97766113]
[70.79696655 323.24447632]
[63.62939072 334.18560791]
[51.64913940 338.92935181]
[47.67704391 353.39385986]
[43.70494843 367.85839844]
[39.73284912 382.32290649]
[35.76075363 396.78744507]
[49.86141586 401.92788696]
[63.49615860 408.20056152]
[76.57424927 415.56375122]
[89.00865173 423.96841431]
[100.71661377 433.35864258]
[111.62022400 443.67193604]
[121.64691162 454.83966064]
[130.72996521 466.78750610]
[138.80891418 479.43597412]
[145.83001709 492.70083618]
[151.74653625 506.49386597]
[156.51910400 520.72326660]
[160.11595154 535.29431152]
[162.51315308 550.11004639]
[163.69474792 565.07189941]
[163.65286255 580.08026123]
[162.38778687 595.03527832]
[159.90794373 609.83740234]
[156.22984314 624.38812256]
[151.37794495 638.59069824]
[145.38453674 652.35046387]
[138.28952026 665.57592773]
[130.14009094 678.17913818]
[120.99050903 690.07611084]
[110.90164948 701.18768311]
[99.94065857 711.44000244]
[88.18047333 720.76470947]
[75.69935608 729.09985352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 182]
[48 181]
[49 180]
[50 179]
[51 178]
[54 174]
[55 173]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[61 163]
[62 162]
[63 161]
[64 160]
[65 159]
[66 158]
[69 157]
[71 156]
[72 155]
[73 154]
[74 152]
[75 151]
[76 150]
[77 149]
[78 147]
[79 146]
[81 144]
[82 143]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
