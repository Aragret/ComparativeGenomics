%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[179.30996704 292.14462280]
[177.54821777 277.24276733]
[176.78575134 262.25650024]
[177.02595520 247.25279236]
[178.26777649 232.29861450]
[180.50564575 217.46078491]
[183.72958374 202.80557251]
[187.92518616 188.39840698]
[193.07371521 174.30366516]
[199.15217590 160.58427429]
[185.87432861 153.60581970]
[172.59648132 146.62738037]
[159.31863403 139.64892578]
[146.04078674 132.67047119]
[132.76293945 125.69201660]
[117.89727020 126.61988068]
[109.28112030 113.35064697]
[97.97177887 116.13274384]
[87.70302582 110.63783264]
[83.74330902 99.68512726]
[70.57083893 92.50975800]
[57.39836121 85.33438873]
[44.22588348 78.15902710]
[28.40585709 78.35223389]
[20.93041039 65.46941376]
[12.85051918 78.11457825]
[3.90822506 90.16530609]
[-5.85290623 101.56289673]
[-16.38531876 112.25181580]
[-27.63769913 122.17999268]
[-39.55522919 131.29905701]
[-52.07984161 139.56457520]
[-65.15052032 146.93627930]
[-78.70359039 153.37825012]
[-92.67301178 158.85913086]
[-106.99073029 163.35218811]
[-121.58699799 166.83554077]
[-136.39070129 169.29222107]
[-151.32969666 170.71025085]
[-166.33123779 171.08273315]
[-181.32220459 170.40785217]
[-196.22958374 168.68888855]
[-210.98074341 165.93423462]
[-225.50379944 162.15728760]
[-239.72802734 157.37644958]
[-253.58409119 151.61503601]
[-267.00451660 144.90109253]
[-279.92391968 137.26734924]
[-292.27932739 128.75097656]
[-304.01055908 119.39348602]
[-315.06048584 109.24044800]
[-325.37521362 98.34133911]
[-334.90457153 86.74925232]
[-343.60205078 74.52066803]
[-351.42535400 61.71516800]
[-358.33630371 48.39513016]
[-364.30126953 34.62545395]
[-369.29116821 20.47322464]
[-373.28170776 6.00738907]
[-376.25341797 -8.70157433]
[-378.19186401 -23.58200455]
[-379.08755493 -38.56140518]
[-378.93615723 -53.56679916]
[-377.73840332 -68.52507782]
[-375.50012207 -83.36336517]
[-372.23220825 -98.00937653]
[-367.95062256 -112.39174652]
[-362.67617798 -126.44041443]
[-356.43460083 -140.08692932]
[-349.25628662 -153.26481628]
[-341.17620850 -165.90985107]
[-332.23376465 -177.96046448]
[-322.47247314 -189.35791016]
[-311.93988037 -200.04667664]
[-300.68737793 -209.97468567]
[-288.76971436 -219.09358215]
[-276.24496460 -227.35891724]
[-263.17419434 -234.73043823]
[-249.62103271 -241.17222595]
[-235.65153503 -246.65289307]
[-221.33374023 -251.14575195]
[-206.73742676 -254.62889099]
[-191.93370056 -257.08535767]
[-176.99467468 -258.50317383]
[-161.99313354 -258.87545776]
[-147.00216675 -258.20034790]
[-132.09481812 -256.48117065]
[-117.34370422 -253.72630310]
[-102.82069397 -249.94914246]
[-88.59654236 -245.16812134]
[-74.74054718 -239.40649414]
[-61.32022476 -232.69236755]
[-48.40094376 -225.05844116]
[-36.04565430 -216.54188538]
[-24.31454849 -207.18421936]
[-13.26478100 -197.03103638]
[-2.95018458 -186.13177490]
[6.57898903 -174.53955078]
[15.27631378 -162.31083679]
[23.09941673 -149.50523376]
[30.01018333 -136.18508911]
[35.97494507 -122.41532898]
[40.96464539 -108.26303101]
[44.95496750 -93.79713440]
[47.92647934 -79.08813477]
[49.86469650 -64.20767212]
[50.76018143 -49.22826004]
[50.60857010 -34.22286987]
[49.41059494 -19.26460838]
[47.17210388 -4.42635059]
[43.90399170 10.21961021]
[39.62218857 24.60192108]
[34.34754944 38.65051270]
[28.10577583 52.29693985]
[42.98361969 51.59050369]
[51.40124893 64.98654938]
[64.57372284 72.16191864]
[77.74620056 79.33728027]
[90.91867828 86.51264954]
[107.67145538 85.66375732]
[116.25957489 100.07279968]
[132.07496643 99.64408112]
[139.74139404 112.41416931]
[153.01924133 119.39262390]
[166.29708862 126.37107849]
[179.57493591 133.34953308]
[192.85278320 140.32797241]
[206.13063049 147.30642700]
[213.98315430 134.51943970]
[222.67222595 122.28549957]
[232.15902710 110.65924835]
[242.40119934 99.69261169]
[253.35299683 89.43456268]
[264.96548462 79.93093109]
[277.18682861 71.22415161]
[289.96243286 63.35311508]
[303.23526001 56.35297394]
[316.94598389 50.25499344]
[331.03338623 45.08641434]
[345.43453979 40.87031174]
[360.08517456 37.62552261]
[374.91979980 35.36653519]
[389.87219238 34.10343933]
[404.87554932 33.84188080]
[419.86288452 34.58302307]
[434.76724243 36.32355881]
[449.52203369 39.05570984]
[464.06143188 42.76727676]
[478.32043457 47.44168472]
[492.23538208 53.05805206]
[505.74411011 59.59129715]
[518.78631592 67.01224518]
[531.30371094 75.28774261]
[543.24041748 84.38082886]
[554.54309082 94.25090790]
[565.16131592 104.85387421]
[575.04760742 116.14238739]
[584.15783691 128.06602478]
[592.45129395 140.57153320]
[599.89093018 153.60305786]
[606.44360352 167.10240173]
[612.07989502 181.00927734]
[616.77478027 195.26155090]
[620.50726318 209.79559326]
[623.26055908 224.54646301]
[625.02252197 239.44830322]
[625.78515625 254.43455505]
[625.54516602 269.43826294]
[624.30352783 284.39245605]
[622.06579590 299.23031616]
[618.84210205 313.88558960]
[614.64666748 328.29278564]
[609.49829102 342.38760376]
[603.41998291 356.10705566]
[596.43896484 369.38989258]
[588.58624268 382.17678833]
[579.89703369 394.41064453]
[570.41009521 406.03677368]
[560.16778564 417.00326538]
[549.21582031 427.26116943]
[537.60321045 436.76467896]
[525.38177490 445.47128296]
[512.60607910 453.34216309]
[499.33316040 460.34213257]
[485.62237549 466.43994141]
[471.53491211 471.60836792]
[457.13366699 475.82427979]
[442.48300171 479.06887817]
[427.64834595 481.32766724]
[412.69595337 482.59057617]
[397.69259644 482.85195923]
[382.70526123 482.11062622]
[367.80093384 480.36990356]
[353.04614258 477.63757324]
[338.50683594 473.92581177]
[324.24789429 469.25122070]
[310.33300781 463.63470459]
[296.82434082 457.10128784]
[283.78225708 449.68017578]
[271.26495361 441.40451050]
[259.32836914 432.31127930]
[248.02578735 422.44104004]
[237.40771484 411.83795166]
[227.52156067 400.54931641]
[218.41149902 388.62554932]
[210.11819458 376.11993408]
[202.67869568 363.08831787]
[196.12623596 349.58889771]
[190.49006653 335.68197632]
[185.79536438 321.42962646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 128]
[11 127]
[12 126]
[13 125]
[14 124]
[15 123]
[17 121]
[20 119]
[21 118]
[22 117]
[23 116]
[25 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
