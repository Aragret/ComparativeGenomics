%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[105.94123077 570.74462891]
[104.82558441 555.78619385]
[103.70993805 540.82769775]
[102.59428406 525.86926270]
[89.11777496 519.52502441]
[80.56938934 507.20510864]
[79.32718658 492.16104126]
[85.82458496 478.42495728]
[98.40713501 469.72860718]
[97.29148865 454.77014160]
[96.17584229 439.81167603]
[95.06019592 424.85324097]
[93.94454193 409.89477539]
[84.98619843 401.76614380]
[83.93431091 389.31314087]
[91.89626312 379.16574097]
[91.00344849 364.19232178]
[79.24638367 373.50744629]
[64.59941864 370.27224731]
[57.85975266 356.87161255]
[63.99561691 343.18399048]
[78.48387909 339.29937744]
[90.64353943 348.07992554]
[90.86686707 333.08157349]
[91.09019470 318.08325195]
[78.60649109 313.61663818]
[68.08851624 305.50674438]
[60.56839371 294.53170776]
[56.78953934 281.75161743]
[57.13315201 268.40621948]
[61.57983017 255.79455566]
[69.71007538 245.14863586]
[80.74385071 237.51298523]
[93.61537933 233.64222717]
[94.28516388 218.65718079]
[94.95494843 203.67214966]
[95.62473297 188.68710327]
[96.29451752 173.70207214]
[96.96430206 158.71702576]
[97.63408661 143.73199463]
[98.30387115 128.74694824]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[80.44757843 61.85438538]
[76.04657745 47.51453781]
[64.60083008 36.59183502]
[68.26342773 22.15456963]
[59.03656387 33.98102188]
[44.03982162 34.29356384]
[34.32823944 22.86180115]
[37.06083679 8.11280441]
[50.22324371 0.91898453]
[64.11151123 6.58213854]
[60.78924942 -8.04532146]
[50.18759537 -19.78906441]
[54.91384506 -33.91392899]
[46.99427032 -21.17500114]
[32.77873611 -16.38766670]
[18.76639366 -21.74063301]
[11.36349678 -34.78659439]
[13.95455074 -49.56111526]
[25.35496140 -59.30948257]
[40.35261154 -59.57487106]
[52.09175873 -50.23437881]
[50.30929184 -65.12809753]
[48.52682495 -80.02181244]
[46.74435806 -94.91552734]
[43.09389877 -100.42784882]
[42.81683731 -106.10414124]
[45.13736725 -110.27836609]
[43.79913330 -125.21855164]
[42.46089935 -140.15873718]
[41.12266541 -155.09892273]
[32.18502808 -168.15377808]
[38.75600433 -181.52058411]
[23.74485207 -181.99244690]
[8.90003109 -184.27032471]
[-5.56197548 -188.32096863]
[-19.43026924 -194.08531189]
[-32.50261307 -201.47930908]
[-44.58836746 -210.39514160]
[-55.51129150 -220.70275879]
[-65.11209869 -232.25186157]
[-73.25077057 -244.87403870]
[-79.80863190 -258.38522339]
[-84.69004822 -272.58834839]
[-87.82382965 -287.27633667]
[-89.16428375 -302.23495483]
[-88.69184875 -317.24609375]
[-86.41342926 -332.09082031]
[-82.36224365 -346.55267334]
[-76.59737396 -360.42077637]
[-69.20288849 -373.49282837]
[-60.28661346 -385.57824707]
[-49.97858429 -396.50079346]
[-38.42911530 -406.10116577]
[-25.80663490 -414.23937988]
[-12.29521561 -420.79672241]
[1.90810537 -425.67761230]
[16.59620285 -428.81085205]
[31.55488205 -430.15072632]
[46.56599808 -429.67773438]
[61.41064835 -427.39877319]
[75.87235260 -423.34704590]
[89.74021912 -417.58166504]
[102.81200409 -410.18667603]
[114.89709473 -401.26995850]
[125.81924438 -390.96151733]
[135.41918945 -379.41168213]
[143.55691528 -366.78890991]
[150.11376953 -353.27722168]
[154.99412537 -339.07373047]
[158.12680054 -324.38552856]
[159.46614075 -309.42678833]
[158.99258423 -294.41567993]
[156.71305847 -279.57113647]
[152.66078186 -265.10955811]
[146.89488220 -251.24192810]
[139.49942017 -238.17041016]
[130.58224487 -226.08566284]
[120.27339172 -215.16389465]
[108.72320557 -205.56437683]
[96.10011292 -197.42712402]
[82.58821106 -190.87077332]
[68.38452148 -185.99095154]
[53.69618988 -182.85881042]
[62.53810883 -170.87258911]
[56.06285095 -156.43714905]
[57.40108490 -141.49696350]
[58.73931885 -126.55678558]
[60.07755280 -111.61660004]
[61.63807678 -96.69799805]
[63.42054367 -81.80427551]
[65.20301056 -66.91056061]
[66.98547363 -52.01684570]
[69.54130554 -37.23619080]
[79.90532684 -26.53870010]
[75.41670990 -11.36758137]
[78.73896790 3.25987887]
[82.60327911 17.75357246]
[93.73423767 27.65059090]
[90.38642120 43.11353683]
[94.78742218 57.45338440]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[113.19867706 94.66706848]
[119.20353699 80.92146301]
[128.39781189 69.06965637]
[140.21926880 59.83638763]
[153.94500732 53.78628159]
[168.73571777 51.28929901]
[183.68693542 52.49813080]
[197.88436890 57.33886337]
[210.45986938 65.51547241]
[220.64440918 76.52796936]
[227.81523132 89.70292664]
[231.53379822 104.23468781]
[231.57275391 119.23463440]
[227.92970276 133.78552246]
[220.82742310 146.99754333]
[210.70021057 158.06278992]
[198.16735840 166.30461121]
[183.99525452 171.21900940]
[169.05052185 172.50549316]
[154.24703979 170.08535767]
[140.49005127 164.10662842]
[128.62080383 154.93489075]
[119.36509705 143.13099670]
[113.28890991 129.41673279]
[112.61912537 144.40177917]
[111.94934082 159.38681030]
[111.27955627 174.37185669]
[110.60977173 189.35690308]
[109.93998718 204.34193420]
[109.27020264 219.32698059]
[108.60041809 234.31201172]
[123.99166870 241.22296143]
[135.52273560 253.48864746]
[141.44525146 269.20803833]
[140.87709045 285.95971680]
[133.93362427 301.17480469]
[121.70574951 312.53088379]
[106.08853149 318.30657959]
[105.86520386 333.30490112]
[105.64187622 348.30325317]
[105.97685242 363.29949951]
[106.86966705 378.27291870]
[117.36359406 393.40429688]
[108.90299988 408.77914429]
[110.01864624 423.73757935]
[111.13429260 438.69604492]
[112.24994659 453.65447998]
[113.36559296 468.61294556]
[127.09896088 475.34655762]
[135.56210327 487.96688843]
[136.56529236 503.02874756]
[129.93904114 516.48046875]
[117.55274200 524.75360107]
[118.66838837 539.71209717]
[119.78403473 554.67053223]
[120.89968872 569.62896729]
[133.03727722 579.75097656]
[134.37931824 595.49816895]
[124.12957764 607.52807617]
[108.36906433 608.70355225]
[96.44820404 598.32720947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[16 191]
[17 190]
[23 189]
[24 188]
[25 187]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 173]
[42 149]
[44 147]
[45 146]
[46 145]
[47 144]
[49 142]
[55 141]
[56 140]
[58 138]
[66 137]
[67 136]
[68 135]
[69 134]
[72 133]
[73 132]
[74 131]
[75 130]
[77 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
