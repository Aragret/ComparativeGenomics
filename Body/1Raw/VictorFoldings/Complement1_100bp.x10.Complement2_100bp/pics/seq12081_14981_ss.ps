%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[59.77580261 411.69650269]
[47.80484390 402.63229370]
[36.90369797 392.30621338]
[27.20468903 380.84356689]
[18.82556152 368.38348389]
[11.86802387 355.07723999]
[6.41653728 341.08639526]
[2.53727770 326.58071899]
[0.27733529 311.73632812]
[-0.33585632 296.73342896]
[0.70514649 281.75411987]
[3.38770700 266.98025513]
[7.67926121 252.59117126]
[13.52771378 238.76153564]
[20.86207008 225.65922546]
[29.59329605 213.44329834]
[39.61540604 202.26203918]
[50.80673599 192.25119019]
[63.03144073 183.53224182]
[76.14111328 176.21107483]
[89.97662354 170.37652588]
[104.37001801 166.09945679]
[101.70422363 151.33824158]
[99.03842926 136.57701111]
[96.37263489 121.81580353]
[93.70683289 107.05458069]
[90.18663788 103.16586304]
[89.09580231 97.58164978]
[91.18828583 91.81463623]
[88.96316528 76.98059082]
[86.73804474 62.14654541]
[84.51293182 47.31250381]
[82.28781128 32.47845840]
[67.36416626 34.01644897]
[52.38541794 34.86357498]
[37.38352585 35.01802444]
[22.39050674 34.47946930]
[7.43836069 33.24905396]
[-7.44100761 31.32941437]
[-22.21584320 28.72463989]
[-36.85461426 25.44029045]
[-51.32608414 21.48337364]
[-65.59937286 16.86233902]
[-79.64400482 11.58704185]
[-93.43003082 5.66874409]
[-106.92800903 -0.87992567]
[-120.10915375 -8.04499245]
[-132.94531250 -15.81116486]
[-145.40911865 -24.16187096]
[-157.47395325 -33.07928848]
[-169.11407471 -42.54438782]
[-180.30465698 -52.53696823]
[-191.02178955 -63.03570557]
[-201.24263000 -74.01819611]
[-210.94535828 -85.46100616]
[-220.10925293 -97.33970642]
[-228.71476746 -109.62895966]
[-236.74354553 -122.30252838]
[-244.17845154 -135.33337402]
[-251.00360107 -148.69367981]
[-257.20443726 -162.35494995]
[-262.76776123 -176.28800964]
[-267.68164062 -190.46313477]
[-271.93563843 -204.85008240]
[-275.52066040 -219.41813660]
[-278.42901611 -234.13621521]
[-280.65457153 -248.97291565]
[-282.19253540 -263.89657593]
[-283.03964233 -278.87530518]
[-283.19406128 -293.87719727]
[-282.65545654 -308.87023926]
[-281.42501831 -323.82235718]
[-279.50534058 -338.70172119]
[-276.90054321 -353.47656250]
[-273.61614990 -368.11532593]
[-269.65921021 -382.58679199]
[-265.03814697 -396.86007690]
[-259.76281738 -410.90469360]
[-253.84449768 -424.69070435]
[-247.29580688 -438.18865967]
[-240.13070679 -451.36978149]
[-232.36450195 -464.20593262]
[-224.01377869 -476.66973877]
[-215.09632874 -488.73455811]
[-205.63121033 -500.37466431]
[-195.63861084 -511.56521606]
[-185.13984680 -522.28234863]
[-174.15733337 -532.50311279]
[-162.71450806 -542.20581055]
[-150.83578491 -551.36968994]
[-138.54652405 -559.97521973]
[-125.87293243 -568.00396729]
[-112.84207153 -575.43884277]
[-99.48175049 -582.26397705]
[-85.82047272 -588.46478271]
[-71.88739777 -594.02807617]
[-57.71226120 -598.94189453]
[-43.32530594 -603.19586182]
[-28.75724220 -606.78088379]
[-14.03915405 -609.68920898]
[0.79754716 -611.91473389]
[15.72119904 -613.45263672]
[30.69995499 -614.29974365]
[45.70184708 -614.45410156]
[60.69486237 -613.91546631]
[75.64700317 -612.68499756]
[90.52636719 -610.76531982]
[105.30118561 -608.16046143]
[119.93994904 -604.87603760]
[134.41140747 -600.91906738]
[148.68466187 -596.29797363]
[162.72927856 -591.02264404]
[176.51527405 -585.10430908]
[190.01322937 -578.55554199]
[203.19435120 -571.39044189]
[216.03047180 -563.62420654]
[228.49424744 -555.27343750]
[240.55905151 -546.35595703]
[252.19912720 -536.89086914]
[263.38967896 -526.89819336]
[274.10675049 -516.39941406]
[284.32754517 -505.41690063]
[294.03021240 -493.97406006]
[303.19406128 -482.09530640]
[311.79953003 -469.80603027]
[319.82827759 -457.13241577]
[327.26312256 -444.10153198]
[334.08822632 -430.74121094]
[340.28900146 -417.07992554]
[345.85226440 -403.14682007]
[350.76608276 -388.97167969]
[355.02001953 -374.58471680]
[358.60498047 -360.01666260]
[361.51327515 -345.29855347]
[363.73876953 -330.46185303]
[365.27667236 -315.53820801]
[366.12371826 -300.55944824]
[366.27804565 -285.55755615]
[365.73941040 -270.56454468]
[364.50891113 -255.61239624]
[362.58917236 -240.73303223]
[359.98431396 -225.95822144]
[356.69985962 -211.31945801]
[352.74285889 -196.84802246]
[348.12173462 -182.57476807]
[342.84634399 -168.53015137]
[336.92797852 -154.74417114]
[330.37921143 -141.24623108]
[323.21408081 -128.06513977]
[315.44781494 -115.22901917]
[307.09704590 -102.76526642]
[298.17953491 -90.70048523]
[288.71435547 -79.06041718]
[278.72171021 -67.86991119]
[268.22290039 -57.15283203]
[257.24035645 -46.93206406]
[245.79748535 -37.22941589]
[233.91873169 -28.06559181]
[221.62942505 -19.46014786]
[208.95581055 -11.43144989]
[195.92491150 -3.99663115]
[182.56455994 2.82844186]
[168.90325928 9.02920437]
[154.97016907 14.59242344]
[140.79501343 19.50622749]
[126.40803528 23.76012802]
[111.83995819 27.34505081]
[97.12185669 30.25334167]
[99.34697723 45.08738708]
[101.57209015 59.92142868]
[103.79721069 74.75547028]
[106.02232361 89.58951569]
[108.46805573 104.38878632]
[111.13385010 119.15000153]
[113.79964447 133.91122437]
[116.46543884 148.67243958]
[119.13123322 163.43365479]
[134.11146545 162.40602112]
[149.11381531 163.03259277]
[163.95617676 165.30578613]
[178.45838928 169.19799805]
[192.44438171 174.66195679]
[205.74440002 181.63136292]
[218.19699097 190.02160645]
[229.65098572 199.73085022]
[239.96734619 210.64120483]
[249.02084351 222.62023926]
[256.70156860 235.52255249]
[262.91629028 249.19151306]
[267.58956909 263.46118164]
[270.66467285 278.15835571]
[272.10427856 293.10461426]
[271.89089966 308.11853027]
[270.02713013 323.01785278]
[266.53558350 337.62170410]
[261.45867920 351.75280762]
[254.85801697 365.23962402]
[246.81373596 377.91845703]
[237.42346191 389.63537598]
[226.80120850 400.24813843]
[215.07592773 409.62796021]
[202.38992310 417.66091919]
[188.89721680 424.24954224]
[174.76158142 429.31384277]
[160.15463257 432.79235840]
[145.25366211 434.64282227]
[130.23956299 434.84280396]
[115.29458618 433.38986206]
[100.60015869 430.30166626]
[86.33466339 425.61563110]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 177]
[23 176]
[24 175]
[25 174]
[26 173]
[29 172]
[30 171]
[31 170]
[32 169]
[33 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
