%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[107.60859680 679.76446533]
[93.36759949 675.03875732]
[79.43791199 669.46185303]
[65.87036896 663.05401611]
[52.71446991 655.83874512]
[40.01822281 647.84228516]
[27.82795525 639.09381104]
[16.18815041 629.62530518]
[5.14127970 619.47125244]
[-5.27234888 608.66870117]
[-15.01473618 597.25714111]
[-24.05033302 585.27813721]
[-32.34616852 572.77545166]
[-39.87197495 559.79467773]
[-46.60028839 546.38317871]
[-52.50655746 532.58996582]
[-57.56923294 518.46520996]
[-61.76984024 504.06060791]
[-65.09304810 489.42864990]
[-67.52674103 474.62271118]
[-69.06202698 459.69686890]
[-69.69331360 444.70556641]
[-69.41828918 429.70346069]
[-68.23796082 414.74536133]
[-66.15663147 399.88580322]
[-63.18190384 385.17904663]
[-59.32463074 370.67871094]
[-54.59888077 356.43774414]
[-49.02190018 342.50808716]
[-42.61404037 328.94055176]
[-35.39868546 315.78469849]
[-27.40215874 303.08847046]
[-18.65364075 290.89825439]
[-9.18505573 279.25848389]
[0.96904767 268.21166992]
[11.77161789 257.79809570]
[23.18323898 248.05575562]
[35.16226578 239.02021790]
[47.66499710 230.72444153]
[60.64580154 223.19869995]
[74.05731964 216.47044373]
[87.85060883 210.56423950]
[101.97534180 205.50163269]
[116.37998199 201.30108643]
[113.05772400 186.67362976]
[109.73546600 172.04617310]
[106.41320038 157.41870117]
[103.09094238 142.79124451]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[81.41903687 61.23474121]
[76.17232513 47.18227005]
[70.92560577 33.12979889]
[65.67888641 19.07732773]
[60.43216705 5.02485657]
[55.18544769 -9.02761459]
[49.93873215 -23.08008575]
[35.45178604 -19.14904594]
[20.66392708 -16.57147789]
[5.70132065 -15.36937046]
[-9.30837345 -15.55298138]
[-24.23709679 -17.12074280]
[-38.95747757 -20.05928040]
[-53.34392929 -24.34352112]
[-67.27370453 -29.93691444]
[-80.62795258 -36.79173660]
[-93.29274750 -44.84950638]
[-105.16002655 -54.04147339]
[-116.12854767 -64.28921509]
[-126.10472870 -75.50530243]
[-135.00344849 -87.59403229]
[-142.74877930 -100.45227051]
[-149.27465820 -113.97032166]
[-154.52539062 -128.03283691]
[-158.45619202 -142.51985168]
[-161.03352356 -157.30775452]
[-162.23538208 -172.27037048]
[-162.05151367 -187.28007507]
[-160.48350525 -202.20877075]
[-157.54472351 -216.92909241]
[-153.26023865 -231.31547546]
[-147.66661072 -245.24516296]
[-140.81156921 -258.59930420]
[-132.75358582 -271.26394653]
[-123.56142426 -283.13107300]
[-113.31349945 -294.09942627]
[-102.09725189 -304.07540894]
[-90.00836945 -312.97393799]
[-77.15000153 -320.71905518]
[-63.63184357 -327.24472046]
[-49.56923676 -332.49520874]
[-35.08216095 -336.42578125]
[-20.29421616 -339.00283813]
[-5.33156967 -340.20446777]
[9.67811871 -340.02035522]
[24.60678864 -338.45208740]
[39.32707214 -335.51306152]
[53.71337891 -331.22833252]
[67.64296722 -325.63449097]
[80.99699402 -318.77920532]
[93.66151428 -310.72103882]
[105.52848816 -301.52865601]
[116.49667358 -291.28054810]
[126.47247314 -280.06414795]
[135.37078857 -267.97509766]
[143.11569214 -255.11660767]
[149.64112854 -241.59834290]
[154.89138794 -227.53565979]
[158.82170105 -213.04850769]
[161.39854431 -198.26052856]
[162.59989929 -183.29785156]
[162.41554260 -168.28817749]
[160.84703064 -153.35952759]
[157.90776062 -138.63929749]
[153.62280273 -124.25305939]
[148.02870178 -110.32356262]
[141.17321777 -96.96965027]
[133.11480713 -84.30525970]
[123.92225647 -72.43843842]
[113.67396545 -61.47043228]
[102.45738220 -51.49481583]
[90.36820221 -42.59669876]
[77.50957489 -34.85200500]
[63.99120331 -28.32680321]
[69.23792267 -14.27433300]
[74.48464203 -0.22186157]
[79.73135376 13.83060932]
[84.97807312 27.88308144]
[90.22479248 41.93555069]
[95.47151184 55.98802185]
[101.61815643 42.30523300]
[115.06665802 35.66160965]
[129.66854858 39.09452438]
[138.74803162 51.03449631]
[138.15409851 66.02273560]
[128.15827942 77.20681763]
[113.33052826 79.47352600]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[118.42752075 129.43376160]
[119.46044922 135.02215576]
[117.71840668 139.46899414]
[121.04066467 154.09645081]
[124.36292267 168.72390747]
[127.68518066 183.35136414]
[131.00744629 197.97883606]
[145.81332397 195.54493713]
[160.73916626 194.00944519]
[175.73046875 193.37794495]
[190.73255920 193.65275574]
[205.69067383 194.83288574]
[220.55026245 196.91400146]
[235.25708008 199.88851929]
[249.75746155 203.74560547]
[263.99850464 208.47114563]
[277.92825317 214.04794312]
[291.49584961 220.45561218]
[304.65179443 227.67077637]
[317.34811401 235.66712952]
[329.53848267 244.41548157]
[341.17837524 253.88389587]
[352.22534180 264.03784180]
[362.63906860 274.84027100]
[372.38156128 286.25177002]
[381.41726685 298.23065186]
[389.71322632 310.73327637]
[397.23913574 323.71398926]
[403.96759033 337.12539673]
[409.87399292 350.91860962]
[414.93679810 365.04327393]
[419.13751221 379.44784546]
[422.46087646 394.07980347]
[424.89468384 408.88568115]
[426.43011475 423.81152344]
[427.06155396 438.80282593]
[426.78665161 453.80493164]
[425.60647583 468.76303101]
[423.52529907 483.62261963]
[420.55068970 498.32940674]
[416.69354248 512.82977295]
[411.96792603 527.07080078]
[406.39108276 541.00048828]
[399.98333740 554.56811523]
[392.76812744 567.72399902]
[384.77169800 580.42028809]
[376.02331543 592.61059570]
[366.55484009 604.25042725]
[356.40081787 615.29736328]
[345.59835815 625.71105957]
[334.18682861 635.45349121]
[322.20788574 644.48913574]
[309.70523071 652.78503418]
[296.72448730 660.31091309]
[283.31301880 667.03930664]
[269.51980591 672.94561768]
[255.39511108 678.00836182]
[240.99050903 682.20904541]
[226.35856628 685.53228760]
[211.55264282 687.96606445]
[196.62680054 689.50140381]
[181.63548279 690.13275146]
[166.63340759 689.85784912]
[151.67529297 688.67755127]
[136.81573486 686.59631348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 152]
[45 151]
[46 150]
[47 149]
[48 148]
[49 145]
[50 144]
[52 142]
[53 141]
[54 133]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[60 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
