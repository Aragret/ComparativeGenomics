%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[29.17804527 530.34246826]
[17.25718307 540.71881104]
[1.49666941 539.54333496]
[-8.75306416 527.51342773]
[-7.41103125 511.76623535]
[4.72656393 501.64425659]
[5.84221268 486.68579102]
[6.95786095 471.72735596]
[8.07351017 456.76889038]
[-1.65214610 468.18869019]
[-15.75127602 473.30868530]
[-30.53840065 470.79058838]
[-42.14820099 461.29254150]
[-47.54590607 447.29739380]
[-45.32056427 432.46337891]
[-36.05387497 420.66809082]
[-22.16813278 414.99481201]
[-7.29303408 416.92651367]
[4.68310547 425.95822144]
[10.62962055 439.72824097]
[13.95187950 425.10076904]
[17.27413940 410.47332764]
[20.59639931 395.84585571]
[23.91865921 381.21838379]
[27.24091721 366.59094238]
[16.62981796 357.99316406]
[10.73002243 345.60281372]
[10.74436188 331.81335449]
[16.72704697 319.31591797]
[27.56196594 310.57403564]
[41.17046356 307.33804321]
[44.71013641 292.76165771]
[48.24980545 278.18530273]
[43.73437881 263.99160767]
[54.50970459 252.40702820]
[49.99427795 238.21334839]
[60.76960373 226.62875366]
[64.30927277 212.05238342]
[67.84894562 197.47601318]
[71.38861847 182.89962769]
[74.92829132 168.32325745]
[78.46796417 153.74688721]
[76.99165344 146.50517273]
[82.17036438 138.98063660]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[89.93357086 74.81776428]
[93.36116791 62.79964066]
[103.71578217 56.54596329]
[107.68787384 42.08143616]
[111.65997314 27.61691475]
[115.63207245 13.15239048]
[108.07455444 -0.46824738]
[112.30887604 -15.08074760]
[125.34065247 -22.20174026]
[129.31274414 -36.66626358]
[128.56752014 -45.77024460]
[133.45315552 -51.31573105]
[137.64016724 -65.71951294]
[141.82717896 -80.12329865]
[129.37170410 -92.52065277]
[124.93344116 -109.43255615]
[129.64781189 -126.17707062]
[142.12924194 -138.16569519]
[158.87670898 -142.16076660]
[162.63301086 -156.68283081]
[166.38931274 -171.20489502]
[170.14561462 -185.72694397]
[173.90191650 -200.24900818]
[177.65821838 -214.77107239]
[181.41452026 -229.29313660]
[176.08380127 -246.91882324]
[188.86349487 -258.94570923]
[184.60125732 -274.18197632]
[195.12339783 -284.72399902]
[198.66307068 -299.30035400]
[184.44140625 -304.09967041]
[170.69213867 -310.12023926]
[157.51992798 -317.31622314]
[145.02502441 -325.63287354]
[133.30250549 -335.00689697]
[122.44161987 -345.36691284]
[112.52500153 -356.63412476]
[103.62812805 -368.72277832]
[95.81871033 -381.54080200]
[89.15618896 -394.99072266]
[83.69127655 -408.97015381]
[79.46554565 -423.37265015]
[76.51117706 -438.08868408]
[74.85064697 -453.00619507]
[74.49658966 -468.01165771]
[75.45170593 -482.99087524]
[77.70872498 -497.82986450]
[81.25046539 -512.41564941]
[86.04998016 -526.63726807]
[92.07073212 -540.38641357]
[99.26690674 -553.55853271]
[107.58373260 -566.05334473]
[116.95790863 -577.77569580]
[127.31809998 -588.63647461]
[138.58544922 -598.55291748]
[150.67420959 -607.44964600]
[163.49237061 -615.25885010]
[176.94236755 -621.92120361]
[190.92185974 -627.38592529]
[205.32444763 -631.61145020]
[220.04049683 -634.56561279]
[234.95802307 -636.22589111]
[249.96350098 -636.57977295]
[264.94271851 -635.62445068]
[279.78164673 -633.36718750]
[294.36740112 -629.82525635]
[308.58892822 -625.02557373]
[322.33804321 -619.00457764]
[335.51004028 -611.80822754]
[348.00469971 -603.49127197]
[359.72695923 -594.11688232]
[370.58755493 -583.75653076]
[380.50387573 -572.48907471]
[389.40039062 -560.40020752]
[397.20944214 -547.58190918]
[403.87158203 -534.13183594]
[409.33612061 -520.15228271]
[413.56143188 -505.74960327]
[416.51541138 -491.03350830]
[418.17550659 -476.11596680]
[418.52914429 -461.11047363]
[417.57360840 -446.13128662]
[415.31619263 -431.29238892]
[411.77401733 -416.70669556]
[406.97412109 -402.48519897]
[400.95297241 -388.73620605]
[393.75643921 -375.56430054]
[385.43927002 -363.06973267]
[376.06475830 -351.34762573]
[365.70425415 -340.48715210]
[354.43661499 -330.57101440]
[342.34762573 -321.67465210]
[329.52923584 -313.86578369]
[316.07904053 -307.20382690]
[302.09939575 -301.73950195]
[287.69671631 -297.51437378]
[272.98056030 -294.56063843]
[258.06298828 -292.90072632]
[243.05751038 -292.54730225]
[228.07832336 -293.50305176]
[213.23944092 -295.76068115]
[209.69976807 -281.18432617]
[214.21520996 -266.99063110]
[203.43988037 -255.40605164]
[209.46351624 -244.91593933]
[206.63385010 -232.74314880]
[195.93656921 -225.53683472]
[192.18026733 -211.01477051]
[188.42398071 -196.49270630]
[184.66767883 -181.97065735]
[180.91137695 -167.44859314]
[177.15507507 -152.92652893]
[173.39877319 -138.40447998]
[183.31030273 -130.56996155]
[189.54553223 -119.52809143]
[191.14738464 -106.90184784]
[187.84283447 -94.56251526]
[180.08868408 -84.35231781]
[169.00871277 -77.80944061]
[156.23095703 -75.93628693]
[152.04394531 -61.53250504]
[147.85693359 -47.12872314]
[143.77726746 -32.69416809]
[139.80517578 -18.22964478]
[147.37257385 -5.45192432]
[143.55035400 9.27374363]
[130.09658813 17.12448692]
[126.12449646 31.58901024]
[122.15239716 46.05353546]
[118.18030548 60.51805878]
[123.52554321 77.23318481]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[96.69242859 142.73693848]
[93.04434204 157.28654480]
[89.50466919 171.86293030]
[85.96499634 186.43930054]
[82.42532349 201.01567078]
[78.88565063 215.59205627]
[75.34597778 230.16842651]
[79.60822296 245.40469360]
[69.08608246 255.94670105]
[73.34832764 271.18295288]
[62.82618332 281.72494507]
[59.28651047 296.30133057]
[55.74683762 310.87771606]
[67.82788849 322.16665649]
[72.54040527 337.91744995]
[68.68889618 353.80401611]
[57.41659927 365.51260376]
[41.86837769 369.91320801]
[38.54611969 384.54064941]
[35.22385788 399.16812134]
[31.90159988 413.79559326]
[28.57933998 428.42303467]
[25.25708008 443.05050659]
[23.03196335 457.88455200]
[21.91631508 472.84298706]
[20.80066681 487.80145264]
[19.68501663 502.75991821]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 207]
[20 206]
[21 205]
[22 204]
[23 203]
[24 202]
[25 201]
[31 196]
[32 195]
[33 194]
[35 192]
[37 190]
[38 189]
[39 188]
[40 187]
[41 186]
[42 185]
[44 184]
[45 183]
[46 182]
[48 180]
[51 178]
[52 177]
[53 176]
[54 175]
[57 172]
[58 171]
[60 170]
[61 169]
[62 168]
[67 161]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[73 155]
[75 152]
[77 150]
[78 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
