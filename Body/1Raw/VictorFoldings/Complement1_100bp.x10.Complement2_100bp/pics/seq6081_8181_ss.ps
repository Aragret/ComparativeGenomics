%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[116.90619659 724.87591553]
[102.42292023 720.95855713]
[88.17296600 716.26281738]
[74.19813538 710.80255127]
[60.53941345 704.59362793]
[47.23686218 697.65441895]
[34.32950974 690.00512695]
[21.85520744 681.66833496]
[9.85054779 672.66833496]
[-1.64925718 663.03167725]
[-12.61047649 652.78656006]
[-23.00095940 641.96301270]
[-32.79022598 630.59283447]
[-41.94956970 618.70935059]
[-50.45211411 606.34741211]
[-58.27293015 593.54327393]
[-65.38906860 580.33453369]
[-71.77966309 566.75982666]
[-77.42596436 552.85913086]
[-82.31141663 538.67309570]
[-86.42168427 524.24340820]
[-89.74471283 509.61230469]
[-92.27075958 494.82278442]
[-93.99240875 479.91818237]
[-94.90460968 464.94226074]
[-95.00469208 449.93890381]
[-94.29236603 434.95211792]
[-92.76970673 420.02587891]
[-90.44119263 405.20397949]
[-87.31365204 390.52987671]
[-83.39625549 376.04660034]
[-78.70049286 361.79666138]
[-73.24013519 347.82183838]
[-67.03120422 334.16314697]
[-60.09191513 320.86062622]
[-52.44261551 307.95327759]
[-44.10574341 295.47900391]
[-35.10575485 283.47439575]
[-25.46904373 271.97460938]
[-15.22388077 261.01342773]
[-4.40031576 250.62298584]
[6.96990442 240.83375549]
[18.85342789 231.67445374]
[31.21540070 223.17193604]
[44.01955795 215.35116577]
[57.22834778 208.23507690]
[70.80302429 201.84452820]
[84.70376587 196.19827271]
[98.88980865 191.31286621]
[113.31954193 187.20265198]
[109.99727631 172.57518005]
[106.67501831 157.94772339]
[103.24395752 143.34539795]
[90.46426392 131.31851196]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[82.17036438 61.01936722]
[78.41407013 46.49731064]
[74.22705841 32.09352875]
[69.61304474 17.82079506]
[64.99903870 3.54806089]
[60.38502884 -10.72467232]
[55.74243164 -15.43188286]
[54.37870407 -20.94888115]
[55.85298157 -25.49151802]
[51.66596985 -39.89529800]
[47.47895813 -54.29907990]
[43.29194641 -68.70286560]
[39.10493851 -83.10664368]
[35.39507675 -68.57265472]
[26.46733284 -56.51879883]
[13.64608192 -48.73320389]
[-1.16671944 -46.37080765]
[-15.77368069 -49.78206635]
[-28.00794601 -58.46093369]
[-36.05463409 -71.11995697]
[-38.72006607 -85.88124084]
[-35.60884476 -100.55503082]
[-27.18249702 -112.96457672]
[-14.69102287 -121.26897430]
[0.01254190 -124.23632812]
[14.74701023 -121.42644501]
[27.32661247 -113.25615692]
[35.88446808 -100.93922424]
[34.76882172 -115.89768219]
[33.65317154 -130.85612488]
[32.53752518 -145.81459045]
[31.42187500 -160.77304077]
[30.30622673 -175.73149109]
[15.45840549 -178.37591553]
[1.73503959 -184.63052368]
[-10.00120735 -194.10212708]
[-19.01258469 -206.19534302]
[-24.73263168 -220.14997864]
[-26.80178070 -235.08883667]
[-25.08996010 -250.07284546]
[-19.70478249 -264.16009521]
[-10.98475838 -276.46505737]
[0.52196032 -286.21423340]
[14.09205246 -292.79476929]
[28.87249184 -295.79299927]
[43.93416595 -295.02047729]
[58.33028412 -290.52575684]
[71.15589905 -282.59136963]
[81.60477448 -271.71609497]
[89.02009583 -258.58352661]
[92.93572235 -244.01924133]
[93.10551453 -228.93872070]
[89.51879883 -214.28996277]
[82.40103912 -200.99378967]
[72.19966888 -189.88600159]
[59.55595016 -181.66485596]
[45.26467896 -176.84713745]
[46.38032913 -161.88868713]
[47.49597549 -146.93023682]
[48.61162567 -131.97178650]
[49.72727585 -117.01332855]
[50.84292221 -102.05487061]
[53.50872040 -87.29365540]
[57.69572830 -72.88987732]
[61.88274002 -58.48609161]
[66.06975555 -44.08230972]
[70.25676727 -29.67852974]
[74.65776062 -15.33868122]
[79.27177429 -1.06594825]
[83.88578033 13.20678520]
[88.49978638 27.47951889]
[90.93129730 28.87447357]
[92.95675659 31.31663322]
[94.17452240 34.65616226]
[94.24458313 38.60073090]
[92.93612671 42.74100876]
[96.69242859 57.26306915]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[121.01430511 117.14283752]
[123.84397125 129.31562805]
[117.82033539 139.80572510]
[122.88644409 147.40653992]
[121.30248260 154.62547302]
[124.62474060 169.25292969]
[127.94699860 183.88038635]
[142.73649597 181.35418701]
[157.64106750 179.63240051]
[172.61700439 178.72004700]
[187.62036133 178.61981201]
[202.60714722 179.33198547]
[217.53340149 180.85449219]
[232.35533142 183.18286133]
[247.02947998 186.31025696]
[261.51278687 190.22750854]
[275.76275635 194.92312622]
[289.73764038 200.38334656]
[303.39639282 206.59213257]
[316.69900513 213.53129578]
[329.60638428 221.18046570]
[342.08074951 229.51721191]
[354.08547974 238.51708984]
[365.58535767 248.15367126]
[376.54663086 258.39874268]
[386.93719482 269.22219849]
[396.72653198 280.59231567]
[405.88595581 292.47573853]
[414.38858032 304.83764648]
[422.20947266 317.64172363]
[429.32571411 330.85043335]
[435.71640015 344.42504883]
[441.36279297 358.32574463]
[446.24832153 372.51171875]
[450.35870361 386.94140625]
[453.68182373 401.57247925]
[456.20797729 416.36196899]
[457.92971802 431.26654053]
[458.84201050 446.24249268]
[458.94219971 461.24584961]
[458.22998047 476.23263550]
[456.70742798 491.15887451]
[454.37899780 505.98080444]
[451.25155640 520.65490723]
[447.33425903 535.13824463]
[442.63858032 549.38818359]
[437.17831421 563.36303711]
[430.96948242 577.02178955]
[424.03027344 590.32434082]
[416.38107300 603.23175049]
[408.04428101 615.70605469]
[399.04437256 627.71075439]
[389.40774536 639.21057129]
[379.16265869 650.17187500]
[368.33914185 660.56237793]
[356.96899414 670.35168457]
[345.08554077 679.51104736]
[332.72363281 688.01367188]
[319.91952515 695.83447266]
[306.71078491 702.95068359]
[293.13613892 709.34130859]
[279.23544312 714.98767090]
[265.04943848 719.87316895]
[250.61972046 723.98345947]
[235.98866272 727.30657959]
[221.19914246 729.83264160]
[206.29455566 731.55438232]
[191.31861877 732.46661377]
[176.31524658 732.56677246]
[161.32847595 731.85449219]
[146.40223694 730.33184814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 146]
[51 145]
[52 144]
[53 142]
[55 139]
[57 137]
[58 136]
[59 135]
[60 134]
[61 129]
[62 128]
[63 127]
[64 126]
[67 125]
[68 124]
[69 123]
[70 122]
[71 121]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
