%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[235.01786804 456.82684326]
[234.50244141 441.82632446]
[235.27842712 426.83700562]
[237.34011841 411.96990967]
[240.67224121 397.33505249]
[245.25012207 383.04086304]
[251.03985596 369.19308472]
[257.99859619 355.89431763]
[266.07479858 343.24298096]
[275.20867920 331.33276367]
[285.33264160 320.25183105]
[275.16909790 309.21994019]
[265.00555420 298.18807983]
[254.84199524 287.15618896]
[244.67845154 276.12432861]
[234.51490784 265.09243774]
[224.35134888 254.06056213]
[214.18780518 243.02868652]
[209.53729248 241.94158936]
[205.52030945 237.92153931]
[203.89192200 231.51374817]
[194.06134033 220.18414307]
[179.87620544 215.64196777]
[176.67599487 200.14781189]
[166.84541321 188.81820679]
[152.66027832 184.27603149]
[149.46006775 168.78187561]
[139.62948608 157.45227051]
[129.79890442 146.12268066]
[119.96832275 134.79309082]
[110.13774109 123.46349335]
[100.30716705 112.13390350]
[103.58213806 126.77202606]
[101.99214935 141.68751526]
[95.70499420 155.30632019]
[85.38417053 166.19119263]
[72.11885834 173.19345093]
[57.30898666 175.57411194]
[42.51746368 173.08195496]
[29.30528069 165.97996521]
[19.06674957 155.01763916]
[12.88236809 141.35186768]
[11.40478802 126.42481995]
[14.78994083 111.81178284]
[22.68058586 99.05491638]
[34.24399948 89.50047302]
[48.25987625 84.15675354]
[63.24907684 83.58770752]
[77.62976074 87.85337067]
[89.88443756 96.50372314]
[83.20423889 83.07334900]
[76.52404785 69.64296722]
[69.84385681 56.21259308]
[63.16365814 42.78221893]
[51.20666122 37.94559097]
[45.91920090 26.62187195]
[49.64162064 15.11230373]
[43.16212463 1.58395851]
[30.22272110 -7.52002096]
[31.70315933 -22.34086990]
[31.47727966 -7.34257126]
[27.57789612 7.14172411]
[20.24345589 20.22629547]
[9.92246342 31.11101532]
[-2.75394750 39.13027954]
[-17.01061058 43.79370499]
[-31.97572517 44.81612778]
[-46.73416901 42.13501740]
[-60.38345718 35.91433334]
[-72.08892822 26.53446579]
[-81.13479614 14.56900120]
[-86.96789551 0.74963188]
[-89.23152924 -14.07858276]
[-87.78727722 -29.00889206]
[-82.72345734 -43.12830353]
[-74.34972382 -55.57340622]
[-63.17813110 -65.58317566]
[-49.89183044 -72.54551697]
[-35.30327988 -76.03468323]
[-20.30457878 -75.83729553]
[-5.81290245 -71.96543884]
[7.28557920 -64.65586853]
[18.18988800 -54.35557556]
[26.23323250 -41.69439697]
[24.67271042 -56.61300278]
[23.11218834 -71.53160858]
[21.55166435 -86.45021057]
[19.99114227 -101.36881256]
[16.92364502 -105.59226990]
[15.88662624 -110.11751556]
[16.65502357 -114.12059021]
[18.70936584 -116.98625946]
[17.81654930 -131.95965576]
[16.92373276 -146.93305969]
[16.03091812 -161.90647888]
[1.49632072 -166.21011353]
[-10.68795490 -175.22782898]
[-19.05060005 -187.87069702]
[-22.58178329 -202.61201477]
[-20.85509682 -217.67170715]
[-14.07904816 -231.23124695]
[-3.07187629 -241.65322876]
[10.83724785 -247.67918396]
[25.96873093 -248.58142090]
[40.49537277 -244.25100708]
[52.66300964 -235.21086121]
[61.00233841 -222.55259705]
[64.50634766 -207.80479431]
[62.75191498 -192.74830627]
[55.95088959 -179.20129395]
[44.92453003 -168.79959106]
[31.00432396 -162.79928589]
[31.89713860 -147.82588196]
[32.78995514 -132.85247803]
[33.68276978 -117.87907410]
[34.90974808 -102.92933655]
[36.47026825 -88.01073456]
[38.03079224 -73.09212494]
[39.59131622 -58.17352295]
[41.15183640 -43.25492096]
[45.23150635 -28.82036591]
[57.70745087 -20.68402481]
[56.69046783 -4.89553738]
[63.16996384 8.63280773]
[78.16188049 17.75472450]
[76.59403229 36.10202408]
[83.27423096 49.53240204]
[89.95442200 62.96277618]
[96.63462067 76.39315033]
[103.31481171 89.82353210]
[111.63675690 102.30332184]
[121.46733856 113.63291168]
[131.29791260 124.96250916]
[141.12849426 136.29209900]
[150.95907593 147.62168884]
[160.78965759 158.95129395]
[175.67793274 164.30383301]
[178.17500305 178.98762512]
[188.00558472 190.31723022]
[202.89385986 195.66976929]
[205.39093018 210.35356140]
[215.22151184 221.68316650]
[225.21968079 232.86512756]
[235.38323975 243.89701843]
[245.54678345 254.92889404]
[255.71032715 265.96075439]
[265.87387085 276.99264526]
[276.03741455 288.02453613]
[286.20095825 299.05639648]
[296.36450195 310.08828735]
[308.23645020 300.90466309]
[320.85388184 292.77560425]
[334.12344360 285.76132202]
[347.94686890 279.91372681]
[362.22180176 275.27612305]
[376.84259033 271.88281250]
[391.70095825 269.75897217]
[406.68685913 268.92031860]
[421.68942261 269.37301636]
[436.59753418 271.11373901]
[451.30078125 274.12960815]
[465.69036865 278.39828491]
[479.65969849 283.88815308]
[493.10540771 290.55859375]
[505.92788696 298.36019897]
[518.03222656 307.23522949]
[529.32885742 317.11795044]
[539.73406982 327.93521118]
[549.17083740 339.60693359]
[557.56927490 352.04666138]
[564.86730957 365.16232300]
[571.01080322 378.85681152]
[575.95428467 393.02874756]
[579.66119385 407.57315063]
[582.10400391 422.38241577]
[583.26477051 437.34683228]
[583.13476562 452.35565186]
[581.71496582 467.29772949]
[579.01599121 482.06243896]
[575.05773926 496.54049683]
[569.86950684 510.62466431]
[563.48968506 524.21069336]
[555.96563721 537.19793701]
[547.35290527 549.49035645]
[537.71539307 560.99682617]
[527.12438965 571.63226318]
[515.65826416 581.31781006]
[503.40200806 589.98181152]
[490.44628906 597.56018066]
[476.88708496 603.99670410]
[462.82473755 609.24377441]
[448.36337280 613.26257324]
[433.61007690 616.02331543]
[418.67407227 617.50555420]
[403.66592407 617.69830322]
[388.69677734 616.60015869]
[373.87744141 614.21923828]
[359.31762695 610.57324219]
[345.12518311 605.68902588]
[331.40512085 599.60290527]
[318.25903320 592.35980225]
[305.78430176 584.01342773]
[294.07321167 574.62554932]
[283.21255493 564.26562500]
[273.28265381 553.01049805]
[264.35708618 540.94335938]
[256.50192261 528.15356445]
[249.77531433 514.73590088]
[244.22706604 500.78964233]
[239.89825439 486.41806030]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 150]
[12 149]
[13 148]
[14 147]
[15 146]
[16 145]
[17 144]
[18 143]
[21 142]
[22 141]
[24 139]
[25 138]
[27 136]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[50 130]
[51 129]
[52 128]
[53 127]
[54 126]
[57 124]
[58 123]
[60 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
