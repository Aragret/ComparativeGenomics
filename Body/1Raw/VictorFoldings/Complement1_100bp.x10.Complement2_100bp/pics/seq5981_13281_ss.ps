%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[111.63330841 384.41775513]
[104.62550354 397.70953369]
[95.79734802 409.86868286]
[85.32856750 420.64761353]
[73.43228912 429.82690430]
[60.35070419 437.21966553]
[46.35014343 442.67538452]
[31.71563530 446.08300781]
[16.74512291 447.37316895]
[1.74338484 446.51959229]
[-12.98416233 443.53964233]
[-27.13768578 438.49398804]
[-40.42903519 431.48538208]
[-52.58761978 422.65646362]
[-63.36590195 412.18701172]
[-72.54444885 400.29016113]
[-79.93640137 387.20812988]
[-85.39127350 373.20721436]
[-88.79799652 358.57250977]
[-90.08722687 343.60189819]
[-89.23271179 328.60021973]
[-86.25184631 313.87286377]
[-81.20532227 299.71966553]
[-74.19588470 286.42874146]
[-65.36621857 274.27069092]
[-54.89610291 263.49307251]
[-42.99868774 254.31524658]
[-29.91618919 246.92410278]
[-15.91495323 241.47010803]
[-1.28002417 238.06428528]
[13.69064808 236.77598572]
[28.69228172 237.63142395]
[43.41946030 240.61320496]
[40.40517044 226.02679443]
[52.32722855 215.62606812]
[57.36414337 201.49703979]
[53.27692413 184.43064880]
[67.40312195 172.61828613]
[64.17199707 158.07836914]
[75.93788147 147.50129700]
[80.76388550 133.29884338]
[85.58988190 119.09638214]
[90.41587830 104.89392853]
[92.08741760 89.98735046]
[90.52689362 75.06874847]
[88.96636963 60.15014267]
[87.40584564 45.23153687]
[76.24673462 30.58381844]
[84.01237488 14.84654522]
[82.22991180 -0.04717193]
[80.44744110 -14.94088936]
[66.42709351 -21.05457306]
[57.40887451 -33.28438950]
[55.73413086 -48.28644180]
[61.75312805 -62.02062225]
[73.75765991 -70.83860779]
[71.97518921 -85.73232269]
[70.19272614 -100.62603760]
[54.75652313 -105.76972961]
[43.15031052 -117.08959961]
[37.66223907 -132.28306580]
[39.34330368 -148.29112244]
[47.80647659 -161.91419983]
[61.31429672 -170.45172119]
[59.31028366 -185.31724548]
[57.30627060 -200.18278503]
[55.30225754 -215.04830933]
[53.29824448 -229.91383362]
[51.29422760 -244.77935791]
[36.29286575 -244.21844482]
[21.30739975 -245.10798645]
[6.47774744 -247.43971252]
[-8.05762672 -251.19183350]
[-22.16300583 -256.32931519]
[-35.70668793 -262.80419922]
[-48.56222153 -270.55603027]
[-60.60956955 -279.51242065]
[-71.73624420 -289.58975220]
[-81.83836365 -300.69393921]
[-90.82160187 -312.72128296]
[-98.60207367 -325.55947876]
[-105.10715485 -339.08871460]
[-110.27608490 -353.18258667]
[-114.06060791 -367.70956421]
[-116.42539978 -382.53396606]
[-117.34836578 -397.51742554]
[-116.82089996 -412.51998901]
[-114.84791565 -427.40161133]
[-111.44784546 -442.02334595]
[-106.65242767 -456.24865723]
[-100.50644684 -469.94473267]
[-93.06726837 -482.98370361]
[-84.40437317 -495.24377441]
[-74.59863281 -506.61053467]
[-63.74161148 -516.97778320]
[-51.93467331 -526.24884033]
[-39.28806686 -534.33703613]
[-25.91986465 -541.16687012]
[-11.95488930 -546.67456055]
[2.47646856 -550.80877686]
[17.23946381 -553.53076172]
[32.19625854 -554.81524658]
[47.20719528 -554.65020752]
[62.13212204 -553.03710938]
[76.83168793 -549.99102783]
[91.16863251 -545.54052734]
[105.00910950 -539.72698975]
[118.22387695 -532.60479736]
[130.68955994 -524.24047852]
[142.28974915 -514.71203613]
[152.91615295 -504.10848999]
[162.46954346 -492.52883911]
[170.86073303 -480.08120728]
[178.01135254 -466.88180542]
[183.85464478 -453.05389404]
[188.33607483 -438.72656250]
[191.41375732 -424.03359985]
[193.05899048 -409.11218262]
[193.25639343 -394.10162354]
[192.00413513 -379.14212036]
[189.31390381 -364.37329102]
[185.21083069 -349.93304443]
[179.73318481 -335.95623779]
[172.93215942 -322.57336426]
[164.87123108 -309.90936279]
[155.62565613 -298.08248901]
[145.28178406 -287.20315552]
[133.93618774 -277.37295532]
[121.69478607 -268.68368530]
[108.67188263 -261.21646118]
[94.98908234 -255.04098511]
[80.77413177 -250.21493530]
[66.15975952 -246.78337097]
[68.16377258 -231.91784668]
[70.16778564 -217.05232239]
[72.17179871 -202.18679810]
[74.17581177 -187.32125854]
[76.17982483 -172.45573425]
[89.56668091 -168.81427002]
[100.58930969 -160.31877136]
[107.56336212 -148.22572327]
[109.40730286 -134.34442139]
[105.80999756 -120.76631165]
[97.28266144 -109.54986572]
[85.08644104 -102.40850830]
[86.86891174 -87.51478577]
[88.65137482 -72.62107086]
[102.39772797 -66.88492584]
[111.48770905 -54.95897675]
[113.40042114 -39.98540497]
[107.52285767 -25.97287369]
[95.34116364 -16.72335434]
[97.12362671 -1.82963789]
[98.90608978 13.06407928]
[108.21846771 20.78458595]
[109.82536316 33.17819977]
[102.32445526 43.67101669]
[103.88497925 58.58961868]
[105.44550323 73.50822449]
[107.00601959 88.42682648]
[112.21492004 74.36029816]
[120.11337280 61.60826111]
[130.38681030 50.67863846]
[142.62602234 42.00674820]
[156.34353638 35.93798828]
[170.99298096 32.71407700]
[185.99089050 32.46341705]
[200.73988342 35.19599915]
[214.65252686 40.80297852]
[227.17469788 49.06103897]
[237.80761719 59.64125824]
[246.12779236 72.12223053]
[251.80381775 86.00685120]
[254.60964966 100.74208832]
[254.43351746 115.74105072]
[251.28244019 130.40634155]
[245.28190613 144.15383911]
[236.67092896 156.43598938]
[225.79249573 166.76359558]
[213.07986450 174.72531128]
[199.03938293 180.00404358]
[184.23027039 182.38951111]
[169.24240112 181.78672791]
[154.67268372 178.21969604]
[141.10147095 171.83047485]
[129.06927490 162.87356567]
[119.05534363 151.70570374]
[111.45852661 138.77169800]
[106.58139038 124.58672333]
[104.61833191 109.71992493]
[99.79233551 123.92237854]
[94.96633911 138.12483215]
[90.14034271 152.32728577]
[93.02627563 167.88305664]
[81.60558319 177.44427490]
[86.59620667 189.33782959]
[82.28423309 201.06773376]
[71.49317169 206.53395081]
[66.45625305 220.66297913]
[69.11027527 236.25999451]
[57.54848862 245.65011597]
[70.84070587 252.65708923]
[83.00038147 261.48449707]
[93.77996063 271.95260620]
[102.95998383 283.84832764]
[110.35355377 296.92944336]
[115.81015778 310.92968750]
[119.21869659 325.56396484]
[120.50977325 340.53439331]
[119.65711975 355.53619385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 201]
[35 199]
[36 198]
[38 195]
[40 193]
[41 192]
[42 191]
[43 190]
[44 160]
[45 159]
[46 158]
[47 157]
[49 154]
[50 153]
[51 152]
[56 147]
[57 146]
[58 145]
[64 138]
[65 137]
[66 136]
[67 135]
[68 134]
[69 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
