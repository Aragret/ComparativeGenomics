%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[55.82400513 666.33331299]
[42.07643127 672.36230469]
[27.81800652 677.05718994]
[13.17786407 680.37548828]
[-1.71141136 682.28710938]
[-16.71497726 682.77471924]
[-31.69695473 681.83392334]
[-46.52166367 679.47326660]
[-61.05484390 675.71405029]
[-75.16487885 670.59039307]
[-88.72398376 664.14874268]
[-101.60935974 656.44732666]
[-113.70431519 647.55590820]
[-124.89930725 637.55505371]
[-135.09295654 626.53533936]
[-144.19294739 614.59655762]
[-152.11686707 601.84680176]
[-158.79295349 588.40155029]
[-164.16073608 574.38256836]
[-168.17160034 559.91680908]
[-170.78923035 545.13531494]
[-171.98992920 530.17193604]
[-171.76281738 515.16217041]
[-170.10993958 500.24197388]
[-167.04627991 485.54641724]
[-162.59957886 471.20864868]
[-156.81010437 457.35852051]
[-149.73028564 444.12139893]
[-141.42424011 431.61721802]
[-131.96720886 419.95922852]
[-121.44480896 409.25296021]
[-109.95235443 399.59539795]
[-97.59392548 391.07403564]
[-84.48143768 383.76599121]
[-70.73364258 377.73748779]
[-56.47504807 373.04309082]
[-41.83478165 369.72534180]
[-26.94543839 367.81430054]
[-11.94185448 367.32720947]
[3.04008985 368.26855469]
[17.86471176 370.62976074]
[21.62101364 356.10772705]
[25.37731361 341.58566284]
[21.07370949 327.32632446]
[32.02031708 315.90344238]
[35.77661896 301.38137817]
[31.47301292 287.12207031]
[42.41962051 275.69918823]
[46.17592239 261.17712402]
[49.93222427 246.65505981]
[53.68852234 232.13299561]
[57.44482422 217.61094666]
[61.20112610 203.08888245]
[53.80160522 195.97424316]
[49.99320602 186.35490417]
[50.52545166 175.94195557]
[55.36922836 166.61772156]
[63.71001053 160.09556580]
[74.08409119 157.60513306]
[78.48509216 143.26528931]
[82.88608551 128.92544556]
[81.84342957 121.60870361]
[87.46083069 114.40574646]
[80.95713043 101.45784760]
[85.41411591 87.67083740]
[98.26643372 80.98024750]
[102.88044739 66.70751190]
[107.49445343 52.43478012]
[100.55267334 38.49026871]
[105.43525696 24.08141327]
[118.77199554 17.54942322]
[123.38600922 3.27668905]
[128.00001526 -10.99604416]
[132.61402893 -25.26877785]
[129.49681091 -40.77985382]
[140.77388000 -50.51005554]
[145.38789368 -64.78278351]
[150.00190735 -79.05551910]
[154.61590576 -93.32825470]
[159.22991943 -107.60099030]
[151.75758362 -118.80718231]
[152.09873962 -132.07722473]
[159.90481567 -142.57232666]
[172.14619446 -146.59457397]
[176.97218323 -160.79702759]
[181.69232178 -175.03501892]
[186.30633545 -189.30775452]
[190.92033386 -203.58049011]
[177.22740173 -209.74218750]
[164.29542542 -217.37286377]
[152.28138733 -226.37986755]
[141.33113098 -236.65386963]
[131.57759094 -248.07015991]
[123.13915253 -260.49014282]
[116.11826324 -273.76306152]
[110.60013580 -287.72778320]
[106.65176392 -302.21478271]
[104.32107544 -317.04824829]
[103.63636780 -332.04806519]
[104.60594177 -347.03213501]
[107.21804047 -361.81863403]
[111.44094849 -376.22802734]
[117.22340393 -390.08535767]
[124.49520874 -403.22250366]
[133.16810608 -415.47991943]
[143.13679504 -426.70883179]
[154.28027344 -436.77291870]
[166.46325684 -445.55004883]
[179.53788757 -452.93362427]
[193.34542847 -458.83407593]
[207.71826172 -463.17971802]
[222.48193359 -465.91781616]
[237.45721436 -467.01516724]
[252.46231079 -466.45843506]
[267.31509399 -464.25433350]
[281.83526611 -460.42965698]
[295.84655762 -455.03085327]
[309.17886353 -448.12341309]
[321.67034912 -439.79122925]
[333.16940308 -430.13540649]
[343.53643799 -419.27316284]
[352.64559937 -407.33639526]
[360.38629150 -394.46997070]
[366.66455078 -380.83007812]
[371.40420532 -366.58230591]
[374.54766846 -351.89959717]
[376.05679321 -336.96020508]
[375.91329956 -321.94546509]
[374.11889648 -307.03762817]
[370.69537354 -292.41769409]
[365.68429565 -278.26312256]
[359.14645386 -264.74572754]
[351.16125488 -252.02958679]
[341.82562256 -240.26910400]
[331.25289917 -229.60699463]
[319.57138062 -220.17272949]
[306.92291260 -212.08079529]
[293.46099854 -205.42945862]
[279.34909058 -200.29942322]
[264.75848389 -196.75297546]
[249.86628723 -194.83317566]
[234.85328674 -194.56332397]
[219.90170288 -195.94668579]
[205.19306946 -198.96647644]
[200.57905579 -184.69374084]
[195.96505737 -170.42100525]
[196.89866638 -163.08955383]
[191.17463684 -155.97103882]
[186.34864807 -141.76858521]
[194.42008972 -127.01424408]
[189.22079468 -110.66547394]
[173.50265503 -102.98697662]
[168.88864136 -88.71424103]
[164.27464294 -74.44151306]
[159.66062927 -60.16877747]
[155.04661560 -45.89604568]
[158.49386597 -31.40584946]
[146.88676453 -20.65476799]
[142.27275085 -6.38203526]
[137.65873718 7.89069843]
[133.04473877 22.16343117]
[140.03402710 35.26630783]
[135.55807495 49.80661774]
[121.76718903 57.04878998]
[117.15318298 71.32152557]
[112.53916931 85.59425354]
[119.04286957 98.54215240]
[114.58588409 112.32916260]
[101.73356628 119.01975250]
[97.22593689 133.32644653]
[92.82493591 147.66629028]
[88.42393494 162.00613403]
[98.76496124 179.23236084]
[93.18939972 198.21699524]
[75.72318268 206.84518433]
[71.96688080 221.36724854]
[68.21058655 235.88929749]
[64.45428467 250.41136169]
[60.69798279 264.93341064]
[56.94168091 279.45547485]
[60.97660828 294.75350952]
[50.29867554 305.13769531]
[46.54237747 319.65975952]
[50.57730484 334.95779419]
[39.89937210 345.34194946]
[36.14307022 359.86401367]
[32.38677216 374.38607788]
[46.49699402 379.50918579]
[60.05633163 385.95040894]
[72.94198608 393.65133667]
[85.03726959 402.54229736]
[96.23262787 412.54272461]
[106.42668152 423.56207275]
[115.52710724 435.50054932]
[123.45148468 448.25000000]
[130.12805176 461.69500732]
[135.49635315 475.71380615]
[139.50775146 490.17938232]
[142.12593079 504.96078491]
[143.32716370 519.92413330]
[143.10060120 534.93389893]
[141.44827271 549.85418701]
[138.38514709 564.54986572]
[133.93896484 578.88775635]
[128.14997864 592.73815918]
[121.07064819 605.97552490]
[112.76506805 618.47998047]
[103.30844879 630.13830566]
[92.78644562 640.84497070]
[81.29434967 650.50292969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 187]
[42 186]
[43 185]
[45 183]
[46 182]
[48 180]
[49 179]
[50 178]
[51 177]
[52 176]
[53 175]
[59 172]
[60 171]
[61 170]
[63 169]
[66 166]
[67 165]
[68 164]
[71 161]
[72 160]
[73 159]
[74 158]
[76 156]
[77 155]
[78 154]
[79 153]
[80 152]
[84 149]
[85 148]
[86 146]
[87 145]
[88 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
