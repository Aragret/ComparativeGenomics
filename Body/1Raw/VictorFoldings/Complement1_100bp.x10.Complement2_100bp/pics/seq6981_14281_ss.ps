%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[114.41357422 809.55914307]
[100.05276489 805.20477295]
[86.03917694 799.83703613]
[72.44423676 793.48327637]
[59.33720016 786.17578125]
[46.78487778 777.95190430]
[34.85122299 768.85351562]
[23.59704971 758.92694092]
[13.07971001 748.22277832]
[3.35279560 736.79559326]
[-5.53412533 724.70361328]
[-13.53576756 712.00848389]
[-20.61135674 698.77484131]
[-26.72483444 685.07012939]
[-31.84504890 670.96423340]
[-35.94591141 656.52899170]
[-39.00651932 641.83795166]
[-41.01128006 626.96600342]
[-41.94997406 611.98895264]
[-41.81782150 596.98309326]
[-40.61549759 582.02490234]
[-38.34912491 567.19061279]
[-35.03025055 552.55578613]
[-30.67579460 538.19500732]
[-25.30793953 524.18145752]
[-18.95404243 510.58654785]
[-11.64648247 497.47958374]
[-3.42249417 484.92730713]
[5.67601204 472.99371338]
[15.60267258 461.73962402]
[26.30690384 451.22238159]
[37.73415756 441.49554443]
[49.82620239 432.60870361]
[62.52141953 424.60717773]
[75.75511932 417.53167725]
[89.45985413 411.41830444]
[103.56580353 406.29821777]
[118.00107574 402.19744873]
[132.69212341 399.13696289]
[130.68811035 384.27142334]
[128.68409729 369.40591431]
[126.68007660 354.54037476]
[124.67606354 339.67483521]
[122.67205048 324.80932617]
[120.66803741 309.94378662]
[118.66402435 295.07824707]
[106.70044708 286.28005981]
[104.45632935 271.23284912]
[113.76581573 258.74398804]
[111.76180267 243.87846375]
[109.75778961 229.01293945]
[107.75377655 214.14741516]
[93.29910278 210.40687561]
[81.34537506 201.39279175]
[73.73291016 188.45388794]
[71.64855957 173.54606628]
[75.44080353 158.93673706]
[84.56188202 146.85995483]
[97.64675903 139.17478943]
[95.64274597 124.30925751]
[93.63873291 109.44372559]
[85.97650909 122.33908844]
[72.60681152 129.13990784]
[57.67238617 127.73888397]
[45.80082321 118.57012939]
[40.67065811 104.47469330]
[43.87152863 89.82019043]
[54.41160965 79.14748383]
[69.02494049 75.76362610]
[83.18342590 80.71714020]
[92.50000000 92.47336578]
[92.50000000 77.47336578]
[92.50000000 62.47336578]
[92.50000000 47.47336578]
[92.38833618 32.47378159]
[92.16500854 17.47544670]
[91.94168091 2.47710848]
[91.71835327 -12.52122879]
[77.42998505 -15.41900635]
[64.06508636 -21.22909355]
[52.20981598 -29.69391251]
[42.38353348 -40.43951797]
[35.01607513 -52.99211502]
[30.42893600 -66.79895020]
[28.82123947 -81.25263977]
[30.26110268 -95.71791077]
[34.68274689 -109.55951691]
[41.88951111 -122.17011261]
[51.56257629 -132.99693298]
[63.27508926 -141.56600952]
[76.51098633 -147.50291443]
[90.68774414 -150.54913330]
[90.68774414 -165.54913330]
[90.68774414 -180.54913330]
[90.68774414 -195.54913330]
[90.68774414 -210.54913330]
[76.29457092 -215.20657349]
[64.04626465 -224.08543396]
[55.14279556 -236.31587219]
[50.45643234 -250.69964600]
[50.44629669 -265.82760620]
[55.11337662 -280.21765137]
[64.00045013 -292.46002197]
[76.23683929 -301.35528564]
[90.62376404 -306.03201294]
[105.75172424 -306.03201294]
[120.13864136 -301.35528564]
[132.37503052 -292.46002197]
[141.26210022 -280.21765137]
[145.92918396 -265.82760620]
[145.91905212 -250.69964600]
[141.23268127 -236.31587219]
[132.32922363 -224.08543396]
[120.08091736 -215.20657349]
[105.68774414 -210.54913330]
[105.68774414 -195.54913330]
[105.68774414 -180.54913330]
[105.68774414 -165.54913330]
[105.68774414 -150.54913330]
[120.77402496 -147.19822693]
[134.74633789 -140.57901001]
[146.90615845 -131.01898193]
[156.64479065 -118.99275970]
[163.47386169 -105.09850311]
[167.04983521 -90.02817535]
[167.19126892 -74.53307343]
[163.88798523 -59.38637543]
[157.30181885 -45.34455872]
[147.75862122 -33.10962677]
[135.73214722 -23.29400063]
[121.82056427 -16.38988304]
[106.71669006 -12.74455643]
[106.94001770 2.25378084]
[107.16334534 17.25211906]
[107.38667297 32.25045395]
[110.62940979 38.89172363]
[107.50000000 47.47336578]
[107.50000000 62.47336578]
[107.50000000 77.47336578]
[107.50000000 92.47336578]
[108.50425720 107.43971252]
[110.50827026 122.30523682]
[112.51229095 137.17076111]
[127.16513062 141.11662292]
[139.15861511 150.34696960]
[146.68412781 163.43057251]
[148.62187195 178.35815430]
[144.70747375 192.85098267]
[135.56745911 204.70870972]
[122.61930847 212.14340210]
[124.62332153 227.00892639]
[126.62733459 241.87445068]
[128.63134766 256.73999023]
[140.91563416 266.31777954]
[142.73622131 281.42208862]
[133.52955627 293.07424927]
[135.53356934 307.93978882]
[137.53758240 322.80529785]
[139.54159546 337.67083740]
[141.54560852 352.53634644]
[143.54962158 367.40188599]
[145.55363464 382.26742554]
[147.55764771 397.13293457]
[162.53468323 396.19390869]
[177.54054260 396.32571411]
[192.49876404 397.52767944]
[207.33312988 399.79373169]
[221.96803284 403.11227417]
[236.32891846 407.46640015]
[250.34259033 412.83392334]
[263.93762207 419.18750000]
[277.04476929 426.49475098]
[289.59722900 434.71847534]
[301.53100586 443.81671143]
[312.78533936 453.74310303]
[323.30285645 464.44708252]
[333.02993774 475.87411499]
[341.91705322 487.96594238]
[349.91888428 500.66098022]
[356.99465942 513.89453125]
[363.10836792 527.59912109]
[368.22879028 541.70495605]
[372.32986450 556.14013672]
[375.39071655 570.83111572]
[377.39569092 585.70300293]
[378.33462524 600.68005371]
[378.20269775 615.68591309]
[377.00061035 630.64410400]
[374.73446655 645.47845459]
[371.41580200 660.11334229]
[367.06155396 674.47418213]
[361.69393921 688.48779297]
[355.34024048 702.08282471]
[348.03286743 715.18988037]
[339.80908203 727.74230957]
[330.71075439 739.67602539]
[320.78427124 750.93023682]
[310.08020020 761.44769287]
[298.65310669 771.17468262]
[286.56118774 780.06170654]
[273.86608887 788.06341553]
[260.63250732 795.13909912]
[246.92785645 801.25268555]
[232.82199097 806.37304688]
[218.38677979 810.47399902]
[203.69578552 813.53472900]
[188.82388306 815.53961182]
[173.84683228 816.47839355]
[158.84097290 816.34637451]
[143.88276672 815.14416504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[44 158]
[45 157]
[46 156]
[49 153]
[50 152]
[51 151]
[52 150]
[59 143]
[60 142]
[61 141]
[71 140]
[72 139]
[73 138]
[74 137]
[75 135]
[76 134]
[77 133]
[78 132]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
