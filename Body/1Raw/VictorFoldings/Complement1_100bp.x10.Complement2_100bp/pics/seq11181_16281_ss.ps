%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[114.60504150 667.86553955]
[103.04866791 658.28790283]
[92.35842896 647.75225830]
[82.61347198 636.33654785]
[73.88593292 624.12542725]
[66.24044037 611.20928955]
[59.73360062 597.68365479]
[54.41358566 583.64874268]
[50.31978226 569.20843506]
[47.48250198 554.46966553]
[45.92275238 539.54156494]
[45.65208054 524.53460693]
[46.67248535 509.55996704]
[48.97642136 494.72845459]
[52.54682541 480.14993286]
[57.35726166 465.93228149]
[63.37211990 452.18081665]
[70.54685974 438.99731445]
[78.82836914 426.47940063]
[88.15532684 414.71975708]
[98.45868683 403.80545044]
[109.66215515 393.81726074]
[121.68279266 384.82919312]
[134.43159485 376.90771484]
[147.81417847 370.11154175]
[161.73144531 364.49096680]
[157.33044434 350.15112305]
[152.92945862 335.81127930]
[148.52845764 321.47143555]
[137.99223328 315.52880859]
[134.20832825 303.61807251]
[139.72505188 291.95922852]
[135.53804016 277.55545044]
[131.35102844 263.15167236]
[127.16402435 248.74789429]
[117.76210022 260.43566895]
[102.76236725 260.52487183]
[93.22206116 248.94979858]
[96.17395020 234.24311829]
[109.44200134 227.24606323]
[123.24441528 233.11537170]
[120.14030457 218.44006348]
[117.03619385 203.76475525]
[113.60513306 189.16244507]
[109.84883118 174.64038086]
[106.09252930 160.11831665]
[102.33622742 145.59626770]
[99.50001526 143.50144958]
[97.53752136 139.92883301]
[97.13229370 135.30400085]
[98.75192261 130.34175110]
[95.64781189 115.66644287]
[86.28707123 108.73696899]
[83.96182251 97.32493591]
[89.86505890 87.28536224]
[79.61775970 75.23117065]
[84.76246643 61.25328827]
[81.87719727 46.53339386]
[78.99192047 31.81350327]
[76.10665131 17.09361267]
[69.75222015 30.68115044]
[57.51221848 39.35192871]
[42.58615494 40.83942413]
[28.87566566 34.75481033]
[19.96464157 22.68859291]
[18.18239975 7.79484844]
[23.99481773 -6.03323221]
[35.88253784 -15.18102169]
[50.73814392 -17.25731087]
[64.67841339 -11.71936131]
[74.05903625 -0.01559205]
[73.38925171 -15.00063038]
[65.04345703 -28.44154930]
[72.20473480 -41.50161743]
[71.53495026 -56.48665619]
[70.86516571 -71.47169495]
[56.02016449 -73.96262360]
[42.02297211 -79.48361969]
[29.48452568 -87.79109192]
[18.95154381 -98.51989746]
[10.88269615 -111.19935608]
[5.62862492 -125.27394867]
[3.41671109 -140.12760925]
[4.34123325 -155.11070251]
[8.35935307 -169.56848145]
[15.29309082 -182.86961365]
[24.83721352 -194.43383789]
[36.57266617 -203.75721741]
[49.98496628 -210.43412781]
[64.48677063 -214.17488098]
[63.81698990 -229.15992737]
[63.14720535 -244.14495850]
[62.47741699 -259.13000488]
[61.80763245 -274.11505127]
[47.17474365 -277.90582275]
[34.31017685 -285.84271240]
[24.35784149 -297.21997070]
[18.20269012 -311.02597046]
[16.39203835 -326.03308105]
[19.08688545 -340.90686035]
[26.04760742 -354.32473755]
[36.65526199 -365.09362793]
[49.96662521 -372.25598145]
[64.79805756 -375.17486572]
[79.83075714 -373.59082031]
[93.72803497 -367.64462280]
[105.25414276 -357.86502075]
[113.38419342 -345.12164307]
[117.39526367 -330.54760742]
[116.93070221 -315.43881226]
[112.03180695 -301.13873291]
[103.13418579 -288.91894531]
[91.02901459 -279.86596680]
[76.79267120 -274.78482056]
[77.46245575 -259.79977417]
[78.13224030 -244.81474304]
[78.80202484 -229.82971191]
[79.47180939 -214.84466553]
[94.24952698 -212.41261292]
[108.20403290 -206.95892334]
[120.72447205 -198.71969604]
[131.26225281 -188.05307007]
[139.35501099 -175.42358398]
[144.64695740 -161.38194275]
[146.90452576 -146.54106140]
[146.02661133 -131.54930115]
[142.04916382 -117.06209564]
[135.14369202 -103.71332550]
[125.60989380 -92.08760071]
[113.86260223 -82.69462585]
[100.41378021 -75.94687653]
[85.85020447 -72.14147949]
[86.51998901 -57.15644073]
[87.18977356 -42.17140198]
[95.48766327 -29.80231285]
[88.37429047 -15.67041588]
[89.04407501 -0.68537718]
[90.82653809 14.20833969]
[93.71181488 28.92823219]
[96.59708405 43.64812469]
[99.48236084 58.36801529]
[109.52328491 69.36933899]
[104.58495331 84.40008545]
[115.93238068 96.75371552]
[110.32312012 112.56233978]
[113.42723083 127.23764038]
[116.85829163 141.83996582]
[120.61459351 156.36201477]
[124.37088776 170.88407898]
[128.12719727 185.40614319]
[131.78726196 189.12782288]
[133.48408508 193.44917297]
[133.31800842 197.52195740]
[131.71150208 200.66064453]
[134.81561279 215.33595276]
[137.91970825 230.01126099]
[141.56781006 244.56088257]
[145.75482178 258.96466064]
[149.94181824 273.36843872]
[154.12882996 287.77221680]
[167.71350098 300.20358276]
[162.86830139 317.07043457]
[167.26930237 331.41027832]
[171.67030334 345.75012207]
[176.07128906 360.08996582]
[190.74548340 356.93563843]
[205.63650513 355.05444336]
[220.63410950 354.46032715]
[235.62728882 355.15771484]
[250.50500488 357.14138794]
[265.15710449 360.39669800]
[279.47512817 364.89953613]
[293.35308838 370.61654663]
[306.68817139 377.50543213]
[319.38168335 385.51516724]
[331.33966064 394.58648682]
[342.47354126 404.65216064]
[352.70092773 415.63772583]
[361.94604492 427.46179199]
[370.14047241 440.03689575]
[377.22357178 453.26986694]
[383.14285278 467.06274414]
[387.85449219 481.31341553]
[391.32363892 495.91638184]
[393.52459717 510.76348877]
[394.44107056 525.74487305]
[394.06625366 540.74957275]
[392.40292358 555.66650391]
[389.46343994 570.38525391]
[385.26953125 584.79675293]
[379.85223389 598.79443359]
[373.25167847 612.27453613]
[365.51675415 625.13739014]
[356.70468140 637.28765869]
[346.88073730 648.63537598]
[336.11764526 659.09661865]
[324.49508667 668.59387207]
[312.09912109 677.05682373]
[299.02151489 684.42279053]
[285.35910034 690.63726807]
[271.21301270 695.65429688]
[256.68804932 699.43664551]
[241.89166260 701.95635986]
[226.93347168 703.19470215]
[211.92417908 703.14263916]
[196.97492981 701.80047607]
[182.19639587 699.17816162]
[167.69801331 695.29510498]
[153.58709717 690.18005371]
[139.96815491 683.87091064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 165]
[27 164]
[28 163]
[29 162]
[32 160]
[33 159]
[34 158]
[35 157]
[41 156]
[42 155]
[43 154]
[44 150]
[45 149]
[46 148]
[47 147]
[51 146]
[52 145]
[55 143]
[57 141]
[58 140]
[59 139]
[60 138]
[71 137]
[72 136]
[74 134]
[75 133]
[76 132]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
