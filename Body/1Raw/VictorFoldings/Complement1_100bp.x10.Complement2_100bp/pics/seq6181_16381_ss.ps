%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[79.49998474 362.35046387]
[72.97207642 375.86267090]
[65.49684906 388.87475586]
[57.11238861 401.32040405]
[47.86142731 413.13616943]
[37.79109955 424.26190186]
[26.95273018 434.64086914]
[15.40154457 444.22018433]
[3.19640613 452.95104980]
[-9.60049057 460.78897095]
[-22.92393303 467.69396973]
[-36.70603180 473.63088989]
[-50.87654877 478.56948853]
[-65.36328125 482.48455811]
[-80.09239960 485.35620117]
[-94.98885345 487.16976929]
[-109.97672272 487.91598511]
[-124.97964478 487.59109497]
[-139.92117310 486.19671631]
[-154.72514343 483.73995972]
[-169.31613159 480.23336792]
[-183.61979675 475.69479370]
[-197.56321716 470.14736938]
[-211.07537842 463.61935425]
[-224.08740234 456.14401245]
[-236.53298950 447.75946045]
[-248.34870911 438.50842285]
[-259.47436523 428.43801880]
[-269.85324097 417.59954834]
[-279.43246460 406.04830933]
[-288.16323853 393.84307861]
[-296.00103760 381.04614258]
[-302.90594482 367.72262573]
[-308.84277344 353.94049072]
[-313.78125000 339.76992798]
[-317.69622803 325.28317261]
[-320.56774902 310.55404663]
[-322.38119507 295.65756226]
[-323.12728882 280.66967773]
[-322.80227661 265.66677856]
[-321.40777588 250.72526550]
[-318.95092773 235.92131042]
[-315.44421387 221.33033752]
[-310.90554810 207.02671814]
[-305.35800171 193.08332825]
[-298.82989502 179.57122803]
[-291.35446167 166.55926514]
[-282.96981812 154.11373901]
[-273.71865845 142.29809570]
[-263.64816284 131.17251587]
[-252.80964661 120.79371643]
[-241.25831604 111.21456909]
[-229.05303955 102.48390198]
[-216.25602722 94.64619446]
[-202.93247986 87.74139404]
[-189.15028381 81.80467987]
[-174.97969055 76.86630249]
[-160.49290466 72.95143890]
[-145.76373291 70.08002472]
[-130.86726379 68.26670074]
[-115.87937164 67.52070618]
[-100.87645721 67.84584045]
[-85.93495941 69.24044800]
[-71.13101959 71.69741821]
[-56.54008102 75.20423889]
[-42.23649597 79.74303436]
[-28.29314613 85.29067230]
[-14.78109169 91.81889343]
[-1.76918352 99.29441833]
[10.67627048 107.67916107]
[22.49184990 116.93039703]
[33.61734772 127.00097656]
[43.99606705 137.83958435]
[55.54236984 128.26446533]
[67.08866882 118.68934631]
[78.63497162 109.11422729]
[89.89106750 99.19957733]
[93.15954590 91.83142853]
[101.08719635 88.88470459]
[112.19442749 78.80356598]
[123.30166626 68.72242737]
[134.40890503 58.64128876]
[145.44078064 48.47774124]
[156.39668274 38.23234940]
[167.35260010 27.98695755]
[178.30850220 17.74156570]
[189.26441956 7.49617434]
[200.14375305 -2.83049417]
[210.94590759 -13.23786736]
[221.74806213 -23.64524078]
[232.55021667 -34.05261230]
[222.97448730 -45.60758972]
[214.28903198 -57.84585571]
[206.54243469 -70.69896698]
[199.77801514 -84.09504700]
[194.03361511 -97.95917511]
[189.34135437 -112.21382141]
[185.72746277 -126.77925873]
[183.21215820 -141.57403564]
[181.80952454 -156.51541138]
[181.52737427 -171.51983643]
[182.36730957 -186.50338745]
[184.32461548 -201.38226318]
[187.38835144 -216.07327271]
[191.54139709 -230.49424744]
[196.76051331 -244.56452942]
[203.01652527 -258.20544434]
[210.27441406 -271.34069824]
[218.49363708 -283.89685059]
[227.62818909 -295.80368042]
[237.62699890 -306.99453735]
[248.43415833 -317.40692139]
[259.98922729 -326.98257446]
[272.22756958 -335.66790771]
[285.08074951 -343.41439819]
[298.47689819 -350.17868042]
[312.34106445 -355.92297363]
[326.59573364 -360.61511230]
[341.16122437 -364.22885132]
[355.95602417 -366.74401855]
[370.89739990 -368.14654541]
[385.90182495 -368.42855835]
[400.88537598 -367.58850098]
[415.76425171 -365.63104248]
[430.45523071 -362.56716919]
[444.87615967 -358.41400146]
[458.94641113 -353.19476318]
[472.58724976 -346.93865967]
[485.72247314 -339.68063354]
[498.27853394 -331.46130371]
[510.18527222 -322.32666016]
[521.37603760 -312.32772827]
[531.78833008 -301.52047729]
[541.36389160 -289.96533203]
[550.04913330 -277.72692871]
[557.79547119 -264.87365723]
[564.55963135 -251.47747803]
[570.30383301 -237.61323547]
[574.99584961 -223.35852051]
[578.60943604 -208.79301453]
[581.12451172 -193.99818420]
[582.52685547 -179.05677795]
[582.80877686 -164.05236816]
[581.96856689 -149.06883240]
[580.01098633 -134.18997192]
[576.94696045 -119.49902344]
[572.79370117 -105.07812500]
[567.57434082 -91.00792694]
[561.31805420 -77.36711884]
[554.05993652 -64.23198700]
[545.84051514 -51.67599106]
[536.70574951 -39.76934433]
[526.70672607 -28.57863426]
[515.89941406 -18.16645050]
[504.34417725 -8.59101772]
[492.10568237 0.09411022]
[479.25234985 7.84036398]
[465.85607910 14.60442257]
[451.99182129 20.34845734]
[437.73703003 25.04034615]
[423.17150879 28.65384865]
[408.37667847 31.16875839]
[393.43524170 32.57101059]
[378.43081665 32.85276031]
[363.44729614 32.01243210]
[348.56845093 30.05472946]
[333.87753296 26.99059677]
[319.45666504 22.83717155]
[305.38653564 17.61768341]
[291.74575806 11.36131954]
[278.61071777 4.10307026]
[266.05477905 -4.11647415]
[254.14820862 -13.25134563]
[242.95759583 -23.25045776]
[232.15544128 -12.84308434]
[221.35327148 -2.43571091]
[210.55111694 7.97166204]
[207.91525269 14.87629795]
[199.50981140 18.45208359]
[188.55389404 28.69747543]
[177.59799194 38.94286728]
[166.64207458 49.18825912]
[155.68617249 59.43365097]
[152.94779968 66.29827881]
[144.49003601 69.74851990]
[133.38279724 79.82965851]
[122.27557373 89.91079712]
[111.16833496 99.99193573]
[100.13645935 110.15548706]
[99.02149963 114.35201263]
[96.84776306 117.64433289]
[94.02951050 119.81063843]
[91.01049805 120.78643036]
[88.21009064 120.66053009]
[76.66378784 130.23564148]
[65.11748505 139.81076050]
[53.57118607 149.38589478]
[62.30213547 161.59095764]
[70.14013672 174.38780212]
[77.04524231 187.71118164]
[82.98227692 201.49324036]
[87.92097473 215.66371155]
[91.83617401 230.15042114]
[94.70792389 244.87951660]
[96.52159119 259.77593994]
[97.26793671 274.76382446]
[96.94314575 289.76675415]
[95.54888153 304.70828247]
[93.09224701 319.51226807]
[89.58576965 334.10330200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 197]
[74 196]
[75 195]
[76 194]
[77 189]
[79 188]
[80 187]
[81 186]
[82 185]
[83 183]
[84 182]
[85 181]
[86 180]
[87 179]
[88 177]
[89 176]
[90 175]
[91 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
