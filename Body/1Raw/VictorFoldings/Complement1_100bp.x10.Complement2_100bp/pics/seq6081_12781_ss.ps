%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[53.66639328 359.98522949]
[57.94992065 374.39520264]
[59.86631393 389.30572510]
[59.36594391 404.33056641]
[56.46176147 419.08056641]
[51.22899628 433.17361450]
[43.80318832 446.24472046]
[34.37668228 457.95526123]
[23.19365311 468.00195312]
[10.54376316 476.12454224]
[-3.24532413 482.11264038]
[-17.81643677 485.81112671]
[-32.79214859 487.12420654]
[-47.78455353 486.01788330]
[-62.40531158 482.52081299]
[-76.27571106 476.72354126]
[-89.03647614 468.77627563]
[-100.35706329 458.88485718]
[-109.94425201 447.30548096]
[-117.54971313 434.33807373]
[-122.97644043 420.31857300]
[-126.08386230 405.61007690]
[-126.79150391 390.59356689]
[-125.08103180 375.65802002]
[-120.99674225 361.19030762]
[-114.64443207 347.56515503]
[-106.18865204 335.13552856]
[-95.84841156 324.22335815]
[-83.89155579 315.11129761]
[-70.62779236 308.03533936]
[-56.40069199 303.17883301]
[-41.57876587 300.66754150]
[-26.54593658 300.56649780]
[-11.69159126 302.87832642]
[2.59950590 307.54318237]
[9.47891808 294.21374512]
[16.35833168 280.88430786]
[15.31982136 266.02597046]
[28.52454567 257.31127930]
[35.40395737 243.98184204]
[34.68107986 241.27340698]
[34.98749161 238.11544800]
[36.49978638 234.89855957]
[39.25002670 232.07000732]
[43.11029053 230.08195496]
[50.77088928 217.18563843]
[58.43148422 204.28930664]
[66.09208679 191.39297485]
[73.55982208 178.38401794]
[80.83305359 165.26533508]
[85.55318451 151.02734375]
[87.55720520 136.16181946]
[89.56121826 121.29628754]
[91.56523132 106.43075562]
[92.90346527 91.49057007]
[93.57324982 76.50553131]
[94.24303436 61.52049637]
[94.91281891 46.53545761]
[95.58260345 31.55041695]
[96.25238800 16.56537819]
[89.13901520 2.43348217]
[97.43690491 -9.93560696]
[98.10668945 -24.92064476]
[98.77647400 -39.90568542]
[96.03337097 -48.61850357]
[99.56942749 -55.10835266]
[100.46224213 -70.08175659]
[92.27660370 -57.51213837]
[80.14577484 -48.68927002]
[65.66578674 -44.77394485]
[50.74171066 -46.28129959]
[37.33708191 -53.01300812]
[27.21550560 -64.08340454]
[21.70864868 -78.03598785]
[21.54103088 -93.03504944]
[26.73470688 -107.10720825]
[36.60636139 -118.40103149]
[49.85720444 -125.43062592]
[64.74385834 -127.27111816]
[79.30773926 -123.68036652]
[91.63270569 -115.13079071]
[100.09719849 -102.74724579]
[103.58769989 -88.15660858]
[107.77471161 -102.56038666]
[111.96172333 -116.96417236]
[111.35212708 -126.07823944]
[116.31977844 -131.55036926]
[120.72077942 -145.89021301]
[106.94883728 -151.87467957]
[93.93356323 -159.36351013]
[81.83862305 -168.26251221]
[70.81612396 -178.45979309]
[61.00469208 -189.82711792]
[52.52771759 -202.22149658]
[45.49180222 -215.48709106]
[39.98543167 -229.45706177]
[36.07785416 -243.95570374]
[33.81821442 -258.80072021]
[33.23492813 -273.80535889]
[34.33532715 -288.78097534]
[37.10557556 -303.53921509]
[41.51083755 -317.89450073]
[47.49570847 -331.66625977]
[54.98492432 -344.68130493]
[63.88429642 -356.77597046]
[74.08190918 -367.79818726]
[85.44951630 -377.60925293]
[97.84416199 -386.08587646]
[111.10996246 -393.12139893]
[125.08009338 -398.62734985]
[139.57885742 -402.53448486]
[154.42393494 -404.79367065]
[169.42860413 -405.37652588]
[184.40419006 -404.27566528]
[199.16235352 -401.50497437]
[213.51748657 -397.09930420]
[227.28906250 -391.11401367]
[240.30389404 -383.62438965]
[252.39830017 -374.72467041]
[263.42019653 -364.52673340]
[273.23092651 -353.15881348]
[281.70718384 -340.76391602]
[288.74230957 -327.49792480]
[294.24783325 -313.52761841]
[298.15454102 -299.02874756]
[300.41329956 -284.18359375]
[300.99569702 -269.17892456]
[299.89437866 -254.20335388]
[297.12326050 -239.44528198]
[292.71713257 -225.09027100]
[286.73144531 -211.31887817]
[279.24145508 -198.30427551]
[270.34133911 -186.21012878]
[260.14306641 -175.18855286]
[248.77488708 -165.37812805]
[236.37973022 -156.90226746]
[223.11351013 -149.86753845]
[209.14305115 -144.36242676]
[194.64405823 -140.45614624]
[179.79884338 -138.19784546]
[164.79414368 -137.61590576]
[149.81861877 -138.71765137]
[135.06062317 -141.48922729]
[130.65962219 -127.14937592]
[126.36550140 -112.77716064]
[122.17848969 -98.37337494]
[117.99147797 -83.96959686]
[115.43564606 -69.18894196]
[114.54283142 -54.21553802]
[113.76151276 -39.23590088]
[113.09172821 -24.25086021]
[112.42194366 -9.26582146]
[119.58322144 3.79424453]
[111.23742676 17.23516464]
[110.56764221 32.22020340]
[109.89785767 47.20524216]
[109.22807312 62.19028091]
[108.55828857 77.17531586]
[107.88850403 92.16035461]
[119.66014862 82.86367798]
[134.57316589 84.47672272]
[144.08470154 96.07546234]
[142.74610901 111.01561737]
[131.32420349 120.73878479]
[116.36196136 119.67509460]
[106.43075562 108.43476868]
[104.42674255 123.30030060]
[102.42272949 138.16583252]
[100.41871643 153.03135681]
[108.79447174 140.58761597]
[119.78186035 130.37599182]
[132.80451965 122.93218231]
[147.17930603 118.64665985]
[162.15213013 117.74423981]
[176.93756104 120.27227020]
[190.75999451 126.09812164]
[202.89431763 134.91618347]
[212.70397949 146.26388550]
[219.67440796 159.54594421]
[223.43994141 174.06561279]
[223.80303955 189.06121826]
[220.74465942 203.74612427]
[214.42523193 217.34997559]
[205.17626953 229.15916443]
[193.48295593 238.55418396]
[179.95869446 245.04219055]
[165.31294250 248.28285217]
[150.31398010 248.10615540]
[135.74862671 244.52137756]
[122.38095856 237.71656799]
[110.91221619 228.04869080]
[101.94401550 216.02491760]
[95.94681549 202.27595520]
[93.23522186 187.52308655]
[93.95174408 172.53855896]
[86.67852020 185.65725708]
[86.41141510 192.26332092]
[83.31329346 197.02763367]
[78.98841095 199.05357361]
[71.32781219 211.94990540]
[63.66721344 224.84622192]
[56.00661850 237.74255371]
[48.73338699 250.86125183]
[41.85397720 264.19067383]
[42.40042496 280.00244141]
[29.68775940 287.76373291]
[22.80834770 301.09313965]
[15.92893505 314.42257690]
[28.01038170 323.36880493]
[38.50020218 334.13726807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 208]
[36 207]
[37 206]
[39 204]
[40 203]
[45 202]
[46 201]
[47 200]
[48 199]
[49 196]
[50 195]
[51 169]
[52 168]
[53 167]
[54 166]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[62 152]
[63 151]
[64 150]
[66 149]
[67 148]
[83 147]
[84 146]
[85 145]
[87 144]
[88 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
