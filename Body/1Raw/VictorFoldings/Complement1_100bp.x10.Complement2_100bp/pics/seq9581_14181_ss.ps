%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[118.31670380 377.13433838]
[110.73473358 390.09490967]
[101.77297974 402.14276123]
[91.54024506 413.13156128]
[80.16072845 422.92797852]
[67.77257538 431.41308594]
[54.52616501 438.48385620]
[40.58229828 444.05447388]
[26.11024094 448.05731201]
[11.28566933 450.44378662]
[-3.71146131 451.18490601]
[-18.69909859 450.27169800]
[-33.49530411 447.71527100]
[-47.92046738 443.54656982]
[-61.79948044 437.81628418]
[-74.96386719 430.59396362]
[-87.25381470 421.96725464]
[-98.52014923 412.04086304]
[-108.62609100 400.93533325]
[-117.44897461 388.78543091]
[-124.88169861 375.73867798]
[-130.83403015 361.95343018]
[-135.23371887 347.59704590]
[-138.02735901 332.84378052]
[-139.18101501 317.87271118]
[-138.68070984 302.86563110]
[-136.53251648 288.00466919]
[-132.76249695 273.47021484]
[-127.41642761 259.43872070]
[-120.55919647 246.08052063]
[-112.27404022 233.55776978]
[-102.66154480 222.02246094]
[-91.83839417 211.61465454]
[-79.93596649 202.46066284]
[-67.09875488 194.67163086]
[-53.48258209 188.34210205]
[-39.25273895 183.54888916]
[-24.58196259 180.35021973]
[-9.64834595 178.78488159]
[5.36683369 178.87190247]
[20.28130531 180.61021423]
[34.91402054 183.97872925]
[49.08734894 188.93653870]
[55.56684494 175.40818787]
[62.04634094 161.87985229]
[68.52584076 148.35150146]
[75.00533295 134.82315063]
[81.48483276 121.29480743]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[104.98682404 72.22569275]
[111.46632385 58.69734955]
[98.24925995 51.59876633]
[85.37413788 43.89734268]
[72.86843872 35.60951996]
[60.75883484 26.75298500]
[49.07118607 17.34663582]
[37.83042145 7.41054583]
[27.06053925 -3.03407979]
[16.78451538 -13.96495152]
[7.02428389 -25.35874367]
[-2.19932842 -37.19113922]
[-10.86663723 -49.43688965]
[-18.95914650 -62.06985855]
[-26.45958519 -75.06308746]
[-33.35194778 -88.38885498]
[-39.62152481 -102.01870728]
[-45.25493622 -115.92357635]
[-50.24016190 -130.07377625]
[-54.56656265 -144.43910217]
[-58.22490692 -158.98892212]
[-61.20738220 -173.69216919]
[-63.50762939 -188.51747131]
[-65.12074280 -203.43318176]
[-66.04326630 -218.40748596]
[-66.27324677 -233.40840149]
[-65.81018066 -248.40394592]
[-64.65505981 -263.36209106]
[-62.81035995 -278.25094604]
[-60.28000259 -293.03869629]
[-57.06939697 -307.69381714]
[-53.18539429 -322.18502808]
[-48.63627625 -336.48141479]
[-43.43175888 -350.55242920]
[-37.58294296 -364.36807251]
[-31.10231590 -377.89883423]
[-24.00370407 -391.11590576]
[-16.30225563 -403.99099731]
[-8.01440716 -416.49667358]
[0.84215379 -428.60626221]
[10.24852753 -440.29388428]
[20.18464088 -451.53463745]
[30.62928963 -462.30450439]
[41.56018066 -472.58050537]
[52.95399475 -482.34069824]
[64.78640747 -491.56430054]
[77.03217316 -500.23156738]
[89.66516113 -508.32406616]
[102.65840912 -515.82446289]
[115.98418427 -522.71679688]
[129.61405945 -528.98632812]
[143.51893616 -534.61975098]
[157.66914368 -539.60491943]
[172.03448486 -543.93133545]
[186.58430481 -547.58959961]
[201.28756714 -550.57208252]
[216.11286926 -552.87231445]
[231.02857971 -554.48535156]
[246.00288391 -555.40783691]
[261.00381470 -555.63781738]
[275.99932861 -555.17468262]
[290.95748901 -554.01959229]
[305.84634399 -552.17480469]
[320.63409424 -549.64447021]
[335.28921509 -546.43383789]
[349.78039551 -542.54974365]
[364.07678223 -538.00061035]
[378.14776611 -532.79608154]
[391.96340942 -526.94726562]
[405.49417114 -520.46655273]
[418.71121216 -513.36791992]
[431.58630371 -505.66647339]
[444.09197998 -497.37860107]
[456.20153809 -488.52200317]
[467.88912964 -479.11560059]
[479.12985229 -469.17947388]
[489.89968872 -458.73480225]
[500.17568970 -447.80389404]
[509.93585205 -436.41006470]
[519.15942383 -424.57760620]
[527.82666016 -412.33184814]
[535.91912842 -399.69882202]
[543.41955566 -386.70556641]
[550.31182861 -373.37979126]
[556.58135986 -359.74990845]
[562.21472168 -345.84500122]
[567.19989014 -331.69479370]
[571.52624512 -317.32943726]
[575.18450928 -302.77960205]
[578.16693115 -288.07635498]
[580.46710205 -273.25103760]
[582.08013916 -258.33532715]
[583.00262451 -243.36100769]
[583.23254395 -228.36009216]
[582.76940918 -213.36454773]
[581.61425781 -198.40640259]
[579.76947021 -183.51756287]
[577.23907471 -168.72981262]
[574.02838135 -154.07470703]
[570.14428711 -139.58351135]
[565.59515381 -125.28716278]
[560.39056396 -111.21616364]
[554.54168701 -97.40055084]
[548.06103516 -83.86978912]
[540.96234131 -70.65277863]
[533.26086426 -57.77770233]
[524.97296143 -45.27205276]
[516.11633301 -33.16250610]
[506.70989990 -21.47491455]
[496.77374268 -10.23421383]
[486.32904053 0.53560591]
[475.39810181 10.81156063]
[464.00427246 20.57172203]
[452.17181396 29.79526138]
[439.92599487 38.46249390]
[427.29299927 46.55492401]
[414.29971313 54.05528259]
[400.97390747 60.94756317]
[387.34399414 67.21705627]
[373.43911743 72.85037994]
[359.28887939 77.83551788]
[344.92352295 82.16182709]
[330.37368774 85.82008362]
[315.67041016 88.80246735]
[300.84509277 91.10262299]
[285.92938232 92.71563721]
[270.95507812 93.63807678]
[255.95414734 93.86795807]
[240.95861816 93.40480042]
[226.00047302 92.24959564]
[211.11163330 90.40479279]
[196.32388306 87.87435150]
[181.66877747 84.66365051]
[167.17759705 80.77955627]
[152.88125610 76.23035431]
[138.81027222 71.02574921]
[124.99466705 65.17684937]
[118.51516724 78.70519257]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[95.01317596 127.77430725]
[88.53367615 141.30264282]
[82.05418396 154.83099365]
[75.57468414 168.35934448]
[69.09519196 181.88768005]
[62.61569595 195.41603088]
[75.36267090 203.35188293]
[87.15924835 212.64187622]
[97.86223602 223.17321777]
[107.34170532 234.81808472]
[115.48258972 247.43510437]
[122.18605042 260.87112427]
[127.37073517 274.96304321]
[130.97369385 289.53982544]
[132.95118713 304.42446899]
[133.27922058 319.43630981]
[131.95379639 334.39312744]
[128.99102783 349.11337280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 198]
[44 197]
[45 196]
[46 195]
[47 194]
[48 193]
[49 192]
[51 190]
[52 189]
[53 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
