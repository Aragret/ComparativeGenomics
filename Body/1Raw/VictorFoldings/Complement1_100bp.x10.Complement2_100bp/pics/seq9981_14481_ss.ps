%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[108.35017395 654.11456299]
[94.27223206 648.92486572]
[80.51043701 642.94708252]
[67.10887909 636.20025635]
[54.11048508 628.70605469]
[41.55690002 620.48846436]
[29.48833275 611.57385254]
[17.94344139 601.99066162]
[6.95921087 591.76971436]
[-3.42917514 580.94372559]
[-13.18843842 569.54730225]
[-22.28731728 557.61706543]
[-30.69666481 545.19110107]
[-38.38954163 532.30926514]
[-45.34130859 519.01287842]
[-51.52969742 505.34448242]
[-56.93487930 491.34786987]
[-61.53954315 477.06790161]
[-65.32894135 462.55026245]
[-68.29092407 447.84149170]
[-70.41602325 432.98870850]
[-71.69741058 418.03948975]
[-72.13099670 403.04171753]
[-71.71537781 388.04342651]
[-70.45190430 373.09268188]
[-68.34460449 358.23736572]
[-65.40024567 343.52505493]
[-61.62824631 329.00289917]
[-57.04069519 314.71737671]
[-51.65228653 300.71429443]
[-45.48028183 287.03851318]
[-38.54444885 273.73379517]
[-30.86701202 260.84277344]
[-22.47255898 248.40676880]
[-13.38798046 236.46559143]
[-3.64237905 225.05751038]
[6.73302794 214.21905518]
[17.70500565 203.98493958]
[29.23840523 194.38796997]
[41.29628372 185.45887756]
[53.84001541 177.22625732]
[66.82941437 169.71647644]
[80.22287750 162.95361328]
[93.97750092 156.95932007]
[108.04922485 151.75280762]
[103.64822388 137.41294861]
[99.24723053 123.07310486]
[94.84622955 108.73326111]
[89.65863037 102.56387329]
[90.48816681 94.14706421]
[86.30116272 79.74327850]
[82.11415100 65.33950043]
[77.92713928 50.93571472]
[73.74012756 36.53193283]
[69.55311584 22.12815094]
[65.36610413 7.72436857]
[50.67378235 10.78443813]
[35.78850937 12.69675541]
[20.79980659 13.44981956]
[5.79781914 13.03910065]
[-9.12722778 11.46706963]
[-23.88557243 8.74317932]
[-38.38845444 4.88381433]
[-52.54865265 -0.08781620]
[-66.28100586 -6.14181137]
[-79.50292206 -13.24176121]
[-92.13488007 -21.34496498]
[-104.10091400 -30.40269089]
[-115.32904816 -40.36045837]
[-125.75177002 -51.15838623]
[-135.30638123 -62.73152924]
[-143.93544006 -75.01028442]
[-151.58702087 -87.92080688]
[-158.21511841 -101.38545227]
[-163.77986145 -115.32323456]
[-168.24780273 -129.65034485]
[-171.59207153 -144.28059387]
[-173.79252625 -159.12600708]
[-174.83595276 -174.09729004]
[-174.71606445 -189.10443115]
[-173.43360901 -204.05714417]
[-170.99627686 -218.86550903]
[-167.41871643 -233.44046021]
[-162.72247314 -247.69435120]
[-156.93576050 -261.54147339]
[-150.09341431 -274.89849854]
[-142.23655701 -287.68515015]
[-133.41246033 -299.82449341]
[-123.67417908 -311.24349976]
[-113.08028412 -321.87356567]
[-101.69450378 -331.65069580]
[-89.58529663 -340.51608276]
[-76.82550049 -348.41647339]
[-63.49184799 -355.30429077]
[-49.66453552 -361.13812256]
[-35.42672348 -365.88290405]
[-20.86403465 -369.51010132]
[-6.06405878 -371.99786377]
[8.88419724 -373.33126831]
[23.89083099 -373.50228882]
[38.86559296 -372.50985718]
[53.71841431 -370.35998535]
[68.35997772 -367.06561279]
[82.70221710 -362.64648438]
[96.65887451 -357.12927246]
[110.14602661 -350.54705811]
[123.08254242 -342.93951416]
[135.39062500 -334.35235596]
[146.99624634 -324.83721924]
[157.82962036 -314.45135498]
[167.82559204 -303.25720215]
[176.92402649 -291.32208252]
[185.07022095 -278.71780396]
[192.21517944 -265.52017212]
[198.31591797 -251.80851746]
[203.33576965 -237.66534424]
[207.24452209 -223.17568970]
[210.01867676 -208.42671204]
[211.64154053 -193.50711060]
[212.10336304 -178.50660706]
[211.40136719 -163.51542664]
[209.53977966 -148.62371826]
[206.52978516 -133.92106628]
[202.38948059 -119.49587250]
[197.14378357 -105.43489838]
[190.82423401 -91.82270813]
[183.46884155 -78.74117279]
[175.12184143 -66.26897430]
[165.83343506 -54.48110580]
[155.65948486 -43.44847107]
[144.66117859 -33.23742294]
[132.90466309 -23.90937233]
[120.46063232 -15.52041817]
[107.40393829 -8.12101364]
[93.81311035 -1.75566137]
[79.76988220 3.53735733]
[83.95689392 17.94113922]
[88.14390564 32.34492111]
[92.33091736 46.74870300]
[96.51792908 61.15248489]
[100.70494080 75.55626678]
[104.89195251 89.96005249]
[109.18607330 104.33226013]
[113.58707428 118.67211151]
[117.98807526 133.01196289]
[122.38906860 147.35180664]
[136.95883179 143.76805115]
[151.70800781 141.01434326]
[166.58935547 139.09947205]
[181.55520630 138.02958679]
[196.55760193 137.80810547]
[211.54850769 138.43574524]
[226.47990417 139.91049194]
[241.30393982 142.22761536]
[255.97314453 145.37971497]
[270.44052124 149.35667419]
[284.65972900 154.14575195]
[298.58523560 159.73161316]
[312.17239380 166.09637451]
[325.37771606 173.21963501]
[338.15887451 181.07856750]
[350.47494507 189.64802551]
[362.28646851 198.90054321]
[373.55563354 208.80647278]
[384.24630737 219.33409119]
[394.32424927 230.44967651]
[403.75717163 242.11761475]
[412.51489258 254.30053711]
[420.56933594 266.95941162]
[427.89468384 280.05371094]
[434.46749878 293.54144287]
[440.26669312 307.37945557]
[445.27374268 321.52340698]
[449.47256470 335.92794800]
[452.84973145 350.54696655]
[455.39437866 365.33364868]
[457.09841919 380.24060059]
[457.95639038 395.22009277]
[457.96548462 410.22415161]
[457.12570190 425.20465088]
[455.43975830 440.11367798]
[452.91302490 454.90344238]
[449.55361938 469.52655029]
[445.37228394 483.93618774]
[440.38241577 498.08618164]
[434.60000610 511.93121338]
[428.04354858 525.42694092]
[420.73410034 538.53009033]
[412.69500732 551.19873047]
[403.95208740 563.39227295]
[394.53332520 575.07165527]
[384.46887207 586.19946289]
[373.79098511 596.74005127]
[362.53387451 606.65966797]
[350.73358154 615.92645264]
[338.42788696 624.51086426]
[325.65628052 632.38531494]
[312.45962524 639.52459717]
[298.88018799 645.90582275]
[284.96148682 651.50860596]
[270.74807739 656.31494141]
[256.28555298 660.30944824]
[241.62017822 663.47930908]
[226.79896545 665.81445312]
[211.86938477 667.30731201]
[196.87924194 667.95312500]
[181.87658691 667.74987793]
[166.90945435 666.69812012]
[152.02578735 664.80133057]
[137.27328491 662.06549072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 146]
[46 145]
[47 144]
[48 143]
[50 142]
[51 141]
[52 140]
[53 139]
[54 138]
[55 137]
[56 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
