%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[73.80727386 184.55938721]
[74.56262970 199.54743958]
[74.19581604 214.55001831]
[72.70886993 229.48324585]
[70.11011505 244.26359558]
[66.41408539 258.80841064]
[61.64144897 273.03634644]
[55.81889725 286.86782837]
[48.97899246 300.22552490]
[41.15998459 313.03469849]
[32.40560532 325.22375488]
[22.76481247 336.72451782]
[12.29151821 347.47265625]
[1.04429638 357.40805054]
[-10.91395283 366.47515869]
[-23.51635361 374.62326050]
[-36.69242859 381.80682373]
[-50.36848831 387.98562622]
[-64.46805573 393.12512207]
[-78.91226959 397.19659424]
[-93.62036133 400.17724609]
[-108.51006317 402.05041504]
[-123.49812317 402.80563354]
[-138.50070190 402.43869019]
[-153.43391418 400.95162964]
[-168.21424866 398.35275269]
[-182.75903320 394.65658569]
[-196.98692322 389.88381958]
[-210.81835938 384.06115723]
[-224.17599487 377.22113037]
[-236.98510742 369.40200806]
[-249.17408752 360.64752197]
[-260.67474365 351.00662231]
[-271.42279053 340.53323364]
[-281.35809326 329.28591919]
[-290.42510986 317.32760620]
[-298.57308960 304.72512817]
[-305.75653076 291.54898071]
[-311.93521118 277.87286377]
[-317.07458496 263.77325439]
[-321.14593506 249.32901001]
[-324.12646484 234.62089539]
[-325.99951172 219.73117065]
[-326.75460815 204.74310303]
[-326.38751221 189.74052429]
[-324.90029907 174.80731201]
[-322.30130005 160.02702332]
[-318.60501099 145.48226929]
[-313.83212280 131.25442505]
[-308.00930786 117.42303467]
[-301.16918945 104.06546021]
[-293.34994507 91.25640869]
[-284.59533691 79.06750488]
[-274.95434570 67.56692505]
[-264.48086548 56.81898117]
[-253.23347473 46.88377762]
[-241.27507019 37.81687546]
[-228.67251587 29.66898918]
[-215.49632263 22.48567772]
[-201.82014465 16.30711937]
[-187.72048950 11.16786289]
[-173.27621460 7.09665251]
[-158.56806946 4.11625481]
[-143.67832947 2.24333787]
[-128.69024658 1.48837626]
[-113.68767548 1.85559177]
[-98.75448608 3.34293079]
[-83.97421265 5.94207573]
[-69.42949677 9.63849068]
[-55.20168686 14.41150284]
[-41.37034988 20.23442078]
[-28.01284027 27.07467842]
[-15.20385647 34.89402390]
[-3.01503348 43.64872742]
[8.48546314 53.28982544]
[19.23331833 63.76340485]
[29.16842270 75.01088715]
[38.23521805 86.96937561]
[46.38299179 99.57199097]
[53.56618881 112.74826050]
[67.23585510 106.57248688]
[80.90552521 100.39672089]
[86.12223816 86.87887573]
[99.32669830 80.91327667]
[112.91870117 85.93360901]
[126.58837128 79.75784302]
[140.25804138 73.58206940]
[153.92771912 67.40630341]
[167.59738159 61.23053360]
[181.26705933 55.05476761]
[194.84326172 48.67616272]
[208.32299805 42.09613419]
[221.80273438 35.51610565]
[216.07145691 21.64891434]
[211.21339417 7.45223331]
[207.24732971 -7.01900959]
[204.18861389 -21.70882797]
[202.04908752 -36.56039047]
[200.83700562 -51.51623917]
[200.55708313 -66.51850891]
[201.21038818 -81.50916290]
[202.79438782 -96.43020630]
[205.30296326 -111.22390747]
[208.72640991 -125.83303070]
[213.05148315 -140.20106506]
[218.26145935 -154.27239990]
[224.33615112 -167.99263000]
[231.25209045 -181.30865479]
[238.98249817 -194.16894531]
[247.49746704 -206.52377319]
[256.76406860 -218.32531738]
[266.74645996 -229.52793884]
[277.40597534 -240.08828735]
[288.70144653 -249.96549988]
[300.58911133 -259.12136841]
[313.02297974 -267.52047729]
[325.95498657 -275.13031006]
[339.33508301 -281.92147827]
[353.11151123 -287.86764526]
[367.23092651 -292.94583130]
[381.63876343 -297.13638306]
[396.27926636 -300.42309570]
[411.09576416 -302.79327393]
[426.03097534 -304.23773193]
[441.02706909 -304.75085449]
[456.02606201 -304.33068848]
[470.96994019 -302.97885132]
[485.80084229 -300.70056152]
[500.46142578 -297.50466919]
[514.89495850 -293.40347290]
[529.04559326 -288.41290283]
[542.85858154 -282.55224609]
[556.28051758 -275.84417725]
[569.25946045 -268.31463623]
[581.74517822 -259.99276733]
[593.68939209 -250.91076660]
[605.04583740 -241.10375977]
[615.77062988 -230.60969543]
[625.82226562 -219.46916199]
[635.16180420 -207.72528076]
[643.75323486 -195.42347717]
[651.56317139 -182.61134338]
[658.56152344 -169.33845520]
[664.72119141 -155.65614319]
[670.01824951 -141.61737061]
[674.43231201 -127.27642059]
[677.94622803 -112.68879700]
[680.54650879 -97.91093445]
[682.22296143 -83.00000000]
[682.96917725 -68.01367950]
[682.78222656 -53.00996399]
[681.66290283 -38.04689026]
[679.61547852 -23.18235016]
[676.64782715 -8.47385311]
[672.77154541 6.02169609]
[668.00158691 20.24821663]
[662.35638428 34.15066910]
[655.85778809 47.67527008]
[648.53094482 60.76968765]
[640.40417480 73.38327026]
[631.50897217 85.46720886]
[621.87969971 96.97476196]
[611.55364990 107.86140442]
[600.57073975 118.08501434]
[588.97351074 127.60604858]
[576.80676270 136.38766479]
[564.11755371 144.39588928]
[550.95507812 151.59973145]
[537.37017822 157.97132874]
[523.41546631 163.48603821]
[509.14486694 168.12251282]
[494.61364746 171.86282349]
[479.87799072 174.69248962]
[464.99493408 176.60057068]
[450.02203369 177.57968140]
[435.01721191 177.62602234]
[420.03854370 176.73944092]
[405.14398193 174.92335510]
[390.39111328 172.18478394]
[375.83706665 168.53433228]
[361.53808594 163.98611450]
[347.54956055 158.55773926]
[333.92556763 152.27018738]
[320.71881104 145.14779663]
[307.98040771 137.21812439]
[295.75964355 128.51185608]
[284.10375977 119.06266022]
[273.05792236 108.90709686]
[262.66479492 98.08446503]
[252.96459961 86.63662720]
[243.99490356 74.60787201]
[235.79037476 62.04474258]
[228.38275146 48.99584198]
[214.90303040 55.57586670]
[201.42329407 62.15589523]
[199.05036926 66.30056763]
[194.04859924 68.99859619]
[187.44282532 68.72443390]
[173.77314758 74.90020752]
[160.10348511 81.07597351]
[146.43380737 87.25173950]
[132.76414490 93.42751312]
[119.09447479 99.60327911]
[113.87776184 113.12112427]
[100.67330170 119.08672333]
[87.08129883 114.06639099]
[73.41162872 120.24215698]
[59.74195480 126.41793060]
[64.88158417 140.51744080]
[68.95317841 154.96162415]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 208]
[81 207]
[82 206]
[85 203]
[86 202]
[87 201]
[88 200]
[89 199]
[90 198]
[91 195]
[92 194]
[93 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
