%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[145.77656555 346.73284912]
[142.02026367 332.21078491]
[138.26396179 317.68872070]
[134.50765991 303.16665649]
[130.53556824 288.70214844]
[126.34855652 274.29837036]
[122.16154480 259.89459229]
[117.97453308 245.49079895]
[113.78752899 231.08702087]
[105.63282013 243.67672729]
[90.99375153 246.94746399]
[78.25624847 239.02558899]
[74.71692657 224.44912720]
[82.40326691 211.56813049]
[96.91219330 207.76141357]
[109.93173981 215.20889282]
[107.04647064 200.48901367]
[104.16120148 185.76911926]
[101.27592468 171.04922485]
[90.86876678 181.85159302]
[75.92088318 180.60224915]
[67.45130157 168.22218323]
[71.70348358 153.83749390]
[85.54287720 148.05206299]
[98.76660919 155.12934875]
[96.98414612 140.23564148]
[95.20168304 125.34191895]
[93.41921234 110.44819641]
[88.14080048 124.48879242]
[79.00590515 136.38642883]
[66.80477905 145.11183167]
[52.59295654 149.91017151]
[37.59989548 150.36634827]
[23.12264442 146.44088745]
[10.41363335 138.47338867]
[0.57231611 127.15312195]
[-5.54993343 113.45939636]
[-7.42348003 98.57686615]
[-4.88624239 83.79300690]
[1.84228218 70.38677979]
[12.18000984 59.51795197]
[25.23262215 52.12678909]
[39.87094116 48.85269928]
[54.82860184 49.97892380]
[68.81161499 55.40803528]
[80.61032104 64.67035675]
[89.20400238 76.96460724]
[93.84864044 91.22374725]
[96.29436493 76.42447662]
[98.74008942 61.62520599]
[101.18582153 46.82593536]
[103.63154602 32.02666473]
[106.07727814 17.22739220]
[93.28430176 25.05936241]
[78.66862488 21.68561935]
[70.60278320 9.03879738]
[73.70724487 -5.63643074]
[86.20363617 -13.93342686]
[100.93345642 -11.09929562]
[109.45859528 1.24151683]
[113.21489716 -13.28054237]
[116.97119904 -27.80260086]
[120.72750092 -42.32466125]
[124.48380280 -56.84672165]
[128.02346802 -71.42309570]
[131.34573364 -86.05055237]
[134.66798401 -100.67801666]
[137.99024963 -115.30547333]
[141.31251526 -129.93293762]
[144.63476562 -144.56039429]
[140.14614868 -159.73152161]
[150.51017761 -170.42900085]
[136.16886902 -174.84988403]
[122.20297241 -180.34272766]
[108.69249725 -186.87606812]
[95.71482849 -194.41247559]
[83.34429932 -202.90879822]
[71.65177155 -212.31634521]
[60.70421600 -222.58126831]
[50.56434250 -233.64472961]
[41.29022598 -245.44337463]
[32.93499756 -257.90963745]
[25.54650688 -270.97207642]
[19.16708183 -284.55590820]
[13.83326149 -298.58331299]
[9.57559586 -312.97390747]
[6.41847515 -327.64532471]
[4.37998199 -342.51345825]
[3.47179365 -357.49319458]
[3.69911146 -372.49871826]
[5.06063414 -387.44409180]
[7.54856205 -402.24365234]
[11.14864445 -416.81271362]
[15.84026146 -431.06774902]
[21.59653854 -444.92712402]
[28.38450241 -458.31149292]
[36.16527557 -471.14413452]
[44.89428711 -483.35159302]
[54.52153778 -494.86389160]
[64.99188232 -505.61514282]
[76.24534607 -515.54370117]
[88.21747589 -524.59277344]
[100.83969116 -532.71051025]
[114.03968811 -539.85034180]
[127.74185944 -545.97143555]
[141.86772156 -551.03869629]
[156.33636475 -555.02313232]
[171.06491089 -557.90191650]
[185.96899414 -559.65856934]
[200.96324158 -560.28295898]
[215.96177673 -559.77160645]
[230.87867737 -558.12731934]
[245.62849426 -555.35968018]
[260.12677002 -551.48437500]
[274.29040527 -546.52368164]
[288.03833008 -540.50604248]
[301.29177856 -533.46588135]
[313.97479248 -525.44354248]
[326.01480103 -516.48498535]
[337.34277344 -506.64147949]
[347.89385986 -495.96945190]
[357.60760498 -484.53002930]
[366.42834473 -472.38870239]
[374.30563354 -459.61508179]
[381.19427490 -446.28225708]
[387.05484009 -432.46664429]
[391.85375977 -418.24737549]
[395.56353760 -403.70587158]
[398.16293335 -388.92547607]
[399.63708496 -373.99081421]
[399.97747803 -358.98742676]
[399.18222046 -344.00125122]
[397.25582886 -329.11816406]
[394.20938110 -314.42340088]
[390.06030273 -300.00109863]
[384.83233643 -285.93389893]
[378.55548096 -272.30239868]
[371.26565552 -259.18463135]
[363.00460815 -246.65574646]
[353.81970215 -234.78753662]
[343.76348877 -223.64796448]
[332.89361572 -213.30082703]
[321.27230835 -203.80541992]
[308.96615601 -195.21609497]
[296.04565430 -187.58209229]
[282.58480835 -180.94711304]
[268.66073608 -175.34916687]
[254.35313416 -170.82032776]
[239.74401855 -167.38653564]
[224.91703796 -165.06744385]
[209.95713806 -163.87634277]
[194.94999695 -163.82006836]
[179.98158264 -164.89892578]
[165.13763428 -167.10675049]
[169.86387634 -152.98188782]
[159.26222229 -141.23814392]
[155.93997192 -126.61067963]
[152.61770630 -111.98321533]
[149.29545593 -97.35575867]
[145.97319031 -82.72829437]
[142.65092468 -68.10083771]
[144.39297485 -63.65400314]
[143.36004639 -58.06561661]
[139.00585938 -53.09041977]
[135.24955750 -38.56835938]
[131.49325562 -24.04630089]
[127.73695374 -9.52424145]
[123.98065948 4.99781752]
[120.87654877 19.67312050]
[118.43081665 34.47238922]
[115.98509216 49.27165985]
[113.53936005 64.07093048]
[111.09363556 78.87020111]
[108.64791107 93.66947174]
[108.31293488 108.66573334]
[110.09539795 123.55944824]
[111.87786102 138.45317078]
[113.66033173 153.34687805]
[115.99581909 168.16395569]
[118.88108826 182.88385010]
[121.76636505 197.60372925]
[124.65163422 212.32362366]
[128.19131470 226.90000916]
[132.37831116 241.30378723]
[136.56532288 255.70756531]
[140.75233459 270.11135864]
[144.93934631 284.51513672]
[149.43974304 289.35848999]
[150.63859558 294.91363525]
[149.02972412 299.41036987]
[152.78602600 313.93243408]
[156.54232788 328.45449829]
[160.29862976 342.97653198]
[175.39950562 343.88125610]
[189.48100281 349.40997314]
[201.16352844 359.02111816]
[209.30255127 371.77304077]
[213.10070801 386.41644287]
[212.18588257 401.51669312]
[206.64772034 415.59448242]
[197.02876282 427.27056885]
[184.27139282 435.40106201]
[169.62545776 439.18939209]
[154.52578735 438.26446533]
[140.45173645 432.71685791]
[128.78208923 423.09008789]
[120.66016388 410.32727051]
[116.88162994 395.67877197]
[117.81668854 380.57974243]
[123.37372589 366.50939941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[3 191]
[4 190]
[5 187]
[6 186]
[7 185]
[8 184]
[9 183]
[16 182]
[17 181]
[18 180]
[19 179]
[25 178]
[26 177]
[27 176]
[28 175]
[48 174]
[49 173]
[50 172]
[51 171]
[52 170]
[53 169]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[65 161]
[66 160]
[67 159]
[68 158]
[69 157]
[70 156]
[72 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
