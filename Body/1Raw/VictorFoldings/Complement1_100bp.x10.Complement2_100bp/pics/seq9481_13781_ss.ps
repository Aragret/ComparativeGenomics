%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[114.63651276 597.52978516]
[101.85417175 589.67211914]
[89.55501556 581.07788086]
[77.78142548 571.77667236]
[66.57400513 561.80047607]
[55.97137833 551.18377686]
[46.01010132 539.96307373]
[36.72450638 528.17712402]
[28.14661026 515.86657715]
[20.30597687 503.07382202]
[13.22963619 489.84292603]
[6.94198370 476.21957397]
[1.46469295 462.25070190]
[-3.18335414 447.98443604]
[-6.98613501 433.46997070]
[-9.93054008 418.75738525]
[-12.00642014 403.89730835]
[-13.20661831 388.94104004]
[-13.52699757 373.94012451]
[-12.96645355 358.94625854]
[-11.52691841 344.01110840]
[-9.21335506 329.18621826]
[-6.03373861 314.52261353]
[-1.99902952 300.07092285]
[2.87686324 285.88092041]
[8.57713127 272.00152588]
[15.08212471 258.48062134]
[22.36941910 245.36474609]
[30.41389465 232.69917297]
[39.18782043 220.52752686]
[48.66094589 208.89179993]
[58.80062103 197.83207703]
[69.57189178 187.38648987]
[80.93762207 177.59104919]
[92.85863495 168.47952271]
[105.29383850 160.08331299]
[118.20036316 152.43138123]
[111.32094574 139.10195923]
[104.44153595 125.77252197]
[97.56212616 112.44309235]
[97.74122620 127.44202423]
[94.08373260 141.98928833]
[86.83223724 155.12001038]
[76.46770477 165.96327209]
[63.67757797 173.79989624]
[49.31018066 178.11009216]
[34.31844711 178.60798645]
[19.69672394 175.26055908]
[6.41482306 168.28984070]
[-4.64631748 158.15814209]
[-12.75305271 145.53749084]
[-17.36769104 131.26495361]
[-18.18416023 116.28720093]
[-15.14830589 101.59762573]
[-8.46148777 88.17054749]
[1.43278408 76.89653015]
[13.87825680 68.52334595]
[28.04946709 63.60635376]
[43.00648880 62.47168350]
[57.75727844 65.19458771]
[71.32347107 71.59447479]
[82.80525970 81.24685669]
[91.44349670 93.51606750]
[89.21838379 78.68202209]
[86.99326324 63.84797668]
[84.76815033 49.01393509]
[82.54302979 34.17988968]
[80.31790924 19.34584618]
[65.32808685 20.15196800]
[50.32950592 19.52955055]
[35.45801163 17.48423004]
[20.84827805 14.03452778]
[6.63261795 9.21168709]
[-7.06022453 3.05938530]
[-20.10624313 -4.36666012]
[-32.38728714 -12.99919605]
[-43.79213715 -22.76004410]
[-54.21750641 -33.56080627]
[-63.56897736 -45.30366516]
[-71.76186371 -57.88227463]
[-78.72196198 -71.18271637]
[-84.38623810 -85.08454132]
[-88.70339966 -99.46184540]
[-91.63434601 -114.18442535]
[-93.15254211 -129.11894226]
[-93.24422455 -144.13014221]
[-91.90856934 -159.08209229]
[-89.15766907 -173.83937073]
[-85.01644897 -188.26834106]
[-79.52239990 -202.23831177]
[-72.72528076 -215.62278748]
[-64.68665314 -228.30053711]
[-55.47931671 -240.15673828]
[-45.18665695 -251.08404541]
[-33.90188217 -260.98345947]
[-21.72719955 -269.76538086]
[-8.77286148 -277.35021973]
[4.84381008 -283.66931152]
[18.99949837 -288.66543579]
[33.56600571 -292.29333496]
[48.41140747 -294.52014160]
[63.40126419 -295.32574463]
[78.39981842 -294.70275879]
[93.27124023 -292.65689087]
[107.88085175 -289.20666504]
[122.09633636 -284.38330078]
[135.78895569 -278.23049927]
[148.83470154 -270.80398560]
[161.11543274 -262.17098999]
[172.51992798 -252.40974426]
[182.94490051 -241.60859680]
[192.29594421 -229.86540222]
[200.48837280 -217.28648376]
[207.44798279 -203.98579407]
[213.11175537 -190.08377075]
[217.42839050 -175.70629883]
[220.35881042 -160.98361206]
[221.87644958 -146.04904175]
[221.96759033 -131.03782654]
[220.63137817 -116.08592987]
[217.87994385 -101.32875061]
[213.73820496 -86.89994049]
[208.24363708 -72.93016815]
[201.44604492 -59.54594421]
[193.40695190 -46.86849213]
[184.19917297 -35.01261902]
[173.90611267 -24.08569527]
[162.62098694 -14.18667984]
[150.44598389 -5.40522099]
[137.49136353 2.17915297]
[123.87446594 8.49775505]
[109.71859741 13.49336052]
[95.15195465 17.12072945]
[97.37707520 31.95477295]
[99.60218811 46.78881836]
[101.82730865 61.62285995]
[104.05242157 76.45690155]
[106.27754211 91.29094696]
[110.89154816 105.56368256]
[117.77096558 118.89311218]
[124.65037537 132.22253418]
[131.52978516 145.55197144]
[145.24389648 139.46481323]
[159.29162598 134.19299316]
[173.62452698 129.75468445]
[188.19319153 126.16519928]
[202.94740295 123.43690491]
[217.83630371 121.57920074]
[232.80856323 120.59849548]
[247.81257629 120.49816895]
[262.79663086 121.27857208]
[277.70904541 122.93700409]
[292.49841309 125.46775818]
[307.11376953 128.86210632]
[321.50476074 133.10833740]
[335.62170410 138.19183350]
[349.41598511 144.09506226]
[362.84005737 150.79766846]
[375.84762573 158.27655029]
[388.39385986 166.50593567]
[400.43548584 175.45742798]
[411.93103027 185.10020447]
[422.84085083 195.40100098]
[433.12731934 206.32431030]
[442.75500488 217.83248901]
[451.69070435 229.88586426]
[459.90362549 242.44288635]
[467.36544800 255.46025085]
[474.05044556 268.89309692]
[479.93554688 282.69509888]
[485.00051880 296.81872559]
[489.22787476 311.21524048]
[492.60305786 325.83505249]
[495.11441040 340.62774658]
[496.75329590 355.54232788]
[497.51403809 370.52737427]
[497.39401245 385.53125000]
[496.39367676 400.50219727]
[494.51644897 415.38867188]
[491.76879883 430.13928223]
[488.16018677 444.70321655]
[483.70309448 459.03030396]
[478.41287231 473.07107544]
[472.30770874 486.77719116]
[465.40872192 500.10140991]
[457.73962402 512.99774170]
[449.32690430 525.42175293]
[440.19955444 537.33068848]
[430.38900757 548.68334961]
[419.92913818 559.44073486]
[408.85595703 569.56573486]
[397.20764160 579.02337646]
[385.02435303 587.78112793]
[372.34808350 595.80877686]
[359.22256470 603.07861328]
[345.69299316 609.56567383]
[331.80606079 615.24749756]
[317.60958862 620.10449219]
[303.15252686 624.11999512]
[288.48474121 627.28015137]
[273.65676880 629.57397461]
[258.71972656 630.99371338]
[243.72512817 631.53430176]
[228.72463989 631.19396973]
[213.76998901 629.97393799]
[198.91270447 627.87829590]
[184.20401001 624.91436768]
[169.69462585 621.09228516]
[155.43455505 616.42529297]
[141.47296143 610.92944336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 142]
[38 141]
[39 140]
[40 139]
[63 138]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
