%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[130.51876831 833.55718994]
[115.77632141 830.77337646]
[101.18688965 827.27508545]
[86.78508759 823.07055664]
[72.60506439 818.16992188]
[58.68046951 812.58465576]
[45.04431915 806.32806396]
[31.72895813 799.41491699]
[18.76597023 791.86175537]
[6.18610525 783.68640137]
[-5.98080206 774.90826416]
[-17.70589256 765.54809570]
[-28.96135330 755.62823486]
[-39.72048950 745.17211914]
[-49.95778275 734.20452881]
[-59.64894867 722.75152588]
[-68.77100372 710.84033203]
[-77.30230713 698.49902344]
[-85.22262573 685.75708008]
[-92.51317596 672.64459229]
[-99.15666199 659.19268799]
[-105.13732910 645.43328857]
[-110.44098663 631.39898682]
[-115.05506134 617.12310791]
[-118.96860504 602.63958740]
[-122.17233276 587.98260498]
[-124.65865326 573.18707275]
[-126.42166138 558.28802490]
[-127.45717621 543.32086182]
[-127.76274872 528.32098389]
[-127.33765411 513.32397461]
[-126.18289185 498.36550903]
[-124.30120087 483.48101807]
[-121.69705200 468.70574951]
[-118.37661743 454.07482910]
[-114.34777832 439.62289429]
[-109.62008667 425.38427734]
[-104.20475006 411.39270020]
[-98.11462402 397.68139648]
[-91.36414337 384.28286743]
[-83.96932983 371.22888184]
[-75.94772339 358.55041504]
[-67.31833649 346.27755737]
[-58.10164642 334.43939209]
[-48.31951904 323.06399536]
[-37.99514771 312.17834473]
[-27.15302277 301.80828857]
[-15.81886482 291.97842407]
[-4.01955414 282.71203613]
[8.21692181 274.03112793]
[20.86153984 265.95626831]
[33.88430786 258.50662231]
[47.25433731 251.69987488]
[60.93991470 245.55213928]
[74.90858459 240.07801819]
[89.12720490 235.29049683]
[103.56205750 231.20092773]
[118.17890930 227.81900024]
[115.51311493 213.05778503]
[105.63709259 201.90817261]
[110.79866028 186.95262146]
[108.02304840 172.21165466]
[105.13777924 157.49176025]
[102.03366852 142.81646729]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[83.33887482 60.50579453]
[80.01660919 45.87833405]
[65.07016754 43.25547409]
[52.30101013 35.13194275]
[43.63825226 22.77191544]
[40.37645721 8.07673645]
[42.98226929 -6.70753193]
[51.02793884 -19.33340263]
[63.26116562 -27.89362717]
[59.93890762 -42.52108765]
[49.33725357 -54.26483154]
[54.06350327 -68.38969421]
[50.74124527 -83.01715851]
[46.53711700 -88.11978912]
[45.67102814 -93.73645020]
[47.54470444 -98.12944794]
[44.65943146 -112.84933472]
[41.77415848 -127.56922913]
[26.71730042 -128.43054199]
[12.34793091 -133.01005554]
[-0.43067980 -141.01992798]
[-10.81525707 -151.95661926]
[-18.15301895 -165.13265991]
[-21.98270607 -179.71978760]
[-22.06358147 -194.80105591]
[-18.39056206 -209.42840576]
[-11.19453621 -222.68238831]
[-0.92785203 -233.72984314]
[11.76411724 -241.87629700]
[26.08354568 -246.60966492]
[41.13029861 -247.63241577]
[55.95852661 -244.88023376]
[69.63611603 -238.52615356]
[81.30328369 -228.96958923]
[90.22661591 -216.81124878]
[95.84518433 -202.81546021]
[97.80580902 -187.86196899]
[95.98523712 -172.89077759]
[90.49790955 -158.84300232]
[81.68876648 -146.60168457]
[70.11156464 -136.93632507]
[56.49404907 -130.45449829]
[59.37932205 -115.73461151]
[62.26459503 -101.01471710]
[65.36870575 -86.33941650]
[68.69096375 -71.71195221]
[79.05498505 -61.01446533]
[74.56636810 -45.84334564]
[77.88862610 -31.21588516]
[92.61937714 -28.77985191]
[105.32963562 -20.86816788]
[114.06610107 -8.66001129]
[117.47214508 6.00240564]
[114.99840546 20.89180756]
[106.99113464 33.73418045]
[94.64407349 42.55607605]
[97.96633148 57.18353653]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.66112518 139.49420166]
[120.86525726 144.59683228]
[121.73134613 150.21350098]
[119.85767365 154.60649109]
[122.74294281 169.32638550]
[127.46460724 177.14582825]
[125.55988312 184.28681946]
[135.62657166 196.49224854]
[130.27432251 210.39198303]
[132.94012451 225.15319824]
[147.81657410 223.20880127]
[162.77006531 221.99099731]
[177.76510620 221.50270081]
[192.76612854 221.74504089]
[207.73756409 222.71746826]
[222.64390564 224.41766357]
[237.44979858 226.84161377]
[252.12010193 229.98353577]
[266.62002563 233.83599854]
[280.91522217 238.38986206]
[294.97171021 243.63432312]
[308.75619507 249.55694580]
[322.23599243 256.14367676]
[335.37908936 263.37890625]
[348.15435791 271.24545288]
[360.53143311 279.72467041]
[372.48101807 288.79641724]
[383.97476196 298.43923950]
[394.98538208 308.63021851]
[405.48675537 319.34518433]
[415.45401001 330.55874634]
[424.86346436 342.24429321]
[433.69281006 354.37408447]
[441.92111206 366.91937256]
[449.52886963 379.85040283]
[456.49801636 393.13653564]
[462.81204224 406.74618530]
[468.45593262 420.64712524]
[473.41635132 434.80636597]
[477.68148804 449.19030762]
[481.24124146 463.76486206]
[484.08718872 478.49545288]
[486.21255493 493.34713745]
[487.61230469 508.28469849]
[488.28311157 523.27264404]
[488.22341919 538.27551270]
[487.43331909 553.25769043]
[485.91473389 568.18365479]
[483.67120361 583.01794434]
[480.70809937 597.72540283]
[477.03244019 612.27117920]
[472.65295410 626.62072754]
[467.58001709 640.74005127]
[461.82562256 654.59558105]
[455.40350342 668.15460205]
[448.32882690 681.38476562]
[440.61837769 694.25488281]
[432.29046631 706.73425293]
[423.36483765 718.79339600]
[413.86267090 730.40368652]
[403.80648804 741.53753662]
[393.22015381 752.16857910]
[382.12878418 762.27160645]
[370.55865479 771.82263184]
[358.53726196 780.79901123]
[346.09304810 789.17944336]
[333.25558472 796.94403076]
[320.05529785 804.07440186]
[306.52352905 810.55364990]
[292.69232178 816.36633301]
[278.59454346 821.49877930]
[264.26354980 825.93872070]
[249.73342896 829.67565918]
[235.03857422 832.70068359]
[220.21386719 835.00671387]
[205.29446411 836.58819580]
[190.31576538 837.44140625]
[175.31327820 837.56439209]
[160.32260132 836.95672607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 141]
[59 140]
[61 138]
[62 136]
[63 135]
[64 132]
[65 131]
[66 130]
[68 128]
[69 127]
[70 126]
[71 125]
[78 118]
[79 117]
[81 115]
[82 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
