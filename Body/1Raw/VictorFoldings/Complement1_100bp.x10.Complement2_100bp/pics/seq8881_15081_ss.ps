%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[186.18597412 657.65600586]
[172.40579224 663.80163574]
[157.50439453 666.17034912]
[142.49778748 664.60064697]
[128.40913391 659.19946289]
[116.19903564 650.33514404]
[106.69998169 638.61212158]
[100.55965424 624.82952881]
[98.19669342 609.92724609]
[99.77221680 594.92120361]
[105.17879486 580.83465576]
[114.04781342 568.62799072]
[125.77455902 559.13348389]
[139.55947876 552.99847412]
[154.46269226 550.64123535]
[156.02322388 535.72265625]
[157.58374023 520.80401611]
[159.14427185 505.88543701]
[159.14427185 490.88543701]
[157.58374023 475.96682739]
[156.02322388 461.04821777]
[154.46269226 446.12963867]
[152.90217590 431.21102905]
[151.23063660 416.30444336]
[149.44816589 401.41073608]
[147.66571045 386.51699829]
[133.10145569 383.17514038]
[120.53579712 375.03674316]
[111.49580383 363.06793213]
[107.08795166 348.70156860]
[107.86268616 333.66595459]
[113.74578094 319.77676392]
[124.04496002 308.71786499]
[137.53129578 301.83718872]
[135.74884033 286.94345093]
[133.96636963 272.04974365]
[131.30056763 257.28854370]
[127.76090240 242.71215820]
[124.22122955 228.13577271]
[120.68155670 213.55940247]
[117.14188385 198.98303223]
[101.52986908 194.81440735]
[90.08450317 183.27493286]
[85.99688721 167.44747925]
[90.47438049 151.62826538]
[102.38601685 140.16072083]
[98.62971497 125.63865662]
[94.87341309 111.11660004]
[91.41356659 125.71212769]
[83.66654968 138.55673218]
[72.37076569 148.42613220]
[58.60284805 154.37965393]
[43.67507172 155.84985352]
[29.01025391 152.69657898]
[16.00615311 145.22038269]
[5.90223885 134.13386536]
[-0.33844954 120.49371338]
[-2.12108946 105.60001373]
[0.72422916 90.87235260]
[7.92630863 77.71446228]
[18.79869270 67.38047028]
[32.30509567 60.85536194]
[47.15817261 58.76105499]
[61.94222260 61.29716873]
[75.24812317 68.22197723]
[85.80764008 78.87545013]
[92.61466980 92.24324799]
[92.83799744 77.24491119]
[93.06132507 62.24657440]
[93.28465271 47.24823761]
[93.50798035 32.24990082]
[84.01761627 43.86597061]
[69.78699493 48.60827255]
[55.22563171 45.00735855]
[44.84551620 34.17900467]
[41.86304092 19.47850037]
[47.20236588 5.46095324]
[59.20903397 -3.53014684]
[74.16265106 -4.70880938]
[87.42967987 2.29018736]
[94.89924622 15.29837799]
[97.12436676 0.46433458]
[91.51979828 -14.33091640]
[101.05947876 -25.76961708]
[95.45491028 -40.56486893]
[104.99459076 -52.00356674]
[107.21970367 -66.83760834]
[108.33535004 -81.79606628]
[108.33535004 -96.79606628]
[108.33535004 -111.79606628]
[100.59805298 -125.59623718]
[108.33535004 -138.32351685]
[108.33535004 -153.32351685]
[97.77828217 -161.68788147]
[94.02101135 -174.41947937]
[98.22032928 -186.80688477]
[108.63092804 -194.39956665]
[108.85425568 -209.39790344]
[109.07758331 -224.39624023]
[109.30091095 -239.39457703]
[95.82559967 -246.65229797]
[87.27624512 -259.34747314]
[85.61743164 -274.56280518]
[91.23034668 -288.80197144]
[102.82518005 -298.79290771]
[117.73751831 -302.23974609]
[132.54061890 -298.35043335]
[143.83283997 -288.01870728]
[149.01931763 -273.61874390]
[146.90821838 -258.45953369]
[137.98468018 -246.02453613]
[124.29924774 -239.17124939]
[124.07592010 -224.17291260]
[123.85259247 -209.17457581]
[123.62926483 -194.17623901]
[135.84782410 -182.62004089]
[135.92950439 -165.46463013]
[123.33535004 -153.32351685]
[123.33535004 -138.32351685]
[131.07264709 -125.59623718]
[123.33535004 -111.79606628]
[123.33535004 -96.79606628]
[123.33535004 -81.79606628]
[132.18470764 -93.90758514]
[145.86398315 -100.06206512]
[160.79743958 -98.65073395]
[173.08151245 -90.04251099]
[179.50517273 -76.48756409]
[178.38929749 -61.52912903]
[170.02557373 -49.07730103]
[156.60025024 -42.38695526]
[141.62268066 -43.20693588]
[129.00796509 -51.32290268]
[122.05374908 -64.61249542]
[119.82862854 -49.77845001]
[125.59235382 -36.04423141]
[115.89351654 -23.54450035]
[121.65724182 -9.81027889]
[111.95841217 2.68945169]
[109.73329163 17.52349472]
[108.50631714 32.47322845]
[108.28298950 47.47156525]
[108.05966187 62.46990204]
[107.83633423 77.46823883]
[107.61300659 92.46657562]
[109.39546967 107.36029816]
[113.15177155 121.88235474]
[116.90807343 136.40441895]
[130.56323242 139.43743896]
[141.52711487 148.01704407]
[147.69520569 160.42401123]
[147.91484070 174.21173096]
[142.20018005 186.68855286]
[131.71826172 195.44335938]
[135.25793457 210.01972961]
[138.79760742 224.59611511]
[142.33728027 239.17248535]
[145.87695312 253.74885559]
[152.80870056 240.44657898]
[166.18368530 233.65614319]
[181.01335144 235.91023254]
[191.76661682 246.36813354]
[194.43275452 261.12927246]
[188.01739502 274.68814087]
[174.91326904 281.98760986]
[160.00793457 280.30517578]
[148.86009216 270.26727295]
[150.64254761 285.16101074]
[152.42501831 300.05471802]
[167.15417480 303.55859375]
[179.77214050 311.87478638]
[188.76663208 323.98342896]
[193.06758118 338.41159058]
[192.17434692 353.41238403]
[186.21405029 367.17645264]
[175.92373657 378.05020142]
[162.55941772 384.73455811]
[164.34188843 399.62826538]
[166.12435913 414.52197266]
[170.25135803 422.67095947]
[167.82078552 429.65048218]
[169.38130188 444.56909180]
[170.94183350 459.48770142]
[172.50234985 474.40631104]
[174.06286621 489.32492065]
[180.29664612 475.68161011]
[191.22448730 465.40628052]
[205.22529602 460.02319336]
[220.22213745 460.33093262]
[233.99032593 466.28384399]
[244.48742676 476.99880981]
[250.15626526 490.88638306]
[250.15589905 505.88638306]
[244.48637390 519.77368164]
[233.98873901 530.48809814]
[220.22026062 536.44036865]
[205.22340393 536.74737549]
[191.22286987 531.36358643]
[180.29553223 521.08770752]
[174.06286621 507.44595337]
[172.50234985 522.36456299]
[170.94183350 537.28314209]
[169.38130188 552.20178223]
[183.47412109 557.59204102]
[195.69105530 566.44689941]
[205.19915771 578.16265869]
[211.35012817 591.94042969]
[213.72460938 606.84094238]
[212.16067505 621.84814453]
[206.76496887 635.93890381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 203]
[16 202]
[17 201]
[18 200]
[19 185]
[20 184]
[21 183]
[22 182]
[23 181]
[24 179]
[25 178]
[26 177]
[34 169]
[35 168]
[36 167]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[46 148]
[47 147]
[48 146]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[81 140]
[82 139]
[84 137]
[86 135]
[87 134]
[88 123]
[89 122]
[90 121]
[92 119]
[93 118]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
