%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[251.36083984 574.60180664]
[244.33731079 561.34124756]
[238.22502136 547.63677979]
[233.05187988 533.55090332]
[228.84146118 519.14794922]
[225.61300659 504.49359131]
[223.38122559 489.65469360]
[222.15632629 474.69903564]
[221.94386292 459.69476318]
[222.74482727 444.71038818]
[224.55555725 429.81427002]
[227.36779785 415.07440186]
[231.16870117 400.55798340]
[235.94094849 386.33129883]
[241.66275024 372.45922852]
[248.30799866 359.00509644]
[255.84637451 346.03030396]
[264.24346924 333.59399414]
[273.46099854 321.75296021]
[283.45690918 310.56121826]
[272.96939087 299.83682251]
[262.48190308 289.11245728]
[251.99438477 278.38806152]
[241.50689697 267.66369629]
[231.01939392 256.93930054]
[220.07615662 263.61312866]
[207.97106934 267.84857178]
[195.24041748 269.45486450]
[182.44883728 268.35787964]
[170.16430664 264.60339355]
[158.93287659 258.35528564]
[149.25445557 249.88827515]
[141.56047058 239.57598877]
[136.19476318 227.87435913]
[133.39808655 215.30154419]
[133.29739380 202.41488647]
[135.90008545 189.78631592]
[141.09346008 177.97689819]
[148.64971924 167.51193237]
[138.81913757 156.18234253]
[128.98855591 144.85275269]
[119.15797424 133.52314758]
[109.32739258 122.19355774]
[99.33618927 124.06478119]
[89.46333313 121.64562225]
[81.46900177 115.36738586]
[76.77846527 106.34938049]
[76.22796631 96.19937897]
[79.91564941 86.72696686]
[70.60076904 74.96971893]
[61.28588486 63.21246719]
[51.97100449 51.45521545]
[37.33657837 45.44321442]
[35.49766922 30.66256142]
[22.80513763 38.68326950]
[9.33195305 45.30938339]
[-4.76922464 50.46582413]
[-19.33861923 54.09416199]
[-34.21114731 56.15328979]
[-49.21829224 56.61986923]
[-64.19001007 55.48862076]
[-78.95666504 52.77235794]
[-93.35092926 48.50186157]
[-107.20971680 42.72551346]
[-120.37599182 35.50876999]
[-132.70056152 26.93340302]
[-144.04379272 17.09657288]
[-154.27716064 6.10974264]
[-163.28468323 -5.90260124]
[-170.96434021 -18.80434799]
[-177.22908020 -32.44931030]
[-182.00794983 -46.68288422]
[-185.24678040 -61.34378815]
[-186.90887451 -76.26589966]
[-186.97540283 -91.28015137]
[-185.44560242 -106.21640778]
[-182.33682251 -120.90544128]
[-177.68429565 -135.18080139]
[-171.54071045 -148.88075256]
[-163.97569275 -161.85005188]
[-155.07496643 -173.94174194]
[-144.93936157 -185.01882935]
[-133.68376160 -194.95579529]
[-121.43565369 -203.64004517]
[-108.33385468 -210.97317505]
[-94.52680206 -216.87211609]
[-80.17094421 -221.27000427]
[-65.42894745 -224.11701965]
[-50.46783829 -225.38090515]
[-35.45714951 -225.04731750]
[-20.56695557 -223.12007141]
[-5.96598005 -219.62098694]
[8.18033981 -214.58972168]
[21.71171570 -208.08326721]
[34.47482681 -200.17533875]
[46.32505417 -190.95558167]
[57.12812805 -180.52841187]
[66.76164246 -169.01200867]
[75.11643982 -156.53686523]
[82.09785461 -143.24430847]
[87.62678528 -129.28497314]
[91.64057922 -114.81702423]
[94.09375763 -100.00439453]
[94.95853424 -85.01492310]
[94.22509766 -70.01844788]
[91.90176392 -55.18489838]
[88.01485443 -40.68234634]
[82.60841370 -26.67511559]
[75.74370575 -13.32191849]
[67.49850464 -0.77405936]
[57.96623993 10.82628632]
[47.25492096 21.34767723]
[61.22307968 26.51872444]
[63.72825623 42.14033127]
[73.04313660 53.89758301]
[82.35802460 65.65483856]
[91.67290497 77.41208649]
[110.85776520 78.51364899]
[123.12442780 93.30558777]
[120.65699005 112.36297607]
[130.48756409 123.69257355]
[140.31814575 135.02217102]
[150.14872742 146.35176086]
[159.97930908 157.68135071]
[175.58856201 150.18791199]
[192.65814209 147.36320496]
[209.82339478 149.42564392]
[225.71405029 156.20329285]
[239.06365967 167.14804077]
[248.81051636 181.38002014]
[254.18206787 197.75830078]
[254.75616455 214.97233582]
[250.49423218 231.64688110]
[241.74377441 246.45181274]
[252.23126221 257.17620850]
[262.71878052 267.90057373]
[273.20626831 278.62493896]
[283.69378662 289.34933472]
[294.18127441 300.07369995]
[305.59344482 290.33026123]
[317.63739014 281.37945557]
[330.25808716 273.26217651]
[343.39801025 266.01541138]
[356.99719238 259.67227173]
[370.99356079 254.26168823]
[385.32327271 249.80834961]
[399.92095947 246.33256531]
[414.71997070 243.85018921]
[429.65280151 242.37257385]
[444.65133667 241.90643311]
[459.64709473 242.45390320]
[474.57168579 244.01249695]
[489.35702515 246.57510376]
[503.93563843 250.13000488]
[518.24096680 254.66101074]
[532.20782471 260.14743042]
[545.77239990 266.56423950]
[558.87280273 273.88214111]
[571.44927979 282.06774902]
[583.44451904 291.08374023]
[594.80364990 300.88897705]
[605.47497559 311.43865967]
[615.40972900 322.68472290]
[624.56256104 334.57583618]
[632.89178467 347.05770874]
[640.35937500 360.07339478]
[646.93115234 373.56353760]
[652.57727051 387.46658325]
[657.27191162 401.71905518]
[660.99365234 416.25595093]
[663.72552490 431.01095581]
[665.45507812 445.91671753]
[666.17437744 460.90524292]
[665.88012695 475.90811157]
[664.57373047 490.85690308]
[662.26110840 505.68338013]
[658.95288086 520.31994629]
[654.66400146 534.69970703]
[649.41418457 548.75720215]
[643.22729492 562.42816162]
[636.13159180 575.65026855]
[628.15948486 588.36315918]
[619.34729004 600.50891113]
[609.73529053 612.03198242]
[599.36724854 622.87988281]
[588.29052734 633.00305176]
[576.55566406 642.35540771]
[564.21618652 650.89416504]
[551.32836914 658.58038330]
[537.95111084 665.37902832]
[524.14538574 671.25909424]
[509.97418213 676.19366455]
[495.50219727 680.16027832]
[480.79544067 683.14086914]
[465.92098999 685.12182617]
[450.94674683 686.09405518]
[435.94104004 686.05316162]
[420.97235107 684.99932861]
[406.10891724 682.93737793]
[391.41860962 679.87670898]
[376.96844482 675.83123779]
[362.82437134 670.81951904]
[349.05087280 664.86431885]
[335.71084595 657.99285889]
[322.86517334 650.23651123]
[310.57241821 641.63061523]
[298.88867188 632.21447754]
[287.86727905 622.03106689]
[277.55853271 611.12683105]
[268.00942993 599.55157471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 139]
[21 138]
[22 137]
[23 136]
[24 135]
[25 134]
[39 124]
[40 123]
[41 122]
[42 121]
[43 120]
[49 117]
[50 116]
[51 115]
[52 114]
[54 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
