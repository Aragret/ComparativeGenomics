%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[90.50035095 450.80450439]
[80.36950684 439.72241211]
[71.49626160 427.60989380]
[63.98465347 414.60900879]
[57.92274475 400.87219238]
[53.38160706 386.56045532]
[50.41448975 371.84164429]
[49.05617523 356.88830566]
[49.32259369 341.87579346]
[51.21061325 326.98004150]
[54.69810867 312.37579346]
[59.74418259 298.23419189]
[66.28968048 284.72109985]
[74.25785065 271.99493408]
[83.55526733 260.20489502]
[94.07293701 249.48921204]
[105.68754578 239.97352600]
[118.26290131 231.76939392]
[131.65158081 224.97303772]
[145.69659424 219.66409302]
[141.94029236 205.14204407]
[138.18399048 190.61997986]
[134.42768860 176.09791565]
[130.67138672 161.57586670]
[124.39402771 147.95254517]
[115.79546356 135.66171265]
[107.19689941 123.37087250]
[98.59833527 111.08003235]
[89.90850830 98.85354614]
[81.12790680 86.69209290]
[66.77652740 80.03262329]
[65.59944153 65.18460083]
[56.81884003 53.02314758]
[48.03823853 40.86169052]
[39.25763321 28.70023537]
[30.47703171 16.53878021]
[17.77368164 24.52505493]
[4.58474874 31.68101120]
[-9.03557110 37.97724533]
[-23.03130913 43.38787842]
[-37.34495163 47.89068604]
[-51.91768265 51.46715927]
[-66.68962097 54.10260391]
[-81.60005951 55.78619003]
[-96.58773041 56.51099396]
[-111.59104919 56.27404404]
[-126.54836273 55.07631302]
[-141.39819336 52.92272186]
[-156.07954407 49.82211685]
[-170.53207397 45.78724670]
[-184.69638062 40.83468246]
[-198.51428223 34.98478317]
[-211.92898560 28.26158142]
[-224.88536072 20.69270897]
[-237.33018494 12.30926609]
[-249.21231079 3.14570260]
[-260.48291016 -6.76032591]
[-271.09564209 -17.36811256]
[-281.00695801 -28.63406944]
[-290.17608643 -40.51189804]
[-298.56533813 -52.95279312]
[-306.14028931 -65.90563202]
[-312.86975098 -79.31718445]
[-318.72613525 -93.13234711]
[-323.68530273 -107.29434204]
[-327.72695923 -121.74497986]
[-330.83441162 -136.42486572]
[-332.99496460 -151.27369690]
[-334.19970703 -166.23045349]
[-334.44366455 -181.23365784]
[-333.72589111 -196.22166443]
[-332.04928589 -211.13288879]
[-329.42074585 -225.90605164]
[-325.85107422 -240.48045349]
[-321.35498047 -254.79620361]
[-315.95089722 -268.79446411]
[-309.66104126 -282.41775513]
[-302.51126099 -295.61001587]
[-294.53091431 -308.31710815]
[-285.75283813 -320.48678589]
[-276.21307373 -332.06903076]
[-265.95083618 -343.01626587]
[-255.00830078 -353.28350830]
[-243.43040466 -362.82858276]
[-231.26473999 -371.61221313]
[-218.56129456 -379.59835815]
[-205.37228394 -386.75415039]
[-191.75189209 -393.05023193]
[-177.75610352 -398.46072388]
[-163.44239807 -402.96337891]
[-148.86962891 -406.53967285]
[-134.09767151 -409.17495728]
[-119.18721008 -410.85836792]
[-104.19953156 -411.58300781]
[-89.19621277 -411.34591675]
[-74.23892212 -410.14801025]
[-59.38910294 -407.99426270]
[-44.70779037 -404.89349365]
[-30.25531197 -400.85845947]
[-16.09105301 -395.90573120]
[-2.27321887 -390.05566406]
[11.14140892 -383.33233643]
[24.09770775 -375.76330566]
[36.54243469 -367.37973022]
[48.42445374 -358.21603394]
[59.69493484 -348.30987549]
[70.30757141 -337.70196533]
[80.21875000 -326.43591309]
[89.38774109 -314.55798340]
[97.77687073 -302.11700439]
[105.35166168 -289.16406250]
[112.08098602 -275.75244141]
[117.93720245 -261.93722534]
[122.89624023 -247.77516174]
[126.93771362 -233.32447815]
[130.04502869 -218.64456177]
[132.20539856 -203.79570007]
[133.40997314 -188.83894348]
[133.65377808 -173.83573914]
[132.93582153 -158.84773254]
[131.25904846 -143.93652344]
[128.63035583 -129.16339111]
[125.06053162 -114.58902740]
[120.56427002 -100.27332306]
[115.16002655 -86.27511597]
[108.87001801 -72.65191650]
[101.72008514 -59.45971680]
[93.73961639 -46.75271988]
[84.96140289 -34.58314514]
[75.42151642 -23.00099564]
[65.15914917 -12.05386829]
[54.21648788 -1.78674793]
[42.63848877 7.75817633]
[51.41909027 19.91963196]
[60.19969177 32.08108902]
[68.98029327 44.24254227]
[77.76090240 56.40399933]
[91.48423004 62.19359970]
[93.28936768 77.91149139]
[102.06996918 90.07294464]
[108.96664429 94.24528503]
[110.88917542 102.48146820]
[119.48773956 114.77230835]
[128.08630371 127.06314850]
[136.68486023 139.35398865]
[134.43264771 124.52403259]
[135.74583435 109.58162689]
[140.55017090 95.37182617]
[148.57395935 82.69827271]
[159.36340332 72.27771759]
[172.30830383 64.69948578]
[186.67655945 60.39217377]
[201.65559387 59.59936905]
[216.39826965 62.36591721]
[230.07080078 68.53535461]
[241.89993286 77.75876617]
[251.21670532 89.51452637]
[257.49417114 103.13778687]
[260.37734985 117.85809326]
[259.70315552 132.84292603]
[255.50970459 147.24484253]
[248.03419495 160.24932861]
[237.69937134 171.12092590]
[225.08973694 179.24478149]
[210.91841125 184.16145325]
[195.98687744 185.59289551]
[181.13955688 183.45814514]
[167.21615601 177.87791443]
[155.00410461 169.16783142]
[145.19345093 157.81956482]
[148.94975281 172.34162903]
[152.70605469 186.86367798]
[156.46235657 201.38574219]
[160.21864319 215.90780640]
[175.07633972 213.74070740]
[190.08123779 213.19274902]
[205.05741882 214.27033997]
[219.82929993 216.96084595]
[234.22367859 221.23274231]
[248.07179260 227.03591919]
[261.21127319 234.30235291]
[273.48809814 242.94683838]
[284.75830078 252.86802673]
[294.88973999 263.94958496]
[303.76361084 276.06161499]
[311.27593994 289.06210327]
[317.33859253 302.79861450]
[321.88049316 317.11007690]
[324.84838867 331.82873535]
[326.20751953 346.78201294]
[325.94189453 361.79455566]
[324.05468750 376.69036865]
[320.56799316 391.29483032]
[315.52267456 405.43667603]
[308.97790527 418.95013428]
[301.01040649 431.67672729]
[291.71362305 443.46728516]
[281.19653320 454.18353271]
[269.58242798 463.69982910]
[257.00753784 471.90463257]
[243.61921692 478.70172119]
[229.57447815 484.01141357]
[215.03799438 487.77145386]
[200.18019104 489.93774414]
[185.17526245 490.48489380]
[170.19914246 489.40649414]
[155.42741394 486.71517944]
[141.03326416 482.44253540]
[127.18545532 476.63861084]
[114.04635620 469.37145996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 174]
[21 173]
[22 172]
[23 171]
[24 170]
[25 145]
[26 144]
[27 143]
[28 142]
[29 140]
[30 139]
[32 137]
[33 136]
[34 135]
[35 134]
[36 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
