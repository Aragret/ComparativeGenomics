%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[93.23241425 624.42883301]
[79.71846008 617.90307617]
[66.72998047 610.38568115]
[54.33958817 601.91864014]
[42.61659241 592.54937744]
[31.62654686 582.33020020]
[21.43091583 571.31835938]
[12.08671665 559.57531738]
[3.64620733 547.16687012]
[-3.84340978 534.16235352]
[-10.34024906 520.63446045]
[-15.80797672 506.65890503]
[-20.21601486 492.31381226]
[-23.53971100 477.67944336]
[-25.76047897 462.83758545]
[-26.86589813 447.87127686]
[-26.84978676 432.86422729]
[-25.71223640 417.90032959]
[-23.45960426 403.06329346]
[-20.10449409 388.43606567]
[-15.66566467 374.10049438]
[-10.16794205 360.13668823]
[-3.64207101 346.62280273]
[3.87545180 333.63439941]
[12.34258461 321.24407959]
[21.71197701 309.52114868]
[31.93122864 298.53121948]
[42.94319153 288.33566284]
[54.68627548 278.99157715]
[67.09481812 270.55117798]
[80.09941101 263.06167603]
[93.62734222 256.56494141]
[107.60294342 251.09735107]
[121.94806671 246.68943787]
[118.62580872 232.06198120]
[115.30355072 217.43452454]
[111.98129272 202.80705261]
[108.65903473 188.17959595]
[105.88644409 186.00128174]
[104.03118896 182.37179565]
[103.76383972 177.73695374]
[105.53050232 172.82513428]
[102.86470795 158.06391907]
[100.19890594 143.30270386]
[97.53311157 128.54147339]
[83.62187958 123.50444031]
[74.07895660 112.19840240]
[71.44957733 97.63884735]
[76.43505096 83.70906067]
[87.70567322 74.12431335]
[85.03987122 59.36309814]
[82.37407684 44.60188293]
[69.67437744 35.58216095]
[67.18115997 20.57421112]
[75.85835266 8.52257347]
[73.19255829 -6.23864365]
[70.52676392 -20.99986076]
[65.92204285 -28.88873672]
[67.93287659 -36.00058365]
[65.48714447 -50.79985428]
[63.04141998 -65.59912109]
[60.59569168 -80.39839172]
[45.63794708 -79.16606140]
[30.62952614 -79.15702820]
[15.67030811 -80.37136078]
[0.85984695 -82.80097198]
[-13.70329571 -86.42970276]
[-27.92220306 -91.23339844]
[-41.70224762 -97.18009186]
[-54.95172501 -104.23020935]
[-67.58246613 -112.33683014]
[-79.51039886 -121.44599915]
[-90.65616608 -131.49711609]
[-100.94557190 -142.42326355]
[-110.31015778 -154.15174866]
[-118.68759155 -166.60452271]
[-126.02212524 -179.69868469]
[-132.26495361 -193.34713745]
[-137.37452698 -207.45901489]
[-141.31683350 -221.94041443]
[-144.06564331 -236.69496155]
[-145.60267639 -251.62448120]
[-145.91769409 -266.62957764]
[-145.00859070 -281.61044312]
[-142.88142395 -296.46737671]
[-139.55033875 -311.10147095]
[-135.03753662 -325.41534424]
[-129.37301636 -339.31378174]
[-122.59448242 -352.70422363]
[-114.74705505 -365.49761963]
[-105.88294983 -377.60879517]
[-96.06116486 -388.95715332]
[-85.34705353 -399.46716309]
[-73.81192017 -409.06890869]
[-61.53253555 -417.69848633]
[-48.59061432 -425.29846191]
[-35.07228470 -431.81823730]
[-21.06751060 -437.21444702]
[-6.66949177 -441.45117188]
[8.02595234 -444.50021362]
[22.92102623 -446.34130859]
[37.91660309 -446.96215820]
[52.91289139 -446.35867310]
[67.81008148 -444.53482056]
[82.50904846 -441.50280762]
[96.91196442 -437.28274536]
[110.92298126 -431.90274048]
[124.44884491 -425.39862061]
[137.39955139 -417.81365967]
[149.68893433 -409.19830322]
[161.23516846 -399.60992432]
[171.96144104 -389.11230469]
[181.79635620 -377.77532959]
[190.67448425 -365.67440796]
[198.53671265 -352.89013672]
[205.33074951 -339.50753784]
[211.01135254 -325.61569214]
[215.54074097 -311.30703735]
[218.88874817 -296.67681885]
[221.03311157 -281.82235718]
[221.95956421 -266.84255981]
[221.66192627 -251.83708191]
[220.14218140 -236.90580750]
[217.41044617 -222.14807129]
[213.48490906 -207.66212463]
[208.39167786 -193.54434204]
[202.16465759 -179.88867188]
[194.84529114 -166.78602600]
[186.48228455 -154.32356262]
[177.13128662 -142.58424377]
[166.85453796 -131.64617920]
[155.72041321 -121.58217621]
[143.80302429 -112.45919800]
[131.18168640 -104.33795929]
[117.94038391 -97.27250671]
[104.16722870 -91.30986786]
[89.95389557 -86.48970795]
[75.39496613 -82.84412384]
[77.84069061 -68.04485321]
[80.28641510 -53.24557877]
[82.73214722 -38.44630814]
[85.28797913 -23.66565704]
[87.95377350 -8.90443897]
[90.61956787 5.85677814]
[102.96407318 14.11201286]
[105.87784576 29.04401016]
[97.13529205 41.93608475]
[99.80109406 56.69730377]
[102.46688843 71.45851898]
[116.37812042 76.49555969]
[125.92104340 87.80159760]
[128.55041504 102.36115265]
[123.56494904 116.29093933]
[112.29432678 125.87568665]
[114.96012878 140.63690186]
[117.62592316 155.39811707]
[120.29171753 170.15933228]
[123.28649139 184.85734558]
[126.60874939 199.48480225]
[129.93101501 214.11225891]
[133.25326538 228.73971558]
[136.57553101 243.36718750]
[151.41731262 241.14602661]
[166.38359070 240.04020691]
[181.39065552 240.05592346]
[196.35458374 241.19306946]
[211.19168091 243.44531250]
[225.81898499 246.80003357]
[240.15469360 251.23849487]
[254.11862183 256.73583984]
[267.63269043 263.26135254]
[280.62130737 270.77853394]
[293.01184082 279.24533081]
[304.73501587 288.61441040]
[315.72521973 298.83337402]
[325.92105103 309.84506226]
[335.26547241 321.58792114]
[343.70617676 333.99621582]
[351.19604492 347.00064087]
[357.69311523 360.52838135]
[363.16107178 374.50384521]
[367.56936646 388.84884644]
[370.89334106 403.48318481]
[373.11434937 418.32498169]
[374.22003174 433.29125977]
[374.20419312 448.29833984]
[373.06692505 463.26223755]
[370.81454468 478.09933472]
[367.45968628 492.72662354]
[363.02111816 507.06228638]
[357.52362061 521.02618408]
[350.99801636 534.54016113]
[343.48071289 547.52868652]
[335.01379395 559.91918945]
[325.64462280 571.64227295]
[315.42553711 582.63238525]
[304.41375732 592.82812500]
[292.67083740 602.17242432]
[280.26245117 610.61303711]
[267.25799561 618.10278320]
[253.73017883 624.59973145]
[239.75466919 630.06756592]
[225.40962219 634.47576904]
[210.77526855 637.79956055]
[195.93344116 640.02044678]
[180.96714783 641.12603760]
[165.96008301 641.11004639]
[150.99617004 639.97259521]
[136.15911865 637.72009277]
[121.53186798 634.36511230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[42 157]
[43 156]
[44 155]
[45 154]
[50 149]
[51 148]
[52 147]
[55 144]
[56 143]
[57 142]
[59 141]
[60 140]
[61 139]
[62 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
