%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[42.07707596 721.91668701]
[27.12852097 723.29779053]
[12.11657333 723.20703125]
[-2.81418657 721.64520264]
[-17.51996422 718.62744141]
[-31.85913086 714.18280029]
[-45.69359207 708.35406494]
[-58.89010620 701.19732666]
[-71.32158661 692.78155518]
[-82.86830139 683.18780518]
[-93.41904449 672.50842285]
[-102.87221527 660.84631348]
[-111.13676453 648.31384277]
[-118.13310242 635.03155518]
[-123.79383850 621.12750244]
[-128.06446838 606.73553467]
[-130.90385437 591.99432373]
[-132.28465271 577.04571533]
[-132.19357300 562.03375244]
[-130.63148499 547.10302734]
[-127.61341858 532.39733887]
[-123.16846466 518.05822754]
[-117.33942413 504.22390747]
[-110.18242645 491.02752686]
[-101.76641083 478.59622192]
[-92.17242432 467.04968262]
[-81.49286652 456.49917603]
[-69.83058167 447.04623413]
[-57.29790115 438.78192139]
[-44.01551437 431.78585815]
[-30.11134148 426.12539673]
[-15.71929646 421.85504150]
[-0.97798216 419.01596069]
[13.97062969 417.63546753]
[28.98257256 417.72683716]
[30.54309654 402.80822754]
[32.10361862 387.88964844]
[33.66414261 372.97103882]
[22.66804504 383.17327881]
[7.78949118 385.07818604]
[-5.42218590 377.97525024]
[-12.03935719 364.51370239]
[-9.59398174 349.71438599]
[1.00187564 339.09704590]
[15.79622269 336.62170410]
[29.27113342 343.21160889]
[36.40101242 356.41003418]
[39.72327423 341.78256226]
[43.04553223 327.15509033]
[46.36779404 312.52764893]
[49.69005203 297.90017700]
[53.01231003 283.27273560]
[56.33457184 268.64526367]
[54.75060654 261.42633057]
[59.81671906 253.82553101]
[63.35638809 239.24914551]
[66.89606476 224.67277527]
[70.43573761 210.09640503]
[73.64900970 195.44461060]
[76.53427887 180.72471619]
[79.41955566 166.00483704]
[74.27484894 152.02694702]
[84.52214813 139.97276306]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.75795746 57.14196777]
[103.64323425 42.42207718]
[105.86834717 27.58803368]
[107.42887115 12.66942883]
[108.98939514 -2.24917603]
[110.54991913 -17.16777992]
[111.66556549 -32.12623596]
[112.33535004 -47.11127472]
[113.00514221 -62.09631348]
[113.67492676 -77.08135223]
[114.34471130 -92.06639099]
[114.67968750 -107.06264496]
[114.67968750 -122.06264496]
[114.67968750 -137.06265259]
[114.67968750 -152.06265259]
[114.12147522 -167.05226135]
[113.00582886 -182.01071167]
[111.89017487 -196.96916199]
[110.55194092 -211.90934753]
[108.99141693 -226.82795715]
[107.43089294 -241.74656677]
[105.87037659 -256.66516113]
[104.30985260 -271.58377075]
[102.74932861 -286.50238037]
[87.91674805 -289.41546631]
[74.60257721 -296.57257080]
[63.99069977 -307.33731079]
[57.02471542 -320.75247192]
[54.32403564 -335.62518311]
[56.12879944 -350.63299561]
[62.27853394 -364.44140625]
[72.22640991 -375.82257080]
[85.08786011 -383.76452637]
[99.71926117 -387.56103516]
[114.81959534 -386.87454224]
[129.04615784 -381.76605225]
[141.13392639 -372.68984985]
[150.00805664 -360.45300293]
[154.87948608 -346.14352417]
[155.31503296 -331.03387451]
[151.27597046 -316.46755981]
[143.12147522 -303.73980713]
[131.57659912 -293.98239136]
[117.66793060 -288.06289673]
[119.22845459 -273.14428711]
[120.78897858 -258.22567749]
[122.34950256 -243.30708313]
[123.91002655 -228.38847351]
[125.47055054 -213.46987915]
[128.55065918 -209.81994629]
[129.37062073 -204.19636536]
[126.84863281 -198.08480835]
[127.96427917 -183.12635803]
[129.07992554 -168.16790771]
[140.69700623 -177.65702820]
[155.39051819 -174.64027405]
[162.32894897 -161.34147644]
[156.39755249 -147.56401062]
[141.96871948 -143.46411133]
[129.67968750 -152.06265259]
[129.67968750 -137.06265259]
[129.67968750 -122.06264496]
[129.67968750 -107.06264496]
[131.90095520 -104.32434082]
[132.90625000 -100.37409973]
[132.14042664 -95.79515076]
[129.32974243 -91.39660645]
[128.65995789 -76.41156769]
[127.99018097 -61.42652512]
[127.32038879 -46.44148636]
[126.65060425 -31.45644951]
[128.44059753 -29.29911423]
[129.48388672 -26.30275726]
[129.45661926 -22.74822998]
[128.14251709 -19.02832985]
[125.46852112 -15.60725784]
[123.90800476 -0.68865299]
[122.34748077 14.22995186]
[120.78695679 29.14855576]
[133.09107971 20.56902122]
[147.88165283 23.06684113]
[156.68594360 35.21115494]
[154.46047974 50.04514313]
[142.48008728 59.07122803]
[127.60768890 57.11885834]
[118.36312866 45.30735016]
[115.47785187 60.02724075]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.24204254 142.85803223]
[104.18036652 157.88877869]
[94.13944244 168.89010620]
[91.25417328 183.61000061]
[88.36889648 198.32987976]
[90.06223297 203.26747131]
[89.72590637 207.89782715]
[87.81682587 211.49926758]
[85.01210785 213.63607788]
[81.47243500 228.21244812]
[77.93276215 242.78881836]
[74.39308929 257.36520386]
[70.96202850 271.96752930]
[67.63977051 286.59497070]
[64.31751251 301.22244263]
[60.99525452 315.84991455]
[57.67299271 330.47735596]
[54.35073471 345.10482788]
[51.02847290 359.73226929]
[48.58274841 374.53155518]
[47.02222443 389.45016479]
[45.46170044 404.36877441]
[43.90117645 419.28738403]
[58.60707474 422.30453491]
[72.94641876 426.74862671]
[86.78111267 432.57684326]
[99.97791290 439.73306274]
[112.40972900 448.14831543]
[123.95682526 457.74160767]
[134.50799561 468.42056274]
[143.96163940 480.08227539]
[152.22668457 492.61444092]
[159.22355652 505.89642334]
[164.88485718 519.80023193]
[169.15605164 534.19201660]
[171.99603271 548.93316650]
[173.37742615 563.88171387]
[173.28694153 578.89367676]
[171.72544861 593.82446289]
[168.70797729 608.53027344]
[164.26359558 622.86956787]
[158.43510437 636.70410156]
[151.27864075 649.90075684]
[142.86312866 662.33239746]
[133.26959229 673.87933350]
[122.59046173 684.43029785]
[110.92855835 693.88366699]
[98.39620209 702.14849854]
[85.11409760 709.14508057]
[71.21015167 714.80609131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 183]
[36 182]
[37 181]
[38 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 175]
[52 174]
[53 173]
[55 172]
[56 171]
[57 170]
[58 169]
[59 165]
[60 164]
[61 163]
[63 161]
[64 160]
[65 159]
[67 157]
[68 156]
[69 155]
[70 154]
[71 147]
[72 146]
[73 145]
[74 144]
[75 139]
[76 138]
[77 137]
[78 136]
[79 135]
[80 131]
[81 130]
[82 129]
[83 128]
[84 122]
[85 121]
[86 120]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
