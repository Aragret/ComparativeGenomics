%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[165.42474365 472.21109009]
[164.10774231 457.24884033]
[164.67645264 442.23953247]
[167.12188721 427.41983032]
[171.40550232 413.02352905]
[177.45970154 399.27761841]
[185.18904114 386.39892578]
[194.47158813 374.59057617]
[205.16096497 364.03875732]
[217.08856201 354.90994263]
[230.06628418 347.34805298]
[224.19732666 333.54388428]
[218.32836914 319.73971558]
[212.45941162 305.93551636]
[206.59045410 292.13134766]
[200.72148132 278.32717896]
[193.06088257 265.43084717]
[183.74600220 253.67359924]
[174.43112183 241.91635132]
[160.46296692 236.74530029]
[157.95779419 221.12368774]
[148.64289856 209.36643982]
[139.32801819 197.60919189]
[130.01313782 185.85192871]
[120.69825745 174.09468079]
[111.38336945 162.33743286]
[114.50859070 177.00825500]
[114.75202179 192.00627136]
[112.10455322 206.77079773]
[106.66516876 220.74981689]
[98.63722992 233.42073059]
[88.32085419 244.30982971]
[76.10173798 253.01000977]
[62.43669891 259.19601440]
[47.83660889 262.63656616]
[32.84730911 263.20306396]
[18.02918625 260.87429810]
[3.93622136 255.73733521]
[-8.90470695 247.98423767]
[-20.01353073 237.90484619]
[-28.97493935 225.87599182]
[-35.45390320 212.34739685]
[-39.20820236 197.82481384]
[-40.09747696 182.85119629]
[-38.08848572 167.98634338]
[-33.25633240 153.78598022]
[-25.78167152 140.78100586]
[-15.94394970 129.45761108]
[-4.11095619 120.23914337]
[9.27492332 113.47022247]
[23.71324921 109.40393066]
[38.66423035 108.19226837]
[53.56892014 109.88055420]
[67.87008667 114.40565491]
[81.03308105 121.59840393]
[92.56578064 131.18989563]
[102.03366852 142.81646729]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.19432831 104.27426147]
[78.34677124 117.05767822]
[67.11959839 127.00508118]
[53.48409271 133.25590515]
[38.61984634 135.26940918]
[23.81276894 132.87138367]
[10.34382248 126.26931000]
[-0.62179458 116.03430939]
[-8.13544750 103.05181885]
[-11.54712963 88.44495392]
[-10.56169701 73.47735596]
[-5.26439857 59.44387436]
[3.88649559 47.55854416]
[16.09934235 38.84955978]
[30.31760788 34.07034302]
[45.31126785 33.63433838]
[59.78322601 37.57926559]
[72.48150635 45.56385422]
[82.30758667 56.89735031]
[88.41046906 70.59590912]
[89.30328369 55.62250137]
[90.19609833 40.64909744]
[91.08892059 25.67568970]
[91.98173523 10.70228481]
[92.87454987 -4.27112150]
[81.05678558 -14.15275192]
[77.36679077 -28.92560959]
[83.01631165 -42.87361526]
[95.64452362 -50.72639847]
[96.53734589 -65.69980621]
[97.43016052 -80.67321014]
[98.32297516 -95.64661407]
[91.42079163 -109.88285828]
[99.90191650 -122.12702942]
[100.79473114 -137.10043335]
[86.47528076 -141.85604858]
[73.87513733 -150.15657043]
[63.85338593 -161.43606567]
[57.09333801 -174.92547607]
[54.05589676 -189.70506287]
[54.94816208 -204.76713562]
[59.70930099 -219.08474731]
[68.01468658 -231.68170166]
[79.29804993 -241.69908142]
[92.79006958 -248.45393372]
[107.57083130 -251.48565674]
[122.63256836 -250.58758545]
[136.94833374 -245.82090759]
[149.54206848 -237.51066589]
[159.55511475 -226.22343445]
[166.30473328 -212.72880554]
[169.33076477 -197.94688416]
[168.42686462 -182.88548279]
[163.65467834 -168.57156372]
[155.33956909 -155.98103333]
[144.04846191 -145.97236633]
[130.55123901 -139.22793579]
[115.76813507 -136.20762634]
[114.87532043 -121.23421478]
[121.84136200 -108.06897736]
[113.29637909 -94.75379944]
[112.40356445 -79.78039551]
[111.51074982 -64.80699158]
[110.61793518 -49.83358383]
[122.22351074 -40.53581619]
[126.17555237 -26.01530075]
[120.75622559 -11.78560257]
[107.84795380 -3.37830544]
[106.95513916 11.59510040]
[106.06232452 26.56850624]
[105.16950989 41.54191208]
[104.27668762 56.51531601]
[103.38387299 71.48872375]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.66112518 139.49420166]
[123.14062500 153.02255249]
[132.45550537 164.77980042]
[141.77038574 176.53704834]
[151.08526611 188.29429626]
[160.40016174 200.05155945]
[169.71504211 211.80880737]
[184.34945679 217.82081604]
[186.18836975 232.60145569]
[195.50325012 244.35871887]
[204.81814575 256.11596680]
[202.07159424 241.36955261]
[203.95402527 226.48814392]
[210.28599548 212.89012146]
[220.46398926 201.87158203]
[233.51791382 194.48271179]
[248.20353699 191.42781067]
[263.12112427 192.99801636]
[276.84881592 199.04368591]
[288.07821655 208.98858643]
[295.73895264 221.88482666]
[299.10089111 236.50321960]
[297.84359741 251.45042419]
[292.08688354 265.30178833]
[282.37945557 276.73709106]
[269.64654541 284.66635132]
[255.10180664 288.33383179]
[240.13153076 287.38998413]
[226.16259766 281.92477417]
[214.52566528 272.45822144]
[220.39462280 286.26239014]
[226.26358032 300.06655884]
[232.13253784 313.87075806]
[238.00151062 327.67492676]
[243.87046814 341.47909546]
[258.32037354 337.37988281]
[273.17010498 335.12411499]
[288.18548584 334.74731445]
[303.12966919 336.25549316]
[317.76696777 339.62481689]
[331.86654663 344.80215454]
[345.20605469 351.70587158]
[357.57504272 360.22708130]
[368.77850342 370.23135376]
[378.63970947 381.56097412]
[387.00314331 394.03720093]
[393.73687744 407.46328735]
[398.73474121 421.62750244]
[401.91790771 436.30639648]
[403.23617554 451.26855469]
[402.66873169 466.27792358]
[400.22454834 481.09780884]
[395.94213867 495.49447632]
[389.88909912 509.24090576]
[382.16082764 522.12023926]
[372.87927246 533.92938232]
[362.19079590 544.48211670]
[350.26397705 553.61193848]
[337.28686523 561.17486572]
[323.46420288 567.05169678]
[309.01394653 571.14971924]
[294.16403198 573.40423584]
[279.14862061 573.77972412]
[264.20458984 572.27032471]
[249.56755066 568.89978027]
[235.46839905 563.72125244]
[222.12948608 556.81640625]
[209.76119995 548.29418945]
[198.55857849 538.28894043]
[188.69833374 526.95849609]
[180.33596802 514.48156738]
[173.60334778 501.05490112]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 173]
[12 172]
[13 171]
[14 170]
[15 169]
[16 168]
[17 149]
[18 148]
[19 147]
[21 145]
[22 144]
[23 143]
[24 142]
[25 141]
[26 140]
[57 139]
[58 138]
[59 137]
[61 135]
[81 134]
[82 133]
[83 132]
[84 131]
[85 130]
[86 129]
[90 125]
[91 124]
[92 123]
[93 122]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
