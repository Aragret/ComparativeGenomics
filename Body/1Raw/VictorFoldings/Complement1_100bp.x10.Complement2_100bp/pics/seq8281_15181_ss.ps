%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[63.22141266 537.63378906]
[51.01424026 528.84991455]
[40.51796341 518.07965088]
[32.05154419 505.65020752]
[25.87227440 491.93933105]
[22.16792870 477.36370850]
[21.05108070 462.36624146]
[22.55566978 447.40270996]
[26.63597488 432.92782593]
[33.16799927 419.38146973]
[41.95323944 407.17529297]
[52.72472382 396.68023682]
[65.15512085 388.21524048]
[78.86668396 382.03750610]
[93.44273376 378.33483887]
[92.32708740 363.37637329]
[91.21143341 348.41790771]
[90.09578705 333.45947266]
[88.98014069 318.50100708]
[86.94647980 316.57165527]
[85.55451965 313.72052002]
[85.15920258 310.18792725]
[86.02194977 306.33822632]
[88.27046967 302.62365723]
[88.04714203 287.62530518]
[87.82381439 272.62698364]
[84.58107758 265.98571777]
[87.71047974 257.40405273]
[87.71047974 242.40406799]
[79.97318268 229.67678833]
[87.71047974 215.87661743]
[87.71047974 200.87661743]
[85.48921967 198.13832092]
[84.48391724 194.18807983]
[85.24974823 189.60911560]
[88.06041718 185.21057129]
[88.73020935 170.22554016]
[89.39999390 155.24049377]
[90.06977844 140.25546265]
[90.73956299 125.27042389]
[91.40934753 110.28538513]
[84.18249512 123.42968750]
[74.41331482 134.81227112]
[62.51719666 143.94912720]
[48.99996185 150.45178223]
[34.43637848 154.04370117]
[19.44569016 154.57218933]
[4.66531372 152.01475525]
[-9.27628422 146.48014832]
[-21.78629875 138.20370483]
[-32.33279800 127.53734589]
[-40.46733856 114.93460083]
[-45.84403992 100.93134308]
[-48.23427582 86.12300873]
[-47.53641510 71.13925171]
[-43.78013229 56.61719131]
[-37.12514496 43.17430496]
[-27.85442734 31.38219833]
[-16.36217308 21.74227524]
[-3.13704133 14.66443062]
[11.25862980 10.44961834]
[26.21273041 9.27705288]
[41.08940125 11.19659424]
[55.25608063 16.12662125]
[68.11039734 23.85750771]
[79.10577393 34.06053162]
[87.77468109 46.30185318]
[93.74851990 60.06097031]
[96.77326965 74.75283051]
[96.72030640 89.75291443]
[103.40050507 76.32254028]
[110.08069611 62.89216232]
[116.76089478 49.46178436]
[107.48020935 35.77746201]
[106.37327576 19.37410164]
[113.64775085 4.73514986]
[127.23335266 -4.18602085]
[143.37008667 -5.03364038]
[149.84957886 -18.56198692]
[148.83259583 -34.35047150]
[161.30854797 -42.48681641]
[167.78804016 -56.01515961]
[174.26753235 -69.54350281]
[180.74702454 -83.07185364]
[187.02438354 -96.69516754]
[192.68717957 -110.58519745]
[197.93389893 -124.63766479]
[203.18061829 -138.69013977]
[208.42733765 -152.74261475]
[213.67405701 -166.79507446]
[218.92076111 -180.84754944]
[224.16748047 -194.90002441]
[229.41419983 -208.95249939]
[216.11177063 -215.92733765]
[203.78843689 -224.51446533]
[192.63856506 -234.57844543]
[182.83799744 -245.96054077]
[174.54132080 -258.48126221]
[167.87936401 -271.94311523]
[162.95719910 -286.13378906]
[159.85246277 -300.82949829]
[158.61412048 -315.79846191]
[159.26170349 -330.80459595]
[161.78500366 -345.61120605]
[166.14421082 -359.98483276]
[172.27056885 -373.69869995]
[180.06748962 -386.53659058]
[189.41197205 -398.29602051]
[200.15664673 -408.79150391]
[212.13206482 -417.85751343]
[225.14935303 -425.35107422]
[239.00320435 -431.15399170]
[253.47512817 -435.17477417]
[268.33688354 -437.34997559]
[283.35406494 -437.64532471]
[298.28985596 -436.05612183]
[312.90869141 -432.60745239]
[326.97998047 -427.35369873]
[340.28182983 -420.37771606]
[352.60443115 -411.78958130]
[363.75344849 -401.72463989]
[373.55307007 -390.34173584]
[381.84869385 -377.82031250]
[388.50952148 -364.35791016]
[393.43048096 -350.16680908]
[396.53399658 -335.47082520]
[397.77105713 -320.50177002]
[397.12222290 -305.49569702]
[394.59768677 -290.68927002]
[390.23727417 -276.31604004]
[384.10974121 -262.60266113]
[376.31173706 -249.76542664]
[366.96627808 -238.00680542]
[356.22070312 -227.51222229]
[344.24453735 -218.44721985]
[331.22662354 -210.95475769]
[317.37228394 -205.15299988]
[302.90002441 -201.13343811]
[288.03808594 -198.95948792]
[273.02084351 -198.66542053]
[258.08520508 -200.25587463]
[243.46667480 -203.70578003]
[238.21995544 -189.65330505]
[232.97323608 -175.60083008]
[227.72651672 -161.54835510]
[222.47979736 -147.49589539]
[217.23307800 -133.44342041]
[211.98637390 -119.39094543]
[206.73965454 -105.33847809]
[207.77925110 -102.73513794]
[207.85028076 -99.56314087]
[206.73095703 -96.18933868]
[204.33631897 -93.05401611]
[200.73965454 -90.62133026]
[201.59381104 -85.92245483]
[199.50523376 -80.63710785]
[194.27537537 -76.59235382]
[187.79588318 -63.06401062]
[181.31639099 -49.53566360]
[174.83688354 -36.00732040]
[176.31732178 -21.18647003]
[163.37792969 -12.08248997]
[156.89842224 1.44585538]
[165.34172058 12.18028069]
[168.35072327 25.56962776]
[165.28259277 39.01342773]
[156.68051147 49.87540054]
[144.17851257 56.00041962]
[130.19126892 56.14197922]
[123.51107788 69.57235718]
[116.83087921 83.00273132]
[110.15068817 96.43310547]
[106.39438629 110.95516968]
[105.72460175 125.94020844]
[105.05481720 140.92524719]
[104.38503265 155.91027832]
[103.71524811 170.89532471]
[103.04545593 185.88035583]
[102.71047974 200.87661743]
[102.71047974 215.87661743]
[110.44778442 229.67678833]
[102.71047974 242.40406799]
[102.71047974 257.40405273]
[102.82215118 272.40365601]
[103.04547882 287.40197754]
[103.26880646 302.40032959]
[103.93859100 317.38537598]
[105.05423737 332.34381104]
[106.16989136 347.30227661]
[107.28553772 362.26071167]
[108.40118408 377.21917725]
[123.36522675 378.71868896]
[137.84150696 382.79406738]
[151.39007568 389.32147217]
[163.59924316 398.10256958]
[174.09796143 408.87048340]
[182.56719971 421.29797363]
[188.74957275 435.00744629]
[192.45722961 449.58224487]
[193.57748413 464.57943726]
[192.07627869 479.54330444]
[187.99926758 494.01913452]
[181.47030640 507.56695557]
[172.68783569 519.77514648]
[161.91873169 530.27264404]
[149.49026489 538.74047852]
[135.78010559 544.92126465]
[121.20488739 548.62725830]
[106.20755768 549.74584961]
[91.24385834 548.24291992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 191]
[16 190]
[17 189]
[18 188]
[19 187]
[24 186]
[25 185]
[26 184]
[28 183]
[29 182]
[31 180]
[32 179]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 173]
[70 172]
[71 171]
[72 170]
[73 169]
[78 163]
[79 162]
[81 160]
[82 159]
[83 158]
[84 157]
[85 154]
[86 149]
[87 148]
[88 147]
[89 146]
[90 145]
[91 144]
[92 143]
[93 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
