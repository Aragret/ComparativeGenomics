%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[66.88708496 504.47586060]
[60.96486282 518.38336182]
[51.20516968 529.92633057]
[38.47583008 538.07836914]
[23.90872574 542.11456299]
[8.79915524 541.67602539]
[-5.50934887 536.80181885]
[-17.74448395 527.92523193]
[-26.81830978 515.83569336]
[-31.92398834 501.60815430]
[-32.60752487 486.50769043]
[-28.80814362 471.87701416]
[-20.86367989 459.01712036]
[-9.48054981 449.07150269]
[4.32906580 442.92446899]
[19.33722496 441.12265015]
[22.00302124 426.36141968]
[24.66881561 411.60021973]
[11.04562378 417.87783813]
[-2.42425156 411.27764893]
[-5.81131935 396.66506958]
[3.38124061 384.81192017]
[18.37701607 384.45593262]
[28.12124825 395.85791016]
[31.87754822 381.33584595]
[35.52563477 366.78622437]
[39.06530762 352.20986938]
[42.60498047 337.63348389]
[38.08955383 323.43981934]
[48.86487961 311.85522461]
[52.40455246 297.27883911]
[55.94422531 282.70248413]
[59.48389435 268.12609863]
[63.02356720 253.54971313]
[61.34792328 249.07743835]
[62.46394348 243.50505066]
[66.89172363 238.59523010]
[70.86381531 224.13070679]
[74.83591461 209.66618347]
[78.80800629 195.20166016]
[82.78010559 180.73713684]
[85.55571747 165.99618530]
[87.11624146 151.07757568]
[80.74500275 137.61441040]
[89.87602234 124.69407654]
[91.43653870 109.77547455]
[92.55219269 94.81701660]
[93.22197723 79.83197784]
[93.89176178 64.84693909]
[94.56154633 49.86190414]
[95.23133087 34.87686539]
[87.11917877 24.84911346]
[87.98554230 12.38182831]
[96.82187653 4.12072754]
[97.71469116 -10.85267830]
[98.60750580 -25.82608414]
[99.50032043 -40.79948807]
[100.17010498 -55.78452682]
[100.61671448 -70.77787781]
[101.06331635 -85.77122498]
[101.50992584 -100.76457977]
[101.95652771 -115.75792694]
[94.65371704 -102.65567780]
[83.85497284 -92.24476624]
[70.49450684 -85.42581940]
[55.72813034 -82.78876495]
[40.83327866 -84.56172943]
[27.09850883 -90.59133148]
[15.71201324 -100.35594177]
[7.65883923 -113.01084137]
[3.63566732 -127.46124268]
[3.99054146 -142.45704651]
[8.69276142 -156.70095825]
[17.33553886 -168.96075439]
[29.17118645 -178.17581177]
[43.17580414 -183.54896545]
[58.13784790 -184.61535645]
[72.76295471 -181.28276062]
[85.78590393 -173.83946228]
[96.08008575 -162.92938232]
[102.75494385 -149.49635315]
[105.23297882 -134.70597839]
[102.11576080 -150.21705627]
[113.39283752 -159.94726562]
[118.00684357 -174.22000122]
[122.62085724 -188.49272156]
[119.50363922 -204.00379944]
[130.78071594 -213.73400879]
[135.39472961 -228.00674438]
[140.00872803 -242.27946472]
[144.62274170 -256.55221558]
[149.23675537 -270.82495117]
[148.89878845 -279.95312500]
[154.02716064 -285.27490234]
[158.85316467 -299.47735596]
[163.67915344 -313.67984009]
[168.50515747 -327.88229370]
[173.33116150 -342.08474731]
[160.08464050 -349.19668579]
[148.18948364 -358.39205933]
[137.97016907 -369.42001343]
[129.70550537 -381.97967529]
[123.62094879 -395.72842407]
[119.88249969 -410.29116821]
[118.59214020 -425.27066040]
[119.78507233 -440.25820923]
[123.42875671 -454.84497070]
[129.42378235 -468.63299561]
[137.60659790 -481.24612427]
[147.75399780 -492.34027100]
[159.58911133 -501.61279297]
[172.78910828 -508.81072998]
[186.99385071 -513.73773193]
[201.81584167 -516.25927734]
[216.85072327 -516.30676270]
[231.68832397 -513.87872314]
[245.92387390 -509.04147339]
[259.16900635 -501.92697144]
[271.06240845 -492.72930908]
[281.27960205 -481.69937134]
[289.54183960 -469.13812256]
[295.62374878 -455.38821411]
[299.35937500 -440.82473755]
[300.64685059 -425.84500122]
[299.45104980 -410.85766602]
[295.80456543 -396.27163696]
[289.80688477 -382.48477173]
[281.62161255 -369.87319946]
[271.47210693 -358.78100586]
[259.63519287 -349.51074219]
[246.43380737 -342.31536865]
[232.22811890 -337.39114380]
[217.40563965 -334.87240601]
[202.37074280 -334.82785034]
[187.53361511 -337.25872803]
[182.70761108 -323.05627441]
[177.88160706 -308.85382080]
[173.05561829 -294.65136719]
[168.22961426 -280.44891357]
[163.50949097 -266.21093750]
[158.89547729 -251.93820190]
[154.28146362 -237.66546631]
[149.66744995 -223.39273071]
[145.05345154 -209.11999512]
[148.50068665 -194.62980652]
[136.89358521 -183.87872314]
[132.27958679 -169.60598755]
[127.66557312 -155.33325195]
[131.11282349 -140.84306335]
[119.50571442 -130.09197998]
[116.94988251 -115.31132507]
[116.50327301 -100.31797028]
[116.05667114 -85.32462311]
[115.61006165 -70.33127594]
[115.16345978 -55.33792114]
[117.72832489 -51.30921555]
[117.78961945 -45.62649918]
[114.47372437 -39.90667343]
[113.58090973 -24.93326759]
[112.68809509 -9.95986271]
[111.79528046 5.01354361]
[120.48384857 20.26069641]
[110.21636963 35.54664993]
[109.54658508 50.53168869]
[108.87680054 65.51672363]
[108.20701599 80.50176239]
[107.53723145 95.48680115]
[109.39597321 97.90229034]
[110.41690063 101.04748535]
[110.32805634 104.61337280]
[108.97542572 108.19480133]
[106.35514832 111.33599854]
[104.79462433 126.25460052]
[111.05423737 140.78483582]
[102.03484344 152.63809204]
[100.47431946 167.55670166]
[110.17512512 156.11579895]
[124.04676056 150.40811157]
[138.99026489 151.70874023]
[151.66722107 159.72714233]
[159.24557495 172.67198181]
[160.03228760 187.65133667]
[153.85160828 201.31878662]
[142.08432007 210.62098694]
[127.35926819 213.47981262]
[112.96606445 209.25657654]
[102.12018585 198.89477539]
[97.24462891 184.70924377]
[93.27252960 199.17376709]
[89.30043793 213.63829041]
[85.32833862 228.10281372]
[81.35624695 242.56733704]
[77.59994507 257.08938599]
[74.06027222 271.66577148]
[70.52059937 286.24215698]
[66.98092651 300.81851196]
[63.44125366 315.39489746]
[67.70349884 330.63116455]
[57.18135834 341.17315674]
[53.64168549 355.74954224]
[50.10201263 370.32589722]
[51.11796188 379.40365601]
[46.39960861 385.09216309]
[42.64330673 399.61422729]
[39.43003464 414.26599121]
[36.76423645 429.02722168]
[34.09844208 443.78845215]
[47.52831268 450.72601318]
[58.31548309 461.31509399]
[65.50075531 474.61407471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 207]
[17 206]
[18 205]
[24 204]
[25 203]
[26 201]
[27 200]
[28 199]
[30 197]
[31 196]
[32 195]
[33 194]
[34 193]
[37 192]
[38 191]
[39 190]
[40 189]
[41 188]
[42 176]
[43 175]
[45 173]
[46 172]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[54 161]
[55 160]
[56 159]
[57 158]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[82 150]
[84 148]
[85 147]
[86 146]
[88 144]
[89 143]
[90 142]
[91 141]
[92 140]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
