%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[131.25946045 501.18426514]
[120.91675568 490.31451416]
[111.21146393 478.87200928]
[102.17523956 466.89410400]
[93.83755493 454.41989136]
[86.22560883 441.48999023]
[79.36423492 428.14666748]
[73.27580261 414.43334961]
[67.98017883 400.39483643]
[63.49464035 386.07690430]
[59.83380890 371.52624512]
[57.00963211 356.79031372]
[55.03131866 341.91720581]
[53.90532303 326.95541382]
[53.63531876 311.95370483]
[54.22218323 296.96109009]
[55.66400528 282.02639771]
[57.95608139 267.19839478]
[61.09093475 252.52542114]
[65.05834198 238.05534363]
[69.84535980 223.83537292]
[75.43637085 209.91186523]
[81.81314087 196.33024597]
[88.95487213 183.13482666]
[96.83827209 170.36865234]
[105.43762207 158.07333374]
[114.72486877 146.28900146]
[124.66973114 135.05409241]
[114.02371979 124.48705292]
[103.37771606 113.91999817]
[89.90921021 110.16619110]
[86.05523682 96.72600555]
[75.40923309 86.15895844]
[64.76322174 75.59191132]
[54.11721420 65.02486420]
[38.87206650 60.79448318]
[35.28978729 46.33707809]
[24.64377594 35.77003098]
[13.99776840 25.20298386]
[2.63193679 35.00329971]
[-9.45917130 43.89337540]
[-22.20283699 51.81974030]
[-35.52241898 58.73472595]
[-49.33781052 64.59674835]
[-63.56592560 69.37054443]
[-78.12118530 73.02740479]
[-92.91606140 75.54534149]
[-107.86156464 76.90921021]
[-122.86782074 77.11080933]
[-137.84457397 76.14892578]
[-152.70175171 74.02933502]
[-167.34999084 70.76479340]
[-181.70121765 66.37493896]
[-195.66909790 60.88616180]
[-209.16963196 54.33148193]
[-222.12162781 46.75031662]
[-234.44718933 38.18825912]
[-246.07218933 28.69680595]
[-256.92669678 18.33304024]
[-266.94546509 7.15928888]
[-276.06823730 -4.75724411]
[-284.24008179 -17.34489059]
[-291.41192627 -30.52794838]
[-297.54061890 -44.22712708]
[-302.58929443 -58.36004257]
[-306.52755737 -72.84169769]
[-309.33178711 -87.58499146]
[-310.98504639 -102.50125885]
[-311.47747803 -117.50078583]
[-310.80603027 -132.49336243]
[-308.97479248 -147.38882446]
[-305.99478149 -162.09759521]
[-301.88388062 -176.53120422]
[-296.66687012 -190.60284424]
[-290.37509155 -204.22787476]
[-283.04638672 -217.32438660]
[-274.72482300 -229.81356812]
[-265.46044922 -241.62034607]
[-255.30900574 -252.67370605]
[-244.33154297 -262.90713501]
[-232.59405518 -272.25915527]
[-220.16716003 -280.67346191]
[-207.12557983 -288.09945679]
[-193.54776001 -294.49249268]
[-179.51535034 -299.81411743]
[-165.11274719 -304.03234863]
[-150.42657471 -307.12179565]
[-135.54515076 -309.06387329]
[-120.55798340 -309.84689331]
[-105.55520630 -309.46615601]
[-90.62704468 -307.92398071]
[-75.86328888 -305.22958374]
[-61.35271835 -301.39923096]
[-47.18260956 -296.45590210]
[-33.43818283 -290.42938232]
[-20.20210075 -283.35586548]
[-7.55396748 -275.27795410]
[4.43014956 -266.24417114]
[15.67817402 -256.30886841]
[26.12245941 -245.53178406]
[35.70019150 -233.97776794]
[44.35376740 -221.71627808]
[52.03114700 -208.82109070]
[58.68614960 -195.36972046]
[64.27875519 -181.44308472]
[68.77532959 -167.12493896]
[72.14882660 -152.50140381]
[74.37895966 -137.66043091]
[75.45231628 -122.69124603]
[75.36243439 -107.68390656]
[74.10986328 -92.72866058]
[71.70214081 -77.91545105]
[68.15373230 -63.33337021]
[63.48598862 -49.07011414]
[57.72697830 -35.21146774]
[50.91133881 -21.84077454]
[43.08006287 -9.03845406]
[34.28024673 3.11850047]
[24.56481552 14.55697536]
[35.21082306 25.12402344]
[45.85683441 35.69107056]
[60.34050369 39.16562653]
[64.68425751 54.37885666]
[75.33026886 64.94589996]
[85.97628021 75.51294708]
[96.62228394 86.08000183]
[110.09078979 89.83380890]
[113.94476318 103.27399445]
[124.59076691 113.84104156]
[135.23678589 124.40808868]
[146.39733887 114.37986755]
[158.11221313 105.00514221]
[170.34315491 96.31450653]
[183.05030823 88.33628845]
[196.19218445 81.09651947]
[209.72595215 74.61881256]
[223.60745239 68.92430115]
[237.79139709 64.03156281]
[252.23153687 59.95654297]
[266.88076782 56.71254349]
[281.69131470 54.31014633]
[296.61483765 52.75718307]
[311.60269165 52.05872345]
[326.60595703 52.21704102]
[341.57574463 53.23162079]
[356.46316528 55.09915924]
[371.21969604 57.81355667]
[385.79721069 61.36596298]
[400.14816284 65.74478912]
[414.22570801 70.93575287]
[427.98394775 76.92192841]
[441.37799072 83.68378448]
[454.36419678 91.19925690]
[466.90014648 99.44384766]
[478.94497681 108.39065552]
[490.45941162 118.01049805]
[501.40585327 128.27200317]
[511.74865723 139.14167786]
[521.45404053 150.58410645]
[530.49035645 162.56193542]
[538.82812500 175.03610229]
[546.44018555 187.96591187]
[553.30169678 201.30920410]
[559.39019775 215.02246094]
[564.68591309 229.06092834]
[569.17156982 243.37882996]
[572.83251953 257.92947388]
[575.65679932 272.66537476]
[577.63525391 287.53848267]
[578.76135254 302.50027466]
[579.03149414 317.50195312]
[578.44476318 332.49456787]
[577.00305176 347.42926025]
[574.71105957 362.25729370]
[571.57635498 376.93029785]
[567.60906982 391.40039062]
[562.82214355 405.62042236]
[557.23126221 419.54397583]
[550.85455322 433.12564087]
[543.71295166 446.32110596]
[535.82965088 459.08734131]
[527.23040771 471.38272095]
[517.94323730 483.16714478]
[507.99847412 494.40213013]
[497.42852783 505.05105591]
[486.26788330 515.07916260]
[474.55294800 524.45379639]
[462.32192993 533.14434814]
[449.61471558 541.12249756]
[436.47277832 548.36212158]
[422.93896484 554.83972168]
[409.05740356 560.53411865]
[394.87341309 565.42675781]
[380.43325806 569.50164795]
[365.78399658 572.74554443]
[350.97344971 575.14782715]
[336.04989624 576.70068359]
[321.06204224 577.39904785]
[306.05877686 577.24060059]
[291.08901978 576.22589111]
[276.20159912 574.35827637]
[261.44506836 571.64373779]
[246.86758423 568.09118652]
[232.51669312 563.71228027]
[218.43917847 558.52117920]
[204.68098450 552.53491211]
[191.28698730 545.77294922]
[178.30085754 538.25738525]
[165.76496887 530.01269531]
[153.72019958 521.06579590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 130]
[29 129]
[30 128]
[32 126]
[33 125]
[34 124]
[35 123]
[37 121]
[38 120]
[39 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
