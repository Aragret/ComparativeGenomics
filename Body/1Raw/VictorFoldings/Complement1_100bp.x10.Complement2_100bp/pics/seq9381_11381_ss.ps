%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[84.83997345 607.30505371]
[69.84004211 606.63458252]
[55.00054550 604.34631348]
[40.49544907 600.46691895]
[26.49483109 595.04199219]
[13.16283417 588.13507080]
[0.65577173 579.82720947]
[-10.87971783 570.21582031]
[-21.30838585 559.41345215]
[-30.50796318 547.54693604]
[-38.37059021 534.75524902]
[-44.80407715 521.18847656]
[-49.73300171 507.00564575]
[-53.09956741 492.37304688]
[-54.86430740 477.46218872]
[-55.00652695 462.44796753]
[-53.52456665 447.50637817]
[-50.43579483 432.81262207]
[-45.77642441 418.53897095]
[-39.60109329 404.85275269]
[-31.98219299 391.91442871]
[-23.00905800 379.87576294]
[-12.78689289 368.87780762]
[-1.43554544 359.04959106]
[10.91189480 350.50628662]
[24.11065865 343.34808350]
[38.00600052 337.65890503]
[52.43500137 333.50546265]
[67.22849274 330.93643188]
[82.21302795 329.98196411]
[82.88281250 314.99691772]
[83.55259705 300.01187134]
[76.39131927 286.95181274]
[84.73710632 273.51089478]
[77.57582855 260.45083618]
[85.92162323 247.00990295]
[86.59140778 232.02487183]
[87.26119232 217.03982544]
[75.51847076 207.91587830]
[71.35067749 193.45581055]
[76.55754089 179.14700317]
[89.33921051 170.54846191]
[82.17793274 157.48838806]
[90.52372742 144.04747009]
[91.19351196 129.06243896]
[91.86329651 114.07740021]
[83.75152588 99.39491272]
[92.93286133 85.35641479]
[90.06034851 76.68540192]
[93.49938202 70.14362335]
[86.38600922 56.01173019]
[94.68389893 43.64263916]
[86.57174683 33.61488724]
[87.43810272 21.14760399]
[96.27443695 12.88650322]
[97.16725159 -2.08690214]
[98.06007385 -17.06030846]
[98.95288849 -32.03371429]
[92.05070496 -46.26995087]
[100.53182983 -58.51412582]
[101.42464447 -73.48753357]
[102.31745911 -88.46093750]
[103.21027374 -103.43434143]
[104.10308838 -118.40774536]
[104.99591064 -133.38114929]
[98.09372711 -147.61738586]
[106.57485199 -159.86157227]
[107.46766663 -174.83497620]
[108.36048126 -189.80838013]
[109.25329590 -204.78178406]
[110.14611053 -219.75518799]
[95.29328156 -221.91555786]
[80.67716980 -225.32777405]
[66.40309143 -229.96723938]
[52.57389832 -235.80050659]
[39.28922272 -242.78558350]
[26.64478683 -250.87213135]
[14.73169613 -260.00186157]
[3.63578582 -270.10900879]
[-6.56299734 -281.12075806]
[-15.79116917 -292.95776367]
[-23.98224068 -305.53475952]
[-31.07719231 -318.76107788]
[-37.02490234 -332.54144287]
[-41.78252029 -346.77655029]
[-45.31576538 -361.36389160]
[-47.59918213 -376.19830322]
[-48.61631393 -391.17291260]
[-48.35983658 -406.17987061]
[-46.83159256 -421.11096191]
[-44.04259872 -435.85870361]
[-40.01294708 -450.31677246]
[-34.77167130 -464.38101196]
[-28.35653877 -477.95010376]
[-20.81376839 -490.92623901]
[-12.19770908 -503.21597290]
[-2.57043886 -514.73071289]
[7.99867535 -525.38751221]
[19.43348312 -535.10961914]
[31.65159225 -543.82696533]
[44.56497192 -551.47668457]
[58.08057785 -558.00372314]
[72.10102844 -563.36102295]
[86.52530670 -567.51000977]
[101.24948120 -570.42077637]
[116.16745758 -572.07232666]
[131.17176819 -572.45281982]
[146.15428162 -571.55944824]
[161.00704956 -569.39868164]
[175.62307739 -565.98608398]
[189.89703369 -561.34631348]
[203.72607422 -555.51263428]
[217.01057434 -548.52722168]
[229.65480042 -540.44036865]
[241.56765747 -531.31030273]
[252.66329956 -521.20288086]
[262.86181641 -510.19085693]
[272.08966064 -498.35360718]
[280.28042603 -485.77642822]
[287.37503052 -472.54992676]
[293.32238770 -458.76940918]
[298.07962036 -444.53414917]
[301.61248779 -429.94674683]
[303.89553833 -415.11227417]
[304.91226196 -400.13763428]
[304.65539551 -385.13070679]
[303.12677002 -370.19961548]
[300.33740234 -355.45196533]
[296.30737305 -340.99398804]
[291.06573486 -326.92990112]
[284.65026855 -313.36099243]
[277.10714722 -300.38504028]
[268.49078369 -288.09552002]
[258.86322021 -276.58102417]
[248.29382324 -265.92446899]
[236.85876465 -256.20269775]
[224.64042664 -247.48568726]
[211.72685242 -239.83627319]
[198.21107483 -233.30958557]
[184.19049072 -227.95263672]
[169.76609802 -223.80403137]
[155.04185486 -220.89364624]
[140.12382507 -219.24246216]
[125.11951447 -218.86238098]
[124.22669983 -203.88896179]
[123.33388519 -188.91555786]
[122.44107056 -173.94215393]
[121.54825592 -158.96875000]
[128.51429749 -145.80351257]
[119.96931458 -132.48834229]
[119.07649994 -117.51493073]
[118.18367767 -102.54152679]
[117.29086304 -87.56812286]
[116.39804840 -72.59471893]
[115.50523376 -57.62131119]
[122.47127533 -44.45606995]
[113.92629242 -31.14089775]
[113.03347778 -16.16749191]
[112.14066315 -1.19408619]
[111.24784088 13.77931976]
[119.93641663 29.02647209]
[109.66893768 44.31242371]
[116.83021545 57.37248993]
[108.48442078 70.81340790]
[107.92620850 85.80301666]
[115.38739014 94.74573517]
[114.95397186 106.38417816]
[106.84833527 114.74718475]
[106.17855072 129.73222351]
[105.50876617 144.71725464]
[112.62213898 158.84915161]
[104.32424927 171.21824646]
[116.28782654 180.92283630]
[120.19736481 195.63911438]
[114.75612640 209.66967773]
[102.24623108 217.70960999]
[101.57644653 232.69465637]
[100.90666199 247.67968750]
[108.02003479 261.81158447]
[99.72214508 274.18066406]
[106.83551788 288.31256104]
[98.53763580 300.68167114]
[97.86785126 315.66671753]
[97.19806671 330.65173340]
[112.03768921 332.93927002]
[126.54299164 336.81787109]
[140.54389954 342.24203491]
[153.87626648 349.14819336]
[166.38377380 357.45538330]
[177.91978455 367.06622314]
[188.34904480 377.86798096]
[197.54925537 389.73403931]
[205.41256714 402.52526855]
[211.84678650 416.09167480]
[216.77647400 430.27426147]
[220.14382935 444.90670776]
[221.90936279 459.81744385]
[222.05239868 474.83166504]
[220.57124329 489.77331543]
[217.48326111 504.46725464]
[212.82466125 518.74114990]
[206.65005493 532.42773438]
[199.03186035 545.36645508]
[190.05937195 557.40557861]
[179.83779907 568.40411377]
[168.48698425 578.23291016]
[156.13999939 586.77691650]
[142.94161987 593.93579102]
[129.04658508 599.62573242]
[114.61780548 603.77996826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 184]
[31 183]
[32 182]
[34 180]
[36 178]
[37 177]
[38 176]
[42 172]
[44 170]
[45 169]
[46 168]
[48 165]
[50 164]
[52 162]
[55 160]
[56 159]
[57 158]
[58 157]
[60 155]
[61 154]
[62 153]
[63 152]
[64 151]
[65 150]
[67 148]
[68 147]
[69 146]
[70 145]
[71 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
