%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[171.50218201 395.10150146]
[164.71098328 381.72201538]
[158.71672058 367.96707153]
[153.54002380 353.88400269]
[149.19876099 339.52142334]
[145.70788574 324.92880249]
[143.07942200 310.15649414]
[141.32246399 295.25537109]
[140.44303894 280.27679443]
[140.44418335 265.27246094]
[141.32591248 250.29403687]
[143.08515930 235.39317322]
[145.71588135 220.62124634]
[149.20898438 206.02917480]
[153.55245972 191.66725159]
[158.73130798 177.58499146]
[164.72769165 163.83094788]
[171.52093506 150.45251465]
[158.56793213 142.88813782]
[145.61492920 135.32376099]
[132.66194153 127.75938416]
[119.70893860 120.19500732]
[106.75593567 112.63062286]
[92.77655029 112.36920166]
[85.67967987 100.32237244]
[72.72668457 92.75799561]
[59.77368546 85.19361877]
[51.30107117 97.57941437]
[41.96644974 109.32923126]
[31.81738472 120.38317871]
[20.90559578 130.68492126]
[9.28668594 140.18199158]
[-2.98013592 148.82597351]
[-15.83236027 156.57281494]
[-29.20449448 163.38304138]
[-43.02839661 169.22196960]
[-57.23362350 174.05981445]
[-71.74778748 177.87194824]
[-86.49692535 180.63894653]
[-101.40587616 182.34667969]
[-116.39867401 182.98646545]
[-131.39891052 182.55505371]
[-146.33015442 181.05462646]
[-161.11630249 178.49282837]
[-175.68203735 174.88272095]
[-189.95310974 170.24270630]
[-203.85679626 164.59642029]
[-217.32226562 157.97262573]
[-230.28088379 150.40510559]
[-242.66662598 141.93240356]
[-254.41636658 132.59768677]
[-265.47024536 122.44853210]
[-275.77191162 111.53666687]
[-285.26885986 99.91768646]
[-293.91275024 87.65079498]
[-301.65951538 74.79851532]
[-308.46963501 61.42632675]
[-314.30844116 47.60237885]
[-319.14620972 33.39711380]
[-322.95822144 18.88292313]
[-325.72509766 4.13376522]
[-327.43270874 -10.77520084]
[-328.07238770 -25.76800156]
[-327.64086914 -40.76823807]
[-326.14031982 -55.69946671]
[-323.57839966 -70.48560333]
[-319.96820068 -85.05130768]
[-315.32806396 -99.32234192]
[-309.68167114 -113.22599030]
[-303.05776978 -126.69140625]
[-295.49014282 -139.64996338]
[-287.01733398 -152.03564453]
[-277.68255615 -163.78530884]
[-267.53332520 -174.83909607]
[-256.62136841 -185.14068604]
[-245.00230408 -194.63757324]
[-232.73535156 -203.28135681]
[-219.88301086 -211.02799988]
[-206.51077271 -217.83802795]
[-192.68678284 -223.67674255]
[-178.48147583 -228.51437378]
[-163.96725464 -232.32629395]
[-149.21807861 -235.09304810]
[-134.30909729 -236.80055237]
[-119.31629181 -237.44012451]
[-104.31606293 -237.00846863]
[-89.38484192 -235.50781250]
[-74.59872437 -232.94578552]
[-60.03305435 -229.33546448]
[-45.76205444 -224.69522095]
[-31.85844612 -219.04872131]
[-18.39308357 -212.42472839]
[-5.43458080 -204.85700989]
[6.95102644 -196.38410950]
[18.70062447 -187.04922485]
[29.75433731 -176.89990234]
[40.05583954 -165.98786926]
[49.55263519 -154.36874390]
[58.19633102 -142.10173035]
[65.94287872 -129.24932861]
[72.75280762 -115.87702942]
[78.59140778 -102.05299377]
[83.42893219 -87.84765625]
[87.24073029 -73.33340454]
[90.00737762 -58.58420563]
[91.71477509 -43.67521286]
[92.35422516 -28.68240356]
[91.92246246 -13.68217564]
[90.42168427 1.24903166]
[87.85955048 16.03513145]
[84.24911499 30.60077477]
[79.60876465 44.87173843]
[73.96215820 58.77530289]
[67.33806610 72.24061584]
[80.29106140 79.80499268]
[93.24406433 87.36937714]
[107.22344971 87.63079834]
[114.32032013 99.67762756]
[127.27331543 107.24200439]
[140.22631836 114.80638123]
[153.17930603 122.37076569]
[166.13230896 129.93515015]
[179.08531189 137.49952698]
[187.39913940 125.00909424]
[196.43167114 113.02811432]
[206.15176392 101.59788513]
[216.52592468 90.75781250]
[227.51838684 80.54525757]
[239.09126282 70.99542999]
[251.20463562 62.14124298]
[263.81677246 54.01322556]
[276.88418579 46.63940048]
[290.36181641 40.04517746]
[304.20321655 34.25329590]
[318.36068726 29.28371620]
[332.78540039 25.15357399]
[347.42764282 21.87710381]
[362.23693848 19.46560287]
[377.16223145 17.92738152]
[392.15206909 17.26774406]
[407.15478516 17.48896408]
[422.11865234 18.59027863]
[436.99209595 20.56789207]
[451.72384644 23.41498566]
[466.26312256 27.12174797]
[480.55981445 31.67539597]
[494.56457520 37.06023788]
[508.22921753 43.25770569]
[521.50653076 50.24643707]
[534.35089111 58.00234222]
[546.71789551 66.49868774]
[558.56494141 75.70617676]
[569.85119629 85.59307098]
[580.53778076 96.12528992]
[590.58782959 107.26652527]
[599.96667480 118.97837830]
[608.64202881 131.22045898]
[616.58398438 143.95059204]
[623.76513672 157.12486267]
[630.16070557 170.69787598]
[635.74871826 184.62284851]
[640.50988770 198.85174561]
[644.42773438 213.33555603]
[647.48889160 228.02433777]
[649.68267822 242.86744690]
[651.00152588 257.81372070]
[651.44097900 272.81161499]
[650.99951172 287.80947876]
[649.67858887 302.75555420]
[647.48278809 317.59835815]
[644.41967773 332.28674316]
[640.49981689 346.76998901]
[635.73669434 360.99826050]
[630.14678955 374.92245483]
[623.74932861 388.49459839]
[616.56640625 401.66790771]
[608.62274170 414.39694214]
[599.94567871 426.63784790]
[590.56524658 438.34841919]
[580.51367188 449.48828125]
[569.82568359 460.01904297]
[558.53808594 469.90441895]
[546.68975830 479.11029053]
[534.32159424 487.60494995]
[521.47625732 495.35910034]
[508.19793701 502.34600830]
[494.53247070 508.54162598]
[480.52694702 513.92456055]
[466.22964478 518.47625732]
[451.68988037 522.18103027]
[436.95773315 525.02612305]
[422.08401489 527.00170898]
[407.11999512 528.10101318]
[392.11724854 528.32019043]
[377.12750244 527.65850830]
[362.20239258 526.11822510]
[347.39343262 523.70471191]
[332.75164795 520.42626953]
[318.32748413 516.29412842]
[304.17071533 511.32263184]
[290.33007812 505.52886963]
[276.85336304 498.93280029]
[263.78695679 491.55718994]
[251.17593384 483.42745972]
[239.06375122 474.57162476]
[227.49218750 465.02020264]
[216.50112915 454.80615234]
[206.12843323 443.96466064]
[196.40989685 432.53311157]
[187.37899780 420.55090332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 123]
[19 122]
[20 121]
[21 120]
[22 119]
[23 118]
[25 116]
[26 115]
[27 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
