%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[56.80018616 716.71697998]
[43.37272263 723.42138672]
[29.44931221 729.02362061]
[15.12025547 733.48730469]
[0.47848564 736.78350830]
[-14.38104057 738.89080811]
[-29.36195183 739.79559326]
[-44.36708832 739.49200439]
[-59.29913712 737.98193359]
[-74.06125641 735.27526855]
[-88.55770111 731.38946533]
[-102.69446564 726.34979248]
[-116.37985229 720.18890381]
[-129.52511597 712.94677734]
[-142.04499817 704.67041016]
[-153.85832214 695.41339111]
[-164.88842773 685.23583984]
[-175.06382751 674.20367432]
[-184.31849670 662.38854980]
[-192.59242249 649.86706543]
[-199.83195496 636.72033691]
[-205.99012756 623.03375244]
[-211.02702332 608.89599609]
[-214.90994263 594.39880371]
[-217.61373901 579.63610840]
[-219.12084961 564.70379639]
[-219.42150879 549.69860840]
[-218.51376343 534.71783447]
[-216.40351868 519.85876465]
[-213.10444641 505.21762085]
[-208.63792419 490.88946533]
[-203.03295898 476.96716309]
[-196.32586670 463.54101562]
[-188.56018066 450.69808960]
[-179.78622437 438.52172852]
[-170.06092834 427.09085083]
[-159.44735718 416.47961426]
[-148.01435852 406.75680542]
[-135.83605957 397.98553467]
[-122.99144745 390.22265625]
[-109.56383514 383.51849365]
[-95.64029694 377.91659546]
[-81.31114197 373.45321655]
[-66.66930389 370.15734863]
[-51.80973053 368.05035400]
[-36.82880020 367.14590454]
[-21.82366943 367.44982910]
[-6.89165401 368.96023560]
[7.87040377 371.66723633]
[22.36676598 375.55334473]
[27.40368271 361.42431641]
[32.44059753 347.29528809]
[37.47751617 333.16625977]
[34.46322632 318.57986450]
[46.38528061 308.17913818]
[45.67037201 300.82312012]
[51.60380173 293.87817383]
[56.85051727 279.82571411]
[62.09723663 265.77325439]
[66.17690277 251.33869934]
[69.06217194 236.61880493]
[71.94744873 221.89891052]
[74.83271790 207.17901611]
[60.64248276 195.90925598]
[54.10688019 178.91664124]
[57.11596680 160.87460327]
[68.92192078 146.79232788]
[86.32246399 140.62400818]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[98.84349060 57.15087128]
[101.06861115 42.31682587]
[103.29373169 27.48278427]
[105.51884460 12.64873981]
[99.91428375 -2.14651084]
[109.45395660 -13.58521175]
[111.67907715 -28.41925430]
[113.90419006 -43.25329971]
[116.12931061 -58.08734131]
[116.91062927 -73.06697845]
[116.24084473 -88.05201721]
[115.57106018 -103.03705597]
[106.59662628 -112.30109406]
[106.34725952 -124.79595184]
[114.41133118 -133.81245422]
[106.26657867 -147.37612915]
[113.62151337 -160.32814026]
[113.17490387 -175.32148743]
[112.72830200 -190.31483459]
[104.58354950 -203.87852478]
[111.93847656 -216.83052063]
[111.49187469 -231.82386780]
[96.96641541 -236.05070496]
[84.45918274 -244.56095886]
[75.19551086 -256.52087402]
[70.08296967 -270.75875854]
[69.62242126 -285.87969971]
[73.85899353 -300.40231323]
[82.37761688 -312.90383911]
[94.34374237 -322.15948486]
[108.58503723 -327.26251221]
[123.70629120 -327.71292114]
[138.22607422 -323.46661377]
[150.72189331 -314.93960571]
[159.96952820 -302.96728516]
[165.06298828 -288.72256470]
[165.50326538 -273.60101318]
[161.24723816 -259.08410645]
[152.71186829 -246.59399414]
[140.73335266 -237.35438538]
[126.48522186 -232.27047729]
[126.93183136 -217.27713013]
[135.04463196 -204.78585815]
[127.72164917 -190.76144409]
[128.16825867 -175.76809692]
[128.61486816 -160.77473450]
[136.72767639 -148.28347778]
[129.40467834 -134.25904846]
[139.41888428 -119.84786224]
[130.55609131 -103.70684052]
[131.22589111 -88.72180176]
[131.89567566 -73.73676300]
[139.16949463 -86.85512543]
[151.10098267 -95.94575500]
[165.67947388 -99.47672272]
[180.44822693 -96.85299683]
[192.91844177 -88.51672363]
[200.98869324 -75.87270355]
[203.29898071 -61.05168915]
[199.45999146 -46.55127335]
[190.11865234 -34.81502914]
[176.84913635 -27.82072449]
[161.88761902 -26.74702263]
[147.75535583 -31.77485847]
[136.83389282 -42.05695724]
[130.96334839 -55.86222458]
[128.73823547 -41.02818298]
[126.51311493 -26.19413757]
[124.28800201 -11.36009407]
[130.05171204 2.37412643]
[120.35289001 14.87385654]
[118.12776947 29.70790100]
[115.90265656 44.54194260]
[113.67753601 59.37598801]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[101.15650940 142.84913635]
[111.43994141 149.06999207]
[119.00164032 158.36721802]
[122.97399139 169.63706970]
[122.91371155 181.55175781]
[118.85121155 192.71582031]
[111.28425598 201.82954407]
[101.11713409 207.84036255]
[89.55261230 210.06428528]
[86.66734314 224.78417969]
[83.78206635 239.50407410]
[80.89679718 254.22396851]
[91.57962799 243.69413757]
[105.90515900 239.24678040]
[120.67304230 241.87542725]
[132.58407593 250.99282837]
[138.97732544 264.56216431]
[138.42449951 279.55197144]
[131.04911804 292.61349487]
[118.49886322 300.82879639]
[103.57747650 302.36251831]
[89.61844635 296.87200928]
[79.74024963 285.58392334]
[76.14970398 271.01995850]
[70.90299225 285.07244873]
[65.65627289 299.12490845]
[60.51431274 313.21603394]
[63.16832733 328.81304932]
[51.60654449 338.20318604]
[46.56962585 352.33221436]
[41.53271103 366.46124268]
[36.49579620 380.59027100]
[50.18132401 386.75085449]
[63.32674789 393.99267578]
[75.84681702 402.26879883]
[87.66033173 411.52554321]
[98.69067383 421.70285034]
[108.86630249 432.73477173]
[118.12123871 444.54968262]
[126.39544678 457.07101440]
[133.63526917 470.21755981]
[139.79374695 483.90402222]
[144.83093262 498.04165649]
[148.71418762 512.53881836]
[151.41830444 527.30139160]
[152.92573547 542.23370361]
[153.22673035 557.23889160]
[152.31932068 572.21966553]
[150.20939636 587.07879639]
[146.91064453 601.71997070]
[142.44445801 616.04827881]
[136.83978271 629.97070312]
[130.13299561 643.39697266]
[122.36758423 656.24005127]
[113.59390259 668.41662598]
[103.86885834 679.84771729]
[93.25552368 690.45922852]
[81.82273102 700.18225098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 184]
[51 183]
[52 182]
[53 181]
[55 179]
[57 178]
[58 177]
[59 176]
[60 164]
[61 163]
[62 162]
[63 161]
[68 153]
[69 152]
[70 151]
[72 149]
[73 148]
[74 147]
[75 146]
[76 145]
[77 144]
[79 142]
[80 141]
[81 140]
[82 139]
[83 125]
[84 124]
[85 123]
[88 121]
[90 119]
[91 118]
[92 117]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
