%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[49.11839676 469.65341187]
[46.65031052 454.62582397]
[50.51414871 439.89520264]
[60.04048538 428.01376343]
[73.57881927 421.04000854]
[72.68600464 406.06658936]
[71.79319000 391.09317017]
[70.90037537 376.11978149]
[62.41925049 363.87561035]
[69.32143402 349.63937378]
[68.42861176 334.66595459]
[59.94749069 322.42178345]
[66.84967041 308.18554688]
[65.95685577 293.21212769]
[59.12009048 306.56350708]
[47.74433899 316.34063721]
[33.51713181 321.09317017]
[18.54898834 320.11608887]
[5.06034422 313.55435181]
[-4.94784069 302.38131714]
[-9.99091148 288.25448608]
[-9.32075882 273.26947021]
[-3.03679562 259.64920044]
[7.92878962 249.41416931]
[21.94931793 244.08267212]
[36.94492722 244.44561768]
[50.69110489 250.44915771]
[61.14869308 261.20272827]
[66.76600647 275.10916138]
[68.99111938 260.27511597]
[71.21623993 245.44108582]
[73.44135284 230.60704041]
[66.50585938 220.69616699]
[68.23823547 208.31947327]
[78.24993896 200.18751526]
[80.69566345 185.38824463]
[82.92078400 170.55419922]
[84.92479706 155.68867493]
[86.92881012 140.82315063]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[79.67874908 81.22473145]
[66.94356537 72.24732971]
[56.72678757 60.49469757]
[49.61662292 46.64982224]
[46.02088928 31.51594734]
[46.14366150 15.96998501]
[49.97366333 0.91170537]
[57.28516769 -12.78834724]
[67.65130615 -24.33917427]
[80.46899414 -33.07500076]
[94.99398041 -38.49363708]
[110.38411713 -40.28536606]
[112.16658020 -55.17908096]
[113.94904327 -70.07279968]
[115.06469727 -85.03125000]
[115.51129913 -100.02460480]
[115.95790863 -115.01795197]
[113.08539581 -123.68896484]
[116.52442932 -130.23074341]
[117.19421387 -145.21577454]
[114.78717041 -149.84753418]
[114.43289948 -154.47656250]
[115.78662109 -158.32136536]
[118.24332428 -160.85057068]
[119.58155823 -175.79075623]
[120.91979980 -190.73094177]
[122.25803375 -205.67112732]
[123.59626770 -220.61131287]
[124.93450165 -235.55149841]
[126.27273560 -250.49168396]
[127.61096954 -265.43185425]
[128.94920349 -280.37203979]
[116.77416992 -271.61029053]
[101.94805908 -273.88760376]
[92.96392059 -285.89950562]
[94.96829224 -300.76498413]
[106.81297302 -309.96844482]
[121.71279144 -308.23770142]
[131.13218689 -296.56515503]
[133.79797363 -311.32635498]
[127.17109680 -328.50674438]
[139.02087402 -341.45083618]
[141.46659851 -356.25012207]
[143.91232300 -371.04937744]
[146.35806274 -385.84866333]
[148.80378723 -400.64791870]
[151.24951172 -415.44720459]
[153.69523621 -430.24645996]
[139.41357422 -434.92990112]
[126.01425934 -441.73861694]
[113.81139374 -450.51306152]
[103.09102631 -461.04748535]
[94.10445404 -473.09497070]
[87.06234741 -486.37310791]
[82.12977600 -500.57064819]
[79.42236328 -515.35479736]
[79.00357819 -530.37890625]
[80.88323975 -545.29089355]
[85.01728821 -559.74114990]
[91.30880737 -573.39099121]
[99.61032104 -585.92034912]
[109.72722626 -597.03558350]
[121.42237091 -606.47613525]
[134.42160034 -614.02069092]
[148.42021179 -619.49243164]
[163.09002686 -622.76300049]
[178.08718872 -623.75585938]
[193.06011963 -622.44763184]
[207.65786743 -618.86901855]
[221.53820801 -613.10388184]
[234.37577820 -605.28741455]
[245.86964417 -595.60278320]
[255.75038147 -584.27709961]
[263.78634644 -571.57580566]
[269.78921509 -557.79656982]
[273.61822510 -543.26251221]
[275.18362427 -528.31427002]
[274.44873047 -513.30230713]
[271.43078613 -498.57839966]
[266.20050049 -484.48782349]
[258.88049316 -471.36083984]
[249.64236450 -459.50512695]
[238.70265198 -449.19866943]
[226.31782532 -440.68301392]
[212.77818298 -434.15780640]
[198.40110779 -429.77597046]
[183.52363586 -427.64028931]
[168.49450684 -427.80075073]
[166.04878235 -413.00146484]
[163.60305786 -398.20220947]
[161.15733337 -383.40292358]
[158.71159363 -368.60366821]
[156.26586914 -353.80438232]
[153.82014465 -339.00512695]
[160.60731506 -328.99209595]
[158.69085693 -316.64254761]
[148.55918884 -308.66055298]
[145.89340210 -293.89935303]
[143.88938904 -279.03381348]
[142.55114746 -264.09362793]
[141.21292114 -249.15344238]
[139.87467957 -234.21327209]
[138.53645325 -219.27308655]
[137.19821167 -204.33290100]
[135.85998535 -189.39271545]
[134.52174377 -174.45252991]
[133.18351746 -159.51234436]
[132.17926025 -144.54598999]
[131.50946045 -129.56095886]
[130.95126343 -114.57135010]
[130.50465393 -99.57799530]
[130.05804443 -84.58464813]
[141.68997192 -94.05555725]
[156.62535095 -92.66472626]
[166.30851746 -81.20888519]
[165.19252014 -66.25045776]
[153.91664124 -56.35831451]
[138.94021606 -57.19911957]
[128.84275818 -68.29033661]
[127.06029510 -53.39661407]
[125.27783203 -38.50289917]
[138.87483215 -33.60091019]
[151.04249573 -25.78598785]
[161.16613770 -15.44894314]
[168.73342896 -3.10810804]
[173.36035156 10.61666489]
[174.81066895 25.03512955]
[173.00799561 39.42136765]
[168.03981018 53.05032730]
[160.15319824 65.23436737]
[149.74259949 75.35797119]
[137.33004761 82.90879822]
[123.53904724 87.50364685]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[101.79433441 142.82716370]
[99.79032135 157.69268799]
[97.78630829 172.55821228]
[99.94006348 178.80905151]
[98.78684235 184.37385559]
[95.49493408 187.83396912]
[93.04920959 202.63323975]
[99.93115234 219.71307373]
[88.27539825 232.83215332]
[86.05028534 247.66619873]
[83.82516479 262.50024414]
[81.60005188 277.33428955]
[80.93025970 292.31933594]
[81.82308197 307.29272461]
[90.36806488 320.60791016]
[83.40202332 333.77313232]
[84.29483795 348.74655151]
[92.83982086 362.06173706]
[85.87377930 375.22695923]
[86.76659393 390.20037842]
[87.65940857 405.17376709]
[88.55222321 420.14718628]
[102.82333374 425.46276855]
[113.69405365 436.12799072]
[119.28096771 450.29507446]
[118.61611176 465.50946045]
[111.81467438 479.13519287]
[100.05504608 488.81149292]
[85.37464905 492.86193848]
[70.31695557 490.58468628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 202]
[6 201]
[7 200]
[8 199]
[10 197]
[11 196]
[13 194]
[14 193]
[29 192]
[30 191]
[31 190]
[32 189]
[35 187]
[36 186]
[37 183]
[38 182]
[39 181]
[40 180]
[41 179]
[43 177]
[55 164]
[56 163]
[57 162]
[58 155]
[59 154]
[60 153]
[62 152]
[63 151]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
[75 142]
[82 141]
[83 140]
[85 137]
[86 136]
[87 135]
[88 134]
[89 133]
[90 132]
[91 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
