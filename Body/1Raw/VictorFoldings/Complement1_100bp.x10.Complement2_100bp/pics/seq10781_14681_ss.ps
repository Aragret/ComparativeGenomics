%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[86.46482849 631.40417480]
[71.62295532 629.19628906]
[56.95304489 626.04205322]
[42.51536560 621.95434570]
[28.36924744 616.95007324]
[14.57282543 611.04968262]
[1.18278778 604.27752686]
[-11.74584103 596.66131592]
[-24.15993309 588.23242188]
[-36.00848007 579.02551270]
[-47.24278641 569.07836914]
[-57.81669235 558.43182373]
[-67.68674469 547.12969971]
[-76.81239319 535.21844482]
[-85.15612793 522.74700928]
[-92.68366241 509.76654053]
[-99.36407471 496.33047485]
[-105.16989899 482.49401855]
[-110.07729340 468.31396484]
[-114.06607819 453.84866333]
[-117.11987305 439.15750122]
[-119.22612762 424.30087280]
[-120.37617493 409.33984375]
[-120.56529999 394.33584595]
[-119.79273224 379.35055542]
[-118.06163025 364.44555664]
[-115.37911224 349.68209839]
[-111.75621033 335.12081909]
[-107.20780182 320.82162476]
[-101.75258636 306.84320068]
[-95.41297150 293.24301147]
[-88.21501923 280.07696533]
[-80.18829346 267.39910889]
[-71.36578369 255.26161194]
[-61.78374863 243.71430969]
[-51.48156357 232.80465698]
[-40.50155258 222.57748413]
[-28.88884735 213.07481384]
[-16.69115829 204.33570862]
[-3.95861363 196.39605713]
[9.25646782 189.28849792]
[22.89978027 183.04225159]
[36.91526413 177.68296814]
[51.24531937 173.23266602]
[65.83106232 169.70965576]
[80.61256409 167.12838745]
[95.52907562 165.49948120]
[94.85929108 150.51443481]
[94.18950653 135.52940369]
[93.51972198 120.54436493]
[92.84993744 105.55932617]
[90.40149689 102.57980347]
[89.27828217 98.53552246]
[89.92636108 94.04252625]
[92.50000000 89.89328003]
[92.50000000 74.89328003]
[92.50000000 59.89328003]
[92.50000000 44.89328003]
[92.50000000 29.89328003]
[92.50000000 14.89327908]
[92.50000000 -0.10672058]
[84.76270294 -13.90689278]
[92.50000000 -26.63416481]
[77.53327179 -27.72934723]
[62.68641281 -29.91411400]
[48.03863907 -33.17681122]
[33.66810608 -37.50002670]
[19.65148735 -42.86069489]
[6.06356716 -49.23021698]
[-7.02315760 -56.57460403]
[-19.53886032 -64.85467529]
[-31.41676712 -74.02625275]
[-42.59349823 -84.04039001]
[-53.00942612 -94.84367371]
[-62.60897446 -106.37844849]
[-71.34091949 -118.58318329]
[-79.15868378 -131.39274597]
[-86.02054596 -144.73881531]
[-91.88989258 -158.55015564]
[-96.73542023 -172.75308228]
[-100.53126526 -187.27182007]
[-103.25717926 -202.02891541]
[-104.89861298 -216.94561768]
[-105.44681549 -231.94235229]
[-104.89886475 -246.93908691]
[-103.25766754 -261.85583496]
[-100.53199768 -276.61297607]
[-96.73638916 -291.13177490]
[-91.89109802 -305.33477783]
[-86.02198029 -319.14620972]
[-79.16033173 -332.49240112]
[-71.34278107 -345.30209351]
[-62.61103439 -357.50695801]
[-53.01167679 -369.04190063]
[-42.59592819 -379.84533691]
[-31.41936111 -389.85968018]
[-19.54160500 -399.03143311]
[-7.02603817 -407.31170654]
[6.06056547 -414.65631104]
[19.64838219 -421.02606201]
[33.66491318 -426.38696289]
[48.03537369 -430.71041870]
[62.68309402 -433.97335815]
[77.52991486 -436.15835571]
[92.49662781 -437.25378418]
[107.50337219 -437.25378418]
[122.47008514 -436.15835571]
[137.31690979 -433.97335815]
[151.96463013 -430.71041870]
[166.33508301 -426.38696289]
[180.35162354 -421.02606201]
[193.93943787 -414.65631104]
[207.02603149 -407.31170654]
[219.54161072 -399.03143311]
[231.41935730 -389.85968018]
[242.59593201 -379.84533691]
[253.01167297 -369.04190063]
[262.61102295 -357.50695801]
[271.34277344 -345.30209351]
[279.16033936 -332.49240112]
[286.02197266 -319.14620972]
[291.89111328 -305.33477783]
[296.73638916 -291.13177490]
[300.53201294 -276.61297607]
[303.25765991 -261.85583496]
[304.89886475 -246.93908691]
[305.44680786 -231.94235229]
[304.89862061 -216.94561768]
[303.25717163 -202.02891541]
[300.53128052 -187.27182007]
[296.73541260 -172.75308228]
[291.88989258 -158.55015564]
[286.02053833 -144.73881531]
[279.15869141 -131.39274597]
[271.34091187 -118.58318329]
[262.60897827 -106.37844849]
[253.00942993 -94.84367371]
[242.59350586 -84.04039001]
[231.41676331 -74.02625275]
[219.53886414 -64.85467529]
[207.02316284 -56.57460403]
[193.93643188 -49.23021698]
[180.34851074 -42.86069489]
[166.33189392 -37.50002670]
[151.96136475 -33.17681122]
[137.31358337 -29.91411400]
[122.46672821 -27.72934723]
[107.50000000 -26.63416481]
[115.23729706 -13.90689278]
[107.50000000 -0.10672058]
[107.50000000 14.89327908]
[107.50000000 29.89328003]
[107.50000000 44.89328003]
[107.50000000 59.89328003]
[107.50000000 74.89328003]
[107.50000000 89.89328003]
[107.83497620 104.88954163]
[108.50476074 119.87458038]
[109.17454529 134.85961914]
[109.84432983 149.84465027]
[110.51411438 164.82969666]
[125.51647186 165.12132263]
[140.46931458 166.37355042]
[155.31120300 168.58123779]
[169.98115540 171.73533630]
[184.41888428 175.82284546]
[198.56504822 180.82699585]
[212.36154175 186.72720337]
[225.75164795 193.49925232]
[238.68037415 201.11529541]
[251.09455872 209.54403687]
[262.94320679 218.75083923]
[274.17761230 228.69787598]
[284.75164795 239.34426880]
[294.62182617 250.64627075]
[303.74758911 262.55743408]
[312.09146118 275.02880859]
[319.61914062 288.00918579]
[326.29971313 301.44515991]
[332.10568237 315.28158569]
[337.01324463 329.46154785]
[341.00219727 343.92681885]
[344.05615234 358.61791992]
[346.16256714 373.47454834]
[347.31277466 388.43557739]
[347.50207520 403.43957520]
[346.72967529 418.42486572]
[344.99871826 433.32989502]
[342.31637573 448.09338379]
[338.69363403 462.65466309]
[334.14538574 476.95394897]
[328.69033813 490.93243408]
[322.35086060 504.53268433]
[315.15304565 517.69879150]
[307.12646484 530.37670898]
[298.30410767 542.51434326]
[288.72219849 554.06176758]
[278.42013550 564.97149658]
[267.44021606 575.19879150]
[255.82762146 584.70159912]
[243.63003540 593.44085693]
[230.89758301 601.38061523]
[217.68257141 608.48834229]
[204.03933716 614.73474121]
[190.02391052 620.09417725]
[175.69390869 624.54461670]
[161.10820007 628.06781006]
[146.32672119 630.64923096]
[131.41023254 632.27832031]
[116.42000580 632.94836426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 161]
[48 160]
[49 159]
[50 158]
[51 157]
[55 156]
[56 155]
[57 154]
[58 153]
[59 152]
[60 151]
[61 150]
[63 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
