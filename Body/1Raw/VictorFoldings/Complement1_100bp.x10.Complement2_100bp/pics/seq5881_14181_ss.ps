%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[37.64505768 488.08880615]
[27.00723457 498.67074585]
[15.74407959 508.58447266]
[3.89749146 517.79315186]
[-8.48845863 526.26245117]
[-21.36769485 533.96087646]
[-34.69230270 540.85986328]
[-48.41271591 546.93365479]
[-62.47789383 552.15972900]
[-76.83551025 556.51855469]
[-91.43215942 559.99401855]
[-106.21353149 562.57312012]
[-121.12464905 564.24633789]
[-136.11003113 565.00732422]
[-151.11393738 564.85339355]
[-166.08055115 563.78503418]
[-180.95419312 561.80621338]
[-195.67951965 558.92431641]
[-210.20178223 555.15008545]
[-224.46693420 550.49749756]
[-238.42190552 544.98394775]
[-252.01480103 538.62988281]
[-265.19503784 531.45892334]
[-277.91357422 523.49780273]
[-290.12313843 514.77612305]
[-301.77825928 505.32632446]
[-312.83560181 495.18356323]
[-323.25405884 484.38552856]
[-332.99481201 472.97247314]
[-342.02166748 460.98678589]
[-350.30105591 448.47308350]
[-357.80215454 435.47790527]
[-364.49703979 422.04959106]
[-370.36083984 408.23812866]
[-375.37170410 394.09487915]
[-379.51104736 379.67242432]
[-382.76342773 365.02447510]
[-385.11676025 350.20547485]
[-386.56228638 335.27056885]
[-387.09463501 320.27529907]
[-386.71182251 305.27551270]
[-385.41525269 290.32693481]
[-383.20977783 275.48519897]
[-380.10357666 260.80554199]
[-376.10824585 246.34255981]
[-371.23861694 232.15003967]
[-365.51281738 218.28079224]
[-358.95211792 204.78640747]
[-351.58096313 191.71710205]
[-343.42675781 179.12147522]
[-334.51983643 167.04638672]
[-324.89334106 155.53677368]
[-314.58306885 144.63543701]
[-303.62738037 134.38293457]
[-292.06704712 124.81739807]
[-279.94506836 115.97441864]
[-267.30651855 107.88690186]
[-254.19842529 100.58493042]
[-240.66955566 94.09565735]
[-226.77023315 88.44322968]
[-212.55218506 83.64868164]
[-198.06826782 79.72984314]
[-183.37240601 76.70128632]
[-168.51922607 74.57428741]
[-153.56401062 73.35675812]
[-138.56239319 73.05322266]
[-123.57015991 73.66481781]
[-108.64311218 75.18926239]
[-93.83675385 77.62088776]
[-79.20618439 80.95064545]
[-64.80582428 85.16614532]
[-50.68924713 90.25171661]
[-36.90895844 96.18843079]
[-23.51623344 102.95420074]
[-10.56088638 110.52387238]
[1.90888357 118.86927032]
[13.84668922 127.95935822]
[25.20812035 137.76031494]
[35.95091248 148.23567200]
[47.05814743 138.15454102]
[58.16537857 128.07339478]
[69.27261353 117.99226379]
[80.37984467 107.91112518]
[91.48708344 97.82998657]
[91.89200592 94.80912781]
[93.40503693 91.86885071]
[95.99846649 89.41985321]
[99.49320984 87.85684204]
[103.56853485 87.50366974]
[115.25611115 78.10151672]
[126.94369507 68.69937134]
[138.63127136 59.29721832]
[150.31886292 49.89506531]
[162.00643921 40.49291611]
[167.90933228 25.81413841]
[182.67588806 23.86524582]
[194.36346436 14.46309376]
[206.05104065 5.06094265]
[217.73863220 -4.34120846]
[229.42620850 -13.74335957]
[221.07276917 -26.21370125]
[213.83798218 -39.36464310]
[207.77693176 -53.09610367]
[202.93571472 -67.30356598]
[199.35121155 -81.87891388]
[197.05067444 -96.71120453]
[196.05162048 -111.68756104]
[196.36166382 -126.69400024]
[197.97842407 -141.61631775]
[200.88961792 -156.34092712]
[205.07308960 -170.75578308]
[210.49697876 -184.75117493]
[217.12001038 -198.22056580]
[224.89178467 -211.06147766]
[233.75317383 -223.17614746]
[243.63668823 -234.47239685]
[254.46714783 -244.86424255]
[266.16210938 -254.27259827]
[278.63256836 -262.62585449]
[291.78363037 -269.86047363]
[305.51516724 -275.92132568]
[319.72268677 -280.76232910]
[334.29809570 -284.34664917]
[349.13040161 -286.64697266]
[364.10678101 -287.64581299]
[379.11322021 -287.33557129]
[394.03552246 -285.71859741]
[408.76007080 -282.80718994]
[423.17489624 -278.62353516]
[437.17019653 -273.19943237]
[450.63949585 -266.57620239]
[463.48028564 -258.80426025]
[475.59484863 -249.94270325]
[486.89096069 -240.05902100]
[497.28265381 -229.22840881]
[506.69085693 -217.53332520]
[515.04394531 -205.06274414]
[522.27832031 -191.91160583]
[528.33898926 -178.17997742]
[533.17980957 -163.97236633]
[536.76391602 -149.39692688]
[539.06402588 -134.56457520]
[540.06268311 -119.58818817]
[539.75219727 -104.58175659]
[538.13500977 -89.65948486]
[535.22344971 -74.93495178]
[531.03955078 -60.52021408]
[525.61529541 -46.52498245]
[518.99188232 -33.05576706]
[511.21972656 -20.21508408]
[502.35800171 -8.10065556]
[492.47415161 3.19531655]
[481.64340210 13.58686161]
[469.94818115 22.99489212]
[457.47750854 31.34780693]
[444.32623291 38.58203506]
[430.59454346 44.64251328]
[416.38687134 49.48312378]
[401.81137085 53.06702423]
[386.97897339 55.36693573]
[372.00259399 56.36535645]
[356.99615479 56.05468369]
[342.07391357 54.43729019]
[327.34942627 51.52547836]
[312.93475342 47.34141159]
[298.93957520 41.91693115]
[285.47045898 35.29332733]
[272.62988281 27.52100563]
[260.51559448 18.65912056]
[249.21975708 8.77511787]
[238.82835388 -2.05577826]
[227.14077759 7.34637260]
[215.45320129 16.74852371]
[203.76560974 26.15067482]
[192.07803345 35.55282593]
[187.01110840 49.55909729]
[171.40858459 52.18049622]
[159.72100830 61.58264542]
[148.03343201 70.98479462]
[136.34584045 80.38694763]
[124.65826416 89.78910065]
[112.97068024 99.19125366]
[101.56822205 108.93721771]
[90.46098328 119.01835632]
[79.35375214 129.09948730]
[68.24652100 139.18063354]
[57.13928604 149.26176453]
[46.03205109 159.34291077]
[55.42034531 171.04763794]
[64.07760620 183.30296326]
[71.97162628 196.06326294]
[79.07305145 209.28108215]
[85.35544586 222.90724182]
[90.79544830 236.89105225]
[95.37282562 251.18051147]
[99.07054138 265.72244263]
[101.87483978 280.46276855]
[103.77529144 295.34661865]
[104.76483154 310.31863403]
[104.83977509 325.32315063]
[103.99983215 340.30432129]
[102.24814606 355.20642090]
[99.59122467 369.97399902]
[96.03894806 384.55212402]
[91.60453033 398.88659668]
[86.30448151 412.92407227]
[80.15850830 426.61230469]
[73.18946838 439.90039062]
[65.42329407 452.73889160]
[56.88888168 465.08007812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 188]
[80 187]
[81 186]
[82 185]
[83 184]
[84 183]
[89 182]
[90 181]
[91 180]
[92 179]
[93 178]
[94 177]
[96 175]
[97 174]
[98 173]
[99 172]
[100 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
