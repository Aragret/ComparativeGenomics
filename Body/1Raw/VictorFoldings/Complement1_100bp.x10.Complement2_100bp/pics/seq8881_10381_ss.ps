%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[15.52285862 755.10595703]
[1.08931863 759.20166016]
[-13.53734970 762.54266357]
[-28.31771660 765.11999512]
[-43.21193314 766.92675781]
[-58.17985153 767.95794678]
[-73.18111420 768.21087646]
[-88.17528534 767.68481445]
[-103.12194824 766.38122559]
[-117.98079681 764.30364990]
[-132.71177673 761.45758057]
[-147.27519226 757.85076904]
[-161.63175964 753.49291992]
[-175.74278259 748.39581299]
[-189.57023621 742.57312012]
[-203.07682800 736.04058838]
[-216.22615051 728.81579590]
[-228.98274231 720.91827393]
[-241.31224060 712.36926270]
[-253.18139648 703.19183350]
[-264.55819702 693.41070557]
[-275.41198730 683.05230713]
[-285.71350098 672.14447021]
[-295.43496704 660.71667480]
[-304.55020142 648.79968262]
[-313.03460693 636.42559814]
[-320.86529541 623.62786865]
[-328.02117920 610.44091797]
[-334.48297119 596.90039062]
[-340.23324585 583.04266357]
[-345.25650024 568.90515137]
[-349.53918457 554.52600098]
[-353.06976318 539.94390869]
[-355.83874512 525.19824219]
[-357.83859253 510.32873535]
[-359.06399536 495.37545776]
[-359.51159668 480.37872314]
[-359.18020630 465.37899780]
[-358.07070923 450.41668701]
[-356.18609619 435.53210449]
[-353.53149414 420.76544189]
[-350.11398315 406.15643311]
[-345.94284058 391.74453735]
[-341.02926636 377.56854248]
[-335.38653564 363.66668701]
[-329.02984619 350.07644653]
[-321.97634888 336.83447266]
[-314.24505615 323.97644043]
[-305.85678101 311.53701782]
[-296.83416748 299.54977417]
[-287.20150757 288.04696655]
[-276.98483276 277.05966187]
[-266.21160889 266.61746216]
[-254.91093445 256.74847412]
[-243.11325073 247.47935486]
[-230.85037231 238.83508301]
[-218.15533447 230.83894348]
[-205.06239319 223.51251221]
[-191.60682678 216.87551880]
[-177.82490540 210.94587708]
[-163.75378418 205.73956299]
[-149.43141174 201.27061462]
[-134.89639282 197.55108643]
[-120.18789673 194.59097290]
[-105.34558868 192.39830017]
[-90.40947723 190.97894287]
[-75.41983032 190.33674622]
[-60.41705704 190.47343445]
[-45.44160080 191.38864136]
[-30.53383255 193.07991028]
[-15.73394012 195.54266357]
[-1.08182466 198.77026367]
[13.38301659 202.75401306]
[27.62158775 207.48318481]
[41.59550476 212.94502258]
[55.26709366 219.12478638]
[62.14650726 205.79534912]
[69.02591705 192.46592712]
[75.90533447 179.13650513]
[82.78474426 165.80706787]
[87.07886505 151.43486023]
[88.63938904 136.51625061]
[90.19991302 121.59764862]
[91.76043701 106.67903900]
[92.54175568 91.69940186]
[92.54175568 76.69940186]
[92.54175568 61.69940567]
[92.54175568 46.69940567]
[92.54175568 31.69940376]
[92.54175568 16.69940376]
[92.54175568 1.69940388]
[92.54175568 -13.30059624]
[84.80445862 -27.10076904]
[92.54175568 -39.82804108]
[92.54175568 -54.82804108]
[78.04424286 -59.07051849]
[65.32996368 -67.22673035]
[55.42961121 -78.63549042]
[49.14577103 -92.37194061]
[46.98783875 -107.32252502]
[49.13074875 -122.27526855]
[55.40078735 -136.01802063]
[65.28967285 -147.43672180]
[77.99575043 -155.60569763]
[92.48899841 -159.86274719]
[107.59452057 -159.86274719]
[122.08776855 -155.60569763]
[134.79383850 -147.43672180]
[144.68272400 -136.01802063]
[150.95277405 -122.27526855]
[153.09567261 -107.32252502]
[150.93774414 -92.37194061]
[144.65390015 -78.63549042]
[134.75355530 -67.22673035]
[122.03927612 -59.07051849]
[107.54175568 -54.82804108]
[107.54175568 -39.82804108]
[115.27906036 -27.10076904]
[107.54175568 -13.30059624]
[107.54175568 1.69940388]
[107.54175568 16.69940376]
[107.54175568 31.69940376]
[107.54175568 46.69940567]
[107.54175568 61.69940567]
[107.54175568 76.69940186]
[107.54175568 91.69940186]
[118.08611298 81.03091431]
[133.00891113 79.51099396]
[145.48764038 87.83452606]
[149.81721497 102.19609833]
[144.01818848 116.02980042]
[130.74180603 123.01104736]
[116.05786133 119.94811249]
[106.67903900 108.23956299]
[105.11851501 123.15817261]
[103.55799103 138.07676697]
[101.99747467 152.99537659]
[109.99901581 140.30776978]
[120.67749786 129.77354431]
[133.47274780 121.94529724]
[147.71356201 117.23368835]
[162.65289307 115.88587189]
[177.50703430 117.97256470]
[191.49679565 123.38428497]
[203.88827515 131.83715820]
[214.03146362 142.88775635]
[221.39425659 155.95639038]
[225.59042358 170.35751343]
[226.39984131 185.33566284]
[223.78002930 200.10511780]
[217.86845398 213.89108276]
[208.97518921 225.97041321]
[197.56678772 235.70941162]
[184.24168396 242.59721375]
[169.69891357 246.27250671]
[154.70133972 246.54246521]
[140.03572083 243.39294434]
[126.47137451 236.98915100]
[114.71986389 227.66702271]
[105.39764404 215.91558838]
[98.99375153 202.35130310]
[95.84411621 187.68569946]
[96.11417389 172.68647766]
[89.23475647 186.01591492]
[82.35534668 199.34533691]
[75.47593689 212.67477417]
[68.59651947 226.00419617]
[81.55389404 233.56782532]
[94.10121918 241.79379272]
[106.20467377 250.65992737]
[117.83161926 260.14233398]
[128.95072937 270.21542358]
[139.53201294 280.85208130]
[149.54695129 292.02362061]
[158.96853638 303.69989014]
[167.77139282 315.84945679]
[175.93176270 328.43954468]
[183.42765808 341.43621826]
[190.23887634 354.80441284]
[196.34704590 368.50814819]
[201.73570251 382.51043701]
[206.39033508 396.77355957]
[210.29837036 411.25903320]
[213.44929504 425.92785645]
[215.83459473 440.74041748]
[217.44784546 455.65682983]
[218.28471375 470.63687134]
[218.34292603 485.64013672]
[217.62232971 500.62622070]
[216.12486267 515.55468750]
[213.85458374 530.38537598]
[210.81758118 545.07812500]
[207.02206421 559.59350586]
[202.47825623 573.89233398]
[197.19841003 587.93603516]
[191.19676208 601.68670654]
[184.48948669 615.10742188]
[177.09466553 628.16186523]
[169.03222656 640.81488037]
[160.32392883 653.03234863]
[150.99322510 664.78143311]
[141.06527710 676.03033447]
[130.56684875 686.74877930]
[119.52624512 696.90783691]
[107.97322845 706.48016357]
[95.93893433 715.43994141]
[83.45581818 723.76306152]
[70.55753326 731.42700195]
[57.27883911 738.41113281]
[43.65554047 744.69665527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 167]
[77 166]
[78 165]
[79 164]
[80 163]
[81 137]
[82 136]
[83 135]
[84 134]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
