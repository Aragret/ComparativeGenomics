%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[157.03100586 749.40307617]
[163.07734680 733.56396484]
[163.07734680 718.56396484]
[163.07734680 703.56396484]
[163.07734680 688.56396484]
[163.07734680 673.56396484]
[163.07734680 658.56396484]
[163.07734680 643.56396484]
[148.32304382 633.85925293]
[142.29483032 617.09283447]
[147.58407593 599.91424561]
[162.25335693 589.25738525]
[161.80676270 574.26403809]
[158.46549988 567.67175293]
[161.46679688 559.04449463]
[161.24346924 544.04614258]
[161.02014160 529.04779053]
[160.79681396 514.04943848]
[145.97932434 508.43090820]
[134.42439270 497.52984619]
[127.92166138 482.99404907]
[127.49385834 467.03723145]
[133.23605347 452.10192871]
[144.29658508 440.48577881]
[159.00321960 433.98785400]
[158.55662537 418.99450684]
[158.11001587 404.00115967]
[157.66340637 389.00781250]
[157.21679688 374.01446533]
[155.21278381 359.14892578]
[151.67311096 344.57254028]
[148.13343811 329.99618530]
[144.59376526 315.41979980]
[129.98654175 312.40411377]
[118.08827972 303.30792236]
[111.29146576 289.89285278]
[110.99200439 274.79547119]
[117.30282593 261.00924683]
[129.02093506 251.29083252]
[125.48126221 236.71446228]
[121.94158936 222.13807678]
[109.12760925 214.63224792]
[105.33023834 199.90014648]
[113.28993225 186.51055908]
[109.75025940 171.93418884]
[106.21058655 157.35781860]
[102.67091370 142.78143311]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[75.63512421 83.93157196]
[67.77317047 70.89151764]
[69.08171082 55.89979935]
[78.85015106 44.68750000]
[75.31047821 30.11112404]
[71.55417633 15.58906460]
[67.58208466 1.12454093]
[63.60998535 -13.33998299]
[59.63788986 -27.80450630]
[55.66579437 -42.26903152]
[44.55032730 -53.52767181]
[48.64115524 -67.84948730]
[44.66905975 -82.31401062]
[40.69696426 -96.77853394]
[29.58149910 -108.03717804]
[33.67232513 -122.35899353]
[29.70022964 -136.82351685]
[25.77439308 -122.34636688]
[16.66817474 -110.42677307]
[3.73242784 -102.83292389]
[-11.11390495 -100.69133759]
[-25.66845894 -104.31969452]
[-37.77215195 -113.17974854]
[-45.62947464 -125.95716858]
[-48.07484055 -140.75650024]
[-44.74549103 -155.38235474]
[-36.13531494 -167.66505432]
[-23.52158737 -175.78256226]
[-8.77547169 -178.53067017]
[5.91552830 -175.50172424]
[18.37209129 -167.14505005]
[26.74562073 -154.70207214]
[25.85280418 -169.67547607]
[24.95998955 -184.64888000]
[24.06717300 -199.62228394]
[23.17435646 -214.59568787]
[11.63646412 -225.06062317]
[10.94432354 -240.25849915]
[20.99213982 -251.19363403]
[20.09932518 -266.16702271]
[19.20650864 -281.14044189]
[18.31369209 -296.11383057]
[17.30943298 -311.08020020]
[16.19378471 -326.03863525]
[1.66384220 -330.42556763]
[-10.29777241 -339.76818848]
[-18.07335091 -352.80294800]
[-20.61130714 -367.76699829]
[-17.56840706 -382.63659668]
[-9.35617542 -395.40075684]
[2.91474915 -404.33322144]
[17.58482552 -408.22595215]
[32.67004776 -406.55245972]
[46.13026047 -399.53912354]
[56.14508438 -388.13439941]
[61.36009216 -373.88067627]
[61.07000351 -358.70568848]
[55.31404114 -344.66171265]
[44.87065887 -333.64807129]
[31.15223694 -327.15429688]
[32.26788712 -312.19583130]
[35.90016937 -305.75936890]
[33.28709793 -297.00665283]
[34.17991257 -282.03326416]
[35.07273102 -267.05984497]
[35.96554565 -252.08644104]
[47.24160004 -242.42279053]
[48.36034393 -227.25035095]
[38.14776230 -215.48851013]
[39.04057693 -200.51510620]
[39.93339539 -185.54168701]
[40.82621002 -170.56828308]
[41.71902466 -155.59487915]
[44.16475296 -140.79560852]
[48.13684845 -126.33108521]
[58.96820450 -116.10704803]
[55.16148758 -100.75063324]
[59.13358307 -86.28610992]
[63.10567856 -71.82158661]
[73.93703461 -61.59754181]
[70.13031769 -46.24112701]
[74.10241699 -31.77660370]
[78.07450867 -17.31207848]
[82.04660797 -2.84755516]
[86.01869965 11.61696911]
[89.65271759 14.71583843]
[91.37861633 20.13047600]
[89.88685608 26.57145119]
[93.42652893 41.14782715]
[107.24930573 46.63132095]
[115.28773499 59.35326004]
[114.28190613 74.54673767]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[117.24729156 139.24176025]
[120.78696442 153.81814575]
[124.32663727 168.39451599]
[127.86631012 182.97088623]
[141.08035278 191.21871948]
[144.46244812 206.05166626]
[136.51795959 218.59840393]
[140.05763245 233.17478943]
[143.59730530 247.75115967]
[158.46748352 251.01296997]
[170.39820862 260.36950684]
[177.05616760 273.92279053]
[177.16885376 288.96102905]
[170.76747131 302.50103760]
[159.17015076 311.88012695]
[162.70982361 326.45651245]
[166.24949646 341.03286743]
[169.78916931 355.60925293]
[174.14430237 341.25540161]
[183.60136414 329.61221313]
[196.75747681 322.40689087]
[211.66099548 320.70828247]
[226.10105896 324.76837158]
[237.93559265 333.98486328]
[245.40899658 346.99057007]
[247.41265869 361.85614014]
[243.64930725 376.37637329]
[234.67726135 388.39727783]
[221.82742310 396.13562012]
[207.00602722 398.44348145]
[192.41172791 394.97848511]
[180.20948792 386.25463867]
[172.21014404 373.56784058]
[172.65675354 388.56118774]
[173.10336304 403.55453491]
[173.54997253 418.54791260]
[173.99658203 433.54125977]
[187.45355225 438.20608521]
[198.48683167 447.16534424]
[205.78390503 459.32696533]
[208.48576355 473.21966553]
[206.28784180 487.17071533]
[199.47431946 499.50744629]
[188.88146973 508.75787354]
[175.79515076 513.82611084]
[176.01847839 528.82446289]
[176.24180603 543.82281494]
[176.46513367 558.82116699]
[176.80010986 573.81738281]
[177.24670410 588.81072998]
[188.41265869 594.43121338]
[196.08493042 604.20898438]
[198.85580444 616.25067139]
[196.25926208 628.25726318]
[188.84803772 637.96325684]
[178.07734680 643.56396484]
[178.07734680 658.56396484]
[178.07734680 673.56396484]
[178.07734680 688.56396484]
[178.07734680 703.56396484]
[178.07734680 718.56396484]
[178.07734680 733.56396484]
[184.12368774 749.40307617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[12 197]
[13 196]
[15 195]
[16 194]
[17 193]
[18 192]
[25 184]
[26 183]
[27 182]
[28 181]
[29 180]
[30 165]
[31 164]
[32 163]
[33 162]
[39 156]
[40 155]
[41 154]
[44 151]
[45 150]
[46 149]
[47 148]
[48 147]
[49 146]
[51 144]
[55 140]
[56 139]
[57 136]
[58 135]
[59 134]
[60 133]
[61 132]
[63 130]
[64 129]
[65 128]
[67 126]
[68 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[90 117]
[91 116]
[92 115]
[93 114]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
