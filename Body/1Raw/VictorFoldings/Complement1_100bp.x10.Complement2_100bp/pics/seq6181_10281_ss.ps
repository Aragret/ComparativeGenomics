%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-7.58791304 516.60131836]
[-7.66067266 531.62390137]
[-9.73516273 546.50274658]
[-13.77436066 560.97229004]
[-19.70618248 574.77435303]
[-27.42476845 587.66259766]
[-36.79236984 599.40704346]
[-47.64181519 609.79803467]
[-59.77947617 618.65020752]
[-72.98874664 625.80554199]
[-87.03388977 631.13629150]
[-101.66426086 634.54742432]
[-116.61875153 635.97802734]
[-131.63049316 635.40252686]
[-146.43156433 632.83129883]
[-160.75785828 628.31011963]
[-174.35366821 621.91967773]
[-186.97637939 613.77410889]
[-198.40071106 604.01867676]
[-208.42280579 592.82757568]
[-216.86378479 580.40045166]
[-223.57302856 566.95910645]
[-228.43078613 552.74346924]
[-231.35037231 538.00708008]
[-232.27969360 523.01312256]
[-231.20214844 508.02905273]
[-228.13696289 493.32229614]
[-223.13885498 479.15536499]
[-216.29702759 465.78103638]
[-207.73355103 453.43798828]
[-197.60127258 442.34652710]
[-186.08102417 432.70458984]
[-173.37837219 424.68423462]
[-159.72003174 418.42858887]
[-145.34973145 414.04931641]
[-130.52395630 411.62454224]
[-115.50725555 411.19754028]
[-100.56764221 412.77593994]
[-85.97172546 416.33160400]
[-71.97998810 421.80102539]
[-64.70675659 408.68234253]
[-65.30242157 393.79965210]
[-51.84407806 385.48196411]
[-44.57085037 372.36328125]
[-37.29761887 359.24456787]
[-45.49578857 343.60290527]
[-42.63822556 326.01641846]
[-29.68278122 313.55703735]
[-11.68597603 311.34960938]
[-4.80656338 298.02017212]
[-6.57705641 280.56072998]
[9.00064850 270.74151611]
[15.68084335 257.31115723]
[22.36103821 243.88078308]
[14.30497265 229.57772827]
[16.38252258 213.12641907]
[27.97144890 201.03517151]
[44.64757156 198.20622253]
[51.12706757 184.67787170]
[57.60656357 171.14952087]
[56.12612534 156.32867432]
[69.06552887 147.22470093]
[67.58509064 132.40385437]
[80.52449036 123.29987335]
[87.00399017 109.77152252]
[85.28363037 93.08570099]
[99.22577667 83.75870514]
[105.50313568 70.13539124]
[109.47522736 55.67086411]
[111.03575134 40.75226212]
[112.59627533 25.83365631]
[114.15679932 10.91505146]
[115.60621643 -4.01475716]
[116.94445038 -18.95494270]
[118.28268433 -33.89512634]
[119.62091827 -48.83531189]
[120.95915222 -63.77549744]
[122.18612671 -78.72522736]
[123.30178070 -93.68368530]
[124.41742706 -108.64213562]
[125.53307343 -123.60059357]
[126.20285797 -138.58563232]
[126.42618561 -153.58396912]
[114.01420593 -165.91125488]
[114.35128784 -183.06355286]
[126.74054718 -194.43653870]
[126.74054718 -209.43653870]
[126.74054718 -224.43653870]
[126.74054718 -239.43653870]
[126.74054718 -254.43653870]
[126.74054718 -269.43655396]
[117.16585541 -285.16571045]
[126.52658081 -300.00970459]
[126.30325317 -315.00802612]
[125.96827698 -330.00430298]
[125.52167511 -344.99765015]
[125.07506561 -359.99099731]
[110.85187531 -365.35470581]
[99.76738739 -375.75674438]
[93.51188660 -389.61087036]
[93.03931427 -404.80447388]
[98.42172241 -419.02059937]
[108.83833313 -430.09140015]
[122.70069122 -436.32864380]
[137.89488220 -436.78125000]
[152.10391235 -431.38012695]
[163.16101074 -420.94897461]
[169.38003540 -407.07843018]
[169.81263733 -391.88363647]
[164.39283752 -377.68173218]
[153.94714355 -366.63836670]
[140.06842041 -360.43759155]
[140.51502991 -345.44424438]
[140.96162415 -330.45089722]
[144.30288696 -323.85864258]
[141.30158997 -315.23135376]
[141.52491760 -300.23303223]
[149.98356628 -291.58560181]
[150.29237366 -279.09207153]
[141.74053955 -269.43655396]
[141.74053955 -254.43653870]
[141.74053955 -239.43653870]
[141.74053955 -224.43653870]
[141.74053955 -209.43653870]
[141.74053955 -194.43653870]
[152.03694153 -186.68969727]
[156.05137634 -174.24114990]
[152.10496521 -161.56690979]
[141.42453003 -153.36064148]
[141.20120239 -138.36230469]
[143.05462646 -136.25921631]
[144.18666077 -133.29525757]
[144.26524353 -129.74148560]
[143.06248474 -125.98411560]
[140.49153137 -122.48493958]
[139.37588501 -107.52648926]
[138.26023865 -92.56803894]
[137.14457703 -77.60958099]
[139.78189087 -70.70549774]
[135.89933777 -62.43726349]
[134.56111145 -47.49707794]
[133.22286987 -32.55689240]
[131.88464355 -17.61670876]
[130.54640198 -2.67652273]
[133.08062744 4.26606512]
[129.07540894 12.47557449]
[127.51487732 27.39418030]
[125.95436096 42.31278229]
[124.39383698 57.23138809]
[132.47230530 44.59262848]
[143.51075745 34.43621445]
[156.77702332 27.43578339]
[171.39122009 24.05564880]
[186.38403320 24.52000046]
[200.76103210 28.79804230]
[213.56866455 36.60602570]
[223.95744324 47.42607880]
[231.23829651 60.54054260]
[234.92832947 75.07958221]
[234.78277588 90.07887268]
[230.81132507 104.54357147]
[223.27735901 117.51428986]
[212.68058777 128.13070679]
[199.72386169 135.68870544]
[185.26654053 139.68695068]
[170.26754761 139.86029053]
[155.72169495 136.19721985]
[142.59376526 128.94067383]
[131.75447083 118.57197571]
[123.92276764 105.77883911]
[119.61809540 91.40978241]
[119.12644958 76.41275024]
[112.84909058 90.03606415]
[116.21649170 101.18514252]
[111.26392365 111.72617340]
[100.53233337 116.25102234]
[94.05283356 129.77937317]
[95.06981659 145.56785583]
[82.59387207 153.70419312]
[83.61085510 169.49267578]
[71.13491058 177.62902832]
[64.65541077 191.15736389]
[58.17591476 204.68571472]
[65.61730957 216.28814697]
[66.34822083 229.94407654]
[60.28454208 242.08085632]
[49.10577393 249.57614136]
[35.79141235 250.56097412]
[29.11121941 263.99136353]
[22.43102455 277.42172241]
[25.78792191 289.87539673]
[19.94747925 300.92407227]
[8.52286625 304.89959717]
[1.64345324 318.22900391]
[8.68371201 328.55871582]
[10.65265465 340.83029175]
[7.23722076 352.70523071]
[-0.85545707 361.94696045]
[-12.04343605 366.84207153]
[-24.17892647 366.51782227]
[-31.45215607 379.63650513]
[-38.72538376 392.75518799]
[-38.64995575 408.57623291]
[-51.58806229 415.95556641]
[-58.86129379 429.07424927]
[-46.80994797 438.04354858]
[-36.06166458 448.53918457]
[-26.80826378 460.37377930]
[-19.21488190 473.33618164]
[-13.41703129 487.19506836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 205]
[41 204]
[43 202]
[44 201]
[45 200]
[49 194]
[50 193]
[52 190]
[53 189]
[54 188]
[58 183]
[59 182]
[60 181]
[62 179]
[64 177]
[65 176]
[67 173]
[68 172]
[69 149]
[70 148]
[71 147]
[72 146]
[73 144]
[74 143]
[75 142]
[76 141]
[77 140]
[78 138]
[79 137]
[80 136]
[81 135]
[82 130]
[83 129]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[93 117]
[94 116]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
