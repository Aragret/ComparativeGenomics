%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[-20.88741112 862.05291748]
[-35.75162125 864.08654785]
[-50.69389343 865.43157959]
[-65.68234253 866.08508301]
[-80.68497467 866.04571533]
[-95.66978455 865.31341553]
[-110.60478210 863.88995361]
[-125.45810699 861.77819824]
[-140.19804382 858.98272705]
[-154.79316711 855.50946045]
[-169.21229553 851.36590576]
[-183.42466736 846.56079102]
[-197.39997864 841.10449219]
[-211.10836792 835.00854492]
[-224.52061462 828.28601074]
[-237.60806274 820.95123291]
[-250.34280396 813.01983643]
[-262.69766235 804.50878906]
[-274.64627075 795.43621826]
[-286.16311646 785.82147217]
[-297.22363281 775.68511963]
[-307.80422974 765.04876709]
[-317.88229370 753.93511963]
[-327.43634033 742.36791992]
[-336.44598389 730.37176514]
[-344.89199829 717.97235107]
[-352.75634766 705.19610596]
[-360.02224731 692.07031250]
[-366.67419434 678.62292480]
[-372.69799805 664.88269043]
[-378.08078003 650.87884521]
[-382.81109619 636.64141846]
[-386.87884521 622.20074463]
[-390.27529907 607.58758545]
[-392.99328613 592.83312988]
[-395.02691650 577.96893311]
[-396.37191772 563.02661133]
[-397.02539062 548.03820801]
[-396.98596191 533.03552246]
[-396.25366211 518.05072021]
[-394.83013916 503.11575317]
[-392.71835327 488.26242065]
[-389.92285156 473.52249146]
[-386.44958496 458.92739868]
[-382.30596924 444.50827026]
[-377.50085449 430.29589844]
[-372.04449463 416.32058716]
[-365.94854736 402.61221313]
[-359.22595215 389.19998169]
[-351.89114380 376.11254883]
[-343.95974731 363.37783813]
[-335.44863892 351.02297974]
[-326.37606812 339.07440186]
[-316.76132202 327.55758667]
[-306.62493896 316.49707031]
[-295.98858643 305.91650391]
[-284.87490845 295.83847046]
[-273.30767822 286.28442383]
[-261.31152344 277.27481079]
[-248.91209412 268.82882690]
[-236.13581848 260.96453857]
[-223.00997925 253.69865417]
[-209.56257629 247.04672241]
[-195.82231140 241.02294922]
[-181.81852722 235.64018250]
[-167.58106995 230.90989685]
[-153.14035034 226.84219360]
[-138.52717590 223.44573975]
[-123.77273560 220.72781372]
[-108.90851593 218.69419861]
[-93.96623993 217.34924316]
[-78.97779083 216.69578552]
[-63.97515488 216.73526001]
[-48.99035263 217.46757507]
[-34.05535889 218.89114380]
[-19.20204544 221.00296021]
[-4.46211243 223.79849243]
[10.13298512 227.27177429]
[24.55209923 231.41542053]
[38.76446152 236.22056580]
[44.21981812 222.24775696]
[49.67517471 208.27496338]
[55.13053131 194.30216980]
[60.58588791 180.32937622]
[66.04124451 166.35656738]
[59.84424591 152.86091614]
[65.17770386 138.61279297]
[79.37520599 132.20431519]
[84.83056641 118.23152161]
[90.28591919 104.25872040]
[95.11192322 90.05626678]
[99.29893494 75.65248108]
[103.48593903 61.24869919]
[107.67295074 46.84491730]
[111.85996246 32.44113541]
[114.85473633 17.74313354]
[116.63720703 2.84941554]
[118.41967010 -12.04430199]
[120.20214081 -26.93801880]
[121.98460388 -41.83173752]
[108.24686432 -48.16653061]
[97.14042664 -58.43796539]
[89.75340271 -71.63974762]
[86.80947876 -86.47849274]
[88.59708405 -101.50046539]
[94.94108582 -115.23396301]
[105.21996307 -126.33351135]
[118.42668915 -133.71168518]
[133.26741028 -136.64566040]
[148.28817749 -134.84799194]
[162.01741028 -128.49479675]
[173.11007690 -118.20848846]
[180.47940063 -104.99681854]
[183.40344238 -90.15413666]
[181.59570312 -75.13457489]
[175.23330688 -61.40959167]
[164.93955994 -50.32382965]
[151.72296143 -42.96335602]
[136.87832642 -40.04927063]
[135.09585571 -25.15555382]
[133.31338501 -10.26183605]
[131.53092957 4.63188124]
[129.74845886 19.52559853]
[139.61853027 8.23039055]
[153.57360840 2.72986126]
[168.49609375 4.25284195]
[181.05226135 12.45909500]
[188.43702698 25.51532364]
[189.00064087 40.50473022]
[182.61715698 54.07864761]
[170.71267700 63.20462418]
[155.94670105 65.84389496]
[141.61796570 61.40683746]
[130.92756653 50.88470840]
[126.26374817 36.62814713]
[122.07673645 51.03192902]
[117.88972473 65.43571472]
[113.70271301 79.83949280]
[109.51570129 94.24327850]
[123.14871216 87.98699951]
[137.25991821 93.07363892]
[143.76577759 106.58932495]
[138.93943787 120.79166412]
[125.54565430 127.54491425]
[111.25698090 122.98049927]
[104.25872040 109.71408081]
[98.80335999 123.68687439]
[93.34800720 137.65966797]
[99.44748688 151.99264526]
[93.71593475 166.08534241]
[80.01404572 171.81193542]
[74.55868530 185.78472900]
[69.10333252 199.75752258]
[63.64797211 213.73031616]
[58.19261551 227.70312500]
[52.73725891 241.67591858]
[66.44567871 247.77180481]
[79.85794830 254.49427795]
[92.94542694 261.82901001]
[105.68020630 269.76034546]
[118.03509521 278.27136230]
[129.98373413 287.34387207]
[141.50062561 296.95855713]
[152.56118774 307.09484863]
[163.14181519 317.73114014]
[173.21994019 328.84475708]
[182.77403259 340.41195679]
[191.78372192 352.40802002]
[200.22978210 364.80740356]
[208.09417725 377.58364868]
[215.36013794 390.70944214]
[222.01214600 404.15679932]
[228.03599548 417.89700317]
[233.41886902 431.90078735]
[238.14924622 446.13821411]
[242.21704102 460.57888794]
[245.61357117 475.19204712]
[248.33158875 489.94647217]
[250.36529541 504.81066895]
[251.71035767 519.75292969]
[252.36389160 534.74139404]
[252.32450867 549.74401855]
[251.59230042 564.72882080]
[250.16880798 579.66381836]
[248.05709839 594.51715088]
[245.26165771 609.25714111]
[241.78845215 623.85223389]
[237.64489746 638.27136230]
[232.83984375 652.48376465]
[227.38354492 666.45904541]
[221.28762817 680.16748047]
[214.56512451 693.57971191]
[207.23036194 706.66717529]
[199.29899597 719.40197754]
[190.78796387 731.75683594]
[181.71542358 743.70544434]
[172.10072327 755.22235107]
[161.96440125 766.28289795]
[151.32807922 776.86346436]
[140.21446228 786.94158936]
[128.64724731 796.49566650]
[116.65114594 805.50531006]
[104.25173950 813.95135498]
[91.47550201 821.81573486]
[78.34969330 829.08166504]
[64.90232086 835.73364258]
[51.16208649 841.75744629]
[37.15830994 847.14025879]
[22.92087936 851.87060547]
[8.48017597 855.93841553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 156]
[81 155]
[82 154]
[83 153]
[84 152]
[85 151]
[88 148]
[89 147]
[90 146]
[91 139]
[92 138]
[93 137]
[94 136]
[95 135]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
