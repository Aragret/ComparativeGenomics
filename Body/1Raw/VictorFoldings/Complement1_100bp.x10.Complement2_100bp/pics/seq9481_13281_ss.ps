%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[65.93802643 417.12707520]
[59.37176514 430.62710571]
[51.51386642 443.41851807]
[42.44001389 455.37811279]
[32.23759842 466.39071655]
[21.00486946 476.35025024]
[8.85001373 485.16082764]
[-4.10991096 492.73757935]
[-17.75008965 499.00753784]
[-31.93915558 503.91030884]
[-46.54045486 507.39871216]
[-61.41337204 509.43908691]
[-76.41466522 510.01181030]
[-91.39985657 509.11138916]
[-106.22463226 506.74649048]
[-120.74621582 502.93984985]
[-134.82475281 497.72817993]
[-148.32466125 491.16165161]
[-161.11592102 483.30349731]
[-173.07533264 474.22940063]
[-184.08773804 464.02676392]
[-194.04705811 452.79385376]
[-202.85739136 440.63882446]
[-210.43388367 427.67874146]
[-216.70356750 414.03842163]
[-221.60606384 399.84927368]
[-225.09414673 385.24789429]
[-227.13423157 370.37493896]
[-227.70666504 355.37362671]
[-226.80593872 340.38845825]
[-224.44073486 325.56372070]
[-220.63381958 311.04223633]
[-215.42187500 296.96380615]
[-208.85505676 283.46401978]
[-200.99665833 270.67291260]
[-191.92233276 258.71368408]
[-181.71946716 247.70149231]
[-170.48634338 237.74238586]
[-158.33113098 228.93229675]
[-145.37091064 221.35606384]
[-131.73048401 215.08665466]
[-117.54121399 210.18444824]
[-102.93977356 206.69665527]
[-88.06677246 204.65686035]
[-73.06546021 204.08473206]
[-58.08030319 204.98574829]
[-43.25562286 207.35125732]
[-28.73418999 211.15846252]
[-14.65585995 216.37069702]
[-1.15621865 222.93777466]
[6.69553709 210.15692139]
[14.54729271 197.37608337]
[22.39904785 184.59524536]
[8.07475281 189.04660034]
[-6.16691399 184.33757019]
[-15.01416302 172.22451782]
[-15.16718960 157.22529602]
[-6.56891775 144.93424988]
[7.57370901 139.93563843]
[21.98584175 144.09382629]
[31.29210854 155.85789490]
[32.02120209 170.84127808]
[41.33608627 159.08403015]
[50.65097046 147.32678223]
[51.00071716 142.56372070]
[54.34630203 137.96980286]
[60.42241669 135.36358643]
[70.08322906 123.88888550]
[79.74404144 112.41418457]
[89.40484619 100.93948364]
[98.18545532 88.77803040]
[106.03720856 75.99718475]
[113.88896179 63.21634293]
[121.74072266 50.43550110]
[129.59246826 37.65465927]
[137.44422913 24.87381554]
[145.29598999 12.09297276]
[145.92707825 -3.71564198]
[159.18179321 -10.50990009]
[167.03353882 -23.29074287]
[167.10881042 -41.70475388]
[182.85476685 -49.45278549]
[190.51536560 -62.34910965]
[198.17596436 -75.24543762]
[205.83656311 -88.14176178]
[213.49714661 -101.03809357]
[201.27023315 -109.74222565]
[189.80386353 -119.42633057]
[179.17636108 -130.02424622]
[169.46034241 -141.46359253]
[160.72218323 -153.66621399]
[153.02154541 -166.54875183]
[146.41104126 -180.02319336]
[140.93585205 -193.99752808]
[136.63336182 -208.37626648]
[133.53295898 -223.06118774]
[131.65582275 -237.95198059]
[131.01477051 -252.94694519]
[131.61421204 -267.94360352]
[133.45001221 -282.83956909]
[136.50965881 -297.53302002]
[140.77224731 -311.92364502]
[146.20864868 -325.91311646]
[152.78172302 -339.40585327]
[160.44659424 -352.30972290]
[169.15086365 -364.53652954]
[178.83511353 -376.00277710]
[189.43315125 -386.63015747]
[200.87260437 -396.34603882]
[213.07533264 -405.08407593]
[225.95796204 -412.78454590]
[239.43249512 -419.39486694]
[253.40689087 -424.86990356]
[267.78567505 -429.17224121]
[282.47064209 -432.27246094]
[297.36145020 -434.14941406]
[312.35641479 -434.79028320]
[327.35308838 -434.19067383]
[342.24902344 -432.35467529]
[356.94244385 -429.29486084]
[371.33300781 -425.03210449]
[385.32241821 -419.59555054]
[398.81509399 -413.02230835]
[411.71884155 -405.35729980]
[423.94555664 -396.65286255]
[435.41168213 -386.96847534]
[446.03894043 -376.37030029]
[455.75466919 -364.93072510]
[464.49255371 -352.72790527]
[472.19290161 -339.84518433]
[478.80307007 -326.37057495]
[484.27792358 -312.39611816]
[488.58007812 -298.01727295]
[491.68014526 -283.33227539]
[493.55691528 -268.44143677]
[494.19760132 -253.44647217]
[493.59780884 -238.44981384]
[491.76165771 -223.55390930]
[488.70166016 -208.86050415]
[484.43872070 -194.46998596]
[479.00198364 -180.48065186]
[472.42858887 -166.98806763]
[464.76342773 -154.08439636]
[456.05883789 -141.85778809]
[446.37432861 -130.39176941]
[435.77603149 -119.76464844]
[424.33633423 -110.04904175]
[412.13342285 -101.31130219]
[399.25061035 -93.61112976]
[385.77590942 -87.00111389]
[371.80139160 -81.52642059]
[357.42251587 -77.22444153]
[342.73745728 -74.12455750]
[327.84658813 -72.24795532]
[312.85162354 -71.60745239]
[297.85498047 -72.20742035]
[282.95907593 -74.04376221]
[268.26571655 -77.10393524]
[253.87525940 -81.36702728]
[239.88598633 -86.80393219]
[226.39347839 -93.37749481]
[218.73287964 -80.48117065]
[211.07228088 -67.58483887]
[203.41168213 -54.68851471]
[195.75108337 -41.79218674]
[198.43182373 -29.99641609]
[192.15521240 -19.18957901]
[179.81437683 -15.43898678]
[171.96263123 -2.65814447]
[171.89314270 12.23629856]
[158.07682800 19.94472885]
[150.22506714 32.72557068]
[142.37332153 45.50641251]
[134.52156067 58.28725433]
[126.66980743 71.06809998]
[118.81805420 83.84893799]
[110.96629333 96.62978363]
[124.84622192 90.94228363]
[139.72329712 92.85874176]
[151.70867920 101.87819672]
[157.66941833 115.64299011]
[156.04739380 130.55503845]
[147.26661682 142.71635437]
[133.62232971 148.94801331]
[118.68113708 147.62107849]
[106.34862518 139.08239746]
[99.84848785 125.56395721]
[100.87954712 110.60029602]
[91.21874237 122.07499695]
[81.55792999 133.54969788]
[71.89711761 145.02439880]
[62.40821838 156.64166260]
[53.09333801 168.39891052]
[43.77845383 180.15615845]
[35.17988968 192.44699097]
[27.32813454 205.22784424]
[19.47637939 218.00868225]
[11.62462425 230.78952026]
[23.58440399 239.86314392]
[34.59721375 250.06533813]
[44.55698776 261.29785156]
[53.36780548 273.45254517]
[60.94481659 286.41232300]
[67.21504211 300.05236816]
[72.11810303 314.24133301]
[75.60677338 328.84255981]
[77.64745331 343.71545410]
[78.22048950 358.71673584]
[77.32036591 373.70193481]
[74.95575714 388.52676392]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 198]
[51 197]
[52 196]
[53 195]
[62 194]
[63 193]
[64 192]
[67 191]
[68 190]
[69 189]
[70 188]
[71 177]
[72 176]
[73 175]
[74 174]
[75 173]
[76 172]
[77 171]
[79 169]
[80 168]
[82 165]
[83 164]
[84 163]
[85 162]
[86 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
