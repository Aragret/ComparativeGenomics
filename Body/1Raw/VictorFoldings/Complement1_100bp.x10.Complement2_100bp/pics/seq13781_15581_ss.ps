%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[105.56018066 653.73333740]
[91.51918030 648.44317627]
[77.81968689 642.32275391]
[64.51073456 635.39404297]
[51.63997650 627.68176270]
[39.25348282 619.21356201]
[27.39559174 610.01977539]
[16.10875320 600.13330078]
[5.43337393 589.58947754]
[-4.59233332 578.42608643]
[-13.93247795 566.68316650]
[-22.55362511 554.40258789]
[-30.42491341 541.62847900]
[-37.51816559 528.40649414]
[-43.80798721 514.78393555]
[-49.27186203 500.80963135]
[-53.89023590 486.53356934]
[-57.64657211 472.00683594]
[-60.52742386 457.28149414]
[-62.52248001 442.41018677]
[-63.62459564 427.44619751]
[-63.82983017 412.44308472]
[-63.13744354 397.45455933]
[-61.54991913 382.53427124]
[-59.07293701 367.73559570]
[-55.71536636 353.11157227]
[-51.48922348 338.71453857]
[-46.40964127 324.59597778]
[-40.49479675 310.80648804]
[-33.76586914 297.39541626]
[-26.24694633 284.41073608]
[-17.96494293 271.89898682]
[-8.94950485 259.90493774]
[0.76709223 248.47151184]
[11.15006638 237.63964844]
[22.16224861 227.44810486]
[33.76421738 217.93339539]
[45.91444397 209.12956238]
[58.56942749 201.06811523]
[71.68386841 193.77792358]
[85.21082306 187.28507996]
[99.10186768 181.61282349]
[113.30727386 176.78146362]
[109.33517456 162.31694031]
[105.36308289 147.85241699]
[101.39098358 133.38789368]
[97.41889191 118.92337799]
[84.87813568 111.66557312]
[81.04122162 97.69329834]
[88.11658478 85.04872131]
[84.14449310 70.58419800]
[75.80324554 83.05110168]
[61.11710358 86.10351562]
[48.49895477 77.99288940]
[45.17704773 63.36534882]
[53.05431747 50.60021591]
[67.61830902 47.00994110]
[80.52553558 54.65043640]
[77.85974121 39.88921738]
[75.19394684 25.12800217]
[72.52815247 10.36678410]
[69.86235809 -4.39443302]
[54.92284012 -2.95553827]
[39.91552734 -2.75526333]
[24.94293594 -3.79497576]
[10.10734177 -6.06757307]
[-4.48990917 -9.55753136]
[-18.74910164 -14.24100971]
[-32.57283020 -20.08601570]
[-45.86666107 -27.05261993]
[-58.53978348 -35.09323502]
[-70.50563049 -44.15293121]
[-81.68244934 -54.16982269]
[-91.99391174 -65.07548523]
[-101.36955261 -76.79541779]
[-109.74534607 -89.24955750]
[-117.06406403 -102.35283661]
[-123.27571869 -116.01573181]
[-128.33787537 -130.14492798]
[-132.21595764 -144.64389038]
[-134.88346863 -159.41358948]
[-136.32218933 -174.35311890]
[-136.52227783 -189.36044312]
[-135.48239136 -204.33302307]
[-133.20960999 -219.16857910]
[-129.71948242 -233.76579285]
[-125.03583527 -248.02493286]
[-119.19066620 -261.84860229]
[-112.22389984 -275.14233398]
[-104.18313599 -287.81536865]
[-95.12329865 -299.78109741]
[-85.10626984 -310.95779419]
[-74.20048523 -321.26913452]
[-62.48044586 -330.64462280]
[-50.02620316 -339.02029419]
[-36.92284012 -346.33883667]
[-23.25986290 -352.55032349]
[-9.13060951 -357.61233521]
[5.36840343 -361.49023438]
[20.13813210 -364.15756226]
[35.07768250 -365.59609985]
[50.08499908 -365.79602051]
[65.05756378 -364.75595093]
[79.89310455 -362.48300171]
[94.49027252 -358.99270630]
[108.74935150 -354.30886841]
[122.57294464 -348.46353149]
[135.86660767 -341.49661255]
[148.53953552 -333.45571899]
[160.50517273 -324.39572144]
[171.68174744 -314.37857056]
[181.99295044 -303.47265625]
[191.36831665 -291.75250244]
[199.74380493 -279.29815674]
[207.06222534 -266.19470215]
[213.27354431 -252.53166199]
[218.33537292 -238.40234375]
[222.21310425 -223.90328979]
[224.88026428 -209.13352966]
[226.31861877 -194.19395447]
[226.51835632 -179.18664551]
[225.47810364 -164.21408081]
[223.20498657 -149.37857056]
[219.71450806 -134.78144836]
[215.03051758 -120.52242279]
[209.18501282 -106.69890594]
[202.21794128 -93.40531921]
[194.17686462 -80.73248291]
[185.11674500 -68.76696777]
[175.09945679 -57.59049988]
[164.19342041 -47.27943420]
[152.47315979 -37.90420532]
[140.01870728 -29.52886009]
[126.91517639 -22.21060753]
[113.25205231 -15.99944019]
[99.12268066 -10.93778896]
[84.62357330 -7.06022835]
[87.28936768 7.70098877]
[89.95516205 22.46220589]
[92.62095642 37.22342300]
[95.28675842 51.98464203]
[98.60901642 66.61209869]
[102.58110809 81.07662201]
[115.12186432 88.33442688]
[118.95877838 102.30670166]
[111.88341522 114.95127869]
[115.85550690 129.41580200]
[119.82760620 143.88032532]
[123.79970551 158.34484863]
[127.77179718 172.80937195]
[142.45237732 169.70835876]
[157.29212952 167.49085999]
[172.23793030 166.16481018]
[187.23628235 165.73497009]
[202.23350525 166.20285034]
[217.17590332 167.56678772]
[232.00997925 169.82191467]
[246.68264771 172.96014404]
[261.14135742 176.97024536]
[275.33438110 181.83787537]
[289.21090698 187.54557800]
[302.72122192 194.07295227]
[315.81701660 201.39660645]
[328.45135498 209.49034119]
[340.57907104 218.32519531]
[352.15670776 227.86950684]
[363.14282227 238.08912659]
[373.49807739 248.94747925]
[383.18545532 260.40570068]
[392.17022705 272.42272949]
[400.42025757 284.95559692]
[407.90597534 297.95941162]
[414.60064697 311.38763428]
[420.48025513 325.19219971]
[425.52374268 339.32366943]
[429.71310425 353.73147583]
[433.03332520 368.36401367]
[435.47250366 383.16894531]
[437.02191162 398.09326172]
[437.67602539 413.08349609]
[437.43246460 428.08602905]
[436.29214478 443.04718018]
[434.25912476 457.91329956]
[431.34066772 472.63125610]
[427.54724121 487.14834595]
[422.89242554 501.41256714]
[417.39288330 515.37286377]
[411.06826782 528.97930908]
[403.94128418 542.18316650]
[396.03738403 554.93713379]
[387.38491821 567.19561768]
[378.01480103 578.91467285]
[367.96063232 590.05242920]
[357.25836182 600.56890869]
[345.94628906 610.42657471]
[334.06497192 619.59002686]
[321.65689087 628.02655029]
[308.76647949 635.70593262]
[295.43988037 642.60064697]
[281.72479248 648.68603516]
[267.67031860 653.94030762]
[253.32678223 658.34466553]
[238.74551392 661.88336182]
[223.97871399 664.54370117]
[209.07925415 666.31610107]
[194.10046387 667.19433594]
[179.09594727 667.17517090]
[164.11944580 666.25866699]
[149.22456360 664.44824219]
[134.46461487 661.75018311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 150]
[44 149]
[45 148]
[46 147]
[47 146]
[50 143]
[51 142]
[58 141]
[59 140]
[60 139]
[61 138]
[62 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
