%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[109.44179535 619.79919434]
[94.44078064 619.12872314]
[79.60916901 616.78283691]
[65.13347626 612.79101562]
[51.19575500 607.20355225]
[37.97128677 600.09063721]
[25.62638474 591.54174805]
[14.31629562 581.66442871]
[4.18325615 570.58282471]
[-4.64529848 558.43634033]
[-12.05834007 545.37774658]
[-17.96264267 531.57128906]
[-22.28395271 517.19049072]
[-24.96792603 502.41635132]
[-25.98080826 487.43453979]
[-25.30986023 472.43356323]
[-22.96352005 457.60202026]
[-18.97129822 443.12643433]
[-13.38339710 429.18887329]
[-6.27009344 415.96463013]
[2.27915645 403.61999512]
[12.15683651 392.31018066]
[23.23872566 382.17749023]
[35.38545609 373.34927368]
[48.44426727 365.93664551]
[62.25093842 360.03274536]
[76.63182831 355.71185303]
[91.40608215 353.02832031]
[106.38790894 352.01589966]
[107.05769348 337.03085327]
[107.72747803 322.04583740]
[108.39726257 307.06079102]
[108.95547485 292.07116699]
[109.40207672 277.07781982]
[109.84868622 262.08447266]
[110.29528809 247.09112549]
[110.74189758 232.09777832]
[111.18849945 217.10443115]
[110.07285309 202.14596558]
[107.40705872 187.38475037]
[104.74126434 172.62353516]
[102.07546997 157.86231995]
[97.79327393 151.83865356]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[85.71914673 59.58412933]
[83.27342224 44.78485870]
[80.82769012 29.98558807]
[70.94383240 17.63164330]
[76.50243378 3.81313205]
[74.05670166 -10.98613834]
[69.68192291 3.36172748]
[62.04294968 16.27087593]
[51.57180786 27.01123047]
[38.86069489 34.97537231]
[24.62847900 39.71289062]
[9.68006706 40.95585632]
[-5.13913918 38.63397217]
[-18.99103928 32.87855530]
[-31.09224319 24.01509666]
[-40.75836945 12.54487419]
[-47.44274902 -0.88341945]
[-50.76734924 -15.51034737]
[-50.54415131 -30.50868607]
[-46.78577423 -45.03020859]
[-39.70476913 -58.25365067]
[-29.70160866 -69.43115997]
[-17.34201622 -77.93060303]
[-3.32498717 -83.27128601]
[11.55674744 -85.15116882]
[26.46155357 -83.46393585]
[40.54649353 -78.30501556]
[53.01499176 -69.96615601]
[63.16189957 -58.91897202]
[70.41335297 -45.78823090]
[74.35941315 -31.31547546]
[69.42108154 -46.34622574]
[79.46200562 -57.34754944]
[82.34728241 -72.06744385]
[85.23255157 -86.78733063]
[88.11782074 -101.50722504]
[91.00309753 -116.22711182]
[76.71045685 -120.83762360]
[63.06344986 -127.10623932]
[50.25365829 -134.94496155]
[38.46091461 -144.24375916]
[27.85076904 -154.87207031]
[18.57217216 -166.68070984]
[10.75538063 -179.50390625]
[4.51012897 -193.16162109]
[-0.07590832 -207.46212769]
[-2.93835044 -222.20468140]
[-4.03701305 -237.18231201]
[-3.35647321 -252.18475342]
[-0.90628427 -267.00140381]
[3.27915692 -281.42422485]
[9.14109325 -295.25079346]
[16.59723282 -308.28698730]
[25.54290199 -320.34982300]
[35.85251999 -331.26989746]
[47.38135147 -340.89395142]
[59.96755219 -349.08685303]
[73.43443298 -355.73361206]
[87.59293365 -360.74093628]
[102.24430084 -364.03848267]
[117.18284607 -365.57998657]
[132.19885254 -365.34378052]
[147.08152771 -363.33322144]
[161.62194824 -359.57650757]
[175.61596680 -354.12640381]
[188.86714172 -347.05938721]
[201.18943787 -338.47467041]
[212.40988159 -328.49279785]
[222.37095642 -317.25387573]
[230.93283081 -304.91567993]
[237.97528076 -291.65142822]
[243.39945984 -277.64733887]
[247.12922668 -263.10000610]
[249.11221313 -248.21363831]
[249.32058716 -233.19720459]
[247.75140381 -218.26155090]
[244.42672729 -203.61631775]
[239.39320374 -189.46711731]
[232.72149658 -176.01257324]
[224.50527954 -163.44155884]
[214.85987854 -151.93058777]
[203.92071533 -141.64122009]
[191.84135437 -132.71791077]
[178.79136658 -125.28593445]
[164.95396423 -119.44962311]
[150.52339172 -115.29090881]
[135.70222473 -112.86817932]
[120.69855499 -112.21543121]
[105.72299194 -113.34184265]
[102.83771515 -98.62194824]
[99.95244598 -83.90206146]
[97.06716919 -69.18216705]
[94.18190002 -54.46227646]
[99.32659912 -40.48439026]
[89.07930756 -28.43020439]
[88.85597992 -13.43186665]
[91.30170441 1.36740458]
[101.01062775 12.66280556]
[95.62696075 27.53985977]
[98.07269287 42.33913040]
[100.51841736 57.13840103]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[116.83668518 155.19651794]
[119.50247955 169.95774841]
[122.16827393 184.71896362]
[124.83406830 199.48017883]
[130.03584290 185.41101074]
[140.16915894 174.35134888]
[153.73081970 167.94186401]
[168.70899963 167.13333130]
[182.88182068 172.04571533]
[194.14678955 181.95028687]
[200.83283997 195.37774658]
[201.94812012 210.33622742]
[197.32719421 224.60671997]
[187.65554810 236.07229614]
[174.36790466 243.03207397]
[159.43540955 244.45364380]
[145.07322693 240.12611389]
[133.41188049 230.69143677]
[126.18185425 217.55102539]
[125.73524475 232.54438782]
[125.28864288 247.53773499]
[124.84203339 262.53106689]
[124.39543152 277.52444458]
[123.94882202 292.51779175]
[126.82133484 301.18878174]
[123.38230133 307.73056030]
[122.71251678 322.71560669]
[122.04273224 337.70065308]
[121.37294769 352.68569946]
[136.20469666 355.03070068]
[150.68063354 359.02160645]
[164.61868286 364.60827637]
[177.84358215 371.72039795]
[190.18899536 380.26852417]
[201.49967957 390.14520264]
[211.63337708 401.22616577]
[220.46266174 413.37210083]
[227.87648010 426.43026733]
[233.78160095 440.23638916]
[238.10377502 454.61691284]
[240.78863525 469.39093018]
[241.80241394 484.37265015]
[241.13235474 499.37368774]
[238.78691101 514.20538330]
[234.79554749 528.68115234]
[229.20848083 542.61907959]
[222.09597778 555.84375000]
[213.54745483 568.18890381]
[203.67045593 579.49926758]
[192.58917236 589.63269043]
[180.44297791 598.46154785]
[167.38459778 605.87500000]
[153.57829285 611.77972412]
[139.19764709 616.10144043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 185]
[30 184]
[31 183]
[32 182]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[39 160]
[40 159]
[41 158]
[42 157]
[44 156]
[45 155]
[46 154]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[54 146]
[55 145]
[80 144]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
