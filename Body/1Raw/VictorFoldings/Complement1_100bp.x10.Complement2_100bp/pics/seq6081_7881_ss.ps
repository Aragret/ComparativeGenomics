%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[54.79852295 683.23400879]
[43.55309677 693.18109131]
[31.34449196 701.91918945]
[18.30212402 709.35565186]
[4.56424952 715.41162109]
[-9.72350025 720.02294922]
[-24.40966797 723.14068604]
[-39.33857346 724.73187256]
[-54.35195923 724.77960205]
[-69.29067230 723.28332520]
[-83.99636078 720.25897217]
[-98.31314087 715.73858643]
[-112.08923340 709.77008057]
[-125.17860413 702.41668701]
[-137.44250488 693.75640869]
[-148.75094604 683.88098145]
[-158.98402405 672.89520264]
[-168.03327942 660.91540527]
[-175.80276489 648.06866455]
[-182.21015930 634.49108887]
[-187.18750000 620.32672119]
[-190.68205261 605.72564697]
[-192.65675354 590.84259033]
[-193.09066772 575.83538818]
[-191.97921753 560.86315918]
[-189.33416748 546.08453369]
[-185.18357849 531.65618896]
[-179.57141113 517.73114014]
[-172.55718994 504.45690918]
[-164.21525574 491.97427368]
[-154.63403320 480.41552734]
[-143.91510010 469.90322876]
[-132.17208862 460.54879761]
[-119.52946472 452.45138550]
[-106.12125397 445.69683838]
[-92.08959198 440.35675049]
[-77.58321381 436.48773193]
[-62.75591278 434.13082886]
[-47.76485062 433.31097412]
[-32.76894760 434.03689575]
[-17.92717171 436.30090332]
[-3.39684701 440.07894897]
[1.84987116 426.02648926]
[7.09658909 411.97399902]
[12.34330750 397.92153931]
[17.59002495 383.86904907]
[14.79324055 369.23937988]
[26.86882782 359.01733398]
[32.11554718 344.96484375]
[36.30255508 330.56106567]
[39.40666580 315.88577271]
[42.51077652 301.21044922]
[34.19625473 288.90582275]
[37.13520813 273.97875977]
[50.09783173 265.34115601]
[53.20193863 250.66584778]
[56.30604935 235.99053955]
[54.49798965 231.57014465]
[55.44760513 225.96699524]
[59.72723770 220.92752075]
[63.26691055 206.35115051]
[61.59126282 201.87887573]
[62.70728302 196.30647278]
[67.13506317 191.39666748]
[71.10715485 176.93214417]
[75.07925415 162.46760559]
[79.05135345 148.00308228]
[83.02344513 133.53855896]
[86.99554443 119.07404327]
[90.96763611 104.60951996]
[89.89570618 96.62055969]
[95.10804749 89.96005249]
[99.29505920 75.55626678]
[95.71739960 60.14487839]
[106.69977570 50.08323288]
[101.18305206 38.42439270]
[104.96695709 26.51364517]
[115.50317383 20.57103348]
[119.90416718 6.23118639]
[124.30516815 -8.10866070]
[128.70616150 -22.44850731]
[133.10716248 -36.78835678]
[137.50816345 -51.12820053]
[141.90916443 -65.46804810]
[146.31016541 -79.80789948]
[150.71115112 -94.14774323]
[155.11215210 -108.48758698]
[159.51315308 -122.82743835]
[156.16534424 -138.29039001]
[167.29629517 -148.18740845]
[171.69729614 -162.52725220]
[176.09829712 -176.86709595]
[180.49929810 -191.20693970]
[180.02546692 -200.32907104]
[185.07403564 -205.72663879]
[189.68804932 -219.99937439]
[192.57331848 -234.71926880]
[193.68896484 -249.67771912]
[194.80461121 -264.63616943]
[195.92027283 -279.59463501]
[182.20184326 -286.08840942]
[171.75846863 -297.10205078]
[166.00250244 -311.14602661]
[165.71241760 -326.32101440]
[170.92741394 -340.57473755]
[180.94224548 -351.97946167]
[194.40245056 -358.99279785]
[209.48767090 -360.66629028]
[224.15776062 -356.77355957]
[236.42868042 -347.84109497]
[244.64091492 -335.07693481]
[247.68380737 -320.20733643]
[245.14585876 -305.24328613]
[237.37026978 -292.20852661]
[225.40866089 -282.86590576]
[210.87872314 -278.47897339]
[209.76307678 -263.52053833]
[208.64741516 -248.56207275]
[207.53176880 -233.60362244]
[215.74601746 -246.15455627]
[227.71598816 -255.19445801]
[242.03546143 -259.66134644]
[257.02218628 -259.03042603]
[270.91552734 -253.37580872]
[282.08337402 -243.36183167]
[289.21365356 -230.16490173]
[291.46875000 -215.33538818]
[288.58374023 -200.61543274]
[280.89755249 -187.73434448]
[269.31314087 -178.20538330]
[255.19142151 -173.14796448]
[240.19143677 -173.15626526]
[226.07533264 -178.22929382]
[214.50146484 -187.77108765]
[206.82952881 -200.66067505]
[203.96078491 -215.38536072]
[199.34677124 -201.11264038]
[194.83914185 -186.80595398]
[190.43814087 -172.46609497]
[186.03713989 -158.12625122]
[181.63615417 -143.78640747]
[185.29875183 -129.34913635]
[173.85299683 -118.42643738]
[169.45199585 -104.08659363]
[165.05101013 -89.74674225]
[160.65000916 -75.40689850]
[156.24900818 -61.06705093]
[151.84800720 -46.72720337]
[147.44700623 -32.38735580]
[143.04602051 -18.04751015]
[138.64501953 -3.70766258]
[134.24401855 10.63218498]
[129.84301758 24.97203255]
[134.68821716 41.83889389]
[121.10355377 54.27024460]
[124.98069763 68.65137482]
[113.69883728 79.74327850]
[109.51183319 94.14706421]
[105.43215942 108.58161163]
[101.46006775 123.04613495]
[97.48796844 137.51066589]
[93.51587677 151.97518921]
[89.54377747 166.43971252]
[85.57167816 180.90423584]
[81.59958649 195.36875916]
[77.84328461 209.89082336]
[74.30361176 224.46719360]
[70.98135376 239.09465027]
[67.87724304 253.76995850]
[64.77313232 268.44525146]
[73.12796021 281.59191895]
[69.77089691 296.43054199]
[57.18608093 304.31457520]
[54.08197021 318.98986816]
[50.97785950 333.66519165]
[62.14202118 323.64712524]
[76.79878998 320.45666504]
[91.11692810 324.92779541]
[101.35370636 335.89175415]
[104.83325195 350.48257446]
[100.64602661 364.88629150]
[89.88655090 375.33779907]
[75.36734009 379.10507202]
[60.88366699 375.20336914]
[50.22153473 364.65258789]
[46.16801834 350.21157837]
[40.92129898 364.26403809]
[43.34280396 379.89883423]
[31.64249611 389.11578369]
[26.39577866 403.16824341]
[21.14906120 417.22073364]
[15.90234280 431.27319336]
[10.65562439 445.32565308]
[24.10650063 451.99484253]
[36.80034256 460.01171875]
[48.60258865 469.29132080]
[59.38812637 479.73529053]
[69.04262543 491.23287964]
[77.46373749 503.66223145]
[84.56220245 516.89160156]
[90.26276398 530.78070068]
[94.50500488 545.18237305]
[97.24393463 559.94384766]
[98.45053864 574.90875244]
[98.11202240 589.91839600]
[96.23197174 604.81372070]
[92.83030701 619.43670654]
[87.94309998 633.63244629]
[81.62215424 647.25042725]
[73.93447876 660.14630127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 193]
[43 192]
[44 191]
[45 190]
[46 189]
[48 187]
[49 186]
[50 175]
[51 174]
[52 173]
[55 170]
[56 169]
[57 168]
[60 167]
[61 166]
[64 165]
[65 164]
[66 163]
[67 162]
[68 161]
[69 160]
[70 159]
[72 158]
[73 157]
[75 155]
[78 153]
[79 152]
[80 151]
[81 150]
[82 149]
[83 148]
[84 147]
[85 146]
[86 145]
[87 144]
[88 143]
[90 141]
[91 140]
[92 139]
[93 138]
[95 137]
[96 136]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
