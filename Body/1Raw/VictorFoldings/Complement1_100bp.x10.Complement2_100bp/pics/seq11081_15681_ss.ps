%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[50.01195145 441.43215942]
[40.44741058 452.99356079]
[30.18259811 463.93795776]
[19.25723076 474.22305298]
[7.71357584 483.80899048]
[-4.40370655 492.65875244]
[-17.04773521 500.73803711]
[-30.16959572 508.01562500]
[-43.71851730 514.46337891]
[-57.64208603 520.05627441]
[-71.88642883 524.77276611]
[-86.39644623 528.59454346]
[-101.11598969 531.50683594]
[-115.98811340 533.49841309]
[-130.95529175 534.56152344]
[-145.95960999 534.69207764]
[-160.94300842 533.88958740]
[-175.84754944 532.15704346]
[-190.61553955 529.50134277]
[-205.18984985 525.93261719]
[-219.51409912 521.46466064]
[-233.53288269 516.11486816]
[-247.19194031 509.90386963]
[-260.43844604 502.85571289]
[-273.22113037 494.99765015]
[-285.49057007 486.36007690]
[-297.19927979 476.97644043]
[-308.30194092 466.88302612]
[-318.75564575 456.11886597]
[-328.51989746 444.72564697]
[-337.55697632 432.74740601]
[-345.83187866 420.23052979]
[-353.31259155 407.22338867]
[-359.97018433 393.77633667]
[-365.77886963 379.94140625]
[-370.71624756 365.77212524]
[-374.76315308 351.32327271]
[-377.90396118 336.65078735]
[-380.12649536 321.81140137]
[-381.42214966 306.86257935]
[-381.78594971 291.86209106]
[-381.21649170 276.86804199]
[-379.71591187 261.93835449]
[-377.29010010 247.13087463]
[-373.94839478 232.50283813]
[-369.70370483 218.11085510]
[-364.57250977 204.01060486]
[-358.57458496 190.25662231]
[-351.73321533 176.90214539]
[-344.07482910 163.99882507]
[-335.62905884 151.59658813]
[-326.42858887 139.74342346]
[-316.50900269 128.48516846]
[-305.90869141 117.86538696]
[-294.66864014 107.92517853]
[-282.83233643 98.70298004]
[-270.44561768 90.23448944]
[-257.55636597 82.55245972]
[-244.21443176 75.68661499]
[-230.47148132 69.66351318]
[-216.38066101 64.50646210]
[-201.99647522 60.23541260]
[-187.37458801 56.86688614]
[-172.57157898 54.41391373]
[-157.64468384 52.88599014]
[-142.65168762 52.28902435]
[-127.65056610 52.62532425]
[-112.69937897 53.89358902]
[-97.85596466 56.08891678]
[-83.17774200 59.20280838]
[-68.72150421 63.22322083]
[-54.54317856 68.13459778]
[-40.69762039 73.91793823]
[-27.23839188 80.55086517]
[-14.21756935 88.00772095]
[-1.68552661 96.25965881]
[10.30925274 105.27474213]
[21.72036362 115.01810455]
[32.50365829 125.45204163]
[42.61741638 136.53619385]
[54.30499649 127.13404083]
[65.99257660 117.73189545]
[77.68016052 108.32974243]
[89.36773682 98.92758942]
[99.93478394 88.28157806]
[109.24967194 76.52433014]
[118.56455231 64.76708221]
[127.87943268 53.00982666]
[137.19432068 41.25257492]
[133.17549133 26.38128853]
[138.62030029 12.16132259]
[151.24499512 3.97099948]
[166.09391785 4.77547836]
[175.40879822 -6.98177290]
[184.72369385 -18.73902321]
[194.03857422 -30.49627495]
[203.35345459 -42.25352478]
[212.66833496 -54.01077652]
[221.98321533 -65.76802826]
[211.27189636 -76.28942108]
[201.73962402 -87.88976288]
[193.49443054 -100.43762207]
[186.62971497 -113.79082489]
[181.22328186 -127.79804993]
[177.33638000 -142.30061340]
[175.01304626 -157.13415527]
[174.27960205 -172.13063049]
[175.14437866 -187.12010193]
[177.59756470 -201.93272400]
[181.61135864 -216.40068054]
[187.14028931 -230.36001587]
[194.12170410 -243.65257263]
[202.47650146 -256.12771606]
[212.11001587 -267.64413452]
[222.91308594 -278.07128906]
[234.76330566 -287.29104614]
[247.52642822 -295.19897461]
[261.05780029 -301.70541382]
[275.20413208 -306.73669434]
[289.80508423 -310.23577881]
[304.69528198 -312.16302490]
[319.70596313 -312.49661255]
[334.66708374 -311.23272705]
[349.40908813 -308.38571167]
[363.76495361 -303.98782349]
[377.57199097 -298.08889771]
[390.67379761 -290.75573730]
[402.92190552 -282.07150269]
[414.17749023 -272.13452148]
[424.31311035 -261.05743408]
[433.21383667 -248.96574402]
[440.77883911 -235.99645996]
[446.92242432 -222.29650879]
[451.57495117 -208.02114868]
[454.68374634 -193.33212280]
[456.21353149 -178.39585876]
[456.14700317 -163.38160706]
[454.48492432 -148.45948792]
[451.24609375 -133.79858398]
[446.46722412 -119.56501770]
[440.20248413 -105.92005157]
[432.52282715 -93.01831055]
[423.51528931 -81.00596619]
[413.28192139 -70.01913452]
[401.93869019 -60.18230438]
[389.61413574 -51.60693359]
[376.44784546 -44.39019394]
[362.58908081 -38.61384583]
[348.19479370 -34.34334946]
[333.42816162 -31.62708664]
[318.45642090 -30.49583626]
[303.44927979 -30.96241951]
[288.57675171 -33.02154541]
[274.00735474 -36.64988327]
[259.90618896 -41.80632401]
[246.43299866 -48.43243790]
[233.74046326 -56.45314789]
[224.42558289 -44.69589615]
[215.11070251 -32.93864441]
[205.79582214 -21.18139267]
[196.48094177 -9.42414093]
[187.16606140 2.33311009]
[177.85116577 14.09036160]
[182.03082275 28.36160660]
[176.94538879 42.52502060]
[164.34785461 51.07811737]
[148.95156860 50.56745911]
[139.63668823 62.32471085]
[130.32180786 74.08196259]
[121.00691986 85.83921051]
[111.69203949 97.59646606]
[125.60463715 91.98937225]
[140.60211182 91.71385193]
[154.71127319 96.80615234]
[166.07582092 106.59629822]
[173.20056152 119.79622650]
[175.14810181 134.66926575]
[171.66221619 149.25859070]
[163.20153809 161.64474487]
[150.87919617 170.19812012]
[136.31643677 173.79335022]
[121.42920685 171.95744324]
[108.17620087 164.93193054]
[98.30107117 153.64114380]
[93.10306549 139.57058716]
[93.26606750 124.57146454]
[98.76988983 110.61517334]
[87.08230591 120.01731873]
[75.39472961 129.41947937]
[63.70714569 138.82162476]
[52.01956558 148.22377014]
[60.67985535 160.47717285]
[68.56159973 173.24528503]
[75.63430786 186.47869873]
[81.87062073 200.12623596]
[87.24639893 214.13507080]
[91.74085236 228.45101929]
[95.33659363 243.01869202]
[98.01970673 257.78173828]
[99.77980804 272.68301392]
[100.61009979 287.66491699]
[100.50736237 302.66946411]
[99.47200012 317.63858032]
[97.50800323 332.51437378]
[94.62298584 347.23928833]
[90.82810211 361.75634766]
[86.13803864 376.00942993]
[80.57093048 389.94332886]
[74.14832306 403.50418091]
[66.89507294 416.63949585]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[80 191]
[81 190]
[82 189]
[83 188]
[84 187]
[85 171]
[86 170]
[87 169]
[88 168]
[89 167]
[93 163]
[94 162]
[95 161]
[96 160]
[97 159]
[98 158]
[99 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
