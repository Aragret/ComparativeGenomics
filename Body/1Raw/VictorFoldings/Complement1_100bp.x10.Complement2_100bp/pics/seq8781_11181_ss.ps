%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[20.92087173 848.47662354]
[6.36872482 852.14111328]
[-8.40776539 854.75805664]
[-23.33330154 856.31427002]
[-38.33182144 856.80169678]
[-53.32690430 856.21789551]
[-68.24212646 854.56579590]
[-83.00149536 851.85388184]
[-97.52979279 848.09600830]
[-111.75298309 843.31121826]
[-125.59858704 837.52392578]
[-138.99604797 830.76367188]
[-151.87712097 823.06488037]
[-164.17613220 814.46679688]
[-175.83041382 805.01318359]
[-186.78059387 794.75219727]
[-196.97085571 783.73626709]
[-206.34928894 772.02136230]
[-214.86808777 759.66729736]
[-222.48384094 746.73693848]
[-229.15776062 733.29626465]
[-234.85581970 719.41369629]
[-239.54898071 705.16003418]
[-243.21333313 690.60784912]
[-245.83020020 675.83135986]
[-247.38626099 660.90576172]
[-247.87356567 645.90728760]
[-247.28964233 630.91217041]
[-245.63746643 615.99694824]
[-242.92546082 601.23760986]
[-239.16743469 586.70935059]
[-234.38253784 572.48620605]
[-228.59516907 558.64062500]
[-221.83480835 545.24322510]
[-214.13591003 532.36224365]
[-205.53768921 520.06329346]
[-196.08398438 508.40905762]
[-185.82296753 497.45898438]
[-174.80691528 487.26879883]
[-163.09196472 477.89044189]
[-150.73782349 469.37173462]
[-137.80743408 461.75607300]
[-124.36669159 455.08227539]
[-110.48408508 449.38433838]
[-96.23036957 444.69128418]
[-81.67816162 441.02703857]
[-66.90163422 438.41027832]
[-51.97607422 436.85433960]
[-36.97754288 436.36712646]
[-21.98247337 436.95117188]
[-7.06727266 438.60345459]
[7.69205141 441.31558228]
[11.44835186 426.79351807]
[7.14474726 412.53421021]
[18.09135628 401.11132812]
[21.84765625 386.58926392]
[25.60395813 372.06719971]
[12.64174747 365.56790161]
[1.31430101 356.50561523]
[-7.87915134 345.27655029]
[-14.53275299 332.37234497]
[-18.35194206 318.35885620]
[-19.16648865 303.85101318]
[-16.93807793 289.48608398]
[-11.76211357 275.89550781]
[-3.86362481 263.67730713]
[6.41250706 253.36964417]
[18.61661148 245.42710876]
[32.21390533 240.20080566]
[46.60792160 237.92268372]
[61.16668320 238.69532776]
[65.13877869 224.23080444]
[69.11087799 209.76628113]
[73.08296967 195.30175781]
[76.40522766 180.67430115]
[79.07102203 165.91308594]
[81.73682404 151.15185547]
[84.40261841 136.39064026]
[82.70336151 133.30116272]
[82.41609955 129.23515320]
[83.98351288 124.86518860]
[87.53115082 121.03617859]
[90.85340881 106.40871429]
[94.06668091 91.75692749]
[97.17079163 77.08162689]
[95.48791504 70.68791962]
[97.05184174 65.22429657]
[100.59197998 62.01860428]
[104.13165283 47.44223022]
[107.67132568 32.86585236]
[111.21099854 18.28947830]
[113.32562256 3.43928051]
[113.99540710 -11.54575825]
[106.88203430 -25.67765427]
[115.17991638 -38.04674530]
[115.84970093 -53.03178406]
[116.51948547 -68.01682281]
[116.96609497 -83.01016998]
[117.18942261 -98.00850677]
[103.35319519 -104.37079620]
[93.30582428 -115.81502533]
[88.78808594 -130.35839844]
[90.58269501 -145.48120117]
[98.37873077 -158.56332397]
[110.82547760 -167.33819580]
[125.76647186 -170.28550720]
[140.61308289 -166.89465332]
[152.79306030 -157.75308228]
[160.19612122 -144.44465637]
[161.53968811 -129.27511597]
[156.59092712 -114.87269592]
[146.20727539 -103.73269653]
[132.18775940 -97.78517914]
[131.96443176 -82.78684235]
[134.58900452 -78.79676819]
[134.73489380 -73.11559296]
[131.50453186 -67.34703827]
[130.83474731 -52.36199570]
[130.16496277 -37.37695694]
[137.32623291 -24.31689262]
[128.98043823 -10.87597275]
[128.31065369 4.10906553]
[136.72584534 -8.30804634]
[149.42077637 -16.29795265]
[164.25614929 -18.51420975]
[178.73193359 -14.58334255]
[190.40870667 -5.16777086]
[197.31872559 8.14581776]
[198.29753113 23.11384773]
[193.18017578 37.21394348]
[182.82904053 48.06999207]
[168.98844910 53.85256195]
[153.99079895 53.58718109]
[140.36344910 47.31857300]
[130.40284729 36.10311508]
[125.78736877 21.82915115]
[122.24769592 36.40552521]
[118.70802307 50.98190308]
[115.16835022 65.55827332]
[111.84609222 80.18573761]
[108.74198151 94.86103821]
[110.28752899 102.77203369]
[105.48086548 109.73097229]
[102.15860748 124.35843658]
[99.16383362 139.05644226]
[96.49803925 153.81765747]
[93.83224487 168.57887268]
[91.16645050 183.34008789]
[104.07461548 175.69946289]
[118.63843536 179.29043579]
[126.51509094 192.05593872]
[123.19248199 206.68331909]
[110.57394409 214.79335022]
[95.88794708 211.74021912]
[87.54749298 199.27384949]
[83.57540131 213.73837280]
[79.60330200 228.20289612]
[75.63120270 242.66741943]
[89.34096527 249.97891235]
[101.08036041 260.14678955]
[110.26560974 272.66131592]
[116.44087219 286.89624023]
[119.30082703 302.13995361]
[118.70581818 317.63125610]
[114.68861389 332.59719849]
[107.45266724 346.29187012]
[97.36178589 358.03326416]
[84.92185211 367.23754883]
[70.75545502 373.44790649]
[55.57074356 376.35726929]
[40.12601471 375.82351685]
[36.36971664 390.34555054]
[32.61341476 404.86761475]
[36.64834595 420.16564941]
[25.97041130 430.54983521]
[22.21411133 445.07189941]
[36.43737411 449.85644531]
[50.28306961 455.64349365]
[63.68064117 462.40356445]
[76.56182098 470.10217285]
[88.86096191 478.70010376]
[100.51539612 488.15353394]
[111.46572876 498.41430664]
[121.65616608 509.43011475]
[131.03477478 521.14483643]
[139.55375671 533.49877930]
[147.16972351 546.42901611]
[153.84384155 559.86962891]
[159.54211426 573.75207520]
[164.23548889 588.00567627]
[167.90007019 602.55780029]
[170.51716614 617.33428955]
[172.07344055 632.25982666]
[172.56097412 647.25830078]
[171.97729492 662.25341797]
[170.32534790 677.16864014]
[167.61355591 691.92803955]
[163.85575867 706.45635986]
[159.07109070 720.67956543]
[153.28392029 734.52520752]
[146.52377319 747.92272949]
[138.82507324 760.80389404]
[130.22705078 773.10296631]
[120.77352142 784.75732422]
[110.51266479 795.70758057]
[99.49676514 805.89788818]
[87.78195953 815.27642822]
[75.42794800 823.79534912]
[62.49767303 831.41119385]
[49.05703354 838.08520508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 176]
[53 175]
[55 173]
[56 172]
[57 171]
[71 158]
[72 157]
[73 156]
[74 155]
[75 148]
[76 147]
[77 146]
[78 145]
[82 144]
[83 143]
[84 141]
[85 140]
[88 139]
[89 138]
[90 137]
[91 136]
[92 122]
[93 121]
[95 119]
[96 118]
[97 117]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
