%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[69.54459381 570.14666748]
[59.55187607 581.35937500]
[48.25695419 591.25909424]
[35.83105469 599.69573975]
[22.46255302 606.54138184]
[8.35411453 611.69226074]
[-6.28038311 615.07031250]
[-21.21908379 616.62426758]
[-36.23552322 616.33062744]
[-51.10205078 614.19378662]
[-65.59329987 610.24621582]
[-79.48957825 604.54772949]
[-92.58023071 597.18469238]
[-104.66680145 588.26873779]
[-115.56606293 577.93499756]
[-125.11278534 566.34020996]
[-133.16224670 553.66003418]
[-139.59240723 540.08679199]
[-144.30578613 525.82623291]
[-147.23095703 511.09454346]
[-148.32354736 496.11502075]
[-147.56700134 481.11480713]
[-144.97279358 466.32122803]
[-140.58024597 451.95858765]
[-134.45594788 438.24462891]
[-126.69274902 425.38723755]
[-117.40832520 413.58135986]
[-106.74343872 403.00592041]
[-94.85976410 393.82125854]
[-81.93744659 386.16665649]
[-68.17239380 380.15808105]
[-53.77327347 375.88665771]
[-38.95837784 373.41714478]
[-23.95229530 372.78698730]
[-8.98251438 374.00570679]
[5.72402668 377.05484009]
[10.55002403 362.85238647]
[15.37602139 348.64993286]
[20.20201874 334.44747925]
[25.02801704 320.24502563]
[29.85401535 306.04257202]
[34.68001175 291.84011841]
[39.50601196 277.63763428]
[44.33200836 263.43518066]
[48.83963776 249.12850952]
[53.02664566 234.72471619]
[49.14950562 220.34358215]
[60.43136215 209.25169373]
[64.61837006 194.84790039]
[68.80538177 180.44412231]
[72.99239349 166.04034424]
[77.17940521 151.63656616]
[73.30226135 137.25543213]
[84.58412170 126.16352844]
[88.77113342 111.75974274]
[84.35319519 95.57771301]
[96.58801270 84.10227966]
[92.78129578 68.74586487]
[103.61265564 58.52182770]
[107.58474731 44.05730057]
[111.55684662 29.59277725]
[115.52893829 15.12825394]
[118.63304901 0.45295173]
[120.85816956 -14.38109207]
[123.08328247 -29.21513557]
[125.30840302 -44.04917908]
[113.92855835 -52.18318176]
[107.19564056 -64.36858368]
[106.37368011 -78.19979858]
[111.56617737 -90.97426605]
[121.70700073 -100.22048187]
[134.77871704 -104.17613983]
[137.22444153 -118.97541046]
[139.67018127 -133.77468872]
[142.11590576 -148.57395935]
[144.56163025 -163.37322998]
[147.00735474 -178.17250061]
[149.45307922 -192.97177124]
[134.93696594 -196.79492188]
[120.84262848 -201.96060181]
[107.29395294 -208.42341614]
[94.41001129 -216.12655640]
[82.30402374 -225.00234985]
[71.08238220 -234.97276306]
[60.84370041 -245.95019531]
[51.67796707 -257.83816528]
[43.66572571 -270.53219604]
[36.87739563 -283.92074585]
[31.37262917 -297.88610840]
[27.19980431 -312.30563354]
[24.39559555 -327.05252075]
[22.98464584 -341.99719238]
[22.97935295 -357.00833130]
[24.37976456 -371.95401001]
[27.17357445 -386.70288086]
[31.33622932 -401.12533569]
[36.83114624 -415.09460449]
[43.61003494 -428.48791504]
[51.61331940 -441.18759155]
[60.77067184 -453.08203125]
[71.00160217 -464.06668091]
[82.21621704 -474.04501343]
[94.31594086 -482.92932129]
[107.19445038 -490.64154053]
[120.73856354 -497.11392212]
[134.82925415 -502.28952026]
[149.34268188 -506.12292480]
[164.15130615 -508.58038330]
[179.12496948 -509.64035034]
[194.13211060 -509.29348755]
[209.04081726 -507.54281616]
[223.72009277 -504.40377808]
[238.04090881 -499.90390015]
[251.87741089 -494.08276367]
[265.10800171 -486.99154663]
[277.61642456 -478.69253540]
[289.29275513 -469.25863647]
[300.03436279 -458.77282715]
[309.74685669 -447.32720947]
[318.34484863 -435.02239990]
[325.75283813 -421.96649170]
[331.90567017 -408.27426147]
[336.74929810 -394.06604004]
[340.24111938 -379.46667480]
[342.35052490 -364.60446167]
[343.05889893 -349.61004639]
[342.36004639 -334.61517334]
[340.26010132 -319.75164795]
[336.77752686 -305.15005493]
[331.94293213 -290.93875122]
[325.79879761 -277.24261475]
[318.39913940 -264.18200684]
[309.80895996 -251.87173462]
[300.10372925 -240.41995239]
[289.36880493 -229.92730713]
[277.69848633 -220.48600769]
[265.19534302 -212.17904663]
[251.96923828 -205.07940674]
[238.13642883 -199.24948120]
[223.81848145 -194.74052429]
[209.14120483 -191.59213257]
[194.23361206 -189.83200073]
[179.22669983 -189.47560120]
[164.25234985 -190.52603149]
[161.80662537 -175.72676086]
[159.36090088 -160.92749023]
[156.91517639 -146.12821960]
[154.46945190 -131.32894897]
[152.02372742 -116.52968597]
[149.57798767 -101.73041534]
[162.31436157 -91.78570557]
[168.33230591 -76.68801117]
[165.90133667 -60.52301407]
[155.59130859 -47.71680832]
[140.14244080 -41.82406235]
[137.91732788 -26.99001884]
[135.69221497 -12.15597439]
[133.46710205 2.67806888]
[144.90777588 -7.02300024]
[159.85655212 -8.26163769]
[172.73788452 -0.57586133]
[178.74737549 13.16772366]
[175.64361572 27.84309959]
[164.58422852 37.97671509]
[149.69410706 39.78898239]
[136.52690125 32.60396957]
[129.99346924 19.10034943]
[126.02136993 33.56487274]
[122.04927063 48.02939987]
[118.07717896 62.49392319]
[122.16800690 76.81573486]
[111.05253601 88.07437897]
[116.19271851 98.52520752]
[113.02512360 109.73268890]
[103.17491150 115.94675446]
[98.98789978 130.35054016]
[102.56555939 145.76193237]
[91.58319092 155.82357788]
[87.39617920 170.22735596]
[83.20916748 184.63113403]
[79.02215576 199.03491211]
[74.83514404 213.43870544]
[78.41280365 228.85008240]
[67.43042755 238.91172791]
[63.24341965 253.31552124]
[64.48949432 258.38449097]
[63.74140549 262.96636963]
[61.51863098 266.38314819]
[58.53446198 268.26119995]
[53.70846558 282.46365356]
[48.88246918 296.66610718]
[44.05646896 310.86856079]
[39.23047256 325.07101440]
[34.40447617 339.27346802]
[29.57847786 353.47592163]
[24.75247955 367.67837524]
[19.92648125 381.88082886]
[33.44610977 388.42294312]
[46.05929184 396.57693481]
[57.57481384 406.21914673]
[67.81809998 417.20343018]
[76.63387299 429.36328125]
[83.88848877 442.51434326]
[89.47195435 456.45724487]
[93.29964447 470.98062134]
[95.31351471 485.86428833]
[95.48304749 500.88262939]
[93.80567169 515.80798340]
[90.30681610 530.41406250]
[85.03951263 544.47943115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 197]
[37 196]
[38 195]
[39 194]
[40 193]
[41 192]
[42 191]
[43 190]
[44 189]
[45 185]
[46 184]
[48 182]
[49 181]
[50 180]
[51 179]
[52 178]
[54 176]
[55 175]
[57 172]
[59 170]
[60 169]
[61 168]
[62 167]
[63 158]
[64 157]
[65 156]
[66 155]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[77 145]
[78 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
