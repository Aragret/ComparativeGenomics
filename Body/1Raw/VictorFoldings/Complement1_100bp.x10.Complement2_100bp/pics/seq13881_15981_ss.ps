%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[39.11054611 766.87554932]
[24.58864021 770.71862793]
[9.68934059 772.63330078]
[-5.33240509 772.58673096]
[-20.21955490 770.57983398]
[-34.71737289 766.64685059]
[-48.57777786 760.85510254]
[-61.56360245 753.30371094]
[-73.45264435 744.12194824]
[-84.04146576 733.46679688]
[-93.14887238 721.52062988]
[-100.61902618 708.48791504]
[-106.32411194 694.59161377]
[-110.16649628 680.06951904]
[-112.08044434 665.17016602]
[-112.03318787 650.14843750]
[-110.02555084 635.26135254]
[-106.09188080 620.76373291]
[-100.29949188 606.90362549]
[-92.74748993 593.91815186]
[-83.56510925 582.02954102]
[-72.90946960 571.44122314]
[-60.96290207 562.33435059]
[-47.92982864 554.86486816]
[-34.03326035 549.16040039]
[-19.51099014 545.31872559]
[-4.61150837 543.40551758]
[10.41023350 543.45343018]
[12.41424656 528.58795166]
[14.41826057 513.72241211]
[16.42227364 498.85687256]
[18.42628860 483.99133301]
[20.43030167 469.12582397]
[22.43431473 454.26028442]
[24.43832970 439.39474487]
[26.44234276 424.52923584]
[28.44635582 409.66369629]
[19.23968697 398.01153564]
[21.06027603 382.90722656]
[33.34455872 373.32943726]
[35.34857178 358.46389771]
[37.35258484 343.59838867]
[39.35659790 328.73284912]
[41.36061478 313.86730957]
[35.39305115 300.22042847]
[44.90470505 287.57769775]
[42.77287674 283.30401611]
[43.30311966 277.64575195]
[47.19607925 272.30194092]
[49.64180374 257.50265503]
[52.08753204 242.70339966]
[39.29455566 250.53536987]
[24.67888451 247.16162109]
[16.61303902 234.51480103]
[19.71750069 219.83956909]
[32.21389389 211.54257202]
[46.94371796 214.37670898]
[55.46885300 226.71751404]
[59.22515488 212.19546509]
[62.98145676 197.67340088]
[57.28953934 190.85906982]
[55.34189987 182.05557251]
[57.69890594 173.21031189]
[63.95410156 166.33976746]
[72.79808807 163.07006836]
[77.19908905 148.73020935]
[81.60009003 134.39036560]
[86.00108337 120.05052185]
[90.40208435 105.71067047]
[94.69620514 91.33846283]
[95.81185150 76.38000488]
[93.80783844 61.51448059]
[91.80382538 46.64895248]
[89.79981232 31.78342247]
[77.51553345 22.20562553]
[75.69494629 7.10131836]
[84.90161133 -4.55084133]
[82.89759827 -19.41637039]
[80.89358521 -34.28189850]
[77.70169830 -38.41214752]
[76.53041077 -42.90451431]
[77.17927551 -46.92869568]
[79.14738464 -49.85425186]
[77.80915070 -64.79443359]
[76.47091675 -79.73461914]
[67.53327942 -92.78947449]
[74.10425568 -106.15628052]
[65.16661835 -119.21113586]
[71.73759460 -132.57794189]
[70.39936066 -147.51812744]
[69.06112671 -162.45831299]
[67.72289276 -177.39849854]
[66.38465881 -192.33868408]
[51.63336182 -195.69345093]
[38.64176941 -203.44418335]
[28.68265915 -214.83151245]
[22.73172379 -228.73983765]
[21.37197685 -243.80656433]
[24.73663330 -258.55560303]
[32.49605560 -271.54199219]
[43.89005661 -281.49346924]
[57.80236816 -287.43508911]
[72.87000275 -288.78475952]
[87.61679077 -285.41021729]
[100.59798431 -277.64208984]
[110.54182434 -266.24142456]
[116.47412109 -252.32513428]
[117.81366730 -237.25659180]
[114.42925262 -222.51206970]
[106.65243530 -209.53608704]
[95.24510193 -199.59988403]
[81.32484436 -193.67692566]
[82.66307831 -178.73674011]
[84.00131226 -163.79655457]
[85.33954620 -148.85636902]
[86.67778015 -133.91618347]
[95.51969910 -121.92994690]
[89.04444122 -107.49451447]
[97.88636017 -95.50828552]
[91.41110229 -81.07285309]
[92.74933624 -66.13266754]
[94.08757019 -51.19248581]
[95.75910950 -36.28591156]
[97.76313019 -21.42038345]
[99.76714325 -6.55485535]
[111.73071289 2.24335647]
[113.97483063 17.29056740]
[104.66534424 29.77940941]
[106.66935730 44.64493561]
[108.67337036 59.51046371]
[110.67738342 74.37599182]
[115.45318604 60.15658188]
[123.04394531 47.21902466]
[133.12689209 36.11343002]
[145.27330017 27.31202126]
[158.96669006 21.18903351]
[173.62481689 18.00481987]
[188.62442017 17.89477539]
[203.32769775 20.86358070]
[217.10945129 26.78499603]
[229.38368225 35.40724564]
[239.62849426 46.36370087]
[247.40824890 59.18849564]
[252.39216614 73.33630371]
[254.36833191 88.20555878]
[253.25270081 103.16401672]
[249.09271240 117.57563019]
[242.06526184 130.82760620]
[232.46916199 142.35647583]
[220.71243286 151.67201233]
[207.29496765 158.37812805]
[192.78730774 162.18966675]
[177.80632019 162.94454956]
[162.98899841 160.61070251]
[148.96537781 155.28735352]
[136.33175659 147.20085144]
[125.62532043 136.69502258]
[117.30131531 124.21660614]
[111.71367645 110.29618073]
[109.09999084 95.52547455]
[110.05286407 103.52951050]
[104.74192810 110.11167145]
[100.34093475 124.45151520]
[95.93993378 138.79136658]
[91.53893280 153.13121033]
[87.13793945 167.47105408]
[93.19743347 188.02575684]
[77.50351715 201.42970276]
[73.74721527 215.95176697]
[69.99091339 230.47381592]
[66.88680267 245.14912415]
[64.44107819 259.94839478]
[61.99534988 274.74765015]
[59.77023315 289.58169556]
[65.59445190 304.29187012]
[56.22614288 315.87133789]
[54.22212601 330.73687744]
[52.21811295 345.60238647]
[50.21409988 360.46792603]
[48.21008682 375.33346558]
[57.51957703 387.82229614]
[55.27545547 402.86950684]
[43.31188583 411.66772461]
[41.30786896 426.53323364]
[39.30385590 441.39877319]
[37.29984283 456.26431274]
[35.29582977 471.12982178]
[33.29181671 485.99536133]
[31.28780174 500.86087036]
[29.28378868 515.72644043]
[27.27977562 530.59191895]
[25.27576065 545.45745850]
[39.77395248 549.38903809]
[53.63491058 555.17950439]
[66.62145233 562.72961426]
[78.51136780 571.91027832]
[89.10120392 582.56445312]
[98.20974731 594.50970459]
[105.68114471 607.54168701]
[111.38755035 621.43743896]
[115.23132324 635.95916748]
[117.14668274 650.85839844]
[117.10086060 665.88012695]
[115.09464264 680.76739502]
[111.16235352 695.26538086]
[105.37127686 709.12609863]
[97.82051849 722.11224365]
[88.63926697 734.00170898]
[77.98463440 744.59106445]
[66.03893280 753.69903564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 192]
[29 191]
[30 190]
[31 189]
[32 188]
[33 187]
[34 186]
[35 185]
[36 184]
[37 183]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[46 174]
[49 173]
[50 172]
[51 171]
[58 170]
[59 169]
[60 168]
[65 166]
[66 165]
[67 164]
[68 163]
[69 162]
[70 160]
[71 131]
[72 130]
[73 129]
[74 128]
[77 125]
[78 124]
[79 123]
[83 122]
[84 121]
[85 120]
[87 118]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
