%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[61.35926437 446.33056641]
[51.02195740 457.20590210]
[40.05854034 467.44973755]
[28.50752449 477.02612305]
[16.40948486 485.90139771]
[3.80691314 494.04437256]
[-9.25592136 501.42648315]
[-22.73313522 508.02175903]
[-36.57738876 513.80706787]
[-50.74005127 518.76202393]
[-65.17137909 522.86932373]
[-79.82067871 526.11444092]
[-94.63649750 528.48608398]
[-109.56678772 529.97576904]
[-124.55911255 530.57843018]
[-139.56080627 530.29187012]
[-154.51918030 529.11706543]
[-169.38168335 527.05822754]
[-184.09611511 524.12249756]
[-198.61079407 520.32025146]
[-212.87472534 515.66479492]
[-226.83781433 510.17254639]
[-240.45101929 503.86273193]
[-253.66651917 496.75753784]
[-266.43789673 488.88195801]
[-278.72027588 480.26358032]
[-290.47052002 470.93276978]
[-301.64736938 460.92221069]
[-312.21157837 450.26712036]
[-322.12597656 439.00491333]
[-331.35580444 427.17517090]
[-339.86862183 414.81939697]
[-347.63452148 401.98101807]
[-354.62622070 388.70513916]
[-360.81915283 375.03836060]
[-366.19158936 361.02871704]
[-370.72463989 346.72543335]
[-374.40240479 332.17871094]
[-377.21194458 317.43966675]
[-379.14340210 302.56005859]
[-380.19000244 287.59219360]
[-380.34802246 272.58859253]
[-379.61697388 257.60198975]
[-377.99935913 242.68499756]
[-375.50091553 227.89004517]
[-372.13040161 213.26907349]
[-367.89962769 198.87347412]
[-362.82348633 184.75376892]
[-356.91979980 170.95959473]
[-350.20928955 157.53938293]
[-342.71554565 144.54026794]
[-334.46487427 132.00793457]
[-325.48629761 119.98637390]
[-315.81130981 108.51782227]
[-305.47390747 97.64257812]
[-294.51040649 87.39881897]
[-282.95928955 77.82254791]
[-270.86117554 68.94738007]
[-258.25854492 60.80451202]
[-245.19563293 53.42253113]
[-231.71836853 46.82736969]
[-217.87406921 41.04219818]
[-203.71136475 36.08733368]
[-189.27999878 31.98018265]
[-174.63066101 28.73517036]
[-159.81481934 26.36369324]
[-144.88452148 24.87408447]
[-129.89219666 24.27157402]
[-114.89049530 24.55827904]
[-99.93213654 25.73319435]
[-85.06965637 27.79219055]
[-70.35524750 30.72803497]
[-55.84060287 34.53041840]
[-41.57670975 39.18598175]
[-27.61366463 44.67837143]
[-14.00051594 50.98829651]
[-0.78508204 58.09359741]
[11.98621845 65.96930695]
[24.26852608 74.58776855]
[36.01869583 83.91870880]
[47.19546127 93.92935181]
[57.75955582 104.58453369]
[67.67387390 115.84682465]
[79.50014496 106.61972809]
[91.32641602 97.39262390]
[92.33658600 93.67080688]
[94.98236847 90.41233063]
[99.02005768 88.33769226]
[103.89306641 88.03171539]
[116.11955261 79.34188843]
[128.34603882 70.65206909]
[140.57252502 61.96224213]
[152.79901123 53.27241898]
[144.97984314 40.46439743]
[138.07316589 27.14213943]
[132.11264038 13.37054539]
[127.12728882 -0.78328848]
[123.14141083 -15.25040627]
[120.17442322 -29.96032524]
[118.24077606 -44.84137726]
[117.34989166 -59.82106781]
[117.50611877 -74.82640839]
[118.70868683 -89.78430176]
[120.95174408 -104.62187195]
[124.22434998 -119.26682281]
[128.51057434 -133.64782715]
[133.78953552 -147.69479370]
[140.03549194 -161.33929443]
[147.21804810 -174.51487732]
[155.30218506 -187.15731812]
[164.24853516 -199.20504761]
[174.01348877 -210.59934998]
[184.54948425 -221.28472900]
[195.80520630 -231.20912170]
[207.72579956 -240.32418823]
[220.25318909 -248.58549500]
[233.32633972 -255.95280457]
[246.88157654 -262.39022827]
[260.85284424 -267.86642456]
[275.17205811 -272.35464478]
[289.76950073 -275.83309937]
[304.57403564 -278.28482056]
[319.51351929 -279.69781494]
[334.51516724 -280.06527710]
[349.50592041 -279.38534546]
[364.41271973 -277.66137695]
[379.16293335 -274.90176392]
[393.68472290 -271.11993408]
[407.90734863 -266.33432007]
[421.76147461 -260.56826782]
[435.17965698 -253.84980774]
[448.09646606 -246.21173096]
[460.44900513 -237.69120789]
[472.17712402 -228.32977295]
[483.22360229 -218.17301941]
[493.53469849 -207.27044678]
[503.06015015 -195.67515564]
[511.75354004 -183.44364929]
[519.57250977 -170.63552856]
[526.47900391 -157.31317139]
[532.43933105 -143.54148865]
[537.42449951 -129.38758850]
[541.41015625 -114.92041016]
[544.37695312 -100.21044922]
[546.31036377 -85.32936859]
[547.20104980 -70.34966278]
[547.04461670 -55.34432602]
[545.84179688 -40.38644791]
[543.59857178 -25.54891205]
[540.32574463 -10.90400314]
[536.03930664 3.47693038]
[530.76013184 17.52382469]
[524.51397705 31.16824341]
[517.33123779 44.34371185]
[509.24691772 56.98604202]
[500.30041504 69.03363800]
[490.53527832 80.42781067]
[479.99911499 91.11303711]
[468.74325562 101.03726959]
[456.82254028 110.15216064]
[444.29504395 118.41328430]
[431.22177124 125.78041840]
[417.66644287 132.21765137]
[403.69509888 137.69361877]
[389.37582397 142.18167114]
[374.77832031 145.65989685]
[359.97378540 148.11138916]
[345.03427124 149.52420044]
[330.03262329 149.89143372]
[315.04187012 149.21128845]
[300.13510132 147.48712158]
[285.38491821 144.72727966]
[270.86315918 140.94525146]
[256.64062500 136.15943909]
[242.78657532 130.39317322]
[229.36849976 123.67453003]
[216.45179749 116.03625488]
[204.09936523 107.51555634]
[192.37139893 98.15395355]
[181.32504272 87.99704742]
[171.01411438 77.09432220]
[161.48883057 65.49890137]
[149.26234436 74.18872833]
[137.03585815 82.87855530]
[124.80937958 91.56837463]
[112.58289337 100.25820160]
[100.55351257 109.21889496]
[88.72724152 118.44599152]
[76.90097046 127.67309570]
[85.41389465 140.02879333]
[93.17989349 152.86709595]
[100.17171478 166.14291382]
[106.36477661 179.80963135]
[111.73733521 193.81921387]
[116.27052307 208.12246704]
[119.94841003 222.66915894]
[122.75808716 237.40817261]
[124.68967438 252.28776550]
[125.73638916 267.25564575]
[125.89455414 282.25924683]
[125.16362000 297.24584961]
[123.54615021 312.16284180]
[121.04782867 326.95782471]
[117.67742920 341.57882690]
[113.44678497 355.97445679]
[108.37076569 370.09420776]
[102.46719360 383.88842773]
[95.75681305 397.30871582]
[88.26318359 410.30789185]
[80.01264191 422.84030151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 189]
[84 188]
[85 187]
[89 186]
[90 185]
[91 184]
[92 183]
[93 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
