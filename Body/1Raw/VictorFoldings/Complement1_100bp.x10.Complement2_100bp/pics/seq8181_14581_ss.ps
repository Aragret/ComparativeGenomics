%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[217.98513794 258.14706421]
[227.19476318 246.28894043]
[216.39260864 235.88156128]
[205.59045410 225.47419739]
[194.78829956 215.06681824]
[183.98612976 204.65945435]
[173.18397522 194.25207520]
[162.38182068 183.84469604]
[151.57966614 173.43733215]
[153.58180237 188.30311584]
[147.32566833 201.93618774]
[134.74978638 210.11219788]
[119.75093842 210.29772949]
[106.97667694 202.43527222]
[100.38523865 188.96112061]
[102.01905823 174.05036926]
[111.37188721 162.32327271]
[125.54563904 157.41362000]
[140.14865112 160.84281921]
[130.83377075 149.08557129]
[121.51888275 137.32832336]
[112.20400238 125.57106781]
[102.54319000 114.09636688]
[89.32199860 109.54755402]
[86.27483368 95.90180206]
[76.27666473 84.71983337]
[66.27848816 73.53785706]
[69.77104187 88.12559509]
[68.40329742 103.06310272]
[62.31960297 116.77400208]
[52.16198349 127.81134033]
[39.00239944 135.01031494]
[24.22960854 137.61122131]
[9.40262032 135.33955383]
[-3.91383576 128.43505859]
[-14.31444454 117.62638855]
[-20.70160294 104.05420685]
[-22.40126228 89.15081024]
[-19.23405075 74.48899841]
[-11.53421211 61.61606216]
[-0.11432907 51.89051437]
[13.82043076 46.33871460]
[28.79949951 45.54656219]
[43.24209976 49.59764862]
[55.62420654 58.06458664]
[48.74479675 44.73515701]
[41.86538315 31.40572929]
[34.98596954 18.07629967]
[28.10655785 4.74687004]
[21.22714424 -8.58255863]
[14.34773254 -21.91198921]
[7.46831989 -35.24141693]
[1.88754404 -21.31823730]
[-11.84902382 -15.29273319]
[-25.87245369 -20.61658669]
[-32.14948654 -34.24005508]
[-27.08435631 -48.35899353]
[-13.57859612 -54.88543320]
[0.63036168 -50.08135986]
[-5.03242493 -63.97138596]
[-10.69521141 -77.86141205]
[-14.81969070 -81.06075287]
[-17.07864189 -85.11666107]
[-17.45818329 -89.17510986]
[-16.28540039 -92.50030518]
[-21.32231712 -106.62933350]
[-26.35923195 -120.75836945]
[-31.39614868 -134.88739014]
[-36.43306351 -149.01641846]
[-41.46998215 -163.14544678]
[-56.14729691 -159.95095825]
[-71.11261749 -158.65965271]
[-86.12020111 -159.29270935]
[-100.92360687 -161.83975220]
[-115.27975464 -166.25895691]
[-128.95289612 -172.47775269]
[-141.71852112 -180.39402771]
[-153.36698914 -189.87777710]
[-163.70701599 -200.77326965]
[-172.56884766 -212.90161133]
[-179.80691528 -226.06362915]
[-185.30239868 -240.04318237]
[-188.96504211 -254.61073303]
[-190.73471069 -269.52703857]
[-190.58232117 -284.54721069]
[-188.51040649 -299.42456055]
[-184.55297852 -313.91479492]
[-178.77500916 -327.77996826]
[-171.27139282 -340.79244995]
[-162.16534424 -352.73849487]
[-151.60639954 -363.42196655]
[-139.76791382 -372.66744995]
[-126.84432220 -380.32312012]
[-113.04782867 -386.26321411]
[-98.60498047 -390.39025879]
[-83.75294495 -392.63647461]
[-68.73561096 -392.96493530]
[-53.79956436 -391.37026978]
[-39.19008255 -387.87866211]
[-25.14705658 -382.54745483]
[-11.90109062 -375.46417236]
[0.33030602 -366.74514771]
[11.34628201 -356.53356934]
[20.96594620 -344.99710083]
[29.03133392 -332.32516479]
[35.41000366 -318.72586060]
[39.99721527 -304.42251587]
[42.71763992 -289.64999390]
[43.52660370 -274.65084839]
[42.41082764 -259.67141724]
[39.38862991 -244.95765686]
[34.50963974 -230.75119019]
[27.85397148 -217.28529358]
[19.53092194 -204.78108215]
[9.67715931 -193.44390869]
[-1.54550612 -183.45991516]
[-13.95278931 -174.99305725]
[-27.34095192 -168.18237305]
[-22.30403519 -154.05334473]
[-17.26711845 -139.92431641]
[-12.23020267 -125.79528046]
[-7.19328690 -111.66625214]
[-2.15637040 -97.53722382]
[3.19481540 -83.52420044]
[8.85760212 -69.63417053]
[14.52038860 -55.74414444]
[20.79774857 -42.12083054]
[27.67716217 -28.79140091]
[34.55657578 -15.46197128]
[41.43598557 -2.13254237]
[48.31539917 11.19688702]
[55.19481277 24.52631569]
[62.07422638 37.85574341]
[68.95363617 51.18517303]
[77.46046448 63.53968430]
[87.45863342 74.72165680]
[97.45681000 85.90363312]
[110.67800140 90.45244598]
[113.72516632 104.09819794]
[117.89574432 105.30659485]
[121.13871002 107.55330658]
[123.24153137 110.41923523]
[124.14965820 113.45928955]
[123.96125031 116.25618744]
[133.27613831 128.01344299]
[142.59101868 139.77069092]
[151.90589905 151.52793884]
[161.98704529 162.63517761]
[172.78919983 173.04254150]
[183.59135437 183.44992065]
[194.39350891 193.85728455]
[205.19566345 204.26466370]
[215.99781799 214.67204285]
[226.79997253 225.07940674]
[237.60214233 235.48678589]
[249.10929871 225.84223938]
[261.57644653 217.47550964]
[274.86230469 210.48135376]
[288.81634521 204.93907166]
[303.28045654 200.91140747]
[318.09072876 198.44404602]
[333.07934570 197.56492615]
[348.07650757 198.28399658]
[362.91229248 200.59312439]
[377.41854858 204.46614075]
[391.43096924 209.85916138]
[404.79071045 216.71107483]
[417.34646606 224.94425964]
[428.95593262 234.46540833]
[439.48757935 245.16664124]
[448.82208252 256.92672729]
[456.85363770 269.61239624]
[463.49127197 283.07989502]
[468.65979004 297.17666626]
[472.30059814 311.74295044]
[474.37243652 326.61370850]
[474.85186768 341.62045288]
[473.73342896 356.59313965]
[471.02978516 371.36209106]
[466.77160645 385.76000977]
[461.00711060 399.62371826]
[453.80163574 412.79617310]
[445.23681641 425.12808228]
[435.40969849 436.47973633]
[424.43164062 446.72247314]
[412.42700195 455.74029541]
[399.53182983 463.43096924]
[385.89221191 469.70739746]
[371.66275024 474.49844360]
[357.00460815 477.74978638]
[342.08392334 479.42465210]
[327.06973267 479.50402832]
[312.13217163 477.98703003]
[297.44049072 474.89080811]
[283.16116333 470.25048828]
[269.45596313 464.11862183]
[256.48019409 456.56469727]
[244.38088989 447.67431641]
[233.29513550 437.54821777]
[223.34855652 426.30111694]
[214.65382385 414.06045532]
[207.30947876 400.96490479]
[201.39874268 387.16293335]
[196.98857117 372.81082153]
[194.12893677 358.07125854]
[192.85226440 343.11123657]
[193.17298889 328.10028076]
[195.08749390 313.20843506]
[198.57409668 298.60449219]
[203.59326172 284.45385742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[19 147]
[20 146]
[21 145]
[22 144]
[23 139]
[25 137]
[26 136]
[27 135]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[50 129]
[51 128]
[52 127]
[59 126]
[60 125]
[61 124]
[65 123]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
