%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[96.31527710 220.65582275]
[103.40999603 233.96430969]
[106.97132874 248.61926270]
[106.77541351 263.69946289]
[102.83457184 278.25695801]
[95.39651489 291.37664795]
[84.92881775 302.23379517]
[72.08947754 310.14596558]
[57.68559647 314.61575317]
[42.62260818 315.36218262]
[27.84738350 312.33834839]
[14.28871059 305.73431396]
[2.79889536 295.96524048]
[-5.89980173 283.64517212]
[-11.26057243 269.54861450]
[-12.94643593 254.56167603]
[-10.85141563 239.62641907]
[-5.10720682 225.68171692]
[3.92510414 213.60412598]
[15.67773914 204.15286255]
[29.41191673 197.92204285]
[44.26429749 195.30332947]
[59.30124664 196.46134949]
[64.12724304 182.25889587]
[68.95323944 168.05644226]
[73.77923584 153.85398865]
[78.60523224 139.65153503]
[83.43123627 125.44907379]
[88.25723267 111.24662018]
[84.56626892 94.88345337]
[97.30129242 83.96578979]
[101.91529846 69.69305420]
[106.52930450 55.42031860]
[111.14331818 41.14758682]
[97.05486298 35.99295425]
[83.17286682 30.30570221]
[69.51744843 24.09407425]
[56.10841751 17.36707878]
[42.96520233 10.13446712]
[30.10686874 2.40672755]
[17.55205917 -5.80493593]
[5.31897306 -14.48861790]
[-6.57464981 -23.63172531]
[-18.11156464 -33.22100449]
[-29.27504539 -43.24255371]
[-40.04890823 -53.68183517]
[-50.41752625 -64.52371979]
[-60.36586761 -75.75248718]
[-69.87950897 -87.35185242]
[-78.94466400 -99.30500031]
[-87.54817963 -111.59459686]
[-95.67758179 -124.20282745]
[-103.32108307 -137.11141968]
[-110.46760559 -150.30163574]
[-117.10678864 -163.75436401]
[-123.22900391 -177.45010376]
[-128.82536316 -191.36898804]
[-133.88777161 -205.49084473]
[-138.40888977 -219.79518127]
[-142.38214111 -234.26127625]
[-145.80177307 -248.86814880]
[-148.66284180 -263.59463501]
[-150.96119690 -278.41934204]
[-152.69348145 -293.32083130]
[-153.85720825 -308.27743530]
[-154.45066833 -323.26751709]
[-154.47303772 -338.26931763]
[-153.92424011 -353.26110840]
[-152.80509949 -368.22113037]
[-151.11723328 -383.12768555]
[-148.86308289 -397.95919800]
[-146.04592896 -412.69412231]
[-142.66984558 -427.31112671]
[-138.73971558 -441.78900146]
[-134.26127625 -456.10678101]
[-129.24098206 -470.24365234]
[-123.68611908 -484.17913818]
[-117.60475159 -497.89306641]
[-111.00569916 -511.36553955]
[-103.89852142 -524.57702637]
[-96.29352570 -537.50830078]
[-88.20173645 -550.14068604]
[-79.63489532 -562.45593262]
[-70.60541534 -574.43603516]
[-61.12638474 -586.06365967]
[-51.21155167 -597.32208252]
[-40.87529373 -608.19482422]
[-30.13259697 -618.66613770]
[-18.99903679 -628.72094727]
[-7.49075365 -638.34454346]
[4.37556410 -647.52307129]
[16.58271217 -656.24316406]
[29.11299324 -664.49218750]
[41.94823456 -672.25823975]
[55.06983185 -679.52996826]
[68.45875549 -686.29693604]
[82.09559631 -692.54925537]
[95.96058655 -698.27783203]
[110.03360748 -703.47442627]
[124.29427338 -708.13146973]
[138.72189331 -712.24224854]
[153.29554749 -715.80078125]
[167.99412537 -718.80187988]
[182.79629517 -721.24127197]
[197.68060303 -723.11529541]
[212.62547302 -724.42132568]
[227.60922241 -725.15747070]
[242.61013794 -725.32263184]
[257.60647583 -724.91656494]
[272.57644653 -723.93988037]
[287.49841309 -722.39398193]
[302.35070801 -720.28112793]
[317.11178589 -717.60437012]
[331.76025391 -714.36755371]
[346.27490234 -710.57543945]
[360.63464355 -706.23345947]
[374.81866455 -701.34796143]
[388.80639648 -695.92596436]
[402.57760620 -689.97546387]
[416.11224365 -683.50494385]
[429.39077759 -676.52380371]
[442.39389038 -669.04223633]
[455.10275269 -661.07110596]
[467.49890137 -652.62182617]
[479.56442261 -643.70678711]
[491.28179932 -634.33886719]
[502.63403320 -624.53167725]
[513.60467529 -614.29937744]
[524.17779541 -603.65686035]
[534.33813477 -592.61950684]
[544.07086182 -581.20330811]
[553.36187744 -569.42492676]
[562.19781494 -557.30133057]
[570.56573486 -544.85015869]
[578.45361328 -532.08941650]
[585.84991455 -519.03759766]
[592.74401855 -505.71371460]
[599.12579346 -492.13699341]
[604.98614502 -478.32717896]
[610.31646729 -464.30426025]
[615.10906982 -450.08856201]
[619.35699463 -435.70071411]
[623.05407715 -421.16159058]
[626.19494629 -406.49224854]
[628.77508545 -391.71398926]
[630.79071045 -376.84817505]
[632.23895264 -361.91641235]
[633.11767578 -346.94036865]
[633.42559814 -331.94168091]
[633.16229248 -316.94216919]
[632.32818604 -301.96356201]
[630.92437744 -287.02755737]
[628.95300293 -272.15585327]
[626.41680908 -257.36993408]
[623.31964111 -242.69132996]
[619.66583252 -228.14126587]
[615.46075439 -213.74084473]
[610.71044922 -199.51095581]
[605.42187500 -185.47222900]
[599.60272217 -171.64501953]
[593.26129150 -158.04937744]
[586.40692139 -144.70501709]
[579.04949951 -131.63128662]
[571.19964600 -118.84712219]
[562.86877441 -106.37108612]
[554.06896973 -94.22125244]
[544.81304932 -82.41524506]
[535.11431885 -70.97016907]
[524.98687744 -59.90263367]
[514.44549561 -49.22867966]
[503.50534058 -38.96378326]
[492.18237305 -29.12282562]
[480.49291992 -19.72007751]
[468.45397949 -10.76917076]
[456.08300781 -2.28308558]
[443.39791870 5.72587585]
[430.41714478 13.24610138]
[417.15945435 20.26668549]
[403.64410400 26.77745247]
[389.89068604 32.76895905]
[375.91912842 38.23251724]
[361.74972534 43.16020966]
[347.40295410 47.54489136]
[332.89968872 51.38019943]
[318.26089478 54.66057968]
[303.50784302 57.38126755]
[288.66192627 59.53833008]
[273.74462891 61.12862778]
[258.77758789 62.14986420]
[243.78254700 62.60055161]
[228.78120422 62.48004150]
[213.79533386 61.78850555]
[198.84664917 60.52694702]
[183.95683289 58.69719696]
[169.14746094 56.30190659]
[154.44003296 53.34455109]
[139.85583496 49.82941437]
[125.41604614 45.76159668]
[120.80204010 60.03432846]
[116.18803406 74.30706024]
[111.57402039 88.57979584]
[116.24241638 99.24972534]
[112.57754517 110.30458069]
[102.45968628 116.07261658]
[97.63368988 130.27507019]
[92.80769348 144.47752380]
[87.98169708 158.67997742]
[83.15569305 172.88244629]
[78.32969666 187.08489990]
[73.50370026 201.28735352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 210]
[24 209]
[25 208]
[26 207]
[27 206]
[28 205]
[29 204]
[31 201]
[32 200]
[33 199]
[34 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
