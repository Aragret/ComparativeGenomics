%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[91.57437897 469.75268555]
[82.55689240 481.76031494]
[72.22939301 492.66171265]
[60.72652817 502.31478882]
[48.19824982 510.59365845]
[34.80789948 517.39044189]
[20.73004150 522.61651611]
[6.14821291 526.20373535]
[-8.74748230 528.10528564]
[-23.76284790 528.29650879]
[-38.70212936 526.77478027]
[-53.37055969 523.55999756]
[-67.57691193 518.69403076]
[-81.13597107 512.24035645]
[-93.87096405 504.28314209]
[-105.61587524 494.92605591]
[-116.21757507 484.29113770]
[-125.53784943 472.51699829]
[-133.45520020 459.75717163]
[-139.86639404 446.17797852]
[-144.68786621 431.95648193]
[-147.85673523 417.27804565]
[-149.33171082 402.33407593]
[-149.09353638 387.31939697]
[-147.14535522 372.42971802]
[-143.51252747 357.85919189]
[-138.24244690 343.79776001]
[-131.40379333 330.42874146]
[-123.08573914 317.92642212]
[-113.39672089 306.45382690]
[-102.46305847 296.16049194]
[-90.42728424 287.18060303]
[-77.44632721 279.63128662]
[-63.68940353 273.61090088]
[-49.33587265 269.19796753]
[-34.57286072 266.45004272]
[-19.59283257 265.40289307]
[-4.59108305 266.07019043]
[10.23680782 268.44326782]
[24.69752693 272.49114990]
[30.36031342 258.60110474]
[27.03922653 241.36924744]
[41.67878723 230.19943237]
[47.13414383 216.22662354]
[52.58950043 202.25382996]
[49.01222610 185.07331848]
[63.48386002 173.68678284]
[60.68707657 159.05711365]
[72.76266479 148.83503723]
[78.00938416 134.78256226]
[77.40406799 127.41674042]
[83.44023895 120.56090546]
[88.89559937 106.58810425]
[77.80680847 116.68952942]
[64.64637756 123.88696289]
[50.15858841 127.77335358]
[35.16280365 128.12892151]
[20.50710297 124.93354034]
[7.02033806 118.36793518]
[-4.53474903 108.80342102]
[-13.50466251 96.78091431]
[-19.38210869 82.98034668]
[-21.83469200 68.18221283]
[-20.72370720 53.22340775]
[-16.11198235 38.94993591]
[-8.26033592 26.16902924]
[2.38718486 15.60350418]
[15.22841072 7.85089636]
[29.53710747 3.34965253]
[44.50404739 2.35434008]
[59.28278351 4.92124891]
[73.03749847 10.90520763]
[84.99030304 19.96779442]
[94.46520996 31.59647560]
[100.92635345 45.13359451]
[104.00833893 59.81355667]
[103.53685760 74.80614471]
[99.53817749 89.26445007]
[109.53634644 78.08247375]
[112.96689606 62.63767242]
[127.21807861 58.30719376]
[137.21624756 47.12521744]
[147.21441650 35.94324493]
[157.21260071 24.76126862]
[165.15927124 12.03923321]
[170.82206726 -1.85079384]
[167.89395142 -20.03066444]
[182.16589355 -30.24236298]
[187.62124634 -44.21516037]
[193.07659912 -58.18795776]
[198.53195190 -72.16075897]
[203.98731995 -86.13355255]
[208.17433167 -100.53733826]
[211.05960083 -115.25722504]
[213.94487000 -129.97711182]
[216.83013916 -144.69700623]
[219.71542358 -159.41690063]
[222.60069275 -174.13679504]
[208.78741455 -180.13742065]
[196.58731079 -188.96755981]
[186.57098389 -200.21421814]
[179.20693970 -213.35137939]
[174.83958435 -227.76457214]
[173.67320251 -242.77969360]
[175.76235962 -257.69442749]
[181.00930786 -271.81121826]
[189.16867065 -284.46975708]
[199.85879517 -295.07803345]
[212.57969666 -303.13983154]
[226.73638916 -308.27810669]
[241.66676331 -310.25253296]
[256.67245483 -308.97076416]
[271.05166626 -304.49273682]
[284.13180542 -297.02792358]
[295.30114746 -286.92544556]
[304.03723145 -274.65780640]
[309.93148804 -260.79882812]
[312.70822144 -245.99667358]
[312.23757935 -230.94367981]
[308.54153442 -216.34390259]
[301.79296875 -202.88021851]
[292.30752563 -191.18232727]
[280.52886963 -181.79736328]
[267.00790405 -175.16427612]
[252.37704468 -171.59332275]
[237.32058716 -171.25152588]
[234.43530273 -156.53163147]
[231.55003357 -141.81173706]
[228.66476440 -127.09184265]
[225.77949524 -112.37195587]
[222.89421082 -97.65206146]
[233.29632568 -108.45929718]
[247.32699585 -113.76403046]
[262.27713013 -112.54200745]
[275.26010132 -105.02918243]
[283.76910400 -92.67616272]
[286.16116333 -77.86812592]
[281.97439575 -63.46426392]
[272.01727295 -52.24574661]
[258.21228027 -46.37868500]
[243.22497559 -46.99592209]
[229.94918823 -53.97827911]
[220.94824219 -65.97756958]
[217.96011353 -80.67819977]
[212.50476074 -66.70539856]
[207.04939270 -52.73260117]
[201.59403992 -38.75980377]
[196.13868713 -24.78700638]
[200.70683289 -13.58617687]
[196.27624512 -1.90056133]
[184.71209717 3.81199265]
[179.04930115 17.70201874]
[190.30708313 7.78928375]
[203.65313721 0.94216269]
[218.27133179 -2.42063951]
[233.26776123 -2.09348631]
[247.72538757 1.90361679]
[260.76013184 9.32624531]
[271.57492065 19.72050285]
[279.50839233 32.45077515]
[284.07543945 46.73860550]
[284.99679565 61.71028137]
[282.21609497 76.45028687]
[275.90338135 90.05725861]
[266.44467163 101.69912720]
[254.41839600 110.66398621]
[240.55995178 116.40363312]
[225.71679688 118.56708527]
[210.79656982 117.02204132]
[196.71168518 111.86299896]
[184.32341003 103.40541840]
[174.38929749 92.16648865]
[167.51683044 78.83347321]
[164.12626648 64.22169495]
[164.42492676 49.22467041]
[168.39456177 34.75944138]
[158.39639282 45.94141769]
[148.39822388 57.12339020]
[138.40005493 68.30536652]
[135.68464661 82.95035553]
[120.71832275 88.08064270]
[110.72015381 99.26261902]
[102.86839294 112.04346466]
[97.41304016 126.01625824]
[92.06185150 140.02928162]
[86.81513214 154.08175659]
[89.23664093 169.71655273]
[77.53633118 178.93350220]
[82.17063141 190.97036743]
[77.51132965 202.56668091]
[66.56230164 207.70918274]
[61.10694122 221.68199158]
[55.65158463 235.65478516]
[60.10615921 247.75930786]
[55.27471924 259.28497314]
[44.25033951 264.26388550]
[38.58755493 278.15393066]
[51.75651550 285.37030029]
[64.01701355 294.04083252]
[75.20919800 304.05245972]
[85.18717194 315.27465820]
[93.82083893 327.56115723]
[100.99765015 340.75170898]
[106.62403870 354.67440796]
[110.62664795 369.14773560]
[112.95329285 383.98297119]
[113.57365417 398.98672485]
[112.47963715 413.96340942]
[109.68550873 428.71774292]
[105.22768402 443.05740356]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 197]
[41 196]
[43 193]
[44 192]
[45 191]
[47 188]
[49 186]
[50 185]
[52 184]
[53 183]
[78 182]
[79 181]
[81 179]
[82 178]
[83 177]
[84 176]
[85 152]
[86 151]
[88 148]
[89 147]
[90 146]
[91 145]
[92 144]
[93 131]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
