%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[22.52675247 495.76638794]
[18.96694946 510.34933472]
[14.05720520 524.53485107]
[7.84066772 538.19824219]
[0.37196839 551.21954346]
[-8.28325558 563.48419189]
[-18.04893875 574.88439941]
[-28.83926201 585.32012939]
[-40.55939102 594.69952393]
[-53.10633469 602.94018555]
[-66.36981964 609.96972656]
[-80.23329163 615.72631836]
[-94.57490540 620.15942383]
[-109.26863098 623.23010254]
[-124.18533325 624.91131592]
[-139.19392395 625.18829346]
[-154.16250610 624.05859375]
[-168.95951843 621.53216553]
[-183.45494080 617.63122559]
[-197.52136230 612.39007568]
[-211.03518677 605.85467529]
[-223.87763977 598.08258057]
[-235.93585205 589.14196777]
[-247.10386658 579.11151123]
[-257.28353882 568.07934570]
[-266.38537598 556.14239502]
[-274.32943726 543.40557861]
[-281.04586792 529.98083496]
[-286.47567749 515.98614502]
[-290.57110596 501.54446411]
[-293.29620361 486.78274536]
[-294.62698364 471.83071899]
[-294.55178833 456.81976318]
[-293.07125854 441.88180542]
[-290.19839478 427.14813232]
[-285.95846558 412.74819946]
[-280.38870239 398.80862427]
[-273.53808594 385.45184326]
[-265.46682739 372.79525757]
[-256.24581909 360.95010376]
[-245.95613098 350.02047729]
[-234.68817139 340.10241699]
[-222.54096985 331.28311157]
[-209.62129211 323.64007568]
[-196.04266357 317.24041748]
[-181.92443848 312.14044189]
[-167.39065552 308.38494873]
[-152.56906128 306.00689697]
[-137.58992004 305.02725220]
[-122.58486176 305.45462036]
[-107.68575287 307.28518677]
[-93.02352905 310.50289917]
[-78.72705841 315.07949829]
[-64.92195892 320.97476196]
[-51.72957611 328.13684082]
[-39.26583099 336.50280762]
[-29.77693367 324.88555908]
[-20.28803444 313.26828003]
[-10.79913712 301.65103149]
[-1.31023860 290.03375244]
[6.73093414 277.37121582]
[13.21043015 263.84289551]
[19.68992615 250.31454468]
[18.20948792 235.49368286]
[31.14888954 226.38970947]
[37.62838745 212.86135864]
[44.10788345 199.33302307]
[50.58737946 185.80467224]
[57.06687546 172.27632141]
[55.58643723 157.45547485]
[68.52584076 148.35150146]
[75.00533295 134.82315063]
[81.48483276 121.29480743]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[104.88593292 72.17783356]
[111.16329193 58.55451965]
[117.13485718 44.79441452]
[122.79764557 30.90438843]
[128.46043396 17.01436234]
[127.94063568 10.42335606]
[130.45065308 5.32464886]
[134.50415039 2.79913735]
[140.57798767 -10.91612911]
[146.65182495 -24.63139534]
[152.72564697 -38.34666443]
[158.79948425 -52.06192780]
[158.47616577 -58.66548920]
[161.13687134 -63.68720245]
[165.26376343 -66.09090424]
[171.74327087 -79.61925507]
[178.22276306 -93.14759827]
[184.70225525 -106.67594147]
[191.18174744 -120.20429230]
[197.66125488 -133.73263550]
[185.03411865 -141.86645508]
[173.52604675 -151.51876831]
[163.31849670 -162.53735352]
[154.57246399 -174.74842834]
[147.42591858 -187.95941162]
[141.99153137 -201.96192932]
[138.35502625 -216.53515625]
[136.57376099 -231.44926453]
[136.67582703 -246.46900940]
[138.65960693 -261.35751343]
[142.49382019 -275.88000488]
[148.11799622 -289.80737305]
[155.44342041 -302.92001343]
[164.35458374 -315.01110840]
[174.71092224 -325.88995361]
[186.34912109 -335.38497925]
[199.08561707 -343.34643555]
[212.71954346 -349.64877319]
[227.03585815 -354.19259644]
[241.80879211 -356.90621948]
[256.80532837 -357.74682617]
[271.78900146 -356.70123291]
[286.52343750 -353.78585815]
[300.77630615 -349.04672241]
[314.32275391 -342.55853271]
[326.94918823 -334.42364502]
[338.45648193 -324.77038574]
[348.66308594 -313.75091553]
[357.40808105 -301.53912354]
[364.55352783 -288.32754517]
[369.98672485 -274.32455444]
[373.62200928 -259.75100708]
[375.40203857 -244.83676147]
[375.29870605 -229.81703186]
[373.31365967 -214.92868042]
[369.47824097 -200.40653992]
[363.85287476 -186.47962952]
[356.52633667 -173.36761475]
[347.61416626 -161.27726746]
[337.25689697 -150.39929199]
[325.61791992 -140.90524292]
[312.88073730 -132.94483948]
[299.24630737 -126.64366150]
[284.92959595 -122.10105133]
[270.15643311 -119.38867950]
[255.15980530 -118.54930878]
[240.17623901 -119.59618378]
[225.44204712 -122.51279449]
[211.18959045 -127.25314331]
[204.71009827 -113.72479248]
[198.23060608 -100.19644928]
[191.75111389 -86.66810608]
[185.27160645 -73.13975525]
[178.79211426 -59.61141205]
[172.51475525 -45.98809433]
[166.44091797 -32.27282715]
[160.36708069 -18.55756187]
[154.29325867 -4.84229565]
[148.21942139 8.87297153]
[142.35046387 22.67714882]
[136.68766785 36.56717682]
[131.02488708 50.45720291]
[132.04801941 53.83144760]
[131.48764038 57.86890030]
[129.04983521 61.81990051]
[124.78661346 64.83187866]
[118.50924683 78.45519257]
[118.56504059 85.84564209]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[95.01317596 127.77430725]
[88.53367615 141.30264282]
[82.05418396 154.83099365]
[83.07116699 170.61947632]
[70.59522247 178.75582886]
[64.11572266 192.28416443]
[57.63622665 205.81251526]
[51.15673065 219.34086609]
[44.67723465 232.86920166]
[45.69421768 248.65769958]
[33.21827316 256.79403687]
[26.73877525 270.32238770]
[20.25927925 283.85073853]
[32.47567368 275.14672852]
[46.91366196 271.07922363]
[61.87708664 272.12609863]
[75.60805511 278.16436768]
[86.49347687 288.48461914]
[93.25453186 301.87445068]
[95.09693909 316.76089478]
[91.80426025 331.39501953]
[83.76331329 344.05770874]
[71.91873932 353.26129150]
[57.66203308 357.92459106]
[42.66805267 357.49972534]
[28.69827461 352.03665161]
[17.39385796 342.17712402]
[10.08283234 329.07943726]
[7.62409115 314.28234863]
[10.30702496 299.52264404]
[0.81812638 311.13992310]
[-8.67077160 322.75717163]
[-18.15966988 334.37445068]
[-27.64856911 345.99169922]
[-16.96261597 356.53424072]
[-7.31084871 368.03109741]
[1.22191286 380.38125610]
[8.56068039 393.47616577]
[14.64095879 407.20077515]
[19.40931320 421.43444824]
[22.82383919 436.05209351]
[24.85452843 450.92523193]
[25.48353386 465.92321777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 201]
[57 200]
[58 199]
[59 198]
[60 197]
[61 180]
[62 179]
[63 178]
[65 176]
[66 175]
[67 174]
[68 173]
[69 172]
[71 170]
[72 169]
[73 168]
[74 167]
[76 165]
[77 163]
[78 162]
[79 158]
[80 157]
[81 156]
[84 155]
[85 154]
[86 153]
[87 152]
[88 151]
[91 150]
[92 149]
[93 148]
[94 147]
[95 146]
[96 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
