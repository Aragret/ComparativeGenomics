%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[23.72197342 695.07800293]
[29.76831245 679.23883057]
[29.76831245 664.23883057]
[29.76831245 649.23883057]
[29.76831245 634.23883057]
[29.76831245 619.23883057]
[26.62481308 612.55004883]
[29.88164330 604.01593018]
[30.10497093 589.01763916]
[19.40294838 599.52795410]
[4.45917654 600.82550049]
[-7.89425182 592.31707764]
[-12.00951672 577.89263916]
[-6.00517368 564.14685059]
[7.37367153 557.36401367]
[22.01039124 560.64526367]
[31.21385002 572.49212646]
[32.99631500 557.59838867]
[34.77878189 542.70471191]
[36.56124878 527.81097412]
[38.34371567 512.91723633]
[32.17363358 499.36074829]
[41.49599838 486.57778931]
[27.59622383 482.19122314]
[14.73950386 475.31585693]
[3.36712861 466.18594360]
[-6.13024473 455.11318970]
[-13.42600727 442.47598267]
[-18.26883316 428.70666504]
[-20.49133301 414.27658081]
[-20.01584816 399.67993164]
[-16.85714912 385.41699219]
[-11.12199402 371.97686768]
[-3.00551701 359.82070923]
[7.21541262 349.36593628]
[19.19163322 340.97183228]
[32.51361847 334.92733765]
[46.72547913 331.44091797]
[61.34056854 330.63357544]
[63.34458160 315.76806641]
[65.34859467 300.90252686]
[67.35260773 286.03701782]
[69.35662079 271.17147827]
[71.36063385 256.30593872]
[73.36465454 241.44041443]
[75.36866760 226.57489014]
[77.37268066 211.70936584]
[71.40511322 198.06248474]
[80.91677094 185.41973877]
[82.92078400 170.55419922]
[84.92479706 155.68867493]
[86.92881012 140.82315063]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[98.20566559 57.17284012]
[97.20140076 42.20649338]
[93.22930908 27.74197006]
[89.25720978 13.27744675]
[78.45382690 6.23118925]
[75.44324493 -5.89811945]
[81.31002808 -16.47674751]
[77.55372620 -30.99880600]
[73.79742432 -45.52086639]
[69.39577484 -31.18121910]
[59.60378265 -19.81825829]
[46.07157135 -13.34684181]
[31.07955551 -12.85751820]
[17.15415192 -18.43274689]
[6.64203930 -29.13300133]
[1.31469047 -43.15510559]
[2.06985855 -58.13608170]
[8.78028393 -71.55137634]
[20.31514168 -81.14028168]
[34.73060608 -85.28688812]
[49.59741974 -83.29242706]
[62.41026306 -75.49299622]
[71.01059723 -63.20141983]
[70.11777496 -78.17482758]
[69.22496033 -93.14823151]
[68.33214569 -108.12163544]
[67.43933105 -123.09503937]
[66.54651642 -138.06845093]
[63.23062515 -143.78826904]
[63.29191589 -149.47099304]
[65.85678864 -153.49969482]
[57.71203232 -167.06338501]
[65.06696320 -180.01538086]
[64.62036133 -195.00872803]
[64.17375183 -210.00207520]
[63.61554337 -224.99168396]
[62.94575500 -239.97673035]
[62.27597046 -254.96176147]
[47.74323273 -259.21362305]
[35.37992859 -267.95590210]
[26.52713776 -280.24029541]
[22.14514732 -294.73434448]
[22.70928192 -309.86578369]
[28.15834808 -323.99328613]
[37.90127182 -335.58441162]
[50.88121414 -343.38183594]
[65.69020844 -346.53973389]
[80.72187805 -344.71560669]
[94.34571838 -338.10729980]
[105.08389282 -327.43161011]
[111.77162933 -313.84658813]
[113.68347168 -298.82580566]
[110.61205292 -283.99865723]
[102.89052582 -270.97341919]
[91.35646820 -261.16299438]
[77.26100922 -255.63154602]
[77.93079376 -240.64651489]
[78.60057831 -225.66146851]
[82.03961945 -219.11970520]
[79.16710663 -210.44868469]
[79.61370850 -195.45533752]
[80.06031799 -180.46199036]
[88.17312622 -167.97071838]
[80.85013580 -153.94630432]
[81.51992035 -138.96125793]
[82.41273499 -123.98785400]
[83.30554962 -109.01445007]
[84.19837189 -94.04104614]
[85.09118652 -79.06764221]
[85.98400116 -64.09423065]
[88.31948853 -49.27716446]
[92.07579041 -34.75510788]
[95.83209229 -20.23304749]
[108.78943634 -8.39775467]
[103.72173309 9.30535126]
[107.69383240 23.76987457]
[111.66592407 38.23439789]
[114.49346924 23.50330925]
[120.38079834 9.70695591]
[129.06007385 -2.52702093]
[140.13644409 -12.64205551]
[153.10601807 -20.17798233]
[167.37876892 -24.79196548]
[182.30535889 -26.27410126]
[197.20674133 -24.55696106]
[211.40501404 -19.71866417]
[224.25424194 -11.97932053]
[235.16986084 -1.69101894]
[243.65530396 10.67819214]
[249.32452393 24.56559563]
[251.91960144 39.33940887]
[251.32249451 54.32751846]
[247.56037903 68.84806824]
[240.80436707 82.24047089]
[231.36184692 93.89546204]
[219.66236877 103.28281403]
[206.23820496 109.97546387]
[191.70004272 113.66894531]
[176.70927429 114.19522095]
[161.94789124 111.53036499]
[148.08741760 105.79559326]
[135.75843811 97.25181580]
[125.52182770 86.28770447]
[117.84328461 73.40205383]
[113.07118988 59.17685318]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[101.79433441 142.82716370]
[99.79032135 157.69268799]
[97.78630829 172.55821228]
[95.78229523 187.42375183]
[101.60652161 202.13391113]
[92.23820496 213.71337891]
[90.23419189 228.57890320]
[88.23017883 243.44442749]
[86.22616577 258.30996704]
[84.22215271 273.17547607]
[82.21813965 288.04101562]
[80.21412659 302.90655518]
[78.21011353 317.77206421]
[76.20610046 332.63760376]
[90.83405304 337.62173462]
[104.20916748 345.35357666]
[115.82144165 355.53622437]
[125.22850800 367.77941895]
[132.07246399 381.61431885]
[136.09352112 396.51171875]
[137.13983154 411.90209961]
[135.17320251 427.19741821]
[130.27058411 441.81372070]
[122.62091827 455.19320679]
[112.51800537 466.82577515]
[100.34909821 476.26821899]
[86.58013916 483.16134644]
[71.73786926 487.24340820]
[56.38971710 488.36022949]
[62.43230438 502.98205566]
[53.23743057 514.69970703]
[51.45496750 529.59344482]
[49.67250061 544.48718262]
[47.89003372 559.38085938]
[46.10756683 574.27459717]
[45.10330963 589.24096680]
[44.87998199 604.23925781]
[44.76831436 619.23883057]
[44.76831436 634.23883057]
[44.76831436 649.23883057]
[44.76831436 664.23883057]
[44.76831436 679.23883057]
[50.81465149 695.07800293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[8 204]
[9 203]
[17 202]
[18 201]
[19 200]
[20 199]
[21 198]
[23 196]
[39 181]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[45 175]
[46 174]
[47 173]
[49 171]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[56 164]
[57 163]
[58 162]
[59 134]
[60 133]
[61 132]
[64 130]
[65 129]
[66 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[88 121]
[90 119]
[91 118]
[92 117]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
