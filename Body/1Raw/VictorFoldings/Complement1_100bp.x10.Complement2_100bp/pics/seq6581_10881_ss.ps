%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[55.66834259 639.55499268]
[41.29370880 643.85516357]
[26.69881630 647.33514404]
[11.93041897 649.98382568]
[-2.96417475 651.79278564]
[-17.93725395 652.75616455]
[-32.94085693 652.87091064]
[-47.92691803 652.13659668]
[-62.84743118 650.55566406]
[-77.65460968 648.13311768]
[-92.30101776 644.87670898]
[-106.73973083 640.79693604]
[-120.92450714 635.90679932]
[-134.80990601 630.22198486]
[-148.35144043 623.76074219]
[-161.50573730 616.54370117]
[-174.23066711 608.59399414]
[-186.48545837 599.93713379]
[-198.23085022 590.60083008]
[-209.42922974 580.61499023]
[-220.04473877 570.01153564]
[-230.04333496 558.82452393]
[-239.39302063 547.08978271]
[-248.06382751 534.84484863]
[-256.02798462 522.12896729]
[-263.25997925 508.98291016]
[-269.73666382 495.44873047]
[-275.43728638 481.56982422]
[-280.34356689 467.39062500]
[-284.43978882 452.95657349]
[-287.71282959 438.31387329]
[-290.15222168 423.50946045]
[-291.75015259 408.59075928]
[-292.50149536 393.60552979]
[-292.40386963 378.60180664]
[-291.45751953 363.62765503]
[-289.66552734 348.73101807]
[-287.03366089 333.95959473]
[-283.57028198 319.36074829]
[-279.28649902 304.98123169]
[-274.19610596 290.86709595]
[-268.31530762 277.06356812]
[-261.66302490 263.61483765]
[-254.26051331 250.56402588]
[-246.13150024 237.95289612]
[-237.30204773 225.82186890]
[-227.80041504 214.20979309]
[-217.65704346 203.15388489]
[-206.90443420 192.68954468]
[-195.57701111 182.85028076]
[-183.71109009 173.66764832]
[-171.34465027 165.17102051]
[-158.51731873 157.38764954]
[-145.27020264 150.34245300]
[-131.64570618 144.05798340]
[-117.68749237 138.55439758]
[-103.44026947 133.84931946]
[-88.94966888 129.95780945]
[-74.26212311 126.89234924]
[-59.42466354 124.66275024]
[-44.48483276 123.27614594]
[-29.49048424 122.73699188]
[-14.48964787 123.04700470]
[0.46962345 124.20520020]
[15.33940983 126.20786285]
[30.07207870 129.04856873]
[44.62043762 132.71824646]
[58.93788147 137.20510864]
[72.97855377 142.49481201]
[79.05238342 128.77954102]
[85.12622070 115.06427002]
[78.83103943 99.80850220]
[85.40117645 84.66911316]
[100.84367371 78.84699249]
[106.71263123 65.04280853]
[112.58159637 51.23863602]
[118.45055389 37.43445969]
[124.31951141 23.63028145]
[110.99217987 16.73104477]
[98.22479248 8.84362984]
[86.09049225 0.01321837]
[74.65878296 -9.70960999]
[63.99514389 -20.26916313]
[54.16065598 -31.60495567]
[45.21165085 -43.65205765]
[37.19938660 -56.34146500]
[30.16975784 -69.60048676]
[24.16303062 -83.35317993]
[19.21361351 -97.52077484]
[15.34985542 -112.02210999]
[12.59388638 -126.77413177]
[10.96149349 -141.69232178]
[10.46202660 -156.69125366]
[11.09834766 -171.68501282]
[12.86681080 -186.58769226]
[15.75728703 -201.31393433]
[19.75321960 -215.77941895]
[24.83172035 -229.90124512]
[30.96369743 -243.59855652]
[38.11402893 -256.79287720]
[46.24176025 -269.40863037]
[55.30033112 -281.37356567]
[65.23786163 -292.61914062]
[75.99742126 -303.08096313]
[87.51737976 -312.69903564]
[99.73175812 -321.41836548]
[112.57058716 -329.18893433]
[125.96032715 -335.96627808]
[139.82427979 -341.71151733]
[154.08305359 -346.39181519]
[168.65493774 -349.98031616]
[183.45649719 -352.45648193]
[198.40292358 -353.80615234]
[213.40861511 -354.02154541]
[228.38763428 -353.10144043]
[243.25416565 -351.05114746]
[257.92303467 -347.88238525]
[272.31027222 -343.61328125]
[286.33343506 -338.26831055]
[299.91217041 -331.87808228]
[312.96875000 -324.47921753]
[325.42837524 -316.11410522]
[337.21963501 -306.83062744]
[348.27505493 -296.68194580]
[358.53128052 -285.72625732]
[367.92953491 -274.02624512]
[376.41601562 -261.64898682]
[383.94210815 -248.66531372]
[390.46472168 -235.14965820]
[395.94647217 -221.17941284]
[400.35595703 -206.83459473]
[403.66790771 -192.19737244]
[405.86340332 -177.35159302]
[406.92980957 -162.38227844]
[406.86105347 -147.37519836]
[405.65753174 -132.41629028]
[403.32614136 -117.59124756]
[399.88018799 -102.98498535]
[395.33944702 -88.68116760]
[389.72994995 -74.76172638]
[383.08380127 -61.30639648]
[375.43905640 -48.39224625]
[366.83950806 -36.09324646]
[357.33444214 -24.47984695]
[346.97827148 -13.61856937]
[335.83035278 -3.57162595]
[323.95449829 5.60343456]
[311.41876221 13.85405731]
[298.29495239 21.13298416]
[284.65823364 27.39851952]
[270.58670044 32.61477661]
[256.16094971 36.75187302]
[241.46365356 39.78611755]
[226.57896423 41.70012283]
[211.59214783 42.48293304]
[196.58905029 42.13006210]
[181.65562439 40.64352798]
[166.87738037 38.03184509]
[152.33897400 34.30997849]
[138.12368774 29.49924278]
[132.25473022 43.30342102]
[126.38577271 57.10759735]
[120.51680756 70.91177368]
[114.64785004 84.71595001]
[120.75370789 95.82324982]
[119.41993713 108.42779541]
[111.12464905 118.01121521]
[98.84148407 121.13810730]
[92.76765442 134.85337830]
[86.69381714 148.56863403]
[100.04713440 155.41043091]
[112.99198914 162.99671936]
[125.48691559 171.30323792]
[137.49188232 180.30332947]
[148.96844482 189.96820068]
[159.87983704 200.26689148]
[170.19110107 211.16638184]
[179.86920166 222.63179016]
[188.88314819 234.62637329]
[197.20407104 247.11170959]
[204.80529785 260.04779053]
[211.66247559 273.39321899]
[217.75366211 287.10522461]
[223.05934143 301.13983154]
[227.56250000 315.45217896]
[231.24873352 329.99633789]
[234.10621643 344.72576904]
[236.12580872 359.59326172]
[237.30102539 374.55120850]
[237.62811279 389.55169678]
[237.10603333 404.54663086]
[235.73643494 419.48803711]
[233.52372742 434.32803345]
[230.47497559 449.01904297]
[226.59997559 463.51406860]
[221.91111755 477.76663208]
[216.42341614 491.73110962]
[210.15447998 505.36276245]
[203.12435913 518.61785889]
[195.35559082 531.45404053]
[186.87306213 543.83013916]
[177.70393372 555.70654297]
[167.87757874 567.04516602]
[157.42547607 577.80969238]
[146.38111877 587.96563721]
[134.77987671 597.48046875]
[122.65890503 606.32373047]
[110.05704498 614.46710205]
[97.01464844 621.88446045]
[83.57350922 628.55206299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 170]
[70 169]
[71 168]
[74 164]
[75 163]
[76 162]
[77 161]
[78 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
