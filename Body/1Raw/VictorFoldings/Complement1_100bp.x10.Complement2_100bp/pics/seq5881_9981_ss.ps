%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[150.15061951 643.69311523]
[138.15711975 634.67633057]
[126.74739075 624.93133545]
[115.96557617 614.49584961]
[105.85339355 603.41027832]
[96.44995880 591.71746826]
[87.79165649 579.46264648]
[79.91197968 566.69329834]
[72.84141541 553.45874023]
[66.60731506 539.81018066]
[61.23380661 525.80047607]
[56.74167252 511.48379517]
[53.14829636 496.91552734]
[50.46757507 482.15206909]
[48.70988464 467.25048828]
[47.88201904 452.26846313]
[47.98719025 437.26394653]
[49.02498245 422.29498291]
[50.99138641 407.41952515]
[53.87878799 392.69506836]
[57.67602539 378.17861938]
[62.36840057 363.92630005]
[67.93776703 349.99328613]
[74.36256409 336.43350220]
[81.61795044 323.29934692]
[89.67584991 310.64166260]
[98.50508881 298.50942993]
[108.07150269 286.94958496]
[118.33808899 276.00683594]
[129.26512146 265.72351074]
[140.81033325 256.13943481]
[152.92904663 247.29165649]
[165.57438660 239.21440125]
[158.30116272 226.09570312]
[145.36305237 218.71636963]
[145.43847656 202.89535522]
[138.16525269 189.77665710]
[133.90260315 187.62284851]
[130.94770813 182.76840210]
[130.87741089 176.15730286]
[123.99799347 162.82788086]
[117.11858368 149.49845886]
[110.23916626 136.16902161]
[103.35975647 122.83959198]
[96.48034668 109.51016235]
[90.27890015 104.36092377]
[89.59940338 95.93067169]
[76.52589417 87.02034760]
[77.78550720 72.17910004]
[71.10530853 58.74872589]
[64.42511749 45.31835175]
[57.64512634 31.93807602]
[50.76571274 18.60864830]
[43.88629913 5.27921867]
[28.66637230 5.61856604]
[14.86464787 -0.65832883]
[5.19644403 -12.25772572]
[1.53824747 -26.84465790]
[4.56368828 -41.51285934]
[13.62022877 -53.36379242]
[6.74081564 -66.69322205]
[-0.13859668 -80.02265167]
[-7.01800919 -93.35208130]
[-13.89742184 -106.68151093]
[-27.97591591 -101.45146179]
[-42.58218384 -97.95656586]
[-57.50322342 -96.24778748]
[-72.52143860 -96.35004425]
[-87.41783142 -98.26184082]
[-101.97515869 -101.95529938]
[-115.98112488 -107.37656403]
[-129.23149109 -114.44657135]
[-141.53303528 -123.06222534]
[-152.70635986 -133.09788513]
[-162.58851624 -144.40718079]
[-171.03540039 -156.82521057]
[-177.92381287 -170.17088318]
[-183.15333557 -184.24957275]
[-186.64768982 -198.85597229]
[-188.35591125 -213.77708435]
[-188.25309753 -228.79528809]
[-186.34074402 -243.69160461]
[-182.64672852 -258.24880981]
[-177.22494507 -272.25457764]
[-170.15443420 -285.50466919]
[-161.53833008 -297.80590820]
[-151.50225830 -308.97882080]
[-140.19258118 -318.86056519]
[-127.77423859 -327.30697632]
[-114.42830658 -334.19491577]
[-100.34941864 -339.42391968]
[-85.74288940 -342.91769409]
[-70.82172394 -344.62536621]
[-55.80351257 -344.52200317]
[-40.90726852 -342.60906982]
[-26.35021973 -338.91452026]
[-12.34465408 -333.49221802]
[0.90518862 -326.42123413]
[13.20608521 -317.80465698]
[24.37865257 -307.76815796]
[34.25996017 -296.45812988]
[42.70591354 -284.03945923]
[49.59334183 -270.69326782]
[54.82180786 -256.61419678]
[58.31506729 -242.00752258]
[60.02217484 -227.08628845]
[59.91823578 -212.06808472]
[58.00476456 -197.17192078]
[54.30966949 -182.61500549]
[48.88683319 -168.60963440]
[41.81533813 -155.36006165]
[33.19830704 -143.05949402]
[23.16140175 -131.88729858]
[11.85098839 -122.00640869]
[-0.56799257 -113.56092072]
[6.31141996 -100.23149109]
[13.19083214 -86.90206146]
[20.07024574 -73.57263184]
[26.94965744 -60.24320221]
[41.85599136 -60.75968170]
[55.56473160 -54.72810745]
[65.33525085 -43.29578781]
[69.18891144 -28.69546509]
[66.30956268 -13.80935192]
[57.21572876 -1.60019410]
[64.09513855 11.72923470]
[70.97455597 25.05866432]
[76.83563232 29.56083870]
[77.85549164 38.63815689]
[84.53569031 52.06853104]
[91.21588135 65.49890900]
[103.81158447 73.44860077]
[103.02977753 89.25048065]
[109.80977631 102.63075256]
[116.68918610 115.96018219]
[123.56859589 129.28961182]
[130.44801331 142.61903381]
[137.32742310 155.94847107]
[144.20683289 169.27789307]
[151.28393555 182.50341797]
[158.55717468 195.62211609]
[172.01550293 203.93978882]
[171.41984558 218.82247925]
[178.69308472 231.94117737]
[192.24291992 225.49536133]
[206.16728210 219.90441895]
[220.41229248 215.18995667]
[234.92285156 211.37023926]
[249.64280701 208.46002197]
[264.51519775 206.47056580]
[279.48254395 205.40957642]
[294.48687744 205.28115845]
[309.47015381 206.08580017]
[324.37445068 207.82038879]
[339.14205933 210.47824097]
[353.71588135 214.04902649]
[368.03948975 218.51896667]
[382.05752563 223.87075806]
[395.71569824 230.08370972]
[408.96118164 237.13374329]
[421.74276733 244.99362183]
[434.01098633 253.63293457]
[445.71835327 263.01824951]
[456.81961060 273.11322021]
[467.27175903 283.87884521]
[477.03442383 295.27346802]
[486.06976318 307.25299072]
[494.34289551 319.77105713]
[501.82177734 332.77923584]
[508.47744751 346.22723389]
[514.28417969 360.06298828]
[519.21954346 374.23297119]
[523.26440430 388.68240356]
[526.40313721 403.35534668]
[528.62353516 418.19500732]
[529.91711426 433.14404297]
[530.27880859 448.14456177]
[529.70721436 463.13854980]
[528.20452881 478.06799316]
[525.77661133 492.87515259]
[522.43280029 507.50271606]
[518.18609619 521.89410400]
[513.05285645 535.99365234]
[507.05300903 549.74676514]
[500.20974731 563.10028076]
[492.54953003 576.00250244]
[484.10202026 588.40350342]
[474.89984131 600.25537109]
[464.97866821 611.51226807]
[454.37683105 622.13049316]
[443.13537598 632.06915283]
[431.29779053 641.28967285]
[418.90985107 649.75640869]
[406.01950073 657.43658447]
[392.67660522 664.30053711]
[378.93280029 670.32171631]
[364.84124756 675.47674561]
[350.45645142 679.74578857]
[335.83410645 683.11224365]
[321.03073120 685.56311035]
[306.10363770 687.08886719]
[291.11053467 687.68371582]
[276.10946655 687.34527588]
[261.15847778 686.07489014]
[246.31535339 683.87750244]
[231.63757324 680.76153564]
[217.18191528 676.73907471]
[203.00428772 671.82568359]
[189.15954590 666.04034424]
[175.70126343 659.40551758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 144]
[34 143]
[36 141]
[37 140]
[40 139]
[41 138]
[42 137]
[43 136]
[44 135]
[45 134]
[47 133]
[49 131]
[50 130]
[51 129]
[52 127]
[53 126]
[54 125]
[60 119]
[61 118]
[62 117]
[63 116]
[64 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
