%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[127.34579468 618.55426025]
[139.99583435 610.38165283]
[134.74911499 596.32922363]
[129.50239563 582.27673340]
[124.25567627 568.22424316]
[122.43960571 583.11395264]
[116.37026978 596.83117676]
[106.57273102 608.18939209]
[93.89457703 616.20587158]
[79.43259430 620.18719482]
[64.43788147 619.78894043]
[50.20763779 615.04547119]
[37.97291946 606.36724854]
[28.79215240 594.50500488]
[23.45956612 580.48486328]
[22.43647957 565.51977539]
[25.81140327 550.90441895]
[33.29236984 537.90307617]
[44.23220444 527.64050293]
[57.68449783 521.00457764]
[72.48549652 518.56927490]
[87.35475922 520.54541016]
[101.00595093 526.76190186]
[112.25811005 536.68103027]
[120.13642120 549.44140625]
[119.02076721 534.48297119]
[117.90512085 519.52447510]
[116.78947449 504.56604004]
[115.67382050 489.60760498]
[114.55817413 474.64913940]
[113.44252777 459.69070435]
[99.74842834 458.20501709]
[86.52307892 454.34136963]
[74.17622375 448.21801758]
[63.09061050 440.02343750]
[53.61016464 430.01016235]
[46.02927780 418.48727417]
[40.58369827 405.81069946]
[37.44317627 392.37237549]
[36.70619583 378.58795166]
[38.39686203 364.88400269]
[42.46413422 351.68490601]
[48.78335953 339.39959717]
[57.16008759 328.40893555]
[67.33605957 319.05395508]
[78.99718475 311.62512207]
[91.78318787 306.35354614]
[105.29880524 303.40353394]
[104.85219574 288.41018677]
[104.40559387 273.41683960]
[103.95898438 258.42349243]
[103.17766571 243.44386292]
[102.06201935 228.48541260]
[100.94636536 213.52694702]
[99.83071899 198.56849670]
[98.71507263 183.61004639]
[97.59941864 168.65159607]
[88.93694305 156.53504944]
[95.62640381 142.19763184]
[94.51074982 127.23917389]
[79.30581665 118.54333496]
[72.32404327 102.47901154]
[76.33972931 85.42961884]
[89.75719452 74.16999054]
[88.19667816 59.25138855]
[79.06565857 46.33104706]
[85.43689728 32.86788940]
[83.87637329 17.94928551]
[82.31584930 3.03068089]
[80.75532532 -11.88792419]
[71.24539948 -20.60136414]
[70.25276184 -33.05923080]
[77.76586914 -42.53972626]
[76.42763519 -57.47990799]
[75.08940125 -72.42009735]
[73.75116730 -87.36028290]
[61.32939148 -90.21253204]
[50.22528458 -96.43176270]
[41.32882309 -105.50798798]
[35.34979630 -116.70269012]
[32.76118851 -129.10896301]
[33.76177216 -141.72489929]
[38.26088333 -153.53456116]
[45.88653183 -163.58979797]
[56.01615143 -171.08631897]
[67.82740021 -175.42803955]
[67.15761566 -190.41308594]
[66.48783112 -205.39811707]
[58.14203644 -218.83903503]
[65.30331421 -231.89910889]
[64.63352966 -246.88414001]
[63.96374512 -261.86917114]
[49.20124054 -264.95452881]
[35.67018509 -271.61492920]
[24.22114563 -281.43179321]
[15.57382202 -293.78793335]
[10.27179241 -307.90670776]
[8.64834785 -322.90054321]
[10.80553722 -337.82693481]
[16.60775948 -351.74758911]
[25.69028091 -363.78747559]
[37.48216629 -373.18972778]
[51.24217224 -379.36331177]
[66.10532379 -381.92016602]
[81.13732147 -380.69952393]
[95.39323425 -375.77816772]
[107.97692871 -367.46545410]
[118.09737396 -356.28387451]
[125.11840057 -342.93637085]
[128.59866333 -328.26193237]
[128.31936646 -313.18307495]
[124.29809570 -298.64758301]
[116.78762054 -285.56921387]
[106.26004791 -274.77008057]
[93.37715912 -266.92904663]
[78.94878387 -262.53897095]
[79.61856842 -247.55392456]
[80.28835297 -232.56889343]
[88.58624268 -220.19979858]
[81.47286987 -206.06790161]
[82.14265442 -191.08287048]
[82.81243896 -176.09782410]
[99.30947876 -170.67742920]
[112.48657227 -159.31419373]
[120.30515289 -143.73030090]
[121.54192352 -126.30362701]
[115.98018646 -109.70484924]
[104.44721985 -96.48822784]
[88.69135284 -88.69851685]
[90.02958679 -73.75833130]
[91.36782074 -58.81814194]
[92.70605469 -43.87796021]
[103.56027985 -30.08836937]
[95.67393494 -13.44844723]
[97.23445129 1.47015798]
[98.79497528 16.38876343]
[100.35549927 31.30736732]
[109.37489319 43.16062927]
[103.11528015 57.69086456]
[104.67580414 72.60946655]
[115.83923340 77.16969299]
[124.01950836 86.02976227]
[127.67595673 97.52098846]
[126.11993408 109.47910309]
[119.64448547 119.65193176]
[109.46920776 126.12351990]
[110.58485413 141.08197021]
[119.32713318 154.26844788]
[112.55787659 167.53594971]
[113.67352295 182.49440002]
[114.78916931 197.45285034]
[115.90482330 212.41130066]
[117.02046967 227.36976624]
[118.13611603 242.32821655]
[121.07650757 246.64112854]
[121.97833252 251.19523621]
[121.09108734 255.17366028]
[118.95233917 257.97689819]
[119.39894104 272.97024536]
[119.84555054 287.96359253]
[120.29215240 302.95693970]
[136.34286499 305.72979736]
[151.47290039 311.74841309]
[165.03373718 320.75241089]
[176.44464111 332.35357666]
[185.21743774 346.05252075]
[190.97749329 361.26019287]
[193.47966003 377.32308960]
[192.61871338 393.55160522]
[188.43377686 409.24938965]
[181.10655212 423.74328613]
[170.95347595 436.41229248]
[158.41194153 446.71408081]
[144.02159119 454.20822144]
[128.40098572 458.57504272]
[129.51663208 473.53350830]
[130.63227844 488.49194336]
[131.74792480 503.45040894]
[132.86357117 518.40887451]
[133.97921753 533.36730957]
[135.09486389 548.32574463]
[138.30815125 562.97753906]
[143.55485535 577.03002930]
[148.80157471 591.08251953]
[154.04829407 605.13494873]
[168.95901489 603.01727295]
[183.97633362 604.15490723]
[198.39787292 608.49462891]
[211.54910278 615.83349609]
[222.81492615 625.82830811]
[231.66841125 638.01147461]
[237.69546509 651.81323242]
[240.61419678 666.58801270]
[240.28810120 681.64483643]
[236.73240662 696.27941895]
[230.11343384 709.80731201]
[220.74076843 721.59576416]
[209.05278015 731.09338379]
[195.59613037 737.85595703]
[181.00022888 741.56726074]
[165.94772339 742.05358887]
[151.14268494 739.29229736]
[137.27754211 733.41253662]
[125.00081635 724.68920898]
[114.88668823 713.53045654]
[107.40822601 700.45806885]
[102.91521454 686.08355713]
[101.61779022 671.07922363]
[103.57664490 656.14678955]
[108.70015717 641.98474121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 185]
[3 184]
[4 183]
[5 182]
[25 181]
[26 180]
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
[48 161]
[49 160]
[50 159]
[51 158]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[59 147]
[60 146]
[64 140]
[65 139]
[67 137]
[68 136]
[69 135]
[70 134]
[73 132]
[74 131]
[75 130]
[76 129]
[86 122]
[87 121]
[88 120]
[90 118]
[91 117]
[92 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
