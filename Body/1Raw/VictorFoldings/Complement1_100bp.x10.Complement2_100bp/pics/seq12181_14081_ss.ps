%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[127.37226868 333.82052612]
[115.25226593 342.71746826]
[101.83310699 349.49804688]
[87.48088074 353.97726440]
[72.58712006 356.03292847]
[57.55814743 355.60900879]
[42.80395126 352.71701050]
[28.72704697 347.43585205]
[15.71145916 339.90960693]
[4.11226273 330.34359741]
[-5.75410795 318.99877930]
[-13.61849117 306.18469238]
[-19.26634026 292.25085449]
[-22.54357719 277.57742310]
[-23.36079788 262.56469727]
[-21.69570732 247.62222290]
[-17.59373093 233.15765381]
[-11.16677189 219.56559753]
[-2.59016442 207.21685791]
[7.90211630 196.44828796]
[20.02383232 187.55369568]
[33.44429779 180.77571106]
[47.79738617 176.29925537]
[62.69153976 174.24644470]
[77.72043610 174.67327881]
[80.60570526 159.95338440]
[83.49098206 145.23350525]
[86.37625122 130.51361084]
[89.26152802 115.79371643]
[81.26529694 103.71039581]
[84.05237579 89.49145508]
[96.01858521 81.32101440]
[98.90385437 66.60112000]
[101.78913116 51.88122940]
[104.67440033 37.16133881]
[107.55966949 22.44144630]
[92.96857452 18.95383072]
[78.53295898 14.87011528]
[64.27717590 10.19718838]
[50.22525787 4.94292831]
[36.40090179 -0.88380337]
[22.82741737 -7.27318239]
[9.52769279 -14.21443462]
[-3.47584438 -21.69585609]
[-16.16126823 -29.70483017]
[-28.50718689 -38.22785568]
[-40.49278259 -47.25055313]
[-52.09784698 -56.75771713]
[-63.30281067 -66.73330688]
[-74.08877563 -77.16051483]
[-84.43756104 -88.02174377]
[-94.33171082 -99.29868317]
[-103.75454712 -110.97232819]
[-112.69017029 -123.02297974]
[-121.12351990 -135.43032837]
[-129.04037476 -148.17344666]
[-136.42738342 -161.23083496]
[-143.27210999 -174.58050537]
[-149.56297302 -188.19992065]
[-155.28939819 -202.06613159]
[-160.44171143 -216.15574646]
[-165.01123047 -230.44502258]
[-168.99024963 -244.90983582]
[-172.37205505 -259.52581787]
[-175.15095520 -274.26834106]
[-177.32225037 -289.11248779]
[-178.88229370 -304.03326416]
[-179.82846069 -319.00552368]
[-180.15911865 -334.00399780]
[-179.87374878 -349.00341797]
[-178.97282410 -363.97845459]
[-177.45783997 -378.90390015]
[-175.33137512 -393.75454712]
[-172.59701538 -408.50537109]
[-169.25935364 -423.13150024]
[-165.32403564 -437.60827637]
[-160.79769897 -451.91128540]
[-155.68795776 -466.01638794]
[-150.00343323 -479.89981079]
[-143.75372314 -493.53817749]
[-136.94937134 -506.90844727]
[-129.60182190 -519.98809814]
[-121.72348022 -532.75506592]
[-113.32763672 -545.18780518]
[-104.42845154 -557.26544189]
[-95.04091644 -568.96746826]
[-85.18086243 -580.27423096]
[-74.86492920 -591.16668701]
[-64.11050415 -601.62640381]
[-52.93571472 -611.63580322]
[-41.35941696 -621.17791748]
[-29.40112305 -630.23681641]
[-17.08099937 -638.79705811]
[-4.41982031 -646.84429932]
[8.56106377 -654.36499023]
[21.83976555 -661.34637451]
[35.39389038 -667.77673340]
[49.20058823 -673.64514160]
[63.23657608 -678.94183350]
[77.47817993 -683.65777588]
[91.90139771 -687.78509521]
[106.48189545 -691.31677246]
[121.19509888 -694.24682617]
[136.01618958 -696.57037354]
[150.92018127 -698.28350830]
[165.88192749 -699.38330078]
[180.87622070 -699.86791992]
[195.87776184 -699.73651123]
[210.86126709 -698.98937988]
[225.80146790 -697.62768555]
[240.67315674 -695.65374756]
[255.45127869 -693.07098389]
[270.11090088 -689.88360596]
[284.62731934 -686.09710693]
[298.97601318 -681.71783447]
[313.13284302 -676.75317383]
[327.07391357 -671.21142578]
[340.77569580 -665.10205078]
[354.21511841 -658.43530273]
[367.36947632 -651.22241211]
[380.21664429 -643.47552490]
[392.73495483 -635.20776367]
[404.90322876 -626.43304443]
[416.70101929 -617.16607666]
[428.10842896 -607.42266846]
[439.10617065 -597.21905518]
[449.67575073 -586.57257080]
[459.79931641 -575.50109863]
[469.45980835 -564.02337646]
[478.64093018 -552.15869141]
[487.32723999 -539.92712402]
[495.50402832 -527.34918213]
[503.15753174 -514.44616699]
[510.27484131 -501.23986816]
[516.84399414 -487.75244141]
[522.85388184 -474.00671387]
[528.29431152 -460.02584839]
[533.15625000 -445.83340454]
[537.43133545 -431.45330811]
[541.11248779 -416.90982056]
[544.19348145 -402.22747803]
[546.66906738 -387.43103027]
[548.53509521 -372.54541016]
[549.78839111 -357.59573364]
[550.42687988 -342.60720825]
[550.44952393 -327.60510254]
[549.85620117 -312.61471558]
[548.64794922 -297.66131592]
[546.82678223 -282.77014160]
[544.39581299 -267.96630859]
[541.35913086 -253.27473450]
[537.72180176 -238.72023010]
[533.49005127 -224.32731628]
[528.67095947 -210.12028503]
[523.27264404 -196.12306213]
[517.30426025 -182.35928345]
[510.77578735 -168.85214233]
[503.69830322 -155.62440491]
[496.08370972 -142.69839478]
[487.94488525 -130.09590149]
[479.29550171 -117.83817291]
[470.15017700 -105.94588470]
[460.52432251 -94.43907166]
[450.43417358 -83.33715820]
[439.89672852 -72.65885925]
[428.92977905 -62.42217636]
[417.55181885 -52.64437103]
[405.78201294 -43.34193420]
[393.64022827 -34.53054810]
[381.14691162 -26.22507668]
[368.32315063 -18.43951988]
[355.19058228 -11.18700695]
[341.77130127 -4.47976780]
[328.08801270 1.67088747]
[314.16369629 7.25458765]
[300.02191162 12.26191711]
[285.68646240 16.68443298]
[271.18154907 20.51467705]
[256.53158569 23.74619102]
[241.76132202 26.37352753]
[226.89564514 28.39225197]
[211.95962524 29.79896545]
[196.97843933 30.59129143]
[181.97735596 30.76789665]
[166.98167419 30.32848358]
[152.01667786 29.27379036]
[137.10758972 27.60559845]
[122.27956390 25.32671928]
[119.39429474 40.04661179]
[116.50901794 54.76650238]
[113.62374878 69.48639679]
[110.73847198 84.20628357]
[118.73470306 96.28960419]
[115.94762421 110.50854492]
[103.98141479 118.67898560]
[101.09614563 133.39888000]
[98.21086884 148.11877441]
[95.32559967 162.83866882]
[92.44033051 177.55854797]
[106.51824951 182.83699036]
[119.53528595 190.36073303]
[131.13632202 199.92449951]
[141.00488281 211.26741028]
[148.87173462 224.08000183]
[154.52226257 238.01274109]
[157.80233765 252.68554688]
[158.62243652 267.69812012]
[156.96023560 282.64089966]
[152.86103821 297.10626221]
[146.43670654 310.69955444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
