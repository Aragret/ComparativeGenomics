%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[76.48703003 404.86965942]
[68.59262848 417.64001465]
[59.42699432 429.53100586]
[49.08727646 440.41650391]
[37.68309021 450.18115234]
[25.33531952 458.72146606]
[12.17486382 465.94686890]
[-1.65877295 471.78076172]
[-16.01894379 476.16134644]
[-30.75342560 479.04217529]
[-45.70602417 480.39266968]
[-60.71823120 480.19854736]
[-75.63090515 478.46188354]
[-90.28597260 475.20104980]
[-104.52808380 470.45062256]
[-118.20625305 464.26098633]
[-131.17549133 456.69772339]
[-143.29830933 447.84100342]
[-154.44619751 437.78475952]
[-164.50100708 426.63552856]
[-173.35612488 414.51156616]
[-180.91767883 401.54132080]
[-187.10554504 387.86236572]
[-191.85409546 373.61962891]
[-195.11299133 358.96414185]
[-196.84771729 344.05120850]
[-197.03985596 329.03900146]
[-195.68739319 314.08657837]
[-192.80464172 299.35247803]
[-188.42218018 284.99285889]
[-182.58645630 271.16000366]
[-175.35932922 258.00048828]
[-166.81741333 245.65383911]
[-157.05125427 234.25093079]
[-146.16439819 223.91264343]
[-134.27223206 214.74856567]
[-121.50081635 206.85585022]
[-107.98554993 200.31814575]
[-93.86968994 195.20477295]
[-79.30287933 191.56991577]
[-64.43953705 189.45213318]
[-49.43721390 188.87387085]
[-34.45495224 189.84123230]
[-19.65156555 192.34399414]
[-5.18397999 196.35560608]
[8.79443836 201.83354187]
[15.67385101 188.50410461]
[22.55326462 175.17468262]
[29.43267632 161.84524536]
[36.31208801 148.51582336]
[24.25120544 157.43406677]
[10.57332897 163.59164429]
[-4.09929085 166.70840454]
[-19.09914589 166.64257812]
[-33.74384308 163.39715576]
[-47.36714935 157.11976624]
[-59.34929276 148.09600830]
[-69.14516449 136.73638916]
[-76.30912018 123.55770111]
[-80.51524353 109.15948486]
[-81.57218933 94.19676971]
[-79.43186951 79.35025787]
[-74.19165802 65.29535675]
[-66.08995056 52.67147827]
[-55.49531174 42.05292511]
[-42.88973618 33.92276764]
[-28.84668922 28.65087700]
[-14.00503731 26.47708511]
[0.96002370 27.50028610]
[15.36768341 31.67393303]
[28.56249046 38.80815125]
[39.94416809 48.57838440]
[48.99492645 60.54014587]
[55.30301666 74.14926147]
[58.58145905 88.78660583]
[58.68111420 103.78627014]
[55.59744263 118.46588135]
[49.46854782 132.16134644]
[61.01485062 122.58623505]
[72.56114960 113.01111603]
[84.10745239 103.43599701]
[85.88645935 91.92615509]
[94.90649414 84.55864716]
[106.53978729 85.11341858]
[112.44268036 70.43464661]
[127.20923615 68.48575592]
[133.11212158 53.80697632]
[147.87867737 51.85808182]
[159.56625366 42.45593262]
[171.25384521 33.05377960]
[182.94142151 23.65163040]
[194.62899780 14.24947834]
[206.31658936 4.84732723]
[218.00416565 -4.55482388]
[229.69174194 -13.95697498]
[241.37933350 -23.35912514]
[253.06690979 -32.76127625]
[244.63082886 -45.17412567]
[237.22091675 -58.22555161]
[230.88525391 -71.83090973]
[225.66493225 -85.90195465]
[221.59378052 -100.34744263]
[218.69822693 -115.07367706]
[216.99702454 -129.98515320]
[216.50123596 -144.98518372]
[217.21406555 -159.97644043]
[219.13087463 -174.86174011]
[222.23925781 -189.54454041]
[226.51904297 -203.92959595]
[231.94245911 -217.92361450]
[238.47436523 -231.43585205]
[246.07237244 -244.37867737]
[254.68722534 -256.66812134]
[264.26303101 -268.22451782]
[274.73767090 -278.97290039]
[286.04327393 -288.84356689]
[298.10647583 -297.77249146]
[310.84902954 -305.70178223]
[324.18829346 -312.57998657]
[338.03781128 -318.36254883]
[352.30770874 -323.01190186]
[366.90542603 -326.49792480]
[381.73635864 -328.79800415]
[396.70425415 -329.89721680]
[411.71206665 -329.78845215]
[426.66244507 -328.47238159]
[441.45846558 -325.95758057]
[456.00415039 -322.26034546]
[470.20516968 -317.40463257]
[483.96939087 -311.42196655]
[497.20758057 -304.35113525]
[509.83386230 -296.23800659]
[521.76635742 -287.13516235]
[532.92767334 -277.10165405]
[543.24548340 -266.20257568]
[552.65277100 -254.50860596]
[561.08856201 -242.09558105]
[568.49816895 -229.04399109]
[574.83355713 -215.43849182]
[580.05358887 -201.36732483]
[584.12438965 -186.92175293]
[587.01965332 -172.19544983]
[588.72052002 -157.28393555]
[589.21594238 -142.28390503]
[588.50280762 -127.29264832]
[586.58569336 -112.40739441]
[583.47698975 -97.72467041]
[579.19683838 -83.33971405]
[573.77313232 -69.34580994]
[567.24090576 -55.83370972]
[559.64263916 -42.89105988]
[551.02752686 -30.60179138]
[541.45147705 -19.04560661]
[530.97656250 -8.29745293]
[519.67077637 1.57296193]
[507.60736084 10.50162315]
[494.86462402 18.43062592]
[481.52520752 25.30854416]
[467.67556763 31.09077454]
[453.40557861 35.73981476]
[438.80776978 39.22551346]
[423.97680664 41.52526474]
[409.00888062 42.62415314]
[394.00106812 42.51505280]
[379.05068970 41.19866943]
[364.25473022 38.68354416]
[349.70913696 34.98598480]
[335.50823975 30.12997055]
[321.74414062 24.14700127]
[308.50610352 17.07587433]
[295.88000488 8.96245003]
[283.94769287 -0.14065020]
[272.78659058 -10.17438984]
[262.46905518 -21.07369614]
[250.78147888 -11.67154503]
[239.09390259 -2.26939368]
[227.40631104 7.13275766]
[215.71873474 16.53490829]
[204.03115845 25.93705940]
[192.34356689 35.33921051]
[180.65599060 44.74136353]
[168.96841431 54.14351273]
[157.28082275 63.54566574]
[152.21391296 77.55193329]
[136.61138916 80.17333221]
[131.54446411 94.17960358]
[115.94194031 96.80100250]
[110.28579712 112.59291077]
[93.68257141 114.98229218]
[82.13627625 124.55741882]
[70.58997345 134.13253784]
[59.04367065 143.70765686]
[49.64151764 155.39523315]
[42.76210403 168.72467041]
[35.88269424 182.05409241]
[29.00328064 195.38352966]
[22.12386703 208.71295166]
[34.68693161 216.93325806]
[46.33817673 226.40176392]
[56.95409393 237.01808167]
[66.42214203 248.66969299]
[74.64196014 261.23309326]
[81.52641296 274.57504272]
[87.00252533 288.55419922]
[91.01223755 303.02230835]
[93.51305389 317.82601929]
[94.47845459 332.80841064]
[93.89821625 347.81066895]
[91.77848053 362.67370605]
[88.14173126 377.24005127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 197]
[47 196]
[48 195]
[49 194]
[50 193]
[78 192]
[79 191]
[80 190]
[81 189]
[84 187]
[86 185]
[88 183]
[89 182]
[90 181]
[91 180]
[92 179]
[93 178]
[94 177]
[95 176]
[96 175]
[97 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
