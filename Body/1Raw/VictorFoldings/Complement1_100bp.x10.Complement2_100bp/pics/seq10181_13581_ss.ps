%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[129.12860107 656.20556641]
[115.99134827 648.95642090]
[103.31575775 640.92724609]
[91.14807892 632.14739990]
[79.53271484 622.64886475]
[68.51205444 612.46636963]
[58.12630463 601.63708496]
[48.41336060 590.20043945]
[39.40866852 578.19818115]
[31.14508629 565.67413330]
[23.65276337 552.67401123]
[16.95904160 539.24523926]
[11.08834267 525.43676758]
[6.06209087 511.29907227]
[1.89862525 496.88366699]
[-1.38686144 482.24319458]
[-3.78238106 467.43106079]
[-5.27919245 452.50128174]
[-5.87183380 437.50839233]
[-5.55814266 422.50708008]
[-4.33926392 407.55206299]
[-2.21964478 392.69793701]
[0.79298007 377.99887085]
[4.68761826 363.50851440]
[9.45005798 349.27978516]
[15.06292248 335.36453247]
[21.50572968 321.81356812]
[28.75497246 308.67636108]
[36.78419495 296.00079346]
[45.56410217 283.83316040]
[55.06266022 272.21786499]
[65.24520111 261.19723511]
[76.07457733 250.81153870]
[87.51126862 241.09864807]
[99.51354980 232.09400940]
[112.03762054 223.83049011]
[125.03778076 216.33822632]
[138.46659851 209.64456177]
[132.59762573 195.84037781]
[126.72866821 182.03620911]
[120.85971069 168.23202515]
[108.75951385 159.54672241]
[110.48047638 143.81939697]
[104.61151123 130.01521301]
[98.74255371 116.21104431]
[88.22370911 111.21151733]
[83.74676514 100.45985413]
[87.60864258 89.47225952]
[81.94585419 75.58223724]
[76.28306580 61.69220734]
[70.14549255 54.92700195]
[70.64106750 47.55298233]
[65.18571472 33.58018494]
[59.73035431 19.60738564]
[54.27499771 5.63458729]
[48.81964111 -8.33821011]
[34.43094254 -4.06832552]
[19.73541260 -1.01744068]
[4.83612728 0.79304403]
[-10.16240120 1.35042918]
[-25.15496826 0.65080500]
[-40.03641129 -1.30092108]
[-54.70234299 -4.49105883]
[-69.04989624 -8.89723110]
[-82.97842407 -14.48853207]
[-96.39022827 -21.22574043]
[-109.19123840 -29.06160164]
[-121.29165649 -37.94115067]
[-132.60661316 -47.80210114]
[-143.05673218 -58.57528305]
[-152.56872559 -70.18513489]
[-161.07585144 -82.55021667]
[-168.51844788 -95.58380127]
[-174.84432983 -109.19445038]
[-180.00909424 -123.28671265]
[-183.97651672 -137.76171875]
[-186.71879578 -152.51795959]
[-188.21665955 -167.45191956]
[-188.45964050 -182.45883179]
[-187.44599915 -197.43344116]
[-185.18286133 -212.27072144]
[-181.68609619 -226.86657715]
[-176.98023987 -241.11865234]
[-171.09829712 -254.92695618]
[-164.08151245 -268.19464111]
[-155.97914124 -280.82864380]
[-146.84797668 -292.74032593]
[-136.75207520 -303.84616089]
[-125.76228333 -314.06823730]
[-113.95565796 -323.33483887]
[-101.41502380 -331.58099365]
[-88.22834015 -338.74884033]
[-74.48812103 -344.78811646]
[-60.29072952 -349.65646362]
[-45.73575592 -353.31970215]
[-30.92529488 -355.75213623]
[-15.96323395 -356.93673706]
[-0.95452255 -356.86520386]
[13.99556255 -355.53799438]
[28.78215599 -352.96441650]
[43.30154037 -349.16256714]
[57.45186615 -344.15908813]
[71.13388062 -337.98910522]
[84.25161743 -330.69583130]
[96.71305847 -322.33047485]
[108.43078613 -312.95172119]
[119.32262421 -302.62533569]
[129.31216431 -291.42373657]
[138.32933044 -279.42550659]
[146.31088257 -266.71484375]
[153.20083618 -253.38085938]
[158.95085144 -239.51708984]
[163.52061462 -225.22080994]
[166.87805176 -210.59226990]
[168.99960327 -195.73408508]
[169.87042236 -180.75048828]
[169.48437500 -165.74656677]
[167.84417725 -150.82757568]
[164.96133423 -136.09815979]
[160.85606384 -121.66162872]
[155.55717468 -107.61926270]
[149.10180664 -94.06954193]
[141.53527832 -81.10751343]
[132.91062927 -68.82411194]
[123.28837585 -57.30548096]
[112.73601532 -46.63242722]
[101.32755280 -36.87981033]
[89.14301300 -28.11604118]
[76.26787567 -20.40259171]
[62.79243851 -13.79356766]
[68.24779510 0.17923047]
[73.70315552 14.15202808]
[79.15850830 28.12482643]
[84.61386871 42.09762573]
[90.17309570 56.02942276]
[95.83587646 69.91944885]
[101.49866486 83.80947876]
[115.01042938 93.74971771]
[112.54673004 110.34207916]
[118.41568756 124.14625549]
[124.28465271 137.95043945]
[136.80462646 147.62310791]
[134.66387939 162.36306763]
[140.53285217 176.16725159]
[146.40180969 189.97142029]
[152.27076721 203.77560425]
[166.40841675 198.74914551]
[180.82374573 194.58547974]
[195.46418762 191.29978943]
[210.27630615 188.90406799]
[225.20603943 187.40705872]
[240.19892883 186.81420898]
[255.20025635 187.12768555]
[270.15527344 188.34635925]
[285.00946045 190.46577454]
[299.70855713 193.47819519]
[314.19894409 197.37261963]
[328.42776489 202.13487244]
[342.34307861 207.74754333]
[355.89413452 214.19015503]
[369.03143311 221.43920898]
[381.70712280 229.46826172]
[393.87487793 238.24800110]
[405.49032593 247.74639893]
[416.51107788 257.92877197]
[426.89694214 268.75802612]
[436.60998535 280.19458008]
[445.61477661 292.19671631]
[453.87847900 304.72067261]
[461.37091064 317.72073364]
[468.06475830 331.14944458]
[473.93560791 344.95785522]
[478.96197510 359.09552002]
[483.12557983 373.51086426]
[486.41119385 388.15133667]
[488.80685425 402.96343994]
[490.30380249 417.89318848]
[490.89657593 432.88607788]
[490.58303833 447.88742065]
[489.36428833 462.84243774]
[487.24481201 477.69659424]
[484.23233032 492.39566040]
[480.33782959 506.88604736]
[475.57553101 521.11486816]
[469.96276855 535.03015137]
[463.52011108 548.58117676]
[456.27096558 561.71844482]
[448.24188232 574.39404297]
[439.46206665 586.56176758]
[429.96362305 598.17718506]
[419.78118896 609.19787598]
[408.95190430 619.58367920]
[397.51531982 629.29669189]
[385.51312256 638.30145264]
[372.98910522 646.56506348]
[359.98904419 654.05749512]
[346.56027222 660.75128174]
[332.75186157 666.62200928]
[318.61416626 671.64831543]
[304.19879150 675.81188965]
[289.55831909 679.09741211]
[274.74618530 681.49304199]
[259.81643677 682.98986816]
[244.82354736 683.58258057]
[229.82221985 683.26898193]
[214.86720276 682.05017090]
[200.01306152 679.93060303]
[185.31398010 676.91809082]
[170.82362366 673.02349854]
[156.59484863 668.26110840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 146]
[39 145]
[40 144]
[41 143]
[43 141]
[44 140]
[45 139]
[48 137]
[49 136]
[50 135]
[52 134]
[53 133]
[54 132]
[55 131]
[56 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
