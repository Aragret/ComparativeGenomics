%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[69.04228210 184.20475769]
[72.66846466 198.77037048]
[74.97438049 213.60240173]
[75.94147491 228.58142090]
[75.56195068 243.58682251]
[73.83887482 258.49780273]
[70.78610229 273.19430542]
[66.42823029 287.55795288]
[60.80033875 301.47317505]
[53.94774246 314.82788086]
[45.92561340 327.51455688]
[36.79854202 339.43106079]
[26.64002037 350.48141479]
[15.53183746 360.57669067]
[3.56343150 369.63558960]
[-9.16883278 377.58514404]
[-22.56244087 384.36138916]
[-36.50955200 389.90975952]
[-50.89787292 394.18557739]
[-65.61154938 397.15438843]
[-80.53212738 398.79229736]
[-95.53945160 399.08615112]
[-110.51270294 398.03356934]
[-125.33132172 395.64300537]
[-139.87599182 391.93374634]
[-154.02961731 386.93560791]
[-167.67822266 380.68887329]
[-180.71191406 373.24380493]
[-193.02577209 364.66036987]
[-204.52062988 355.00769043]
[-215.10394287 344.36346436]
[-224.69050598 332.81338501]
[-233.20312500 320.45046997]
[-240.57325745 307.37423706]
[-246.74156189 293.69000244]
[-251.65837097 279.50793457]
[-255.28411865 264.94223022]
[-257.58956909 250.11012268]
[-258.55621338 235.13107300]
[-258.17623901 220.12568665]
[-256.45269775 205.21475220]
[-253.39949036 190.51835632]
[-249.04116821 176.15481567]
[-243.41285706 162.23977661]
[-236.55984497 148.88528442]
[-228.53733826 136.19885254]
[-219.40989685 124.28263855]
[-209.25103760 113.23258209]
[-198.14254761 103.13764954]
[-186.17385864 94.07912445]
[-173.44136047 86.12993622]
[-160.04754639 79.35410309]
[-146.10026550 73.80616760]
[-131.71180725 69.53080750]
[-116.99803925 66.56243896]
[-102.07742310 64.92496490]
[-87.07008362 64.63156891]
[-72.09686279 65.68461609]
[-57.27831650 68.07563019]
[-42.73375702 71.78534698]
[-28.58028984 76.78391266]
[-14.93187523 83.03107452]
[-1.89840209 90.47653198]
[10.41518879 99.06033325]
[21.90975380 108.71337891]
[32.49274445 119.35793304]
[42.07894897 130.90829468]
[54.43346024 122.40146637]
[66.78797150 113.89464569]
[79.14247894 105.38781738]
[91.49698639 96.88098907]
[92.72689056 93.22589874]
[95.56193542 90.13067627]
[99.71594238 88.30004120]
[104.59852600 88.28465271]
[117.32056427 80.33796692]
[130.04260254 72.39128876]
[142.76463318 64.44460297]
[155.48667908 56.49791718]
[168.20870972 48.55123138]
[160.93698120 35.42775345]
[154.36206055 21.94169044]
[148.50193787 8.13000107]
[143.37271118 -5.96945381]
[138.98841858 -20.31802940]
[135.36108398 -34.87639618]
[132.50065613 -49.60465622]
[130.41496277 -64.46243286]
[129.10971069 -79.40900421]
[128.58850098 -94.40339661]
[128.85276794 -109.40452576]
[129.90174866 -124.37126923]
[131.73260498 -139.26258850]
[134.34030151 -154.03768921]
[137.71769714 -168.65606689]
[141.85552979 -183.07765198]
[146.74246216 -197.26290894]
[152.36509705 -211.17295837]
[158.70802307 -224.76968384]
[165.75386047 -238.01580811]
[173.48329163 -250.87503052]
[181.87512207 -263.31210327]
[190.90637207 -275.29293823]
[200.55226135 -286.78469849]
[210.78637695 -297.75585938]
[221.58064270 -308.17639160]
[232.90548706 -318.01770020]
[244.72987366 -327.25283813]
[257.02136230 -335.85647583]
[269.74630737 -343.80502319]
[282.86981201 -351.07669067]
[296.35589600 -357.65158081]
[310.16760254 -363.51165771]
[324.26708984 -368.64083862]
[338.61566162 -373.02508545]
[353.17404175 -376.65237427]
[367.90231323 -379.51278687]
[382.76010132 -381.59841919]
[397.70666504 -382.90362549]
[412.70108032 -383.42480469]
[427.70220947 -383.16049194]
[442.66894531 -382.11145020]
[457.56024170 -380.28054810]
[472.33535767 -377.67282104]
[486.95370483 -374.29537964]
[501.37527466 -370.15750122]
[515.56048584 -365.27050781]
[529.47058105 -359.64785767]
[543.06726074 -353.30487061]
[556.31335449 -346.25900269]
[569.17254639 -338.52954102]
[581.60961914 -330.13766479]
[593.59039307 -321.10638428]
[605.08215332 -311.46044922]
[616.05328369 -301.22631836]
[626.47375488 -290.43200684]
[636.31506348 -279.10714722]
[645.55017090 -267.28271484]
[654.15374756 -254.99119568]
[662.10223389 -242.26623535]
[669.37390137 -229.14270020]
[675.94873047 -215.65660095]
[681.80877686 -201.84487915]
[686.93792725 -187.74539185]
[691.32214355 -173.39678955]
[694.94940186 -158.83839417]
[697.80975342 -144.11012268]
[699.89532471 -129.25233459]
[701.20050049 -114.30575562]
[701.72161865 -99.31135559]
[701.45727539 -84.31023407]
[700.40820312 -69.34349823]
[698.57720947 -54.45218277]
[695.96942139 -39.67710114]
[692.59197998 -25.05874825]
[688.45404053 -10.63719273]
[683.56701660 3.54803538]
[677.94427490 17.45805550]
[671.60131836 31.05474281]
[664.55535889 44.30082703]
[656.82586670 57.16000366]
[648.43395996 69.59702301]
[639.40264893 81.57779694]
[629.75671387 93.06949615]
[619.52252197 104.04060364]
[608.72821045 114.46106720]
[597.40325928 124.30231476]
[585.57885742 133.53736877]
[573.28729248 142.14093018]
[560.56231689 150.08941650]
[547.43872070 157.36102295]
[533.95263672 163.93582153]
[520.14086914 169.79580688]
[506.04138184 174.92491150]
[491.69274902 179.30906677]
[477.13436890 182.93627930]
[462.40606689 185.79658508]
[447.54827881 187.88214111]
[432.60171509 189.18725586]
[417.60729980 189.70832825]
[402.60617065 189.44392395]
[387.63943481 188.39480591]
[372.74813843 186.56381226]
[357.97305298 183.95597839]
[343.35470581 180.57846069]
[328.93316650 176.44049072]
[314.74795532 171.55343628]
[300.83795166 165.93066406]
[287.24130249 159.58761597]
[273.99523926 152.54167175]
[261.13607788 144.81211853]
[248.69908142 136.42016602]
[236.71832275 127.38882446]
[225.22666931 117.74282837]
[214.25558472 107.50862122]
[203.83515930 96.71425629]
[193.99394226 85.38932037]
[184.75891113 73.56484985]
[176.15539551 61.27326965]
[163.43336487 69.21995544]
[150.71131897 77.16663361]
[137.98928833 85.11331940]
[125.26725006 93.06000519]
[112.54521179 101.00669098]
[100.00381470 109.23549652]
[87.64930725 117.74232483]
[75.29479218 126.24915314]
[62.94028473 134.75598145]
[50.58577728 143.26280212]
[57.95630646 156.33879089]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 209]
[68 208]
[69 207]
[70 206]
[71 205]
[75 204]
[76 203]
[77 202]
[78 201]
[79 200]
[80 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
