%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[108.55011749 813.10418701]
[93.94001770 809.68408203]
[79.57625580 805.34417725]
[65.51666260 800.10198975]
[51.81785583 793.97863770]
[38.53499985 786.99877930]
[25.72157669 779.19055176]
[13.42918301 770.58532715]
[1.70731592 761.21783447]
[-9.39682484 751.12573242]
[-19.83852577 740.34967041]
[-29.57574272 728.93304443]
[-38.56926727 716.92181396]
[-46.78288269 704.36437988]
[-54.18351746 691.31134033]
[-60.74137115 677.81512451]
[-66.43003845 663.93017578]
[-71.22660828 649.71240234]
[-75.11177826 635.21899414]
[-78.06988525 620.50842285]
[-80.08903503 605.63983154]
[-81.16109467 590.67303467]
[-81.28173828 575.66845703]
[-80.45048523 560.68640137]
[-78.67068481 545.78729248]
[-75.94950104 531.03100586]
[-72.29788971 516.47698975]
[-67.73056030 502.18392944]
[-62.26589966 488.20932007]
[-55.92591476 474.60943604]
[-48.73612976 461.43902588]
[-40.72549820 448.75112915]
[-31.92627907 436.59686279]
[-22.37390137 425.02514648]
[-12.10682869 414.08258057]
[-1.16640520 403.81323242]
[10.40331650 394.25845337]
[22.55574989 385.45669556]
[35.24195862 377.44342041]
[48.41086197 370.25088501]
[62.00943375 363.90805054]
[75.98291016 358.44049072]
[90.27503204 353.87017822]
[104.82824707 350.21551514]
[119.58395386 347.49127197]
[117.80149078 332.59753418]
[116.01902771 317.70382690]
[114.23655701 302.81011963]
[112.45409393 287.91638184]
[110.67163086 273.02267456]
[106.75556183 266.75479126]
[108.97519684 257.89416504]
[107.41468048 242.97555542]
[105.85415649 228.05694580]
[104.29363251 213.13833618]
[95.27423859 201.28507996]
[101.53385162 186.75483704]
[92.51445770 174.90158081]
[98.77407074 160.37135315]
[97.21354675 145.45274353]
[95.65303040 130.53413391]
[80.88383484 124.20333862]
[71.30365753 111.30263519]
[69.51300812 95.33386230]
[75.99794769 80.63169861]
[88.99816895 71.18699646]
[87.21569824 56.29327774]
[85.43323517 41.39955902]
[78.50733185 54.70489502]
[66.24437714 63.34317398]
[51.38393784 65.38458252]
[37.24587631 60.37306976]
[26.98867607 49.42821884]
[22.90381622 34.99513245]
[25.90386772 20.29820442]
[35.31861115 8.62076473]
[49.04476929 2.57158208]
[64.01587677 3.50205994]
[76.88736725 11.20432758]
[84.78369904 23.95769882]
[85.45348358 8.97266006]
[86.12327576 -6.01237869]
[86.79306030 -20.99741745]
[87.46284485 -35.98245621]
[84.71974182 -44.69527817]
[88.25579834 -51.18512344]
[89.14861298 -66.15853119]
[89.14861298 -81.15853119]
[88.25579834 -96.13193512]
[87.36298370 -111.10533905]
[86.47016907 -126.07875061]
[71.64265442 -128.80058289]
[57.89767075 -134.99241638]
[46.03432846 -144.29426575]
[36.74234390 -156.16534424]
[30.56194496 -169.91548157]
[27.85244942 -184.74525452]
[28.77138710 -199.79246521]
[33.26532745 -214.18232727]
[41.07300186 -227.07820129]
[51.74048233 -237.73036194]
[64.64757538 -245.51947021]
[79.04387665 -249.99272156]
[94.09240723 -250.89001465]
[108.91826630 -248.15919495]
[122.65950012 -241.95903015]
[134.51719666 -232.64997864]
[143.80198669 -220.77326965]
[149.97404480 -207.01939392]
[152.67454529 -192.18798828]
[151.74649048 -177.14132690]
[147.24382019 -162.75419617]
[139.42832947 -149.86305237]
[128.75439453 -139.21737671]
[115.84258270 -131.43608093]
[101.44357300 -126.97156525]
[102.33638763 -111.99816132]
[103.22920227 -97.02474976]
[104.12201691 -82.05134583]
[113.30751038 -93.90996552]
[127.67636871 -98.21530151]
[141.86936951 -93.36156464]
[150.59286499 -81.15908813]
[150.59323120 -66.15908813]
[141.87030029 -53.95619202]
[127.67753601 -49.10178375]
[113.30847168 -53.40643692]
[104.12201691 -65.26571655]
[103.22920227 -50.29230881]
[102.44788361 -35.31267166]
[101.77809906 -20.32763290]
[101.10831451 -5.34259367]
[100.43852234 9.64244556]
[99.76873779 24.62748337]
[100.32695007 39.61709213]
[102.10942078 54.51081085]
[103.89188385 69.40452576]
[116.66218567 74.04617310]
[126.19850159 83.72523499]
[130.64991760 96.56308746]
[129.15243530 110.06801605]
[121.99671936 121.61882782]
[110.57163239 128.97361755]
[112.13215637 143.89221191]
[113.69268036 158.81082153]
[122.82369232 171.73115540]
[116.45245361 185.19432068]
[125.58347321 198.11465454]
[119.21223450 211.57781982]
[120.77275848 226.49641418]
[122.33328247 241.41502380]
[123.89380646 256.33361816]
[125.56534576 271.24020386]
[127.34780884 286.13391113]
[129.13027954 301.02764893]
[130.91275024 315.92135620]
[132.69520569 330.81506348]
[134.47767639 345.70880127]
[149.45951843 344.87408447]
[164.46415710 344.99127197]
[179.43113708 346.05990601]
[194.30020142 348.07562256]
[209.01150513 351.03033447]
[223.50576782 354.91217041]
[237.72465515 359.70547485]
[251.61091614 365.39096069]
[265.10861206 371.94570923]
[278.16339111 379.34332275]
[290.72271729 387.55404663]
[302.73599243 396.54479980]
[314.15484619 406.27938843]
[324.93331909 416.71862793]
[335.02798462 427.82043457]
[344.39819336 439.54016113]
[353.00622559 451.83056641]
[360.81741333 464.64218140]
[367.80032349 477.92343140]
[373.92681885 491.62081909]
[379.17221069 505.67922974]
[383.51544189 520.04199219]
[386.93896484 534.65130615]
[389.42898560 549.44830322]
[390.97552490 564.37347412]
[391.57235718 579.36669922]
[391.21704102 594.36761475]
[389.91101074 609.31573486]
[387.65954590 624.15093994]
[384.47171021 638.81347656]
[380.36032104 653.24432373]
[375.34194946 667.38531494]
[369.43679810 681.17962646]
[362.66864014 694.57153320]
[355.06475830 707.50732422]
[346.65573120 719.93469238]
[337.47543335 731.80377197]
[327.56082153 743.06671143]
[316.95184326 753.67810059]
[305.69122314 763.59533691]
[293.82427979 772.77832031]
[281.39877319 781.19024658]
[268.46478271 788.79711914]
[255.07438660 795.56829834]
[241.28147888 801.47662354]
[227.14161682 806.49829102]
[212.71173096 810.61297607]
[198.04992676 813.80419922]
[183.21522522 816.05908203]
[168.26739502 817.36853027]
[153.26660156 817.72729492]
[138.27325439 817.13397217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[50 153]
[52 152]
[53 151]
[54 150]
[55 149]
[57 147]
[59 145]
[60 144]
[61 143]
[66 137]
[67 136]
[68 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
[86 129]
[87 128]
[88 119]
[89 118]
[90 117]
[91 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
