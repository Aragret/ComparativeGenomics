%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[113.36083221 543.55621338]
[116.78437805 528.71710205]
[125.95273590 516.55725098]
[139.27743530 509.18350220]
[137.93919373 494.24331665]
[129.09727478 482.25708008]
[135.57254028 467.82165527]
[134.23429871 452.88146973]
[132.89607239 437.94128418]
[118.21534729 435.06835938]
[104.92559052 428.16809082]
[94.10777283 417.79211426]
[86.64450073 404.77520752]
[83.14804840 390.16796875]
[83.91007996 375.15228271]
[88.87738037 360.94543457]
[97.65544891 348.70162964]
[109.53984070 339.41812134]
[123.57267761 333.85400391]
[122.23444366 318.91381836]
[120.89620972 303.97363281]
[119.55797577 289.03344727]
[116.78236389 274.29251099]
[112.59535217 259.88870239]
[108.40834045 245.48493958]
[104.22132874 231.08114624]
[93.23896027 221.01950073]
[96.81661987 205.60810852]
[92.62960815 191.20433044]
[88.44259644 176.80055237]
[85.83286285 191.57177734]
[80.04395294 205.40971375]
[71.35830688 217.63917542]
[60.19972610 227.66345215]
[47.11265945 234.99343872]
[32.73565674 239.27148438]
[17.77019691 240.28886414]
[2.94648361 237.99594116]
[-11.01220226 232.50456238]
[-23.42478561 224.08270264]
[-33.68563080 213.14126587]
[-41.29408646 200.21411133]
[-45.87891769 185.93197632]
[-47.21642303 170.99172974]
[-45.24134445 156.12232971]
[-40.05004501 142.04928589]
[-31.89582634 129.45927429]
[-21.17654419 118.96655273]
[-8.41521931 111.08311462]
[5.76549482 106.19360352]
[20.67369080 104.53658295]
[35.58196259 106.19290924]
[49.76290512 111.08175659]
[62.52459717 118.96459961]
[73.24436951 129.45681763]
[81.39917755 142.04646301]
[86.58953857 156.11283875]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[98.49185944 42.32664490]
[100.05237579 27.40804100]
[101.61289978 12.48943615]
[103.17342377 -2.42916894]
[104.73394775 -17.34777451]
[106.29447174 -32.26638031]
[96.23311615 -21.14122009]
[81.98779297 -16.44326019]
[67.28220367 -19.40053368]
[55.96033859 -29.24001694]
[50.98171616 -43.38969421]
[53.64773560 -58.15087128]
[63.26150513 -69.66500854]
[77.31000519 -74.92234802]
[92.12099457 -72.54862976]
[103.82292175 -63.16432953]
[109.35681152 -49.22337341]
[105.32188416 -64.52140808]
[115.99981689 -74.90557861]
[119.75611877 -89.42764282]
[121.64940643 -104.30767822]
[121.64940643 -119.30767822]
[121.64940643 -134.30767822]
[121.64940643 -149.30767822]
[113.91210938 -163.10784912]
[121.64940643 -175.83511353]
[121.64940643 -190.83511353]
[118.67984772 -196.74217224]
[119.07926941 -202.41116333]
[121.87938690 -206.28005981]
[122.32598877 -221.27340698]
[122.77259827 -236.26676941]
[108.40782166 -240.93901062]
[95.94201660 -249.47015381]
[86.38574219 -261.16860962]
[80.51367188 -275.08609009]
[78.80182648 -290.09426880]
[81.38899231 -304.97659302]
[88.06542206 -318.52658081]
[98.28990173 -329.64578247]
[111.23356628 -337.43283081]
[125.84713745 -341.25646973]
[140.94595337 -340.80673218]
[155.30603027 -336.12005615]
[167.76325989 -327.57638550]
[177.30778503 -315.86831665]
[183.16586304 -301.94497681]
[184.86262512 -286.93505859]
[182.26051331 -272.05535889]
[175.57048035 -258.51208496]
[165.33483887 -247.40315247]
[152.38336182 -239.62910461]
[137.76594543 -235.82015991]
[137.31933594 -220.82681274]
[136.87274170 -205.83345032]
[136.64941406 -190.83511353]
[136.64941406 -175.83511353]
[144.38670349 -163.10784912]
[136.64941406 -149.30767822]
[136.64941406 -134.30767822]
[136.64941406 -119.30767822]
[136.64941406 -104.30767822]
[143.76921082 -117.51026154]
[154.74534607 -127.73399353]
[168.41944885 -133.89993286]
[183.34848022 -135.35737610]
[197.95692444 -131.95249939]
[210.70314026 -124.04465485]
[220.24197388 -112.46836090]
[225.56677246 -98.44528961]
[226.11560059 -83.45532990]
[221.83053589 -69.08041382]
[213.16378784 -56.83755875]
[201.02999878 -48.01877975]
[186.70964050 -43.55474472]
[171.71400452 -43.91655350]
[157.62561035 -49.06602478]
[145.93122864 -58.45972061]
[137.86500549 -71.10630035]
[134.27818298 -85.67134094]
[130.52188110 -71.14928436]
[134.82548523 -56.88995743]
[123.87886810 -45.46707153]
[121.21307373 -30.70585632]
[119.65254974 -15.78725052]
[118.09203339 -0.86864597]
[116.53150940 14.04995918]
[114.97098541 28.96856308]
[113.41046143 43.88716888]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[101.50814056 157.67335510]
[102.84637451 172.61354065]
[107.03338623 187.01731873]
[111.22039795 201.42109680]
[122.50225830 212.51300049]
[118.62511444 226.89413452]
[122.81212616 241.29792786]
[126.99913788 255.70170593]
[131.18614197 270.10549927]
[135.15890503 255.64114380]
[144.60823059 243.99166870]
[157.94177246 237.12022400]
[172.91256714 236.18475342]
[186.99780273 241.34289551]
[197.82383728 251.72541809]
[203.56631470 265.58270264]
[203.25752258 280.57949829]
[196.94949341 294.18865967]
[185.70524597 304.11672974]
[171.41963196 308.69070435]
[156.50003052 307.13977051]
[143.46064758 299.72528076]
[134.49816895 287.69522095]
[135.83639526 302.63540649]
[137.17463684 317.57559204]
[138.51286316 332.51577759]
[153.31117249 335.49740601]
[166.65623474 342.52105713]
[177.47053528 353.00988770]
[184.88359070 366.10778809]
[188.30207825 380.74902344]
[187.45727539 395.74511719]
[182.42617798 409.88119507]
[173.62457275 422.01452637]
[161.77268982 431.16680908]
[147.83625793 436.60305786]
[149.17448425 451.54324341]
[150.51272583 466.48342896]
[159.45036316 479.53826904]
[152.87937927 492.90509033]
[154.21762085 507.84527588]
[168.64067078 512.73358154]
[179.82411194 523.07043457]
[185.83035278 537.06488037]
[185.61878967 552.29235840]
[179.22604370 566.11450195]
[167.75973511 576.13665771]
[153.20643616 580.62237549]
[138.08761597 578.79449463]
[125.02270508 570.96966553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 201]
[5 200]
[7 198]
[8 197]
[9 196]
[19 186]
[20 185]
[21 184]
[22 183]
[23 169]
[24 168]
[25 167]
[26 166]
[28 164]
[29 163]
[30 162]
[57 161]
[58 160]
[59 159]
[60 158]
[62 156]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 148]
[81 147]
[83 145]
[84 144]
[85 126]
[86 125]
[87 124]
[88 123]
[90 121]
[91 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
