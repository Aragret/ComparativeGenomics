%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[127.43025970 356.66616821]
[115.69081116 366.04928589]
[102.68395233 373.57785034]
[88.70025635 379.08364868]
[74.05212402 382.44369507]
[59.06680298 383.58291626]
[44.07907104 382.47586060]
[29.42375946 379.14727783]
[15.42827129 373.67150879]
[2.40527272 366.17089844]
[-9.35429764 356.81301880]
[-19.58772850 345.80691528]
[-28.06639862 333.39843750]
[-34.60089111 319.86486816]
[-39.04522705 305.50848389]
[-41.30011368 290.65005493]
[-41.31518173 275.62149048]
[-39.09008789 260.75854492]
[-34.67454529 246.39329529]
[-28.16719818 232.84663391]
[-19.71342278 220.42120361]
[-9.50207996 209.39459229]
[2.23870540 200.01313782]
[15.24663925 192.48643494]
[29.23112106 186.98262024]
[43.87973022 183.62466431]
[58.86521149 182.48756409]
[73.85278320 183.59675598]
[77.17504883 168.96928406]
[80.49730682 154.34182739]
[83.81956482 139.71437073]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[104.50007629 42.48270035]
[107.60418701 27.80739975]
[110.48946381 13.08750820]
[113.15525818 -1.67370951]
[115.82105255 -16.43492699]
[118.48684692 -31.19614410]
[103.85970306 -34.53155136]
[89.39952850 -38.52925110]
[75.13629150 -43.18095779]
[61.09955978 -48.47702789]
[47.31842041 -54.40649033]
[33.82144165 -60.95705032]
[20.63659477 -68.11513519]
[7.79121017 -75.86589813]
[-4.68808842 -84.19329071]
[-16.77543640 -93.08003998]
[-28.44577980 -102.50772858]
[-39.67493057 -112.45681763]
[-50.43961716 -122.90669250]
[-60.71752167 -133.83569336]
[-70.48735046 -145.22114563]
[-79.72884369 -157.03948975]
[-88.42285919 -169.26620483]
[-96.55136108 -181.87594604]
[-104.09751892 -194.84259033]
[-111.04567719 -208.13925171]
[-117.38144684 -221.73838806]
[-123.09169006 -235.61178589]
[-128.16456604 -249.73071289]
[-132.58958435 -264.06591797]
[-136.35754395 -278.58764648]
[-139.46064758 -293.26580811]
[-141.89245605 -308.07003784]
[-143.64793396 -322.96957397]
[-144.72346497 -337.93359375]
[-145.11677551 -352.93103027]
[-144.82708740 -367.93084717]
[-143.85499573 -382.90194702]
[-142.20249939 -397.81326294]
[-139.87303162 -412.63391113]
[-136.87141418 -427.33319092]
[-133.20388794 -441.88061523]
[-128.87803650 -456.24603271]
[-123.90282440 -470.39965820]
[-118.28857422 -484.31219482]
[-112.04692078 -497.95477295]
[-105.19079590 -511.29913330]
[-97.73441315 -524.31762695]
[-89.69322968 -536.98321533]
[-81.08390808 -549.26971436]
[-71.92428589 -561.15161133]
[-62.23336411 -572.60430908]
[-52.03121567 -583.60406494]
[-41.33898926 -594.12805176]
[-30.17885017 -604.15447998]
[-18.57392311 -613.66259766]
[-6.54826736 -622.63269043]
[5.87319613 -631.04608154]
[18.66472054 -638.88543701]
[31.79979324 -646.13439941]
[45.25119019 -652.77807617]
[58.99102783 -658.80261230]
[72.99083710 -664.19555664]
[87.22158813 -668.94567871]
[101.65380096 -673.04321289]
[116.25754547 -676.47961426]
[131.00256348 -679.24774170]
[145.85830688 -681.34191895]
[160.79396057 -682.75775146]
[175.77856445 -683.49230957]
[190.78108215 -683.54412842]
[205.77041626 -682.91302490]
[220.71548462 -681.60040283]
[235.58532715 -679.60888672]
[250.34912109 -676.94262695]
[264.97625732 -673.60711670]
[279.43640137 -669.60937500]
[293.69961548 -664.95764160]
[307.73632812 -659.66149902]
[321.51745605 -653.73199463]
[335.01440430 -647.18133545]
[348.19921875 -640.02319336]
[361.04458618 -632.27239990]
[373.52383423 -623.94494629]
[385.61114502 -615.05816650]
[397.28146362 -605.63043213]
[408.51055908 -595.68127441]
[419.27520752 -585.23138428]
[429.55307007 -574.30236816]
[439.32287598 -562.91687012]
[448.56430054 -551.09844971]
[457.25827026 -538.87170410]
[465.38671875 -526.26196289]
[472.93283081 -513.29528809]
[479.88095093 -499.99856567]
[486.21664429 -486.39941406]
[491.92684937 -472.52600098]
[496.99966431 -458.40704346]
[501.42462158 -444.07183838]
[505.19253540 -429.55007935]
[508.29556274 -414.87188721]
[510.72732544 -400.06768799]
[512.48272705 -385.16812134]
[513.55822754 -370.20410156]
[513.95147705 -355.20666504]
[513.66174316 -340.20684814]
[512.68957520 -325.23577881]
[511.03701782 -310.32446289]
[508.70748901 -295.50381470]
[505.70581055 -280.80453491]
[502.03820801 -266.25714111]
[497.71231079 -251.89173889]
[492.73706055 -237.73811340]
[487.12274170 -223.82560730]
[480.88104248 -210.18304443]
[474.02487183 -196.83871460]
[466.56842041 -183.82026672]
[458.52719116 -171.15469360]
[449.91781616 -158.86824036]
[440.75814819 -146.98637390]
[431.06716919 -135.53370667]
[420.86499023 -124.53400421]
[410.17272949 -114.01004791]
[399.01254272 -103.98365021]
[387.40759277 -94.47559357]
[375.38189697 -85.50558472]
[362.96038818 -77.09221649]
[350.16882324 -69.25293732]
[337.03372192 -62.00397491]
[323.58230591 -55.36036682]
[309.84243774 -49.33588409]
[295.84262085 -43.94300842]
[281.61184692 -39.19291687]
[267.17962646 -35.09545898]
[252.57585144 -31.65912437]
[237.83082581 -28.89103508]
[222.97508240 -26.79693031]
[208.03942871 -25.38115120]
[193.05480957 -24.64662933]
[178.05229187 -24.59488678]
[163.06295776 -25.22603416]
[148.11788940 -26.53876114]
[133.24806213 -28.53034782]
[130.58227539 -13.76913166]
[127.91647339 0.99208599]
[125.25067902 15.75330353]
[127.18955231 20.11791420]
[126.40718079 25.74685097]
[122.27949524 30.91150856]
[119.17538452 45.58681107]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[102.99391937 137.21017456]
[98.44702148 143.03663635]
[95.12476349 157.66409302]
[91.80250549 172.29154968]
[88.48024750 186.91900635]
[102.47651672 192.39277649]
[115.50057983 199.89154053]
[127.26148224 209.24775696]
[137.49647522 220.25241089]
[145.97691345 232.65966797]
[152.51333618 246.19232178]
[156.95971680 260.54806519]
[159.21672058 275.40618896]
[159.23393250 290.43472290]
[157.01095581 305.29797363]
[152.59745789 319.66384888]
[146.09204102 333.21145630]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 198]
[29 197]
[30 196]
[31 195]
[32 193]
[33 192]
[35 190]
[36 189]
[37 188]
[38 187]
[39 186]
[40 183]
[41 182]
[42 181]
[43 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
