%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[84.81685638 471.08874512]
[76.59153748 483.64962769]
[67.07765198 495.26507568]
[56.38299942 505.80340576]
[44.62876511 515.14526367]
[31.94813156 523.18475342]
[18.48477554 529.83081055]
[4.39125109 535.00811768]
[-10.17275333 538.65808105]
[-25.04221535 540.73919678]
[-40.04865265 541.22802734]
[-55.02202988 540.11895752]
[-69.79268646 537.42456055]
[-84.19326782 533.17541504]
[-98.06059265 527.41955566]
[-111.23754120 520.22235107]
[-123.57480621 511.66522217]
[-134.93258667 501.84521484]
[-145.18222046 490.87356567]
[-154.20753479 478.87457275]
[-161.90628052 465.98422241]
[-168.19123840 452.34854126]
[-172.99118042 438.12207031]
[-176.25172424 423.46597290]
[-177.93591309 408.54632568]
[-178.02467346 393.53219604]
[-176.51701355 378.59368896]
[-173.42999268 363.90008545]
[-168.79861450 349.61782837]
[-162.67532349 335.90881348]
[-155.12953186 322.92831421]
[-146.24671936 310.82345581]
[-136.12754822 299.73138428]
[-124.88666534 289.77774048]
[-112.65144348 281.07534790]
[-99.56051636 273.72283936]
[-85.76221466 267.80343628]
[-71.41288757 263.38430786]
[-56.67512131 260.51544189]
[-41.71590424 259.22940063]
[-26.70473671 259.54074097]
[-11.81170559 261.44592285]
[2.79443717 264.92340088]
[16.94819450 269.93371582]
[23.42769051 256.40536499]
[29.90718651 242.87701416]
[36.38668060 229.34866333]
[42.46051407 215.63340759]
[48.12330246 201.74337769]
[53.78608704 187.85334778]
[59.44887543 173.96331787]
[65.11166382 160.07328796]
[70.77445221 146.18327332]
[69.75131226 142.80902100]
[70.31169128 138.77156067]
[72.74949646 134.82057190]
[77.01272583 131.80859375]
[83.29008484 118.18527222]
[89.56744385 104.56195831]
[76.18631744 111.34026337]
[61.25426865 109.91410065]
[49.39815903 100.72537231]
[44.29172897 86.62132263]
[47.51726151 71.97222900]
[58.07529449 61.31727982]
[72.69430542 57.95802307]
[86.84442902 62.93536758]
[96.14110565 74.70702362]
[97.70359802 89.62567139]
[98.56999207 73.82820129]
[111.92438507 67.23204041]
[119.96556091 54.56951523]
[128.00672913 41.90699005]
[136.04789734 29.24446487]
[134.00483704 16.50913239]
[140.96304321 6.12803078]
[152.73924255 3.36264277]
[160.96806335 -9.17875767]
[169.19686890 -21.72015762]
[177.42567444 -34.26155853]
[178.52716064 -50.04437256]
[191.97828674 -56.44097900]
[200.20709229 -68.98237610]
[188.30203247 -78.11893463]
[177.10424805 -88.10976410]
[166.67488098 -98.90029907]
[157.07092285 -110.43161011]
[148.34480286 -122.64070892]
[140.54418945 -135.46092224]
[133.71168518 -148.82220459]
[127.88462067 -162.65161133]
[123.09480286 -176.87359619]
[119.36840820 -191.41049194]
[116.72577667 -206.18289185]
[115.18135071 -221.11010742]
[114.74355316 -236.11062622]
[115.41478729 -251.10252380]
[117.19139099 -266.00390625]
[120.06364441 -280.73336792]
[124.01586914 -295.21047974]
[129.02647400 -309.35620117]
[135.06811523 -323.09323120]
[142.10775757 -336.34655762]
[150.10697937 -349.04376221]
[159.02209473 -361.11557007]
[168.80438232 -372.49597168]
[179.40045166 -383.12286377]
[190.75239563 -392.93817139]
[202.79823303 -401.88833618]
[215.47218323 -409.92440796]
[228.70498657 -417.00253296]
[242.42440796 -423.08404541]
[256.55551147 -428.13571167]
[271.02108765 -432.12997437]
[285.74215698 -435.04501343]
[300.63830566 -436.86489868]
[315.62817383 -437.57968140]
[330.62991333 -437.18545532]
[345.56155396 -435.68441772]
[360.34155273 -433.08468628]
[374.88922119 -429.40054321]
[389.12506104 -424.65206909]
[402.97134399 -418.86520386]
[416.35241699 -412.07153320]
[429.19522095 -404.30819702]
[441.42962646 -395.61758423]
[452.98880005 -386.04718018]
[463.80957031 -375.64920044]
[473.83288574 -364.48046875]
[483.00399780 -352.60202026]
[491.27279663 -340.07867432]
[498.59411621 -326.97885132]
[504.92800903 -313.37408447]
[510.23983765 -299.33871460]
[514.50061035 -284.94937134]
[517.68707275 -270.28466797]
[519.78173828 -255.42468262]
[520.77331543 -240.45056152]
[520.65625000 -225.44410706]
[519.43121338 -210.48728943]
[517.10498047 -195.66177368]
[513.69012451 -181.04855347]
[509.20541382 -166.72744751]
[503.67526245 -152.77664185]
[497.12994385 -139.27235413]
[489.60513306 -126.28833771]
[481.14199829 -113.89550781]
[471.78668213 -102.16155243]
[461.59036255 -91.15055084]
[450.60867310 -80.92265320]
[438.90164185 -71.53371429]
[426.53314209 -63.03501129]
[413.57080078 -55.47296906]
[400.08535767 -48.88888550]
[386.15048218 -43.31872177]
[371.84231567 -38.79289627]
[357.23895264 -35.33613586]
[342.42016602 -32.96731567]
[327.46694946 -31.69937134]
[312.46087646 -31.53923035]
[297.48397827 -32.48777008]
[282.61804199 -34.53980637]
[267.94424438 -37.68413162]
[253.54272461 -41.90357208]
[239.49215698 -47.17508698]
[225.86927795 -53.46987915]
[212.74848938 -60.75357056]
[204.51968384 -48.21216965]
[204.00677490 -33.32639694]
[189.96707153 -26.03275108]
[181.73826599 -13.49135017]
[173.50946045 -0.94994974]
[165.28065491 11.59145069]
[165.22514343 29.14034843]
[148.71043396 37.28563690]
[140.66925049 49.94816208]
[132.62808228 62.61068726]
[124.58691406 75.27321625]
[124.29568481 90.16497040]
[110.36612701 97.66683960]
[103.19075775 110.83931732]
[96.91339874 124.46263123]
[90.63603973 138.08595276]
[84.66447449 151.84605408]
[79.00168610 165.73608398]
[73.33890533 179.62611389]
[67.67611694 193.51612854]
[62.01332855 207.40615845]
[56.35054398 221.29618835]
[57.09412003 225.57415771]
[56.49769211 229.47401428]
[54.84467697 232.62089539]
[52.51110458 234.77056885]
[49.91502762 235.82817078]
[43.43553162 249.35650635]
[36.95603561 262.88485718]
[30.47653961 276.41320801]
[43.25215530 284.30090332]
[55.11696625 293.50189209]
[65.93653870 303.91192627]
[75.58827972 315.41305542]
[83.96281433 327.87496948]
[90.96527100 341.15646362]
[96.51629639 355.10702515]
[100.55299377 369.56860352]
[103.02963257 384.37731934]
[103.91813660 399.36541748]
[103.20844269 414.36300659]
[100.90859985 429.20022583]
[97.04466248 443.70892334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 197]
[45 196]
[46 195]
[47 194]
[48 189]
[49 188]
[50 187]
[51 186]
[52 185]
[53 184]
[57 183]
[58 182]
[59 181]
[69 180]
[71 178]
[72 177]
[73 176]
[74 175]
[77 173]
[78 172]
[79 171]
[80 170]
[82 168]
[83 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
