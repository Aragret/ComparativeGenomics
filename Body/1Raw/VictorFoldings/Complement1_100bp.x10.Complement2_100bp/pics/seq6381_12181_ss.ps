%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[106.69667816 966.97473145]
[91.72924042 965.96197510]
[76.80845642 964.40643311]
[61.95398712 962.31011963]
[47.18543625 959.67578125]
[32.52228165 956.50695801]
[17.98385811 952.80773926]
[3.58934379 948.58306885]
[-10.64227581 943.83856201]
[-24.69223022 938.58038330]
[-38.54198837 932.81549072]
[-52.17328644 926.55151367]
[-65.56813812 919.79669189]
[-78.70888519 912.55993652]
[-91.57819366 904.85076904]
[-104.15909576 896.67944336]
[-116.43498230 888.05670166]
[-128.38967896 878.99383545]
[-140.00740051 869.50286865]
[-151.27284241 859.59631348]
[-162.17112732 849.28723145]
[-172.68789673 838.58923340]
[-182.80928040 827.51641846]
[-192.52192688 816.08337402]
[-201.81301880 804.30523682]
[-210.67030334 792.19744873]
[-219.08210754 779.77606201]
[-227.03732300 767.05737305]
[-234.52546692 754.05822754]
[-241.53665161 740.79577637]
[-248.06166077 727.28747559]
[-254.09184265 713.55114746]
[-259.61929321 699.60491943]
[-264.63668823 685.46722412]
[-269.13739014 671.15661621]
[-273.11553955 656.69201660]
[-276.56579590 642.09252930]
[-279.48367310 627.37738037]
[-281.86532593 612.56597900]
[-283.70755005 597.67785645]
[-285.00799561 582.73266602]
[-285.76489258 567.75012207]
[-285.97723389 552.74993896]
[-285.64480591 537.75201416]
[-284.76797485 522.77600098]
[-283.34793091 507.84167480]
[-281.38656616 492.96881104]
[-278.88641357 478.17694092]
[-275.85083008 463.48562622]
[-272.28378296 448.91421509]
[-268.18997192 434.48193359]
[-263.57482910 420.20782471]
[-258.44442749 406.11071777]
[-252.80549622 392.20919800]
[-246.66552734 378.52157593]
[-240.03259277 365.06594849]
[-232.91545105 351.86004639]
[-225.32347107 338.92129517]
[-217.26667786 326.26672363]
[-208.75570679 313.91305542]
[-199.80177307 301.87658691]
[-190.41668701 290.17318726]
[-180.61282349 278.81826782]
[-170.40312195 267.82681274]
[-159.80104065 257.21337891]
[-148.82055664 246.99188232]
[-137.47616577 237.17584229]
[-125.78282928 227.77819824]
[-113.75596619 218.81135559]
[-101.41143799 210.28713989]
[-88.76552582 202.21678162]
[-75.83490753 194.61093140]
[-62.63664627 187.47961426]
[-49.18814087 180.83224487]
[-35.50713348 174.67759705]
[-21.61166382 169.02377319]
[-7.52006340 163.87825012]
[6.74908447 159.24778748]
[21.17695808 155.13850403]
[35.74452972 151.55583191]
[50.43258667 148.50447083]
[65.22175598 145.98846436]
[80.09252930 144.01113892]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[79.13704681 82.60625458]
[64.49008179 79.37106323]
[57.75041962 65.97043610]
[63.88628769 52.28280640]
[78.37454987 48.39819336]
[90.53421021 57.17873764]
[90.75753784 42.18039703]
[90.98086548 27.18206215]
[76.72696686 22.07275009]
[64.90592957 12.61009407]
[56.80001831 -0.17946824]
[53.28849411 -14.90862083]
[54.75226974 -29.97965622]
[61.03255844 -43.75777817]
[71.44812012 -54.74844360]
[84.86916351 -61.75946426]
[99.83986664 -64.03034210]
[114.73631287 -61.31473923]
[127.94265747 -53.90723038]
[138.02636719 -42.61132812]
[143.89364624 -28.65232658]
[144.90805054 -13.54439068]
[140.95954895 1.07368112]
[132.47644043 13.61623001]
[120.37890625 22.72273445]
[105.97920227 27.40538979]
[105.75587463 42.40372467]
[105.53254700 57.40206528]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[124.99630737 141.33366394]
[139.99668884 141.52987671]
[154.98004150 142.27064514]
[169.92662048 143.55497742]
[184.81671143 145.38119507]
[199.63066101 147.74687195]
[214.34895325 150.64891052]
[228.95214844 154.08346558]
[243.42102051 158.04602051]
[257.73645020 162.53132629]
[271.87957764 167.53349304]
[285.83175659 173.04591370]
[299.57455444 179.06130981]
[313.08987427 185.57176208]
[326.35986328 192.56866455]
[339.36706543 200.04281616]
[352.09426880 207.98432922]
[364.52474976 216.38275146]
[376.64202881 225.22698975]
[388.43020630 234.50540161]
[399.87368774 244.20571899]
[410.95742798 254.31518555]
[421.66671753 264.82043457]
[431.98751831 275.70761108]
[441.90618896 286.96237183]
[451.40966797 298.56988525]
[460.48538208 310.51480103]
[469.12136841 322.78140259]
[477.30624390 335.35348511]
[485.02923584 348.21447754]
[492.28012085 361.34744263]
[499.04934692 374.73501587]
[505.32800293 388.35955811]
[511.10781860 402.20309448]
[516.38110352 416.24737549]
[521.14099121 430.47387695]
[525.38116455 444.86383057]
[529.09600830 459.39828491]
[532.28063965 474.05801392]
[534.93084717 488.82373047]
[537.04315186 503.67590332]
[538.61480713 518.59503174]
[539.64361572 533.56134033]
[540.12835693 548.55517578]
[540.06835938 563.55670166]
[539.46368408 578.54620361]
[538.31506348 593.50378418]
[536.62408447 608.40985107]
[534.39300537 623.24468994]
[531.62475586 637.98870850]
[528.32287598 652.62249756]
[524.49188232 667.12670898]
[520.13671875 681.48229980]
[515.26312256 695.67028809]
[509.87762451 709.67187500]
[503.98721313 723.46875000]
[497.59976196 737.04260254]
[490.72360229 750.37561035]
[483.36785889 763.45007324]
[475.54220581 776.24890137]
[467.25698853 788.75506592]
[458.52310181 800.95220947]
[449.35211182 812.82409668]
[439.75607300 824.35516357]
[429.74765015 835.53021240]
[419.34008789 846.33447266]
[408.54702759 856.75366211]
[397.38278198 866.77410889]
[385.86203003 876.38256836]
[374.00000000 885.56634521]
[361.81231689 894.31335449]
[349.31506348 902.61206055]
[336.52468872 910.45147705]
[323.45812988 917.82128906]
[310.13253784 924.71179199]
[296.56555176 931.11389160]
[282.77505493 937.01910400]
[268.77923584 942.41967773]
[254.59652710 947.30853271]
[240.24566650 951.67913818]
[225.74555969 955.52581787]
[211.11534119 958.84338379]
[196.37429810 961.62756348]
[181.54188538 963.87463379]
[166.63766479 965.58160400]
[151.68128967 966.74633789]
[136.69247437 967.36718750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[84 123]
[85 122]
[86 121]
[88 119]
[89 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
