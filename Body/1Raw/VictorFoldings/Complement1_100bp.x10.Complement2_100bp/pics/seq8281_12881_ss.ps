%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[109.76329041 386.13168335]
[95.04618073 389.13748169]
[80.06551361 390.23657227]
[65.06729126 389.41088867]
[50.29780579 386.67398071]
[35.99957657 382.07083130]
[22.40739632 375.67700195]
[9.74446392 367.59750366]
[-1.78128791 357.96499634]
[-11.98059368 346.93765259]
[-20.68597221 334.69653320]
[-27.75447464 321.44268799]
[-33.07002640 307.39370728]
[-36.54534531 292.78036499]
[-38.12335968 277.84252930]
[-37.77816010 262.82559204]
[-35.51541138 247.97605896]
[-31.37227440 233.53781128]
[-25.41678238 219.74795532]
[-17.74672699 206.83290100]
[-8.48805904 195.00473022]
[2.20718551 184.45770264]
[14.16338062 175.36495972]
[27.18419647 167.87585449]
[41.05581665 162.11335754]
[55.55045700 158.17207336]
[70.43010712 156.11674500]
[85.45042419 155.98110962]
[87.23288727 141.08738708]
[89.01535797 126.19367218]
[86.68896484 119.17871094]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[98.20566559 57.17284012]
[100.20967865 42.30731201]
[102.21369171 27.44178200]
[104.21770477 12.57625484]
[98.39347839 -2.13391256]
[107.76179504 -13.71337700]
[109.76580811 -28.57890511]
[111.76982117 -43.44443512]
[104.38240051 -60.31178665]
[115.64237976 -73.77208710]
[117.42484283 -88.66580963]
[119.20731354 -103.55952454]
[104.41785431 -106.08261871]
[89.77255249 -109.33976746]
[75.30780792 -113.32287598]
[61.05958939 -118.02204132]
[47.06331253 -123.42559052]
[33.35378265 -129.52006531]
[19.96508026 -136.29034424]
[6.93049002 -143.71957397]
[-5.71757889 -151.78929138]
[-17.94768333 -160.47943115]
[-29.72941399 -169.76838684]
[-41.03348541 -179.63307190]
[-51.83178711 -190.04895020]
[-62.09747696 -200.99014282]
[-71.80503082 -212.42942810]
[-80.93031311 -224.33839417]
[-89.45064545 -236.68739319]
[-97.34483337 -249.44575500]
[-104.59325409 -262.58175659]
[-111.17788696 -276.06271362]
[-117.08236694 -289.85513306]
[-122.29200745 -303.92474365]
[-126.79386139 -318.23654175]
[-130.57673645 -332.75494385]
[-133.63122559 -347.44384766]
[-135.94972229 -362.26675415]
[-137.52648926 -377.18679810]
[-138.35758972 -392.16690063]
[-138.44094849 -407.16979980]
[-137.77638245 -422.15820312]
[-136.36552429 -437.09484863]
[-134.21189880 -451.94259644]
[-131.32083130 -466.66455078]
[-127.69953918 -481.22409058]
[-123.35700989 -495.58502197]
[-118.30405426 -509.71163940]
[-112.55321503 -523.56884766]
[-106.11879730 -537.12213135]
[-99.01680756 -550.33789062]
[-91.26489258 -563.18316650]
[-82.88232422 -575.62609863]
[-73.88994598 -587.63574219]
[-64.31011963 -599.18218994]
[-54.16665649 -610.23681641]
[-43.48477173 -620.77203369]
[-32.29102707 -630.76177979]
[-20.61325264 -640.18109131]
[-8.48047829 -649.00659180]
[4.07712984 -657.21636963]
[17.02835274 -664.78997803]
[30.34099007 -671.70861816]
[43.98194504 -677.95507812]
[57.91730499 -683.51385498]
[72.11242676 -688.37109375]
[86.53201294 -692.51470947]
[101.14021301 -695.93438721]
[115.90071869 -698.62170410]
[130.77682495 -700.56988525]
[145.73153687 -701.77416992]
[160.72770691 -702.23150635]
[175.72801208 -701.94073486]
[190.69519043 -700.90264893]
[205.59202576 -699.11981201]
[220.38146973 -696.59667969]
[235.02674866 -693.33941650]
[249.49147034 -689.35626221]
[263.73965454 -684.65698242]
[277.73590088 -679.25341797]
[291.44540405 -673.15881348]
[304.83407593 -666.38848877]
[317.86862183 -658.95922852]
[330.51666260 -650.88940430]
[342.74670410 -642.19921875]
[354.52841187 -632.91021729]
[365.83242798 -623.04547119]
[376.63067627 -612.62951660]
[386.89630127 -601.68829346]
[396.60379028 -590.24890137]
[405.72900391 -578.33990479]
[414.24926758 -565.99090576]
[422.14340210 -553.23248291]
[429.39175415 -540.09643555]
[435.97631836 -526.61541748]
[441.88073730 -512.82299805]
[447.09030151 -498.75335693]
[451.59207153 -484.44152832]
[455.37487793 -469.92312622]
[458.42929077 -455.23419189]
[460.74771118 -440.41128540]
[462.32440186 -425.49124146]
[463.15542603 -410.51113892]
[463.23870850 -395.50823975]
[462.57406616 -380.51983643]
[461.16311646 -365.58319092]
[459.00939941 -350.73544312]
[456.11828613 -336.01351929]
[452.49691772 -321.45397949]
[448.15429688 -307.09307861]
[443.10125732 -292.96646118]
[437.35037231 -279.10931396]
[430.91586304 -265.55603027]
[423.81381226 -252.34033203]
[416.06182861 -239.49507141]
[407.67919922 -227.05218506]
[398.68676758 -215.04260254]
[389.10687256 -203.49618530]
[378.96334839 -192.44165039]
[368.28140259 -181.90646362]
[357.08761597 -171.91682434]
[345.40979004 -162.49755859]
[333.27697754 -153.67210388]
[320.71932983 -145.46240234]
[307.76806641 -137.88883972]
[294.45538330 -130.97026062]
[280.81439209 -124.72386932]
[266.87899780 -119.16519165]
[252.68386841 -114.30804443]
[238.26425171 -110.16450500]
[223.65603638 -106.74488068]
[208.89552307 -104.05766296]
[194.01940918 -102.10954285]
[179.06468201 -100.90535736]
[164.06851196 -100.44809723]
[149.06820679 -100.73890686]
[134.10102844 -101.77706146]
[132.31855774 -86.88333893]
[130.53610229 -71.98962402]
[137.76361084 -62.28963852]
[136.40049744 -49.86685181]
[126.63534546 -41.44041824]
[124.63133240 -26.57489204]
[122.62731934 -11.70936298]
[128.59487915 1.93752170]
[119.08322906 14.58026791]
[117.07921600 29.44579697]
[115.07520294 44.31132507]
[113.07118988 59.17685318]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.90907288 127.97614288]
[102.12660980 142.86985779]
[100.34413910 157.76358032]
[114.90825653 161.43984985]
[128.88265991 166.94841003]
[142.03790283 174.19879150]
[154.15792847 183.07196045]
[165.04374695 193.42218018]
[174.51660156 205.07952881]
[182.42092896 217.85253906]
[188.62692261 231.53149414]
[193.03269958 245.89176941]
[195.56588745 260.69757080]
[196.18490601 275.70571899]
[194.87959290 290.66983032]
[191.67135620 305.34414673]
[186.61291504 319.48773193]
[179.78730774 332.86828613]
[171.30662537 345.26611328]
[161.31013489 356.47766113]
[149.96197510 366.31875610]
[137.44850159 374.62786865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 191]
[29 190]
[30 189]
[32 188]
[34 186]
[35 185]
[36 184]
[37 183]
[38 182]
[39 181]
[41 179]
[42 178]
[43 177]
[45 174]
[46 173]
[47 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
