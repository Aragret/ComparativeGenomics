%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[174.05412292 437.57516479]
[178.16760254 423.12188721]
[184.34175110 409.42160034]
[192.44496155 396.76632690]
[202.30451965 385.42581177]
[213.71025085 375.64178467]
[226.41903687 367.62280273]
[220.34521484 353.90753174]
[214.27137756 340.19226074]
[208.19754028 326.47698975]
[202.12370300 312.76174927]
[195.54368591 299.28201294]
[188.46656799 286.05645752]
[181.38946533 272.83093262]
[174.31236267 259.60540771]
[167.23526001 246.37988281]
[161.30780029 241.96548462]
[160.15290833 232.90435791]
[153.27348328 219.57492065]
[146.39407349 206.24549866]
[139.51466370 192.91606140]
[132.63525391 179.58663940]
[119.92259216 171.82534790]
[120.46903992 156.01358032]
[113.58962250 142.68415833]
[99.36632538 138.41410828]
[92.19973755 124.99417877]
[96.77499390 110.10442352]
[89.30725098 97.09546661]
[81.26607513 84.43294525]
[73.22490692 71.77041626]
[65.18373108 59.10789490]
[57.14255905 46.44536972]
[40.56951523 49.60544968]
[24.08993340 46.16513062]
[10.22613811 36.67983246]
[1.08899546 22.62799072]
[-1.94346321 6.18066406]
[1.56618786 -10.13387299]
[11.05192566 -23.81877708]
[2.63730693 -36.23627472]
[-5.77731180 -48.65377045]
[-14.19192982 -61.07126236]
[-22.60654831 -73.48876190]
[-31.02116776 -85.90625763]
[-39.43578720 -98.32375336]
[-37.68693542 -83.42604828]
[-40.34788513 -68.66395569]
[-47.18843842 -55.31454468]
[-57.61682129 -44.53266907]
[-70.73087311 -37.25107193]
[-85.39609528 -34.09967804]
[-100.34379578 -35.35112381]
[-114.28086090 -40.89713669]
[-126.00158691 -50.25794220]
[-134.49200439 -62.62372589]
[-139.01763916 -76.92472839]
[-139.18693542 -91.92377472]
[-134.98527527 -106.32329559]
[-126.77614594 -118.87757874]
[-115.26970673 -128.50056458]
[-101.46138000 -134.35975647]
[-86.54573059 -135.94828796]
[-71.81311035 -133.12873840]
[-58.53804016 -126.14501190]
[-47.87105179 -115.60409546]
[-52.48506165 -129.87683105]
[-57.09907150 -144.14956665]
[-61.71307755 -158.42228699]
[-66.32708740 -172.69502258]
[-68.91205597 -157.91944885]
[-75.88081360 -144.63650513]
[-86.56913757 -134.11225891]
[-99.95828247 -127.34980774]
[-114.77208710 -124.99370575]
[-129.59858704 -127.26852417]
[-143.02462769 -133.95744324]
[-153.77050781 -144.42291260]
[-160.81201172 -157.66741943]
[-163.47798157 -172.42861938]
[-161.51431274 -187.29953003]
[-155.10816956 -200.86276245]
[-144.87014771 -211.82556152]
[-131.77607727 -219.14302063]
[-117.07398987 -222.11769104]
[-102.16519928 -220.46603394]
[-88.47071838 -214.34547424]
[-77.29581451 -204.33940125]
[-69.70519257 -191.40046692]
[-70.37497711 -206.38551331]
[-71.04476166 -221.37054443]
[-71.71454620 -236.35559082]
[-72.38433075 -251.34062195]
[-73.05411530 -266.32565308]
[-76.56359100 -274.75900269]
[-73.62063599 -281.53845215]
[-74.06724548 -296.53179932]
[-88.29043579 -301.89550781]
[-99.37493134 -312.29754639]
[-105.63042450 -326.15167236]
[-106.10299683 -341.34527588]
[-100.72058868 -355.56140137]
[-90.30397797 -366.63220215]
[-76.44161987 -372.86944580]
[-61.24742508 -373.32205200]
[-47.03839493 -367.92095947]
[-35.98130417 -357.48977661]
[-29.76228142 -343.61923218]
[-29.32968140 -328.42443848]
[-34.74946976 -314.22253418]
[-45.19517136 -303.17916870]
[-59.07389450 -296.97839355]
[-58.62728882 -281.98504639]
[-58.06907654 -266.99545288]
[-57.39929199 -252.01040649]
[-56.72950745 -237.02537537]
[-56.05971909 -222.04032898]
[-55.38993454 -207.05529785]
[-54.72014999 -192.07025146]
[-52.05435562 -177.30903625]
[-47.44034576 -163.03630066]
[-42.82633591 -148.76356506]
[-38.21232605 -134.49082947]
[-33.59832001 -120.21810150]
[-27.01829147 -106.73837280]
[-18.60367203 -94.32087708]
[-10.18905354 -81.90338135]
[-1.77443480 -69.48588562]
[6.64018393 -57.06838608]
[15.05480194 -44.65089035]
[23.46942139 -32.23339462]
[36.25886917 -35.72961807]
[49.52607727 -35.11376953]
[61.97929001 -30.43175507]
[72.40166473 -22.12607384]
[79.77020264 -10.99401665]
[83.35611725 1.88883746]
[82.79692078 15.27254963]
[78.13300323 27.85408974]
[69.80508423 38.40419769]
[77.84626007 51.06672287]
[85.88742828 63.72924423]
[93.92860413 76.39176941]
[101.96977234 89.05429840]
[106.28613281 74.68874359]
[119.43035126 67.46175385]
[133.87283325 71.51326752]
[141.34027100 84.52239990]
[137.55496216 99.03692627]
[124.68531799 106.74226379]
[110.10442352 103.22500610]
[124.89158630 108.12168121]
[131.67840576 121.73761749]
[126.91905212 135.80474854]
[133.79846191 149.13417053]
[147.00318909 157.84886169]
[145.96467590 172.70721436]
[152.84410095 186.03665161]
[159.72351074 199.36607361]
[166.60292053 212.69551086]
[173.48233032 226.02493286]
[180.46078491 239.30278015]
[187.53788757 252.52830505]
[194.61499023 265.75384521]
[201.69209290 278.97937012]
[208.76921082 292.20489502]
[215.54893494 278.82449341]
[230.20550537 275.63314819]
[241.93466187 284.98339844]
[242.09007263 299.98257446]
[230.55720520 309.57388306]
[215.83897400 306.68789673]
[221.91281128 320.40316772]
[227.98663330 334.11843872]
[234.06047058 347.83370972]
[240.13430786 361.54898071]
[254.61351013 357.52770996]
[269.52392578 355.65756226]
[284.54772949 355.97842407]
[299.36471558 358.48345947]
[313.65902710 363.11923218]
[327.12597656 369.78695679]
[339.47857666 378.34454346]
[350.45343018 388.60949707]
[359.81671143 400.36312866]
[367.36877441 413.35482788]
[372.94863892 427.30767822]
[376.43743896 441.92431641]
[377.76074219 456.89318848]
[376.89038086 471.89520264]
[373.84487915 486.61059570]
[368.68917847 500.72570801]
[361.53314209 513.93969727]
[352.52935791 525.97088623]
[341.86965942 536.56280518]
[329.78134155 545.48974609]
[316.52200317 552.56140137]
[302.37429810 557.62701416]
[287.63980103 560.57861328]
[272.63253784 561.35333252]
[257.67242432 559.93463135]
[243.07832336 556.35272217]
[229.16130066 550.68402100]
[216.21800232 543.04931641]
[204.52433777 533.61126709]
[194.32952881 522.57116699]
[185.85089111 510.16430664]
[179.26913452 496.65512085]
[174.72457886 482.33154297]
[172.31405640 467.49890137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 176]
[8 175]
[9 174]
[10 173]
[11 172]
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[18 161]
[19 160]
[20 159]
[21 158]
[22 157]
[24 155]
[25 154]
[28 151]
[29 144]
[30 143]
[31 142]
[32 141]
[33 140]
[40 131]
[41 130]
[42 129]
[43 128]
[44 127]
[45 126]
[46 125]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
