%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[7.13346004 331.85812378]
[3.78550768 346.48681641]
[-0.63367313 360.82827759]
[-6.09994602 374.80422974]
[-12.58345604 388.33831787]
[-20.04879189 401.35659790]
[-28.45517921 413.78802490]
[-37.75670624 425.56463623]
[-47.90257263 436.62216187]
[-58.83735657 446.90017700]
[-70.50134277 456.34255981]
[-82.83082581 464.89773560]
[-95.75846863 472.51898193]
[-109.21365356 479.16467285]
[-123.12289429 484.79849243]
[-137.41023254 489.38970947]
[-151.99761963 492.91323853]
[-166.80540466 495.34979248]
[-181.75270081 496.68612671]
[-196.75785828 496.91488647]
[-211.73893738 496.03485107]
[-226.61412048 494.05084229]
[-241.30213928 490.97366333]
[-255.72280884 486.82012939]
[-269.79733276 481.61291504]
[-283.44885254 475.38049316]
[-296.60281372 468.15689087]
[-309.18737793 459.98156738]
[-321.13378906 450.89913940]
[-332.37683105 440.95922852]
[-342.85504150 430.21615601]
[-352.51126099 418.72857666]
[-361.29272461 406.55920410]
[-369.15142822 393.77453613]
[-376.04452515 380.44439697]
[-381.93432617 366.64157104]
[-386.78863525 352.44149780]
[-390.58099365 337.92166138]
[-393.29064941 323.16140747]
[-394.90283203 308.24136353]
[-395.40869141 293.24298096]
[-394.80554199 278.24819946]
[-393.09658813 263.33892822]
[-390.29122925 248.59655762]
[-386.40475464 234.10163879]
[-381.45843506 219.93333435]
[-375.47921753 206.16902161]
[-368.49978638 192.88388062]
[-360.55828857 180.15046692]
[-351.69808960 168.03833008]
[-341.96755981 156.61363220]
[-331.41983032 145.93875122]
[-320.11254883 136.07200623]
[-308.10748291 127.06727600]
[-295.47015381 118.97375488]
[-282.26959229 111.83563232]
[-268.57791138 105.69190216]
[-254.46990967 100.57612610]
[-240.02261353 96.51623535]
[-225.31492615 93.53440094]
[-210.42720032 91.64692688]
[-195.44071960 90.86409760]
[-180.43736267 91.19020844]
[-165.49905396 92.62347412]
[-150.70739746 95.15605164]
[-136.14315796 98.77413177]
[-121.88591003 103.45793915]
[-108.01351166 109.18189240]
[-94.60172272 115.91473389]
[-81.72380066 123.61968994]
[-69.45008087 132.25466919]
[-57.84759140 141.77253723]
[-46.97971344 152.12127686]
[-36.90579987 163.24436951]
[-27.68086815 175.08110046]
[-15.20107460 166.75915527]
[-2.72128081 158.43721008]
[9.75851345 150.11526489]
[22.23830605 141.79331970]
[34.71810150 133.47137451]
[37.39574432 121.67490387]
[47.72475815 114.63961792]
[60.47494888 116.58781433]
[73.07726288 108.45259857]
[85.67957306 100.31738281]
[92.23143768 87.96567535]
[106.18521118 87.08030701]
[113.58317566 73.09528351]
[128.47235107 72.69320679]
[141.07466125 64.55799103]
[149.09678650 47.98309708]
[166.64479065 47.79695129]
[179.12457275 39.47500610]
[191.60437012 31.15306091]
[204.08416748 22.83111763]
[216.56396484 14.50917435]
[229.04374695 6.18723011]
[221.67399597 -6.88560057]
[215.30178833 -20.47262192]
[209.96276855 -34.49785233]
[205.68678284 -48.88285065]
[202.49775696 -63.54716873]
[200.41351318 -78.40880585]
[199.44572449 -93.38463593]
[199.59977722 -108.39091492]
[200.87484741 -123.34372711]
[203.26376343 -138.15943909]
[206.75320435 -152.75518799]
[211.32362366 -167.04936218]
[216.94947815 -180.96202087]
[223.59930420 -194.41534424]
[231.23590088 -207.33412170]
[239.81657410 -219.64607239]
[249.29333496 -231.28236389]
[259.61318970 -242.17791748]
[270.71838379 -252.27178955]
[282.54687500 -261.50753784]
[295.03250122 -269.83352661]
[308.10537720 -277.20315552]
[321.69247437 -283.57525635]
[335.71774292 -288.91415405]
[350.10278320 -293.19000244]
[364.76712036 -296.37890625]
[379.62878418 -298.46301270]
[394.60461426 -299.43066406]
[409.61090088 -299.27648926]
[424.56369019 -298.00128174]
[439.37939453 -295.61224365]
[453.97509766 -292.12268066]
[468.26922607 -287.55212402]
[482.18185425 -281.92614746]
[495.63513184 -275.27621460]
[508.55380249 -267.63949585]
[520.86572266 -259.05871582]
[532.50189209 -249.58184814]
[543.39733887 -239.26190186]
[553.49114990 -228.15660095]
[562.72680664 -216.32801819]
[571.05267334 -203.84234619]
[578.42218018 -190.76939392]
[584.79412842 -177.18225098]
[590.13293457 -163.15693665]
[594.40863037 -148.77185059]
[597.59741211 -134.10748291]
[599.68139648 -119.24581146]
[600.64892578 -104.26995850]
[600.49462891 -89.26367950]
[599.21929932 -74.31089783]
[596.83007812 -59.49522781]
[593.34039307 -44.89953232]
[588.76971436 -30.60544014]
[583.14361572 -16.69288254]
[576.49359131 -3.23967052]
[568.85675049 9.67896080]
[560.27587891 21.99076462]
[550.79888916 33.62688828]
[540.47882080 44.52225494]
[529.37347412 54.61593628]
[517.54479980 63.85147858]
[505.05905151 72.17723846]
[491.98602295 79.54664612]
[478.39883423 85.91849518]
[464.37347412 91.25714874]
[449.98834229 95.53275299]
[435.32394409 98.72138977]
[420.46224976 100.80523682]
[405.48638916 101.77263641]
[390.48013306 101.61817932]
[375.52734375 100.34272003]
[360.71170044 97.95340729]
[346.11602783 94.46358490]
[331.82199097 89.89278412]
[317.90948486 84.26656342]
[304.45632935 77.61638641]
[291.53775024 69.97944641]
[279.22604370 61.39844131]
[267.58999634 51.92137527]
[256.69473267 41.60124207]
[246.60113525 30.49575615]
[237.36569214 18.66702461]
[224.88591003 26.98896790]
[212.40611267 35.31091309]
[199.92631531 43.63285446]
[187.44651794 51.95479965]
[174.96673584 60.27674484]
[172.28907776 72.07321930]
[161.96006775 79.10849762]
[149.20988464 77.16030121]
[136.60757446 85.29551697]
[130.11100769 98.69864655]
[114.32042694 99.68261719]
[107.76856232 112.03432465]
[93.81478882 112.91969299]
[81.21247864 121.05490875]
[68.61016083 129.19012451]
[60.58804321 145.76501465]
[43.04004288 145.95117188]
[30.56025124 154.27311707]
[18.08045769 162.59506226]
[5.60066319 170.91699219]
[-6.87913084 179.23893738]
[-19.35892487 187.56088257]
[-11.97775650 200.62709045]
[-5.58172369 214.20272827]
[-0.20575762 228.21365356]
[4.12077904 242.58335876]
[7.37425613 257.23333740]
[9.53690434 272.08361816]
[10.59691143 287.05303955]
[10.54848766 302.05984497]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 202]
[76 201]
[77 200]
[78 199]
[79 198]
[80 197]
[83 195]
[84 194]
[85 193]
[87 191]
[89 189]
[90 188]
[92 185]
[93 184]
[94 183]
[95 182]
[96 181]
[97 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
