%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[193.89971924 891.13323975]
[179.31256104 887.62792969]
[164.89343262 883.48522949]
[150.67019653 878.71319580]
[136.67028809 873.32104492]
[122.92073822 867.31909180]
[109.44808960 860.71905518]
[96.27835083 853.53363037]
[83.43693542 845.77661133]
[70.94863129 837.46307373]
[58.83754730 828.60900879]
[47.12706375 819.23150635]
[35.83978271 809.34869385]
[24.99748802 798.97961426]
[14.62111282 788.14428711]
[4.73068523 776.86370850]
[-4.65470457 765.15954590]
[-13.51693916 753.05444336]
[-21.83891296 740.57171631]
[-29.60456085 727.73553467]
[-36.79889297 714.57067871]
[-43.40802383 701.10247803]
[-49.41919708 687.35693359]
[-54.82080460 673.36071777]
[-59.60242462 659.14068604]
[-63.75482559 644.72436523]
[-67.26999664 630.13952637]
[-70.14114380 615.41442871]
[-72.36272430 600.57739258]
[-73.93045807 585.65710449]
[-74.84132385 570.68231201]
[-75.09354401 555.68200684]
[-74.68665314 540.68511963]
[-73.62142181 525.72058105]
[-71.89990997 510.81723022]
[-69.52544403 496.00387573]
[-66.50260162 481.30914307]
[-62.83722305 466.76138306]
[-58.53638077 452.38864136]
[-53.60837936 438.21868896]
[-48.06272888 424.27883911]
[-41.91013336 410.59606934]
[-35.16246796 397.19674683]
[-27.83276176 384.10675049]
[-19.93515968 371.35131836]
[-11.48490715 358.95510864]
[-2.49831533 346.94201660]
[7.00726843 335.33526611]
[17.01349640 324.15725708]
[27.50105286 313.42953491]
[38.44969559 303.17282104]
[49.83829117 293.40692139]
[61.64485168 284.15066528]
[73.84659576 275.42196655]
[86.41996002 267.23760986]
[99.34068298 259.61346436]
[112.58382416 252.56419373]
[126.12381744 246.10342407]
[139.93452454 240.24363708]
[134.68780518 226.19116211]
[129.44108582 212.13868713]
[124.19436646 198.08621216]
[121.15560913 196.29785156]
[118.83209229 192.94877625]
[117.94791412 188.39118958]
[119.04251099 183.28736877]
[114.42850494 169.01463318]
[109.81449127 154.74191284]
[105.20048523 140.46917725]
[100.58647919 126.19644165]
[95.97246552 111.92370605]
[91.04087067 97.75756836]
[78.96528625 87.53549957]
[81.76206970 72.90583038]
[76.51535034 58.85335541]
[71.26863861 44.80088425]
[56.48081970 47.53796387]
[41.44237137 47.66539383]
[26.61029625 45.17929840]
[12.43532181 40.15523529]
[-0.65178919 32.74587250]
[-12.25333500 23.17637634]
[-22.01675797 11.73755169]
[-29.64535713 -1.22298789]
[-34.90731049 -15.31138611]
[-37.64271164 -30.09951401]
[-37.76843262 -45.13797379]
[-35.28065872 -59.96976852]
[-30.25498581 -74.14417267]
[-22.84414101 -87.23044586]
[-13.27332878 -98.83090210]
[-1.83339715 -108.59302521]
[11.12800789 -116.22016144]
[25.21700287 -121.48051453]
[40.00543976 -124.21424103]
[55.04391479 -124.33825684]
[69.87542725 -121.84880066]
[84.04926300 -116.82151794]
[97.13468933 -109.40918732]
[108.73406219 -99.83705902]
[118.49489594 -88.39601898]
[126.12055206 -75.43375397]
[131.37931824 -61.34416199]
[134.11135864 -46.55541229]
[134.23367310 -31.51692390]
[131.74252319 -16.68569565]
[126.71364594 -2.51243162]
[119.29982758 10.57215786]
[109.72638702 22.17044640]
[98.28424072 31.92997742]
[85.32110596 39.55416870]
[90.56782532 53.60663986]
[95.81454468 67.65911102]
[107.51484680 76.87605286]
[105.09334564 92.51085663]
[108.33956909 94.59277344]
[110.65235901 98.09546661]
[111.41774750 102.56997681]
[110.24520111 107.30970001]
[114.85920715 121.58242798]
[119.47322083 135.85516357]
[124.08722687 150.12789917]
[128.70123291 164.40063477]
[133.31524658 178.67337036]
[138.24684143 192.83949280]
[143.49356079 206.89196777]
[148.74028015 220.94444275]
[153.98699951 234.99691772]
[168.25865173 230.37170410]
[182.71969604 226.37782288]
[197.34222412 223.02299500]
[212.09797668 220.31369019]
[226.95851135 218.25514221]
[241.89511108 216.85130310]
[256.87896729 216.10491943]
[271.88113403 216.01739502]
[286.87268066 216.58891296]
[301.82464600 217.81837463]
[316.70819092 219.70341492]
[331.49453735 222.24037170]
[346.15521240 225.42436218]
[360.66186523 229.24923706]
[374.98654175 233.70762634]
[389.10153198 238.79089355]
[402.97961426 244.48925781]
[416.59402466 250.79171753]
[429.91845703 257.68609619]
[442.92721558 265.15905762]
[455.59515381 273.19622803]
[467.89785767 281.78207397]
[479.81152344 290.90002441]
[491.31323242 300.53247070]
[502.38070679 310.66079712]
[512.99267578 321.26550293]
[523.12854004 332.32611084]
[532.76879883 343.82122803]
[541.89489746 355.72869873]
[550.48907471 368.02554321]
[558.53491211 380.68801880]
[566.01672363 393.69165039]
[572.92016602 407.01138306]
[579.23187256 420.62149048]
[584.93969727 434.49572754]
[590.03259277 448.60723877]
[594.50073242 462.92886353]
[598.33551025 477.43292236]
[601.52947998 492.09140015]
[604.07653809 506.87603760]
[605.97167969 521.75830078]
[607.21136475 536.70941162]
[607.79309082 551.70056152]
[607.71575928 566.70275879]
[606.97961426 581.68713379]
[605.58593750 596.62469482]
[603.53753662 611.48663330]
[600.83825684 626.24426270]
[597.49340820 640.86901855]
[593.50939941 655.33282471]
[588.89392090 669.60760498]
[583.65582275 683.66589355]
[577.80535889 697.48059082]
[571.35369873 711.02490234]
[564.31341553 724.27276611]
[556.69793701 737.19866943]
[548.52209473 749.77752686]
[539.80157471 761.98516846]
[530.55334473 773.79797363]
[520.79510498 785.19311523]
[510.54577637 796.14868164]
[499.82513428 806.64349365]
[488.65383911 816.65722656]
[477.05349731 826.17065430]
[465.04647827 835.16534424]
[452.65597534 843.62396240]
[439.90588379 851.53015137]
[426.82083130 858.86865234]
[413.42605591 865.62536621]
[399.74740601 871.78717041]
[385.81134033 877.34222412]
[371.64471436 882.27978516]
[357.27487183 886.59033203]
[342.72955322 890.26550293]
[328.03686523 893.29827881]
[313.22512817 895.68273926]
[298.32296753 897.41424561]
[283.35913086 898.48956299]
[268.36248779 898.90661621]
[253.36201477 898.66448975]
[238.38665771 897.76373291]
[223.46531677 896.20605469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 128]
[60 127]
[61 126]
[62 125]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[71 119]
[72 115]
[74 113]
[75 112]
[76 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
