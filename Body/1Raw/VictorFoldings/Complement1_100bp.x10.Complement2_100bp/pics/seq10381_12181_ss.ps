%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[81.59291077 546.04998779]
[66.61888123 545.17987061]
[51.68252945 543.80718994]
[36.80072403 541.93353271]
[21.99025917 539.56103516]
[7.26785707 536.69226074]
[-7.34986496 533.33062744]
[-21.84640503 529.47973633]
[-36.20539856 525.14410400]
[-50.41063690 520.32849121]
[-64.44608307 515.03839111]
[-78.29589844 509.27981567]
[-91.94444275 503.05920410]
[-105.37631226 496.38360596]
[-118.57633972 489.26055908]
[-131.52963257 481.69808960]
[-144.22155762 473.70474243]
[-156.63780212 465.28952026]
[-168.76434326 456.46197510]
[-180.58747864 447.23202515]
[-192.09387207 437.61007690]
[-203.27055359 427.60705566]
[-214.10487366 417.23419189]
[-224.58462524 406.50323486]
[-234.69795227 395.42626953]
[-244.43347168 384.01580811]
[-253.78018188 372.28475952]
[-262.72750854 360.24630737]
[-271.26541138 347.91412354]
[-279.38418579 335.30203247]
[-287.07467651 322.42434692]
[-294.32824707 309.29559326]
[-301.13665771 295.93054199]
[-307.49224854 282.34432983]
[-313.38784790 268.55230713]
[-318.81680298 254.56997681]
[-323.77297974 240.41317749]
[-328.25079346 226.09786987]
[-332.24514771 211.64021301]
[-335.75155640 197.05653381]
[-338.76611328 182.36329651]
[-341.28533936 167.57707214]
[-343.30642700 152.71456909]
[-344.82705688 137.79257202]
[-345.84558105 122.82789612]
[-346.36080933 107.83745575]
[-346.37216187 92.83817291]
[-345.87963867 77.84696960]
[-344.88375854 62.88077545]
[-343.38568115 47.95648193]
[-341.38711548 33.09093857]
[-338.89025879 18.30092621]
[-335.89797974 3.60313916]
[-332.41363525 -10.98583031]
[-328.44116211 -25.44951439]
[-323.98501587 -39.77158356]
[-319.05029297 -53.93587494]
[-313.64251709 -67.92639160]
[-307.76779175 -81.72734833]
[-301.43276978 -95.32315826]
[-294.64459229 -108.69848633]
[-287.41088867 -121.83821869]
[-279.73989868 -134.72753906]
[-271.64022827 -147.35186768]
[-263.12103271 -159.69699097]
[-254.19190979 -171.74894714]
[-244.86297607 -183.49414062]
[-235.14474487 -194.91932678]
[-225.04817200 -206.01158142]
[-214.58468628 -216.75839233]
[-203.76606750 -227.14762878]
[-192.60455322 -237.16757202]
[-181.11273193 -246.80691528]
[-169.30357361 -256.05474854]
[-157.19041443 -264.90066528]
[-144.78692627 -273.33465576]
[-132.10711670 -281.34719849]
[-119.16528320 -288.92926025]
[-105.97605133 -296.07229614]
[-92.55429840 -302.76821899]
[-78.91519165 -309.00949097]
[-65.07410431 -314.78903198]
[-51.04668045 -320.10034180]
[-36.84874725 -324.93743896]
[-22.49633217 -329.29483032]
[-8.00563812 -333.16760254]
[6.60697889 -336.55142212]
[21.32502174 -339.44244385]
[36.13187790 -341.83737183]
[51.01082993 -343.73355103]
[65.94508362 -345.12881470]
[65.05226898 -360.10223389]
[64.15945435 -375.07562256]
[63.26663589 -390.04904175]
[62.37382126 -405.02243042]
[61.48100662 -419.99584961]
[47.10442352 -424.93368530]
[35.71513367 -435.00109863]
[29.04992485 -448.66284180]
[28.12518883 -463.83563232]
[33.08194351 -478.20568848]
[43.16431808 -489.58172607]
[56.83482361 -496.22897339]
[72.00881195 -497.13372803]
[86.37235260 -492.15808105]
[97.73511505 -482.06076050]
[104.36435699 -468.38153076]
[105.24916840 -453.20635986]
[100.25462341 -438.84936523]
[90.14235687 -427.49990845]
[76.45441437 -420.88867188]
[77.34722900 -405.91525269]
[78.24004364 -390.94186401]
[79.13285828 -375.96844482]
[80.02567291 -360.99502563]
[80.91848755 -346.02163696]
[95.91272736 -346.41091919]
[110.91158295 -346.29623413]
[125.89811707 -345.67779541]
[140.85542297 -344.55621338]
[155.76660156 -342.93283081]
[170.61482239 -340.80941772]
[185.38333130 -338.18841553]
[200.05546570 -335.07275391]
[214.61465454 -331.46597290]
[229.04444885 -327.37213135]
[243.32858276 -322.79583740]
[257.45092773 -317.74227905]
[271.39550781 -312.21716309]
[285.14663696 -306.22668457]
[298.68872070 -299.77767944]
[312.00656128 -292.87734985]
[325.08505249 -285.53353882]
[337.90948486 -277.75451660]
[350.46533203 -269.54907227]
[362.73843384 -260.92648315]
[374.71496582 -251.89642334]
[386.38134766 -242.46914673]
[397.72448730 -232.65527344]
[408.73153687 -222.46588135]
[419.39007568 -211.91247559]
[429.68804932 -201.00695801]
[439.61386108 -189.76165771]
[449.15631104 -178.18925476]
[458.30462646 -166.30282593]
[467.04846191 -154.11578369]
[475.37796021 -141.64187622]
[483.28369141 -128.89520264]
[490.75677490 -115.89012909]
[497.78875732 -102.64134979]
[504.37167358 -89.16381836]
[510.49813843 -75.47275543]
[516.16119385 -61.58361053]
[521.35449219 -47.51205826]
[526.07208252 -33.27399063]
[530.30877686 -18.88547325]
[534.05969238 -4.36275434]
[537.32061768 10.27777386]
[540.08789062 25.01958466]
[542.35833740 39.84603882]
[544.12945557 54.74039459]
[545.39923096 69.68584442]
[546.16619873 84.66551208]
[546.42950439 99.66249084]
[546.18884277 114.65985107]
[545.44451904 129.64067078]
[544.19738770 144.58801270]
[542.44879150 159.48503113]
[540.20074463 174.31491089]
[537.45581055 189.06088257]
[534.21697998 203.70632935]
[530.48803711 218.23469543]
[526.27313232 232.62960815]
[521.57702637 246.87478638]
[516.40502930 260.95416260]
[510.76296997 274.85186768]
[504.65722656 288.55218506]
[498.09469604 302.03964233]
[491.08276367 315.29904175]
[483.62936401 328.31539917]
[475.74288940 341.07400513]
[467.43228149 353.56051636]
[458.70687866 365.76077271]
[449.57653809 377.66101074]
[440.05160522 389.24783325]
[430.14279175 400.50811768]
[419.86132812 411.42919922]
[409.21875000 421.99868774]
[398.22714233 432.20471191]
[386.89886475 442.03573608]
[375.24670410 451.48065186]
[363.28387451 460.52877808]
[351.02380371 469.16995239]
[338.48037720 477.39437866]
[325.66772461 485.19277954]
[312.60034180 492.55636597]
[299.29296875 499.47680664]
[285.76065063 505.94628906]
[272.01858521 511.95751953]
[258.08236694 517.50372314]
[243.96769714 522.57861328]
[229.69050598 527.17651367]
[215.26690674 531.29217529]
[200.71319580 534.92095947]
[186.04579163 538.05883789]
[171.28126526 540.70214844]
[156.43626404 542.84802246]
[141.52755737 544.49395752]
[126.57196045 545.63812256]
[111.58638000 546.27923584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
