%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[86.79711151 583.49719238]
[72.08374786 586.45086670]
[57.19242859 588.30987549]
[42.20448303 589.06402588]
[27.20177269 588.70916748]
[12.26623726 587.24731445]
[-2.52054930 584.68646240]
[-17.07782555 581.04046631]
[-31.32608604 576.32940674]
[-45.18750763 570.57891846]
[-58.58638382 563.82043457]
[-71.44953918 556.09082031]
[-83.70671082 547.43237305]
[-95.29095459 537.89233398]
[-106.13900757 527.52276611]
[-116.19161224 516.38043213]
[-125.39386749 504.52606201]
[-133.69552612 492.02447510]
[-141.05122375 478.94390869]
[-147.42079163 465.35583496]
[-152.76945496 451.33447266]
[-157.06799316 436.95635986]
[-160.29292297 422.30007935]
[-162.42663574 407.44561768]
[-163.45748901 392.47418213]
[-163.37982178 377.46746826]
[-162.19409180 362.50747681]
[-159.90675354 347.67590332]
[-156.53031921 333.05377197]
[-152.08320618 318.72091675]
[-146.58972168 304.75564575]
[-140.07984924 291.23422241]
[-132.58917236 278.23049927]
[-124.15858459 265.81549072]
[-114.83412933 254.05702209]
[-104.66674805 243.01928711]
[-93.71195984 232.76258850]
[-82.02960205 223.34294128]
[-69.68347168 214.81179810]
[-56.74101257 207.21575928]
[-43.27290726 200.59628296]
[-29.35271454 194.98956299]
[-15.05646133 190.42617798]
[-0.46223134 186.93109131]
[14.35026741 184.52337646]
[29.30013084 183.21617126]
[44.30570984 183.01663208]
[59.28504944 183.92585754]
[74.15633392 185.93884277]
[77.26044464 171.26354980]
[80.36455536 156.58824158]
[83.46865845 141.91294861]
[86.57276917 127.23764038]
[89.67687988 112.56233978]
[84.06761932 96.75371552]
[95.41504669 84.40008545]
[98.30032349 69.68019867]
[101.18559265 54.96030426]
[96.24726105 39.92955399]
[106.28818512 28.92823219]
[109.17346191 14.20833969]
[112.05873108 -0.51155126]
[97.54193115 -4.30746412]
[83.28919983 -8.99854183]
[69.35568237 -14.56663418]
[55.79528809 -20.99020004]
[42.66047668 -28.24438858]
[30.00206566 -36.30113220]
[17.86902618 -45.12926483]
[6.30830193 -54.69462585]
[-4.63538265 -64.96021271]
[-14.91968822 -75.88630676]
[-24.50482559 -87.43064117]
[-33.35371017 -99.54855347]
[-41.43210983 -112.19315338]
[-48.70877075 -125.31552887]
[-55.15554047 -138.86491394]
[-60.74747467 -152.78887939]
[-65.46294403 -167.03355408]
[-69.28369904 -181.54383850]
[-72.19496155 -196.26359558]
[-74.18547058 -211.13586426]
[-75.24752045 -226.10310364]
[-75.37700653 -241.10743713]
[-74.57341766 -256.09078979]
[-72.83988190 -270.99517822]
[-70.18309021 -285.76300049]
[-66.61332703 -300.33706665]
[-62.14439774 -314.66098022]
[-56.79360199 -328.67938232]
[-50.58163071 -342.33801270]
[-43.53252411 -355.58401489]
[-35.67355347 -368.36614990]
[-27.03511810 -380.63497925]
[-17.65064430 -392.34301758]
[-7.55643606 -403.44497681]
[3.20845175 -413.89788818]
[14.60237312 -423.66134644]
[26.58124542 -432.69757080]
[39.09872818 -440.97158813]
[52.10638809 -448.45135498]
[65.55390167 -455.10800171]
[79.38924408 -460.91574097]
[93.55889130 -465.85208130]
[108.00802612 -469.89797974]
[122.68073273 -473.03775024]
[137.52026367 -475.25921631]
[152.46919250 -476.55383301]
[167.46969604 -476.91656494]
[182.46371460 -476.34603882]
[197.39328003 -474.84442139]
[212.20059204 -472.41754150]
[226.82839966 -469.07476807]
[241.22007751 -464.82910156]
[255.31997681 -459.69686890]
[269.07351685 -453.69799805]
[282.42752075 -446.85568237]
[295.33029175 -439.19638062]
[307.73193359 -430.74972534]
[319.58444214 -421.54840088]
[330.84201050 -411.62802124]
[341.46102905 -401.02694702]
[351.40045166 -389.78619385]
[360.62179565 -377.94924927]
[369.08941650 -365.56192017]
[376.77053833 -352.67211914]
[383.63543701 -339.32971191]
[389.65756226 -325.58633423]
[394.81359863 -311.49514771]
[399.08364868 -297.11065674]
[402.45111084 -282.48855591]
[404.90304565 -267.68533325]
[406.42990112 -252.75834656]
[407.02581787 -237.76530457]
[406.68844604 -222.76422119]
[405.41912842 -207.81311035]
[403.22274780 -192.96984863]
[400.10781860 -178.29185486]
[396.08636475 -163.83590698]
[391.17398071 -149.65792847]
[385.38967896 -135.81277466]
[378.75579834 -122.35401917]
[371.29800415 -109.33372498]
[363.04519653 -96.80226898]
[354.02923584 -84.80812836]
[344.28509521 -73.39770508]
[333.85037231 -62.61515427]
[322.76550293 -52.50218201]
[311.07336426 -43.09791946]
[298.81915283 -34.43874359]
[286.05035400 -26.55816269]
[272.81628418 -19.48666000]
[259.16818237 -13.25159740]
[245.15885925 -7.87709475]
[230.84249878 -3.38394666]
[216.27449036 0.21046431]
[201.51121521 2.89223170]
[186.60975647 4.65098047]
[171.62779236 5.47990608]
[156.62326050 5.37580156]
[141.65423584 4.33906937]
[126.77862549 2.37372136]
[123.89334869 17.09361267]
[121.00807953 31.81350327]
[126.15278625 45.79138947]
[115.90548706 57.84557724]
[113.02021027 72.56546783]
[110.13494110 87.28536224]
[116.03817749 97.32493591]
[113.71292877 108.73696899]
[104.35218811 115.66644287]
[101.24807739 130.34175110]
[98.14396667 145.01704407]
[95.03985596 159.69235229]
[91.93574524 174.36766052]
[88.83163452 189.04295349]
[103.24431610 193.22409058]
[117.30885315 198.45820618]
[130.94842529 204.71675110]
[144.08853149 211.96553040]
[156.65742493 220.16493225]
[168.58642578 229.27020264]
[179.81040955 239.23159790]
[190.26806641 249.99472046]
[199.90226746 261.50076294]
[208.66041565 273.68692017]
[216.49465942 286.48660278]
[223.36221313 299.82989502]
[229.22557068 313.64398193]
[234.05270386 327.85333252]
[237.81726074 342.38040161]
[240.49867249 357.14578247]
[242.08227539 372.06890869]
[242.55946350 387.06823730]
[241.92758179 402.06182861]
[240.19010925 416.96780396]
[237.35653687 431.70477295]
[233.44233704 446.19223022]
[228.46888733 460.35104370]
[222.46334839 474.10388184]
[215.45851135 487.37564087]
[207.49264526 500.09384155]
[198.60926819 512.18896484]
[188.85688782 523.59503174]
[178.28875732 534.24969482]
[166.96261597 544.09478760]
[154.94032288 553.07653809]
[142.28752136 561.14587402]
[129.07333374 568.25866699]
[115.36993408 574.37622070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 176]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[56 168]
[57 167]
[58 166]
[60 164]
[61 163]
[62 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
