%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[65.95445251 858.85626221]
[50.95986176 858.37640381]
[35.99914932 857.26055908]
[21.09926987 855.51080322]
[6.28707933 853.13024902]
[-8.41073132 850.12316895]
[-22.96767426 846.49505615]
[-37.35752106 842.25238037]
[-51.55433273 837.40277100]
[-65.53253174 831.95501709]
[-79.26692963 825.91894531]
[-92.73276520 819.30535889]
[-105.90579224 812.12628174]
[-118.76224518 804.39453125]
[-131.27897644 796.12414551]
[-143.43342590 787.32995605]
[-155.20368958 778.02789307]
[-166.56855774 768.23461914]
[-177.50753784 757.96783447]
[-188.00093079 747.24609375]
[-198.02983093 736.08856201]
[-207.57614136 724.51550293]
[-216.62268066 712.54772949]
[-225.15315247 700.20678711]
[-233.15216064 687.51489258]
[-240.60530090 674.49493408]
[-247.49916077 661.17041016]
[-253.82127380 647.56530762]
[-259.56030273 633.70416260]
[-264.70584106 619.61193848]
[-269.24868774 605.31402588]
[-273.18057251 590.83618164]
[-276.49450684 576.20446777]
[-279.18444824 561.44531250]
[-281.24554443 546.58532715]
[-282.67413330 531.65124512]
[-283.46762085 516.66998291]
[-283.62454224 501.66851807]
[-283.14468384 486.67391968]
[-282.02883911 471.71319580]
[-280.27905273 456.81332397]
[-277.89846802 442.00115967]
[-274.89138794 427.30334473]
[-271.26321411 412.74639893]
[-267.02050781 398.35656738]
[-262.17089844 384.15975952]
[-256.72311401 370.18157959]
[-250.68699646 356.44717407]
[-244.07342529 342.98135376]
[-236.89428711 329.80834961]
[-229.16255188 316.95190430]
[-220.89213562 304.43518066]
[-212.09794617 292.28073120]
[-202.79583740 280.51049805]
[-193.00256348 269.14566040]
[-182.73576355 258.20669556]
[-172.01396179 247.71330261]
[-160.85646057 237.68443298]
[-149.28338623 228.13812256]
[-137.31558228 219.09161377]
[-124.97460938 210.56115723]
[-112.28271484 202.56217957]
[-99.26276398 195.10905457]
[-85.93823242 188.21522522]
[-72.33312225 181.89311218]
[-58.47195435 176.15412903]
[-44.37970352 171.00859070]
[-30.08176613 166.46578979]
[-15.60391235 162.53390503]
[-0.97222775 159.22001648]
[13.78691864 156.53010559]
[28.64692879 154.46900940]
[43.58102417 153.04045105]
[58.56229782 152.24699402]
[73.56374359 152.09007263]
[88.55833435 152.56999207]
[89.67398071 137.61154175]
[90.78962708 122.65308380]
[91.90528107 107.69462585]
[92.90953827 92.72828674]
[93.80235291 77.75487518]
[94.69516754 62.78147125]
[95.58798981 47.80806732]
[96.48080444 32.83465958]
[97.03901672 17.84505081]
[97.26234436 2.84671354]
[97.48567200 -12.15162373]
[97.70899963 -27.14996147]
[82.92733002 -29.90866280]
[68.82456970 -35.12595749]
[55.80648041 -42.65172958]
[44.24760818 -52.26944733]
[34.48053360 -63.70239258]
[26.78627205 -76.62162018]
[21.38620377 -90.65541077]
[18.43569946 -105.39998627]
[18.01964951 -120.43111420]
[20.15002632 -135.31632996]
[24.76553345 -149.62733459]
[31.73337555 -162.95239258]
[40.85306931 -174.90811157]
[51.86222839 -185.15049744]
[64.44409943 -193.38485718]
[78.23666382 -199.37426758]
[92.84309387 -202.94641113]
[107.84313202 -203.99850464]
[122.80519867 -202.50027466]
[137.29879761 -198.49482727]
[150.90692139 -192.09741211]
[163.23803711 -183.49209595]
[173.93736267 -172.92646790]
[182.69705200 -160.70452881]
[189.26506042 -147.17791748]
[193.45243835 -132.73582458]
[195.13868713 -117.79378510]
[194.27528381 -102.78170013]
[190.88708496 -88.13151550]
[185.07157898 -74.26472473]
[176.99606323 -61.58031464]
[166.89292908 -50.44323730]
[155.05282593 -41.17393494]
[141.81642151 -34.03909683]
[127.56458282 -29.24400711]
[112.70733643 -26.92663383]
[112.48400879 -11.92829609]
[112.26068115 3.07004118]
[112.03735352 18.06837845]
[114.21760559 20.83945084]
[115.16397858 24.80422401]
[114.33005524 29.37126541]
[111.45420837 33.72747803]
[110.56139374 48.70088196]
[109.66857910 63.67428970]
[108.77576447 78.64769745]
[107.88294220 93.62110138]
[110.58491516 101.21530151]
[106.86373138 108.81027985]
[105.74808502 123.76873016]
[104.63243866 138.72718811]
[103.51678467 153.68563843]
[118.41667175 155.43534851]
[133.22886658 157.81585693]
[147.92668152 160.82287598]
[162.48364258 164.45097351]
[176.87350464 168.69361877]
[191.07032776 173.54315186]
[205.04855347 178.99085999]
[218.78295898 185.02690125]
[232.24882507 191.64042664]
[245.42187500 198.81948853]
[258.27835083 206.55116272]
[270.79510498 214.82151794]
[282.94958496 223.61564636]
[294.71987915 232.91770935]
[306.08477783 242.71093750]
[317.02380371 252.97767639]
[327.51721191 263.69943237]
[337.54614258 274.85687256]
[347.09249878 286.42990112]
[356.13909912 298.39767456]
[364.66958618 310.73858643]
[372.66864014 323.43045044]
[380.12182617 336.45037842]
[387.01571655 349.77487183]
[393.33789062 363.37994385]
[399.07693481 377.24108887]
[404.22253418 391.33331299]
[408.76541138 405.63122559]
[412.69738770 420.10906982]
[416.01132202 434.74072266]
[418.70132446 449.49987793]
[420.76248169 464.35986328]
[422.19113159 479.29394531]
[422.98464966 494.27523804]
[423.14163208 509.27667236]
[422.66180420 524.27124023]
[421.54598999 539.23199463]
[419.79626465 554.13183594]
[417.41574097 568.94403076]
[414.40869141 583.64184570]
[410.78057861 598.19879150]
[406.53790283 612.58868408]
[401.68835449 626.78546143]
[396.24060059 640.76367188]
[390.20452881 654.49810791]
[383.59100342 667.96392822]
[376.41192627 681.13696289]
[368.68020630 693.99346924]
[360.40985107 706.51019287]
[351.61569214 718.66467285]
[342.31362915 730.43493652]
[332.52038574 741.79980469]
[322.25363159 752.73883057]
[311.53186035 763.23223877]
[300.37438965 773.26116943]
[288.80133057 782.80749512]
[276.83355713 791.85406494]
[264.49261475 800.38452148]
[251.80075073 808.38354492]
[238.78082275 815.83673096]
[225.45631409 822.73059082]
[211.85122681 829.05273438]
[197.99006653 834.79174805]
[183.89784241 839.93737793]
[169.59991455 844.48022461]
[155.12207031 848.41217041]
[140.49040222 851.72607422]
[125.73126221 854.41601562]
[110.87126160 856.47717285]
[95.93717194 857.90576172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[76 140]
[77 139]
[78 138]
[79 137]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[85 127]
[86 126]
[87 125]
[88 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
