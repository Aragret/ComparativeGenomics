%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[108.31006622 611.49444580]
[102.32110596 597.70574951]
[98.62169647 583.13488770]
[97.30767059 568.15924072]
[98.41304779 553.16674805]
[101.90921021 538.54577637]
[107.70559692 524.67504883]
[115.65206909 511.91375732]
[125.54278564 500.59252930]
[137.12155151 491.00460815]
[150.08847046 483.39834595]
[164.10763550 477.97073364]
[161.00352478 463.29544067]
[150.79992676 452.44482422]
[155.51391602 437.34222412]
[152.40980530 422.66693115]
[149.30569458 407.99160767]
[146.20158386 393.31631470]
[133.61677551 385.43228149]
[130.25970459 370.59365845]
[138.61453247 357.44699097]
[135.51042175 342.77169800]
[132.40631104 328.09640503]
[129.66647339 325.87704468]
[127.86546326 322.22033691]
[127.66714478 317.58203125]
[129.50674438 312.69705200]
[127.06101227 297.89776611]
[124.61528015 283.09851074]
[122.16955566 268.29922485]
[119.72383118 253.49996948]
[104.81963348 246.61936951]
[96.87387848 232.06510925]
[99.19186401 215.47811890]
[111.05625916 203.42274475]
[108.39046478 188.66152954]
[105.72467041 173.90031433]
[92.25277710 167.60379028]
[84.98582458 154.42594910]
[86.89420319 139.31927490]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[85.11899567 59.80123138]
[82.45320129 45.04001236]
[79.67758942 30.29904938]
[76.79232025 15.57915783]
[63.95973587 6.74951601]
[61.24335098 -8.21964836]
[69.74015045 -20.39914131]
[66.85487366 -35.11903381]
[63.96960068 -49.83892441]
[51.54818344 -63.43266678]
[57.87884521 -79.80000305]
[54.77473450 -94.47530365]
[51.67062378 -109.15060425]
[48.56651306 -123.82590485]
[45.46240616 -138.50120544]
[35.03677368 -150.40148926]
[39.97279739 -164.45442200]
[29.54716492 -176.35470581]
[34.48318863 -190.40763855]
[31.37907982 -205.08294678]
[28.27496910 -219.75825500]
[24.57383347 -205.22203064]
[17.77173615 -191.85298157]
[8.20056438 -180.30340576]
[-3.67268133 -171.13684082]
[-17.26867867 -164.80052185]
[-31.92404938 -161.60363770]
[-46.92372513 -161.70216370]
[-61.53583908 -165.09127808]
[-75.04743195 -171.60562134]
[-86.79924774 -180.92736816]
[-96.21788788 -192.60166931]
[-102.84378815 -206.05891418]
[-106.35366821 -220.64248657]
[-106.57626343 -235.64083862]
[-103.50072479 -250.32215881]
[-97.27709961 -263.97009277]
[-88.20906067 -275.91876221]
[-76.73905182 -285.58514404]
[-63.42673492 -292.49761963]
[-48.92163086 -296.31887817]
[-33.93148422 -296.86248779]
[-19.18769646 -294.10192871]
[-5.40964890 -288.17187500]
[6.73039722 -279.36169434]
[16.64010239 -268.10125732]
[23.83594894 -254.93994141]
[27.96572685 -240.52648926]
[30.63152313 -255.28770447]
[33.29731750 -270.04891968]
[35.96311188 -284.81015015]
[38.62891006 -299.57135010]
[41.29470444 -314.33258057]
[27.43452644 -320.23538208]
[15.23565769 -329.07479858]
[5.30998802 -340.40747070]
[-1.84461486 -353.66488647]
[-5.86927938 -368.18209839]
[-6.56212950 -383.23095703]
[-3.88841271 -398.05657959]
[2.01775885 -411.91531372]
[10.86013412 -424.11206055]
[22.19518280 -434.03497314]
[35.45434189 -441.18637085]
[49.97254181 -445.20751953]
[65.02155304 -445.89669800]
[79.84652710 -443.21939087]
[93.70384216 -437.30987549]
[105.89842224 -428.46453857]
[115.81860352 -417.12707520]
[122.96678162 -403.86621094]
[126.98440552 -389.34701538]
[127.66996765 -374.29785156]
[124.98906708 -359.47351074]
[119.07617950 -345.61764526]
[110.22789001 -333.42520142]
[98.88803864 -323.50778198]
[85.62541199 -316.36279297]
[71.10526276 -312.34869385]
[56.05592346 -311.66677856]
[53.39012527 -296.90557861]
[50.72433090 -282.14434814]
[48.05853653 -267.38311768]
[45.39273834 -252.62191772]
[42.72694397 -237.86070251]
[42.95027161 -222.86236572]
[46.05438232 -208.18705750]
[49.15849304 -193.51174927]
[59.36209869 -182.66114807]
[54.64809799 -167.55853271]
[64.85170746 -156.70793152]
[60.13770676 -141.60531616]
[63.24181747 -126.93001556]
[66.34592438 -112.25471497]
[69.45003510 -97.57941437]
[72.55414581 -82.90411377]
[82.51818085 -76.04520416]
[85.22436523 -63.84436798]
[78.68949127 -52.72419739]
[81.57476807 -38.00430679]
[84.46003723 -23.28441429]
[96.92607880 -15.21388531]
[100.06184387 -0.32692397]
[91.51220703 12.69388580]
[94.39748383 27.41377640]
[98.76888275 33.37302399]
[97.21441650 42.37421799]
[99.88021851 57.13543320]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[126.03106689 132.25137329]
[133.10292053 145.73626709]
[130.90437317 160.62351990]
[120.48588562 171.23451233]
[123.15167999 185.99572754]
[125.81748199 200.75694275]
[138.64244080 205.80778503]
[147.22886658 216.45166016]
[149.41720581 229.84123230]
[144.74140930 242.46189880]
[134.52310181 251.05422974]
[136.96882629 265.85351562]
[139.41455078 280.65277100]
[141.86027527 295.45205688]
[144.30601501 310.25131226]
[147.08161926 324.99227905]
[150.18572998 339.66757202]
[153.28984070 354.34289551]
[166.25245667 362.98049927]
[169.19142151 377.90756226]
[160.87689209 390.21218872]
[163.98100281 404.88751221]
[167.08511353 419.56280518]
[170.18922424 434.23809814]
[180.61485291 446.13839722]
[175.67883301 460.19131470]
[178.78294373 474.86663818]
[193.79914856 474.15267944]
[208.73541260 475.85690308]
[223.20483398 479.93511963]
[236.83262634 486.28173828]
[249.26580811 494.73229980]
[260.18231201 505.06796265]
[269.29940796 517.02099609]
[276.38088989 530.28179932]
[281.24337769 544.50683594]
[283.76089478 559.32769775]
[283.86822510 574.36053467]
[281.56262207 589.21582031]
[276.90377808 603.50885010]
[270.01239014 616.86944580]
[261.06692505 628.95147705]
[250.29911804 639.44195557]
[237.98788452 648.06921387]
[224.45210266 654.60974121]
[210.04238892 658.89422607]
[195.13198853 660.81152344]
[180.10711670 660.31213379]
[165.35696411 657.40887451]
[151.26356506 652.17700195]
[138.19200134 644.75201416]
[126.48085022 635.32623291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 185]
[13 184]
[15 182]
[16 181]
[17 180]
[18 179]
[21 176]
[22 175]
[23 174]
[27 173]
[28 172]
[29 171]
[30 170]
[31 169]
[35 164]
[36 163]
[37 162]
[41 158]
[42 157]
[44 155]
[45 154]
[46 153]
[47 152]
[48 150]
[49 149]
[52 146]
[53 145]
[54 144]
[56 141]
[57 140]
[58 139]
[59 138]
[60 137]
[62 135]
[64 133]
[65 132]
[66 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
