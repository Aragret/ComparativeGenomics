%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[173.43002319 366.66534424]
[166.55061340 353.33590698]
[159.67118835 340.00646973]
[152.79177856 326.67706299]
[151.34963989 341.60757446]
[143.64636230 354.47845459]
[131.16932678 362.80453491]
[116.32765961 364.97817993]
[101.98704529 360.57968140]
[90.91642761 350.45834351]
[85.25338745 336.56842041]
[86.09134674 321.59185791]
[93.26853180 308.42034912]
[105.39912415 299.59716797]
[120.14089966 296.82589722]
[134.64746094 300.64163208]
[146.11857605 310.30862427]
[141.71757507 295.96875000]
[137.31657410 281.62890625]
[132.91558838 267.28906250]
[128.51458740 252.94921875]
[117.38362122 243.05220032]
[120.73143768 227.58926392]
[116.33043671 213.24940491]
[111.92944336 198.90956116]
[107.52844238 184.56971741]
[102.07132721 198.54182434]
[89.98940277 207.43154907]
[75.02639008 208.48431396]
[61.81874466 201.37388611]
[54.45899200 188.30354309]
[55.22763062 173.32325745]
[63.88649750 161.07481384]
[77.75254059 155.35356140]
[92.52922058 157.93226624]
[103.63795471 168.01211548]
[101.19223022 153.21284485]
[98.74650574 138.41357422]
[96.30077362 123.61431122]
[93.85504913 108.81504059]
[88.81813049 94.68601227]
[81.35038757 81.67705536]
[67.76970673 73.56068420]
[68.14371490 58.67077255]
[60.67597580 45.66181946]
[53.20823669 32.65287018]
[45.74049377 19.64391518]
[31.96415901 19.19290543]
[20.30215836 12.05033875]
[13.74474335 0.17305420]
[13.91109180 -13.28489780]
[20.65081406 -24.80957794]
[13.37758446 -37.92827225]
[6.10435534 -51.04696655]
[-1.16887438 -64.16565704]
[-8.44210339 -77.28435516]
[-15.71533298 -90.40304565]
[-22.98856354 -103.52174377]
[-22.26188660 -88.53935242]
[-24.84214592 -73.76294708]
[-30.60344505 -59.91349030]
[-39.26467514 -47.66673279]
[-50.40323639 -37.62021637]
[-63.47565842 -30.26414108]
[-77.84410095 -25.95742035]
[-92.80749512 -24.91018867]
[-107.63575745 -27.17354393]
[-121.60536957 -32.63705444]
[-134.03472900 -41.03413773]
[-144.31738281 -51.95508575]
[-151.95159912 -64.86704254]
[-156.56492615 -79.13999939]
[-157.93222046 -94.07755280]
[-155.98681641 -108.95085907]
[-150.82359314 -123.03422546]
[-142.69450378 -135.64048767]
[-131.99617004 -146.15457153]
[-119.25060272 -154.06344604]
[-105.07967377 -158.98123169]
[-90.17481232 -160.66799927]
[-75.26326752 -159.04141235]
[-61.07259750 -154.18086243]
[-48.29520798 -146.32348633]
[-37.55452728 -135.85267639]
[-29.37759590 -123.28524017]
[-31.16006088 -138.17895508]
[-32.94252777 -153.07267761]
[-34.72499466 -167.96638489]
[-49.70706558 -169.54284668]
[-63.96254730 -174.41409302]
[-76.77638245 -182.33580017]
[-87.50583649 -192.91059875]
[-95.61272430 -205.60809326]
[-100.69041443 -219.79135132]
[-102.48419952 -234.74894714]
[-100.90411377 -249.73065186]
[-96.02941132 -263.98495483]
[-88.10460663 -276.79684448]
[-77.52719879 -287.52374268]
[-64.82775116 -295.62756348]
[-50.64326477 -300.70181274]
[-35.68522263 -302.49197388]
[-20.70391464 -300.90826416]
[-6.45079803 -296.03012085]
[6.35919714 -288.10220337]
[17.08352661 -277.52218628]
[25.18426132 -264.82077026]
[30.25507545 -250.63507080]
[32.04161453 -235.67658997]
[30.45426941 -220.69566345]
[25.57266045 -206.44372559]
[17.64164543 -193.63565063]
[7.05904293 -182.91389465]
[-5.64432955 -174.81623840]
[-19.83127594 -169.74885559]
[-18.04880905 -154.85513306]
[-16.26634407 -139.96142578]
[-14.48387814 -125.06770325]
[-9.86986828 -110.79497528]
[-2.59663916 -97.67627716]
[4.67659044 -84.55758667]
[11.94981956 -71.43888855]
[19.22304916 -58.32019424]
[26.49627876 -45.20149994]
[33.76950836 -32.08280945]
[50.11875916 -30.60648346]
[62.49039078 -19.56544685]
[65.87681580 -3.16320920]
[58.74944687 12.17617512]
[66.21718597 25.18512726]
[73.68492889 38.19408035]
[81.15267181 51.20303345]
[94.19921112 58.38891983]
[94.35934448 74.20931244]
[101.82707977 87.21826935]
[100.90690613 72.24652100]
[103.54795837 57.48085403]
[109.60087585 43.75634384]
[118.72334290 31.84917831]
[130.39942932 22.43276024]
[143.96881104 16.03963852]
[158.66406250 13.03137112]
[173.65408325 13.57809353]
[188.09114075 17.64888382]
[201.15875244 25.01352119]
[212.11784363 35.25549698]
[220.34866333 47.79557800]
[225.38569641 61.92456436]
[226.94409180 76.84339142]
[224.93569946 91.70832825]
[219.47410583 105.67869568]
[210.86819458 117.96438599]
[199.60467529 127.87059784]
[186.32054138 134.83708191]
[171.76708984 138.46986389]
[156.76737976 138.56346130]
[142.16972351 135.11260986]
[128.79968262 128.31245422]
[117.41340637 118.54758453]
[108.65431976 106.36930847]
[111.10004425 121.16857910]
[113.54577637 135.96784973]
[115.99150085 150.76712036]
[118.43722534 165.56639099]
[121.86828613 180.16871643]
[126.26928711 194.50856018]
[130.67028809 208.84840393]
[135.07128906 223.18826294]
[146.51702881 234.11096191]
[142.85443115 248.54821777]
[147.25543213 262.88806152]
[151.65643311 277.22790527]
[156.05741882 291.56777954]
[160.45841980 305.90762329]
[166.12121582 319.79763794]
[173.00062561 333.12707520]
[179.88003540 346.45651245]
[186.75944519 359.78591919]
[201.14147949 355.38171387]
[216.07879639 353.61648560]
[231.09126282 354.54699707]
[245.69625854 358.14337158]
[259.42431641 364.28991699]
[271.83410645 372.78915405]
[282.52673340 383.36776733]
[291.15847778 395.68576050]
[297.45184326 409.34713745]
[301.20452881 423.91275024]
[302.29589844 438.91436768]
[300.69088745 453.86978149]
[296.44107056 468.29818726]
[289.68307495 481.73577881]
[280.63415527 493.75061035]
[269.58514404 503.95648193]
[256.89126587 512.02526855]
[242.96057129 517.69763184]
[228.24087524 520.79113770]
[213.20533752 521.20648193]
[198.33731079 518.93023682]
[184.11471558 514.03558350]
[170.99476624 506.67984009]
[159.39923096 497.09948730]
[149.70082092 485.60247803]
[142.21131897 472.55844116]
[137.17149353 458.38665771]
[134.74333191 443.54266357]
[135.00489807 428.50366211]
[137.94779968 413.75311279]
[143.47740173 399.76513672]
[151.41598511 386.98944092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 176]
[4 175]
[17 174]
[18 173]
[19 172]
[20 171]
[21 170]
[23 168]
[24 167]
[25 166]
[26 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 135]
[42 134]
[44 132]
[45 131]
[46 130]
[47 129]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[57 120]
[58 119]
[85 118]
[86 117]
[87 116]
[88 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
