%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[94.92520142 288.56420898]
[92.73103333 273.71887207]
[91.61380005 258.75393677]
[91.57931519 243.74739075]
[92.62776947 228.77746582]
[94.75368500 213.92222595]
[97.94599152 199.25910950]
[102.18804169 184.86457825]
[107.45771027 170.81365967]
[113.72753143 157.17961121]
[120.96481323 144.03352356]
[129.13183594 131.44393921]
[117.16949463 122.39394379]
[105.20716095 113.34394836]
[91.35788727 111.42318726]
[85.74284363 98.61839294]
[73.78050232 89.56838989]
[65.04866028 86.88646698]
[61.70877457 80.29351807]
[49.88250351 71.06642151]
[38.05623627 61.83932495]
[26.22996521 52.61222458]
[14.40369511 43.38512802]
[4.48296499 54.64188766]
[-6.09321070 65.28519440]
[-17.28697205 75.27695465]
[-29.05824852 84.58139038]
[-41.36490250 93.16520691]
[-54.16287613 100.99765778]
[-67.40635681 108.05072021]
[-81.04794312 114.29914093]
[-95.03878784 119.72055054]
[-109.32881927 124.29554749]
[-123.86687469 128.00775146]
[-138.60092163 130.84387207]
[-153.47819519 132.79374695]
[-168.44546509 133.85041809]
[-183.44912720 134.01008606]
[-198.43548584 133.27217102]
[-213.35089111 131.63934326]
[-228.14195251 129.11743164]
[-242.75572205 125.71546173]
[-257.13986206 121.44561768]
[-271.24291992 116.32317352]
[-285.01440430 110.36647797]
[-298.40496826 103.59685516]
[-311.36672974 96.03852844]
[-323.85327148 87.71856689]
[-335.81991577 78.66674042]
[-347.22375488 68.91546631]
[-358.02404785 58.49964523]
[-368.18209839 47.45656204]
[-377.66152954 35.82574844]
[-386.42843628 23.64884186]
[-394.45138550 10.96943283]
[-401.70172119 -2.16709042]
[-408.15347290 -15.71370220]
[-413.78350830 -29.62190819]
[-418.57168579 -43.84191895]
[-422.50088501 -58.32283401]
[-425.55703735 -73.01281738]
[-427.72918701 -87.85926819]
[-429.00958252 -102.80905914]
[-429.39358521 -117.80866241]
[-428.87991333 -132.80438232]
[-427.47030640 -147.74253845]
[-425.16989136 -162.56965637]
[-421.98684692 -177.23266602]
[-417.93258667 -191.67906189]
[-413.02163696 -205.85714722]
[-407.27154541 -219.71615601]
[-400.70294189 -233.20648193]
[-393.33929443 -246.27983093]
[-385.20700073 -258.88940430]
[-376.33514404 -270.99005127]
[-366.75549316 -282.53848267]
[-356.50238037 -293.49331665]
[-345.61242676 -303.81536865]
[-334.12469482 -313.46768188]
[-322.08026123 -322.41571045]
[-309.52224731 -330.62741089]
[-296.49560547 -338.07336426]
[-283.04699707 -344.72698975]
[-269.22454834 -350.56439209]
[-255.07772827 -355.56469727]
[-240.65719604 -359.71002197]
[-226.01457214 -362.98550415]
[-211.20225525 -365.37945557]
[-196.27328491 -366.88327026]
[-181.28111267 -367.49157715]
[-166.27937317 -367.20217896]
[-151.32180786 -366.01614380]
[-136.46194458 -363.93771362]
[-121.75297546 -360.97430420]
[-107.24755859 -357.13656616]
[-92.99761963 -352.43817139]
[-79.05416870 -346.89599609]
[-65.46711731 -340.52987671]
[-52.28511047 -333.36257935]
[-39.55533600 -325.41976929]
[-27.32335663 -316.72985840]
[-15.63296604 -307.32400513]
[-4.52601147 -297.23583984]
[5.95774746 -286.50149536]
[15.78078175 -275.15936279]
[24.90792465 -263.25009155]
[33.30650711 -250.81629944]
[40.94646072 -237.90248108]
[47.80043793 -224.55488586]
[53.84390640 -210.82127380]
[59.05522537 -196.75082397]
[63.41574097 -182.39389038]
[66.90985107 -167.80187988]
[69.52503204 -153.02702332]
[71.25193787 -138.12222290]
[72.08438110 -123.14080811]
[72.01938629 -108.13643646]
[71.05717468 -93.16280365]
[69.20119476 -78.27351379]
[66.45809937 -63.52187347]
[62.83769989 -48.96068573]
[58.35295868 -34.64207458]
[53.01992798 -20.61730003]
[46.85770035 -6.93656588]
[39.88834000 6.35115385]
[32.13678741 19.19829178]
[23.63079262 31.55885887]
[35.45706177 40.78595734]
[47.28333282 50.01305389]
[59.10960388 59.24015427]
[70.93587494 68.46725464]
[82.83050537 77.60605621]
[94.79283905 86.65605164]
[108.64211273 88.57681274]
[114.25715637 101.38160706]
[126.21949768 110.43161011]
[138.18183899 119.48161316]
[148.07559204 108.19837189]
[158.75772095 97.65847015]
[170.17256165 87.91683960]
[182.26057434 79.02427673]
[194.95875549 71.02714539]
[208.20088196 63.96714020]
[221.91792297 57.88106155]
[236.03837585 52.80064774]
[250.48861694 48.75238037]
[265.19329834 45.75737000]
[280.07577515 43.83122635]
[295.05841064 42.98399734]
[310.06314087 43.22009659]
[325.01171875 44.53829193]
[339.82623291 46.93171310]
[354.42941284 50.38788223]
[368.74511719 54.88877869]
[382.69873047 60.41093826]
[396.21749878 66.92556763]
[409.23095703 74.39870453]
[421.67123413 82.79138947]
[433.47351074 92.05986023]
[444.57620239 102.15579987]
[454.92144775 113.02657318]
[464.45529175 124.61550140]
[473.12808228 136.86216736]
[480.89453125 149.70271301]
[487.71423340 163.07020569]
[493.55154419 176.89494324]
[498.37609863 191.10485840]
[502.16268921 205.62585449]
[504.89160156 220.38223267]
[506.54864502 235.29705811]
[507.12509155 250.29257202]
[506.61801147 265.29058838]
[505.03002930 280.21292114]
[502.36941528 294.98178101]
[498.65005493 309.52014160]
[493.89132690 323.75222778]
[488.11804199 337.60382080]
[481.36029053 351.00271606]
[473.65332031 363.87908936]
[465.03729248 376.16574097]
[455.55715942 387.79864502]
[445.26232910 398.71719360]
[434.20648193 408.86437988]
[422.44723511 418.18737793]
[410.04592896 426.63754272]
[397.06719971 434.17080688]
[383.57870483 440.74792480]
[369.65078735 446.33459473]
[355.35604858 450.90167236]
[340.76904297 454.42538452]
[325.96575928 456.88732910]
[311.02343750 458.27468872]
[296.01995850 458.58023071]
[281.03353882 457.80233765]
[266.14233398 455.94506836]
[251.42395020 453.01812744]
[236.95513916 449.03677368]
[222.81132507 444.02175903]
[209.06626892 437.99920654]
[195.79161072 431.00054932]
[183.05656433 423.06225586]
[170.92752075 414.22573853]
[159.46774292 404.53704834]
[148.73693848 394.04666138]
[138.79107666 382.80932617]
[129.68200684 370.88363647]
[121.45722961 358.33169556]
[114.15960693 345.21902466]
[107.82719421 331.61392212]
[102.49301147 317.58737183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 137]
[13 136]
[14 135]
[16 133]
[17 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
