%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[84.25806427 863.13769531]
[69.26522827 862.46752930]
[54.37119675 860.62316895]
[39.66778564 857.61584473]
[25.24565315 853.46417236]
[11.19371605 848.19378662]
[-2.40138984 841.83715820]
[-15.45584393 834.43341064]
[-27.88916016 826.02825928]
[-39.62468338 816.67346191]
[-50.59005737 806.42675781]
[-60.71767807 795.35131836]
[-69.94510651 783.51544189]
[-78.21544647 770.99200439]
[-85.47770691 757.85833740]
[-91.68711853 744.19537354]
[-96.80539703 730.08728027]
[-100.80098724 715.62115479]
[-103.64924622 700.88610840]
[-105.33261871 685.97302246]
[-105.84073639 670.97381592]
[-105.17044830 655.98101807]
[-103.32589722 641.08697510]
[-100.31845093 626.38360596]
[-96.16665649 611.96148682]
[-90.89611053 597.90960693]
[-84.53930664 584.31457520]
[-77.13543701 571.26019287]
[-68.73014832 558.82696533]
[-59.37526703 547.09155273]
[-49.12846375 536.12628174]
[-38.05292130 525.99877930]
[-26.21691895 516.77148438]
[-13.69343281 508.50125122]
[-0.55967599 501.23913574]
[13.10337734 495.02984619]
[27.21148872 489.91171265]
[41.67767334 485.91629028]
[56.41274643 483.06817627]
[71.32585907 481.38494873]
[86.32505798 480.87698364]
[79.16378021 467.81692505]
[87.50957489 454.37600708]
[88.17935944 439.39096069]
[88.84914398 424.40591431]
[89.51892853 409.42089844]
[89.96553040 394.42752075]
[90.18885803 379.42919922]
[82.64190674 366.58813477]
[90.58381653 352.90469360]
[90.80714417 337.90634155]
[91.03047180 322.90802002]
[91.25379944 307.90966797]
[91.47712708 292.91134644]
[76.44240570 289.33618164]
[62.57018280 282.50967407]
[50.55404663 272.76968384]
[40.99555206 260.59979248]
[34.37409973 246.60540771]
[31.02289391 231.48350525]
[31.11218452 215.98802185]
[34.64060593 200.89218140]
[41.43510437 186.94996643]
[51.15941238 174.85847473]
[63.33069611 165.22299194]
[77.34352875 158.52676392]
[92.50000000 155.10671997]
[92.50000000 140.10671997]
[92.50000000 125.10671997]
[92.50000000 110.10671997]
[92.16502380 95.11045837]
[91.49523926 80.12541962]
[83.14944458 66.68450165]
[90.31072998 53.62443542]
[87.08036041 47.85587692]
[87.22625732 42.17470169]
[89.85082245 38.18463135]
[89.62749481 23.18629265]
[81.68558502 9.50284672]
[89.23253632 -3.33821154]
[81.29063416 -17.02165794]
[88.83758545 -29.86271477]
[88.61425781 -44.86105347]
[88.39093018 -59.85939026]
[88.16760254 -74.85772705]
[87.49781799 -89.84276581]
[86.38217163 -104.80122375]
[85.26651764 -119.75967407]
[84.15087128 -134.71812439]
[69.24170685 -136.84669495]
[55.13883972 -142.13095093]
[42.50189972 -150.32373047]
[31.92193222 -161.04187012]
[23.89378357 -173.78404236]
[18.79294586 -187.95426941]
[16.85799217 -202.88980103]
[18.17942429 -217.89205933]
[22.69543648 -232.25936890]
[30.19480896 -245.31974792]
[40.32677841 -256.46234131]
[52.61745834 -265.16598511]
[66.49198914 -271.02359009]
[81.30142975 -273.76116943]
[96.35312653 -273.25070190]
[110.94307709 -269.51608276]
[124.38888550 -262.73196411]
[136.06166077 -253.21563721]
[145.41545105 -241.41221619]
[152.01275635 -227.87377930]
[155.54502869 -213.23352051]
[155.84703064 -198.17619324]
[152.90466309 -183.40606689]
[146.85551453 -169.61396790]
[137.98254395 -157.44497681]
[126.70074463 -147.46826172]
[113.53778839 -140.15043640]
[99.10932159 -135.83377075]
[100.22497559 -120.87532043]
[101.34062195 -105.91687012]
[102.45626831 -90.95841217]
[104.48992920 -89.02907562]
[105.88188934 -86.17791748]
[106.27720642 -82.64533997]
[105.41445923 -78.79563904]
[103.16593933 -75.08105469]
[103.38926697 -60.08271790]
[103.61259460 -45.08438110]
[103.83592224 -30.08604240]
[111.76185608 -17.47537804]
[104.23088074 -3.56153941]
[112.15680695 9.04912472]
[104.62583160 22.96296501]
[104.84915924 37.96130371]
[105.29576874 52.95465088]
[113.59365082 65.32373810]
[106.48027802 79.45563507]
[107.15006256 94.44067383]
[109.59850311 97.42019653]
[110.72171783 101.46447754]
[110.07363892 105.95747375]
[107.50000000 110.10671997]
[107.50000000 125.10671997]
[107.50000000 140.10671997]
[107.50000000 155.10671997]
[121.74363708 158.21690369]
[135.02055359 164.22534180]
[146.74847412 172.86572266]
[156.41368103 183.75643921]
[163.59344482 196.41732788]
[167.97450256 210.29092407]
[169.36683655 224.76695251]
[167.71176147 239.20918274]
[163.08451843 252.98342896]
[155.69081116 265.48532104]
[145.85762024 276.16693115]
[134.01882935 284.56066895]
[120.69599915 290.29986572]
[106.47546387 293.13467407]
[106.25213623 308.13299561]
[106.02880859 323.13134766]
[105.80548096 338.12966919]
[105.58215332 353.12802124]
[113.11312866 367.04187012]
[105.18719482 379.65252686]
[104.96386719 394.65084839]
[107.84515381 400.60147095]
[107.36137390 406.26388550]
[104.50396729 410.09066772]
[103.83418274 425.07571411]
[103.16439819 440.06076050]
[102.49461365 455.04577637]
[109.60798645 469.17767334]
[101.31009674 481.54678345]
[116.20417023 483.39086914]
[130.90763855 486.39785767]
[145.32986450 490.54922485]
[159.38191223 495.81933594]
[172.97714233 502.17572021]
[186.03175354 509.57919312]
[198.46524048 517.98406982]
[210.20094299 527.33862305]
[221.16653442 537.58508301]
[231.29437256 548.66033936]
[240.52204895 560.49603271]
[248.79264832 573.01928711]
[256.05517578 586.15277100]
[262.26486206 599.81567383]
[267.38342285 613.92364502]
[271.37930298 628.38970947]
[274.22787476 643.12469482]
[275.91156006 658.03771973]
[276.41998291 673.03692627]
[275.75000000 688.02972412]
[273.90573120 702.92382812]
[270.89859009 717.62725830]
[266.74710083 732.04943848]
[261.47683716 746.10144043]
[255.12031555 759.69659424]
[247.71670532 772.75109863]
[239.31167603 785.18450928]
[229.95703125 796.92010498]
[219.71046448 807.88562012]
[208.63511658 818.01336670]
[196.79930115 827.24090576]
[184.27598572 835.51135254]
[171.14237976 842.77374268]
[157.47946167 848.98333740]
[143.37144470 854.10174561]
[128.90534973 858.09747314]
[114.17033386 860.94586182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 173]
[43 171]
[44 170]
[45 169]
[46 168]
[47 165]
[48 164]
[50 162]
[51 161]
[52 160]
[53 159]
[54 158]
[67 144]
[68 143]
[69 142]
[70 141]
[71 137]
[72 136]
[74 134]
[77 133]
[78 132]
[80 130]
[82 128]
[83 127]
[84 126]
[85 125]
[86 120]
[87 119]
[88 118]
[89 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
