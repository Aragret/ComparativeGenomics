%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[79.77852631 954.94134521]
[64.80091858 954.08154297]
[49.87329483 952.58685303]
[35.02256012 950.45996094]
[20.27547455 947.70471191]
[5.65861368 944.32598877]
[-8.80168247 940.33001709]
[-23.07935524 935.72393799]
[-37.14867401 930.51605225]
[-50.98428726 924.71569824]
[-64.56125641 918.33337402]
[-77.85512543 911.38061523]
[-90.84192657 903.86987305]
[-103.49826813 895.81475830]
[-115.80133057 887.22973633]
[-127.72895050 878.13031006]
[-139.25962830 868.53283691]
[-150.37258911 858.45458984]
[-161.04780579 847.91381836]
[-171.26605225 836.92950439]
[-181.00888062 825.52136230]
[-190.25877380 813.71008301]
[-198.99903870 801.51678467]
[-207.21392822 788.96356201]
[-214.88864136 776.07299805]
[-222.00933838 762.86828613]
[-228.56321716 749.37329102]
[-234.53843689 735.61230469]
[-239.92424011 721.61016846]
[-244.71090698 707.39196777]
[-248.88984680 692.98352051]
[-252.45349121 678.41064453]
[-255.39543152 663.69964600]
[-257.71038818 648.87707520]
[-259.39416504 633.96960449]
[-260.44372559 619.00408936]
[-260.85717773 604.00750732]
[-260.63378906 589.00689697]
[-259.77395630 574.02929688]
[-258.27923584 559.10168457]
[-256.15231323 544.25091553]
[-253.39701843 529.50384521]
[-250.01832581 514.88702393]
[-246.02232361 500.42672729]
[-241.41621399 486.14904785]
[-236.20828247 472.07974243]
[-230.40792847 458.24414062]
[-224.02560425 444.66717529]
[-217.07279968 431.37332153]
[-209.56205750 418.38653564]
[-201.50689697 405.73019409]
[-192.92185974 393.42715454]
[-183.82238770 381.49954224]
[-174.22489929 369.96887207]
[-164.14668274 358.85592651]
[-153.60589600 348.18072510]
[-142.62153625 337.96252441]
[-131.21340942 328.21969604]
[-119.40206146 318.96984863]
[-107.20877838 310.22958374]
[-94.65553284 302.01470947]
[-81.76495361 294.34002686]
[-68.56025696 287.21932983]
[-55.06525803 280.66549683]
[-41.30426025 274.69030762]
[-27.30206490 269.30450439]
[-13.08390903 264.51785278]
[1.32458818 260.33895874]
[15.89745998 256.77532959]
[30.60844612 253.83340454]
[45.43103790 251.51849365]
[60.33852005 249.83474731]
[75.30403137 248.78520203]
[90.30059814 248.37176514]
[90.52392578 233.37342834]
[90.74725342 218.37509155]
[90.97058105 203.37675476]
[91.19390869 188.37841797]
[91.41723633 173.38008118]
[91.64056396 158.38174438]
[81.11449432 147.90618896]
[81.12731934 132.69255066]
[92.18642426 121.72286987]
[92.40975189 106.72453308]
[89.37137604 99.25855255]
[92.74971008 91.50498962]
[93.19631958 76.51164246]
[93.64292908 61.51829147]
[82.01099396 70.98920441]
[67.07561493 69.59837341]
[57.39244843 58.14253235]
[58.50845718 43.18410492]
[69.78433228 33.29195786]
[84.76074982 34.13276672]
[94.85820770 45.22397995]
[96.64067078 30.33026123]
[90.59808350 15.70843887]
[99.79295349 3.99077821]
[101.57542419 -10.90293884]
[87.68476105 -16.83811188]
[76.02978516 -26.44738388]
[67.55529785 -38.95177460]
[62.94829941 -53.33760834]
[62.58224869 -68.43869019]
[66.48683167 -83.03084564]
[74.34550476 -95.93115234]
[85.52121735 -106.09383392]
[99.10799408 -112.69505310]
[114.00442505 -115.19968414]
[129.00291443 -113.40467834]
[142.88760376 -107.45555878]
[154.53291321 -97.83457947]
[162.99484253 -85.32167816]
[167.58738708 -70.93122864]
[167.93826294 -55.82978439]
[164.01902771 -41.24156189]
[156.14739990 -28.34915733]
[144.96147156 -18.19770432]
[131.36807251 -11.61013508]
[116.46913910 -9.12047291]
[114.68667603 5.77324438]
[120.85675812 19.32976913]
[111.53439331 32.11272812]
[109.75192261 47.00644684]
[108.63627625 61.96489716]
[108.18966675 76.95825195]
[107.74306488 91.95159912]
[107.40808868 106.94786072]
[107.18476105 121.94619751]
[117.91235352 133.24029541]
[117.47220612 148.44755554]
[106.63890076 158.60507202]
[106.41557312 173.60340881]
[106.19224548 188.60174561]
[105.96891785 203.60008240]
[105.74559021 218.59841919]
[105.52226257 233.59675598]
[105.29893494 248.59509277]
[120.27655029 249.45484924]
[135.20417786 250.94950867]
[150.05491638 253.07635498]
[164.80201721 255.83157349]
[179.41888428 259.21020508]
[193.87919617 263.20611572]
[208.15687561 267.81216431]
[222.22621155 273.02005005]
[236.06184387 278.82031250]
[249.63883972 285.20257568]
[262.93273926 292.15533447]
[275.91955566 299.66601562]
[288.57592773 307.72109985]
[300.87899780 316.30609131]
[312.80667114 325.40548706]
[324.33737183 335.00292969]
[335.45037842 345.08108521]
[346.12561035 355.62182617]
[356.34390259 366.60614014]
[366.08676147 378.01422119]
[375.33670044 389.82553101]
[384.07699585 402.01876831]
[392.29193115 414.57196045]
[399.96667480 427.46252441]
[407.08743286 440.66717529]
[413.64132690 454.16213989]
[419.61660767 467.92309570]
[425.00244141 481.92529297]
[429.78918457 496.14340210]
[433.96813965 510.55187988]
[437.53182983 525.12475586]
[440.47384644 539.83569336]
[442.78881836 554.65826416]
[444.47265625 569.56579590]
[445.52224731 584.53125000]
[445.93576050 599.52783203]
[445.71243286 614.52844238]
[444.85263062 629.50604248]
[443.35797119 644.43365479]
[441.23110962 659.28442383]
[438.47586060 674.03149414]
[435.09719849 688.64837646]
[431.10125732 703.10870361]
[426.49517822 717.38635254]
[421.28729248 731.45568848]
[415.48699951 745.29132080]
[409.10470581 758.86828613]
[402.15194702 772.16217041]
[394.64123535 785.14898682]
[386.58612061 797.80535889]
[378.00112915 810.10839844]
[368.90170288 822.03607178]
[359.30422974 833.56677246]
[349.22607422 844.67974854]
[338.68530273 855.35498047]
[327.70098877 865.57318115]
[316.29287720 875.31604004]
[304.48156738 884.56597900]
[292.28829956 893.30627441]
[279.73510742 901.52117920]
[266.84454346 909.19592285]
[253.63986206 916.31665039]
[240.14488220 922.87054443]
[226.38391113 928.84576416]
[212.38172913 934.23156738]
[198.16358948 939.01831055]
[183.75511169 943.19726562]
[169.18225098 946.76092529]
[154.47126770 949.70288086]
[139.64868164 952.01782227]
[124.74121094 953.70166016]
[109.77570343 954.75122070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
[83 129]
[84 128]
[86 127]
[87 126]
[88 125]
[95 124]
[96 123]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
