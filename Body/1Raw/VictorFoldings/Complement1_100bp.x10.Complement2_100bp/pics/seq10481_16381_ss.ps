%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[180.57843018 946.70910645]
[165.69755554 944.80828857]
[150.89871216 942.34906006]
[136.20285034 939.33489990]
[121.63076782 935.77014160]
[107.20308685 931.65972900]
[92.94022369 927.00952148]
[78.86237335 921.82617188]
[64.98945618 916.11688232]
[51.34111786 909.88983154]
[37.93666458 903.15380859]
[24.79507256 895.91833496]
[11.93494415 888.19372559]
[-0.62552029 879.99078369]
[-12.86854172 871.32116699]
[-24.77679253 862.19720459]
[-36.33341599 852.63171387]
[-47.52206039 842.63836670]
[-58.32688141 832.23120117]
[-68.73258972 821.42498779]
[-78.72446442 810.23498535]
[-88.28834534 798.67706299]
[-97.41071320 786.76757812]
[-106.07865143 774.52337646]
[-114.27988434 761.96179199]
[-122.00281525 749.10064697]
[-129.23649597 735.95806885]
[-135.97071838 722.55267334]
[-142.19592285 708.90350342]
[-147.90330505 695.02984619]
[-153.08479309 680.95129395]
[-157.73304749 666.68780518]
[-161.84147644 652.25952148]
[-165.40429688 637.68695068]
[-168.41644287 622.99072266]
[-170.87365723 608.19152832]
[-172.77247620 593.31042480]
[-174.11018372 578.36840820]
[-174.88488770 563.38659668]
[-175.09552002 548.38629150]
[-174.74177551 533.38873291]
[-173.82412720 518.41503906]
[-172.34390259 503.48645020]
[-170.30317688 488.62411499]
[-167.70486450 473.84906006]
[-164.55261230 459.18222046]
[-160.85090637 444.64431763]
[-156.60498047 430.25592041]
[-151.82083130 416.03744507]
[-146.50523376 402.00897217]
[-140.66572571 388.19036865]
[-134.31056213 374.60122681]
[-127.44874573 361.26071167]
[-120.08998108 348.18777466]
[-112.24468231 335.40087891]
[-103.92395020 322.91815186]
[-95.13957214 310.75720215]
[-85.90398407 298.93530273]
[-76.23023987 287.46917725]
[-66.13204956 276.37503052]
[-55.62369919 265.66860962]
[-44.72006226 255.36500549]
[-33.43657303 245.47883606]
[-21.78919792 236.02410889]
[-9.79442692 227.01417542]
[2.53076410 218.46180725]
[15.16893005 210.37908936]
[28.10218430 202.77749634]
[41.31221771 195.66775513]
[54.78033829 189.05993652]
[68.48748016 182.96340942]
[82.41423798 177.38679504]
[96.54090881 172.33796692]
[110.84749603 167.82409668]
[106.87539673 153.35957336]
[102.90330505 138.89505005]
[98.93120575 124.43052673]
[94.95910645 109.96600342]
[90.87944031 95.53144836]
[86.69242859 81.12767029]
[71.71065521 82.52152252]
[56.73585510 81.05460358]
[42.30936050 76.77993774]
[28.95268250 69.85205078]
[17.14865494 60.52137756]
[7.32398844 49.12521744]
[-0.16616423 36.07553864]
[-5.05103779 21.84407806]
[-7.15404701 6.94529152]
[-6.39916945 -8.08223915]
[-2.81369352 -22.69527626]
[3.47276807 -36.36557007]
[12.23296356 -48.59894562]
[23.15021706 -58.95317459]
[35.82987976 -67.05395508]
[49.81358337 -72.60845947]
[64.59583282 -75.41588593]
[79.64225006 -75.37474823]
[94.40892792 -72.48653412]
[108.36205292 -66.85565948]
[120.99723053 -58.68566513]
[131.85771179 -48.27190018]
[140.55088806 -35.99080658]
[146.76251221 -22.28634644]
[150.26802063 -7.65392208]
[150.94071960 7.37751055]
[148.75628662 22.26457596]
[143.79367065 36.46911621]
[136.23226929 49.47764587]
[126.34544373 60.81991196]
[114.49057007 70.08590698]
[101.09621429 76.94065857]
[105.28322601 91.34443665]
[110.37839508 97.59037781]
[109.42363739 105.99390411]
[113.39572906 120.45843506]
[117.36782837 134.92295837]
[121.33992004 149.38748169]
[125.31201935 163.85200500]
[139.91743469 160.42636108]
[154.64138794 157.55253601]
[169.46301270 155.23457336]
[184.36132812 153.47576904]
[199.31526184 152.27861023]
[214.30364990 151.64479065]
[229.30526733 151.57521057]
[244.29888916 152.06996155]
[259.26327515 153.12835693]
[274.17727661 154.74888611]
[289.01977539 156.92926025]
[303.76974487 159.66638184]
[318.40631104 162.95639038]
[332.90875244 166.79463196]
[347.25659180 171.17565918]
[361.42947388 176.09329224]
[375.40731812 181.54054260]
[389.17041016 187.50971985]
[402.69921875 193.99237061]
[415.97460938 200.97932434]
[428.97778320 208.46069336]
[441.69033813 216.42587280]
[454.09429932 224.86360168]
[466.17208862 233.76193237]
[477.90661621 243.10827637]
[489.28128052 252.88938904]
[500.27999878 263.09146118]
[510.88714600 273.70001221]
[521.08776855 284.70004272]
[530.86743164 296.07598877]
[540.21221924 307.81173706]
[549.10894775 319.89068604]
[557.54504395 332.29577637]
[565.50860596 345.00936890]
[572.98828125 358.01351929]
[579.97344971 371.28982544]
[586.45434570 384.81948853]
[592.42175293 398.58334351]
[597.86718750 412.56192017]
[602.78295898 426.73544312]
[607.16210938 441.08383179]
[610.99841309 455.58679199]
[614.28649902 470.22378540]
[617.02172852 484.97412109]
[619.20013428 499.81689453]
[620.81872559 514.73107910]
[621.87518311 529.69561768]
[622.36798096 544.68933105]
[622.29644775 559.69091797]
[621.66064453 574.67919922]
[620.46154785 589.63299561]
[618.70080566 604.53106689]
[616.38085938 619.35241699]
[613.50512695 634.07598877]
[610.07757568 648.68096924]
[606.10308838 663.14666748]
[601.58728027 677.45263672]
[596.53656006 691.57861328]
[590.95806885 705.50463867]
[584.85968018 719.21093750]
[578.25000000 732.67816162]
[571.13848877 745.88726807]
[563.53515625 758.81945801]
[555.45074463 771.45654297]
[546.89666748 783.78057861]
[537.88513184 795.77410889]
[528.42883301 807.42022705]
[518.54113770 818.70239258]
[508.23605347 829.60461426]
[497.52819824 840.11151123]
[486.43270874 850.20819092]
[474.96527100 859.88043213]
[463.14212036 869.11437988]
[450.98001099 877.89715576]
[438.49612427 886.21618652]
[425.70819092 894.05975342]
[412.63424683 901.41674805]
[399.29281616 908.27673340]
[385.70278931 914.63006592]
[371.88342285 920.46771240]
[357.85421753 925.78143311]
[343.63510132 930.56365967]
[329.24612427 934.80761719]
[314.70773315 938.50738525]
[300.04043579 941.65765381]
[285.26504517 944.25396729]
[270.40243530 946.29266357]
[255.47366333 947.77087402]
[240.49984741 948.68646240]
[225.50219727 949.03820801]
[210.50192261 948.82556152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 119]
[75 118]
[76 117]
[77 116]
[78 115]
[79 113]
[80 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
