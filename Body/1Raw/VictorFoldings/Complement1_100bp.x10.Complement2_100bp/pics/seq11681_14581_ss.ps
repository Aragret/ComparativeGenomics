%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[181.21659851 342.42120361]
[183.75500488 327.62622070]
[187.66770935 313.13397217]
[192.92030334 299.07180786]
[199.46662903 285.56329346]
[207.24917603 272.72714233]
[216.19952393 260.67617798]
[226.23902893 249.51631165]
[216.07548523 238.48443604]
[205.91192627 227.45256042]
[191.59785461 223.33473206]
[187.93774414 207.94271851]
[177.77418518 196.91084290]
[162.92790222 196.55966187]
[152.46347046 185.51654053]
[152.93249512 169.94677734]
[142.76895142 158.91490173]
[135.92489624 156.12550354]
[132.53770447 147.64228821]
[122.53953552 136.46031189]
[112.54136658 125.27834320]
[102.54319000 114.09636688]
[89.32199860 109.54755402]
[86.27483368 95.90180206]
[82.84406281 110.50419617]
[69.35449982 117.06404877]
[55.75014877 110.74568939]
[52.05963516 96.20677185]
[61.00346375 84.16484833]
[75.98705292 83.49613190]
[66.84825134 71.60150146]
[57.70944977 59.70686722]
[48.57064819 47.81223297]
[38.40710068 36.78035736]
[22.98826599 33.23492813]
[18.76399994 18.95190048]
[7.65676641 8.87076187]
[-3.45046735 -1.21037662]
[-14.55770111 -11.29151535]
[-25.66493416 -21.37265396]
[-36.77216721 -31.45379257]
[-47.87940216 -41.53493118]
[-58.89703751 -31.34174538]
[-70.76115417 -22.14760590]
[-83.38144684 -14.02248859]
[-96.66187286 -7.02823210]
[-110.50135803 -1.21806633]
[-124.79457092 3.36378813]
[-139.43273926 6.68246031]
[-154.30442810 8.71269226]
[-169.29649353 9.43903255]
[-184.29479980 8.85595322]
[-199.18522644 6.96789265]
[-213.85443115 3.78921914]
[-228.19076538 -0.65587443]
[-242.08511353 -6.33355808]
[-255.43176270 -13.20061970]
[-268.12908936 -21.20479774]
[-280.08050537 -30.28517151]
[-291.19503784 -40.37263489]
[-301.38806152 -51.39041519]
[-310.58203125 -63.25465393]
[-318.70697021 -75.87506104]
[-325.70104980 -89.15558624]
[-331.51101685 -102.99515533]
[-336.09268188 -117.28843689]
[-339.41113281 -131.92663574]
[-341.44116211 -146.79837036]
[-342.16729736 -161.79043579]
[-341.58401489 -176.78874207]
[-339.69573975 -191.67913818]
[-336.51684570 -206.34829712]
[-332.07156372 -220.68457031]
[-326.39367676 -234.57884216]
[-319.52642822 -247.92538452]
[-311.52206421 -260.62261963]
[-302.44152832 -272.57391357]
[-292.35391235 -283.68826294]
[-281.33599854 -293.88116455]
[-269.47161865 -303.07495117]
[-256.85110474 -311.19973755]
[-243.57048035 -318.19360352]
[-229.73081970 -324.00338745]
[-215.43748474 -328.58483887]
[-200.79922485 -331.90310669]
[-185.92747498 -333.93292236]
[-170.93539429 -334.65884399]
[-155.93710327 -334.07534790]
[-141.04672241 -332.18685913]
[-126.37761688 -329.00778198]
[-112.04141235 -324.56228638]
[-98.14720917 -318.88421631]
[-84.80075836 -312.01675415]
[-72.10363770 -304.01223755]
[-60.15248871 -294.93151855]
[-49.03825378 -284.84375000]
[-38.84553146 -273.82568359]
[-29.65189171 -261.96118164]
[-21.52730560 -249.34054565]
[-14.53360748 -236.05982971]
[-8.72402382 -222.22009277]
[-4.14277077 -207.92669678]
[-0.82471460 -193.28839111]
[1.20489168 -178.41659546]
[1.93060136 -163.42451477]
[1.34689128 -148.42622375]
[-0.54179615 -133.53588867]
[-3.72108674 -118.86682129]
[-8.16678333 -104.53067017]
[-13.84505177 -90.63655090]
[-20.71267509 -77.29019928]
[-28.71738625 -64.59319305]
[-37.79826355 -52.64216614]
[-26.69103050 -42.56102753]
[-15.58379555 -32.47988892]
[-4.47656202 -22.39874840]
[6.63067150 -12.31761074]
[17.73790550 -2.23647165]
[28.84513855 7.84466743]
[43.46951294 10.66902637]
[48.48823929 25.67312431]
[44.61686707 11.18131733]
[47.33154678 -3.57098818]
[56.10811615 -15.73535347]
[69.25196075 -22.96302986]
[84.22521210 -23.85846710]
[98.13676453 -18.24876976]
[108.30052185 -7.21708202]
[112.75401306 7.10654926]
[110.63734436 21.95645523]
[102.35920715 34.46535110]
[89.51799011 42.21796799]
[74.59311676 43.71739578]
[60.46528244 38.67343140]
[69.60408020 50.56806564]
[78.74288940 62.46269989]
[87.88169098 74.35733032]
[97.45681000 85.90363312]
[110.67800140 90.45244598]
[113.72516632 104.09819794]
[123.72333527 115.28016663]
[133.72151184 126.46214294]
[143.71968079 137.64411926]
[153.80082703 148.75135803]
[163.96437073 159.78323364]
[179.52032471 160.58935547]
[189.67045593 171.92204285]
[188.80606079 186.74729919]
[198.96961975 197.77917480]
[214.01065063 202.68606567]
[216.94381714 217.28901672]
[227.10736084 228.32089233]
[237.27090454 239.35276794]
[249.21459961 230.25976562]
[261.95730591 222.32514954]
[275.38702393 215.61866760]
[289.38574219 210.19924927]
[303.83044434 206.11451721]
[318.59417725 203.40037537]
[333.54721069 202.08067322]
[348.55810547 202.16700745]
[363.49496460 203.65861511]
[378.22650146 206.54240417]
[392.62326050 210.79301453]
[406.55871582 216.37309265]
[419.91043091 223.23361206]
[432.56103516 231.31425476]
[444.39932251 240.54403687]
[455.32131958 250.84184265]
[465.23101807 262.11715698]
[474.04132080 274.27087402]
[481.67477417 287.19622803]
[488.06436157 300.77957153]
[493.15386963 314.90161133]
[496.89862061 329.43814087]
[499.26565552 344.26150513]
[500.23419189 359.24136353]
[499.79571533 374.24609375]
[497.95410156 389.14385986]
[494.72549438 403.80368042]
[490.13830566 418.09677124]
[484.23281860 431.89749146]
[477.06097412 445.08456421]
[468.68576050 457.54208374]
[459.18078613 469.16061401]
[448.62957764 479.83801270]
[437.12490845 489.48043823]
[424.76782227 498.00320435]
[411.66696167 505.33132935]
[397.93743896 511.40048218]
[383.69989014 516.15728760]
[369.07949829 519.55993652]
[354.20468140 521.57861328]
[339.20623779 522.19543457]
[324.21591187 521.40509033]
[309.36544800 519.21441650]
[294.78540039 515.64282227]
[280.60388184 510.72155762]
[266.94549561 504.49395752]
[253.93031311 497.01467896]
[241.67268372 488.34951782]
[230.28034973 478.57458496]
[219.85342407 467.77581787]
[210.48355103 456.04806519]
[202.25305176 443.49444580]
[195.23426819 430.22528076]
[189.48889160 416.35714722]
[185.06741333 402.01193237]
[182.00868225 387.31573486]
[180.33956909 372.39764404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 153]
[9 152]
[10 151]
[12 149]
[13 148]
[16 145]
[17 144]
[19 143]
[20 142]
[21 141]
[22 140]
[24 138]
[30 137]
[31 136]
[32 135]
[33 134]
[34 121]
[36 119]
[37 118]
[38 117]
[39 116]
[40 115]
[41 114]
[42 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
