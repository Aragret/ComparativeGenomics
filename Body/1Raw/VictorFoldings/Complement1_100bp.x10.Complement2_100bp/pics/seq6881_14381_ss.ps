%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[103.66622925 721.28393555]
[89.10001373 717.61236572]
[75.13768005 712.07086182]
[62.01813889 704.75427246]
[49.96587753 695.78778076]
[39.18712616 685.32482910]
[29.86632729 673.54443359]
[22.16297150 660.64813232]
[16.20887375 646.85668945]
[12.10591221 632.40606689]
[9.92429829 617.54351807]
[9.70136070 602.52337646]
[11.44091415 587.60260010]
[15.11319351 573.03656006]
[20.65535927 559.07452393]
[27.97257996 545.95532227]
[36.93964767 533.90344238]
[47.40312195 523.12524414]
[59.18396378 513.80499268]
[72.08058167 506.10223389]
[85.87229919 500.14880371]
[100.32312775 496.04653931]
[115.18579102 493.86563110]
[114.96245575 478.86727905]
[114.73912811 463.86895752]
[106.28048706 455.22152710]
[105.97168732 442.72799683]
[114.52350616 433.07244873]
[114.52350616 418.07244873]
[114.52350616 403.07244873]
[113.96529388 388.08285522]
[105.30281830 375.96630859]
[111.99227905 361.62887573]
[110.87662506 346.67044067]
[109.76097870 331.71197510]
[97.01725006 324.04806519]
[91.16068268 310.18572998]
[94.63032532 295.35955811]
[106.29965973 285.30310059]
[105.18401337 270.34463501]
[104.06835938 255.38618469]
[102.95271301 240.42773438]
[101.83706665 225.46926880]
[93.17458344 213.35272217]
[99.86404419 199.01530457]
[91.20156097 186.89875793]
[97.89102173 172.56134033]
[96.77537537 157.60289001]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.38182068 58.47121811]
[87.15670776 43.63717651]
[83.83444214 29.00971603]
[80.51218414 14.38225460]
[77.18992615 -0.24520521]
[72.36328125 13.95703125]
[62.23731232 25.02340889]
[48.51842117 31.08905220]
[33.51848221 31.13179016]
[19.76524734 25.14442444]
[9.57638168 14.13592720]
[4.66888475 -0.03857406]
[5.86975765 -14.99042702]
[12.97663116 -28.19998169]
[24.79187393 -37.44119644]
[39.32440948 -41.15676498]
[54.12524796 -38.72054672]
[66.70018768 -30.54308891]
[74.93074036 -18.00089455]
[74.48413849 -32.99424362]
[74.03752899 -47.98759460]
[73.59092712 -62.98094559]
[62.78949356 -71.02729034]
[58.65482330 -83.64136505]
[62.48345947 -96.14830780]
[72.66338348 -104.04759216]
[72.44005585 -119.04592896]
[64.49814606 -132.72937012]
[72.04509735 -145.57043457]
[71.37531281 -160.55546570]
[70.25966644 -175.51393127]
[69.14402008 -190.47238159]
[60.40174103 -203.65885925]
[67.17099762 -216.92634583]
[55.55392075 -207.43722534]
[40.86041260 -210.45397949]
[33.92198181 -223.75277710]
[39.85337830 -237.53024292]
[54.28219986 -241.63014221]
[66.57124329 -233.03160095]
[66.57124329 -248.03160095]
[66.57124329 -263.03161621]
[66.57124329 -278.03161621]
[66.57124329 -293.03161621]
[66.57124329 -308.03161621]
[52.79737091 -314.60757446]
[43.24744415 -326.51394653]
[39.81760406 -341.38668823]
[43.18885040 -356.27285767]
[52.69181442 -368.21673584]
[66.43968201 -374.84689331]
[81.70279694 -374.84689331]
[95.45066833 -368.21673584]
[104.95362854 -356.27285767]
[108.32487488 -341.38668823]
[104.89503479 -326.51394653]
[95.34510803 -314.60757446]
[81.57124329 -308.03161621]
[81.57124329 -293.03161621]
[81.57124329 -278.03161621]
[81.57124329 -263.03161621]
[81.57124329 -248.03160095]
[81.57124329 -233.03160095]
[82.12944794 -218.04199219]
[90.79193115 -205.92544556]
[84.10247040 -191.58802795]
[85.21812439 -176.62957764]
[86.33377075 -161.67111206]
[88.36743164 -159.74177551]
[89.75938416 -156.89062500]
[90.15470886 -153.35804749]
[89.29195404 -149.50834656]
[87.04344177 -145.79376221]
[94.96936798 -133.18309021]
[87.43839264 -119.26925659]
[87.66172028 -104.27091980]
[100.21893311 -93.08364105]
[100.81134796 -75.93826294]
[88.58427429 -63.42755127]
[89.03088379 -48.43420029]
[89.47748566 -33.44084930]
[89.92409515 -18.44750023]
[91.81738281 -3.56746483]
[95.13964844 11.05999565]
[98.46190643 25.68745613]
[101.78416443 40.31491470]
[107.73122406 26.54420662]
[119.70764160 17.51284218]
[134.58279419 15.58160114]
[148.46836853 21.25530434]
[157.73469543 33.05085754]
[159.95959473 47.88493729]
[154.56146240 61.87994385]
[142.95137024 71.37761688]
[128.16416931 73.89529419]
[114.06520081 68.77485657]
[104.34027100 57.35557175]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[111.73382568 156.48722839]
[112.84947968 171.44569397]
[121.59175873 184.63215637]
[114.82249451 197.89965820]
[123.56477356 211.08613586]
[116.79551697 224.35362244]
[117.91116333 239.31207275]
[119.02681732 254.27053833]
[120.14246368 269.22897339]
[121.25811005 284.18743896]
[134.29013062 292.40161133]
[139.92071533 306.54904175]
[136.18530273 321.12680054]
[124.71943665 330.59631348]
[125.83508301 345.55477905]
[126.95072937 360.51324463]
[135.69300842 373.69970703]
[128.92375183 386.96719360]
[140.54083252 377.47808838]
[155.23432922 380.49484253]
[162.17276001 393.79364014]
[156.24136353 407.57110596]
[141.81254578 411.67098999]
[129.52351379 403.07244873]
[129.52351379 418.07244873]
[129.52351379 433.07244873]
[139.09819031 448.80163574]
[129.73747253 463.64562988]
[129.96080017 478.64395142]
[130.18412781 493.64230347]
[145.10513306 495.37969971]
[159.67169189 499.04992676]
[173.63455200 504.59008789]
[186.75479126 511.90542603]
[198.80790710 520.87078857]
[209.58764648 531.33270264]
[218.90957642 543.11224365]
[226.61415100 556.00775146]
[232.56956482 569.79858398]
[236.67390442 584.24884033]
[238.85693359 599.11120605]
[239.08129883 614.13134766]
[237.34317017 629.05224609]
[233.67227173 643.61865234]
[228.13143921 657.58123779]
[220.81546021 670.70111084]
[211.84954834 682.75384521]
[201.38710022 693.53308105]
[189.60714722 702.85443115]
[176.71125793 710.55841064]
[162.92010498 716.51318359]
[148.46966553 720.61682129]
[133.60722351 722.79913330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 187]
[24 186]
[25 185]
[28 183]
[29 182]
[30 181]
[31 175]
[33 173]
[34 172]
[35 171]
[39 167]
[40 166]
[41 165]
[42 164]
[43 163]
[45 161]
[47 159]
[48 158]
[49 157]
[50 156]
[51 155]
[53 153]
[54 152]
[55 151]
[56 140]
[57 139]
[58 138]
[59 137]
[73 136]
[74 135]
[75 134]
[76 133]
[80 130]
[81 129]
[83 127]
[84 122]
[85 121]
[86 120]
[88 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
