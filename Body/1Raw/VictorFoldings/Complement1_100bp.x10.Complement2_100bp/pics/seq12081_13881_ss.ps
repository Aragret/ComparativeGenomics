%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[21.99751282 343.95446777]
[25.07608414 358.65567017]
[26.28777885 373.62680054]
[25.61348724 388.63174438]
[23.06384468 403.43386841]
[18.67905998 417.79968262]
[12.52828979 431.50265503]
[4.70854044 444.32666016]
[-4.65685987 456.06942749]
[-15.42020512 466.54574585]
[-27.41174126 475.59042358]
[-40.44234467 483.06082153]
[-54.30650711 488.83908081]
[-68.78556824 492.83407593]
[-83.65116882 494.98284912]
[-98.66886139 495.25143433]
[-113.60179138 493.63565063]
[-128.21444702 490.16098022]
[-142.27636719 484.88217163]
[-155.56578064 477.88253784]
[-167.87309265 469.27246094]
[-179.00418091 459.18771362]
[-188.78350830 447.78738403]
[-197.05683899 435.25122070]
[-203.69369507 421.77697754]
[-208.58938599 407.57714844]
[-211.66671753 392.87567139]
[-212.87715149 377.90441895]
[-212.20159912 362.89953613]
[-209.65071106 348.09762573]
[-205.26472473 333.73217773]
[-199.11279297 320.02972412]
[-191.29196167 307.20639038]
[-181.92558289 295.46441650]
[-171.16134644 284.98898315]
[-159.16905212 275.94531250]
[-146.13781738 268.47601318]
[-132.27317810 262.69894409]
[-117.79377747 258.70513916]
[-102.92799377 256.55764771]
[-87.91028595 256.29031372]
[-72.97748566 257.90734863]
[-58.36511993 261.38327026]
[-44.30364227 266.66323853]
[-31.01482010 273.66397095]
[-22.41625595 261.37313843]
[-13.81769276 249.08230591]
[-5.21912861 236.79147339]
[3.37943530 224.50062561]
[11.97799873 212.20979309]
[12.55597591 194.67033386]
[29.30588341 187.02035522]
[37.72050476 174.60285950]
[46.13512039 162.18536377]
[46.12964249 157.40948486]
[49.12428284 152.57945251]
[54.98972702 149.52853394]
[63.77032852 137.36708069]
[72.55093384 125.20562744]
[81.33153534 113.04417419]
[77.36306763 102.49628448]
[78.93779755 91.33712006]
[85.67009735 82.29926300]
[95.91142273 77.59585571]
[107.15393066 78.37863922]
[116.29273224 66.48400116]
[116.70853424 62.16184235]
[118.31637573 58.55915070]
[120.74369812 55.96232605]
[123.56320953 54.50734711]
[126.34667206 54.17496109]
[136.17724609 42.84536743]
[146.00782776 31.51577568]
[137.88760376 18.79013634]
[133.68649292 4.30659628]
[133.73674011 -10.75867939]
[138.02574158 -25.18479156]
[146.19770813 -37.80504990]
[157.58319092 -47.60132599]
[171.25390625 -53.78617859]
[186.09840393 -55.86616135]
[200.91249084 -53.68117523]
[214.49684143 -47.41674805]
[224.32742310 -58.74634171]
[234.15800476 -70.07593536]
[243.98858643 -81.40552521]
[253.81915283 -92.73512268]
[263.64974976 -104.06471252]
[273.48031616 -115.39431000]
[262.93109131 -126.06839752]
[253.22988892 -137.51870728]
[244.43368530 -149.67805481]
[236.59408569 -162.47506714]
[229.75709534 -175.83464050]
[223.96284485 -189.67839050]
[219.24531555 -203.92506409]
[215.63221741 -218.49105835]
[213.14474487 -233.29089355]
[211.79748535 -248.23771667]
[211.59835815 -263.24383545]
[212.54853821 -278.22113037]
[214.64242554 -293.08175659]
[217.86775208 -307.73849487]
[222.20559692 -322.10534668]
[227.63047791 -336.09796143]
[234.11056519 -349.63424683]
[241.60784912 -362.63476562]
[250.07830811 -375.02322388]
[259.47225952 -386.72692871]
[269.73455811 -397.67718506]
[280.80499268 -407.80972290]
[292.61856079 -417.06509399]
[305.10598755 -425.38900757]
[318.19393921 -432.73257446]
[331.80566406 -439.05270386]
[345.86123657 -444.31231689]
[360.27819824 -448.48052979]
[374.97192383 -451.53292847]
[389.85620117 -453.45156860]
[404.84365845 -454.22518921]
[419.84637451 -453.84924316]
[434.77627563 -452.32592773]
[449.54577637 -449.66424561]
[464.06820679 -445.87973022]
[478.25830078 -440.99465942]
[492.03280640 -435.03768921]
[505.31088257 -428.04373169]
[518.01458740 -420.05386353]
[530.06945801 -411.11499023]
[541.40466309 -401.27954102]
[551.95367432 -390.60525513]
[561.65466309 -379.15475464]
[570.45062256 -366.99523926]
[578.28997803 -354.19808960]
[585.12670898 -340.83837891]
[590.92071533 -326.99453735]
[595.63800049 -312.74777222]
[599.25079346 -298.18170166]
[601.73797607 -283.38180542]
[603.08496094 -268.43496704]
[603.28381348 -253.42886353]
[602.33337402 -238.45156860]
[600.23919678 -223.59097290]
[597.01354980 -208.93429565]
[592.67547607 -194.56753540]
[587.25030518 -180.57502747]
[580.76995850 -167.03884888]
[573.27246094 -154.03848267]
[564.80175781 -141.65017700]
[555.40759277 -129.94665527]
[545.14508057 -118.99659729]
[534.07446289 -108.86426544]
[522.26068115 -99.60910797]
[509.77313232 -91.28545380]
[496.68502808 -83.94214630]
[483.07318115 -77.62226868]
[469.01751709 -72.36291504]
[454.60046387 -68.19496155]
[439.90667725 -65.14285278]
[425.02236938 -63.22450256]
[410.03488159 -62.45117188]
[395.03219604 -62.82739639]
[380.10229492 -64.35097504]
[365.33285522 -67.01295471]
[350.81051636 -70.79772949]
[336.62051392 -75.68307495]
[322.84613037 -81.64031982]
[309.56817627 -88.63452148]
[296.86459351 -96.62461853]
[284.80990601 -105.56372833]
[274.97933960 -94.23413086]
[265.14874268 -82.90454102]
[255.31817627 -71.57494354]
[245.48759460 -60.24535370]
[235.65701294 -48.91576004]
[225.82643127 -37.58616638]
[233.94334412 -25.02061844]
[238.19493103 -10.66250706]
[238.22842407 4.32697773]
[234.03256226 18.73307037]
[225.93919373 31.38587379]
[214.59701538 41.25536728]
[200.91960144 47.53525925]
[186.01187134 49.70883560]
[171.08071899 47.59149170]
[157.33741760 41.34635544]
[147.50685120 52.67594910]
[137.67626953 64.00554657]
[128.18736267 75.62280273]
[119.04856110 87.51744080]
[122.15635681 105.26858521]
[111.39089203 119.72079468]
[93.49298859 121.82477570]
[84.71238708 133.98623657]
[75.93178558 146.14768982]
[67.15118408 158.30914307]
[58.55261612 170.59997559]
[50.13799667 183.01747131]
[41.72338104 195.43496704]
[43.38636017 208.22549438]
[36.12216568 218.39482117]
[24.26883698 220.80836487]
[15.67027283 233.09919739]
[7.07170916 245.39002991]
[-1.52685475 257.68087769]
[-10.12541866 269.97171021]
[-18.72398186 282.26254272]
[-7.59204102 292.34634399]
[2.18824768 303.74588013]
[10.46263409 316.28134155]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 207]
[46 206]
[47 205]
[48 204]
[49 203]
[50 202]
[52 199]
[53 198]
[54 197]
[57 196]
[58 195]
[59 194]
[60 193]
[65 190]
[66 189]
[71 188]
[72 187]
[73 186]
[83 176]
[84 175]
[85 174]
[86 173]
[87 172]
[88 171]
[89 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
