%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[109.61247253 520.48229980]
[104.59318542 534.78552246]
[94.98220825 546.50750732]
[81.94010925 554.23272705]
[67.04177856 557.02838135]
[52.08626938 554.55682373]
[38.87952805 547.11657715]
[29.01633835 535.60595703]
[23.68772316 521.41510010]
[23.53713989 506.25747681]
[28.58277321 491.96350098]
[38.21533585 480.25924683]
[51.27165222 472.55807495]
[66.17510986 469.78988647]
[68.62083435 454.99060059]
[71.06656647 440.19134521]
[73.51229095 425.39205933]
[75.95801544 410.59280396]
[78.29350281 395.77572632]
[80.51862335 380.94168091]
[73.22498322 364.98019409]
[84.81526947 350.67120361]
[86.81928253 335.80566406]
[80.85171509 322.15878296]
[90.36337280 309.51605225]
[92.36738586 294.65051270]
[94.37139893 279.78497314]
[96.04293823 264.87841797]
[97.38117218 249.93823242]
[98.71940613 234.99804688]
[86.01313782 224.60438538]
[81.96523285 208.52407837]
[88.36307526 193.04606628]
[102.86835480 184.34588623]
[103.98400116 169.38743591]
[105.09964752 154.42897034]
[103.53913116 139.51037598]
[99.35211945 125.10659027]
[95.16510773 110.70280457]
[91.19235229 125.16715240]
[81.74301910 136.81661987]
[68.40948486 143.68806458]
[53.43867874 144.62355042]
[39.35345459 139.46539307]
[28.52741623 129.08287048]
[22.78493881 115.22560120]
[23.09373283 100.22878265]
[29.40176010 86.61963654]
[40.64600754 76.69155121]
[54.93162155 72.11757660]
[69.85122681 73.66851807]
[82.89060211 81.08300018]
[91.85308838 93.11306763]
[90.51485443 78.17288208]
[89.17662048 63.23269653]
[87.83838654 48.29251099]
[86.50015259 33.35232925]
[85.16191864 18.41214180]
[76.22428131 5.35728836]
[82.79525757 -8.00951958]
[81.45702362 -22.94970512]
[72.51938629 -36.00455856]
[79.09036255 -49.37136459]
[77.75212860 -64.31155396]
[76.41389465 -79.25173950]
[75.07566071 -94.19191742]
[73.73742676 -109.13210297]
[61.89306641 -119.24887085]
[60.74873734 -134.41940308]
[70.46651459 -145.64884949]
[69.12828064 -160.58903503]
[67.79004669 -175.52922058]
[66.45181274 -190.46940613]
[64.11632538 -205.28646851]
[53.51467514 -217.03021240]
[58.24092484 -231.15507507]
[54.91866684 -245.78253174]
[51.59640503 -260.41000366]
[48.27414703 -275.03744507]
[44.95188904 -289.66491699]
[41.52082443 -304.26724243]
[37.98115540 -318.84362793]
[22.94507980 -318.20904541]
[8.07416439 -320.52032471]
[-6.05999231 -325.68869019]
[-18.91411209 -333.51544189]
[-29.99411583 -343.69970703]
[-38.87411880 -355.85009766]
[-45.21279526 -369.49954224]
[-48.76650620 -384.12341309]
[-49.39865494 -399.15957642]
[-47.08494186 -414.03012085]
[-41.91430664 -428.16345215]
[-34.08548737 -441.01629639]
[-23.89940262 -452.09466553]
[-11.74758339 -460.97268677]
[1.90288889 -467.30917358]
[16.52732658 -470.86050415]
[31.56360626 -471.49020386]
[46.43377304 -469.17410278]
[60.56625366 -464.00115967]
[73.41783905 -456.17028809]
[84.49454498 -445.98239136]
[93.37061310 -433.82913208]
[99.70487213 -420.17764282]
[103.25385284 -405.55264282]
[103.88113403 -390.51623535]
[101.56260681 -375.64645386]
[96.38739014 -361.51480103]
[88.55441284 -348.66448975]
[78.36474609 -337.58944702]
[66.21005249 -328.71533203]
[52.55752945 -322.38330078]
[56.09720230 -307.80691528]
[60.73033905 -302.04879761]
[59.57934570 -292.98718262]
[62.90160751 -278.35971069]
[66.22386932 -263.73226929]
[69.54612732 -249.10479736]
[72.86838531 -234.47734070]
[83.23240662 -223.77984619]
[78.74378967 -208.60873413]
[85.22499084 -222.13626099]
[97.93463135 -230.10275269]
[112.93450165 -230.03968811]
[125.57672119 -221.96662903]
[131.94395447 -208.38508606]
[130.06326294 -193.50346375]
[120.51738739 -181.93296814]
[106.26422119 -177.25886536]
[91.72026062 -180.92947388]
[81.39199829 -191.80763245]
[82.73023224 -176.86744690]
[84.06846619 -161.92726135]
[85.40670013 -146.98707581]
[96.96548462 -137.66343689]
[98.53546906 -122.53103638]
[88.67761230 -110.47033691]
[90.01584625 -95.53015900]
[91.35408020 -80.58997345]
[92.69231415 -65.64978790]
[94.03054810 -50.70959854]
[102.87246704 -38.72336960]
[96.39720917 -24.28793907]
[97.73544312 -9.34775352]
[106.57736206 2.63847852]
[100.10210419 17.07390785]
[101.44033813 32.01409149]
[102.77857208 46.95427704]
[104.11680603 61.89446259]
[105.45503998 76.83464813]
[106.79327393 91.77483368]
[109.56888580 106.51579285]
[113.75589752 120.91957855]
[117.94290924 135.32336426]
[120.58172607 120.55729675]
[126.63256073 106.83187103]
[135.75321960 94.92331696]
[147.42788696 85.50513458]
[160.99629211 79.10995483]
[175.69108582 76.09945679]
[190.68119812 76.64390564]
[205.11888123 80.71250916]
[218.18759155 88.07516479]
[229.14823914 98.31548309]
[237.38096619 110.85431671]
[242.42013550 124.98253632]
[243.98078918 139.90112305]
[241.97465515 154.76637268]
[236.51518250 168.73756409]
[227.91113281 181.02456665]
[216.64910889 190.93247986]
[203.36602783 197.90098572]
[188.81312561 201.53594971]
[173.81344604 201.63183594]
[159.21525574 198.18319702]
[145.84419250 191.38507080]
[134.45643616 181.62191772]
[125.69601440 169.44592285]
[120.05810547 155.54463196]
[118.94245148 170.50308228]
[117.82680511 185.46153259]
[128.97830200 193.56306458]
[134.62570190 206.01800537]
[133.39128113 219.52896118]
[125.70401001 230.57658386]
[113.65959167 236.33627319]
[112.32135773 251.27645874]
[110.98312378 266.21664429]
[113.18094635 270.95126343]
[113.32816315 275.59149170]
[111.80412292 279.37200928]
[109.23692322 281.78900146]
[107.23291016 296.65454102]
[105.22889709 311.52005005]
[111.05312347 326.23022461]
[101.68480682 337.80969238]
[99.68079376 352.67520142]
[106.86596680 363.38671875]
[104.89078522 375.72698975]
[95.35266876 383.16680908]
[93.12754822 398.00085449]
[94.94932556 406.95178223]
[90.75728607 413.03851318]
[88.31156158 427.83779907]
[85.86583710 442.63705444]
[83.42010498 457.43634033]
[80.97438049 472.23559570]
[94.19480896 479.65155029]
[104.07919312 491.14392090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 208]
[15 207]
[16 206]
[17 205]
[18 204]
[19 202]
[20 201]
[22 198]
[23 197]
[25 195]
[26 194]
[27 193]
[28 189]
[29 188]
[30 187]
[34 182]
[35 181]
[36 180]
[37 155]
[38 154]
[39 153]
[53 152]
[54 151]
[55 150]
[56 149]
[57 148]
[58 147]
[60 145]
[61 144]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
[70 135]
[71 134]
[72 133]
[73 132]
[74 122]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 114]
[82 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
