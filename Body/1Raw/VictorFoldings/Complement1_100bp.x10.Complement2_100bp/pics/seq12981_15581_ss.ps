%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[56.60120392 788.91107178]
[41.62848663 789.88116455]
[26.62480354 789.99493408]
[11.63909626 789.25195312]
[-3.27975249 787.65466309]
[-18.08308220 785.20825195]
[-32.72260666 781.92071533]
[-47.15057373 777.80279541]
[-61.31992340 772.86791992]
[-75.18444061 767.13220215]
[-88.69889832 760.61431885]
[-101.81921387 753.33551025]
[-114.50259399 745.31958008]
[-126.70766449 736.59265137]
[-138.39462280 727.18316650]
[-149.52532959 717.12182617]
[-160.06350708 706.44140625]
[-169.97476196 695.17687988]
[-179.22676086 683.36486816]
[-187.78935242 671.04388428]
[-195.63458252 658.25421143]
[-202.73686218 645.03753662]
[-209.07302856 631.43695068]
[-214.62242126 617.49676514]
[-219.36694336 603.26257324]
[-223.29110718 588.78070068]
[-226.38211060 574.09844971]
[-228.62988281 559.26367188]
[-230.02708435 544.32470703]
[-230.56916809 529.33038330]
[-230.25434875 514.32958984]
[-229.08366394 499.37121582]
[-227.06092834 484.50408936]
[-224.19274902 469.77667236]
[-220.48846436 455.23699951]
[-215.96017456 440.93252563]
[-210.62263489 426.90988159]
[-204.49327087 413.21484375]
[-197.59207153 399.89205933]
[-189.94152832 386.98498535]
[-181.56661987 374.53570557]
[-172.49465942 362.58483887]
[-162.75521851 351.17138672]
[-152.38009644 340.33258057]
[-141.40310669 330.10372925]
[-129.86006165 320.51824951]
[-117.78862762 311.60736084]
[-105.22816467 303.40014648]
[-92.21965027 295.92340088]
[-78.80550385 289.20147705]
[-65.02948761 283.25631714]
[-50.93653870 278.10733032]
[-36.57262421 273.77127075]
[-21.98459244 270.26232910]
[-7.22003031 267.59188843]
[7.67290306 265.76873779]
[22.64563179 264.79873657]
[37.64931488 264.68511963]
[52.63501358 265.42825317]
[67.55384827 267.02566528]
[69.99958038 252.22639465]
[72.44530487 237.42712402]
[66.88671112 223.60861206]
[76.77056885 211.25466919]
[79.21629333 196.45539856]
[81.66201782 181.65612793]
[84.10774994 166.85685730]
[86.22237396 152.00665283]
[88.00483704 137.11294556]
[89.78730774 122.21922302]
[91.56977081 107.32550812]
[93.24131012 92.41893005]
[86.98169708 77.88869476]
[96.00109100 66.03543091]
[97.56161499 51.11682892]
[90.06070709 40.62401199]
[91.66759491 28.23040009]
[100.97997284 20.50989342]
[102.76243591 5.61617565]
[104.54490662 -9.27754211]
[106.32736969 -24.17125893]
[108.10984039 -39.06497574]
[109.89230347 -53.95869446]
[95.28926849 -57.46123886]
[81.19160461 -62.63544464]
[67.78997040 -69.41133881]
[55.26560211 -77.69727325]
[43.78788757 -87.38121033]
[33.51204300 -98.33216858]
[24.57703781 -110.40206146]
[17.10370827 -123.42764282]
[11.19312477 -137.23277283]
[6.92521906 -151.63073730]
[4.35770988 -166.42683411]
[3.52532029 -181.42095947]
[4.43930721 -196.41032410]
[7.08730984 -211.19223022]
[11.43351746 -225.56675720]
[17.41915131 -239.33950806]
[24.96326447 -252.32421875]
[33.96382904 -264.34530640]
[44.29912567 -275.24017334]
[55.82938004 -284.86148071]
[68.39865875 -293.07913208]
[81.83697510 -299.78198242]
[95.96259308 -304.87939453]
[110.58447266 -308.30239868]
[125.50488281 -310.00473022]
[140.52203369 -309.96334839]
[155.43283081 -308.17886353]
[170.03564453 -304.67532349]
[184.13296509 -299.50018311]
[197.53413391 -292.72338867]
[210.05795288 -284.43661499]
[221.53501892 -274.75192261]
[231.81013489 -263.80026245]
[240.74433899 -251.72979736]
[248.21679688 -238.70370483]
[254.12644958 -224.89819336]
[258.39340210 -210.49993896]
[260.95993042 -195.70367432]
[261.79132080 -180.70948792]
[260.87631226 -165.72018433]
[258.22732544 -150.93846130]
[253.88017273 -136.56422424]
[247.89361572 -122.79187012]
[240.34863281 -109.80765533]
[231.34727478 -97.78717804]
[221.01124573 -86.89299774]
[209.48034668 -77.27245331]
[196.91052246 -69.05564117]
[183.47175598 -62.35368729]
[169.34580994 -57.25722885]
[154.72369385 -53.83519363]
[139.80316162 -52.13385773]
[124.78601837 -52.17622757]
[123.00355530 -37.28250885]
[121.22109222 -22.38879395]
[119.43862152 -7.49507570]
[117.65615845 7.39864159]
[115.87368774 22.29235840]
[123.63932800 38.02963257]
[112.48021698 52.67735291]
[110.91969299 67.59595490]
[117.29093170 81.05911255]
[108.15991211 93.97945404]
[110.52009583 101.68672943]
[106.46348572 109.10797119]
[104.68102264 124.00168610]
[102.89855194 138.89540100]
[101.11608887 153.78912354]
[103.17197418 158.58708191]
[103.18096924 163.22962952]
[101.54503632 166.96308899]
[98.90702057 169.30258179]
[96.46128845 184.10185242]
[94.01556396 198.90112305]
[91.56983948 213.70039368]
[96.95349884 228.57745361]
[87.24457550 239.87284851]
[84.79885101 254.67211914]
[82.35311890 269.47140503]
[96.99267578 272.75878906]
[111.42066956 276.87658691]
[125.59006500 281.81134033]
[139.45462036 287.54696655]
[152.96913147 294.06475830]
[166.08950806 301.34344482]
[178.77294922 309.35928345]
[190.97808838 318.08615112]
[202.66511536 327.49554443]
[213.79591370 337.55679321]
[224.33416748 348.23709106]
[234.24549866 359.50158691]
[243.49760437 371.31350708]
[252.06028748 383.63439941]
[259.90560913 396.42401123]
[267.00799561 409.64065552]
[273.34426880 423.24121094]
[278.89376831 437.18130493]
[283.63839722 451.41549683]
[287.56268311 465.89730835]
[290.65380859 480.57955933]
[292.90170288 495.41433716]
[294.29901123 510.35324097]
[294.84121704 525.34753418]
[294.52651978 540.34838867]
[293.35592651 555.30676270]
[291.33331299 570.17388916]
[288.46527100 584.90136719]
[284.76107788 599.44104004]
[280.23291016 613.74554443]
[274.89547729 627.76824951]
[268.76623535 641.46331787]
[261.86511230 654.78619385]
[254.21469116 667.69329834]
[245.83987427 680.14263916]
[236.76800537 692.09356689]
[227.02867126 703.50708008]
[216.65362549 714.34600830]
[205.67671204 724.57495117]
[194.13374329 734.16052246]
[182.06237793 743.07147217]
[169.50198364 751.27880859]
[156.49351501 758.75561523]
[143.07942200 765.47766113]
[129.30346680 771.42291260]
[115.21054840 776.57202148]
[100.84667206 780.90820312]
[86.25866699 784.41729736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 162]
[61 161]
[62 160]
[64 158]
[65 157]
[66 156]
[67 155]
[68 151]
[69 150]
[70 149]
[71 148]
[72 146]
[74 144]
[75 143]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
