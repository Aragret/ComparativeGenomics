%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[29.95927429 764.22631836]
[15.42834187 767.96704102]
[0.69638836 770.81488037]
[-14.18178177 772.75933838]
[-29.15081978 773.79315186]
[-44.15504074 773.91247559]
[-59.13862610 773.11682129]
[-74.04583740 771.40924072]
[-88.82121277 768.79595947]
[-103.40979767 765.28680420]
[-117.75730896 760.89483643]
[-131.81037903 755.63629150]
[-145.51673889 749.53082275]
[-158.82537842 742.60113525]
[-171.68679810 734.87292480]
[-184.05316162 726.37506104]
[-195.87844849 717.13909912]
[-207.11868286 707.19934082]
[-217.73202515 696.59289551]
[-227.67903137 685.35906982]
[-236.92266846 673.53979492]
[-245.42855835 661.17889404]
[-253.16506958 648.32250977]
[-260.10339355 635.01837158]
[-266.21774292 621.31597900]
[-271.48538208 607.26629639]
[-275.88665771 592.92163086]
[-279.40527344 578.33532715]
[-282.02807617 563.56164551]
[-283.74536133 548.65551758]
[-284.55068970 533.67248535]
[-284.44110107 518.66821289]
[-283.41699219 503.69848633]
[-281.48217773 488.81906128]
[-278.64382935 474.08526611]
[-274.91253662 459.55191040]
[-270.30218506 445.27307129]
[-264.82989502 431.30184937]
[-258.51605225 417.69021606]
[-251.38412476 404.48883057]
[-243.46066284 391.74679565]
[-234.77511597 379.51150513]
[-225.35981750 367.82849121]
[-215.24978638 356.74121094]
[-204.48263550 346.29086304]
[-193.09841919 336.51638794]
[-181.13948059 327.45413208]
[-168.65029907 319.13778687]
[-155.67736816 311.59832764]
[-142.26892090 304.86373901]
[-128.47485352 298.95913696]
[-114.34646606 293.90643311]
[-99.93633270 289.72448730]
[-85.29804993 286.42880249]
[-70.48607635 284.03164673]
[-55.55551147 282.54199219]
[-40.56190109 281.96530151]
[-25.56102562 282.30377197]
[-10.60868645 283.55612183]
[4.23949385 285.71768188]
[18.92827606 288.78045654]
[33.40301895 292.73300171]
[38.22901535 278.53054810]
[43.05501556 264.32809448]
[47.88101196 250.12564087]
[52.70700836 235.92317200]
[43.64176559 220.01918030]
[49.17523575 202.23454285]
[66.23872375 194.00340271]
[70.63972473 179.66355896]
[75.04071808 165.32369995]
[79.44171906 150.98385620]
[83.41381073 136.51933289]
[86.95348358 121.94295502]
[90.49315643 107.36658478]
[93.81541443 92.73912048]
[96.91952515 78.06381989]
[100.02363586 63.38851929]
[95.30963898 48.28590775]
[105.51324463 37.43529892]
[108.61735535 22.75999832]
[95.18838501 15.89719868]
[84.00218964 5.79995012]
[75.81726837 -6.83899498]
[71.18651581 -21.15481758]
[70.41987610 -36.16980743]
[73.56362152 -50.86014175]
[80.39757538 -64.22567749]
[90.45053864 -75.35807800]
[103.03278351 -83.50250244]
[117.28335571 -88.10881042]
[132.22898865 -88.86872864]
[135.33309937 -103.54403687]
[130.61909485 -118.64664459]
[140.82270813 -129.49725342]
[143.92681885 -144.17254639]
[147.03092957 -158.84785461]
[150.13504028 -173.52316284]
[136.37205505 -179.62841797]
[124.17942810 -188.46206665]
[114.09014130 -199.63793945]
[106.54527283 -212.66746521]
[101.87463379 -226.98104858]
[100.28242493 -241.95297241]
[101.83823395 -256.92874146]
[106.47406006 -271.25363159]
[113.98722839 -284.30145264]
[124.04931641 -295.50183105]
[136.22044373 -304.36508179]
[149.96853638 -310.50378418]
[164.69258118 -313.64956665]
[179.74893188 -313.66491699]
[194.47935486 -310.54913330]
[208.23992920 -304.43847656]
[220.42909241 -295.60000610]
[230.51397705 -284.42019653]
[238.05372620 -271.38769531]
[242.71873474 -257.07226562]
[244.30505371 -242.09971619]
[242.74334717 -227.12457275]
[238.10189819 -212.80149841]
[230.58358765 -199.75662231]
[220.51708984 -188.56022644]
[208.34248352 -179.70175171]
[194.59197998 -173.56845093]
[179.86668396 -170.42846680]
[164.81033325 -170.41905212]
[161.70622253 -155.74374390]
[158.60211182 -141.06845093]
[155.49801636 -126.39314270]
[160.43403625 -112.34020996]
[150.00840759 -100.43992615]
[146.90429688 -85.76461792]
[160.26214600 -79.01796722]
[171.42697144 -69.03580475]
[179.63369751 -56.49411392]
[184.31788635 -42.24452591]
[185.15451050 -27.25651169]
[182.08055115 -12.55141830]
[175.29968262 0.86712831]
[165.26875305 12.08172226]
[152.66706848 20.32389832]
[138.35035706 25.02678871]
[123.29265594 25.86410713]
[120.18854523 40.53940964]
[125.12457275 54.59234238]
[114.69894409 66.49263000]
[111.59483337 81.16793060]
[108.49072266 95.84323120]
[110.28236389 100.77313995]
[109.18433380 106.35594177]
[105.06953430 110.90625763]
[101.52986145 125.48262787]
[97.99018860 140.05900574]
[99.36013794 144.17935181]
[99.34881592 148.12452698]
[98.18090820 151.48181152]
[96.19203949 153.95385742]
[93.78156281 155.38485718]
[89.38056946 169.72470093]
[84.97956848 184.06454468]
[80.57856750 198.40440369]
[88.08638763 207.62226868]
[90.19078827 219.20123291]
[86.48278809 230.24409485]
[77.99323273 238.04429626]
[66.90946198 240.74917603]
[62.08346939 254.95162964]
[57.25746918 269.15408325]
[52.43147278 283.35653687]
[47.60547638 297.55899048]
[61.49169922 303.24349976]
[75.00554657 309.76400757]
[88.09673309 317.09622192]
[100.71657562 325.21292114]
[112.81810760 334.08386230]
[124.35633087 343.67605591]
[135.28829956 353.95382690]
[145.57337952 364.87896729]
[155.17326355 376.41076660]
[164.05227661 388.50640869]
[172.17736816 401.12081909]
[179.51832581 414.20712280]
[186.04783630 427.71661377]
[191.74160767 441.59906006]
[196.57844543 455.80276489]
[200.54037476 470.27496338]
[203.61265564 484.96176147]
[205.78384399 499.80853271]
[207.04588318 514.76007080]
[207.39405823 529.76068115]
[206.82708740 544.75469971]
[205.34707642 559.68621826]
[202.95953369 574.49975586]
[199.67332458 589.14013672]
[195.50070190 603.55297852]
[190.45716858 617.68463135]
[184.56149292 631.48254395]
[177.83560181 644.89532471]
[170.30453491 657.87316895]
[161.99627686 670.36773682]
[152.94175720 682.33251953]
[143.17466736 693.72308350]
[132.73132324 704.49700928]
[121.65057373 714.61419678]
[109.97364807 724.03704834]
[97.74398804 732.73052979]
[85.00708771 740.66223145]
[71.81033325 747.80273438]
[58.20280457 754.12536621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[69 162]
[70 161]
[71 160]
[72 159]
[73 154]
[74 153]
[75 152]
[76 149]
[77 148]
[78 147]
[80 145]
[81 144]
[92 133]
[93 132]
[95 130]
[96 129]
[97 128]
[98 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
