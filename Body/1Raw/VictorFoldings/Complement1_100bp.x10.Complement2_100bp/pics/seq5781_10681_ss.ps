%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[75.82337952 730.47821045]
[62.05529022 736.46307373]
[47.75971603 741.04730225]
[33.07873154 744.18536377]
[18.15824890 745.84600830]
[3.14656043 746.01281738]
[-11.80713749 744.68408203]
[-26.55422592 741.87304688]
[-40.94813538 737.60760498]
[-54.84580994 731.93017578]
[-68.10912323 724.89715576]
[-80.60626221 716.57849121]
[-92.21301270 707.05682373]
[-102.81401825 696.42681885]
[-112.30392456 684.79412842]
[-120.58841705 672.27429199]
[-127.58514404 658.99182129]
[-133.22457886 645.07867432]
[-137.45066833 630.67315674]
[-140.22142029 615.91845703]
[-141.50927734 600.96118164]
[-141.30145264 585.95001221]
[-139.60002136 571.03411865]
[-136.42187500 556.36175537]
[-131.79859924 542.07873535]
[-125.77616882 528.32708740]
[-118.41441345 515.24334717]
[-109.78650665 502.95770264]
[-99.97820282 491.59213257]
[-89.08698273 481.25967407]
[-77.22108459 472.06298828]
[-64.49845123 464.09347534]
[-51.04552078 457.43032837]
[-36.99600220 452.13983154]
[-22.48952484 448.27447510]
[-7.67026901 445.87277222]
[7.31448221 444.95852661]
[22.31579971 445.54083252]
[37.18458939 447.61392212]
[40.72426224 433.03753662]
[44.26393509 418.46118164]
[47.80360794 403.88479614]
[51.34327698 389.30841064]
[54.88294983 374.73205566]
[50.36752319 360.53839111]
[61.14284897 348.95376587]
[64.68251801 334.37741089]
[68.22219086 319.80102539]
[60.31566238 311.57589722]
[57.33055878 300.44012451]
[60.12021637 289.13034058]
[68.10391235 280.48385620]
[79.38327789 276.72720337]
[83.35537720 262.26266479]
[85.58049774 247.42863464]
[86.02709961 232.43527222]
[86.47370911 217.44192505]
[86.92031097 202.44857788]
[87.36692047 187.45523071]
[87.70189667 172.45896912]
[87.92522430 157.46063232]
[75.50788879 165.87550354]
[61.14212036 161.55987549]
[55.41781616 147.69508362]
[62.55472565 134.50173950]
[77.29178619 131.70547485]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.95688629 72.23586273]
[86.82366943 55.71519852]
[97.47138214 41.76553726]
[98.58702850 26.80708122]
[99.70267487 11.84862900]
[100.81832886 -3.10982466]
[101.93397522 -18.06827736]
[95.24451447 -32.40570068]
[103.90699768 -44.52224731]
[104.68831635 -59.50188446]
[105.13492584 -74.49523163]
[105.58152771 -89.48858643]
[106.02813721 -104.48193359]
[105.35835266 -119.46697235]
[103.57588196 -134.36068726]
[101.79341888 -149.25440979]
[89.65309906 -159.01403809]
[88.05758667 -174.14378357]
[97.43672180 -185.65757751]
[95.65425873 -200.55128479]
[93.87178802 -215.44500732]
[79.02715302 -218.35908508]
[65.81054688 -225.71955872]
[55.51681137 -236.80532837]
[49.15441132 -250.53030396]
[47.34667587 -265.54986572]
[50.27070618 -280.39254761]
[57.64003372 -293.60421753]
[68.73268890 -303.89053345]
[82.46192932 -310.24374390]
[97.48270416 -312.04141235]
[112.32342529 -309.10742188]
[125.53015137 -301.72924805]
[135.80902100 -290.62969971]
[142.15303040 -276.89620972]
[143.94062805 -261.87423706]
[140.99670410 -247.03547668]
[133.60968018 -233.83369446]
[122.50325012 -223.56227112]
[108.76551056 -217.22747803]
[110.54797363 -202.33375549]
[112.33043671 -187.44003296]
[124.16168976 -178.46467590]
[126.18153381 -163.38572693]
[116.68713379 -151.03688049]
[118.46960449 -136.14315796]
[120.25206757 -121.24944305]
[127.59949493 -134.32672119]
[140.45050049 -142.06311035]
[155.44584656 -142.43634033]
[168.66581726 -135.34884644]
[176.65470886 -122.65327454]
[177.32426453 -107.66822052]
[170.49946594 -94.31075287]
[157.96429443 -86.07246399]
[142.99540710 -85.10683441]
[129.50563049 -91.66627502]
[121.02148438 -104.03533173]
[120.57488251 -89.04197693]
[120.12827301 -74.04862976]
[119.68166351 -59.05527878]
[121.82041931 -56.25205231]
[122.70766449 -52.27362823]
[121.80583954 -47.71950912]
[118.86544800 -43.40659714]
[125.63470459 -30.13910484]
[116.89242554 -16.95262909]
[115.77677917 -1.99417603]
[114.66113281 12.96427727]
[113.54547882 27.92273140]
[112.42983246 42.88118362]
[120.08325958 52.24876785]
[119.27621460 64.72003174]
[109.89707184 73.57409668]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[102.92356110 157.68395996]
[102.70023346 172.68229675]
[105.70152283 181.30958557]
[102.36026764 187.90184021]
[101.91366577 202.89518738]
[101.46705627 217.88853455]
[101.02044678 232.88188171]
[100.57384491 247.87522888]
[108.21947479 234.97003174]
[119.77384949 225.40464783]
[133.87957764 220.30284119]
[148.87951660 220.26394653]
[163.01152039 225.29252625]
[174.61534119 234.79785156]
[182.32780457 247.66323853]
[185.24282837 262.37725830]
[183.01797485 277.21136475]
[175.91461182 290.42279053]
[164.76724243 300.45953369]
[150.88545227 306.14245605]
[135.90003967 306.80395508]
[121.57149506 302.36630249]
[109.58311462 293.35083008]
[101.34328461 280.81668091]
[97.81990051 266.23477173]
[93.84780121 280.69927979]
[103.83972931 296.79513550]
[98.97694397 314.77471924]
[82.79856873 323.34069824]
[79.25889587 337.91708374]
[75.71922302 352.49343872]
[79.98146820 367.72970581]
[69.45932770 378.27172852]
[65.91965485 392.84808350]
[62.37998199 407.42446899]
[58.84030914 422.00085449]
[55.30063629 436.57720947]
[51.76096344 451.15359497]
[65.92457581 456.13061523]
[79.52223969 462.49316406]
[92.41881561 470.17800903]
[104.48613739 479.10879517]
[115.60425568 489.19668579]
[125.66268921 500.34149170]
[134.56144714 512.43243408]
[142.21211243 525.34930420]
[148.53863525 538.96380615]
[153.47813416 553.14050293]
[156.98150635 567.73864746]
[159.01396179 582.61303711]
[159.55528259 597.61590576]
[158.60009766 612.59808350]
[156.15789795 627.41070557]
[152.25292969 641.90655518]
[146.92404175 655.94158936]
[140.22418213 669.37628174]
[132.21994019 682.07708740]
[122.99085236 693.91778564]
[112.62866211 704.78076172]
[101.23635864 714.55798340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 188]
[40 187]
[41 186]
[42 185]
[43 184]
[44 183]
[46 181]
[47 180]
[48 179]
[53 176]
[54 175]
[55 158]
[56 157]
[57 156]
[58 155]
[59 154]
[60 152]
[61 151]
[67 150]
[68 149]
[69 148]
[71 146]
[72 145]
[74 142]
[75 141]
[76 140]
[77 139]
[78 138]
[80 136]
[81 132]
[82 131]
[83 130]
[84 129]
[85 118]
[86 117]
[87 116]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
