%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[85.18898010 699.88537598]
[70.15457153 700.33966064]
[55.28068161 698.10198975]
[41.04544067 693.24426270]
[27.90645409 685.92260742]
[16.28608704 676.37237549]
[6.55788279 664.90057373]
[-0.96543485 651.87603760]
[-6.04202271 637.71734619]
[-8.50868988 622.87969971]
[-8.28614235 607.84008789]
[-5.38153505 593.08190918]
[0.11176141 579.07965088]
[8.01716042 566.28338623]
[18.08053589 555.10449219]
[29.97839165 545.90228271]
[43.32826233 538.97259521]
[57.70100021 534.53814697]
[72.63459015 532.74151611]
[73.52740479 517.76812744]
[74.42021942 502.79473877]
[75.31303406 487.82131958]
[76.20584869 472.84793091]
[69.23980713 459.68267822]
[77.78479004 446.36752319]
[78.67760468 431.39410400]
[79.23581696 416.40447998]
[79.45914459 401.40615845]
[71.91219330 388.56509399]
[79.85410309 374.88165283]
[80.07743073 359.88330078]
[80.30075836 344.88497925]
[80.52408600 329.88662720]
[70.34416199 321.98736572]
[66.51552582 309.48040771]
[70.65019226 296.86633301]
[81.45162964 288.82000732]
[81.89823151 273.82662964]
[82.34484100 258.83328247]
[82.79144287 243.83993530]
[80.96953583 241.70950317]
[79.88175201 238.72900391]
[79.85608673 235.17446899]
[81.11466217 231.43540955]
[83.73742676 227.97491455]
[85.07566071 213.03472900]
[86.41389465 198.09454346]
[87.52954102 183.13607788]
[80.56349945 169.97084045]
[89.10848236 156.65567017]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[87.23029327 58.16208649]
[95.71141815 45.91791153]
[88.80923462 31.68167305]
[97.29035950 19.43749809]
[82.33222198 15.55515575]
[68.41908264 8.83952045]
[56.08162308 -0.45125878]
[45.79000473 -11.96085358]
[37.93600464 -25.24841881]
[32.81806564 -39.80548477]
[30.62998199 -55.07540131]
[31.45354080 -70.47463989]
[35.25548172 -85.41508484]
[41.88882828 -99.32648468]
[51.09857178 -111.67824554]
[62.53147507 -121.99962616]
[75.74961090 -129.89773560]
[90.24716187 -135.07240295]
[105.46974182 -137.32769775]
[106.13952637 -152.31274414]
[106.80931091 -167.29777527]
[99.69593811 -181.42967224]
[107.99382019 -193.79876709]
[108.66360474 -208.78379822]
[109.33338928 -223.76884460]
[100.47059631 -239.90985107]
[110.48480988 -254.32104492]
[110.93141174 -269.31439209]
[103.60842896 -283.33883667]
[111.72123718 -295.83007812]
[109.52827454 -299.57772827]
[108.72293091 -303.43984985]
[109.17080688 -306.96615601]
[110.60505676 -309.79626465]
[112.66721344 -311.69512939]
[114.00544739 -326.63531494]
[115.34368134 -341.57550049]
[116.68191528 -356.51568604]
[118.02014923 -371.45587158]
[111.54489899 -385.89129639]
[120.38681030 -397.87753296]
[121.72504425 -412.81771851]
[107.66383362 -418.33666992]
[95.72792053 -427.59466553]
[86.88488770 -439.84118652]
[81.85160828 -454.08349609]
[81.03610992 -469.16699219]
[84.50449371 -483.86892700]
[91.97560120 -496.99749756]
[102.84377289 -507.48840332]
[116.22798157 -514.49121094]
[131.04322815 -517.43829346]
[146.08851624 -516.09063721]
[160.14418030 -510.55752563]
[172.07078552 -501.28753662]
[180.90150452 -489.03213501]
[185.92048645 -474.78479004]
[186.72082520 -459.70050049]
[183.23767090 -445.00204468]
[175.75338745 -431.88101196]
[164.87467957 -421.40100098]
[151.48342896 -414.41162109]
[136.66523743 -411.47946167]
[135.32699585 -396.53927612]
[141.89797974 -383.17248535]
[132.96034241 -370.11761475]
[131.62210083 -355.17742920]
[130.28387451 -340.23724365]
[128.94563293 -325.29705811]
[127.60739899 -310.35687256]
[126.71458435 -295.38348389]
[134.06951904 -282.43148804]
[125.92476654 -268.86779785]
[125.47815704 -253.87445068]
[133.54223633 -244.85794067]
[133.29286194 -232.36308289]
[124.31842804 -223.09906006]
[123.64864349 -208.11401367]
[122.97885895 -193.12898254]
[130.14013672 -180.06890869]
[121.79434967 -166.62799072]
[121.12456512 -151.64294434]
[120.45478058 -136.65791321]
[134.64230347 -133.31732178]
[147.97479248 -127.41725159]
[159.99472046 -119.15847015]
[170.28933716 -108.82274628]
[178.50480652 -96.76319122]
[184.35832214 -83.39220428]
[187.64793396 -69.16736603]
[188.25941467 -54.57579422]
[186.17028809 -40.11743927]
[181.45065308 -26.28798103]
[174.26078796 -13.56181335]
[164.84576416 -2.37578321]
[153.52703857 6.88581038]
[140.69152832 13.90441513]
[126.77832794 18.43818665]
[112.26376343 20.33031464]
[119.22980499 33.49555206]
[110.68482208 46.81072617]
[117.65086365 59.97596741]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[104.08188629 157.54849243]
[110.98406982 171.78472900]
[102.50294495 184.02890015]
[105.11565399 190.10223389]
[104.37950897 195.73739624]
[101.35408020 199.43276978]
[100.01584625 214.37295532]
[98.67761230 229.31314087]
[97.78479767 244.28654480]
[97.33818817 259.27990723]
[96.89158630 274.27325439]
[96.44497681 289.26660156]
[108.67205048 301.77731323]
[108.07963562 318.92269897]
[95.52242279 330.10995483]
[95.29909515 345.10830688]
[95.07576752 360.10662842]
[94.85243988 375.10498047]
[102.38341522 389.01882935]
[94.45748138 401.62948608]
[94.23415375 416.62780762]
[96.77803802 421.18585205]
[97.26997375 425.80227661]
[96.03132629 429.68566895]
[93.65101624 432.28692627]
[92.75820160 447.26031494]
[99.66037750 461.49655151]
[91.17926025 473.74072266]
[90.28643799 488.71414185]
[89.39362335 503.68756104]
[88.50080872 518.66094971]
[87.60799408 533.63433838]
[102.22227478 537.19281006]
[115.96623230 543.30371094]
[128.39804077 551.77069092]
[139.11808777 562.32159424]
[147.78175354 574.61712646]
[154.11054993 588.26214600]
[157.90101624 602.81793213]
[159.03131104 617.81671143]
[157.46511841 632.77618408]
[153.25274658 647.21557617]
[146.52964783 660.67065430]
[137.51191711 672.70898438]
[126.48943329 682.94342041]
[113.81653595 691.04516602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 196]
[20 195]
[21 194]
[22 193]
[23 192]
[25 190]
[26 189]
[27 185]
[28 184]
[30 182]
[31 181]
[32 180]
[33 179]
[37 176]
[38 175]
[39 174]
[40 173]
[45 172]
[46 171]
[47 170]
[48 167]
[50 165]
[51 164]
[52 163]
[53 162]
[55 160]
[56 159]
[58 157]
[60 155]
[75 139]
[76 138]
[77 137]
[79 135]
[80 134]
[81 133]
[83 130]
[84 129]
[86 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
