%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[163.73994446 563.93792725]
[154.31904602 552.25787354]
[145.71717834 539.96215820]
[137.97447205 527.10809326]
[131.12699890 513.75555420]
[125.20671082 499.96691895]
[120.24119568 485.80639648]
[116.25360870 471.34002686]
[113.26254272 456.63525391]
[111.28194427 441.76065063]
[110.32104492 426.78555298]
[110.38432312 411.77981567]
[111.47148895 396.81335449]
[113.57747650 381.95596313]
[116.69245911 367.27694702]
[120.80191040 352.84472656]
[125.88668060 338.72659302]
[131.92306519 324.98837280]
[138.88290405 311.69409180]
[146.73374939 298.90579224]
[155.43899536 286.68304443]
[164.95808411 275.08288574]
[175.24658203 264.15936279]
[186.25656128 253.96342468]
[197.93667603 244.54260254]
[189.33810425 232.25175476]
[180.73954773 219.96092224]
[172.14097595 207.67008972]
[163.09097290 195.70774841]
[153.60208130 184.09048462]
[144.11317444 172.47322083]
[134.62428284 160.85595703]
[125.13538361 149.23869324]
[115.64648438 137.62142944]
[115.86792755 152.61979675]
[108.03608704 165.41285706]
[94.57774353 172.03652954]
[79.66312408 170.43841553]
[67.91366577 161.11369324]
[62.97008514 146.95173645]
[66.36419678 132.34078979]
[77.04428864 121.80818939]
[91.70103455 118.61759949]
[105.79308319 123.75780487]
[97.94132233 110.97695923]
[89.99464417 98.25492096]
[81.95346832 85.59239960]
[68.02391052 78.09053040]
[67.73268127 63.19877243]
[59.69150925 50.53624725]
[51.65033722 37.87372208]
[43.60916519 25.21119690]
[35.56799316 12.54867172]
[21.63843727 5.04680109]
[21.34720802 -9.84495735]
[13.30603504 -22.50748253]
[5.26486206 -35.17000580]
[-1.97731829 -40.73675156]
[-2.80014014 -48.08145905]
[-10.65189552 -60.86230469]
[-18.50365067 -73.64314270]
[-26.35540581 -86.42398834]
[-40.02135849 -80.19331360]
[-54.34942245 -75.68929291]
[-69.12239075 -72.98020172]
[-84.11629486 -72.10712433]
[-99.10385132 -73.08328247]
[-113.85784149 -75.89388275]
[-128.15458679 -80.49631500]
[-141.77738953 -86.82080841]
[-154.51968384 -94.77149200]
[-166.18833923 -104.22782898]
[-176.60643005 -115.04646301]
[-185.61604309 -127.06338501]
[-193.08059692 -140.09642029]
[-198.88691711 -153.94801331]
[-202.94697571 -168.40814209]
[-205.19924927 -183.25761414]
[-205.60957336 -198.27131653]
[-204.17172241 -213.22164917]
[-200.90751648 -227.88194275]
[-195.86642456 -242.02998352]
[-189.12486267 -255.45127869]
[-180.78504944 -267.94235229]
[-170.97340393 -279.31387329]
[-159.83866882 -289.39340210]
[-147.54965210 -298.02819824]
[-134.29263306 -305.08731079]
[-120.26860046 -310.46374512]
[-105.69014740 -314.07601929]
[-90.77828217 -315.86932373]
[-75.75906372 -315.81649780]
[-60.86018753 -313.91833496]
[-46.30750656 -310.20361328]
[-32.32164001 -304.72863770]
[-19.11461067 -297.57644653]
[-6.88663054 -288.85543823]
[4.17692423 -278.69781494]
[13.90833473 -267.25756836]
[22.16007423 -254.70811462]
[28.80704880 -241.23974609]
[33.74848938 -227.05659485]
[36.90949249 -212.37368774]
[38.24213028 -197.41362000]
[37.72620392 -182.40316772]
[35.36953354 -167.56990051]
[31.20784569 -153.13868713]
[25.30423164 -139.32829285]
[17.74818802 -126.34809113]
[8.65426254 -114.39483643]
[-1.83968341 -103.64975739]
[-13.57456398 -94.27574158]
[-5.72280836 -81.49490356]
[2.12894702 -68.71405792]
[9.98070240 -55.93321609]
[17.92738724 -43.21118164]
[25.96855927 -30.54865456]
[34.00973129 -17.88612938]
[47.36412811 -11.28996754]
[48.23051834 4.50749826]
[56.27169037 17.17002296]
[64.31286621 29.83254814]
[72.35403442 42.49507141]
[80.39521027 55.15759659]
[93.74960327 61.75376129]
[94.61598969 77.55122375]
[102.65716553 90.21375275]
[109.29327393 94.78919220]
[110.72216797 103.12520599]
[118.57392120 115.90604401]
[127.26374817 128.13253784]
[136.75263977 139.74980164]
[146.24154663 151.36706543]
[155.73043823 162.98432922]
[165.21934509 174.60159302]
[174.70823669 186.21885681]
[178.78762817 171.78421021]
[192.55664062 165.83325195]
[205.86529541 172.75277710]
[208.90292358 187.44197083]
[199.43032837 199.07252502]
[184.43180847 199.07151794]
[193.03038025 211.36236572]
[201.62893677 223.65319824]
[210.22750854 235.94403076]
[223.08142090 228.20106506]
[236.43377686 221.35333252]
[250.22230530 215.43276978]
[264.38272095 210.46696472]
[278.84902954 206.47908020]
[293.55374146 203.48771667]
[308.42828369 201.50682068]
[323.40338135 200.54562378]
[338.40911865 200.60859680]
[353.37561035 201.69546509]
[368.23303223 203.80114746]
[382.91210938 206.91583252]
[397.34442139 211.02500916]
[411.46264648 216.10949707]
[425.20101929 222.14558411]
[438.49542236 229.10516357]
[451.28387451 236.95574951]
[463.50677490 245.66076660]
[475.10714722 255.17959595]
[486.03088379 265.46789551]
[496.22705078 276.47766113]
[505.64810181 288.15759277]
[514.25012207 300.45318604]
[521.99298096 313.30715942]
[528.84063721 326.65954590]
[534.76110840 340.44812012]
[539.72680664 354.60858154]
[543.71459961 369.07489014]
[546.70587158 383.77963257]
[548.68664551 398.65420532]
[549.64776611 413.62930298]
[549.58471680 428.63504028]
[548.49774170 443.60153198]
[546.39196777 458.45892334]
[543.27716064 473.13796997]
[539.16790771 487.57025146]
[534.08331299 501.68847656]
[528.04711914 515.42675781]
[521.08746338 528.72113037]
[513.23675537 541.50952148]
[504.53167725 553.73242188]
[495.01278687 565.33270264]
[484.72439575 576.25634766]
[473.71456909 586.45245361]
[462.03457642 595.87341309]
[449.73892212 604.47534180]
[436.88491821 612.21813965]
[423.53247070 619.06573486]
[409.74386597 624.98608398]
[395.58337402 629.95172119]
[381.11700439 633.93939209]
[366.41226196 636.93054199]
[351.53765869 638.91125488]
[336.56259155 639.87225342]
[321.55682373 639.80908203]
[306.59036255 638.72198486]
[291.73297119 636.61614990]
[277.05392456 633.50122070]
[262.62167358 629.39190674]
[248.50350952 624.30718994]
[234.76524353 618.27093506]
[221.47093201 611.31115723]
[208.68257141 603.46038818]
[196.45977783 594.75524902]
[184.85954285 585.23626709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 145]
[26 144]
[27 143]
[28 142]
[29 136]
[30 135]
[31 134]
[32 133]
[33 132]
[34 131]
[44 130]
[45 129]
[46 127]
[47 126]
[49 124]
[50 123]
[51 122]
[52 121]
[53 120]
[55 118]
[56 117]
[57 116]
[59 115]
[60 114]
[61 113]
[62 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
