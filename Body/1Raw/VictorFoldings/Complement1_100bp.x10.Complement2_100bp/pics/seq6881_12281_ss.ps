%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[89.15463257 673.45910645]
[73.36610413 672.75341797]
[62.76274109 661.03405762]
[63.63532639 645.25384521]
[75.46617126 634.77496338]
[68.30489349 621.71490479]
[76.65068054 608.27398682]
[77.32047272 593.28894043]
[77.99025726 578.30395508]
[78.66004181 563.31890869]
[79.32982635 548.33386230]
[79.88803864 533.34423828]
[80.33464050 518.35089111]
[80.78125000 503.35754395]
[80.89291382 488.35797119]
[80.66958618 473.35961914]
[72.74365234 460.74896240]
[80.27463531 446.83511353]
[65.91342163 444.34490967]
[52.25340271 439.24884033]
[39.76321411 431.72015381]
[28.87165070 422.01550293]
[19.95295143 410.46633911]
[13.31394768 397.46743774]
[9.18349552 383.46362305]
[7.70459509 368.93432617]
[8.92943764 354.37725830]
[12.81756496 340.29141235]
[19.23720551 327.15985107]
[27.96973610 315.43325806]
[38.71713257 305.51437378]
[51.11213684 297.74423218]
[64.73080444 292.39038086]
[79.10701752 289.63769531]
[79.10701752 274.63769531]
[79.10701752 259.63769531]
[79.10701752 244.63768005]
[70.77806091 235.86528015]
[70.65529633 223.36853027]
[79.34992981 213.84140015]
[79.57325745 198.84306335]
[76.52969360 192.10820007]
[79.91322327 183.62353516]
[80.35982513 168.63018799]
[71.53682709 180.76091003]
[58.12812805 187.48451233]
[43.12927628 187.29893494]
[29.89105034 180.24560547]
[21.37090302 167.90028381]
[19.47225761 153.02091980]
[24.61927795 138.93162537]
[35.66210175 128.77998352]
[50.13373947 124.83387756]
[64.80118561 127.97489166]
[76.38770294 137.50131226]
[82.30482483 151.28494263]
[77.16011810 137.30705261]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.75795746 57.14196777]
[103.64323425 42.42207718]
[106.52850342 27.70218658]
[108.20005035 12.79561138]
[108.64665222 -2.19773817]
[109.09326172 -17.19108772]
[109.53986359 -32.18443680]
[98.98161316 -43.63699722]
[99.64812469 -58.83602524]
[110.63145447 -68.83112335]
[110.40812683 -83.82946014]
[109.51531219 -98.80286407]
[105.88066101 -107.18302917]
[108.72235870 -114.00553131]
[108.05257416 -128.99057007]
[107.38278961 -143.97561646]
[106.71300507 -158.96064758]
[106.04322052 -173.94569397]
[105.15039825 -188.91909790]
[104.03475189 -203.87754822]
[102.91910553 -218.83599854]
[99.97871399 -223.14891052]
[99.07688904 -227.70303345]
[99.96413422 -231.68145752]
[102.10288239 -234.48468018]
[101.65628052 -249.47802734]
[93.51152802 -263.04171753]
[100.86646271 -275.99371338]
[100.41985321 -290.98706055]
[92.27510071 -304.55075073]
[99.63003540 -317.50274658]
[99.18342590 -332.49609375]
[95.79989624 -340.98077393]
[98.84346008 -347.71563721]
[98.62013245 -362.71398926]
[98.39680481 -377.71231079]
[84.37728882 -383.65982056]
[73.99363708 -394.79983521]
[69.04488373 -409.20223999]
[70.38843536 -424.37179565]
[77.79151154 -437.68020630]
[89.97148132 -446.82177734]
[104.81809998 -450.21264648]
[119.75908661 -447.26531982]
[132.20584106 -438.49044800]
[140.00187683 -425.40832520]
[141.79647827 -410.28552246]
[137.27873230 -395.74215698]
[127.23136902 -384.29794312]
[113.39514160 -377.93563843]
[113.61846924 -362.93731689]
[113.84179688 -347.93896484]
[114.17677307 -332.94271851]
[114.62338257 -317.94934082]
[122.73619080 -305.45809937]
[115.41320038 -291.43368530]
[115.85980988 -276.44030762]
[123.97261810 -263.94906616]
[116.64962769 -249.92463684]
[117.09623718 -234.93128967]
[117.87755585 -219.95164490]
[118.99320984 -204.99319458]
[120.10885620 -190.03474426]
[123.07893372 -186.29473877]
[123.73109436 -180.64923096]
[121.02825928 -174.61547852]
[121.69804382 -159.63043213]
[122.36782837 -144.64540100]
[123.03761292 -129.66035461]
[123.70739746 -114.67532349]
[124.48871613 -99.69568634]
[125.38153839 -84.72227478]
[136.12213135 -95.19316864]
[151.12203979 -95.14035797]
[161.78863525 -84.59408569]
[162.01159668 -69.59574127]
[151.66320801 -58.73706055]
[136.67150879 -58.23838425]
[125.62480927 -68.38452148]
[135.99374390 -57.75340271]
[135.75440979 -42.54164886]
[124.53321838 -31.73783302]
[124.08660889 -16.74448204]
[123.63999939 -1.75113225]
[123.19339752 13.24221802]
[132.01640320 1.11148715]
[145.42509460 -5.61211920]
[160.42395020 -5.42653036]
[173.66217041 1.62679291]
[182.18232727 13.97211933]
[184.08096313 28.85147285]
[178.93394470 42.94076538]
[167.89112854 53.09241867]
[153.41947937 57.03852081]
[138.75202942 53.89750290]
[127.16551971 44.37108231]
[121.24839783 30.58745766]
[118.36312866 45.30735016]
[115.47785187 60.02724075]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[107.06564331 143.16888428]
[97.02471924 154.17021179]
[95.35317993 169.07678223]
[94.90657043 184.07014465]
[94.57159424 199.06639099]
[94.34826660 214.06472778]
[103.68770599 229.93472290]
[94.10701752 244.63768005]
[94.10701752 259.63769531]
[94.10701752 274.63769531]
[94.10701752 289.63769531]
[109.26971436 292.62283325]
[123.55790710 298.49841309]
[136.42649841 307.03839111]
[147.38491821 317.91500854]
[156.01589966 330.71154785]
[161.99121094 344.93817139]
[165.08428955 360.05078125]
[165.17877197 375.47174072]
[162.27284241 390.61199951]
[156.47927856 404.89355469]
[148.02105713 417.77157593]
[137.22276306 428.75515747]
[124.49816132 437.42602539]
[110.33432007 443.45443726]
[95.27297211 446.61178589]
[103.21487427 460.29522705]
[95.66792297 473.13629150]
[95.89125061 488.13464355]
[98.56971741 492.61489868]
[99.19887543 497.21463013]
[98.07640839 501.13317871]
[95.77459717 503.80413818]
[95.32798767 518.79748535]
[94.88138580 533.79083252]
[97.75389862 542.46185303]
[94.31486511 549.00366211]
[93.64508057 563.98864746]
[92.97529602 578.97369385]
[92.30551147 593.95874023]
[91.63571930 608.94378662]
[98.74909210 623.07568359]
[90.45121002 635.44476318]
[101.30000305 646.93737793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[7 207]
[8 206]
[9 205]
[10 204]
[11 203]
[12 201]
[13 200]
[14 199]
[15 195]
[16 194]
[18 192]
[34 177]
[35 176]
[36 175]
[37 174]
[40 172]
[41 171]
[43 170]
[44 169]
[56 168]
[58 166]
[59 165]
[61 163]
[62 162]
[63 161]
[64 160]
[65 159]
[66 147]
[67 146]
[68 145]
[69 144]
[72 141]
[73 134]
[74 133]
[76 132]
[77 131]
[78 130]
[79 129]
[80 128]
[81 125]
[82 124]
[83 123]
[87 122]
[88 121]
[90 119]
[91 118]
[93 116]
[94 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
