%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[23.32114601 348.63668823]
[16.52736473 362.01535034]
[8.92286301 374.95037842]
[0.53649020 387.39273071]
[-8.59994221 399.29522705]
[-18.45177460 410.61270142]
[-28.98163795 421.30221558]
[-40.14958954 431.32321167]
[-51.91325760 440.63769531]
[-64.22802734 449.21032715]
[-77.04718018 457.00860596]
[-90.32209015 464.00292969]
[-104.00240326 470.16674805]
[-118.03621674 475.47671509]
[-132.37030029 479.91265869]
[-146.95027161 483.45779419]
[-161.72084045 486.09863281]
[-176.62596130 487.82516479]
[-191.60910034 488.63085938]
[-206.61343384 488.51263428]
[-221.58201599 487.47094727]
[-236.45808411 485.50976562]
[-251.18519592 482.63650513]
[-265.70751953 478.86209106]
[-279.96990967 474.20080566]
[-293.91830444 468.67037964]
[-307.49978638 462.29174805]
[-320.66284180 455.08911133]
[-333.35754395 447.08984375]
[-345.53567505 438.32421875]
[-357.15112305 428.82550049]
[-368.15979004 418.62979126]
[-378.51989746 407.77566528]
[-388.19216919 396.30438232]
[-397.13992310 384.25939941]
[-405.32919312 371.68643188]
[-412.72894287 358.63317871]
[-419.31106567 345.14913940]
[-425.05062866 331.28546143]
[-429.92581177 317.09475708]
[-433.91818237 302.63085938]
[-437.01254272 287.94860840]
[-439.19720459 273.10369873]
[-440.46383667 258.15249634]
[-440.80767822 243.15162659]
[-440.22735596 228.15806580]
[-438.72515869 213.22866821]
[-436.30670166 198.42007446]
[-432.98123169 183.78843689]
[-428.76129150 169.38926697]
[-423.66296387 155.27719116]
[-417.70553589 141.50575256]
[-410.91162109 128.12716675]
[-403.30697632 115.19220734]
[-394.92050171 102.74993134]
[-385.78393555 90.84752655]
[-375.93200684 79.53015900]
[-365.40203857 68.84075165]
[-354.23397827 58.81985855]
[-342.47021484 49.50548553]
[-330.15536499 40.93296814]
[-317.33615112 33.13483047]
[-304.06115723 26.14064598]
[-290.38079834 19.97694969]
[-276.34692383 14.66712379]
[-262.01278687 10.23130894]
[-247.43278503 6.68633127]
[-232.66218567 4.04563951]
[-217.75704956 2.31924987]
[-202.77389526 1.51371157]
[-187.76957703 1.63208020]
[-172.80101013 2.67390680]
[-157.92495728 4.63523912]
[-143.19786072 7.50863743]
[-128.67559814 11.28320217]
[-114.41323853 15.94461441]
[-100.46488953 21.47519112]
[-86.88346863 27.85395432]
[-73.72048950 35.05670547]
[-61.02588654 43.05612564]
[-48.84781265 51.82186508]
[-37.23246765 61.32067108]
[-26.22390938 71.51651764]
[-15.86389732 82.37072754]
[-6.19173288 93.84211731]
[2.75589561 105.88718414]
[10.94504547 118.46022797]
[18.34465218 131.51356506]
[31.82438660 124.93353271]
[45.30412292 118.35350800]
[58.78385544 111.77347565]
[72.26358795 105.19345093]
[85.74332428 98.61342621]
[93.71653748 87.12779999]
[107.67665100 87.90684509]
[121.15637970 81.32681274]
[115.47937012 67.43663025]
[110.73278046 53.20161438]
[106.93737793 38.68402100]
[104.10975647 23.94732285]
[102.26226807 9.05596542]
[101.40300751 -5.92493486]
[101.53572845 -20.92987061]
[102.65984344 -35.89322662]
[104.77043915 -50.74957657]
[107.85829163 -65.43395233]
[111.90989685 -79.88214111]
[116.90753937 -94.03096771]
[122.82936096 -107.81856537]
[129.64945984 -121.18463135]
[137.33804321 -134.07073975]
[145.86145020 -146.42051697]
[155.18243408 -158.17997742]
[165.26023865 -169.29769897]
[176.05078125 -179.72505188]
[187.50688171 -189.41647339]
[199.57844543 -198.32954407]
[212.21270752 -206.42530823]
[225.35438538 -213.66836548]
[238.94602966 -220.02703857]
[252.92822266 -225.47352600]
[267.23977661 -229.98402405]
[281.81817627 -233.53878784]
[296.59963989 -236.12228394]
[311.51950073 -237.72320557]
[326.51257324 -238.33456421]
[341.51324463 -237.95367432]
[356.45596313 -236.58221436]
[371.27539062 -234.22618103]
[385.90667725 -230.89587402]
[400.28588867 -226.60585022]
[414.35009766 -221.37486267]
[428.03787231 -215.22581482]
[441.28930664 -208.18556213]
[454.04647827 -200.28491211]
[466.25357056 -191.55839539]
[477.85726929 -182.04417419]
[488.80679321 -171.78387451]
[499.05422974 -160.82234192]
[508.55484009 -149.20750427]
[517.26702881 -136.99015808]
[525.15270996 -124.22373199]
[532.17742920 -110.96405029]
[538.31042480 -97.26908112]
[543.52490234 -83.19873047]
[547.79803467 -68.81450653]
[551.11120605 -54.17931747]
[553.44982910 -39.35715866]
[554.80377197 -24.41284180]
[555.16705322 -9.41171741]
[554.53814697 5.58061790]
[552.91967773 20.49860764]
[550.31884766 35.27701569]
[546.74700928 49.85122681]
[542.21972656 64.15750122]
[536.75683594 78.13328552]
[530.38226318 91.71746826]
[523.12377930 104.85064697]
[515.01318359 117.47539520]
[506.08596802 129.53649902]
[496.38113403 140.98123169]
[485.94113159 151.75953674]
[474.81158447 161.82427979]
[463.04119873 171.13146973]
[450.68142700 179.64039612]
[437.78631592 187.31384277]
[424.41226196 194.11827087]
[410.61773682 200.02391052]
[396.46304321 205.00495911]
[382.01013184 209.03961182]
[367.32214355 212.11024475]
[352.46331787 214.20341492]
[337.49865723 215.30998230]
[322.49356079 215.42509460]
[307.51370239 214.54826355]
[292.62451172 212.68331909]
[277.89114380 209.83840942]
[263.37802124 206.02598572]
[249.14857483 201.26269531]
[235.26506042 195.56939697]
[221.78816223 188.97097778]
[208.77684021 181.49627686]
[196.28797913 173.17799377]
[184.37617493 164.05249023]
[173.09352112 154.15968323]
[162.48937988 143.54283142]
[152.61007690 132.24835205]
[143.49885559 120.32563019]
[135.19552612 107.82681274]
[127.73641205 94.80654907]
[114.25667572 101.38657379]
[106.28346252 112.87220001]
[92.32334900 112.09315491]
[78.84362030 118.67318726]
[65.36388397 125.25321198]
[51.88414764 131.83323669]
[38.40441513 138.41326904]
[24.92468071 144.99330139]
[30.66436768 158.85690308]
[35.53971100 173.04756165]
[39.53221512 187.51142883]
[42.62673187 202.19364929]
[44.81152725 217.03852844]
[46.07831192 231.98974609]
[46.42228317 246.99058533]
[45.84212875 261.98416138]
[44.34005737 276.91357422]
[41.92176437 291.72219849]
[38.59642029 306.35388184]
[34.37664413 320.75308228]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 198]
[89 197]
[90 196]
[91 195]
[92 194]
[93 193]
[95 191]
[96 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
