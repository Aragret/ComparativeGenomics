%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[181.45062256 309.73550415]
[179.02153015 294.92788696]
[177.57641602 279.99212646]
[177.12156677 264.99349976]
[177.65898132 249.99760437]
[179.18632507 235.07000732]
[181.69689941 220.27600098]
[185.17973328 205.68026733]
[189.61959839 191.34661865]
[194.99707031 177.33775330]
[201.28865051 163.71492004]
[188.11618042 156.53955078]
[174.94369507 149.36418152]
[161.77122498 142.18881226]
[148.59875488 135.01344299]
[135.42626953 127.83808136]
[122.25379944 120.66271973]
[109.08132172 113.48735046]
[92.32854462 114.33624268]
[83.74042511 99.92720032]
[70.46257782 92.94874573]
[57.18473434 85.97029114]
[52.85492706 86.29701996]
[49.03096008 85.32654572]
[46.05852127 83.37718964]
[44.14440536 80.84682465]
[43.34260941 78.16069794]
[30.50366783 70.40430450]
[17.66472816 62.64791489]
[8.97753525 74.88474274]
[-0.58965945 86.44657135]
[-10.98460293 97.27027130]
[-22.15052032 107.29670715]
[-34.02642822 116.47113037]
[-46.54746246 124.74343109]
[-59.64523697 132.06842041]
[-73.24821472 138.40611267]
[-87.28209686 143.72186279]
[-101.67024994 147.98666382]
[-116.33406830 151.17720032]
[-131.19348145 153.27606201]
[-146.16731262 154.27177429]
[-161.17379761 154.15892029]
[-176.13096619 152.93809509]
[-190.95712280 150.61596680]
[-205.57128906 147.20523071]
[-219.89366150 142.72451782]
[-233.84600830 137.19827271]
[-247.35212708 130.65670776]
[-260.33825684 123.13554382]
[-272.73342896 114.67585754]
[-284.47000122 105.32384491]
[-295.48385620 95.13059235]
[-305.71484375 84.15177155]
[-315.10705566 72.44734955]
[-323.60919189 60.08124542]
[-331.17486572 47.12100220]
[-337.76272583 33.63740540]
[-343.33679199 19.70409584]
[-347.86660767 5.39717770]
[-351.32745361 -9.20521164]
[-353.70040894 -24.02331734]
[-354.97253418 -38.97620773]
[-355.13687134 -53.98221207]
[-354.19253540 -68.95938110]
[-352.14465332 -83.82589722]
[-349.00442505 -98.50057983]
[-344.78900146 -112.90326691]
[-339.52142334 -126.95530701]
[-333.23043823 -140.57994080]
[-325.95040894 -153.70275879]
[-317.72109985 -166.25210571]
[-308.58746338 -178.15940857]
[-298.59939575 -189.35964966]
[-287.81143188 -199.79165649]
[-276.28247070 -209.39845276]
[-264.07550049 -218.12757874]
[-251.25721741 -225.93133545]
[-237.89761353 -232.76710510]
[-224.06962585 -238.59757996]
[-209.84881592 -243.39088440]
[-195.31285095 -247.12084961]
[-180.54109192 -249.76710510]
[-165.61425781 -251.31520081]
[-150.61384583 -251.75666809]
[-135.62179565 -251.08912659]
[-120.71998596 -249.31617737]
[-105.98980713 -246.44754028]
[-91.51171112 -242.49887085]
[-77.36477661 -237.49172974]
[-63.62626648 -231.45347595]
[-50.37121582 -224.41708374]
[-37.67202377 -216.42097473]
[-25.59804535 -207.50883484]
[-14.21522617 -197.72932434]
[-3.58573818 -187.13587952]
[6.23236561 -175.78633118]
[15.18546009 -163.74269104]
[23.22464752 -151.07072449]
[30.30601883 -137.83966064]
[36.39089966 -124.12172699]
[41.44605255 -109.99188232]
[45.44387054 -95.52728271]
[48.36251831 -80.80693054]
[50.18605423 -65.91122437]
[50.90451813 -50.92152786]
[50.51398849 -35.91970444]
[49.01659775 -20.98769188]
[46.42052078 -6.20704222]
[42.73994064 8.34151649]
[37.99495697 22.57852364]
[32.21148682 36.42621994]
[25.42111969 49.80897522]
[38.26005936 57.56536484]
[51.09899902 65.32175446]
[64.16318512 72.69244385]
[77.44103241 79.67089844]
[90.71887970 86.64935303]
[102.02822113 83.86725616]
[112.29697418 89.36216736]
[116.25669098 100.31487274]
[129.42916870 107.49024200]
[142.60163879 114.66561127]
[155.77410889 121.84097290]
[168.94659424 129.01634216]
[182.11906433 136.19171143]
[195.29154968 143.36708069]
[208.46401978 150.54243469]
[216.49708557 137.86822510]
[225.35021973 125.75263977]
[234.98474121 114.24864960]
[245.35850525 103.40657043]
[256.42614746 93.27380371]
[268.13928223 83.89466095]
[280.44668579 75.31015015]
[293.29452515 67.55782318]
[306.62661743 60.67156601]
[320.38470459 54.68149567]
[334.50860596 49.61380768]
[348.93652344 45.49065399]
[363.60543823 42.33007431]
[378.45114136 40.14588165]
[393.40872192 38.94763184]
[408.41284180 38.74056244]
[423.39779663 39.52557755]
[438.29812622 41.29924393]
[453.04867554 44.05381012]
[467.58489990 47.77722931]
[481.84326172 52.45322037]
[495.76138306 58.06133270]
[509.27847290 64.57704163]
[522.33532715 71.97186279]
[534.87493896 80.21345520]
[546.84246826 89.26578522]
[558.18554688 99.08926392]
[568.85455322 109.64093781]
[578.80285645 120.87466431]
[587.98699951 132.74131775]
[596.36676025 145.18902588]
[603.90551758 158.16333008]
[610.57031250 171.60751343]
[616.33203125 185.46279907]
[621.16540527 199.66856384]
[625.04931641 214.16273499]
[627.96685791 228.88189697]
[629.90521240 243.76168823]
[630.85589600 258.73706055]
[630.81475830 273.74252319]
[629.78198242 288.71246338]
[627.76214600 303.58142090]
[624.76397705 318.28439331]
[620.80059814 332.75701904]
[615.88946533 346.93609619]
[610.05187988 360.75958252]
[603.31347656 374.16702271]
[595.70373535 387.09982300]
[587.25585938 399.50140381]
[578.00683594 411.31753540]
[567.99707031 422.49655151]
[557.27038574 432.98959351]
[545.87365723 442.75076294]
[533.85668945 451.73733521]
[521.27209473 459.91006470]
[508.17486572 467.23321533]
[494.62228394 473.67474365]
[480.67358398 479.20648193]
[466.38983154 483.80422974]
[451.83340454 487.44790649]
[437.06799316 490.12158203]
[422.15817261 491.81353760]
[407.16912842 492.51641846]
[392.16638184 492.22708130]
[377.21557617 490.94686890]
[362.38204956 488.68133545]
[347.73071289 485.44039917]
[333.32559204 481.23822021]
[319.22970581 476.09317017]
[305.50466919 470.02777100]
[292.21051025 463.06854248]
[279.40533447 455.24591064]
[267.14520264 446.59405518]
[255.48365784 437.15084839]
[244.47171021 426.95758057]
[234.15754700 416.05877686]
[224.58622742 404.50216675]
[215.79962158 392.33822632]
[207.83616638 379.62017822]
[200.73065186 366.40362549]
[194.51417542 352.74633789]
[189.21391296 338.70806885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 128]
[12 127]
[13 126]
[14 125]
[15 124]
[16 123]
[17 122]
[18 121]
[20 118]
[21 117]
[22 116]
[27 115]
[28 114]
[29 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
