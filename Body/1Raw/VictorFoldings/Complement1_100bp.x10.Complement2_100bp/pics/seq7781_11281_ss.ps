%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[90.60777283 245.92315674]
[92.22957611 260.84921265]
[92.28227234 275.86303711]
[90.76528168 290.80014038]
[87.69522858 305.49682617]
[83.10575104 319.79208374]
[77.04712677 333.52926636]
[69.58573914 346.55792236]
[60.80334854 358.73522949]
[50.79617310 369.92782593]
[39.67385483 380.01306152]
[27.55826187 388.88043213]
[14.58213234 396.43276978]
[0.88764441 402.58731079]
[-13.37515926 407.27670288]
[-28.05000687 410.44946289]
[-42.97611237 412.07092285]
[-57.98993683 412.12322998]
[-72.92698669 410.60589600]
[-87.62359619 407.53549194]
[-101.91873932 402.94564819]
[-115.65579987 396.88668823]
[-128.68424988 389.42498779]
[-140.86137390 380.64230347]
[-152.05372620 370.63485718]
[-162.13867188 359.51229858]
[-171.00573730 347.39648438]
[-178.55775452 334.42016602]
[-184.71199036 320.72552490]
[-189.40101624 306.46261597]
[-192.57344055 291.78768921]
[-194.19451904 276.86154175]
[-194.24649048 261.84771729]
[-192.72877502 246.91072083]
[-189.65800476 232.21418762]
[-185.06782532 217.91914368]
[-179.00854492 204.18223572]
[-171.54652405 191.15396118]
[-162.76353455 178.97705078]
[-152.75581360 167.78495789]
[-141.63301086 157.70027161]
[-129.51698303 148.83349609]
[-116.54048920 141.28178406]
[-102.84570312 135.12788391]
[-88.58267212 130.43920898]
[-73.90766907 127.26714325]
[-58.98148346 125.64643097]
[-43.96765518 125.59482574]
[-29.03068352 127.11290741]
[-14.33422470 130.18403625]
[-0.03930227 134.77455139]
[13.69746113 140.83418274]
[26.72555733 148.29650879]
[38.90224457 157.07978821]
[48.90041733 145.89781189]
[58.89859009 134.71583557]
[68.89675903 123.53386688]
[78.89493561 112.35189056]
[88.89310455 101.16991425]
[98.80775452 89.91381836]
[108.63833618 78.58422852]
[118.46891785 67.25463104]
[128.29949951 55.92504120]
[131.49971008 40.43087387]
[145.68484497 35.88869476]
[155.51542664 24.55910301]
[144.67959595 14.18240166]
[134.36599731 3.28650880]
[124.59944153 -8.10232449]
[115.40348053 -19.95666313]
[106.80025482 -32.24794769]
[98.81050873 -44.94656754]
[91.45347595 -58.02192688]
[84.74687958 -71.44253540]
[78.70688629 -85.17604828]
[73.34803772 -99.18939209]
[68.68324280 -113.44880676]
[64.72375488 -127.91992950]
[61.47909164 -142.56790161]
[58.95708466 -157.35745239]
[57.16380692 -172.25292969]
[56.10357666 -187.21844482]
[55.77894592 -202.21797180]
[56.19069672 -217.21534729]
[57.33784485 -232.17446899]
[59.21761703 -247.05928040]
[61.82549286 -261.83392334]
[65.15518188 -276.46279907]
[69.19866943 -290.91067505]
[73.94621277 -305.14276123]
[79.38636780 -319.12472534]
[85.50603485 -332.82293701]
[92.29047394 -346.20434570]
[99.72333527 -359.23675537]
[107.78672028 -371.88876343]
[116.46118927 -384.12985229]
[125.72585297 -395.93057251]
[135.55839539 -407.26248169]
[145.93511963 -418.09829712]
[156.83103943 -428.41186523]
[168.21990967 -438.17840576]
[180.07426453 -447.37432861]
[192.36557007 -455.97750854]
[205.06420898 -463.96722412]
[218.13958740 -471.32424927]
[231.56021118 -478.03079224]
[245.29374695 -484.07077026]
[259.30709839 -489.42956543]
[273.56652832 -494.09432983]
[288.03765869 -498.05377197]
[302.68563843 -501.29840088]
[317.47518921 -503.82037354]
[332.37066650 -505.61361694]
[347.33618164 -506.67382812]
[362.33572388 -506.99841309]
[377.33309937 -506.58660889]
[392.29220581 -505.43942261]
[407.17700195 -503.55963135]
[421.95166016 -500.95172119]
[436.58053589 -497.62197876]
[451.02838135 -493.57846069]
[465.26046753 -488.83087158]
[479.24243164 -483.39068604]
[492.94061279 -477.27099609]
[506.32202148 -470.48651123]
[519.35437012 -463.05361938]
[532.00634766 -454.99020386]
[544.24743652 -446.31570435]
[556.04815674 -437.05102539]
[567.38006592 -427.21844482]
[578.21582031 -416.84167480]
[588.52935791 -405.94573975]
[598.29583740 -394.55685425]
[607.49176025 -382.70248413]
[616.09490967 -370.41116333]
[624.08459473 -357.71249390]
[631.44158936 -344.63708496]
[638.14813232 -331.21646118]
[644.18804932 -317.48291016]
[649.54681396 -303.46954346]
[654.21154785 -289.21011353]
[658.17095947 -274.73895264]
[661.41552734 -260.09097290]
[663.93750000 -245.30140686]
[665.73065186 -230.40592957]
[666.79083252 -215.44039917]
[667.11541748 -200.44087219]
[666.70355225 -185.44349670]
[665.55633545 -170.48439026]
[663.67651367 -155.59959412]
[661.06854248 -140.82495117]
[657.73876953 -126.19609070]
[653.69525146 -111.74822998]
[648.94763184 -97.51618195]
[643.50738525 -83.53423309]
[637.38763428 -69.83605957]
[630.60314941 -56.45467377]
[623.17022705 -43.42230225]
[615.10675049 -30.77034950]
[606.43225098 -18.52928925]
[597.16754150 -6.72861481]
[587.33489990 4.60324574]
[576.95812988 15.43899345]
[566.06219482 25.75252342]
[554.67327881 35.51898956]
[542.81884766 44.71486282]
[530.52752686 53.31798935]
[517.82885742 61.30764771]
[504.75341797 68.66458130]
[491.33276367 75.37107849]
[477.59918213 81.41097260]
[463.58581543 86.76971436]
[449.32635498 91.43439484]
[434.85522461 95.39378357]
[420.20721436 98.63833618]
[405.41766357 101.16023254]
[390.52215576 102.95339966]
[375.55664062 104.01351929]
[360.55709839 104.33803558]
[345.55972290 103.92617035]
[330.60061646 102.77891541]
[315.71582031 100.89903259]
[300.94119263 98.29104614]
[286.31234741 94.96125031]
[271.86450195 90.91765594]
[257.63244629 86.17000580]
[243.65051270 80.72974396]
[229.95236206 74.60997009]
[216.57099915 67.82543182]
[203.53863525 60.39247513]
[190.88670349 52.32900238]
[178.64567566 43.65443802]
[166.84501648 34.38968277]
[157.01443481 45.71927643]
[154.51736450 60.40307617]
[139.62908936 65.75562286]
[129.79850769 77.08521271]
[119.96793365 88.41481018]
[110.13735199 99.74440002]
[107.65315247 107.41259766]
[100.07508087 111.16808319]
[90.07691193 122.35005951]
[80.07873535 133.53204346]
[70.08056641 144.71400452]
[60.08239365 155.89598083]
[50.08422089 167.07795715]
[60.16971588 178.20002747]
[69.03736877 190.31541443]
[76.59001923 203.29135132]
[82.74491882 216.98570251]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 206]
[55 205]
[56 204]
[57 203]
[58 202]
[59 201]
[60 199]
[61 198]
[62 197]
[63 196]
[65 194]
[66 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
