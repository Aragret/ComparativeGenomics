%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[43.74964142 269.24356079]
[49.79428864 282.99768066]
[53.90971375 297.44680786]
[56.01924896 312.32174683]
[56.08359909 327.34536743]
[54.10155869 342.23782349]
[50.11005402 356.72167969]
[44.18344879 370.52706909]
[36.43214798 383.39685059]
[27.00055122 395.09121704]
[16.06436729 405.39236450]
[3.82733130 414.10836792]
[-9.48259068 421.07687378]
[-23.61744118 426.16799927]
[-38.31389999 429.28695679]
[-53.29817581 430.37564087]
[-68.29112244 429.41372681]
[-83.01343536 426.41918945]
[-97.19084167 421.44778442]
[-110.55922699 414.59213257]
[-122.86954498 405.97991943]
[-133.89245605 395.77163696]
[-143.42262268 384.15744019]
[-151.28250122 371.35369873]
[-157.32565308 357.59890747]
[-161.43951416 343.14935303]
[-163.54745483 328.27416992]
[-163.61016846 313.25054932]
[-161.62651062 298.35830688]
[-157.63345337 283.87487793]
[-151.70535278 270.07012939]
[-143.95265198 257.20120239]
[-134.51979065 245.50782776]
[-123.58248901 235.20785522]
[-111.34451294 226.49317932]
[-98.03383636 219.52613831]
[-83.89842987 214.43652344]
[-69.20163727 211.31916809]
[-54.21724319 210.23211670]
[-39.22439957 211.19563293]
[-24.50241280 214.19177246]
[-10.32554531 219.16471863]
[3.04209614 226.02182007]
[11.64066029 213.73098755]
[20.23922348 201.44015503]
[28.83778763 189.14930725]
[37.43635178 176.85847473]
[46.03491592 164.56764221]
[54.63348007 152.27679443]
[63.23204422 139.98596191]
[64.18793488 125.12206268]
[78.43857574 118.24965668]
[86.94539642 105.89514923]
[88.14216614 91.96463013]
[100.63710785 85.69023132]
[109.05172729 73.27273560]
[117.46633911 60.85523987]
[118.80269623 45.09057236]
[132.34756470 38.89494705]
[140.76217651 26.47744942]
[149.17680359 14.05995464]
[135.22567749 19.57051277]
[120.30210876 18.05825996]
[107.74004364 9.86103344]
[100.34588623 -3.18988252]
[99.77150726 -18.17888069]
[106.14522552 -31.75738335]
[118.04313660 -40.89191437]
[132.80722046 -43.54179764]
[147.13914490 -39.11504364]
[157.83709717 -28.60059738]
[162.51116943 -14.34741688]
[160.11711121 0.46032313]
[170.44378662 -10.41901112]
[180.77044678 -21.29834557]
[191.09712219 -32.17768097]
[201.42378235 -43.05701447]
[191.15451050 -53.99628448]
[181.53251648 -65.50901794]
[172.58978271 -77.55697632]
[164.35601807 -90.10012817]
[156.85856628 -103.09681702]
[150.12232971 -116.50386047]
[144.16969299 -130.27673340]
[139.02041626 -144.36965942]
[134.69161987 -158.73583984]
[131.19769287 -173.32756042]
[128.55021667 -188.09632874]
[126.75800323 -202.99310303]
[125.82700348 -217.96836853]
[125.76029968 -232.97241211]
[126.55812836 -247.95538330]
[128.21783447 -262.86749268]
[130.73390198 -277.65921021]
[134.09796143 -292.28143311]
[138.29885864 -306.68551636]
[143.32263184 -320.82366943]
[149.15258789 -334.64892578]
[155.76934814 -348.11532593]
[163.15097046 -361.17816162]
[171.27288818 -373.79400635]
[180.10815430 -385.92102051]
[189.62741089 -397.51882935]
[199.79902649 -408.54898071]
[210.58921814 -418.97479248]
[221.96214294 -428.76162720]
[233.88000488 -437.87701416]
[246.30323792 -446.29061890]
[259.19058228 -453.97451782]
[272.49917603 -460.90322876]
[286.18484497 -467.05364990]
[300.20214844 -472.40542603]
[314.50448608 -476.94073486]
[329.04434204 -480.64453125]
[343.77343750 -483.50448608]
[358.64285278 -485.51110840]
[373.60314941 -486.65777588]
[388.60467529 -486.94061279]
[403.59756470 -486.35873413]
[418.53204346 -484.91403198]
[433.35848999 -482.61132812]
[448.02764893 -479.45825195]
[462.49075317 -475.46530151]
[476.69982910 -470.64575195]
[490.60763550 -465.01556396]
[504.16796875 -458.59347534]
[517.33575439 -451.40081787]
[530.06732178 -443.46148682]
[542.32037354 -434.80184937]
[554.05413818 -425.45068359]
[565.22961426 -415.43902588]
[575.80981445 -404.80014038]
[585.75952148 -393.56939697]
[595.04559326 -381.78408813]
[603.63732910 -369.48333740]
[611.50610352 -356.70806885]
[618.62579346 -343.50064087]
[624.97277832 -329.90499878]
[630.52593994 -315.96627808]
[635.26678467 -301.73077393]
[639.17968750 -287.24575806]
[642.25152588 -272.55938721]
[644.47216797 -257.72045898]
[645.83422852 -242.77819824]
[646.33319092 -227.78231812]
[645.96734619 -212.78257751]
[644.73797607 -197.82884216]
[642.64910889 -182.97077942]
[639.70770264 -168.25772095]
[635.92352295 -153.73857117]
[631.30914307 -139.46154785]
[625.87988281 -125.47408295]
[619.65386963 -111.82263947]
[612.65167236 -98.55256653]
[604.89654541 -85.70794678]
[596.41430664 -73.33145142]
[587.23315430 -61.46419144]
[577.38354492 -50.14558792]
[566.89819336 -39.41323853]
[555.81195068 -29.30280113]
[544.16168213 -19.84785843]
[531.98596191 -11.07981968]
[519.32537842 -3.02781081]
[506.22189331 4.28141975]
[492.71908569 10.82359123]
[478.86181641 16.57697105]
[464.69607544 21.52244759]
[450.26895142 25.64359093]
[435.62835693 28.92671394]
[420.82293701 31.36090660]
[405.90188599 32.93808365]
[390.91473389 33.65300751]
[375.91128540 33.50330353]
[360.94140625 32.48946762]
[346.05477905 30.61486626]
[331.30087280 27.88572884]
[316.72869873 24.31112289]
[302.38668823 19.90291786]
[288.32244873 14.67576313]
[274.58273315 8.64701843]
[261.21316528 1.83671367]
[248.25816345 -5.73252916]
[235.76074219 -14.03556633]
[223.76245117 -23.04481316]
[212.30311584 -32.73034668]
[201.97645569 -21.85101128]
[191.64978027 -10.97167683]
[181.32312012 -0.09234267]
[170.99644470 10.78699207]
[161.59429932 22.47457314]
[153.17967224 34.89206696]
[144.76506042 47.30956268]
[144.03057861 62.18605042]
[129.88383484 69.26985931]
[121.46921539 81.68735504]
[113.05460358 94.10485077]
[111.85783386 108.03536987]
[99.36289215 114.30976868]
[97.13944244 123.16945648]
[90.72940826 126.84822083]
[89.15849304 142.59124756]
[75.52288055 148.58451843]
[66.92431641 160.87536621]
[58.32575226 173.16619873]
[49.72718811 185.45703125]
[41.12862778 197.74787903]
[32.53006363 210.03871155]
[23.93149757 222.32955933]
[15.33293438 234.62039185]
[26.35695648 244.82748413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 209]
[44 208]
[45 207]
[46 206]
[47 205]
[48 204]
[49 203]
[50 202]
[52 200]
[53 198]
[55 196]
[56 195]
[57 194]
[59 192]
[60 191]
[61 190]
[73 189]
[74 188]
[75 187]
[76 186]
[77 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
