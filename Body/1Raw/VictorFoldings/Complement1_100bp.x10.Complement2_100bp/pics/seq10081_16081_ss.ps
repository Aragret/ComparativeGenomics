%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[86.59706116 693.23217773]
[72.56364441 687.86779785]
[59.39141846 680.64239502]
[47.32577896 671.69061279]
[36.59150314 661.17926025]
[27.38855934 649.30407715]
[19.88839531 636.28631592]
[14.23073578 622.36853027]
[10.52097702 607.80999756]
[8.82823086 592.88189697]
[9.18403244 577.86236572]
[11.58175278 563.03112793]
[15.97672367 548.66455078]
[22.28707123 535.03033447]
[30.39523315 522.38232422]
[40.15016556 510.95626831]
[51.37013626 500.96496582]
[63.84612274 492.59457397]
[77.34570312 486.00100708]
[91.61740112 481.30712891]
[106.39532471 478.60037231]
[105.72554016 463.61532593]
[105.05575562 448.63027954]
[104.38597107 433.64523315]
[103.71618652 418.66021729]
[103.04640198 403.67517090]
[88.83209991 401.05575562]
[75.55304718 395.32931519]
[63.87944031 386.78125000]
[54.40126038 375.83938599]
[47.59844971 363.05270386]
[43.81663132 349.06365967]
[43.24952698 334.57601929]
[45.92905426 320.31936646]
[51.72353745 307.01248169]
[60.34418106 295.32693481]
[71.35946655 285.85330200]
[84.21674347 279.07131958]
[98.26995087 275.32559204]
[97.82334137 260.33224487]
[97.37673187 245.33888245]
[96.93013000 230.34553528]
[96.48352051 215.35218811]
[95.92531586 200.36257935]
[95.25552368 185.37753296]
[86.54316711 176.98579407]
[85.86251831 164.50698853]
[94.12307739 154.60113525]
[93.67646790 139.60777283]
[93.22985840 124.61443329]
[92.78325653 109.62107849]
[92.11347198 94.63603973]
[91.22065735 79.66263580]
[90.32784271 64.68923187]
[89.43502045 49.71582413]
[88.31937408 34.75737000]
[86.98114014 19.81718636]
[85.64290619 4.87700081]
[84.30467224 -10.06318474]
[82.74414825 -24.98178864]
[80.96168518 -39.87550735]
[79.17921448 -54.76922226]
[77.39675140 -69.66294098]
[75.61428833 -84.55665588]
[73.83181763 -99.45037842]
[70.07551575 -113.97243500]
[64.41273499 -127.86246490]
[58.74994659 -141.75248718]
[53.08715820 -155.64251709]
[47.42437363 -169.53254700]
[46.26462173 -154.57743835]
[41.32387161 -140.41450500]
[32.92982864 -127.98308563]
[21.63923836 -118.10773468]
[8.20096493 -111.44344330]
[-6.49367952 -108.43222809]
[-21.47005272 -109.27381134]
[-35.73482513 -113.91237640]
[-48.34186172 -122.04026031]
[-58.45499039 -133.11837769]
[-65.40344238 -146.41195679]
[-68.72634125 -161.03926086]
[-68.20330811 -176.03013611]
[-63.86901855 -190.39028931]
[-56.01095963 -203.16726685]
[-45.15032578 -213.51359558]
[-32.00746155 -220.74305725]
[-17.45409012 -224.37614441]
[-2.45548129 -224.17190552]
[11.99356079 -220.14384460]
[24.93468285 -212.55917358]
[35.50954819 -201.92092896]
[43.01873398 -188.92997742]
[42.12591934 -203.90338135]
[41.23310089 -218.87678528]
[40.34028625 -233.85018921]
[25.96370506 -238.78804016]
[14.57441616 -248.85543823]
[7.90920687 -262.51718140]
[6.98447084 -277.68997192]
[11.94122505 -292.06005859]
[22.02359962 -303.43606567]
[35.69410706 -310.08331299]
[50.86809158 -310.98809814]
[65.23162842 -306.01242065]
[76.59439087 -295.91510010]
[83.22364044 -282.23587036]
[84.10845184 -267.06069946]
[79.11390686 -252.70372009]
[69.00164032 -241.35424805]
[55.31369400 -234.74301147]
[56.20650864 -219.76960754]
[57.09932327 -204.79618835]
[57.99214172 -189.82278442]
[61.31439972 -175.19532776]
[66.97718811 -161.30529785]
[72.63996887 -147.41526794]
[78.30275726 -133.52525330]
[83.96554565 -119.63522339]
[85.44439697 -134.56214905]
[91.40591431 -148.32659912]
[101.28187561 -159.61665344]
[114.13096619 -167.35621643]
[128.72850037 -170.80758667]
[143.68313599 -169.64181519]
[157.56947327 -163.97001648]
[169.06398010 -154.33277893]
[177.07106018 -141.64866638]
[180.82752991 -127.12664795]
[179.97535706 -112.15087891]
[174.59574890 -98.14874268]
[165.20146179 -86.45483398]
[152.68789673 -78.18375397]
[138.24777222 -74.12383270]
[123.25743866 -74.66204834]
[109.14566040 -79.74710083]
[97.25749207 -88.89431000]
[88.72554016 -101.23284149]
[90.50800323 -86.33912659]
[92.29046631 -71.44540405]
[94.07293701 -56.55168915]
[95.85540009 -41.65797043]
[97.63786316 -26.76425552]
[100.77198029 -23.16059685]
[101.67557526 -17.54984474]
[99.24485779 -11.40141869]
[100.58309174 3.53876662]
[101.92132568 18.47895241]
[103.25955963 33.41913605]
[106.28499603 37.11451340]
[107.02113342 42.74967957]
[104.40843201 48.82300949]
[105.30124664 63.79641342]
[106.19406128 78.76982117]
[107.08687592 93.74322510]
[110.12003326 98.02270508]
[110.53955841 103.69697571]
[107.77660370 109.17447662]
[108.22321320 124.16782379]
[108.66981506 139.16117859]
[109.11642456 154.15452576]
[119.15518188 169.59164429]
[110.24056244 184.70774841]
[110.91035461 199.69279480]
[114.41983032 208.12614441]
[111.47687531 214.90557861]
[111.92347717 229.89892578]
[112.37008667 244.89228821]
[112.81668854 259.88562012]
[113.26329803 274.87896729]
[128.51387024 278.11486816]
[142.54238892 284.89569092]
[154.53869629 294.82519531]
[163.81109619 307.32550049]
[169.82626343 321.67059326]
[172.23988342 337.02853394]
[170.91636658 352.50976562]
[165.93647766 367.21862793]
[157.59239197 380.30505371]
[146.37060547 391.01388550]
[132.92347717 398.72830200]
[118.03144073 403.00537109]
[118.70122528 417.99041748]
[119.37100983 432.97546387]
[120.04079437 447.96051025]
[120.71057892 462.94552612]
[121.38036346 477.93057251]
[136.34085083 479.30813599]
[150.97439575 482.71002197]
[165.00840759 488.07290649]
[178.18141174 495.29687500]
[190.24801636 504.24734497]
[200.98342896 514.75756836]
[210.18766785 526.63171387]
[217.68923950 539.64862061]
[223.34840393 553.56579590]
[227.05973816 568.12396240]
[228.75408936 583.05187988]
[228.39991760 598.07147217]
[226.00379944 612.90295410]
[221.61039734 627.26995850]
[215.30151367 640.90496826]
[207.19473267 653.55377197]
[197.44102478 664.98089600]
[186.22213745 674.97344971]
[173.74705505 683.34515381]
[160.24818420 689.94018555]
[145.97700500 694.63562012]
[131.19937134 697.34399414]
[116.19058228 698.01483154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[39 170]
[40 169]
[41 168]
[42 167]
[43 166]
[44 164]
[45 163]
[48 161]
[49 160]
[50 159]
[51 158]
[52 155]
[53 154]
[54 153]
[55 152]
[56 149]
[57 148]
[58 147]
[59 146]
[60 143]
[61 142]
[62 141]
[63 140]
[64 139]
[65 138]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
