%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[171.37001038 473.19604492]
[165.51528931 459.37850952]
[160.68479919 445.17044067]
[156.90432739 430.64770508]
[154.19404602 415.88772583]
[152.56840515 400.96929932]
[152.03608704 385.97198486]
[152.59992981 370.97583008]
[154.25691223 356.06085205]
[156.99821472 341.30661011]
[160.80918884 326.79183960]
[165.66952515 312.59396362]
[171.55326843 298.78875732]
[178.42904663 285.44985962]
[186.26016235 272.64843750]
[195.00482178 260.45281982]
[204.61639404 248.92805481]
[215.04357910 238.13563538]
[205.04541016 226.95365906]
[195.04724121 215.77168274]
[185.04905701 204.58970642]
[175.05088806 193.40773010]
[165.05271912 182.22576904]
[148.78253174 184.40719604]
[134.27275085 176.38049316]
[127.33760071 161.13566589]
[130.89051819 144.59864807]
[116.57644653 140.48083496]
[112.91632843 125.08882141]
[102.75278473 114.05693817]
[89.46533203 109.70547485]
[86.21533966 96.10660553]
[76.05178833 85.07472992]
[65.88824463 74.04285431]
[55.72469711 63.01097488]
[55.19841003 78.00173950]
[45.25316620 89.23081207]
[30.43580055 91.56442261]
[17.52061462 83.93566132]
[12.41225529 69.83230591]
[17.44619560 55.70221329]
[30.32098770 48.00547791]
[45.15207672 50.26182175]
[36.19138336 38.23244476]
[27.23068619 26.20306587]
[18.26999092 14.17368889]
[15.03404903 28.82048607]
[2.46375275 37.00508499]
[-12.24006271 34.03897476]
[-20.65438271 21.62127686]
[-17.95910454 6.86541462]
[-5.69820499 -1.77578509]
[9.10390663 0.64725298]
[1.25215125 -12.13358974]
[-4.37013006 -15.61230850]
[-6.99723482 -20.65168762]
[-6.63655615 -25.41393089]
[-14.10429668 -38.42288208]
[-21.57203865 -51.43183517]
[-29.03977966 -64.44078827]
[-36.50751877 -77.44973755]
[-50.29780197 -71.50617981]
[-64.67572021 -67.17337036]
[-79.45382690 -64.50779724]
[-94.43946838 -63.54421234]
[-109.43725586 -64.29517365]
[-124.25168610 -66.75090027]
[-138.68960571 -70.87936401]
[-152.56278992 -76.62674713]
[-165.69038391 -83.91812134]
[-177.90122986 -92.65843201]
[-189.03613281 -102.73372650]
[-198.94993591 -114.01265717]
[-207.51339722 -126.34817505]
[-214.61486816 -139.57945251]
[-220.16174316 -153.53402710]
[-224.08175659 -168.02992249]
[-226.32376099 -182.87820435]
[-226.85853577 -197.88525391]
[-225.67912292 -212.85545349]
[-222.80088806 -227.59362793]
[-218.26135254 -241.90760803]
[-212.11970520 -255.61082458]
[-204.45602417 -268.52459717]
[-195.37019348 -280.48059082]
[-184.98069763 -291.32290649]
[-173.42295837 -300.91021729]
[-160.84767151 -309.11752319]
[-147.41877747 -315.83782959]
[-133.31134033 -320.98352051]
[-118.70928955 -324.48748779]
[-103.80298615 -326.30410767]
[-88.78677368 -326.40963745]
[-73.85641479 -324.80273438]
[-59.20655823 -321.50433350]
[-45.02819443 -316.55746460]
[-31.50616264 -310.02658081]
[-18.81675529 -301.99682617]
[-7.12540340 -292.57290649]
[3.41547155 -281.87771606]
[12.66844749 -270.05059814]
[20.51289368 -257.24581909]
[26.84654236 -243.63029480]
[31.58681870 -229.38151550]
[34.67192459 -214.68527222]
[36.06164169 -199.73312378]
[35.73785019 -184.72003174]
[33.70477295 -169.84172058]
[29.98891258 -155.29214478]
[24.63871384 -141.26098633]
[17.72392845 -127.93119812]
[9.33470345 -115.47653198]
[-0.41958809 -104.05937195]
[-11.41178036 -93.82855988]
[-23.49856758 -84.91748047]
[-16.03082657 -71.90853119]
[-8.56308556 -58.89957809]
[-1.09534478 -45.89062500]
[6.37239647 -32.88167191]
[14.03299427 -19.98534584]
[21.88474846 -7.20450258]
[30.29936790 5.21299314]
[39.26006317 17.24237061]
[48.22076035 29.27174759]
[57.18145752 41.30112457]
[66.75657654 52.84742737]
[76.92012024 63.87930679]
[87.08367157 74.91117859]
[97.24721527 85.94306183]
[110.53466797 90.29452515]
[113.78466034 103.89339447]
[123.94821167 114.92527008]
[138.98925781 119.83216095]
[141.92240906 134.43510437]
[155.45648193 131.82368469]
[168.41081238 136.20590210]
[177.43598938 146.33584595]
[180.25450134 159.49639893]
[176.23469543 172.22758484]
[186.23286438 183.40956116]
[196.23103333 194.59153748]
[206.22920227 205.77351379]
[216.22738647 216.95549011]
[226.22555542 228.13746643]
[238.11271667 218.97789001]
[250.63676453 210.71046448]
[263.73089600 203.37928772]
[277.32525635 197.02348328]
[291.34729004 191.67697144]
[305.72216797 187.36827087]
[320.37322998 184.12037659]
[335.22229004 181.95059204]
[350.19009399 180.87052917]
[365.19683838 180.88592529]
[380.16241455 181.99670410]
[395.00698853 184.19696045]
[409.65136719 187.47491455]
[424.01736450 191.81311035]
[438.02841187 197.18840027]
[451.60968018 203.57208252]
[464.68872070 210.93011475]
[477.19580078 219.22322083]
[489.06414795 228.40718079]
[500.23040771 238.43296814]
[510.63507080 249.24710083]
[520.22259521 260.79187012]
[528.94183350 273.00570679]
[536.74621582 285.82342529]
[543.59417725 299.17663574]
[549.44909668 312.99407959]
[554.27984619 327.20205688]
[558.06054688 341.72476196]
[560.77105713 356.48468018]
[562.39691162 371.40307617]
[562.92950439 386.40039062]
[562.36590576 401.39654541]
[560.70916748 416.31155396]
[557.96813965 431.06582642]
[554.15734863 445.58068848]
[549.29730225 459.77862549]
[543.41375732 473.58395386]
[536.53820801 486.92294312]
[528.70727539 499.72448730]
[519.96282959 511.92025757]
[510.35144043 523.44519043]
[499.92443848 534.23779297]
[488.73745728 544.24041748]
[476.85012817 553.39984131]
[464.32592773 561.66705322]
[451.23168945 568.99798584]
[437.63723755 575.35357666]
[423.61511230 580.69982910]
[409.24017334 585.00830078]
[394.58905029 588.25598145]
[379.73995972 590.42553711]
[364.77212524 591.50531006]
[349.76538086 591.48968506]
[334.79980469 590.37866211]
[319.95526123 588.17816162]
[305.31097412 584.89996338]
[290.94500732 580.56152344]
[276.93408203 575.18603516]
[263.35290527 568.80212402]
[250.27397156 561.44384766]
[237.76704407 553.15057373]
[225.89886475 543.96643066]
[214.73274231 533.94042969]
[204.32826233 523.12609863]
[194.74093628 511.58117676]
[186.02192688 499.36721802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 144]
[19 143]
[20 142]
[21 141]
[22 140]
[23 139]
[27 134]
[29 132]
[30 131]
[32 129]
[33 128]
[34 127]
[35 126]
[43 125]
[44 124]
[45 123]
[46 122]
[53 121]
[54 120]
[57 119]
[58 118]
[59 117]
[60 116]
[61 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
