%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAAxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[37.60838699 202.13931274]
[40.64673615 216.83769226]
[42.42761993 231.74078369]
[42.93820953 246.74122620]
[42.17481995 261.73092651]
[40.14295578 276.60189819]
[36.85725784 291.24694824]
[32.34139633 305.56060791]
[26.62791061 319.43972778]
[19.75796700 332.78430176]
[11.78106403 345.49819946]
[2.75467777 357.48977661]
[-7.25615692 368.67266846]
[-18.17930984 378.96627808]
[-29.93607903 388.29647827]
[-42.44175339 396.59597778]
[-55.60622787 403.80502319]
[-69.33465576 409.87167358]
[-83.52811432 414.75219727]
[-98.08434296 418.41143799]
[-112.89846039 420.82305908]
[-127.86372375 421.96963501]
[-142.87231445 421.84292603]
[-157.81608582 420.44384766]
[-172.58737183 417.78247070]
[-187.07974243 413.87799072]
[-201.18878174 408.75851440]
[-214.81282043 402.46093750]
[-227.85371399 395.03067017]
[-240.21748352 386.52117920]
[-251.81504822 376.99383545]
[-262.56283569 366.51727295]
[-272.38345337 355.16696167]
[-281.20608521 343.02468872]
[-288.96719360 330.17794800]
[-295.61087036 316.71926880]
[-301.08920288 302.74566650]
[-305.36276245 288.35781860]
[-308.40072632 273.65936279]
[-310.18121338 258.75619507]
[-310.69143677 243.75575256]
[-309.92764282 228.76608276]
[-307.89538574 213.89517212]
[-304.60931396 199.25018311]
[-300.09307861 184.93664551]
[-294.37924194 171.05767822]
[-287.50897217 157.71327209]
[-279.53173828 144.99960327]
[-270.50503540 133.00823975]
[-260.49389648 121.82560730]
[-249.57049561 111.53227234]
[-237.81347656 102.20240021]
[-225.30758667 93.90320587]
[-212.14292908 86.69449615]
[-198.41435242 80.62820435]
[-184.22076416 75.74804688]
[-169.66444397 72.08917236]
[-154.85026550 69.67795563]
[-139.88496399 68.53176880]
[-124.87638092 68.65886688]
[-109.93264008 70.05832672]
[-95.16142273 72.72007751]
[-80.66915131 76.62493896]
[-66.56024933 81.74477386]
[-52.93636703 88.04268646]
[-39.89567566 95.47331238]
[-27.53212738 103.98310089]
[-15.93480682 113.51074982]
[-5.18727398 123.98759460]
[4.63303375 135.33816528]
[13.45535946 147.48066711]
[26.29430008 139.72427368]
[39.13323975 131.96788025]
[51.97217941 124.21149445]
[64.51358032 115.98268890]
[76.74006653 107.29286194]
[88.96655273 98.60304260]
[74.39567566 95.04081726]
[66.49382782 82.29087830]
[69.78756714 67.65696716]
[82.39006805 59.52205658]
[97.08206177 62.54618454]
[105.44730377 74.99700165]
[102.69431305 89.74131012]
[115.64730835 82.17693329]
[128.60031128 74.61255646]
[141.55329895 67.04817200]
[154.50630188 59.48379517]
[166.92379761 51.06917572]
[178.75007629 41.84207916]
[190.57633972 32.61497879]
[197.08773804 15.39048290]
[214.54914856 13.63952446]
[226.23672485 4.23737288]
[237.92431641 -5.16477823]
[249.61189270 -14.56692982]
[261.29946899 -23.96907997]
[272.98706055 -33.37123108]
[264.57702637 -45.80228424]
[257.22229004 -58.88537979]
[250.97308350 -72.53114319]
[245.87207031 -86.64635468]
[241.95411682 -101.13459778]
[239.24600220 -115.89690399]
[237.76618958 -130.83242798]
[237.52481079 -145.83912659]
[238.52351379 -160.81451416]
[240.75546265 -175.65628052]
[244.20542908 -190.26303101]
[248.84983826 -204.53500366]
[254.65695190 -218.37467957]
[261.58712769 -231.68754578]
[269.59298706 -244.38264465]
[278.61987305 -256.37326050]
[288.60610962 -267.57748413]
[299.48348999 -277.91876221]
[311.17770386 -287.32647705]
[323.60885620 -295.73635864]
[336.69204712 -303.09094238]
[350.33789062 -309.33999634]
[364.45315552 -314.44082642]
[378.94143677 -318.35858154]
[393.70379639 -321.06655884]
[408.63931274 -322.54617310]
[423.64602661 -322.78738403]
[438.62139893 -321.78851318]
[453.46313477 -319.55636597]
[468.06985474 -316.10623169]
[482.34176636 -311.46163940]
[496.18136597 -305.65435791]
[509.49417114 -298.72402954]
[522.18914795 -290.71801758]
[534.17968750 -281.69097900]
[545.38378906 -271.70462036]
[555.72491455 -260.82711792]
[565.13250732 -249.13279724]
[573.54223633 -236.70153809]
[580.89666748 -223.61827087]
[587.14556885 -209.97235107]
[592.24621582 -195.85702515]
[596.16381836 -181.36868286]
[598.87158203 -166.60632324]
[600.35101318 -151.67076111]
[600.59204102 -136.66404724]
[599.59301758 -121.68869019]
[597.36071777 -106.84697723]
[593.91040039 -92.24030304]
[589.26562500 -77.96845245]
[583.45819092 -64.12890625]
[576.52770996 -50.81620789]
[568.52154541 -38.12129974]
[559.49432373 -26.13089943]
[549.50787354 -14.92691994]
[538.63024902 -4.58589220]
[526.93579102 4.82154036]
[514.50445557 13.23111534]
[501.42108154 20.58538628]
[487.77508545 26.83411598]
[473.65969849 31.93461609]
[459.17129517 35.85204697]
[444.40890503 38.55964661]
[429.47332764 40.03892136]
[414.46661377 40.27976227]
[399.49127197 39.28052902]
[384.64959717 37.04804230]
[370.04296875 33.59755707]
[355.77114868 28.95264244]
[341.93167114 23.14502525]
[328.61907959 16.21438217]
[315.92425537 8.20805645]
[303.93395996 -0.81926155]
[292.73010254 -10.80590343]
[282.38919067 -21.68365097]
[270.70162964 -12.28149891]
[259.01403809 -2.87934828]
[247.32646179 6.52280283]
[235.63888550 15.92495441]
[223.95129395 25.32710457]
[222.33676147 37.31542587]
[212.67658997 45.24416351]
[199.80343628 44.44124985]
[187.97717285 53.66835022]
[176.15089417 62.89544678]
[191.15046692 63.00900269]
[203.76544189 71.12458038]
[210.08691406 84.72747803]
[208.15612793 99.60269928]
[198.57135010 111.14098358]
[184.30252075 115.76707458]
[169.77101135 112.04752350]
[159.47955322 101.13487244]
[156.61706543 86.41053772]
[162.07067871 72.43679047]
[149.11769104 80.00117493]
[136.16468811 87.56555176]
[123.21168518 95.12992859]
[110.25868988 102.69431305]
[97.65637970 110.82952881]
[85.42989349 119.51934814]
[73.20340729 128.20916748]
[87.33253479 133.24581909]
[92.34831238 147.38235474]
[84.55328369 160.19787598]
[69.69366455 162.24525452]
[58.72341156 152.01522827]
[59.72857285 137.05043030]
[46.88963318 144.80682373]
[34.05069351 152.56321716]
[21.21175194 160.31961060]
[27.85575867 173.77810669]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 209]
[72 208]
[73 207]
[74 206]
[75 200]
[76 199]
[77 198]
[84 197]
[85 196]
[86 195]
[87 194]
[88 193]
[89 183]
[90 182]
[91 181]
[93 178]
[94 177]
[95 176]
[96 175]
[97 174]
[98 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
