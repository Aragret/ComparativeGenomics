%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[94.29750061 445.98486328]
[84.40328979 457.33380127]
[72.36547089 466.37728882]
[58.71030045 472.72000122]
[44.03471375 476.08465576]
[28.98027039 476.32415771]
[14.20508099 473.42803955]
[0.35505500 467.52291870]
[-11.96434307 458.86691284]
[-22.21456337 447.83847046]
[-29.94750977 434.91967773]
[-34.82513046 420.67529297]
[-36.63419724 405.72802734]
[-35.29562378 390.73129272]
[-30.86793137 376.34069824]
[-23.54467392 363.18533325]
[-13.64599800 351.84030151]
[-1.60462761 342.80154419]
[12.05303860 336.46420288]
[26.72994614 333.10531616]
[41.78448486 332.87173462]
[44.66975784 318.15185547]
[47.55503082 303.43197632]
[50.44030380 288.71206665]
[48.56663132 284.31909180]
[49.43271637 278.70242310]
[53.63684464 273.59979248]
[56.95910263 258.97232056]
[60.28136444 244.34486389]
[63.60362244 229.71740723]
[58.87737274 215.59254456]
[69.47902679 203.84880066]
[59.91640472 190.01423645]
[63.38665009 173.21327209]
[78.22066498 163.94120789]
[73.28464508 149.88827515]
[83.71027374 137.98799133]
[86.81438446 123.31268311]
[89.91849518 108.63738251]
[80.64977264 120.43106079]
[69.09074402 129.99079895]
[55.76725006 136.88171387]
[41.28543472 140.79029846]
[26.30411911 141.53872681]
[11.50485134 139.09297180]
[-2.43909693 133.56430054]
[-14.89337063 125.20420837]
[-25.29138374 114.39304352]
[-33.16009521 101.62263489]
[-38.14153290 87.47394562]
[-40.00907516 72.59066010]
[-38.67775726 57.64985657]
[-34.20814896 43.33124542]
[-26.80358505 30.28623009]
[-16.80092621 19.10826874]
[-4.65522432 10.30588627]
[9.08096981 4.27953053]
[23.78275299 1.30336177]
[38.78129196 1.51277530]
[53.39425278 4.89824438]
[66.95684052 11.30575275]
[78.85205078 20.44379997]
[88.53873444 31.89666939]
[95.57621002 45.14332962]
[99.64431000 59.58114624]
[100.55797577 74.55329132]
[98.27452087 89.38282776]
[106.87308502 77.09198761]
[115.47164917 64.80114746]
[124.07021332 52.51031113]
[125.64113617 36.76728821]
[139.27674866 30.77401161]
[147.41195679 18.17169952]
[155.07255554 5.27537251]
[162.73315430 -7.62095451]
[170.39375305 -20.51728058]
[167.97241211 -33.18613815]
[174.61843872 -43.76980972]
[186.30709839 -46.88459396]
[194.15885925 -59.66543579]
[202.01060486 -72.44628143]
[202.64169312 -88.25489044]
[215.89640808 -95.04914856]
[223.74816895 -107.82999420]
[231.59991455 -120.61083984]
[239.45167542 -133.39167786]
[241.27731323 -142.34181213]
[247.51667786 -146.30313110]
[255.55784607 -158.96565247]
[263.59902954 -171.62818909]
[271.64019775 -184.29071045]
[259.76477051 -193.47216797]
[248.78718567 -203.71018982]
[238.80108643 -214.91743469]
[229.89166260 -226.99827576]
[222.13493347 -239.84965515]
[215.59709167 -253.36190796]
[210.33390808 -267.41976929]
[206.39027405 -281.90328979]
[203.79985046 -296.68890381]
[202.58474731 -311.65048218]
[202.75531006 -326.66030884]
[204.31010437 -341.59039307]
[207.23585510 -356.31332397]
[211.50758362 -370.70349121]
[217.08886719 -384.63812256]
[223.93209839 -397.99832153]
[231.97885132 -410.67010498]
[241.16050720 -422.54537964]
[251.39871216 -433.52279663]
[262.60610962 -443.50872803]
[274.68710327 -452.41793823]
[287.53863525 -460.17443848]
[301.05099487 -466.71206665]
[315.10894775 -471.97503662]
[329.59252930 -475.91842651]
[344.37817383 -478.50857544]
[359.33975220 -479.72344971]
[374.34960938 -479.55261230]
[389.27966309 -477.99758911]
[404.00253296 -475.07159424]
[418.39263916 -470.79962158]
[432.32717896 -465.21810913]
[445.68725586 -458.37466431]
[458.35891724 -450.32769775]
[470.23403931 -441.14584351]
[481.21127319 -430.90744019]
[491.19702148 -419.69989014]
[500.10604858 -407.61874390]
[507.86233521 -394.76708984]
[514.39971924 -381.25460815]
[519.66247559 -367.19659424]
[523.60559082 -352.71292114]
[526.19549561 -337.92721558]
[527.41015625 -322.96563721]
[527.23907471 -307.95578003]
[525.68377686 -293.02575684]
[522.75756836 -278.30291748]
[518.48529053 -263.91290283]
[512.90356445 -249.97845459]
[506.05990601 -236.61848450]
[498.01272583 -223.94696045]
[488.83068848 -212.07200623]
[478.59210205 -201.09492493]
[467.38436890 -191.10937500]
[455.30307007 -182.20056152]
[442.45129395 -174.44447327]
[428.93872070 -167.90730286]
[414.88058472 -162.64482117]
[400.39688110 -158.70191956]
[385.61111450 -156.11224365]
[370.64950562 -154.89787292]
[355.63967896 -155.06919861]
[340.70965576 -156.62472534]
[325.98687744 -159.55120850]
[311.59692383 -163.82366943]
[297.66259766 -169.40565491]
[284.30273438 -176.24952698]
[276.26153564 -163.58700562]
[268.22036743 -150.92448425]
[260.17919922 -138.26196289]
[252.23251343 -125.53992462]
[244.38076782 -112.75907898]
[236.52900696 -99.97824097]
[228.67724609 -87.19739532]
[228.60777283 -72.30295563]
[214.79145813 -64.59452057]
[206.93969727 -51.81367874]
[199.08793640 -39.03283691]
[199.55496216 -21.49006653]
[183.29008484 -12.85668373]
[175.62948608 0.03964305]
[167.96888733 12.93597031]
[160.30828857 25.83229637]
[175.26672363 24.71635246]
[185.57710266 35.61112213]
[183.63900757 50.48538971]
[170.88111877 58.37439346]
[156.70808411 53.46265793]
[151.56758118 39.37257385]
[150.61169434 54.23647690]
[136.36105347 61.10887527]
[127.76248932 73.39971161]
[119.16392517 85.69055176]
[110.56536102 97.98139191]
[104.59379578 111.74149323]
[101.48968506 126.41679382]
[98.38558197 141.09210205]
[103.09957886 156.19470215]
[92.89597321 167.04531860]
[101.49359131 177.41331482]
[102.53484344 190.64685059]
[95.86296844 201.89709473]
[84.10648346 207.17105103]
[88.59510803 222.34217834]
[78.23108673 233.03965759]
[74.90882111 247.66712952]
[71.58656311 262.29458618]
[68.26430511 276.92202759]
[65.16019440 291.59735107]
[62.27492142 306.31723022]
[59.38964844 321.03713989]
[56.50437546 335.75701904]
[70.35672760 341.65670776]
[82.67952728 350.30783081]
[92.93408203 361.33224487]
[100.67211151 374.24798584]
[105.55533600 388.49044800]
[107.37028503 403.43701172]
[106.03761292 418.43426514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 203]
[22 202]
[23 201]
[24 200]
[27 199]
[28 198]
[29 197]
[30 196]
[32 194]
[35 190]
[37 188]
[38 187]
[39 186]
[67 185]
[68 184]
[69 183]
[70 182]
[72 180]
[73 174]
[74 173]
[75 172]
[76 171]
[79 169]
[80 168]
[81 167]
[83 165]
[84 164]
[85 163]
[86 162]
[88 161]
[89 160]
[90 159]
[91 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
