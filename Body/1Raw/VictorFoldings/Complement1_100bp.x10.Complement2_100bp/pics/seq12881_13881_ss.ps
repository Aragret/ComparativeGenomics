%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[49.52056885 724.61981201]
[34.61658478 726.34313965]
[19.64404869 727.30322266]
[4.64202070 727.49755859]
[-10.35036182 726.92559814]
[-25.29398346 725.58892822]
[-40.14985657 723.49090576]
[-54.87922668 720.63708496]
[-69.44366455 717.03491211]
[-83.80517578 712.69372559]
[-97.92629242 707.62493896]
[-111.77017212 701.84173584]
[-125.30069733 695.35913086]
[-138.48255920 688.19415283]
[-151.28138733 680.36547852]
[-163.66378784 671.89343262]
[-175.59742737 662.80023193]
[-187.05120850 653.10955811]
[-197.99523926 642.84667969]
[-208.40095520 632.03833008]
[-218.24122620 620.71282959]
[-227.49037170 608.89959717]
[-236.12425232 596.62951660]
[-244.12034607 583.93457031]
[-251.45780945 570.84796143]
[-258.11749268 557.40374756]
[-264.08200073 543.63696289]
[-269.33581543 529.58361816]
[-273.86517334 515.28039551]
[-277.65832520 500.76449585]
[-280.70529175 486.07388306]
[-282.99819946 471.24682617]
[-284.53103638 456.32205200]
[-285.29980469 441.33847046]
[-285.30249023 426.33517456]
[-284.53909302 411.35131836]
[-283.01162720 396.42599487]
[-280.72402954 381.59814453]
[-277.68231201 366.90643311]
[-273.89437866 352.38919067]
[-269.37014771 338.08428955]
[-264.12136841 324.02908325]
[-258.16180420 310.26019287]
[-251.50694275 296.81356812]
[-244.17416382 283.72430420]
[-236.18261719 271.02651978]
[-227.55313110 258.75335693]
[-218.30822754 246.93682861]
[-208.47201538 235.60775757]
[-198.07017517 224.79571533]
[-187.12983704 214.52890015]
[-175.67951965 204.83410645]
[-163.74913025 195.73660278]
[-151.36978149 187.26016235]
[-138.57376099 179.42686462]
[-125.39446259 172.25715637]
[-111.86626434 165.76974487]
[-98.02445984 159.98156738]
[-83.90516663 154.90769958]
[-69.54521179 150.56138611]
[-54.98206329 146.95397949]
[-40.25371552 144.09489441]
[-25.39859390 141.99156189]
[-10.45545292 140.64949036]
[4.53672266 140.07217407]
[19.53882027 140.26112366]
[34.51169968 141.21585083]
[49.41630173 142.93385315]
[64.21373749 145.41064453]
[78.86540222 148.63978577]
[82.83749390 134.17526245]
[86.80959320 119.71073914]
[90.78169250 105.24621582]
[93.99496460 90.59442902]
[96.44068909 75.79515839]
[98.88642120 60.99588394]
[101.33214569 46.19661331]
[103.77787018 31.39734268]
[106.22360229 16.59807205]
[108.66932678 1.79880190]
[111.11505890 -13.00046921]
[113.56078339 -27.79973984]
[99.09124756 -31.80780792]
[85.12972260 -37.33121109]
[71.83441162 -44.30736160]
[59.35594940 -52.65722275]
[47.83573532 -62.28617477]
[37.40430069 -73.08512115]
[28.17983818 -84.93170166]
[20.26687050 -97.69168091]
[13.75505733 -111.22047424]
[8.71818256 -125.36480713]
[5.21331835 -139.96438599]
[3.28017688 -154.85382080]
[2.94066215 -169.86437988]
[4.19862127 -184.82598877]
[7.03980064 -199.56910706]
[11.43200684 -213.92671204]
[17.32547379 -227.73609924]
[24.65342331 -240.84080505]
[33.33282471 -253.09233093]
[43.26533508 -264.35186768]
[54.33840561 -274.49185181]
[66.42657471 -283.39736938]
[79.39287567 -290.96752930]
[93.09038544 -297.11651611]
[107.36390686 -301.77471924]
[122.05170441 -304.88931274]
[136.98736572 -306.42501831]
[152.00163269 -306.36444092]
[166.92440796 -304.70825195]
[181.58659363 -301.47521973]
[195.82205200 -296.70199585]
[209.46949768 -290.44265747]
[222.37428284 -282.76809692]
[234.39019775 -273.76531982]
[245.38107300 -263.53631592]
[255.22239685 -252.19697571]
[263.80264282 -239.87579346]
[271.02459717 -226.71238708]
[276.80642700 -212.85588074]
[281.08261108 -198.46331787]
[283.80471802 -183.69773865]
[284.94189453 -168.72647095]
[284.48126221 -153.71913147]
[282.42800903 -138.84579468]
[278.80545044 -124.27496338]
[273.65460205 -110.17174530]
[267.03381348 -96.69593811]
[259.01812744 -84.00023651]
[249.69836426 -72.22848511]
[239.18011475 -61.51407623]
[227.58258057 -51.97840500]
[215.03713989 -43.72951889]
[201.68595886 -36.86088943]
[187.68031311 -31.45033836]
[173.17890930 -27.55917168]
[158.34603882 -25.23148155]
[143.34977722 -24.49364281]
[128.36004639 -25.35401154]
[125.91432953 -10.55474186]
[123.46859741 4.24452925]
[121.02287292 19.04380035]
[118.57714081 33.84307098]
[116.13141632 48.64234161]
[113.68569183 63.44161224]
[111.23995972 78.24088287]
[108.79423523 93.04015350]
[120.93696594 84.23367310]
[135.90788269 85.16722870]
[146.86248779 95.41400909]
[148.79249573 110.28932953]
[140.81550598 122.99239349]
[126.57851410 127.71552277]
[112.59046936 122.29937744]
[105.24621582 109.21830750]
[101.27411652 123.68283081]
[97.30202484 138.14735413]
[93.32992554 152.61187744]
[107.57591248 157.31831360]
[121.56299591 162.74601746]
[135.25469971 168.88084412]
[148.61529541 175.70675659]
[161.60992432 183.20597839]
[174.20468140 191.35893250]
[186.36671448 200.14433289]
[198.06430054 209.53929138]
[209.26692200 219.51927185]
[219.94532776 230.05825806]
[230.07168579 241.12873840]
[239.61956787 252.70182800]
[248.56407166 264.74734497]
[256.88183594 277.23388672]
[264.55120850 290.12881470]
[271.55212402 303.39855957]
[277.86636353 317.00842285]
[283.47741699 330.92297363]
[288.37069702 345.10589600]
[292.53338623 359.52014160]
[295.95465088 374.12814331]
[298.62554932 388.89175415]
[300.53912354 403.77252197]
[301.69036865 418.73156738]
[302.07629395 433.72988892]
[301.69592285 448.72836304]
[300.55020142 463.68783569]
[298.64212036 478.56930542]
[295.97668457 493.33392334]
[292.56082153 507.94317627]
[288.40344238 522.35894775]
[283.51544189 536.54370117]
[277.90951538 550.46026611]
[271.60031128 564.07250977]
[264.60427856 577.34484863]
[256.93969727 590.24261475]
[248.62654114 602.73217773]
[239.68650818 614.78100586]
[230.14289856 626.35766602]
[220.02062988 637.43188477]
[209.34611511 647.97479248]
[198.14720154 657.95892334]
[186.45307922 667.35821533]
[174.29429626 676.14813232]
[161.70254517 684.30572510]
[148.71069336 691.80975342]
[135.35263062 698.64062500]
[121.66319275 704.78045654]
[107.67811584 710.21337891]
[93.43386841 714.92504883]
[78.96762085 718.90332031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 159]
[71 158]
[72 157]
[73 156]
[74 148]
[75 147]
[76 146]
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
