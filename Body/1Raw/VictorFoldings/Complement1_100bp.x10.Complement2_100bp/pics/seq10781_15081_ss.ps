%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[98.71463776 507.19601440]
[85.82093811 514.88159180]
[72.28176880 521.36279297]
[58.20932388 526.58593750]
[43.72021103 530.50781250]
[28.93449402 533.09582520]
[13.97469425 534.32855225]
[-1.03522265 534.19580078]
[-15.97087860 532.69866943]
[-30.70850945 529.84954834]
[-45.12599182 525.67205811]
[-59.10385513 520.20080566]
[-72.52626801 513.48114014]
[-85.28202057 505.56872559]
[-97.26539612 496.52914429]
[-108.37709808 486.43731689]
[-118.52505493 475.37683105]
[-127.62516785 463.43936157]
[-135.60203552 450.72381592]
[-142.38955688 437.33560181]
[-147.93150330 423.38558960]
[-152.18191528 408.98944092]
[-155.10559082 394.26641846]
[-156.67831421 379.33853149]
[-156.88703918 364.32949829]
[-155.73002625 349.36364746]
[-153.21688843 334.56500244]
[-149.36843872 320.05624390]
[-144.21656799 305.95751953]
[-137.80397034 292.38574219]
[-130.18376160 279.45330811]
[-121.41912079 267.26739502]
[-111.58264923 255.92900085]
[-100.75587463 245.53207397]
[-89.02850342 236.16276550]
[-76.49771118 227.89871216]
[-63.26734161 220.80839539]
[-49.44702530 214.95057678]
[-35.15128708 210.37377930]
[-20.49858093 207.11593628]
[-5.61033297 205.20405579]
[9.39008904 204.65397644]
[24.37838173 205.47024536]
[39.23034668 207.64610291]
[53.82291412 211.16351318]
[58.64891434 196.96105957]
[63.47491074 182.75860596]
[68.30091095 168.55615234]
[73.12690735 154.35369873]
[77.95290375 140.15124512]
[72.88916779 129.16555786]
[76.79354858 117.29376221]
[88.09108734 111.07054138]
[83.74244690 100.26634979]
[87.73484039 89.32550812]
[98.01994324 83.86127472]
[103.26666260 69.80880737]
[108.51338196 55.75633240]
[113.76010132 41.70386124]
[102.70234680 31.31147385]
[96.48260498 17.51445007]
[96.02027893 2.42803550]
[101.35470581 -11.64788532]
[111.64386749 -22.57939911]
[125.29718781 -28.72205544]
[140.22134399 -29.16820908]
[145.46804810 -43.22068024]
[150.71476746 -57.27315140]
[155.96148682 -71.32562256]
[161.20820618 -85.37808990]
[166.45492554 -99.43056488]
[171.70164490 -113.48303223]
[176.94836426 -127.53550720]
[182.19508362 -141.58798218]
[168.54676819 -147.82629395]
[155.37825012 -155.02238464]
[142.75666809 -163.13955688]
[130.74630737 -172.13648987]
[119.40838623 -181.96730042]
[108.80068207 -192.58190918]
[98.97724152 -203.92620850]
[89.98813629 -215.94241333]
[81.87915802 -228.56929016]
[74.69163513 -241.74247742]
[68.46219635 -255.39485168]
[63.22258759 -269.45684814]
[58.99950027 -283.85681152]
[55.81446075 -298.52133179]
[53.68370056 -313.37573242]
[52.61807251 -328.34429932]
[52.62300873 -343.35073853]
[53.69848633 -358.31860352]
[55.83901978 -373.17156982]
[59.03370667 -387.83401489]
[63.26626968 -402.23120117]
[68.51512909 -416.28973389]
[74.75354767 -429.93801880]
[81.94973755 -443.10647583]
[90.06701660 -455.72799683]
[99.06403351 -467.73828125]
[108.89493561 -479.07614136]
[119.50962067 -489.68374634]
[130.85400391 -499.50711060]
[142.87026978 -508.49612427]
[155.49720764 -516.60498047]
[168.67044067 -523.79241943]
[182.32287598 -530.02172852]
[196.38490295 -535.26129150]
[210.78489685 -539.48425293]
[225.44946289 -542.66918945]
[240.30387878 -544.79980469]
[255.27244568 -545.86535645]
[270.27886963 -545.86029053]
[285.24673462 -544.78466797]
[300.09970093 -542.64404297]
[314.76211548 -539.44921875]
[329.15927124 -535.21655273]
[343.21777344 -529.96759033]
[356.86599731 -523.72906494]
[370.03439331 -516.53277588]
[382.65585327 -508.41540527]
[394.66607666 -499.41830444]
[406.00384521 -489.58731079]
[416.61138916 -478.97253418]
[426.43466187 -467.62808228]
[435.42358398 -455.61172485]
[443.53234863 -442.98474121]
[450.71966553 -429.81146240]
[456.94891357 -416.15899658]
[462.18829346 -402.09689331]
[466.41116333 -387.69686890]
[469.59597778 -373.03228760]
[471.72653198 -358.17785645]
[472.79193115 -343.20928955]
[472.78674316 -328.20285034]
[471.71105957 -313.23501587]
[469.57028198 -298.38204956]
[466.37536621 -283.71966553]
[462.14257812 -269.32254028]
[456.89352417 -255.26408386]
[450.65487671 -241.61590576]
[443.45849609 -228.44755554]
[435.34100342 -215.82615662]
[426.34381104 -203.81600952]
[416.51275635 -192.47831726]
[405.89788818 -181.87084961]
[394.55337524 -172.04768372]
[382.53695679 -163.05883789]
[369.90991211 -154.95016479]
[356.73654175 -147.76293945]
[343.08401489 -141.53381348]
[329.02191162 -136.29452515]
[314.62185669 -132.07177734]
[299.95724487 -128.88706970]
[285.10278320 -126.75664520]
[270.13421631 -125.69136810]
[255.12777710 -125.69664764]
[240.15994263 -126.77246857]
[225.30700684 -128.91334534]
[210.64463806 -132.10836792]
[196.24755859 -136.34126282]
[191.00083923 -122.28878784]
[185.75411987 -108.23632050]
[180.50740051 -94.18384552]
[175.26068115 -80.13137817]
[170.01396179 -66.07890320]
[164.76724243 -52.02643204]
[159.52052307 -37.97396088]
[154.27380371 -23.92148972]
[165.25370789 -13.80363750]
[171.54042053 -0.21604562]
[172.14768982 14.78382397]
[166.95184326 28.91148567]
[156.71543884 40.00335693]
[142.97544861 46.34809113]
[127.81256866 46.95058060]
[122.56585693 61.00305176]
[117.31913757 75.05551910]
[112.07241821 89.10799408]
[115.27455139 105.57379150]
[102.22011566 116.10745239]
[105.95708466 134.13844299]
[92.15535736 144.97723389]
[87.32936096 159.17968750]
[82.50336456 173.38214111]
[77.67736816 187.58459473]
[72.85137177 201.78706360]
[68.02536774 215.98951721]
[81.73992157 222.09086609]
[94.84281158 229.41407776]
[107.22547913 237.89846802]
[118.78530121 247.47372437]
[129.42649841 258.06051636]
[139.06088257 269.57110596]
[147.60862732 281.91012573]
[154.99890137 294.97531128]
[161.17045593 308.65841675]
[166.07217407 322.84603882]
[169.66340637 337.42059326]
[171.91441345 352.26138306]
[172.80653381 367.24533081]
[172.33238220 382.24835205]
[170.49588013 397.14608765]
[167.31225586 411.81509399]
[162.80787659 426.13381958]
[157.02008057 439.98361206]
[149.99682617 453.24969482]
[141.79629517 465.82214355]
[132.48646545 477.59680176]
[122.14447784 488.47607422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 188]
[46 187]
[47 186]
[48 185]
[49 184]
[50 183]
[53 181]
[56 179]
[57 178]
[58 177]
[59 176]
[66 169]
[67 168]
[68 167]
[69 166]
[70 165]
[71 164]
[72 163]
[73 162]
[74 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
