%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[150.82141113 566.77337646]
[140.39595032 555.98162842]
[130.67593384 544.55035400]
[121.70050812 532.52557373]
[113.50580597 519.95581055]
[106.12483215 506.89160156]
[99.58731079 493.38555908]
[93.91955566 479.49206543]
[89.14439392 465.26705933]
[85.28105164 450.76785278]
[82.34509277 436.05282593]
[80.34833527 421.18118286]
[79.29881287 406.21282959]
[79.20075989 391.20806885]
[80.05457306 376.22729492]
[81.85680389 361.33084106]
[84.60020447 346.57867432]
[88.27371979 332.03021240]
[92.86257172 317.74404907]
[98.34826660 303.77767944]
[104.70872498 290.18734741]
[111.91832733 277.02777100]
[119.94805145 264.35195923]
[128.76556396 252.21095276]
[138.33535767 240.65364075]
[148.61889648 229.72654724]
[159.57476807 219.47367859]
[171.15885925 209.93630981]
[162.37825012 197.77485657]
[153.59765625 185.61340332]
[144.81704712 173.45195007]
[136.03645325 161.29049683]
[119.66204071 154.97814941]
[117.94425201 136.64427185]
[108.98355865 124.61489868]
[100.02285767 112.58551788]
[90.79576111 100.75924683]
[76.07344818 94.96579742]
[74.01467896 80.21416473]
[64.52577972 68.59690094]
[55.03688431 56.97963333]
[45.54798508 45.36237335]
[36.05908966 33.74510956]
[26.57019043 22.12784576]
[14.22048664 30.65610123]
[1.22458673 38.16296005]
[-12.33322620 44.59973145]
[-26.36502266 49.92467117]
[-40.77980042 54.10324478]
[-55.48407364 57.10835266]
[-70.38247681 58.92050552]
[-85.37838745 59.52795029]
[-100.37454987 58.92674637]
[-115.27370453 57.12079620]
[-129.97923279 54.12181091]
[-144.39575195 49.94923401]
[-158.42976379 44.63013458]
[-171.99024963 38.19900894]
[-184.98927307 30.69756126]
[-197.34252930 22.17444611]
[-208.96989441 12.68493843]
[-219.79595947 2.29058146]
[-229.75050354 -8.94121170]
[-238.76899719 -20.93759727]
[-246.79290771 -33.62077332]
[-253.77024841 -46.90848160]
[-259.65573120 -60.71455002]
[-264.41116333 -74.94943237]
[-268.00576782 -89.52082062]
[-270.41619873 -104.33419800]
[-271.62680054 -119.29349518]
[-271.62976074 -134.30171204]
[-270.42504883 -149.26148987]
[-268.02047729 -164.07580566]
[-264.43161011 -178.64860535]
[-259.68176270 -192.88537598]
[-253.80174255 -206.69375610]
[-246.82965088 -219.98422241]
[-238.81072998 -232.67054749]
[-229.79696655 -244.67048645]
[-219.84684753 -255.90620422]
[-209.02487183 -266.30484009]
[-197.40126038 -275.79891968]
[-185.05136108 -284.32690430]
[-172.05529785 -291.83346558]
[-158.49734497 -298.26995850]
[-144.46542358 -303.59457397]
[-130.05056763 -307.77282715]
[-115.34622192 -310.77761841]
[-100.44777679 -312.58944702]
[-85.45185089 -313.19656372]
[-70.45570374 -312.59503174]
[-55.55658722 -310.78875732]
[-40.85113144 -307.78942871]
[-26.43470764 -303.61654663]
[-12.40081215 -298.29714966]
[1.15953743 -291.86572266]
[14.15839577 -284.36398315]
[26.51145935 -275.84057617]
[38.13861084 -266.35083008]
[48.96444702 -255.95623779]
[58.91875458 -244.72421265]
[67.93697357 -232.72763062]
[75.96061707 -220.04428101]
[82.93765259 -206.75642395]
[88.82282257 -192.95022583]
[93.57797241 -178.71522522]
[97.17224121 -164.14376831]
[99.58233643 -149.33033752]
[100.79262543 -134.37100220]
[100.79525757 -119.36280060]
[99.59020233 -104.40304565]
[97.18529510 -89.58877563]
[93.59612274 -75.01605225]
[88.84596252 -60.77939987]
[82.96562195 -46.97114182]
[75.99324799 -33.68083572]
[67.97403717 -20.99467659]
[58.96002197 -8.99493504]
[49.00964737 2.24056149]
[38.18745422 12.63894653]
[47.67634964 24.25621033]
[57.16524887 35.87347412]
[66.65414429 47.49073792]
[76.14304352 59.10800171]
[85.63194275 70.72526550]
[99.67554474 75.68777466]
[102.41302490 91.27034760]
[106.15647888 92.19715118]
[109.47322845 94.76951599]
[111.63751984 98.75985718]
[112.05223846 103.62482452]
[121.01293182 115.65419769]
[129.97363281 127.68357849]
[142.59985352 130.31822205]
[149.81558228 140.52198792]
[148.19790649 152.50988770]
[156.97850037 164.67134094]
[165.75910950 176.83279419]
[174.53971863 188.99424744]
[183.32031250 201.15571594]
[196.01840210 193.16127014]
[209.19796753 185.98829651]
[222.80593872 179.66564941]
[236.78752136 174.21882629]
[251.08641052 169.66972351]
[265.64501953 166.03668213]
[280.40475464 163.33432007]
[295.30618286 161.57353210]
[310.28927612 160.76138306]
[325.29370117 160.90116882]
[340.25906372 161.99232483]
[355.12509155 164.03042603]
[369.83190918 167.00730896]
[384.32031250 170.91094971]
[398.53198242 175.72566223]
[412.40963745 181.43203735]
[425.89746094 188.00709534]
[438.94110107 195.42437744]
[451.48803711 203.65400696]
[463.48776245 212.66284180]
[474.89193726 222.41461182]
[485.65469360 232.87004089]
[495.73260498 243.98704529]
[505.08517456 255.72085571]
[513.67468262 268.02423096]
[521.46661377 280.84759521]
[528.42950439 294.13934326]
[534.53533936 307.84594727]
[539.75958252 321.91220093]
[544.08117676 336.28149414]
[547.48266602 350.89593506]
[549.95043945 365.69671631]
[551.47448730 380.62420654]
[552.04876709 395.61828613]
[551.67083740 410.61862183]
[550.34228516 425.56475830]
[548.06848145 440.39657593]
[544.85858154 455.05429077]
[540.72546387 469.47891235]
[535.68585205 483.61236572]
[529.75988770 497.39773560]
[522.97161865 510.77947998]
[515.34826660 523.70373535]
[506.92053223 536.11853027]
[497.72235107 547.97375488]
[487.79083252 559.22174072]
[477.16589355 569.81713867]
[465.89031982 579.71734619]
[454.00955200 588.88250732]
[441.57141113 597.27569580]
[428.62600708 604.86309814]
[415.22540283 611.61413574]
[401.42361450 617.50170898]
[387.27621460 622.50201416]
[372.84014893 626.59497070]
[358.17355347 629.76409912]
[343.33547974 631.99664307]
[328.38568115 633.28363037]
[313.38436890 633.61981201]
[298.39193726 633.00390625]
[283.46875000 631.43829346]
[268.67489624 628.92938232]
[254.06996155 625.48724365]
[239.71275330 621.12573242]
[225.66107178 615.86236572]
[211.97149658 609.71838379]
[198.69917297 602.71856689]
[185.89752197 594.89105225]
[173.61808777 586.26733398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 141]
[29 140]
[30 139]
[31 138]
[32 137]
[34 134]
[35 133]
[36 132]
[37 128]
[39 126]
[40 125]
[41 124]
[42 123]
[43 122]
[44 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
