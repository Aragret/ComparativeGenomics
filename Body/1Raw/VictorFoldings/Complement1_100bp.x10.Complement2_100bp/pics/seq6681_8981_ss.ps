%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[-10.99205494 471.93734741]
[-9.68259907 486.90502930]
[-10.46906185 501.90927124]
[-13.33613491 516.65802002]
[-18.22801018 530.86419678]
[-25.04946518 544.25128174]
[-33.66772079 556.55871582]
[-43.91501617 567.54681396]
[-55.59188461 577.00183105]
[-68.47103882 584.73962402]
[-82.30177307 590.60961914]
[-96.81488037 594.49755859]
[-111.72784424 596.32769775]
[-126.75038910 596.06451416]
[-141.59008789 593.71307373]
[-155.95809937 589.31915283]
[-169.57473755 582.96832275]
[-182.17492676 574.78411865]
[-193.51344299 564.92590332]
[-203.36955261 553.58557129]
[-211.55139160 540.98382568]
[-217.89973450 527.36602783]
[-222.29098511 512.99719238]
[-224.63966370 498.15704346]
[-224.90005493 483.13446045]
[-223.06710815 468.22183228]
[-219.17648315 453.70944214]
[-213.30390930 439.87979126]
[-205.56370544 427.00207520]
[-196.10655212 415.32696533]
[-185.11651611 405.08172607]
[-172.80752563 396.46575928]
[-159.41917419 389.64678955]
[-145.21208191 384.75756836]
[-130.46278381 381.89321899]
[-115.45838165 381.10955811]
[-100.49094391 382.42181396]
[-85.85182190 385.80441284]
[-71.82595062 391.19155884]
[-64.55272675 378.07284546]
[-57.27949524 364.95416260]
[-50.00626373 351.83547974]
[-42.73303604 338.71676636]
[-42.23899460 331.34265137]
[-35.25260544 325.45806885]
[-27.78486252 312.44912720]
[-20.31712151 299.44015503]
[-13.24001598 286.21463013]
[-6.55982161 272.78427124]
[0.12037286 259.35388184]
[6.80056763 245.92350769]
[5.54095411 231.08226013]
[18.61446762 222.17193604]
[25.29466057 208.74156189]
[11.10251522 213.59779358]
[-2.93562794 208.31286621]
[-10.40171623 195.30296326]
[-7.88235617 180.51605225]
[3.47063541 170.71249390]
[18.46682358 170.37435913]
[30.25015259 179.65623474]
[33.43320084 194.31640625]
[41.47437668 181.65388489]
[49.51554871 168.99134827]
[57.55672073 156.32882690]
[65.40847778 143.54798889]
[73.06907654 130.65165710]
[80.72966766 117.75533295]
[88.39026642 104.85900879]
[95.76095581 91.79482269]
[102.83806610 78.56929016]
[109.91516876 65.34376526]
[116.99227142 52.11823654]
[121.92386627 37.95210266]
[124.58966064 23.19088554]
[126.81478119 8.35684204]
[128.59724426 -6.53687525]
[130.37971497 -21.43059158]
[124.33712769 -36.05241394]
[133.53199768 -47.77007675]
[135.31446838 -62.66379166]
[133.22698975 -71.55650330]
[137.23594666 -77.76537323]
[139.23995972 -92.63090515]
[131.85253906 -109.49825287]
[143.11251831 -122.95856476]
[144.89498901 -137.85227966]
[146.67744446 -152.74600220]
[148.45991516 -167.63970947]
[150.24238586 -182.53343201]
[152.02484131 -197.42715454]
[153.80731201 -212.32086182]
[147.76472473 -226.94268799]
[156.95959473 -238.66035461]
[142.65136719 -243.32519531]
[129.52827454 -250.69206238]
[118.09474182 -260.47778320]
[108.79024506 -272.30624390]
[101.97242737 -285.72280884]
[97.90333557 -300.21170044]
[96.73938751 -315.21609497]
[98.52530670 -330.15921021]
[103.19246674 -344.46667480]
[110.56145477 -357.58859253]
[120.34904480 -369.02053833]
[132.17901611 -378.32312012]
[145.59664917 -385.13876343]
[160.08622742 -389.20550537]
[175.09080505 -390.36703491]
[190.03363037 -388.57867432]
[204.34034729 -383.90921021]
[217.46105957 -376.53808594]
[228.89141846 -366.74865723]
[238.19207764 -354.91717529]
[245.00555420 -341.49844360]
[249.06996155 -327.00820923]
[250.22904968 -312.00344849]
[248.43829346 -297.06091309]
[243.76651001 -282.75494385]
[236.39326477 -269.63543701]
[226.60197449 -258.20666504]
[214.76899719 -248.90791321]
[201.34915161 -242.09660339]
[186.85826111 -238.03454590]
[171.85331726 -236.87788391]
[178.02339172 -223.32136536]
[168.70103455 -210.53840637]
[166.91856384 -195.64468384]
[165.13609314 -180.75096130]
[163.35363770 -165.85725403]
[161.57116699 -150.96353149]
[159.78869629 -136.06980896]
[158.00624084 -121.17609406]
[165.23373413 -111.47611237]
[163.87063599 -99.05332184]
[154.10548401 -90.62689209]
[152.10147095 -75.76136017]
[150.20817566 -60.88132858]
[148.42572021 -45.98760986]
[154.59579468 -32.43108749]
[145.27343750 -19.64812660]
[143.49096680 -4.75440931]
[141.70849609 10.13930798]
[143.33306885 12.42380047]
[144.15060425 15.48945522]
[143.85905457 19.03211021]
[142.27191162 22.64396667]
[139.35087585 25.85668182]
[136.68508911 40.61789703]
[145.72526550 28.64813423]
[157.62605286 19.51734924]
[171.52832031 13.88470650]
[186.42848206 12.15682983]
[201.25083923 14.45845604]
[214.92538452 20.62342834]
[226.46492004 30.20669174]
[235.03642273 42.51642609]
[240.02107239 56.66397476]
[241.05906677 71.62801361]
[238.07542419 86.32828522]
[231.28556824 99.70355988]
[221.17965698 110.78826141]
[208.48725891 118.78217316]
[194.12461853 123.10821533]
[179.12860107 123.45408630]
[164.58178711 119.79481506]
[151.53433228 112.39456940]
[140.92811584 101.78757477]
[133.52883911 88.73956299]
[129.87063599 74.19248199]
[130.21780396 59.19534302]
[123.14069366 72.42086792]
[116.06359100 85.64640045]
[108.98648834 98.87192535]
[109.56988525 102.68401337]
[108.47013855 106.73474884]
[105.61833954 110.26664734]
[101.28659821 112.51959991]
[93.62599945 125.41593170]
[85.96540070 138.31225586]
[78.30480194 151.20858765]
[77.84113312 157.80377197]
[74.60253143 162.47373962]
[70.21924591 164.36999512]
[62.17807388 177.03253174]
[54.13690186 189.69505310]
[46.09572601 202.35757446]
[38.72503662 215.42176819]
[32.04484177 228.85214233]
[32.82664490 244.65402222]
[20.23094368 252.60371399]
[13.55074883 266.03408813]
[6.87055445 279.46444702]
[0.19035961 292.89483643]
[0.61369705 297.21627808]
[-0.27113479 301.06094360]
[-2.15362763 304.07617188]
[-4.64062023 306.04632568]
[-7.30816936 306.90789795]
[-14.77591038 319.91687012]
[-22.24365234 332.92581177]
[-29.61434174 345.98999023]
[-36.88756943 359.10870361]
[-44.16080093 372.22738647]
[-51.43402863 385.34606934]
[-58.70726013 398.46478271]
[-46.70763016 407.50662231]
[-36.08321381 418.13055420]
[-27.04082298 430.12979126]
[-19.75646782 443.27072144]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 206]
[40 205]
[41 204]
[42 203]
[43 202]
[45 201]
[46 200]
[47 199]
[48 194]
[49 193]
[50 192]
[51 191]
[53 189]
[54 188]
[62 187]
[63 186]
[64 185]
[65 184]
[66 181]
[67 180]
[68 179]
[69 178]
[70 174]
[71 173]
[72 172]
[73 171]
[74 149]
[75 148]
[76 143]
[77 142]
[78 141]
[80 139]
[81 138]
[83 137]
[84 136]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[94 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
