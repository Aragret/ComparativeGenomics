%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[42.27108765 718.19146729]
[27.66477585 721.62689209]
[12.87313938 724.14758301]
[-2.04659653 725.74383545]
[-17.03671074 726.40948486]
[-32.03920746 726.14184570]
[-46.99604416 724.94201660]
[-61.84935760 722.81469727]
[-76.54167938 719.76800537]
[-91.01617432 715.81384277]
[-105.21683502 710.96740723]
[-119.08872223 705.24755859]
[-132.57817078 698.67626953]
[-145.63299561 691.27911377]
[-158.20268250 683.08465576]
[-170.23861694 674.12457275]
[-181.69421387 664.43353271]
[-192.52516174 654.04907227]
[-202.68955994 643.01135254]
[-212.14807129 631.36303711]
[-220.86412048 619.14923096]
[-228.80398560 606.41717529]
[-235.93693542 593.21612549]
[-242.23538208 579.59716797]
[-247.67495728 565.61297607]
[-252.23461914 551.31768799]
[-255.89671326 536.76654053]
[-258.64709473 522.01586914]
[-260.47509766 507.12277222]
[-261.37365723 492.14483643]
[-261.33932495 477.13998413]
[-260.37219238 462.16629028]
[-258.47601318 447.28170776]
[-255.65814209 432.54379272]
[-251.92945862 418.00958252]
[-247.30441284 403.73529053]
[-241.80087280 389.77615356]
[-235.44013977 376.18615723]
[-228.24682617 363.01791382]
[-220.24876404 350.32235718]
[-211.47688293 338.14855957]
[-201.96513367 326.54370117]
[-191.75032043 315.55261230]
[-180.87194824 305.21783447]
[-169.37210083 295.57937622]
[-157.29527283 286.67449951]
[-144.68820190 278.53765869]
[-131.59965515 271.20031738]
[-118.08026123 264.69091797]
[-104.18232727 259.03457642]
[-89.95962524 254.25323486]
[-75.46718597 250.36534119]
[-60.76106644 247.38598633]
[-45.89817047 245.32666016]
[-30.93599701 244.19534302]
[-15.93243217 243.99639893]
[-0.94552362 244.73062134]
[13.96674824 246.39515686]
[28.74668884 248.98356628]
[43.33712006 252.48582458]
[47.73811722 238.14598083]
[52.13911438 223.80613708]
[56.54011536 209.46629333]
[60.94111252 195.12643433]
[65.34210968 180.78659058]
[69.74311066 166.44674683]
[68.33662415 161.88265991]
[69.78234100 156.38658142]
[74.49450684 151.74900818]
[79.32050323 137.54655457]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[93.93910217 70.47658539]
[105.35980225 60.91536713]
[110.18579865 46.71290970]
[96.39848328 40.78467178]
[83.11879730 33.79296112]
[70.42861938 25.78088188]
[58.40618134 16.79783821]
[47.12561035 6.89920855]
[36.65645981 -3.85397458]
[27.06327057 -15.39541435]
[18.40519142 -27.65395355]
[10.73560429 -40.55401230]
[4.10179281 -54.01605606]
[-1.45534194 -67.95708466]
[-5.90153790 -82.29115295]
[-9.20938206 -96.92987823]
[-11.35848045 -111.78300476]
[-12.33558369 -126.75896454]
[-12.13466644 -141.76542664]
[-10.75696850 -156.70985413]
[-8.21098328 -171.50012207]
[-4.51240730 -186.04504395]
[0.31595486 -200.25492859]
[6.24433517 -214.04219055]
[13.23618317 -227.32180786]
[21.24839020 -240.01190186]
[30.23155785 -252.03424072]
[40.13030243 -263.31472778]
[50.88359070 -273.78375244]
[62.42512894 -283.37683105]
[74.68375397 -292.03479004]
[87.58389282 -299.70422363]
[101.04600525 -306.33792114]
[114.98709106 -311.89489746]
[129.32119751 -316.34094238]
[143.95996094 -319.64865112]
[158.81311035 -321.79760742]
[173.78907776 -322.77453613]
[188.79553223 -322.57348633]
[203.73995972 -321.19561768]
[218.53019714 -318.64947510]
[233.07507324 -314.95077515]
[247.28492737 -310.12225342]
[261.07211304 -304.19372559]
[274.35165405 -297.20175171]
[287.04168701 -289.18942261]
[299.06393433 -280.20611572]
[310.34429932 -270.30725098]
[320.81323242 -259.55386353]
[330.40618896 -248.01223755]
[339.06399536 -235.75350952]
[346.73333740 -222.85330200]
[353.36688232 -209.39111328]
[358.92370605 -195.44998169]
[363.36962891 -181.11581421]
[366.67715454 -166.47702026]
[368.82595825 -151.62385559]
[369.80276489 -136.64787292]
[369.60153198 -121.64141846]
[368.22354126 -106.69702148]
[365.67724609 -91.90679932]
[361.97836304 -77.36196136]
[357.14971924 -63.15216827]
[351.22106934 -49.36503220]
[344.22894287 -36.08556366]
[336.21646118 -23.39562607]
[327.23306274 -11.37346363]
[317.33407593 -0.09319806]
[306.58059692 10.37562466]
[295.03884888 19.96845818]
[282.78002930 28.62616158]
[269.87976074 36.29535294]
[256.41751099 42.92875290]
[242.47630310 48.48546219]
[228.14210510 52.93121719]
[213.50328064 56.23861313]
[198.65008545 58.38725662]
[183.67408752 59.36390305]
[168.66763306 59.16252518]
[153.72325134 57.78437042]
[138.93305969 55.23793030]
[124.38825226 51.53890991]
[119.56225586 65.74136353]
[122.79338074 80.28128052]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[93.52296448 142.37255859]
[88.69696045 156.57501221]
[84.08295441 170.84774780]
[79.68195343 185.18759155]
[75.28096008 199.52743530]
[70.87995911 213.86727905]
[66.47896576 228.20713806]
[62.07796478 242.54698181]
[57.67696762 256.88684082]
[71.72008514 262.17239380]
[85.40744019 268.32080078]
[98.68607330 275.30825806]
[111.50460815 283.10769653]
[123.81346130 291.68902588]
[135.56500244 301.01895142]
[146.71377563 311.06143188]
[157.21662903 321.77761841]
[167.03294373 333.12603760]
[176.12475586 345.06274414]
[184.45686340 357.54162598]
[191.99705505 370.51437378]
[198.71614075 383.93081665]
[204.58811951 397.73901367]
[209.59030151 411.88555908]
[213.70332336 426.31570435]
[216.91125488 440.97366333]
[219.20170593 455.80270386]
[220.56579590 470.74545288]
[220.99827576 485.74411011]
[220.49743652 500.74063110]
[219.06524658 515.67700195]
[216.70724487 530.49542236]
[213.43252563 545.13861084]
[209.25378418 559.54986572]
[204.18717957 573.67352295]
[198.25231934 587.45477295]
[191.47215271 600.84045410]
[183.87290955 613.77868652]
[175.48400879 626.21948242]
[166.33790588 638.11462402]
[156.46995544 649.41815186]
[145.91836548 660.08636475]
[134.72393799 670.07794189]
[122.92999268 679.35424805]
[110.58216095 687.87933350]
[97.72821045 695.62030029]
[84.41786194 702.54711914]
[70.70262909 708.63311768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 171]
[61 170]
[62 169]
[63 168]
[64 167]
[65 166]
[66 165]
[69 164]
[70 163]
[71 162]
[72 161]
[74 159]
[76 157]
[77 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
