%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[248.37030029 520.70074463]
[257.38687134 508.66946411]
[268.26083374 498.28649902]
[280.69558716 489.83502197]
[274.41821289 476.21170044]
[268.14086914 462.58840942]
[261.86349487 448.96508789]
[255.58613586 435.34176636]
[249.30877686 421.71844482]
[234.45434570 412.37432861]
[236.29518127 394.05239868]
[229.81567383 380.52407837]
[223.03569031 367.14379883]
[215.95858765 353.91827393]
[208.88148499 340.69274902]
[201.80436707 327.46722412]
[194.72726440 314.24169922]
[187.65016174 301.01614380]
[180.57305908 287.79061890]
[177.93234253 286.85000610]
[175.50511169 284.80670166]
[173.71322632 281.73675537]
[172.94325256 277.86743164]
[173.49507141 273.56051636]
[161.14164734 265.23931885]
[162.39358521 249.46772766]
[156.11622620 235.84440613]
[149.83886719 222.22109985]
[133.85920715 222.25523376]
[119.41182709 215.29197693]
[109.41115570 202.67967224]
[105.89913177 186.91180420]
[109.62838745 171.13407898]
[119.90172577 158.51693726]
[113.42222595 144.98858643]
[106.94273376 131.46023560]
[94.46678925 123.32389832]
[95.48377228 107.53540802]
[92.70526886 106.28263855]
[90.32118988 103.99120331]
[88.71711731 100.80522919]
[88.21998596 97.00930023]
[89.04825592 93.00343323]
[83.38546753 79.11341095]
[77.72267914 65.22338104]
[72.05989075 51.33335495]
[66.29386139 37.48587036]
[60.42490005 23.68169212]
[54.45333481 9.92158890]
[41.79072952 0.43639076]
[43.71178436 -14.33380985]
[37.63795090 -28.04907608]
[31.56411552 -41.76434326]
[25.49028206 -55.47961044]
[12.82767582 -64.96480560]
[14.74872875 -79.73500824]
[10.53082275 -82.81012726]
[8.15211201 -86.79698181]
[7.65190554 -90.84233093]
[8.72516441 -94.20097351]
[3.26980734 -108.17376709]
[-13.14971828 -112.23520660]
[-23.80723953 -125.15489960]
[-24.65544319 -141.71516418]
[-15.55787945 -155.37940979]
[-21.22066498 -169.26943970]
[-26.88345146 -183.15946960]
[-32.54623795 -197.04949951]
[-38.20902634 -210.93952942]
[-43.87181091 -224.82954407]
[-44.94068527 -209.86767578]
[-49.38580322 -195.54144287]
[-56.97397995 -182.60237122]
[-67.30715942 -171.72923279]
[-79.84328461 -163.49238586]
[-93.92472839 -158.32392883]
[-108.81280518 -156.49497986]
[-123.72653198 -158.10150146]
[-137.88354492 -163.05921936]
[-150.54121399 -171.10804749]
[-161.03552246 -181.82575989]
[-168.81597900 -194.65013123]
[-173.47442627 -208.90841675]
[-174.76649475 -223.85266113]
[-172.62440491 -238.69892883]
[-167.16052246 -252.66839600]
[-158.66146851 -265.02825928]
[-147.57310486 -275.13015747]
[-134.47708130 -282.44412231]
[-120.06040955 -286.58651733]
[-105.07935333 -287.34005737]
[-90.31977844 -284.66516113]
[-76.55595398 -278.70217896]
[-64.50989532 -269.76391602]
[-54.81351852 -258.31927490]
[-47.97489548 -244.96701050]
[-48.19822311 -259.96536255]
[-48.42155075 -274.96368408]
[-48.64487839 -289.96203613]
[-62.33031082 -296.81530762]
[-71.25385284 -309.25030518]
[-73.36494446 -324.40951538]
[-68.17847443 -338.80947876]
[-56.88625336 -349.14120483]
[-42.08314896 -353.03051758]
[-27.17080879 -349.58367920]
[-15.57597828 -339.59274292]
[-9.96306515 -325.35357666]
[-11.62187576 -310.13824463]
[-20.17122841 -297.44308472]
[-33.64654160 -290.18536377]
[-33.42321396 -275.18701172]
[-33.19988632 -260.18869019]
[-32.97655869 -245.19033813]
[-29.98178482 -230.49234009]
[-24.31899834 -216.60231018]
[-18.65621185 -202.71228027]
[-12.99342537 -188.82225037]
[-7.33063889 -174.93223572]
[-1.66785216 -161.04220581]
[11.53638268 -159.06982422]
[22.12671280 -150.76385498]
[27.27090645 -138.20970154]
[25.52633476 -124.64595795]
[17.24260521 -113.62912750]
[22.69796181 -99.65632629]
[28.46399498 -85.80884552]
[40.69216156 -77.30464935]
[39.20554733 -61.55344391]
[45.27938080 -47.83817673]
[51.35321808 -34.12290955]
[57.42705154 -20.40764427]
[69.65521240 -11.90345383]
[68.16860199 3.84775448]
[73.75131226 8.69080353]
[74.22907257 17.81273079]
[80.09803772 31.61690712]
[85.60802460 36.54253769]
[85.94992065 45.67056656]
[91.61270905 59.56059265]
[97.27549744 73.45062256]
[102.93827820 87.34064484]
[109.01211548 101.05591583]
[121.95151520 110.15989685]
[120.47107697 124.98074341]
[126.95057678 138.50909424]
[133.43006897 152.03742981]
[147.55406189 151.52781677]
[160.76545715 156.42506409]
[171.08111572 165.95883179]
[176.96598816 178.66548157]
[177.56153870 192.61270142]
[172.81083679 205.69332886]
[163.46217346 215.94372559]
[169.73953247 229.56704712]
[176.01690674 243.19036865]
[188.81932068 252.48597717]
[187.11839294 267.28314209]
[193.79858398 280.71353149]
[200.87568665 293.93905640]
[207.95278931 307.16458130]
[215.02990723 320.39010620]
[222.10700989 333.61563110]
[229.18411255 346.84115601]
[236.26121521 360.06668091]
[240.69615173 362.81958008]
[243.36480713 366.61846924]
[244.16450500 370.61541748]
[243.34402466 374.04458618]
[249.82351685 387.57290649]
[261.70718384 392.58703613]
[266.82546997 403.98822021]
[262.93209839 415.44110107]
[269.20947266 429.06439209]
[275.48681641 442.68771362]
[281.76419067 456.31103516]
[288.04153442 469.93435669]
[294.31890869 483.55767822]
[308.82263184 479.59640503]
[323.78057861 478.07653809]
[338.78463745 479.03955078]
[353.42556763 482.45916748]
[367.30386353 488.24212646]
[380.04098511 496.23062134]
[391.28939819 506.20672607]
[400.74227905 517.89831543]
[408.14172363 530.98638916]
[413.28588867 545.11389160]
[416.03442383 559.89550781]
[416.31234741 574.92791748]
[414.11209106 589.80096436]
[409.49365234 604.10900879]
[402.58306885 617.46166992]
[393.56881714 629.49468994]
[382.69683838 639.87976074]
[370.26370239 648.33361816]
[356.60864258 654.62561035]
[342.10415649 658.58410645]
[327.14593506 660.10107422]
[312.14202881 659.13513184]
[297.50180054 655.71270752]
[283.62460327 649.92712402]
[270.88903809 641.93615723]
[259.64251709 631.95788574]
[250.19189453 620.26446533]
[242.79496765 607.17498779]
[237.65353394 593.04644775]
[234.90783691 578.26434326]
[234.63281250 563.23187256]
[236.83593750 548.35919189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 178]
[5 177]
[6 176]
[7 175]
[8 174]
[9 173]
[11 170]
[12 169]
[13 165]
[14 164]
[15 163]
[16 162]
[17 161]
[18 160]
[19 159]
[24 158]
[26 156]
[27 155]
[28 154]
[34 147]
[35 146]
[36 145]
[38 143]
[43 142]
[44 141]
[45 140]
[46 139]
[47 137]
[48 136]
[49 134]
[51 132]
[52 131]
[53 130]
[54 129]
[56 127]
[60 126]
[61 125]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
