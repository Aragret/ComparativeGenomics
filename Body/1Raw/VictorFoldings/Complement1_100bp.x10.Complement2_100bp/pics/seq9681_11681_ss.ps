%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[-11.34829617 484.96954346]
[-15.67612267 499.34091187]
[-21.19134521 513.29974365]
[-27.85527992 526.74810791]
[-35.62118149 539.59167480]
[-44.43457794 551.74035645]
[-54.23364639 563.10894775]
[-64.94965363 573.61767578]
[-76.50743866 583.19287109]
[-88.82592010 591.76733398]
[-101.81870270 599.28094482]
[-115.39463806 605.68096924]
[-129.45851135 610.92254639]
[-143.91166687 614.96893311]
[-158.65270996 617.79162598]
[-173.57827759 619.37097168]
[-188.58363342 619.69580078]
[-203.56355286 618.76391602]
[-218.41296387 616.58172607]
[-233.02767944 613.16467285]
[-247.30522156 608.53662109]
[-261.14541626 602.73010254]
[-274.45117188 595.78582764]
[-287.12918091 587.75250244]
[-299.09051514 578.68646240]
[-310.25128174 568.65130615]
[-320.53317261 557.71746826]
[-329.86404419 545.96154785]
[-338.17849731 533.46612549]
[-345.41821289 520.31872559]
[-351.53234863 506.61166382]
[-356.47805786 492.44104004]
[-360.22064209 477.90628052]
[-362.73388672 463.10931396]
[-364.00009155 448.15393066]
[-364.01043701 433.14505005]
[-362.76480103 418.18795776]
[-360.27197266 403.38754272]
[-356.54937744 388.84762573]
[-351.62319946 374.67022705]
[-345.52792358 360.95474243]
[-338.30633545 347.79739380]
[-330.00912476 335.29052734]
[-320.69442749 323.52178955]
[-310.42761230 312.57376099]
[-299.28067017 302.52325439]
[-287.33184814 293.44076538]
[-274.66488647 285.38998413]
[-261.36871338 278.42736816]
[-247.53651428 272.60180664]
[-233.26538086 267.95413208]
[-218.65538025 264.51693726]
[-203.80899048 262.31433105]
[-188.83036804 261.36178589]
[-173.82456970 261.66595459]
[-158.89685059 263.22473145]
[-144.15191650 266.02716064]
[-129.69320679 270.05361938]
[-115.62213135 275.27581787]
[-102.03739929 281.65713501]
[-89.03428650 289.15286255]
[-76.70400238 297.71035767]
[-65.13304901 307.26962280]
[-54.64554596 296.54522705]
[-44.15804672 285.82086182]
[-33.67054367 275.09646606]
[-23.18304253 264.37210083]
[-12.69554234 253.64772034]
[-2.28816867 242.84555054]
[8.03849983 231.96621704]
[18.36516762 221.08688354]
[28.69183731 210.20755005]
[38.93722916 199.25164795]
[49.10077667 188.21977234]
[59.26432419 177.18789673]
[68.66647339 165.50030518]
[77.26503754 153.20947266]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[89.53601837 68.97929382]
[101.95196533 56.57722855]
[105.05607605 41.90192795]
[100.34207916 26.79931831]
[110.54568481 15.94870949]
[113.64979553 1.27340662]
[116.75390625 -13.40189552]
[118.64719391 -28.28193092]
[111.53382111 -42.41382599]
[119.83171082 -54.78291702]
[120.50149536 -69.76795197]
[113.38812256 -83.89984894]
[121.68600464 -96.26894379]
[122.35578918 -111.25398254]
[123.02557373 -126.23902130]
[123.69535828 -141.22406006]
[109.59990692 -146.75549316]
[98.06584930 -156.56591797]
[90.34432220 -169.59114075]
[87.27290344 -184.41831970]
[89.18474579 -199.43908691]
[95.87247467 -213.02412415]
[106.61065674 -223.69979858]
[120.23448944 -230.30812073]
[135.26615906 -232.13224792]
[150.07516479 -228.97433472]
[163.05509949 -221.17691040]
[172.79801941 -209.58578491]
[178.24708557 -195.45828247]
[178.81121826 -180.32684326]
[174.42922974 -165.83280945]
[165.57644653 -153.54840088]
[153.21313477 -144.80612183]
[138.68040466 -140.55427551]
[138.01062012 -125.56922913]
[137.34083557 -110.58419037]
[136.67105103 -95.59915161]
[143.83232117 -82.53908539]
[135.48652649 -69.09816742]
[134.81674194 -54.11313248]
[141.97802734 -41.05306625]
[133.63223267 -27.61214638]
[142.63487244 -39.61016846]
[156.14218140 -46.13339615]
[171.13661194 -45.72451782]
[184.26835632 -38.47487640]
[192.60375977 -26.00406647]
[194.28065491 -11.09809494]
[188.92443848 2.91300535]
[177.73168945 12.89911938]
[163.20291138 16.62932205]
[148.58384705 13.27027893]
[137.14045715 3.57240725]
[131.42919922 -10.29778576]
[128.32508850 4.37751675]
[125.22098541 19.05281830]
[130.15701294 33.10575104]
[119.73137665 45.00603867]
[116.62726593 59.68133926]
[122.96056366 69.98744965]
[120.49458313 82.23908997]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[107.41105652 131.16325378]
[119.18368530 121.86782074]
[132.70980835 115.38369751]
[147.32946777 112.02726746]
[162.32933044 111.96229553]
[176.97750854 115.19194794]
[190.55931091 121.55864716]
[202.41201782 130.75175476]
[211.95733643 142.32270813]
[218.72952271 155.70692444]
[222.39814758 170.25138855]
[222.78419495 185.24641418]
[219.86885071 199.96038818]
[213.79435730 213.67535400]
[204.85708618 225.72215271]
[193.49311829 235.51296997]
[180.25692749 242.57011414]
[165.79432678 246.54924011]
[150.81100464 247.25619507]
[136.03800964 244.65649414]
[122.19613647 238.87698364]
[109.96079254 230.19963074]
[99.92894745 219.04786682]
[92.59008026 205.96577454]
[88.30226898 191.59167480]
[87.27472687 176.62690735]
[89.55587769 161.80802917]
[80.95731354 174.09887695]
[95.33006287 169.80656433]
[109.77095795 173.86373901]
[119.80531311 185.01325989]
[122.32388306 199.80030823]
[116.54626465 213.64295959]
[104.26271057 222.25192261]
[89.27941132 222.95960999]
[76.23911285 215.54675293]
[69.18248749 202.31028748]
[70.29619598 187.35144043]
[60.13265228 198.38331604]
[49.96910477 209.41519165]
[46.45599365 217.84703064]
[39.57117081 220.53422546]
[29.24450302 231.41355896]
[18.91783333 242.29289246]
[8.59116554 253.17222595]
[4.95290518 261.55081177]
[-1.97116220 264.13522339]
[-12.45866299 274.85958862]
[-22.94616508 285.58398438]
[-33.43366623 296.30834961]
[-43.92116547 307.03274536]
[-54.40866852 317.75711060]
[-44.59338760 329.11169434]
[-35.76266861 341.24780273]
[-27.97845268 354.08029175]
[-21.29533768 367.51913452]
[-15.76020527 381.47006226]
[-11.41187954 395.83526611]
[-8.28086090 410.51391602]
[-6.38911295 425.40310669]
[-5.74990416 440.39837646]
[-6.36771870 455.39453125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 200]
[64 199]
[65 198]
[66 197]
[67 196]
[68 195]
[69 193]
[70 192]
[71 191]
[72 190]
[73 188]
[74 187]
[75 186]
[76 176]
[77 175]
[78 148]
[79 147]
[80 146]
[82 144]
[84 141]
[85 140]
[87 138]
[88 137]
[89 136]
[90 124]
[92 122]
[93 121]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
