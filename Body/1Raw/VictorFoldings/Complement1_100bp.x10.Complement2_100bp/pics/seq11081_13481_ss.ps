%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[109.90280151 958.13354492]
[94.98707581 956.52124023]
[80.16019440 954.23168945]
[65.45288849 951.26971436]
[50.89563370 947.64141846]
[36.51860809 943.35430908]
[22.35161018 938.41723633]
[8.42399979 932.84051514]
[-5.23535347 926.63562012]
[-18.59813881 919.81549072]
[-31.63665962 912.39422607]
[-44.32389069 904.38720703]
[-56.63354111 895.81103516]
[-68.54008484 886.68347168]
[-80.01885986 877.02343750]
[-91.04606628 866.85095215]
[-101.59883881 856.18713379]
[-111.65532684 845.05407715]
[-121.19466400 833.47479248]
[-130.19709778 821.47338867]
[-138.64395142 809.07464600]
[-146.51773071 796.30426025]
[-153.80212402 783.18878174]
[-160.48200989 769.75537109]
[-166.54354858 756.03179932]
[-171.97419739 742.04656982]
[-176.76268005 727.82867432]
[-180.89907837 713.40753174]
[-184.37481689 698.81311035]
[-187.18267822 684.07562256]
[-189.31687927 669.22558594]
[-190.77296448 654.29382324]
[-191.54792786 639.31121826]
[-191.64015198 624.30889893]
[-191.04946899 609.31793213]
[-189.77708435 594.36938477]
[-187.82563782 579.49420166]
[-185.19917297 564.72326660]
[-181.90313721 550.08721924]
[-177.94436646 535.61633301]
[-173.33105469 521.34063721]
[-168.07278442 507.28970337]
[-162.18043518 493.49264526]
[-155.66621399 479.97808838]
[-148.54364014 466.77404785]
[-140.82746887 453.90783691]
[-132.53369141 441.40618896]
[-123.67949677 429.29495239]
[-114.28324890 417.59927368]
[-104.36441040 406.34341431]
[-93.94354248 395.55062866]
[-83.04224396 385.24334717]
[-71.68311310 375.44293213]
[-59.88969040 366.16964722]
[-47.68642044 357.44277954]
[-35.09859467 349.28036499]
[-22.15230560 341.69934082]
[-8.87438583 334.71542358]
[4.70764494 328.34307861]
[18.56563568 322.59552002]
[32.67086029 317.48468018]
[46.99409103 313.02111816]
[61.50563049 309.21408081]
[76.17540741 306.07150269]
[90.97302246 303.59985352]
[105.86779022 301.80426025]
[104.75214386 286.84582520]
[103.63649750 271.88735962]
[102.52084351 256.92892456]
[88.78443909 253.50479126]
[76.75882721 245.99441528]
[67.62676239 235.12080383]
[62.29122925 221.93855286]
[61.28615570 207.73152161]
[64.72303009 193.88775635]
[72.27867889 181.76397705]
[83.22564697 172.55249023]
[96.50218201 167.16406250]
[95.60936737 152.19065857]
[94.71655273 137.21725464]
[93.82373810 122.24385071]
[92.93092346 107.27043915]
[89.34566498 100.05112457]
[92.13796234 92.06777191]
[91.46817780 77.08273315]
[90.79839325 62.09769440]
[90.12860870 47.11265564]
[89.45882416 32.12761688]
[81.11302948 18.68669891]
[88.27431488 5.62663269]
[87.60453033 -9.35840607]
[72.79904175 -12.16808319]
[59.04084015 -18.31695557]
[47.07188797 -27.47342491]
[37.53765488 -39.14369202]
[30.95231247 -52.69839478]
[27.67099571 -67.40654755]
[27.87066269 -82.47495270]
[31.54054832 -97.09098816]
[38.48273849 -110.46644592]
[48.32284927 -121.87998199]
[60.53021622 -130.71609497]
[74.44651031 -136.49826050]
[89.32125092 -138.91465759]
[104.35224915 -137.83496094]
[118.72891235 -133.31739807]
[131.67591858 -125.60561371]
[142.49505615 -115.11547089]
[150.60285950 -102.41271210]
[155.56208801 -88.18236542]
[157.10530090 -73.19185638]
[155.14926147 -58.24961472]
[149.79946899 -44.16144943]
[141.34443665 -31.68711662]
[130.24011230 -21.49934387]
[117.08535004 -14.14754486]
[102.58956909 -10.02819157]
[103.25935364 4.95684767]
[111.55723572 17.32593727]
[104.44386292 31.45783234]
[105.11364746 46.44287109]
[105.78343201 61.42790985]
[106.45321655 76.41294861]
[107.12300110 91.39798737]
[107.90432739 106.37762451]
[108.79714203 121.35102844]
[109.68995667 136.32443237]
[110.58277130 151.29783630]
[111.47559357 166.27125549]
[126.76866150 170.73910522]
[139.58569336 180.15765381]
[148.38790894 193.37330627]
[152.12635803 208.77799988]
[150.36689758 224.50489807]
[143.34051514 238.65452576]
[131.91320801 249.52429199]
[117.47930145 255.81326294]
[118.59494781 270.77172852]
[119.71059418 285.73016357]
[120.82624817 300.68862915]
[135.82258606 300.25482178]
[150.82312012 300.50402832]
[165.79676819 301.43572998]
[180.71249390 303.04797363]
[195.53939819 305.33743286]
[210.24670410 308.29934692]
[224.80398560 311.92761230]
[239.18101501 316.21466064]
[253.34803772 321.15167236]
[267.27566528 326.72833252]
[280.93505859 332.93316650]
[294.29785156 339.75323486]
[307.33642578 347.17446899]
[320.02368164 355.18142700]
[332.33337402 363.75756836]
[344.23992920 372.88507080]
[355.71875000 382.54504395]
[366.74600220 392.71746826]
[377.29882812 403.38125610]
[387.35534668 414.51431274]
[396.89474487 426.09350586]
[405.89721680 438.09490967]
[414.34411621 450.49362183]
[422.21795654 463.26394653]
[429.50238037 476.37942505]
[436.18231201 489.81283569]
[442.24392700 503.53634644]
[447.67462158 517.52154541]
[452.46316528 531.73944092]
[456.59960938 546.16052246]
[460.07540894 560.75494385]
[462.88333130 575.49243164]
[465.01757812 590.34246826]
[466.47372437 605.27423096]
[467.24874878 620.25683594]
[467.34106445 635.25915527]
[466.75042725 650.25012207]
[465.47808838 665.19873047]
[463.52670288 680.07385254]
[460.90029907 694.84478760]
[457.60433960 709.48089600]
[453.64559937 723.95178223]
[449.03234863 738.22747803]
[443.77413940 752.27844238]
[437.88183594 766.07550049]
[431.36767578 779.59008789]
[424.24514771 792.79418945]
[416.52902222 805.66040039]
[408.23532104 818.16210938]
[399.38116455 830.27337646]
[389.98495483 841.96905518]
[380.06616211 853.22497559]
[369.64535522 864.01782227]
[358.74407959 874.32513428]
[347.38500977 884.12561035]
[335.59161377 893.39892578]
[323.38836670 902.12585449]
[310.80056763 910.28833008]
[297.85430908 917.86938477]
[284.57641602 924.85333252]
[270.99441528 931.22576904]
[257.13644409 936.97332764]
[243.03125000 942.08428955]
[228.70803833 946.54791260]
[214.19651794 950.35498047]
[199.52674866 953.49761963]
[184.72914124 955.96929932]
[169.83438110 957.76495361]
[154.87332153 958.88079834]
[139.87698364 959.31451416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 140]
[67 139]
[68 138]
[69 137]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
