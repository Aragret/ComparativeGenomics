%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[67.85374451 833.35064697]
[52.85591888 832.95892334]
[37.89453125 831.84301758]
[23.00452614 830.00561523]
[8.22068214 827.45098877]
[-6.42247486 824.18505859]
[-20.89074326 820.21551514]
[-35.15033340 815.55157471]
[-49.16794205 810.20416260]
[-62.91082382 804.18572998]
[-76.34689331 797.51037598]
[-89.44475555 790.19366455]
[-102.17382812 782.25268555]
[-114.50438690 773.70599365]
[-126.40762329 764.57360840]
[-137.85574341 754.87677002]
[-148.82199097 744.63812256]
[-159.28079224 733.88165283]
[-169.20768738 722.63238525]
[-178.57949829 710.91674805]
[-187.37434387 698.76190186]
[-195.57167053 686.19641113]
[-203.15234375 673.24951172]
[-210.09866333 659.95153809]
[-216.39439392 646.33343506]
[-222.02484131 632.42712402]
[-226.97683716 618.26501465]
[-231.23884583 603.88012695]
[-234.80088806 589.30621338]
[-237.65464783 574.57714844]
[-239.79347229 559.72747803]
[-241.21235657 544.79174805]
[-241.90798950 529.80493164]
[-241.87873840 514.80206299]
[-241.12467957 499.81805420]
[-239.64758301 484.88800049]
[-237.45088196 470.04675293]
[-234.53971863 455.32897949]
[-230.92088318 440.76901245]
[-226.60284424 426.40090942]
[-221.59565735 412.25817871]
[-215.91104126 398.37390137]
[-209.56227112 384.78045654]
[-202.56416321 371.50964355]
[-194.93307495 358.59240723]
[-186.68681335 346.05895996]
[-177.84465027 333.93856812]
[-168.42723083 322.25949097]
[-158.45655823 311.04904175]
[-147.95591736 300.33343506]
[-136.94982910 290.13763428]
[-125.46398926 280.48547363]
[-113.52524567 271.39953613]
[-101.16146088 262.90100098]
[-88.40152740 255.00971985]
[-75.27523804 247.74412537]
[-61.81324768 241.12120056]
[-48.04700470 235.15640259]
[-34.00865555 229.86367798]
[-19.73099136 225.25535583]
[-5.24735689 221.34222412]
[9.40842056 218.13342285]
[24.20211220 215.63642883]
[39.09916687 213.85710144]
[54.06478882 212.79956055]
[69.06403351 212.46630859]
[84.06185150 212.85810852]
[85.17750549 197.89965820]
[78.40824127 184.63215637]
[87.15052032 171.44569397]
[88.26617432 156.48722839]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[95.65972900 57.35557175]
[96.77537537 42.39711761]
[83.01535034 33.22904587]
[75.79774475 18.45739174]
[77.00743866 2.15544224]
[86.21981812 -11.23440170]
[100.84246826 -18.11122322]
[101.73528290 -33.08462906]
[102.62809753 -48.05803299]
[103.52091217 -63.03144073]
[104.41372681 -78.00484467]
[94.37322998 -86.98275757]
[91.38041687 -99.91541290]
[96.30960083 -112.03090668]
[107.15367126 -118.99048615]
[108.26931763 -133.94894409]
[93.78955078 -138.06246948]
[80.43438721 -145.00685120]
[68.75071716 -154.49772644]
[59.21697998 -166.14645386]
[52.22357941 -179.47601318]
[48.05688477 -193.94058228]
[46.88752747 -208.94783020]
[48.76338196 -223.88322449]
[53.60763931 -238.13517761]
[61.22193146 -251.12007141]
[71.29445648 -262.30618286]
[83.41274261 -271.23544312]
[97.08056641 -277.54223633]
[111.73823547 -280.96826172]
[126.78552246 -281.37326050]
[141.60624695 -278.74060059]
[155.59353638 -273.17816162]
[168.17457581 -264.91363525]
[178.83421326 -254.28552246]
[187.13594055 -241.72900391]
[192.73979187 -227.75825500]
[195.41630554 -212.94538879]
[195.05587769 -197.89695740]
[191.67326355 -183.22921753]
[185.40698242 -169.54278564]
[176.51362610 -157.39810181]
[165.35737610 -147.29249573]
[152.39509583 -139.63980103]
[138.15754700 -134.75335693]
[123.22777557 -132.83328247]
[122.11212158 -117.87483215]
[133.62118530 -105.61186981]
[132.68161011 -88.48200989]
[119.38713837 -77.11203003]
[118.49431610 -62.13862228]
[117.60150146 -47.16521835]
[116.70868683 -32.19181442]
[115.81587219 -17.21840668]
[127.68682861 -10.46581364]
[135.52790833 0.79679000]
[137.76210022 14.40404797]
[133.89717102 27.70970345]
[124.63259125 38.10123062]
[111.73382568 43.51276398]
[110.61817932 58.47121811]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[103.22462463 157.60289001]
[102.10897827 172.56134033]
[108.79843903 186.89875793]
[100.13595581 199.01530457]
[99.02030945 213.97375488]
[113.91032410 215.81109619]
[128.69418335 218.36566162]
[143.33735657 221.63151550]
[157.80563354 225.60101318]
[172.06524658 230.26487732]
[186.08288574 235.61224365]
[199.82579041 241.63059998]
[213.26188660 248.30589294]
[226.35978699 255.62252808]
[239.08889771 263.56344604]
[251.41949463 272.11004639]
[263.32278442 281.24243164]
[274.77093506 290.93920898]
[285.73724365 301.17779541]
[296.19610596 311.93423462]
[306.12304688 323.18341064]
[315.49490356 334.89904785]
[324.28979492 347.05380249]
[332.48721313 359.61926270]
[340.06793213 372.56610107]
[347.01431274 385.86407471]
[353.31011963 399.48211670]
[358.94061279 413.38845825]
[363.89270020 427.55053711]
[368.15475464 441.93536377]
[371.71685791 456.50930786]
[374.57070923 471.23831177]
[376.70959473 486.08801270]
[378.12854004 501.02371216]
[378.82424927 516.01049805]
[378.79507446 531.01342773]
[378.04110718 545.99737549]
[376.56405640 560.92749023]
[374.36743164 575.76873779]
[371.45635986 590.48651123]
[367.83758545 605.04650879]
[363.51959229 619.41461182]
[358.51248169 633.55737305]
[352.82794189 647.44171143]
[346.47921753 661.03515625]
[339.48120117 674.30603027]
[331.85015869 687.22326660]
[323.60394287 699.75677490]
[314.76184082 711.87719727]
[305.34448242 723.55633545]
[295.37387085 734.76678467]
[284.87326050 745.48248291]
[273.86721802 755.67834473]
[262.38143921 765.33050537]
[250.44273376 774.41656494]
[238.07899475 782.91516113]
[225.31909180 790.80645752]
[212.19284058 798.07214355]
[198.73088074 804.69512939]
[184.96467590 810.65997314]
[170.92634583 815.95275879]
[156.64871216 820.56115723]
[142.16508484 824.47436523]
[127.50932312 827.68322754]
[112.71564484 830.18029785]
[97.81860352 831.95971680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 149]
[68 148]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[76 140]
[77 139]
[78 138]
[79 137]
[84 131]
[85 130]
[86 129]
[87 128]
[88 127]
[92 124]
[93 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
