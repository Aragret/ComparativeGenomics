%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[122.21157837 943.49182129]
[107.28029633 942.03649902]
[92.41972351 939.98114014]
[77.65396118 937.32904053]
[63.00696182 934.08459473]
[48.50248337 930.25299072]
[34.16405106 925.84039307]
[20.01492310 920.85406494]
[6.07805061 915.30206299]
[-7.62396240 909.19342041]
[-21.06889153 902.53796387]
[-34.23492813 895.34649658]
[-47.10071564 887.63073730]
[-59.64538574 879.40319824]
[-71.84859467 870.67724609]
[-83.69054413 861.46691895]
[-95.15203094 851.78729248]
[-106.21446228 841.65399170]
[-116.85989380 831.08343506]
[-127.07106018 820.09283447]
[-136.83139038 808.70001221]
[-146.12507629 796.92340088]
[-154.93701172 784.78210449]
[-163.25292969 772.29583740]
[-171.05932617 759.48486328]
[-178.34355164 746.36993408]
[-185.09378052 732.97235107]
[-191.29907227 719.31378174]
[-196.94934082 705.41644287]
[-202.03544617 691.30291748]
[-206.54913330 676.99597168]
[-210.48307800 662.51892090]
[-213.83090210 647.89520264]
[-216.58717346 633.14855957]
[-218.74742126 618.30285645]
[-220.30813599 603.38220215]
[-221.26678467 588.41082764]
[-221.62182617 573.41296387]
[-221.37268066 558.41302490]
[-220.51974487 543.43524170]
[-219.06440735 528.50396729]
[-217.00901794 513.64337158]
[-214.35693359 498.87762451]
[-211.11242676 484.23062134]
[-207.28079224 469.72616577]
[-202.86822510 455.38772583]
[-197.88188171 441.23861694]
[-192.32984924 427.30175781]
[-186.22114563 413.59976196]
[-179.56567383 400.15481567]
[-172.37422180 386.98880005]
[-164.65844727 374.12301636]
[-156.43089294 361.57836914]
[-147.70489502 349.37515259]
[-138.49458313 337.53323364]
[-128.81492615 326.07174683]
[-118.68160248 315.00933838]
[-108.11106110 304.36392212]
[-97.12044525 294.15277100]
[-85.72758484 284.39245605]
[-73.95095062 275.09878540]
[-61.80965042 266.28686523]
[-49.32337570 257.97097778]
[-36.51237869 250.16458130]
[-23.39744186 242.88038635]
[-9.99983406 236.13017273]
[3.65871167 229.92491150]
[17.55604172 224.27464294]
[31.66961288 219.18855286]
[45.97653580 214.67488098]
[60.45360184 210.74096680]
[75.07733154 207.39315796]
[89.82400513 204.63691711]
[104.66969299 202.47669983]
[103.10917664 187.55809021]
[101.54865265 172.63948059]
[99.98812866 157.72087097]
[98.20566559 142.82716370]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[84.92479706 44.31132507]
[82.92078400 29.44579697]
[79.18865204 23.98843956]
[78.82711792 18.31690407]
[81.08524323 14.10858822]
[79.52471924 -0.81001639]
[77.96419525 -15.72862148]
[76.40367126 -30.64722633]
[61.57109451 -33.56031418]
[48.25692368 -40.71742630]
[37.64504623 -51.48215485]
[30.67905998 -64.89731598]
[27.97837830 -79.77003479]
[29.78314400 -94.77783966]
[35.93288040 -108.58625031]
[45.88075256 -119.96743011]
[58.74220276 -127.90937042]
[73.37360382 -131.70588684]
[88.47393799 -131.01937866]
[102.70050049 -125.91091156]
[114.78826141 -116.83471680]
[123.66239929 -104.59783936]
[128.53382874 -90.28838348]
[128.96937561 -75.17872620]
[124.93032074 -60.61241150]
[116.77581024 -47.88467026]
[105.23094177 -38.12724304]
[91.32227325 -32.20774841]
[92.88279724 -17.28914452]
[94.44332123 -2.37053943]
[96.00384521 12.54806519]
[97.78630829 27.44178200]
[99.79032135 42.30731201]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[113.07118988 140.82315063]
[116.80332184 146.28050232]
[117.16485596 151.95204163]
[114.90673065 156.16035461]
[116.46725464 171.07896423]
[118.02777863 185.99755859]
[119.58830261 200.91616821]
[134.55967712 199.95745850]
[149.55751038 199.60235596]
[164.55747986 199.85144043]
[179.53526306 200.70431519]
[194.46655273 202.15959167]
[209.32713318 204.21492004]
[224.09291077 206.86694336]
[238.73991394 210.11137390]
[253.24440002 213.94296265]
[267.58285522 218.35546875]
[281.73199463 223.34175110]
[295.66888428 228.89372253]
[309.37091064 235.00238037]
[322.81585693 241.65779114]
[335.98190308 248.84919739]
[348.84771729 256.56491089]
[361.39239502 264.79241943]
[373.59564209 273.51837158]
[385.43762207 282.72863770]
[396.89913940 292.40823364]
[407.96157837 302.54150391]
[418.60705566 313.11199951]
[428.81823730 324.10256958]
[438.57861328 335.49539185]
[447.87231445 347.27200317]
[456.68429565 359.41326904]
[465.00024414 371.89950562]
[472.80667114 384.71047974]
[480.09094238 397.82537842]
[486.84118652 411.22296143]
[493.04653931 424.88146973]
[498.69683838 438.77877808]
[503.78298950 452.89233398]
[508.29672241 467.19924927]
[512.23071289 481.67630005]
[515.57855225 496.30001831]
[518.33483887 511.04666138]
[520.49517822 525.89233398]
[522.05590820 540.81298828]
[523.01458740 555.78436279]
[523.36968994 570.78216553]
[523.12060547 585.78216553]
[522.26770020 600.75994873]
[520.81237793 615.69122314]
[518.75701904 630.55181885]
[516.10498047 645.31756592]
[512.86053467 659.96459961]
[509.02893066 674.46905518]
[504.61639404 688.80749512]
[499.63009644 702.95660400]
[494.07809448 716.89349365]
[487.96945190 730.59552002]
[481.31399536 744.04046631]
[474.12258911 757.20654297]
[466.40686035 770.07232666]
[458.17935181 782.61700439]
[449.45336914 794.82019043]
[440.24310303 806.66217041]
[430.56344604 818.12365723]
[420.43017578 829.18615723]
[409.85964966 839.83154297]
[398.86907959 850.04272461]
[387.47622681 859.80310059]
[375.69961548 869.09680176]
[363.55834961 877.90875244]
[351.07211304 886.22467041]
[338.26110840 894.03112793]
[325.14620972 901.31536865]
[311.74862671 908.06561279]
[298.09008789 914.27087402]
[284.19277954 919.92120361]
[270.07922363 925.00732422]
[255.77230835 929.52105713]
[241.29525757 933.45501709]
[226.67152405 936.80285645]
[211.92486572 939.55914307]
[197.07917786 941.71936035]
[182.15853882 943.28015137]
[167.18716431 944.23876953]
[152.18933105 944.59387207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 130]
[75 129]
[76 128]
[77 127]
[78 124]
[79 123]
[80 122]
[82 120]
[83 119]
[84 118]
[85 117]
[86 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
