%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[99.83154297 503.15054321]
[86.67018890 495.88592529]
[74.84467316 486.60403442]
[64.66131592 475.54531860]
[56.38389206 462.99618530]
[50.22680664 449.28173828]
[46.34953690 434.75717163]
[44.85251999 419.79873657]
[45.77452850 404.79385376]
[49.09168243 390.13122559]
[54.71805573 376.19064331]
[62.50791931 363.33319092]
[72.25949097 351.89187622]
[83.72017670 342.16311646]
[96.59312439 334.39889526]
[110.54489899 328.80029297]
[125.21410370 325.51235962]
[124.32128906 310.53897095]
[123.42847443 295.56555176]
[122.53565979 280.59213257]
[121.64284515 265.61874390]
[108.26228333 259.07458496]
[99.89826965 246.62872314]
[98.88018799 231.56784058]
[105.58137512 217.92999268]
[118.29200745 209.42195129]
[117.39919281 194.44854736]
[116.50637817 179.47512817]
[115.61356354 164.50172424]
[112.29129791 149.87426758]
[106.62851715 135.98423767]
[100.96572876 122.09421539]
[95.30294037 108.20418549]
[91.05420685 105.12811279]
[88.83139038 99.89051819]
[89.68514252 93.81532288]
[84.43842316 79.76284790]
[79.19170380 65.71038055]
[77.68783569 80.63480377]
[72.94417572 94.86496735]
[65.19216919 107.70655823]
[54.81007004 118.53300476]
[42.30443192 126.81606293]
[28.28543282 132.15158081]
[13.43709469 134.27922058]
[-1.51610017 133.09516907]
[-15.84455299 128.65721130]
[-28.84914589 121.18188477]
[-39.89535522 111.03392029]
[-48.44421768 98.70845795]
[-54.07860565 84.80689240]
[-56.52361298 70.00749969]
[-55.65993881 55.03238297]
[-51.52972412 40.61221313]
[-44.33449173 27.45057869]
[-34.42531204 16.18966675]
[-22.28567505 7.37891960]
[-8.50790405 1.44823563]
[6.23575592 -1.31301498]
[21.22592735 -0.77010453]
[35.73120880 3.05047727]
[49.04384995 9.96231556]
[60.51430511 19.62816620]
[69.58290100 31.57641220]
[75.80509949 45.21778488]
[76.25170135 30.22443390]
[68.92871857 16.20001030]
[77.04152679 3.70875001]
[77.48812866 -11.28460026]
[77.93473816 -26.27795029]
[78.38134003 -41.27130127]
[78.82794952 -56.26464844]
[79.27455139 -71.25800323]
[79.72116089 -86.25135040]
[80.16776276 -101.24469757]
[80.61437225 -116.23805237]
[77.74185944 -124.90906525]
[81.18089294 -131.45083618]
[81.85067749 -146.43588257]
[82.52046204 -161.42091370]
[83.19024658 -176.40596008]
[68.37181091 -178.84526062]
[53.94589615 -183.02011108]
[40.11502457 -188.87190247]
[27.07336044 -196.31846619]
[15.00398636 -205.25526428]
[4.07633781 -215.55686951]
[-5.55617762 -227.07862854]
[-13.75833416 -239.65881348]
[-20.41498756 -253.12080383]
[-25.43268585 -267.27563477]
[-28.74099159 -281.92456055]
[-30.29346085 -296.86196899]
[-30.06829834 -311.87817383]
[-28.06866455 -326.76229858]
[-24.32263184 -341.30548096]
[-18.88278961 -355.30349731]
[-11.82550430 -368.55984497]
[-3.24984813 -380.88845825]
[6.72378922 -392.11621094]
[17.95539284 -402.08554077]
[30.28729057 -410.65646362]
[43.54636002 -417.70864868]
[57.54646683 -423.14312744]
[72.09106445 -426.88357544]
[86.97598267 -428.87750244]
[101.99224854 -429.09689331]
[116.92905426 -427.53866577]
[131.57672119 -424.22476196]
[145.72962952 -419.20159912]
[159.18905640 -412.53979492]
[171.76609802 -404.33279419]
[183.28414917 -394.69586182]
[193.58155823 -383.76425171]
[202.51371765 -371.69146729]
[209.95527649 -358.64694214]
[215.80174255 -344.81381226]
[219.97105408 -330.38629150]
[222.40467834 -315.56692505]
[223.06843567 -300.56372070]
[221.95301819 -285.58734131]
[219.07409668 -270.84799194]
[214.47206116 -256.55261230]
[208.21154785 -242.90190125]
[200.38041687 -230.08746338]
[191.08862305 -218.28921509]
[180.46659851 -207.67276001]
[168.66345215 -198.38716125]
[155.84490967 -190.56277466]
[142.19090271 -184.30941772]
[127.89311218 -179.71490479]
[113.15225983 -176.84371948]
[98.17528534 -175.73617554]
[97.50550079 -160.75112915]
[96.83571625 -145.76609802]
[96.16593170 -130.78105164]
[95.60771942 -115.79144287]
[95.16111755 -100.79809570]
[94.71450806 -85.80474091]
[94.26790619 -70.81139374]
[93.82129669 -55.81804276]
[93.37469482 -40.82469559]
[92.92808533 -25.83134460]
[92.48148346 -10.83799362]
[92.03487396 4.15535593]
[99.38980865 17.10735321]
[91.24505615 30.67103958]
[90.79844666 45.66439056]
[93.24417877 60.46366119]
[98.49089050 74.51612854]
[103.73760986 88.56860352]
[109.19297028 102.54139709]
[114.85575867 116.43142700]
[120.51853943 130.32145691]
[126.18132782 144.21148682]
[127.34107971 129.25637817]
[132.28182983 115.09343719]
[140.67587280 102.66202545]
[151.96646118 92.78667450]
[165.40473938 86.12238312]
[180.09938049 83.11116791]
[195.07575989 83.95275116]
[209.34053040 88.59131622]
[221.94757080 96.71920013]
[232.06069946 107.79731750]
[239.00914001 121.09088898]
[242.33204651 135.71820068]
[241.80900574 150.70907593]
[237.47471619 165.06922913]
[229.61666870 177.84620667]
[218.75602722 188.19253540]
[205.61315918 195.42199707]
[191.05978394 199.05508423]
[176.06118774 198.85083008]
[161.61213684 194.82278442]
[148.67102051 187.23811340]
[138.09616089 176.59986877]
[130.58695984 163.60891724]
[131.47978210 178.58232117]
[132.37260437 193.55572510]
[133.26541138 208.52912903]
[146.89701843 215.46647644]
[155.17131042 228.21139526]
[155.95014954 243.28652954]
[149.12434387 256.63809204]
[136.61624146 264.72592163]
[137.50906372 279.69934082]
[138.40188599 294.67272949]
[139.29469299 309.64614868]
[140.18751526 324.61953735]
[155.14349365 326.14102173]
[169.66169739 330.04205322]
[183.36605835 336.22155762]
[195.90162659 344.51950073]
[206.94367981 354.72094727]
[216.20620728 366.56161499]
[223.44929504 379.73483276]
[228.48532104 393.89941406]
[231.18383789 408.68838501]
[231.47496033 423.71875000]
[229.35113525 438.60113525]
[224.86737061 452.95007324]
[218.13983154 466.39389038]
[209.34274292 478.58435059]
[198.70399475 489.20571899]
[186.49916077 497.98284912]
[173.04435730 504.68838501]
[158.68809509 509.14868164]
[143.80224609 511.24813843]
[128.77239990 510.93243408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 190]
[18 189]
[19 188]
[20 187]
[21 186]
[26 181]
[27 180]
[28 179]
[29 178]
[30 155]
[31 154]
[32 153]
[33 152]
[36 151]
[37 150]
[38 149]
[65 148]
[66 147]
[68 145]
[69 144]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[78 136]
[79 135]
[80 134]
[81 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
