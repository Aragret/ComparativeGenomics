%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[27.20747757 287.32955933]
[25.46494293 302.23547363]
[22.58647537 316.96426392]
[18.58897018 331.42947388]
[13.49588680 345.54626465]
[7.33711195 359.23171997]
[0.14878908 372.40557861]
[-8.02689743 384.99053955]
[-17.14196777 396.91271973]
[-27.14293289 408.10214233]
[-37.97109985 418.49319458]
[-49.56292343 428.02484131]
[-61.85037994 436.64117432]
[-74.76136017 444.29159546]
[-88.22010040 450.93127441]
[-102.14760590 456.52120972]
[-116.46215820 461.02856445]
[-131.07974243 464.42694092]
[-145.91458130 466.69638062]
[-160.87962341 467.82354736]
[-175.88702393 467.80181885]
[-190.84873962 466.63137817]
[-205.67694092 464.31903076]
[-220.28463745 460.87838745]
[-234.58609009 456.32962036]
[-248.49736023 450.69943237]
[-261.93682861 444.02084351]
[-274.82562256 436.33306885]
[-287.08810425 427.68124390]
[-298.65231323 418.11608887]
[-309.45037842 407.69375610]
[-319.41891479 396.47543335]
[-328.49945068 384.52694702]
[-336.63870239 371.91839600]
[-343.78887939 358.72378540]
[-349.90802002 345.02056885]
[-354.96026611 330.88909912]
[-358.91589355 316.41238403]
[-361.75173950 301.67532349]
[-363.45114136 286.76443481]
[-364.00411987 271.76721191]
[-363.40747070 256.77163696]
[-361.66464233 241.86576843]
[-358.78588867 227.13702393]
[-354.78811646 212.67187500]
[-349.69476318 198.55520630]
[-343.53573608 184.86984253]
[-336.34716797 171.69612122]
[-328.17123413 159.11132812]
[-319.05593872 147.18931580]
[-309.05474854 136.00007629]
[-298.22640991 125.60925293]
[-286.63439941 116.07781982]
[-274.34677124 107.46172333]
[-261.43563843 99.81152344]
[-247.97679138 93.17211151]
[-234.04916382 87.58245087]
[-219.73452759 83.07534790]
[-205.11688232 79.67725372]
[-190.28199768 77.40811157]
[-175.31694031 76.28122711]
[-160.30953979 76.30322266]
[-145.34785461 77.47396088]
[-130.51968384 79.78658295]
[-115.91205597 83.22750854]
[-101.61069489 87.77655029]
[-87.69952393 93.40700531]
[-74.26017761 100.08583832]
[-61.37153244 107.77384949]
[-49.10921860 116.42592621]
[-37.54520035 125.99128723]
[-26.74733734 136.41380310]
[-16.77900124 147.63232422]
[-7.69868708 159.58099365]
[4.90362453 151.44577026]
[17.50593567 143.31056213]
[30.10824776 135.17533875]
[31.03255844 122.32329559]
[39.31404877 112.19911194]
[52.10268784 108.64086151]
[64.78973389 113.16342163]
[77.51176453 105.21673584]
[90.23380280 97.27005768]
[94.85852051 90.66819763]
[103.20494080 89.30139160]
[116.04387665 81.54500580]
[123.85494995 67.78645325]
[138.74949646 67.82785034]
[151.58843994 60.07146072]
[164.31047058 52.12477875]
[176.91278076 43.98956299]
[189.51510620 35.85434723]
[202.11741638 27.71912956]
[214.71972656 19.58391380]
[227.32203674 11.44869900]
[220.09281921 -1.70148361]
[213.80920410 -15.32885265]
[208.50251770 -29.36551666]
[204.19917297 -43.74154663]
[200.92063904 -58.38531876]
[198.68322754 -73.22388458]
[197.49809265 -88.18330383]
[197.37112427 -103.18906403]
[198.30297852 -118.16639709]
[200.28900146 -133.04069519]
[203.31930542 -147.73783875]
[207.37878418 -162.18463135]
[212.44720459 -176.30906677]
[218.49934387 -190.04081726]
[225.50502014 -203.31143188]
[233.42935181 -216.05480957]
[242.23286438 -228.20747375]
[251.87167358 -239.70887756]
[262.29779053 -250.50170898]
[273.45922852 -260.53222656]
[285.30041504 -269.75039673]
[297.76235962 -278.11038208]
[310.78295898 -285.57043457]
[324.29736328 -292.09347534]
[338.23822021 -297.64697266]
[352.53610229 -302.20324707]
[367.11975098 -305.73962402]
[381.91653442 -308.23843384]
[396.85272217 -309.68728638]
[411.85391235 -310.07894897]
[426.84536743 -309.41146851]
[441.75238037 -307.68814087]
[456.50070190 -304.91760254]
[471.01684570 -301.11361694]
[485.22851562 -296.29513550]
[499.06488037 -290.48620605]
[512.45703125 -283.71569824]
[525.33819580 -276.01742554]
[537.64428711 -267.42968750]
[549.31396484 -257.99526978]
[560.28900146 -247.76118469]
[570.51489258 -236.77841187]
[579.94049072 -225.10168457]
[588.51904297 -212.78915405]
[596.20764160 -199.90219116]
[602.96807861 -186.50495911]
[608.76660156 -172.66424561]
[613.57440186 -158.44897461]
[617.36749268 -143.92996216]
[620.12695312 -129.17956543]
[621.83911133 -114.27126312]
[622.49536133 -99.27931976]
[622.09240723 -84.27843475]
[620.63232422 -69.34333801]
[618.12237549 -54.54843903]
[614.57507324 -39.96744156]
[610.00805664 -25.67298889]
[604.44415283 -11.73629856]
[597.91094971 1.77319849]
[590.44110107 14.78819752]
[582.07177734 27.24385834]
[572.84472656 39.07812500]
[562.80584717 50.23204422]
[552.00518799 60.65003967]
[540.49652100 70.28021240]
[528.33728027 79.07459259]
[515.58795166 86.98935699]
[502.31204224 93.98506927]
[488.57577515 100.02689362]
[474.44754028 105.08471680]
[459.99771118 109.13334656]
[445.29827881 112.15260315]
[430.42248535 114.12745667]
[415.44445801 115.04806519]
[400.43881226 114.90984344]
[385.48028564 113.71347046]
[370.64340210 111.46492004]
[356.00210571 108.17538452]
[341.62930298 103.86125946]
[327.59661865 98.54402924]
[313.97396851 92.25019073]
[300.82922363 85.01110077]
[288.22784424 76.86281586]
[276.23266602 67.84593964]
[264.90338135 58.00539398]
[254.29646301 47.39020157]
[244.46476746 36.05324554]
[235.45724487 24.05101013]
[222.85493469 32.18622589]
[210.25262451 40.32144165]
[197.65031433 48.45665741]
[185.04800415 56.59187317]
[172.44569397 64.72708893]
[170.58210754 69.12437439]
[165.93638611 72.39764404]
[159.34483337 72.91040039]
[146.50588989 80.66679382]
[139.61314392 93.87055969]
[123.80027008 94.38394165]
[110.96133423 102.14033508]
[98.18048859 109.99208832]
[85.45845032 117.93877411]
[72.73641205 125.88545990]
[69.11121368 142.99911499]
[54.51782227 152.01841736]
[38.24346542 147.77764893]
[25.64115334 155.91287231]
[13.03884029 164.04808044]
[0.43652874 172.18330383]
[7.58695745 185.37777710]
[13.70637226 199.08090210]
[18.75886154 213.21224976]
[22.71477318 227.68890381]
[25.55089569 242.42590332]
[27.25058174 257.33676147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 204]
[75 203]
[76 202]
[77 201]
[81 198]
[82 197]
[83 196]
[85 195]
[86 194]
[88 192]
[89 191]
[90 188]
[91 187]
[92 186]
[93 185]
[94 184]
[95 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
