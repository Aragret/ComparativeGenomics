%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[183.68019104 608.31695557]
[170.64382935 615.78918457]
[156.67672729 621.33001709]
[142.06323242 624.82659912]
[127.10084534 626.20782471]
[112.09419250 625.44555664]
[97.34878540 622.55529785]
[83.16481781 617.59588623]
[69.83106232 610.66827393]
[57.61898041 601.91351318]
[46.77718735 591.50982666]
[37.52640915 579.66906738]
[30.05498505 566.63226318]
[24.51501846 552.66479492]
[21.01929855 538.05108643]
[19.63899231 523.08862305]
[20.40220070 508.08200073]
[23.29338837 493.33679199]
[28.25369263 479.15313721]
[35.18212509 465.81979370]
[43.93763733 453.60824585]
[54.34197617 442.76712036]
[66.18331909 433.51705933]
[79.22060394 426.04644775]
[93.18838501 420.50735474]
[107.80232239 417.01251221]
[122.76487732 415.63314819]
[137.77143860 416.39727783]
[140.65670776 401.67739868]
[143.54197693 386.95748901]
[146.42726135 372.23760986]
[149.31253052 357.51773071]
[150.09385681 342.53808594]
[148.75561523 327.59790039]
[147.41738892 312.65771484]
[146.07914734 297.71752930]
[143.63342285 282.91824341]
[140.09375000 268.34188843]
[136.55407715 253.76550293]
[133.01440430 239.18913269]
[129.47473145 224.61276245]
[125.93505859 210.03637695]
[122.39538574 195.46000671]
[118.85571289 180.88362122]
[114.66870117 166.47984314]
[109.84270477 152.27738953]
[105.01670837 138.07493591]
[100.19071198 123.87248230]
[86.17501068 119.46281433]
[77.39608765 107.68081665]
[77.17932892 92.98938751]
[85.60683441 80.95352173]
[80.78083801 66.75106049]
[75.95484161 52.54860687]
[71.12884521 38.34614944]
[56.14681625 35.26618958]
[44.79296112 25.16734123]
[40.04993439 10.83660126]
[43.09648132 -3.84585547]
[53.01635742 -14.95718670]
[48.19035721 -29.15964317]
[43.36436081 -43.36209869]
[38.53836441 -57.56455231]
[33.60676956 -71.73069000]
[28.56985283 -85.85971832]
[23.53293800 -99.98874664]
[18.49602127 -114.11777496]
[13.45910454 -128.24681091]
[8.42218876 -142.37583923]
[3.38527250 -156.50486755]
[-1.65164363 -170.63389587]
[-6.89836168 -184.68637085]
[-12.35371876 -198.65916443]
[-17.80907631 -212.63195801]
[-23.26443291 -226.60476685]
[-37.99374390 -223.57896423]
[-53.02255249 -223.08612061]
[-67.91844940 -225.14042664]
[-82.25286102 -229.68275452]
[-95.61334229 -236.58242798]
[-107.61550140 -245.64091492]
[-117.91399384 -256.59759521]
[-126.21252441 -269.13723755]
[-132.27232361 -282.89901733]
[-135.91905212 -297.48703003]
[-137.04776001 -312.48147583]
[-135.62599182 -327.45098877]
[-131.69465637 -341.96487427]
[-125.36684418 -355.60549927]
[-116.82463837 -367.98043823]
[-106.31381226 -378.73361206]
[-94.13678741 -387.55560303]
[-80.64390564 -394.19265747]
[-66.22340393 -398.45376587]
[-51.29016876 -400.21630859]
[-36.27387238 -399.42962646]
[-21.60656357 -396.11633301]
[-7.71024323 -390.37173462]
[5.01525927 -382.36114502]
[16.20380783 -372.31503296]
[25.53348351 -360.52243042]
[32.73585510 -347.32266235]
[37.60369110 -333.09552002]
[39.99694443 -318.25030518]
[39.84674454 -303.21414185]
[37.15742111 -288.41970825]
[32.00634766 -274.29263306]
[24.54173279 -261.23937988]
[14.97834778 -249.63551331]
[3.59134960 -239.81491089]
[-9.29163551 -232.06011963]
[-3.83627820 -218.08732605]
[1.61907899 -204.11451721]
[7.07443619 -190.14172363]
[11.01111984 -187.43772888]
[13.29096794 -182.23204041]
[12.47738552 -175.67080688]
[17.51430130 -161.54177856]
[22.55121803 -147.41275024]
[27.58813477 -133.28372192]
[32.62504959 -119.15469360]
[37.66196823 -105.02566528]
[42.69888306 -90.89663696]
[47.73579788 -76.76760864]
[52.94284058 -71.52275085]
[52.74081802 -62.39055252]
[57.56681824 -48.18809509]
[62.39281464 -33.98564148]
[67.21881104 -19.78318405]
[81.85464478 -17.01588821]
[93.21582031 -7.22917891]
[98.18577576 7.02445078]
[95.33519745 21.94996643]
[85.33129883 33.52015305]
[90.15729523 47.72261047]
[94.98329163 61.92506409]
[99.80928802 76.12751770]
[113.82498932 80.53718567]
[122.60391235 92.31918335]
[122.82067108 107.01061249]
[114.39316559 119.04647827]
[119.21916199 133.24893188]
[124.04515839 147.45140076]
[128.87115479 161.65385437]
[136.45556641 148.71257019]
[150.93399048 144.79142761]
[164.01252747 152.13662720]
[168.19918823 166.54051208]
[161.09567261 179.75187683]
[146.77119446 184.20265198]
[133.43208313 177.34396362]
[136.97175598 191.92033386]
[140.51142883 206.49670410]
[144.05110168 221.07308960]
[147.59077454 235.64945984]
[151.13044739 250.22583008]
[154.67012024 264.80221558]
[158.20979309 279.37857056]
[163.95117188 265.52084351]
[175.79179382 256.31219482]
[190.63655090 254.15968323]
[204.60505676 259.62603760]
[214.04597473 271.28231812]
[216.49148560 286.08163452]
[211.30232239 300.15545654]
[199.83493042 309.82492065]
[185.08685303 312.56246948]
[170.91319275 307.65252686]
[161.01933289 296.37930298]
[162.35755920 311.31948853]
[163.69580078 326.25967407]
[165.03404236 341.19985962]
[170.72814941 327.32263184]
[180.21324158 315.70227051]
[192.66873169 307.34399414]
[207.01712036 302.97091675]
[222.01712036 302.96136475]
[236.37107849 307.31610107]
[248.83723450 315.65847778]
[258.33712769 327.26672363]
[264.04895020 341.13665771]
[265.47857666 356.06838989]
[262.50228882 370.77014160]
[255.37759399 383.97009277]
[244.72084045 394.52630615]
[231.45394897 401.52557373]
[216.72463989 404.36236572]
[201.80714417 402.79129028]
[187.99197388 396.94827271]
[176.47427368 387.33877563]
[168.25044250 374.79409790]
[164.03242493 360.40298462]
[161.14714050 375.12289429]
[158.26187134 389.84277344]
[155.37660217 404.56265259]
[152.49133301 419.28256226]
[166.67590332 424.24023438]
[180.01051331 431.16619873]
[192.22367859 439.91943359]
[203.06677246 450.32174683]
[212.31901550 462.16137695]
[219.79205322 475.19726562]
[225.33374023 489.16403198]
[228.83126831 503.77731323]
[230.21342468 518.73962402]
[229.45207214 533.74633789]
[226.56271362 548.49188232]
[221.60417175 562.67620850]
[214.67738342 576.01037598]
[205.92338562 588.22296143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 196]
[29 195]
[30 194]
[31 193]
[32 192]
[33 172]
[34 171]
[35 170]
[36 169]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[42 153]
[43 152]
[44 151]
[45 144]
[46 143]
[47 142]
[48 141]
[52 137]
[53 136]
[54 135]
[55 134]
[60 129]
[61 128]
[62 127]
[63 126]
[64 124]
[65 123]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
[71 117]
[72 114]
[73 113]
[74 112]
[75 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
