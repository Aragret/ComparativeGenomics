%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[72.25878143 662.07800293]
[58.25938797 656.59954834]
[45.32015610 648.94628906]
[33.77624130 639.31640625]
[23.92666054 627.95941162]
[16.02654076 615.16943359]
[10.28051376 601.27770996]
[6.83741522 586.64416504]
[5.78642988 571.64776611]
[7.15478039 556.67700195]
[10.90702438 542.11962891]
[16.94596863 528.35272217]
[25.11518860 515.73291016]
[35.20308685 504.58703613]
[46.94835663 495.20382690]
[60.04676819 487.82629395]
[74.15904999 482.64556885]
[88.91964722 479.79586792]
[88.47303772 464.80252075]
[88.02643585 449.80917358]
[87.57982635 434.81579590]
[87.13321686 419.82244873]
[84.33310699 415.95355225]
[83.93367767 410.28457642]
[86.90324402 404.37750244]
[86.90324402 389.37750244]
[86.90324402 374.37750244]
[86.90324402 359.37750244]
[86.90324402 344.37750244]
[86.90324402 329.37750244]
[79.16593933 316.65023804]
[86.90324402 302.85006714]
[86.90324402 287.85006714]
[86.90324402 272.85006714]
[86.90324402 257.85006714]
[86.90324402 242.85006714]
[86.90324402 227.85006714]
[84.21955872 223.89952087]
[83.98909760 218.22114563]
[87.13321686 212.40513611]
[87.57982635 197.41177368]
[88.02643585 182.41842651]
[85.08347321 175.63899231]
[88.59295654 167.20564270]
[85.75125885 160.38313293]
[89.38591003 152.00297546]
[90.27872467 137.02957153]
[91.17153931 122.05615997]
[92.06435394 107.08275604]
[91.84102631 92.08441925]
[90.50279236 77.14423370]
[89.16455841 62.20404816]
[87.82632446 47.26386261]
[78.88868713 34.20900726]
[85.45966339 20.84220123]
[84.12142944 5.90201569]
[80.23888397 -2.36621547]
[82.87619019 -9.27030277]
[81.76053619 -24.22875595]
[80.64488983 -39.18721008]
[68.95246887 -49.47919846]
[68.03413391 -64.66509247]
[77.91802216 -75.74860382]
[76.80237579 -90.70705414]
[65.39651489 -94.49579620]
[55.96343613 -101.88732147]
[49.59365463 -111.99747467]
[47.01351929 -123.62960052]
[48.50246811 -135.41615295]
[53.86294556 -145.97950745]
[62.44625854 -154.09288025]
[73.23099518 -158.82293701]
[72.78439331 -173.81628418]
[72.33778381 -188.80963135]
[71.89118195 -203.80299377]
[64.14105225 -190.96026611]
[51.63375854 -182.67970276]
[36.78426361 -180.56016541]
[22.45976830 -185.01087952]
[11.42611217 -195.17250061]
[5.81371927 -209.08296204]
[6.70625544 -224.05638123]
[13.93138599 -237.20162964]
[26.09404945 -245.98056030]
[40.84582901 -248.69808960]
[55.33838654 -244.82952881]
[66.77342987 -235.12181091]
[72.94329834 -221.44812012]
[75.16841888 -236.28216553]
[77.39353180 -251.11621094]
[79.61865234 -265.95025635]
[81.84377289 -280.78430176]
[83.73706055 -295.66433716]
[85.29758453 -310.58291626]
[86.85810852 -325.50152588]
[88.41863251 -340.42013550]
[74.19374084 -345.39498901]
[61.49988556 -353.51675415]
[51.02163696 -364.34741211]
[43.32406998 -377.30285645]
[38.82230377 -391.68447876]
[37.75911713 -406.71664429]
[40.19183731 -421.58874512]
[45.98928070 -435.49865723]
[54.83879471 -447.69631958]
[66.26313782 -457.52389526]
[79.64620209 -464.45138550]
[94.26626587 -468.10522461]
[109.33488464 -468.28836060]
[124.03942108 -464.99087524]
[137.58688354 -458.39065552]
[149.24667358 -448.84362793]
[158.38998413 -436.86462402]
[164.52375793 -423.09967041]
[167.31716919 -408.29110718]
[166.61959839 -393.23751831]
[162.46865845 -378.75076294]
[155.08819580 -365.61206055]
[144.87623596 -354.52996826]
[132.38349915 -346.10214233]
[118.28370667 -340.78308105]
[103.33723450 -338.85961914]
[101.77671051 -323.94100952]
[100.21618652 -309.02239990]
[98.65567017 -294.10379028]
[100.58000183 -291.14926147]
[101.16888428 -287.11587524]
[99.93083954 -282.64144897]
[96.67781067 -278.55917358]
[94.45269775 -263.72512817]
[92.22757721 -248.89108276]
[90.00246429 -234.05703735]
[87.77734375 -219.22299194]
[86.88452911 -204.24958801]
[87.33113098 -189.25624084]
[87.77774048 -174.26289368]
[88.22434998 -159.26954651]
[104.55822754 -151.42257690]
[114.69510651 -136.29953003]
[115.75677490 -118.03912354]
[107.36303711 -101.69175720]
[91.76083374 -91.82270050]
[92.87648010 -76.86425018]
[104.29515839 -67.36955261]
[105.63967896 -52.21544647]
[95.60334015 -40.30286026]
[96.71899414 -25.34440613]
[97.83464050 -10.38595200]
[99.06161499 4.56378174]
[100.39984894 19.50396729]
[109.24176788 31.49019814]
[102.76651001 45.92562866]
[104.10474396 60.86581421]
[105.44297791 75.80599976]
[106.78121185 90.74618530]
[114.51473999 77.89345551]
[127.59038544 70.54312134]
[142.59020996 70.61652374]
[155.59329224 78.09449005]
[163.20065308 91.02229309]
[163.42375183 106.02062988]
[156.20426941 119.16898346]
[143.42936707 127.03039551]
[128.43836975 127.54991913]
[115.14987946 120.59174347]
[107.03776550 107.97557068]
[106.14495087 122.94897461]
[105.25212860 137.92237854]
[104.35931396 152.89578247]
[103.57799530 167.87542725]
[103.01978302 182.86503601]
[102.57317352 197.85838318]
[102.12657166 212.85173035]
[101.90324402 227.85006714]
[101.90324402 242.85006714]
[101.90324402 257.85006714]
[101.90324402 272.85006714]
[101.90324402 287.85006714]
[101.90324402 302.85006714]
[109.64054108 316.65023804]
[101.90324402 329.37750244]
[101.90324402 344.37750244]
[101.90324402 359.37750244]
[101.90324402 374.37750244]
[101.90324402 389.37750244]
[101.90324402 404.37750244]
[102.12657166 419.37585449]
[102.57317352 434.36920166]
[103.01978302 449.36254883]
[103.46638489 464.35589600]
[103.91299438 479.34924316]
[118.81703949 481.31536865]
[133.21266174 485.64691162]
[146.72697449 492.23171997]
[159.00991821 500.89920044]
[169.74333191 511.42486572]
[178.64921570 523.53607178]
[185.49687195 536.91912842]
[190.10893250 551.22735596]
[192.36593628 566.09014893]
[192.20941162 581.12249756]
[189.64343262 595.93505859]
[184.73443604 610.14410400]
[177.60960388 623.38165283]
[168.45346069 635.30480957]
[157.50318909 645.60473633]
[145.04243469 654.01458740]
[131.39395142 660.31652832]
[116.91125488 664.34741211]
[101.96950531 666.00274658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 191]
[19 190]
[20 189]
[21 188]
[22 187]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[32 179]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[40 173]
[41 172]
[42 171]
[44 170]
[46 169]
[47 168]
[48 167]
[49 166]
[50 155]
[51 154]
[52 153]
[53 152]
[55 150]
[56 149]
[58 148]
[59 147]
[60 146]
[63 143]
[64 142]
[72 137]
[73 136]
[74 135]
[75 134]
[88 133]
[89 132]
[90 131]
[91 130]
[92 129]
[93 125]
[94 124]
[95 123]
[96 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
