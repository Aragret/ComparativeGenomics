%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[18.67075920 199.95758057]
[23.47576523 214.17857361]
[26.94811249 228.78225708]
[29.05817604 243.64402771]
[29.78795242 258.63708496]
[29.13121605 273.63354492]
[27.09356689 288.50540161]
[23.69239426 303.12582397]
[18.95671463 317.37005615]
[12.92693043 331.11654663]
[5.65448856 344.24804688]
[-2.79856443 356.65252686]
[-12.36010838 368.22409058]
[-22.94856644 378.86407471]
[-34.47359848 388.48168945]
[-46.83687592 396.99484253]
[-59.93291473 404.33096313]
[-73.64998627 410.42739868]
[-87.87105560 415.23214722]
[-102.47479248 418.70425415]
[-117.33660126 420.81408691]
[-132.32968140 421.54360962]
[-147.32611084 420.88662720]
[-162.19795227 418.84872437]
[-176.81831360 415.44729614]
[-191.06246948 410.71139526]
[-204.80886841 404.68136597]
[-217.94024658 397.40872192]
[-230.34455872 388.95544434]
[-241.91598511 379.39370728]
[-252.55578613 368.80508423]
[-262.17318726 357.27990723]
[-270.68615723 344.91647339]
[-278.02203369 331.82031250]
[-284.11825562 318.10314941]
[-288.92279053 303.88198853]
[-292.39465332 289.27819824]
[-294.50421143 274.41635132]
[-295.23348999 259.42324829]
[-294.57626343 244.42683411]
[-292.53811646 229.55503845]
[-289.13644409 214.93472290]
[-284.40029907 200.69065857]
[-278.37005615 186.94435120]
[-271.09716797 173.81309509]
[-262.64370728 161.40892029]
[-253.08178711 149.83766174]
[-242.49296570 139.19802856]
[-230.96762085 129.58081055]
[-218.60406494 121.06805420]
[-205.50776672 113.73239136]
[-191.79049683 107.63640594]
[-177.56927490 102.83211517]
[-162.96540833 99.36049652]
[-148.10353088 97.25117493]
[-133.11042786 96.52214813]
[-118.11402130 97.17963409]
[-103.24224854 99.21802521]
[-88.62200165 102.61992645]
[-74.37801361 107.35632324]
[-60.63180923 113.38679504]
[-47.50067520 120.65988922]
[-35.09664154 129.11355591]
[-23.52553749 138.67568970]
[-12.88608360 149.26467896]
[-3.26905727 160.79019165]
[9.08545208 152.28335571]
[21.43996048 143.77653503]
[33.79447174 135.26969910]
[37.52085495 128.88723755]
[46.39684677 126.72980499]
[58.87664413 118.40785980]
[71.35643768 110.08591461]
[83.83622742 101.76396942]
[86.80300140 90.50166321]
[96.54057312 84.11254120]
[108.05302429 85.87456512]
[120.65533447 77.73934937]
[128.05329895 63.75433350]
[142.94247437 63.35225296]
[150.34043884 49.36723709]
[165.22961426 48.96515274]
[177.83193970 40.82993698]
[190.43424988 32.69472122]
[203.03656006 24.55950737]
[215.63887024 16.42429161]
[228.24118042 8.28907490]
[240.84349060 0.15385905]
[233.48927307 -12.92499065]
[226.94607544 -26.42785645]
[221.23823547 -40.30450821]
[216.38699341 -54.50331879]
[212.41038513 -68.97147369]
[209.32322693 -83.65515137]
[207.13697815 -98.49971771]
[205.85978699 -113.44995117]
[205.49639893 -128.45024109]
[206.04815674 -143.44479370]
[207.51303101 -158.37780762]
[209.88555908 -173.19374084]
[213.15690613 -187.83749390]
[217.31492615 -202.25454712]
[222.34413147 -216.39131165]
[228.22581482 -230.19517517]
[234.93809509 -243.61479187]
[242.45600891 -256.60025024]
[250.75158691 -269.10321045]
[259.79397583 -281.07717896]
[269.54949951 -292.47763062]
[279.98193359 -303.26214600]
[291.05239868 -313.39059448]
[302.71978760 -322.82528687]
[314.94061279 -331.53112793]
[327.66946411 -339.47576904]
[340.85897827 -346.62960815]
[354.46008301 -352.96606445]
[368.42218018 -358.46157837]
[382.69335938 -363.09564209]
[397.22048950 -366.85107422]
[411.94955444 -369.71389771]
[426.82574463 -371.67343140]
[441.79373169 -372.72241211]
[456.79782104 -372.85693359]
[471.78219604 -372.07650757]
[486.69113159 -370.38400269]
[501.46914673 -367.78573608]
[516.06127930 -364.29138184]
[530.41326904 -359.91390991]
[544.47161865 -354.66964722]
[558.18420410 -348.57809448]
[571.49981689 -341.66186523]
[584.36907959 -333.94674683]
[596.74407959 -325.46139526]
[608.57873535 -316.23739624]
[619.82897949 -306.30908203]
[630.45312500 -295.71337891]
[640.41149902 -284.48968506]
[649.66711426 -272.67974854]
[658.18554688 -260.32751465]
[665.93505859 -247.47895813]
[672.88690186 -234.18185425]
[679.01513672 -220.48567200]
[684.29699707 -206.44134521]
[688.71282959 -192.10115051]
[692.24621582 -177.51841736]
[694.88403320 -162.74740601]
[696.61639404 -147.84306335]
[697.43695068 -132.86080933]
[697.34252930 -117.85641479]
[696.33361816 -102.88568115]
[694.41387939 -88.00430298]
[691.59051514 -73.26763153]
[687.87396240 -58.73050690]
[683.27807617 -44.44699478]
[677.81994629 -30.47023201]
[671.51989746 -16.85221863]
[664.40136719 -3.64361191]
[656.49078369 9.10645103]
[647.81768799 21.35053825]
[638.41424561 33.04310226]
[628.31542969 44.14064026]
[617.55889893 54.60187531]
[606.18457031 64.38788605]
[594.23486328 73.46227264]
[581.75408936 81.79127502]
[568.78881836 89.34390259]
[555.38720703 96.09207153]
[541.59912109 102.01066589]
[527.47589111 107.07767487]
[513.07000732 111.27424622]
[498.43505859 114.58476257]
[483.62554932 116.99692535]
[468.69650269 118.50173950]
[453.70346069 119.09362793]
[438.70227051 118.77037811]
[423.74865723 117.53318787]
[408.89828491 115.38666534]
[394.20642090 112.33879852]
[379.72766113 108.40091705]
[365.51593018 103.58768463]
[351.62405396 97.91699219]
[338.10372925 91.40994263]
[325.00524902 84.09074402]
[312.37734985 75.98661804]
[300.26699829 67.12771606]
[288.71923828 57.54699707]
[277.77703857 47.28009796]
[267.48110962 36.36521530]
[257.86975098 24.84295082]
[248.97871399 12.75617123]
[236.37638855 20.89138603]
[223.77407837 29.02660179]
[211.17176819 37.16181946]
[198.56945801 45.29703522]
[185.96714783 53.43225098]
[173.36483765 61.56746674]
[166.86827087 74.97059631]
[151.07769775 75.95456696]
[144.58113098 89.35769653]
[128.79055786 90.34166718]
[116.18824005 98.47688293]
[108.91988373 113.59465790]
[92.15817261 114.24376678]
[79.67838287 122.56570435]
[67.19858551 130.88764954]
[54.71879196 139.20959473]
[42.30129623 147.62422180]
[29.94678879 156.13104248]
[17.59227943 164.63786316]
[5.23776960 173.14469910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 210]
[67 209]
[68 208]
[69 207]
[71 206]
[72 205]
[73 204]
[74 203]
[77 201]
[78 200]
[80 198]
[82 196]
[83 195]
[84 194]
[85 193]
[86 192]
[87 191]
[88 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
