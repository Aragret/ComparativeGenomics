%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[41.78783035 788.98004150]
[26.82785034 790.11712646]
[11.82978821 790.50714111]
[-3.16907001 790.14904785]
[-18.13143539 789.04376221]
[-33.02010727 787.19409180]
[-47.79806900 784.60449219]
[-62.42858505 781.28155518]
[-76.87527466 777.23345947]
[-91.10222626 772.47027588]
[-105.07406616 767.00390625]
[-118.75606537 760.84783936]
[-132.11419678 754.01745605]
[-145.11526489 746.52972412]
[-157.72692871 738.40319824]
[-169.91783142 729.65814209]
[-181.65769958 720.31634521]
[-192.91729736 710.40093994]
[-203.66867065 699.93664551]
[-213.88507080 688.94940186]
[-223.54110718 677.46655273]
[-232.61276245 665.51672363]
[-241.07749939 653.12951660]
[-248.91424561 640.33581543]
[-256.10354614 627.16735840]
[-262.62750244 613.65692139]
[-268.46994019 599.83813477]
[-273.61627197 585.74523926]
[-278.05374146 571.41333008]
[-281.77130127 556.87811279]
[-284.75973511 542.17559814]
[-287.01156616 527.34240723]
[-288.52124023 512.41546631]
[-289.28500366 497.43176270]
[-289.30093384 482.42864990]
[-288.56896973 467.44338989]
[-287.09100342 452.51321411]
[-284.87063599 437.67529297]
[-281.91342163 422.96649170]
[-278.22671509 408.42337036]
[-273.81967163 394.08212280]
[-268.70324707 379.97833252]
[-262.89019775 366.14715576]
[-256.39489746 352.62289429]
[-249.23358154 339.43920898]
[-241.42399597 326.62890625]
[-232.98558044 314.22375488]
[-223.93931580 302.25469971]
[-214.30767822 290.75140381]
[-204.11460876 279.74252319]
[-193.38548279 269.25540161]
[-182.14694214 259.31613159]
[-170.42694092 249.94940186]
[-158.25460815 241.17851257]
[-145.66023254 233.02526855]
[-132.67509460 225.50993347]
[-119.33148193 218.65121460]
[-105.66258240 212.46612549]
[-91.70237732 206.97007751]
[-77.48556519 202.17672729]
[-63.04750061 198.09797668]
[-48.42407227 194.74397278]
[-33.65163803 192.12306213]
[-18.76692772 190.24176025]
[-3.80694270 189.10472107]
[11.19112206 188.71481323]
[26.18997765 189.07296753]
[41.15233612 190.17831421]
[56.04100037 192.02810669]
[70.81894684 194.61773682]
[74.14120483 179.99028015]
[77.46347046 165.36280823]
[72.73722076 151.23794556]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[90.55323792 58.54140472]
[94.13085938 43.75440598]
[106.83166504 36.05861664]
[110.15392303 21.43115807]
[113.47618103 6.80369711]
[116.79843903 -7.82376289]
[120.12069702 -22.45122337]
[105.95134735 -27.42386246]
[92.44120026 -33.97930527]
[79.76640320 -42.03208542]
[68.09219360 -51.47722244]
[57.57077026 -62.19157410]
[48.33929825 -74.03546143]
[40.51813126 -86.85447693]
[34.20922852 -100.48149109]
[29.49485016 -114.73885345]
[26.43644905 -129.44068909]
[25.07390022 -144.39532471]
[25.42496872 -159.40780640]
[27.48507690 -174.28240967]
[31.22736740 -188.82521057]
[36.60305023 -202.84660339]
[43.54204178 -216.16381836]
[51.95388031 -228.60322571]
[61.72890091 -240.00263977]
[72.73966217 -250.21347046]
[84.84262085 -259.10256958]
[97.87998962 -266.55407715]
[111.68179321 -272.47082520]
[126.06810760 -276.77566528]
[140.85136414 -279.41253662]
[155.83885193 -280.34698486]
[170.83514404 -279.56689453]
[185.64477539 -277.08239746]
[200.07464600 -272.92587280]
[213.93664551 -267.15155029]
[227.05003357 -259.83468628]
[239.24388123 -251.07064819]
[250.35919189 -240.97373962]
[260.25106812 -229.67556763]
[268.79052734 -217.32342529]
[275.86627197 -204.07836914]
[281.38601685 -190.11305237]
[285.27786255 -175.60955811]
[287.49099731 -160.75695801]
[287.99661255 -145.74888611]
[286.78811646 -130.78100586]
[283.88125610 -116.04846954]
[279.31390381 -101.74332428]
[273.14562988 -88.05207062]
[265.45687866 -75.15321350]
[256.34783936 -63.21490479]
[245.93728638 -52.39279175]
[234.36094666 -42.82795715]
[221.76972961 -34.64510345]
[208.32778931 -27.95091057]
[194.21038818 -22.83264732]
[179.60156250 -19.35704231]
[164.69175720 -17.56940842]
[149.67536926 -17.49304962]
[134.74815369 -19.12896347]
[131.42590332 -4.50150347]
[128.10363770 10.12595654]
[124.78137970 24.75341606]
[121.45912170 39.38087845]
[129.58952332 51.80794907]
[126.42865753 66.68960571]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[102.45494843 157.98757935]
[92.09092712 168.68507385]
[88.76866913 183.31253052]
[85.44641113 197.93998718]
[99.89311981 201.98800659]
[114.12010193 206.75111389]
[128.09196472 212.21743774]
[141.77400208 218.37342834]
[155.13217163 225.20375061]
[168.13327026 232.69143677]
[180.74496460 240.81785583]
[192.93592834 249.56282043]
[204.67584229 258.90460205]
[215.93550110 268.81994629]
[226.68692017 279.28421021]
[236.90338135 290.27136230]
[246.55947876 301.75411987]
[255.63119507 313.70394897]
[264.09597778 326.09109497]
[271.93280029 338.88476562]
[279.12216187 352.05316162]
[285.64620972 365.56356812]
[291.48870850 379.38235474]
[296.63510132 393.47521973]
[301.07266235 407.80706787]
[304.79031372 422.34231567]
[307.77880859 437.04479980]
[310.03073120 451.87796021]
[311.54046631 466.80493164]
[312.30429077 481.78860474]
[312.32031250 496.79171753]
[311.58843994 511.77700806]
[310.11053467 526.70715332]
[307.89025879 541.54510498]
[304.93310547 556.25390625]
[301.24649048 570.79705811]
[296.83950806 585.13836670]
[291.72317505 599.24212646]
[285.91018677 613.07336426]
[279.41497803 626.59765625]
[272.25369263 639.78137207]
[264.44418335 652.59173584]
[256.00582886 664.99688721]
[246.95962524 676.96600342]
[237.32804871 688.46936035]
[227.13505554 699.47827148]
[216.40597534 709.96545410]
[205.16748047 719.90478516]
[193.44752502 729.27160645]
[181.27525330 738.04254150]
[168.68090820 746.19586182]
[155.69580078 753.71124268]
[142.35223389 760.57006836]
[128.68336487 766.75518799]
[114.72319031 772.25134277]
[100.50640869 777.04473877]
[86.06835938 781.12359619]
[71.44495392 784.47766113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 156]
[71 155]
[72 154]
[74 152]
[75 151]
[76 150]
[78 148]
[79 147]
[82 144]
[83 143]
[84 142]
[85 141]
[86 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
