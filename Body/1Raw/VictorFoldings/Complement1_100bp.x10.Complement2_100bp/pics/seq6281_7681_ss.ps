%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[114.66268921 441.08377075]
[101.93080139 449.04382324]
[88.40050507 455.55490112]
[74.23604584 460.53799438]
[59.60936356 463.93261719]
[44.69802094 465.69754028]
[29.68301964 465.81137085]
[14.74663162 464.27267456]
[0.07017172 461.10018921]
[-14.16820240 456.33239746]
[-27.79565048 450.02716064]
[-40.64674759 442.26104736]
[-52.56549072 433.12832642]
[-63.40719986 422.73983765]
[-73.04026794 411.22171021]
[-81.34775543 398.71377563]
[-88.22881317 385.36782837]
[-93.59992218 371.34591675]
[-97.39587402 356.81820679]
[-99.57059479 341.96109009]
[-100.09767914 326.95492554]
[-98.97073364 311.98184204]
[-96.20343781 297.22360229]
[-91.82937622 282.85937500]
[-85.90165710 269.06353760]
[-78.49223328 256.00354004]
[-69.69104767 243.83792114]
[-59.60493469 232.71437073]
[-48.35633850 222.76789856]
[-36.08180237 214.11924744]
[-22.93033028 206.87342834]
[-9.06156540 201.11839294]
[5.35613632 196.92398071]
[20.14775658 194.34111023]
[35.13373947 193.40116882]
[50.13216782 194.11552429]
[64.96097565 196.47554016]
[68.93307495 182.01101685]
[72.90516663 167.54649353]
[76.87726593 153.08197021]
[75.61722565 145.79951477]
[81.01767731 138.43249512]
[85.20468140 124.02870941]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[104.57854462 57.38049316]
[108.76555634 42.97671127]
[108.15596008 33.86264420]
[113.12361145 28.39051247]
[117.52461243 14.05066490]
[121.92561340 -0.28918204]
[107.81999207 -5.40048647]
[93.98667908 -11.20854568]
[80.46007538 -17.69891930]
[67.27380371 -24.85547066]
[54.46065140 -32.66041183]
[42.05247116 -41.09432983]
[30.08011246 -50.13626480]
[18.57333755 -59.76373291]
[7.56075954 -69.95279694]
[-2.93024564 -80.67813110]
[-12.87359524 -91.91307068]
[-22.24456787 -103.62967682]
[-31.01986694 -115.79882050]
[-39.17767334 -128.39024353]
[-46.69770813 -141.37266541]
[-53.56127167 -154.71377563]
[-59.75130463 -168.38043213]
[-65.25241852 -182.33865356]
[-70.05092621 -196.55372620]
[-74.13491058 -210.99031067]
[-77.49420929 -225.61251831]
[-80.12047577 -240.38400269]
[-82.00717163 -255.26803589]
[-83.14962006 -270.22760010]
[-83.54497528 -285.22552490]
[-83.19225311 -300.22451782]
[-82.09232330 -315.18728638]
[-80.24793243 -330.07659912]
[-77.66366577 -344.85549927]
[-74.34593964 -359.48718262]
[-70.30300140 -373.93533325]
[-65.54491425 -388.16397095]
[-60.08349991 -402.13778687]
[-53.93233490 -415.82196045]
[-47.10671616 -429.18255615]
[-39.62361145 -442.18627930]
[-31.50162506 -454.80084229]
[-22.76094818 -466.99487305]
[-13.42331409 -478.73806763]
[-3.51193714 -490.00122070]
[6.94854212 -500.75631714]
[17.93211746 -510.97665405]
[29.41147995 -520.63677979]
[41.35809326 -529.71270752]
[53.74225235 -538.18188477]
[66.53317261 -546.02319336]
[79.69905090 -553.21722412]
[93.20715332 -559.74597168]
[107.02389526 -565.59332275]
[121.11492920 -570.74468994]
[135.44522095 -575.18731689]
[149.97915649 -578.91009521]
[164.68057251 -581.90374756]
[179.51295471 -584.16088867]
[194.43939209 -585.67590332]
[209.42280579 -586.44500732]
[224.42591858 -586.46624756]
[239.41143799 -585.73968506]
[254.34213257 -584.26702881]
[269.18084717 -582.05200195]
[283.89071655 -579.10003662]
[298.43511963 -575.41851807]
[312.77798462 -571.01660156]
[326.88357544 -565.90521240]
[340.71685791 -560.09710693]
[354.24340820 -553.60662842]
[367.42965698 -546.45001221]
[380.24276733 -538.64501953]
[392.65090942 -530.21099854]
[404.62319946 -521.16900635]
[416.12994385 -511.54150391]
[427.14245605 -501.35238647]
[437.63342285 -490.62698364]
[447.57669067 -479.39199829]
[456.94760132 -467.67535400]
[465.72283936 -455.50616455]
[473.88058472 -442.91467285]
[481.40054321 -429.93222046]
[488.26403809 -416.59106445]
[494.45401001 -402.92437744]
[499.95504761 -388.96615601]
[504.75347900 -374.75103760]
[508.83740234 -360.31445312]
[512.19659424 -345.69219971]
[514.82281494 -330.92071533]
[516.70941162 -316.03668213]
[517.85180664 -301.07708740]
[518.24707031 -286.07916260]
[517.89428711 -271.08020020]
[516.79425049 -256.11743164]
[514.94982910 -241.22811890]
[512.36547852 -226.44924927]
[509.04763794 -211.81756592]
[505.00463867 -197.36944580]
[500.24649048 -183.14080811]
[494.78500366 -169.16705322]
[488.63375854 -155.48289490]
[481.80807495 -142.12234497]
[474.32489014 -129.11865234]
[466.20285034 -116.50412750]
[457.46209717 -104.31014252]
[448.12442017 -92.56699371]
[438.21298218 -81.30389404]
[427.75244141 -70.54884338]
[416.76879883 -60.32857513]
[405.28939819 -50.66849899]
[393.34274292 -41.59263611]
[380.95852661 -33.12354660]
[368.16757202 -25.28228951]
[355.00164795 -18.08835793]
[341.49353027 -11.55963421]
[327.67675781 -5.71235371]
[313.58569336 -0.56105238]
[299.25537109 3.88146281]
[284.72140503 7.60414743]
[270.01998901 10.59774494]
[255.18759155 12.85481453]
[240.26113892 14.36974335]
[225.27772522 15.13876629]
[210.27461243 15.15997028]
[195.28909302 14.43330288]
[180.35841370 12.96057034]
[165.51971436 10.74543476]
[150.80986023 7.79340410]
[136.26545715 4.11181593]
[131.86445618 18.45166397]
[127.46346283 32.79151154]
[123.16933441 47.16372299]
[118.98232269 61.56750488]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.60846710 128.21572876]
[95.42145538 142.61950684]
[91.34178925 157.05406189]
[87.36968994 171.51858521]
[83.39759827 185.98310852]
[79.42549896 200.44763184]
[93.37991333 205.99177551]
[106.63972473 213.03738403]
[119.04396057 221.49896240]
[130.44204712 231.27375793]
[140.69563293 242.24313354]
[149.68022156 254.27394104]
[157.28678894 267.22012329]
[163.42295837 280.92449951]
[168.01428223 295.22076416]
[171.00498962 309.93536377]
[172.35879517 324.88961792]
[172.05924988 339.90206909]
[170.11001587 354.79043579]
[166.53472900 369.37402344]
[161.37681580 383.47573853]
[154.69885254 396.92446899]
[146.58193970 409.55691528]
[137.12458801 421.21975708]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 192]
[38 191]
[39 190]
[40 189]
[42 188]
[43 187]
[44 186]
[46 184]
[47 183]
[48 182]
[49 181]
[51 180]
[52 179]
[53 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
