%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[12.64771366 762.20562744]
[-0.53049392 769.39379883]
[-14.32391071 775.31628418]
[-28.61131668 779.92114258]
[-43.26715088 783.16784668]
[-58.16261292 785.02783203]
[-73.16680145 785.48486328]
[-88.14785004 784.53479004]
[-102.97410583 782.18603516]
[-117.51527405 778.45928955]
[-131.64356995 773.38720703]
[-145.23481750 767.01440430]
[-158.16957092 759.39691162]
[-170.33416748 750.60162354]
[-181.62170410 740.70587158]
[-191.93296814 729.79656982]
[-201.17736816 717.96966553]
[-209.27363586 705.32910156]
[-216.15061951 691.98583984]
[-221.74790955 678.05731201]
[-226.01629639 663.66577148]
[-228.91825867 648.93780518]
[-230.42831421 634.00280762]
[-230.53318787 618.99206543]
[-229.23194885 604.03741455]
[-226.53602600 589.27032471]
[-222.46913147 574.82061768]
[-217.06700134 560.81518555]
[-210.37710571 547.37719727]
[-202.45823669 534.62469482]
[-193.37998962 522.66979980]
[-183.22215271 511.61752319]
[-172.07397461 501.56503296]
[-160.03344727 492.60064697]
[-147.20639038 484.80316162]
[-133.70550537 478.24108887]
[-119.64945984 472.97210693]
[-105.16178131 469.04254150]
[-90.36978149 466.48687744]
[-75.40346527 465.32760620]
[-60.39435959 465.57492065]
[-45.47436523 467.22665405]
[-30.77459908 470.26828003]
[-26.37360191 455.92840576]
[-21.97260284 441.58856201]
[-25.63520432 427.15130615]
[-14.18945503 416.22860718]
[-9.78845692 401.88876343]
[-5.38745880 387.54891968]
[-6.79394054 382.98483276]
[-5.34822416 377.48873901]
[-0.63605803 372.85116577]
[4.18993950 358.64871216]
[9.01593685 344.44625854]
[5.78481197 329.90634155]
[17.55069542 319.32928467]
[22.37669373 305.12683105]
[9.30957127 297.79943848]
[-2.19163489 288.19308472]
[-11.73428917 276.63381958]
[-18.99226952 263.51434326]
[-23.71710587 249.28076172]
[-25.74649811 234.41740417]
[-25.00987625 219.43023682]
[-21.53086281 204.82975769]
[-15.42651844 191.11355591]
[-6.90339851 178.74935913]
[3.74943209 168.15908813]
[16.17020416 159.70445251]
[29.93673134 153.67459106]
[44.58075333 150.27621460]
[59.60387039 149.62649536]
[74.49450684 151.74900818]
[79.32050323 137.54655457]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[97.64603424 53.85654831]
[111.28485107 42.81347275]
[115.89886475 28.54073906]
[120.19298553 14.16852665]
[124.16508484 -0.29599693]
[128.13717651 -14.76052094]
[132.10926819 -29.22504425]
[128.30255127 -44.58145905]
[139.13391113 -54.80550003]
[131.57640076 -68.42613983]
[135.81072998 -83.03864288]
[148.84249878 -90.15962982]
[152.81459045 -104.62415314]
[156.78668213 -119.08867645]
[160.75878906 -133.55320740]
[164.73088074 -148.01773071]
[168.70297241 -162.48225403]
[172.67506409 -176.94677734]
[176.64717102 -191.41130066]
[163.11778259 -197.98931885]
[151.02761841 -206.94155884]
[140.78843689 -217.96308899]
[132.74902344 -230.67851257]
[127.18315887 -244.65476990]
[124.28042603 -259.41583252]
[124.13970184 -274.45892334]
[126.76576233 -289.27169800]
[132.06918335 -303.34963989]
[139.86930847 -316.21325684]
[149.90049744 -327.42440796]
[161.82106018 -336.60128784]
[175.22502136 -343.43127441]
[189.65582275 -347.68176270]
[204.62194824 -349.20797729]
[219.61369324 -347.95797729]
[234.12040710 -343.97430420]
[247.64802551 -337.39260864]
[259.73577881 -328.43713379]
[269.97198486 -317.41284180]
[278.00796509 -304.69525146]
[283.57006836 -290.71746826]
[286.46881104 -275.95565796]
[286.60549927 -260.91250610]
[283.97543335 -246.10043335]
[278.66821289 -232.02392578]
[270.86462402 -219.16241455]
[260.83041382 -207.95396423]
[248.90737915 -198.78031921]
[235.50158691 -191.95394897]
[221.06964111 -187.70735168]
[206.10308838 -186.18515015]
[191.11169434 -187.43920898]
[187.13960266 -172.97468567]
[183.16749573 -158.51016235]
[179.19540405 -144.04563904]
[175.22331238 -129.58110046]
[171.25120544 -115.11658478]
[167.27911377 -100.65206146]
[163.30702209 -86.18753815]
[170.87440491 -73.40981293]
[167.05220032 -58.68414688]
[153.59843445 -50.83340454]
[157.68927002 -36.51158905]
[146.57380676 -25.25294876]
[142.60169983 -10.78842449]
[138.62960815 3.67609930]
[134.65751648 18.14062309]
[136.07435608 21.36938095]
[135.99772644 25.44481659]
[134.04669189 29.65750885]
[130.17160034 33.15475082]
[125.55758667 47.42748260]
[130.78431702 58.33655167]
[127.05712128 70.26515961]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[93.52296448 142.37255859]
[88.69696045 156.57501221]
[101.79802704 163.96408081]
[113.31514740 173.63217163]
[122.85702515 185.24893188]
[130.09983826 198.41775513]
[134.79818726 212.68948364]
[136.79345703 227.57759094]
[136.01914978 242.57482910]
[132.50309753 257.17053223]
[126.36648560 270.86795044]
[117.81962585 283.20120239]
[107.15480804 293.75106812]
[94.73628235 302.15933228]
[80.98779297 308.14077759]
[66.37816620 311.49313354]
[51.40529251 312.10357666]
[36.57915115 309.95281982]
[31.75315094 324.15527344]
[34.63908768 339.71102905]
[23.21839333 349.27227783]
[18.39239502 363.47473145]
[13.56639767 377.67718506]
[8.95238876 391.94992065]
[4.55139017 406.28976440]
[0.15039223 420.62960815]
[3.49820375 436.09255981]
[-7.63275623 445.98956299]
[-12.03375435 460.32940674]
[-16.43475342 474.66925049]
[-2.55953598 480.39752197]
[10.71830368 487.39990234]
[23.28207779 495.61489868]
[35.02137375 504.97027588]
[45.83301926 515.38385010]
[55.62200546 526.76409912]
[64.30230713 539.01104736]
[71.79762268 552.01696777]
[78.04209900 565.66766357]
[82.98085785 579.84307861]
[86.57048798 594.41876221]
[88.77944183 609.26647949]
[89.58831787 624.25579834]
[88.98999023 639.25500488]
[86.98973846 654.13232422]
[83.60511780 668.75689697]
[78.86589813 683.00030518]
[72.81370544 696.73730469]
[65.50174713 709.84722900]
[56.99426651 722.21478271]
[47.36603928 733.73138428]
[36.70167542 744.29577637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 188]
[44 187]
[45 186]
[47 184]
[48 183]
[49 182]
[52 181]
[53 180]
[54 179]
[56 177]
[57 176]
[73 160]
[74 159]
[75 158]
[76 157]
[78 155]
[79 154]
[81 151]
[82 150]
[83 146]
[84 145]
[85 144]
[86 143]
[88 141]
[91 138]
[92 137]
[93 136]
[94 135]
[95 134]
[96 133]
[97 132]
[98 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
