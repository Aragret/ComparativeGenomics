%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[143.00999451 375.44821167]
[132.85711670 386.50265503]
[121.79152679 396.64337158]
[109.89514923 405.79528809]
[97.25605774 413.89065552]
[83.96783447 420.86950684]
[70.12886047 426.68020630]
[55.84159470 431.27972412]
[41.21181870 434.63400269]
[26.34785271 436.71820068]
[11.35973930 437.51687622]
[-3.64154959 437.02416992]
[-18.54494858 435.24368286]
[-33.24011612 432.18859863]
[-47.61825180 427.88156128]
[-61.57290268 422.35443115]
[-75.00075531 415.64813232]
[-87.80238342 407.81234741]
[-99.88301849 398.90505981]
[-111.15321350 388.99224854]
[-121.52952576 378.14724731]
[-130.93513489 366.45040894]
[-139.30039978 353.98831177]
[-146.56338501 340.85324097]
[-152.67031860 327.14239502]
[-157.57597351 312.95733643]
[-161.24406433 298.40307617]
[-163.64739990 283.58737183]
[-164.76818848 268.61990356]
[-164.59815979 253.61148071]
[-163.13853455 238.67323303]
[-160.40016174 223.91577148]
[-156.40327454 209.44834900]
[-151.17749023 195.37808228]
[-144.76148987 181.80912781]
[-137.20278931 168.84196472]
[-128.55732727 156.57258606]
[-118.88913727 145.09184265]
[-108.26978302 134.48474121]
[-96.77789307 124.82978821]
[-84.49855804 116.19849396]
[-71.52268219 108.65474701]
[-57.94633865 102.25440216]
[-43.87004852 97.04485321]
[-29.39802170 93.06466675]
[-14.63741016 90.34329987]
[0.30250159 88.90091705]
[15.31110287 88.74819183]
[30.27727318 89.88626099]
[45.09020615 92.30667877]
[59.64023209 95.99154663]
[73.81961823 100.91357422]
[87.52339935 107.03631592]
[87.47257233 93.05458069]
[99.35791016 85.69045258]
[106.63114166 72.57176208]
[113.90436554 59.45306396]
[121.17759705 46.33436966]
[128.45082092 33.21567917]
[125.65336609 20.62452888]
[131.98132324 9.84767342]
[143.57206726 6.38625526]
[151.03981018 -6.62269735]
[158.50755310 -19.63164902]
[145.90783691 -27.77736664]
[133.75558472 -36.57668686]
[122.08464813 -46.00508499]
[110.92756653 -56.03628159]
[100.31542969 -66.64231873]
[90.27783203 -77.79364014]
[80.84272766 -89.45915985]
[72.03643036 -101.60636139]
[63.88347626 -114.20138550]
[56.40659714 -127.20913696]
[49.62662506 -140.59336853]
[43.56245804 -154.31674194]
[38.23100281 -168.34104919]
[33.64711380 -182.62716675]
[29.82357025 -197.13529968]
[26.77102852 -211.82501221]
[24.49799728 -226.65533447]
[23.01081085 -241.58496094]
[22.31361389 -256.57226562]
[22.40835190 -271.57546997]
[23.29475784 -286.55279541]
[24.97036362 -301.46243286]
[27.43049622 -316.26287842]
[30.66830254 -330.91287231]
[34.67475510 -345.37155151]
[39.43868637 -359.59866333]
[44.94682312 -373.55450439]
[51.18381119 -387.20022583]
[58.13226318 -400.49774170]
[65.77281189 -413.41003418]
[74.08417511 -425.90112305]
[83.04316711 -437.93612671]
[92.62483215 -449.48156738]
[102.80245972 -460.50524902]
[113.54768372 -470.97640991]
[124.83055115 -480.86593628]
[136.61962891 -490.14617920]
[148.88203430 -498.79135132]
[161.58360291 -506.77728271]
[174.68893433 -514.08178711]
[188.16149902 -520.68444824]
[201.96376038 -526.56689453]
[216.05722046 -531.71276855]
[230.40261841 -536.10760498]
[244.95997620 -539.73925781]
[259.68869019 -542.59759521]
[274.54776001 -544.67462158]
[289.49569702 -545.96459961]
[304.49090576 -546.46386719]
[319.49157715 -546.17102051]
[334.45587158 -545.08697510]
[349.34210205 -543.21466064]
[364.10876465 -540.55932617]
[378.71472168 -537.12841797]
[393.11926270 -532.93139648]
[407.28222656 -527.98004150]
[421.16412354 -522.28814697]
[434.72631836 -515.87152100]
[447.93093872 -508.74810791]
[460.74124146 -500.93774414]
[473.12149048 -492.46221924]
[485.03717041 -483.34509277]
[496.45510864 -473.61184692]
[507.34344482 -463.28955078]
[517.67181396 -452.40701294]
[527.41149902 -440.99456787]
[536.53533936 -429.08401489]
[545.01782227 -416.70852661]
[552.83538818 -403.90261841]
[559.96624756 -390.70199585]
[566.39044189 -377.14343262]
[572.09014893 -363.26470947]
[577.04943848 -349.10452271]
[581.25457764 -334.70236206]
[584.69372559 -320.09832764]
[587.35736084 -305.33316040]
[589.23797607 -290.44796753]
[590.33050537 -275.48428345]
[590.63171387 -260.48379517]
[590.14086914 -245.48831177]
[588.85937500 -230.53964233]
[586.79064941 -215.67942810]
[583.94061279 -200.94909668]
[580.31713867 -186.38970947]
[575.93029785 -172.04183960]
[570.79241943 -157.94548035]
[564.91772461 -144.13992310]
[558.32263184 -130.66365051]
[551.02551270 -117.55421448]
[543.04669189 -104.84815216]
[534.40838623 -92.58088684]
[525.13476562 -80.78660583]
[515.25158691 -69.49818420]
[504.78646851 -58.74707413]
[493.76852417 -48.56325531]
[482.22848511 -38.97510147]
[470.19848633 -30.00934410]
[457.71209717 -21.69096947]
[444.80410767 -14.04316139]
[431.51046753 -7.08723640]
[417.86825562 -0.84258246]
[403.91552734 4.67339563]
[389.69110107 9.44532299]
[375.23464966 13.45990086]
[360.58648682 16.70593834]
[345.78744507 19.17439079]
[330.87872314 20.85837364]
[315.90191650 21.75319672]
[300.89877319 21.85636520]
[285.91107178 21.16759300]
[270.98062134 19.68879700]
[256.14901733 17.42409897]
[241.45759583 14.37981415]
[226.94731140 10.56442547]
[212.65861511 5.98856688]
[198.63131714 0.66499281]
[184.90452576 -5.39145899]
[171.51649475 -12.16390800]
[164.04875183 0.84504402]
[156.58102417 13.85399628]
[157.57014465 31.37508583]
[141.56951904 40.48890686]
[134.29629517 53.60760117]
[127.02306366 66.72629547]
[119.74983215 79.84498596]
[112.47660065 92.96368408]
[112.52742767 106.94541931]
[100.64208984 114.30954742]
[113.09497833 122.68850708]
[124.78147125 132.10696411]
[135.61503601 142.49519348]
[145.51545715 153.77629089]
[154.40945435 165.86671448]
[162.23115540 178.67695618]
[168.92268372 192.11216736]
[174.43446350 206.07289124]
[178.72569275 220.45574951]
[181.76460266 235.15428162]
[183.52870178 250.05961609]
[184.00492859 265.06143188]
[183.18975830 280.04867554]
[181.08920288 294.91033936]
[177.71885681 309.53640747]
[173.10362244 323.81860352]
[167.27770996 337.65118408]
[160.28424072 350.93173218]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 192]
[55 190]
[56 189]
[57 188]
[58 187]
[59 186]
[62 184]
[63 183]
[64 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
