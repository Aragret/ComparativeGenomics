%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[136.60119629 387.62118530]
[126.33574677 398.57153320]
[115.15497589 408.58551025]
[103.14396667 417.58691406]
[90.39413452 425.50720215]
[77.00251007 432.28613281]
[63.07102203 437.87210083]
[48.70569611 442.22256470]
[34.01585770 445.30447388]
[19.11331749 447.09432983]
[4.11148643 447.57852173]
[-10.87545776 446.75335693]
[-25.73345184 444.62512207]
[-40.34941864 441.21002197]
[-54.61211777 436.53405762]
[-68.41299438 430.63278198]
[-81.64702606 423.55111694]
[-94.21348572 415.34298706]
[-106.01672363 406.07083130]
[-116.96692657 395.80523682]
[-126.98074341 384.62432861]
[-135.98196411 372.61318970]
[-143.90208435 359.86325073]
[-150.68081665 346.47152710]
[-156.26658630 332.53994751]
[-160.61686707 318.17456055]
[-163.69856262 303.48468018]
[-165.48822021 288.58212280]
[-165.97219849 273.58029175]
[-165.14682007 258.59335327]
[-163.01838684 243.73539734]
[-159.60308838 229.11947632]
[-154.92691040 214.85684204]
[-149.02543640 201.05604553]
[-141.94358826 187.82211304]
[-133.73527527 175.25576782]
[-124.46296692 163.45265198]
[-114.19721222 152.50259399]
[-103.01615906 142.48893738]
[-91.00489807 133.48788452]
[-78.25483704 125.56794739]
[-64.86302948 118.78939819]
[-50.93138123 113.20382690]
[-36.56593323 108.85374451]
[-21.87601089 105.77225494]
[-6.97341824 103.98281860]
[8.02842617 103.49904633]
[23.01534653 104.32462311]
[37.87327957 106.45326996]
[52.48915100 109.86878204]
[66.75171661 114.54515839]
[80.55243683 120.44682312]
[87.62953949 107.22129822]
[87.37055206 93.24185944]
[99.14493561 85.70159912]
[106.22203827 72.47607422]
[113.29914093 59.25054550]
[112.27825928 40.86470032]
[127.53512573 32.19319153]
[134.41453552 18.86376190]
[141.29394531 5.53433275]
[148.17335510 -7.79509640]
[155.05278015 -21.12452507]
[142.10523987 -28.70533371]
[129.57952881 -36.96449661]
[117.51114655 -45.87859726]
[105.93428802 -55.42237091]
[94.88178253 -65.56876373]
[84.38495636 -76.28902435]
[74.47356415 -87.55274963]
[65.17570496 -99.32801819]
[56.51772308 -111.58144379]
[48.52417374 -124.27831268]
[41.21770477 -137.38261414]
[34.61903381 -150.85720825]
[28.74686623 -164.66390991]
[23.61784363 -178.76356506]
[19.24650574 -193.11621094]
[15.64524555 -207.68116760]
[12.82426929 -222.41716003]
[10.79157352 -237.28239441]
[9.55292130 -252.23475647]
[9.11182308 -267.23184204]
[9.46952915 -282.23114014]
[10.62502575 -297.19015503]
[12.57503700 -312.06646729]
[15.31403637 -326.81793213]
[18.83425903 -341.40267944]
[23.12572670 -355.77941895]
[28.17627335 -369.90737915]
[33.97158432 -383.74649048]
[40.49523544 -397.25756836]
[47.72872543 -410.40231323]
[55.65155792 -423.14340210]
[64.24127197 -435.44479370]
[73.47351837 -447.27157593]
[83.32213593 -458.59024048]
[93.75919342 -469.36868286]
[104.75511169 -479.57638550]
[116.27871704 -489.18438721]
[128.29736328 -498.16543579]
[140.77696228 -506.49411011]
[153.68212891 -514.14678955]
[166.97631836 -521.10180664]
[180.62182617 -527.33935547]
[194.57995605 -532.84185791]
[208.81117249 -537.59368896]
[223.27511597 -541.58135986]
[237.93080139 -544.79357910]
[252.73666382 -547.22125244]
[267.65075684 -548.85742188]
[282.63079834 -549.69757080]
[297.63430786 -549.73919678]
[312.61877441 -548.98229980]
[327.54171753 -547.42895508]
[342.36083984 -545.08355713]
[357.03411865 -541.95281982]
[371.51998901 -538.04553223]
[385.77737427 -533.37280273]
[399.76586914 -527.94793701]
[413.44580078 -521.78619385]
[426.77841187 -514.90515137]
[439.72589111 -507.32427979]
[452.25155640 -499.06503296]
[464.31988525 -490.15084839]
[475.89666748 -480.60699463]
[486.94909668 -470.46054077]
[497.44586182 -459.74023438]
[507.35717773 -448.47644043]
[516.65496826 -436.70111084]
[525.31286621 -424.44763184]
[533.30633545 -411.75070190]
[540.61273193 -398.64636230]
[547.21130371 -385.17172241]
[553.08337402 -371.36499023]
[558.21234131 -357.26528931]
[562.58355713 -342.91262817]
[566.18475342 -328.34762573]
[569.00561523 -313.61163330]
[571.03820801 -298.74636841]
[572.27679443 -283.79400635]
[572.71777344 -268.79693604]
[572.35998535 -253.79762268]
[571.20440674 -238.83860779]
[569.25427246 -223.96231079]
[566.51519775 -209.21089172]
[562.99487305 -194.62614441]
[558.70330811 -180.24943542]
[553.65270996 -166.12152100]
[547.85729980 -152.28242493]
[541.33355713 -138.77137756]
[534.09997559 -125.62670898]
[526.17706299 -112.88564301]
[517.58728027 -100.58432007]
[508.35494995 -88.75759125]
[498.50625610 -77.43899536]
[488.06915283 -66.66060638]
[477.07315063 -56.45298767]
[465.54949951 -46.84506607]
[453.53079224 -37.86407471]
[441.05114746 -29.53547668]
[428.14590454 -21.88287926]
[414.85168457 -14.92797184]
[401.20614624 -8.69047165]
[387.24795532 -3.18805814]
[373.01672363 1.56367040]
[358.55276489 5.55124521]
[343.89706421 8.76336288]
[329.09118652 11.19091797]
[314.17706299 12.82703018]
[299.19705200 13.66705990]
[284.19351196 13.70862865]
[269.20904541 12.95161629]
[254.28611755 11.39816952]
[239.46701050 9.05269241]
[224.79374695 5.92183256]
[210.30790710 2.01446509]
[196.05055237 -2.65833426]
[182.06210327 -8.08331966]
[168.38220215 -14.24511337]
[161.50279236 -0.91568410]
[154.62338257 12.41374493]
[147.74395752 25.74317360]
[140.86454773 39.07260513]
[144.24263000 50.68790054]
[138.62037659 61.84916687]
[126.52467346 66.32765198]
[119.44756317 79.55317688]
[112.37046051 92.77870178]
[112.62944794 106.75814056]
[100.85506439 114.29840088]
[93.77796173 127.52392578]
[106.34465027 135.73171997]
[118.14815521 145.00354004]
[129.09863281 155.26882935]
[139.11276245 166.44946289]
[148.11431885 178.46034241]
[156.03480530 191.21006775]
[162.81391907 204.60159302]
[168.40007019 218.53300476]
[172.75076294 232.89826965]
[175.83287048 247.58805847]
[177.62294006 262.49057007]
[178.10733032 277.49240112]
[177.28239441 292.47937012]
[175.15437317 307.33737183]
[171.73947144 321.95339966]
[167.06369019 336.21615601]
[161.16261292 350.01712036]
[154.08114624 363.25125122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 192]
[53 191]
[55 189]
[56 188]
[57 187]
[59 184]
[60 183]
[61 182]
[62 181]
[63 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
