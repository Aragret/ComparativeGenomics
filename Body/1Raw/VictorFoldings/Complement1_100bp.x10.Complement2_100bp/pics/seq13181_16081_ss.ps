%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[185.56690979 388.23345947]
[183.94812012 373.31301880]
[183.51989746 358.31112671]
[184.28492737 343.32266235]
[186.23838806 328.44232178]
[189.36793518 313.76425171]
[193.65376282 299.38119507]
[199.06878662 285.38415527]
[205.57876587 271.86157227]
[213.14254761 258.89895630]
[221.71231079 246.57826233]
[231.23387146 234.97740173]
[220.43171692 224.57003784]
[205.89791870 221.31150818]
[201.32814026 206.16462708]
[186.79434204 202.90609741]
[182.22456360 187.75923157]
[171.42240906 177.35185242]
[154.18682861 174.05004883]
[149.23809814 156.31332397]
[138.28219604 146.06793213]
[127.32627869 135.82254028]
[116.37036896 125.57714081]
[105.41446686 115.33175659]
[88.98289490 111.95835876]
[84.27673340 95.85779572]
[73.16949463 85.77665710]
[62.06226349 75.69551849]
[63.78617096 90.59612274]
[56.52317810 103.72048950]
[42.98220062 110.17354584]
[28.21368790 107.54846191]
[17.72593117 96.82433319]
[15.43060493 82.00099182]
[22.18380737 68.60717773]
[35.46676254 61.63845062]
[50.32630920 63.69448471]
[40.49572754 52.36489105]
[30.66514587 41.03529739]
[20.83456612 29.70570374]
[11.00398445 18.37611008]
[1.17340398 7.04651785]
[-8.65717697 -4.28307533]
[-16.64500809 -8.71391773]
[-18.54825020 -15.85530853]
[-28.20906067 -27.33000755]
[-37.86986923 -38.80471039]
[-35.96931839 -23.92559814]
[-40.63058472 -9.66822815]
[-50.95364761 1.21452785]
[-64.94528961 6.62137985]
[-79.90393066 5.50834990]
[-92.94131470 -1.90965414]
[-101.54010773 -14.20033169]
[-104.04002380 -28.99054527]
[-99.95836639 -43.42453766]
[-90.08324432 -54.71532822]
[-76.32138824 -60.68284225]
[-61.32999420 -60.17485046]
[-48.00268555 -53.28861618]
[-55.47042847 -66.29756927]
[-62.93816757 -79.30651855]
[-70.40590668 -92.31547546]
[-84.25131226 -86.49444580]
[-98.70713043 -82.41902161]
[-113.55419922 -80.15097809]
[-128.56745911 -79.72470856]
[-143.51930237 -81.14667511]
[-158.18307495 -84.39530945]
[-172.33645630 -89.42137146]
[-185.76489258 -96.14866638]
[-198.26483154 -104.47520447]
[-209.64675903 -114.27476501]
[-219.73812866 -125.39878845]
[-228.38595581 -137.67863464]
[-235.45915222 -150.92814636]
[-240.85047913 -164.94645691]
[-244.47822571 -179.52107239]
[-246.28736877 -194.43101501]
[-246.25048828 -209.45028687]
[-244.36816406 -224.35116577]
[-240.66889954 -238.90779114]
[-235.20880127 -252.89945984]
[-228.07063293 -266.11407471]
[-219.36260986 -278.35131836]
[-209.21675110 -289.42565918]
[-197.78684998 -299.16921997]
[-185.24617004 -307.43426514]
[-171.78486633 -314.09555054]
[-157.60696411 -319.05206299]
[-142.92742920 -322.22866821]
[-127.96878052 -323.57717896]
[-112.95780182 -323.07720947]
[-98.12203979 -320.73629761]
[-83.68640900 -316.58993530]
[-69.86975861 -310.70098877]
[-56.88152695 -303.15875244]
[-44.91862488 -294.07751465]
[-34.16240692 -283.59500122]
[-24.77593040 -271.87008667]
[-16.90149307 -259.08050537]
[-10.65846920 -245.42019653]
[-6.14150190 -231.09620667]
[-3.41906786 -216.32569885]
[-2.53243756 -201.33258057]
[-3.49505234 -186.34416199]
[-6.29231930 -171.58763123]
[-10.88183212 -157.28672791]
[-17.19401550 -143.65823364]
[-25.13317871 -130.90873718]
[-34.57896423 -119.23155212]
[-45.38817978 -108.80368042]
[-57.39695740 -99.78321075]
[-49.92921829 -86.77426147]
[-42.46147537 -73.76531219]
[-34.99373245 -60.75635529]
[-26.39517021 -48.46551895]
[-16.73435974 -36.99081802]
[-7.07354927 -25.51611900]
[2.67241621 -14.11365604]
[12.50299740 -2.78406310]
[22.33357811 8.54553032]
[32.16415787 19.87512398]
[41.99473953 31.20471573]
[51.82532120 42.53430939]
[61.65590286 53.86390305]
[72.14340210 64.58827972]
[83.25063324 74.66941833]
[94.35787201 84.75055695]
[106.00355530 84.88919830]
[114.56908417 92.78052521]
[115.65985107 104.37584686]
[126.61576080 114.62123871]
[137.57167053 124.86663055]
[148.52758789 135.11201477]
[159.48348999 145.35740662]
[172.37695312 145.70617676]
[181.29122925 154.46514893]
[181.82977295 166.54969788]
[192.63194275 176.95707703]
[207.93836975 180.96000671]
[211.73550415 195.36247253]
[227.04194641 199.36540222]
[230.83908081 213.76786804]
[241.64123535 224.17524719]
[252.87973022 214.22857666]
[264.87295532 205.20625305]
[277.54513550 197.16531372]
[290.81607056 190.15660095]
[304.60192871 184.22444153]
[318.81549072 179.40632629]
[333.36694336 175.73272705]
[348.16427612 173.22686768]
[363.11392212 171.90457153]
[378.12133789 171.77423096]
[393.09170532 172.83663940]
[407.93029785 175.08509827]
[422.54336548 178.50538635]
[436.83850098 183.07588196]
[450.72531128 188.76770020]
[464.11599731 195.54483032]
[476.92590332 203.36442566]
[489.07406616 212.17707825]
[500.48361206 221.92703247]
[511.08248901 232.55267334]
[520.80364990 243.98681641]
[529.58557129 256.15716553]
[537.37286377 268.98675537]
[544.11614990 282.39450073]
[549.77288818 296.29562378]
[554.30731201 310.60226440]
[557.69073486 325.22390747]
[559.90173340 340.06814575]
[560.92639160 355.04113770]
[560.75817871 370.04818726]
[559.39813232 384.99444580]
[556.85491943 399.78540039]
[553.14465332 414.32751465]
[548.29064941 428.52890015]
[542.32373047 442.29974365]
[535.28155518 455.55294800]
[527.20867920 468.20477295]
[518.15612793 480.17520142]
[508.18112183 491.38858032]
[497.34674072 501.77395630]
[485.72149658 511.26571655]
[473.37884521 519.80383301]
[460.39688110 527.33435059]
[446.85763550 533.80957031]
[432.84674072 539.18865967]
[418.45275879 543.43762207]
[403.76669312 546.52947998]
[388.88140869 548.44476318]
[373.89099121 549.17132568]
[358.89025879 548.70458984]
[343.97399902 547.04754639]
[329.23657227 544.21063232]
[314.77111816 540.21173096]
[300.66912842 535.07623291]
[287.01971436 528.83654785]
[273.90921021 521.53210449]
[261.42047119 513.20916748]
[249.63249207 503.92025757]
[238.61979675 493.72415161]
[228.45198059 482.68533325]
[219.19335938 470.87356567]
[210.90246582 458.36352539]
[203.63169861 445.23431396]
[197.42706299 431.56893921]
[192.32774353 417.45379639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 145]
[13 144]
[15 142]
[17 140]
[18 139]
[20 136]
[21 135]
[22 134]
[23 133]
[24 132]
[26 129]
[27 128]
[28 127]
[37 126]
[38 125]
[39 124]
[40 123]
[41 122]
[42 121]
[43 120]
[45 119]
[46 118]
[47 117]
[60 116]
[61 115]
[62 114]
[63 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
