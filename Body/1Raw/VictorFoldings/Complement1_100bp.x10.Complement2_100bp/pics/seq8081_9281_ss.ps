%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[189.28395081 519.17443848]
[193.39744568 504.72116089]
[199.57159424 491.02087402]
[207.67480469 478.36560059]
[217.53434753 467.02511597]
[228.94007874 457.24108887]
[241.64888000 449.22207642]
[235.57504272 435.50680542]
[229.50120544 421.79153442]
[223.42736816 408.07629395]
[217.35353088 394.36102295]
[202.66218567 397.25338745]
[187.68833923 396.80361938]
[173.18307495 393.03103638]
[159.87469482 386.12173462]
[148.43211365 376.41937256]
[139.43128967 364.40814209]
[133.32620239 350.68844604]
[130.42599487 335.94705200]
[130.87927246 320.92272949]
[134.66648865 306.36901855]
[141.60084534 293.01666260]
[151.33741760 281.53677368]
[163.39033508 272.50720215]
[157.31649780 258.79193115]
[151.24266052 245.07667542]
[145.65994263 240.23362732]
[145.18218994 231.11169434]
[139.31323242 217.30751038]
[128.21594238 212.49328613]
[123.21343994 201.04083252]
[127.48729706 188.87132263]
[121.82451630 174.98129272]
[116.16172791 161.09126282]
[110.49893951 147.20124817]
[105.06289673 142.19412231]
[104.85694122 133.06201172]
[99.40158844 119.08921814]
[86.17382050 113.17546844]
[80.90412140 99.67819214]
[86.62561798 86.36614227]
[81.17025757 72.39334106]
[75.71490479 58.42054367]
[70.25954437 44.44774628]
[58.03310394 34.40659714]
[60.61176682 19.73690605]
[55.15641022 5.76410866]
[49.70105362 -8.20868874]
[44.24569321 -22.18148613]
[38.79033661 -36.15428543]
[33.33498001 -50.12708282]
[27.87962341 -64.09988403]
[24.39516640 -66.69073486]
[22.14292145 -69.92985535]
[21.17537308 -73.35027313]
[21.38796234 -76.51593781]
[22.54277229 -79.07025909]
[17.92876244 -93.34299469]
[6.32165909 -104.09407043]
[9.76890469 -118.58426666]
[5.15489483 -132.85699463]
[0.54088569 -147.12973022]
[-4.07312346 -161.40246582]
[-7.94822311 -164.89970398]
[-9.89925289 -169.11239624]
[-9.97588825 -173.18783569]
[-8.55903816 -176.41659546]
[-12.53113365 -190.88111877]
[-16.50323105 -205.34564209]
[-20.47532654 -219.81016541]
[-24.44742203 -234.27468872]
[-28.41951942 -248.73921204]
[-39.53498459 -259.99786377]
[-35.44415665 -274.31967163]
[-39.41625214 -288.78417969]
[-43.38834763 -303.24871826]
[-58.31144714 -301.47140503]
[-73.33275604 -301.93823242]
[-88.11669159 -304.63876343]
[-102.33298492 -309.51263428]
[-115.66403198 -316.45098877]
[-127.81201172 -325.29882812]
[-138.50552368 -335.85848999]
[-147.50569153 -347.89404297]
[-154.61145020 -361.13662720]
[-159.66403198 -375.29040527]
[-162.55056763 -390.03915405]
[-163.20657349 -405.05337524]
[-161.61740112 -419.99768066]
[-157.81854248 -434.53820801]
[-151.89486694 -448.35006714]
[-143.97872925 -461.12472534]
[-134.24694824 -472.57681274]
[-122.91696167 -482.45046997]
[-110.24187469 -490.52511597]
[-96.50485229 -496.62033081]
[-82.01278687 -500.60000610]
[-67.08943176 -502.37518311]
[-52.06819153 -501.90621948]
[-37.28463745 -499.20361328]
[-23.06904030 -494.32769775]
[-9.73898411 -487.38742065]
[2.40773368 -478.53784180]
[13.09975147 -467.97668457]
[22.09820557 -455.93984985]
[29.20206642 -442.69625854]
[34.25263214 -428.54174805]
[37.13706970 -413.79260254]
[37.79093933 -398.77825928]
[36.19963455 -383.83419800]
[32.39870834 -369.29421997]
[26.47307205 -355.48321533]
[18.55510521 -342.70965576]
[8.82170105 -331.25897217]
[-2.50969529 -321.38693237]
[-15.18593407 -313.31408691]
[-28.92382431 -307.22082520]
[-24.95172882 -292.75628662]
[-20.97963142 -278.29177856]
[-10.14827824 -268.06771851]
[-13.95499516 -252.71130371]
[-9.98289871 -238.24678040]
[-6.01080227 -223.78225708]
[-2.03870630 -209.31773376]
[1.93339002 -194.85321045]
[5.90548611 -180.38868713]
[10.19960976 -166.01647949]
[14.81361866 -151.74374390]
[19.42762756 -137.47100830]
[24.04163742 -123.19827271]
[35.31871414 -113.46807861]
[32.20149612 -97.95700073]
[36.81550598 -83.68426514]
[41.85242081 -69.55523682]
[47.30777740 -55.58243942]
[52.76313400 -41.60964203]
[58.21849442 -27.63684464]
[63.67385101 -13.66404629]
[69.12920380 0.30875176]
[74.58456421 14.28154945]
[86.42079926 23.32327461]
[84.23234558 38.99238968]
[89.68769836 52.96518707]
[95.14305878 66.93798828]
[100.59841156 80.91078186]
[113.82617950 86.82453156]
[119.09587860 100.32180786]
[113.37438202 113.63385773]
[118.82974243 127.60665894]
[124.38896942 141.53845215]
[130.05175781 155.42848206]
[135.71453857 169.31851196]
[141.37733459 183.20854187]
[156.18156433 194.15914917]
[153.11740112 211.43855286]
[158.98635864 225.24273682]
[164.95793152 239.00283813]
[171.03176880 252.71810913]
[177.10559082 266.43338013]
[191.89230347 263.57696533]
[206.93666077 264.08255005]
[221.48426819 267.92160034]
[234.80633545 274.89840698]
[246.23622131 284.66027832]
[255.20277405 296.71514893]
[261.25888062 310.45651245]
[264.10379028 325.19393921]
[263.59790039 340.18768311]
[259.76986694 354.68588257]
[252.81477356 367.96224976]
[243.08427429 379.35238647]
[231.06880188 388.28717041]
[237.14263916 402.00244141]
[243.21647644 415.71771240]
[249.29031372 429.43298340]
[255.36413574 443.14825439]
[269.84335327 439.12698364]
[284.75375366 437.25683594]
[299.77755737 437.57769775]
[314.59454346 440.08273315]
[328.88885498 444.71850586]
[342.35583496 451.38626099]
[354.70840454 459.94381714]
[365.68328857 470.20880127]
[375.04653931 481.96240234]
[382.59860229 494.95410156]
[388.17849731 508.90695190]
[391.66726685 523.52362061]
[392.99057007 538.49249268]
[392.12020874 553.49450684]
[389.07470703 568.20989990]
[383.91900635 582.32501221]
[376.76296997 595.53894043]
[367.75918579 607.57012939]
[357.09948730 618.16210938]
[345.01116943 627.08898926]
[331.75183105 634.16064453]
[317.60412598 639.22625732]
[302.86962891 642.17791748]
[287.86236572 642.95263672]
[272.90225220 641.53387451]
[258.30816650 637.95202637]
[244.39112854 632.28326416]
[231.44784546 624.64855957]
[219.75416565 615.21057129]
[209.55935669 604.17047119]
[201.08071899 591.76361084]
[194.49897766 578.25439453]
[189.95440674 563.93084717]
[187.54389954 549.09820557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 176]
[8 175]
[9 174]
[10 173]
[11 172]
[24 159]
[25 158]
[26 157]
[28 156]
[29 155]
[32 153]
[33 152]
[34 151]
[35 150]
[37 149]
[38 148]
[41 145]
[42 144]
[43 143]
[44 142]
[46 140]
[47 139]
[48 138]
[49 137]
[50 136]
[51 135]
[52 134]
[57 133]
[58 132]
[60 130]
[61 129]
[62 128]
[63 127]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[72 121]
[74 119]
[75 118]
[76 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
