%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[89.95103455 648.00555420]
[75.07906342 645.90130615]
[60.58810425 641.94970703]
[46.70669937 636.21301270]
[33.65378571 628.78167725]
[21.63521576 619.77294922]
[10.84054565 609.32885742]
[1.44002199 597.61419678]
[-6.41809607 584.81365967]
[-12.60987377 571.12921143]
[-17.03765869 556.77655029]
[-19.63161850 541.98217773]
[-20.35084152 526.97930908]
[-19.18398476 512.00457764]
[-16.14945221 497.29421997]
[-11.29510307 483.08020020]
[-4.69749641 469.58670044]
[3.53931403 457.02651978]
[13.28542137 445.59774780]
[24.38711548 435.48065186]
[36.66930771 426.83477783]
[49.93828964 419.79650879]
[63.98478699 414.47680664]
[78.58727264 410.95962524]
[93.51544189 409.30038452]
[93.73876953 394.30203247]
[93.96209717 379.30371094]
[94.18542480 364.30535889]
[84.00550079 356.40609741]
[80.17685699 343.89913940]
[84.31153107 331.28506470]
[95.11296082 323.23870850]
[95.55957031 308.24536133]
[96.00617981 293.25201416]
[96.45278168 278.25866699]
[93.50982666 271.47921753]
[97.01930237 263.04589844]
[97.68908691 248.06085205]
[85.02672577 256.10226440]
[70.79581451 251.36083984]
[65.48685455 237.33175659]
[73.01341248 224.35675049]
[87.82719421 222.00050354]
[99.00738525 231.99842834]
[100.78985596 217.10470581]
[102.57231903 202.21099854]
[104.35478210 187.31727600]
[106.13725281 172.42356873]
[105.35592651 157.44392395]
[102.03366852 142.81646729]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[77.13785553 69.87818146]
[72.18090820 60.44372559]
[73.21314240 50.05706024]
[79.65348053 42.12390137]
[76.76821136 27.40401077]
[73.88293457 12.68411922]
[70.99766541 -2.03577161]
[66.92985535 12.40212727]
[59.16481018 25.23583603]
[48.26309967 35.53888321]
[35.01173019 42.56747437]
[20.36732101 45.81422043]
[5.38707161 45.04472351]
[-8.84758377 40.31454468]
[-21.30903244 31.96515656]
[-31.09767151 20.59930611]
[-37.50685120 7.03750706]
[-40.07388687 -7.74120522]
[-38.61346054 -22.66994095]
[-33.23100662 -36.67098236]
[-24.31508446 -48.73358154]
[-12.50934219 -57.98693085]
[1.33395088 -63.76302338]
[16.21543694 -65.64487457]
[31.06080818 -63.49663544]
[44.79836655 -57.47338867]
[56.43638229 -48.00995255]
[65.13469696 -35.78950882]
[70.26562500 -21.69311905]
[64.22303772 -36.31494141]
[73.41790771 -48.03260422]
[75.20037842 -62.92631912]
[76.98284149 -77.82003784]
[70.94025421 -92.44186401]
[80.13512421 -104.15952301]
[81.91759491 -119.05323792]
[83.70005798 -133.94696045]
[85.48252106 -148.84066772]
[87.26499176 -163.73439026]
[89.04745483 -178.62811279]
[74.79467773 -183.48115540]
[61.86256409 -191.19180298]
[50.81645203 -201.42298889]
[42.13922882 -213.72743225]
[36.21022415 -227.56724548]
[33.28863144 -242.33741760]
[33.50216675 -257.39227295]
[36.84149551 -272.07363892]
[43.16064072 -285.73971558]
[52.18335724 -297.79312134]
[63.51520157 -307.70687866]
[76.66080475 -315.04766846]
[91.04549408 -319.49450684]
[106.04042816 -320.85305786]
[120.99009705 -319.06387329]
[135.24096680 -314.20523071]
[148.17004395 -306.48950195]
[159.21212769 -296.25396729]
[167.88450623 -283.94610596]
[173.80807495 -270.10397339]
[176.72384644 -255.33264160]
[176.50439453 -240.27789307]
[173.15928650 -225.59783936]
[166.83476257 -211.93423462]
[157.80731201 -199.88438416]
[146.47155762 -189.97506714]
[133.32307434 -182.63948059]
[118.93663788 -178.19828796]
[103.94117737 -176.84564209]
[102.15870667 -161.95191956]
[100.37624359 -147.05821228]
[98.59377289 -132.16448975]
[96.81130981 -117.27077484]
[95.02884674 -102.37705231]
[101.19892883 -88.82053375]
[91.87655640 -76.03757477]
[90.09409332 -61.14385605]
[88.31163025 -46.25013733]
[94.48171234 -32.69361496]
[85.15934753 -19.91065407]
[85.71755219 -4.92104435]
[88.60282898 9.79884720]
[91.48809814 24.51873779]
[94.37337494 39.23862839]
[108.11392212 52.84320068]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.66112518 139.49420166]
[119.98339081 154.12165833]
[123.52554321 139.54589844]
[130.53611755 126.28498077]
[140.58642578 115.14984131]
[153.06187439 106.82138824]
[167.19960022 101.80890656]
[182.13505554 100.41892242]
[196.95494080 102.73642731]
[210.75302124 108.61970520]
[222.68553162 117.70899963]
[232.02279663 129.44848633]
[238.19384766 143.12028503]
[240.82130432 157.88836670]
[239.74450684 172.84967041]
[235.02929688 187.08929443]
[226.96401978 199.73648071]
[216.04187012 210.01785278]
[202.93072510 217.30468750]
[188.43235779 221.15141296]
[173.43333435 221.32278442]
[158.85086060 217.80833435]
[145.57666016 210.82296753]
[134.42243958 200.79382324]
[126.07029724 188.33422852]
[121.03096771 174.20602417]
[119.24850464 189.09974670]
[117.46603394 203.99346924]
[115.68357086 218.88717651]
[113.90110016 233.78089905]
[112.67412567 248.73063660]
[112.00434113 263.71566772]
[111.44612885 278.70529175]
[110.99952698 293.69863892]
[110.55291748 308.69198608]
[110.10631561 323.68533325]
[122.33338928 336.19604492]
[121.74096680 353.34143066]
[109.18376160 364.52868652]
[108.96043396 379.52703857]
[108.73710632 394.52536011]
[108.51377869 409.52371216]
[123.38592529 411.62667847]
[137.87721252 415.57708740]
[151.75909424 421.31265259]
[164.81263733 428.74285889]
[176.83197021 437.75057983]
[187.62751770 448.19372559]
[197.02902222 459.90759277]
[204.88821411 472.70745850]
[211.08114624 486.39141846]
[215.51014709 500.74368286]
[218.10534668 515.53790283]
[218.82583618 530.54064941]
[217.66023254 545.51550293]
[214.62693787 560.22607422]
[209.77378845 574.44055176]
[203.17732239 587.93457031]
[194.94157410 600.49548340]
[185.19642639 611.92504883]
[174.09558105 622.04309082]
[161.81411743 630.69000244]
[148.54573059 637.72937012]
[134.49967957 643.05023193]
[119.89748383 646.56866455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 187]
[26 186]
[27 185]
[28 184]
[32 181]
[33 180]
[34 179]
[35 178]
[37 177]
[38 176]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 147]
[50 146]
[51 145]
[52 144]
[54 142]
[55 141]
[59 139]
[60 138]
[61 137]
[62 136]
[84 135]
[86 133]
[87 132]
[88 131]
[90 129]
[91 128]
[92 127]
[93 126]
[94 125]
[95 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
