%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[109.70216370 933.64349365]
[94.76195526 932.28161621]
[79.89078522 930.30358887]
[65.11406708 927.71258545]
[50.45703888 924.51324463]
[35.94474411 920.71087646]
[21.60198212 916.31207275]
[7.45325422 911.32427979]
[-6.47726822 905.75604248]
[-20.16578484 899.61694336]
[-33.58890533 892.91735840]
[-46.72370148 885.66876221]
[-59.54772949 877.88360596]
[-72.03908539 869.57513428]
[-84.17641449 860.75756836]
[-95.93899536 851.44598389]
[-107.30672455 841.65618896]
[-118.26017761 831.40502930]
[-128.78065491 820.70996094]
[-138.85015869 809.58929443]
[-148.45150757 798.06201172]
[-157.56828308 786.14776611]
[-166.18490601 773.86700439]
[-174.28668213 761.24060059]
[-181.85974121 748.29016113]
[-188.89115906 735.03784180]
[-195.36891174 721.50628662]
[-201.28195190 707.71862793]
[-206.62016296 693.69836426]
[-211.37442017 679.46942139]
[-215.53660583 665.05621338]
[-219.09960938 650.48333740]
[-222.05734253 635.77563477]
[-224.40475464 620.95825195]
[-226.13783264 606.05657959]
[-227.25361633 591.09594727]
[-227.75019836 576.10205078]
[-227.62673950 561.10040283]
[-226.88343811 546.11663818]
[-225.52157593 531.17645264]
[-223.54347229 516.30529785]
[-220.95249939 501.52856445]
[-217.75309753 486.87155151]
[-213.95071411 472.35925293]
[-209.55187988 458.01651001]
[-204.56407166 443.86779785]
[-198.99583435 429.93728638]
[-192.85667419 416.24877930]
[-186.15708923 402.82565308]
[-178.90850830 389.69085693]
[-171.12332153 376.86685181]
[-162.81483459 364.37551880]
[-153.99723816 352.23818970]
[-144.68560791 340.47561646]
[-134.89584351 329.10791016]
[-124.64466095 318.15447998]
[-113.94959259 307.63403320]
[-102.82889557 297.56451416]
[-91.30158234 287.96319580]
[-79.38733673 278.84643555]
[-67.10652161 270.22982788]
[-54.48011780 262.12808228]
[-41.52968979 254.55503845]
[-28.27737236 247.52363586]
[-14.74580193 241.04589844]
[-0.95809859 235.13288879]
[13.06218243 229.79470825]
[27.29108810 225.04046631]
[41.70430756 220.87829590]
[56.27721405 217.31532288]
[70.98491669 214.35760498]
[85.80227661 212.01020813]
[100.70398712 210.27716064]
[99.58834076 195.31869507]
[98.47268677 180.36024475]
[97.35704041 165.40179443]
[96.24139404 150.44334412]
[95.12574768 135.48489380]
[84.57173157 132.32498169]
[75.47731018 126.10696411]
[68.70286560 117.41909790]
[64.88928223 107.08329010]
[64.39734650 96.07737732]
[67.27361298 85.44255829]
[73.24594879 76.18495178]
[81.74935913 69.18036652]
[91.97937775 65.09147644]
[91.75605011 50.09313583]
[91.53272247 35.09479904]
[91.30939484 20.09646034]
[83.36748505 6.41301537]
[90.91443634 -6.42804289]
[90.69110870 -21.42638016]
[90.46778107 -36.42471695]
[90.24445343 -51.42305374]
[75.73091888 -55.64782333]
[63.10836411 -63.96422577]
[53.49918365 -75.63277435]
[47.75782013 -89.61591339]
[46.39478683 -104.67026520]
[49.53128815 -119.45721436]
[56.88842392 -132.66191101]
[67.81200409 -143.11019897]
[81.33071899 -149.87303162]
[96.24247742 -152.34904480]
[111.22135162 -150.31809998]
[124.93542480 -143.96076965]
[136.16525269 -133.84234619]
[143.91227722 -120.86256409]
[147.48765564 -106.17556000]
[146.57344055 -91.08729553]
[141.25096130 -76.93941498]
[131.99345398 -64.98993683]
[119.62410736 -56.30139923]
[105.24279022 -51.64638138]
[105.46611786 -36.64804459]
[105.68944550 -21.64970779]
[105.91277313 -6.65137053]
[113.83870697 5.95929384]
[106.30773163 19.87313271]
[106.53105927 34.87147141]
[106.75438690 49.86980820]
[106.97771454 64.86814880]
[123.83496857 73.26369476]
[134.10333252 89.05017853]
[134.94422913 107.86360931]
[126.12521362 124.50323486]
[110.08419800 134.36923218]
[111.19984436 149.32769775]
[112.31549835 164.28614807]
[113.43114471 179.24459839]
[114.54679108 194.20304871]
[115.66243744 209.16149902]
[130.65637207 208.66485596]
[145.65800476 208.78825378]
[160.64173889 209.53147888]
[175.58195496 210.89328003]
[190.45312500 212.87132263]
[205.22985840 215.46223450]
[219.88688660 218.66157532]
[234.39920044 222.46388245]
[248.74197388 226.86265564]
[262.89071655 231.85040283]
[276.82125854 237.41857910]
[290.50979614 243.55767822]
[303.93292236 250.25720215]
[317.06774902 257.50573730]
[329.89178467 265.29086304]
[342.38317871 273.59927368]
[354.52053833 282.41680908]
[366.28314209 291.72839355]
[377.65090942 301.51812744]
[388.60437012 311.76925659]
[399.12487793 322.46426392]
[409.19442749 333.58493042]
[418.79580688 345.11218262]
[427.91262817 357.02639771]
[436.52929688 369.30718994]
[444.63110352 381.93353271]
[452.20419312 394.88394165]
[459.23565674 408.13623047]
[465.71343994 421.66775513]
[471.62652588 435.45544434]
[476.96475220 449.47570801]
[481.71905518 463.70458984]
[485.88128662 478.11779785]
[489.44433594 492.69067383]
[492.40213013 507.39837646]
[494.74957275 522.21569824]
[496.48269653 537.11743164]
[497.59854126 552.07800293]
[498.09515381 567.07196045]
[497.97174072 582.07360840]
[497.22848511 597.05731201]
[495.86666870 611.99749756]
[493.88861084 626.86871338]
[491.29766846 641.64544678]
[488.09832764 656.30242920]
[484.29598999 670.81475830]
[479.89718628 685.15753174]
[474.90942383 699.30627441]
[469.34121704 713.23675537]
[463.20211792 726.92529297]
[456.50256348 740.34844971]
[449.25402832 753.48327637]
[441.46887207 766.30731201]
[433.16043091 778.79864502]
[424.34286499 790.93597412]
[415.03125000 802.69860840]
[405.24151611 814.06634521]
[394.99038696 825.01977539]
[384.29534912 835.54028320]
[373.17468262 845.60980225]
[361.64739990 855.21118164]
[349.73318481 864.32794189]
[337.45239258 872.94464111]
[324.82601929 881.04638672]
[311.87561035 888.61950684]
[298.62329102 895.65093994]
[285.09176636 902.12872314]
[271.30407715 908.04174805]
[257.28381348 913.38000488]
[243.05491638 918.13427734]
[228.64170837 922.29644775]
[214.06880188 925.85949707]
[199.36111450 928.81726074]
[184.54376221 931.16467285]
[169.64205933 932.89776611]
[154.68145752 934.01361084]
[139.68753052 934.51019287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[87 123]
[88 122]
[89 121]
[90 120]
[92 118]
[93 117]
[94 116]
[95 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
