%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[77.91326141 676.20788574]
[76.79761505 661.24945068]
[75.68196106 646.29101562]
[74.56631470 631.33251953]
[73.45066833 616.37408447]
[72.33502197 601.41564941]
[69.36493683 597.67559814]
[68.71277618 592.03009033]
[71.41561890 585.99633789]
[70.74583435 571.01129150]
[70.07604980 556.02630615]
[69.40626526 541.04125977]
[68.73647308 526.05621338]
[67.84365845 511.08279419]
[66.72801208 496.12435913]
[65.61236572 481.16589355]
[58.73234558 494.49499512]
[47.07680511 503.93685913]
[32.60991287 507.90029907]
[17.76959038 505.71746826]
[5.05669165 497.75616455]
[-3.38643503 485.35803223]
[-6.13697481 470.61239624]
[-2.73141289 456.00408936]
[6.25635290 443.99493408]
[19.31172562 436.60864258]
[34.23464966 435.08996582]
[48.51034164 439.69479370]
[59.73310852 449.64715576]
[66.01207733 463.27151489]
[67.79454041 448.37780762]
[69.57701111 433.48406982]
[71.35947418 418.59036255]
[63.59383392 402.85308838]
[74.75294495 388.20538330]
[76.31346893 373.28677368]
[77.87399292 358.36816406]
[68.32447815 346.99530029]
[69.69454956 331.84347534]
[81.68821716 321.90417480]
[83.24874115 306.98556519]
[84.80926514 292.06695557]
[86.36978912 277.14834595]
[87.93030548 262.22973633]
[88.82312775 247.25634766]
[89.04645538 232.25801086]
[89.26978302 217.25967407]
[89.49311066 202.26133728]
[89.71643829 187.26300049]
[89.93976593 172.26466370]
[90.16309357 157.26632690]
[87.53852081 153.27624512]
[87.39263153 147.59507751]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[81.95053101 81.78542328]
[67.03751373 80.17237854]
[57.52598190 68.57363892]
[58.86457443 53.63348389]
[70.28648376 43.91031647]
[85.24871826 44.97400665]
[95.17992401 56.21432877]
[97.18393707 41.34880066]
[99.18795013 26.48327065]
[101.19196320 11.61774254]
[93.80455017 -5.24960852]
[105.06452179 -18.70991325]
[99.02193451 -33.33173752]
[108.21681213 -45.04939651]
[109.99927521 -59.94311523]
[107.75269318 -66.16118622]
[108.82293701 -71.74254608]
[112.06296539 -75.25129700]
[114.28807831 -90.08533478]
[116.51319885 -104.91938019]
[110.90863037 -119.71463013]
[120.44831085 -131.15333557]
[122.67342377 -145.98738098]
[124.89854431 -160.82142639]
[119.29397583 -175.61666870]
[128.83364868 -187.05537415]
[130.94827271 -201.90556335]
[125.12405396 -216.61573792]
[134.49237061 -228.19520569]
[136.49638367 -243.06072998]
[138.50039673 -257.92626953]
[140.50440979 -272.79177856]
[142.50842285 -287.65731812]
[144.51243591 -302.52282715]
[146.51644897 -317.38836670]
[148.52046204 -332.25390625]
[134.31120300 -337.22198486]
[121.39305878 -344.94897461]
[110.29501343 -355.11843872]
[101.47152710 -367.31396484]
[95.28391266 -381.03616333]
[91.98554993 -395.72308350]
[91.71150970 -410.77331543]
[94.47301483 -425.57058716]
[100.15697479 -439.50894165]
[108.53063965 -452.01760864]
[119.25111389 -462.58435059]
[131.87939453 -470.77648926]
[145.89837646 -476.25857544]
[160.73397827 -478.80609131]
[175.77868652 -478.31472778]
[190.41644287 -474.80462646]
[204.04783630 -468.41949463]
[216.11466980 -459.42077637]
[226.12281799 -448.17703247]
[233.66244507 -435.14865112]
[238.42480469 -420.86914062]
[240.21488953 -405.92321777]
[238.95941162 -390.92291260]
[234.70974731 -376.48251343]
[227.63993835 -363.19332886]
[218.03948975 -351.59951782]
[206.30152893 -342.17587280]
[192.90672302 -335.30825806]
[178.40357971 -331.27792358]
[163.38598633 -330.24987793]
[161.38197327 -315.38436890]
[159.37796021 -300.51882935]
[157.37394714 -285.65328979]
[155.36993408 -270.78778076]
[153.36592102 -255.92224121]
[151.36190796 -241.05671692]
[149.35789490 -226.19119263]
[155.32545471 -212.54429626]
[145.81381226 -199.90155029]
[148.03549194 -192.85273743]
[143.66769409 -184.83026123]
[149.43141174 -171.09603882]
[139.73258972 -158.59629822]
[137.50746155 -143.76225281]
[135.28234863 -128.92822266]
[141.04606628 -115.19399261]
[131.34724426 -102.69426727]
[129.12211609 -87.86022186]
[126.89700317 -73.02617645]
[124.89299011 -58.16064835]
[123.11052704 -43.26693344]
[129.28060913 -29.71040726]
[119.95824432 -16.92744827]
[127.18575287 -7.22746372]
[125.82263947 5.19532537]
[116.05749512 13.62175655]
[114.05348206 28.48728561]
[112.04946899 43.35281372]
[110.04545593 58.21834183]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[105.16143036 157.48965454]
[104.93810272 172.48799133]
[104.71477509 187.48632812]
[104.49144745 202.48466492]
[104.26811981 217.48300171]
[104.04479218 232.48133850]
[103.82146454 247.47967529]
[115.31109619 237.83662415]
[130.26553345 239.00494385]
[140.11817932 250.31533813]
[139.22500610 265.28872681]
[128.09765625 275.34765625]
[113.11038208 274.72991943]
[102.84891510 263.79028320]
[101.28839111 278.70889282]
[99.72786713 293.62747192]
[98.16734314 308.54608154]
[96.60681915 323.46469116]
[106.28402710 335.67080688]
[104.48890686 350.77816772]
[92.79259491 359.92868042]
[91.23207092 374.84729004]
[89.67155457 389.76589966]
[97.17246246 400.25869751]
[95.56556702 412.65231323]
[86.25318909 420.37283325]
[84.47072601 435.26654053]
[82.68825531 450.16027832]
[80.90579224 465.05398560]
[80.57081604 480.05023193]
[81.68646240 495.00869751]
[82.80211639 509.96716309]
[86.20279694 515.63696289]
[86.22612000 521.31994629]
[83.72151184 525.38641357]
[84.39130402 540.37145996]
[85.06108856 555.35650635]
[85.73087311 570.34155273]
[86.40065765 585.32659912]
[87.29347229 600.29998779]
[88.40911865 615.25842285]
[89.52477264 630.21685791]
[90.64041901 645.17535400]
[91.75606537 660.13378906]
[92.87171173 675.09222412]
[105.00930786 685.21423340]
[106.35134125 700.96142578]
[96.10160828 712.99133301]
[80.34109497 714.16680908]
[68.42023468 703.79046631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[5 201]
[6 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 192]
[15 191]
[16 190]
[30 189]
[31 188]
[32 187]
[33 186]
[35 183]
[36 182]
[37 181]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[45 167]
[46 166]
[47 165]
[48 164]
[49 163]
[50 162]
[51 161]
[54 160]
[55 159]
[56 158]
[58 156]
[59 155]
[66 154]
[67 153]
[68 152]
[69 151]
[71 148]
[73 146]
[74 145]
[77 144]
[78 143]
[79 142]
[81 140]
[82 139]
[83 138]
[85 136]
[86 134]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
