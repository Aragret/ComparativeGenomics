%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[114.12981415 730.93560791]
[100.11193848 725.57989502]
[86.50181580 719.25933838]
[73.36573792 712.00482178]
[60.76771545 703.85162354]
[48.76912308 694.83947754]
[37.42841339 685.01232910]
[26.80084419 674.41802979]
[16.93818665 663.10815430]
[7.88849354 651.13787842]
[-0.30414596 638.56549072]
[-7.59981775 625.45220947]
[-13.96297741 611.86193848]
[-19.36262512 597.86096191]
[-23.77245331 583.51733398]
[-27.17097664 568.90112305]
[-29.54163933 554.08337402]
[-30.87289047 539.13641357]
[-31.15824509 524.13293457]
[-30.39631081 509.14614868]
[-28.59080315 494.24902344]
[-25.75051689 479.51409912]
[-21.88928795 465.01321411]
[-17.02593231 450.81701660]
[-11.18413925 436.99462891]
[-4.39237261 423.61343384]
[3.31627941 410.73858643]
[11.90426064 398.43286133]
[21.32973099 386.75616455]
[31.54677010 375.76538086]
[42.50559998 365.51409912]
[54.15283203 356.05224609]
[66.43172455 347.42593384]
[79.28244019 339.67715454]
[92.64239502 332.84365845]
[106.44647980 326.95877075]
[120.62744904 322.05114746]
[135.11621094 318.14468384]
[132.23094177 303.42480469]
[129.34567261 288.70489502]
[119.30474854 277.70358276]
[124.24308014 262.67282104]
[121.35780334 247.95294189]
[118.47253418 233.23304749]
[115.58725739 218.51315308]
[112.70198822 203.79327393]
[100.23594666 195.72274780]
[97.10018158 180.83578491]
[105.64981842 167.81497192]
[102.76454163 153.09507751]
[99.87927246 138.37518311]
[96.99399567 123.65529633]
[94.10872650 108.93540192]
[89.38858795 94.69741821]
[82.90909576 81.16906738]
[76.42959595 67.64072418]
[63.49019623 58.53674316]
[64.97063446 43.71589661]
[58.49113846 30.18754959]
[52.01164246 16.65920448]
[45.53214645 3.13085842]
[44.46793747 18.09305954]
[38.13661575 31.69138145]
[27.37117577 42.13673019]
[13.58799934 48.05484390]
[-1.39950025 48.66709137]
[-15.61946106 43.89291763]
[-27.20100212 34.36045074]
[-34.62037277 21.32385063]
[-36.90142441 6.49830532]
[-33.74404907 -8.16562939]
[-25.56365395 -20.73866081]
[-13.43650913 -29.56659126]
[1.04185104 -33.48795319]
[15.96654892 -31.98682404]
[29.37398338 -25.26070595]
[39.50143814 -14.19251347]
[36.17918015 -28.81997299]
[32.85691833 -43.44743347]
[22.25526619 -55.19117737]
[26.98151588 -69.31604004]
[23.65925789 -83.94350433]
[20.33699799 -98.57096100]
[17.01473808 -113.19842529]
[1.95476794 -113.09179688]
[-12.77593613 -116.22554779]
[-26.48839378 -122.45311737]
[-38.54124451 -131.48321533]
[-48.37076187 -142.89350891]
[-55.51719284 -156.15029907]
[-59.64629364 -170.63356018]
[-60.56493378 -185.66586304]
[-58.23014832 -200.54412842]
[-52.75114059 -214.57247925]
[-44.38417053 -227.09477234]
[-33.52058029 -237.52532959]
[-20.66847801 -245.37628174]
[-6.42897844 -250.28044128]
[8.53190899 -252.00842285]
[23.51443863 -250.47940063]
[37.81784821 -245.76489258]
[50.77313995 -238.08541870]
[61.77437973 -227.80014038]
[70.30700684 -215.39013672]
[75.97194672 -201.43582153]
[78.50423431 -186.58990479]
[77.78542328 -171.54672241]
[73.84915161 -157.00987244]
[66.87950897 -143.65928650]
[57.20248413 -132.11938477]
[45.27069092 -122.92991638]
[31.64219856 -116.52068329]
[34.96445847 -101.89321899]
[38.28671646 -87.26576233]
[41.60897827 -72.63830566]
[51.97299957 -61.94081116]
[47.48437881 -46.76969147]
[50.80664062 -32.14223099]
[54.12889862 -17.51477242]
[59.06049347 -3.34863758]
[65.53998566 10.17970848]
[72.01948547 23.70805359]
[78.49897766 37.23640060]
[90.97492218 45.37274170]
[89.95794678 61.16122818]
[96.43743896 74.68957520]
[102.91693878 88.21791840]
[103.63513947 73.23512268]
[109.11808777 59.27312851]
[118.78714752 47.80537796]
[131.62191772 40.04209137]
[146.26791382 36.80254364]
[161.17951965 38.42861557]
[174.78306580 44.74870300]
[185.64294434 55.09583282]
[192.61308289 68.37804413]
[194.95791626 83.19363403]
[192.42996216 97.97908783]
[185.29603577 111.17404938]
[174.30897522 121.38602448]
[160.62826538 127.53732300]
[145.69769287 128.97879028]
[131.09289551 125.55828094]
[118.35514832 117.63679504]
[108.82861328 106.05013275]
[111.71389008 120.77001953]
[114.59915924 135.48991394]
[117.48443604 150.20980835]
[120.36970520 164.92970276]
[133.20228577 173.75933838]
[135.91867065 188.72850037]
[127.42187500 200.90798950]
[130.30714417 215.62788391]
[133.19242859 230.34777832]
[136.07769775 245.06767273]
[138.96296692 259.78756714]
[149.21026611 271.84173584]
[144.06556702 285.81964111]
[146.95083618 300.53952026]
[149.83610535 315.25942993]
[164.72749329 313.40701294]
[179.71182251 312.59790039]
[194.71607971 312.83599854]
[209.66719055 314.12017822]
[224.49229431 316.44418335]
[239.11917114 319.79666138]
[253.47656250 324.16131592]
[267.49450684 329.51684570]
[281.10473633 335.83718872]
[294.24090576 343.09152222]
[306.83905029 351.24453735]
[318.83776855 360.25650024]
[330.17861938 370.08349609]
[340.80633545 380.67767334]
[350.66915894 391.98736572]
[359.71902466 403.95751953]
[367.91186523 416.52981567]
[375.20770264 429.64297485]
[381.57107544 443.23315430]
[386.97091675 457.23406982]
[391.38095093 471.57760620]
[394.77969360 486.19378662]
[397.15054321 501.01147461]
[398.48202515 515.95843506]
[398.76757812 530.96191406]
[398.00585938 545.94873047]
[396.20059204 560.84588623]
[393.36050415 575.58081055]
[389.49948120 590.08178711]
[384.63632202 604.27801514]
[378.79473877 618.10052490]
[372.00317383 631.48181152]
[364.29467773 644.35675049]
[355.70687866 656.66259766]
[346.28158569 668.33947754]
[336.06469727 679.33038330]
[325.10601807 689.58178711]
[313.45892334 699.04382324]
[301.18014526 707.67034912]
[288.32955933 715.41931152]
[274.96969604 722.25299072]
[261.16567993 728.13806152]
[246.98478699 733.04589844]
[232.49607849 736.95251465]
[217.77014160 739.83898926]
[202.87873840 741.69122314]
[187.89439392 742.50012207]
[172.89013672 742.26177979]
[157.93904114 740.97735596]
[143.11396790 738.65313721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 160]
[39 159]
[40 158]
[42 156]
[43 155]
[44 154]
[45 153]
[46 152]
[49 149]
[50 148]
[51 147]
[52 146]
[53 145]
[54 127]
[55 126]
[56 125]
[58 123]
[59 122]
[60 121]
[61 120]
[77 119]
[78 118]
[79 117]
[81 115]
[82 114]
[83 113]
[84 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
