%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[166.69583130 466.40567017]
[168.54109192 451.50405884]
[172.01448059 436.89587402]
[177.07383728 422.75848389]
[183.65773010 409.26345825]
[191.68626404 396.57464600]
[201.06196594 384.84606934]
[211.67102051 374.22012329]
[223.38465881 364.82574463]
[215.34347534 352.16320801]
[207.30230713 339.50070190]
[199.26113892 326.83816528]
[185.90673828 320.24200439]
[185.04034424 304.44454956]
[176.99917603 291.78201294]
[168.95800781 279.11950684]
[167.98037720 294.08758545]
[159.73205566 306.61618042]
[146.36912537 313.43026733]
[131.38461304 312.74871826]
[118.69544983 304.74963379]
[111.61854553 291.52401733]
[112.00378418 276.52896118]
[119.75046539 263.68414307]
[132.83363342 256.34719849]
[147.83337402 256.43597412]
[160.82815552 263.92663574]
[154.75431824 250.21136475]
[148.68048096 236.49609375]
[142.60665894 222.78082275]
[136.53282166 209.06555176]
[125.25193787 207.36030579]
[116.10032654 200.34861755]
[111.42192078 189.68060303]
[112.48490143 177.96006775]
[119.14040375 168.10913086]
[113.47762299 154.21910095]
[107.81483459 140.32908630]
[102.15204620 126.43904877]
[96.48925781 112.54902649]
[95.42038727 127.51089478]
[90.97526550 141.83712769]
[83.38709259 154.77619934]
[73.05390930 165.64935303]
[60.51779175 173.88619995]
[46.43634796 179.05465698]
[31.54826546 180.88359070]
[16.63454437 179.27706909]
[2.47752738 174.31935120]
[-10.18013573 166.27053833]
[-20.67444992 155.55282593]
[-28.45490265 142.72845459]
[-33.11334991 128.47015381]
[-34.40541840 113.52590942]
[-32.26332474 98.67964935]
[-26.79944420 84.71018219]
[-18.30039787 72.35031891]
[-7.21202993 62.24843216]
[5.88398647 54.93444824]
[20.30066109 50.79204559]
[35.28172302 50.03852081]
[50.04129410 52.71340942]
[63.80511856 58.67638397]
[75.85117340 67.61464691]
[85.54755402 79.05931091]
[92.38617706 92.41156006]
[92.16284943 77.41322327]
[91.93952179 62.41488647]
[91.71619415 47.41654968]
[89.03772736 42.93627167]
[88.40856171 38.33654785]
[89.53103638 34.41798782]
[91.83284760 31.74703217]
[92.27944946 16.75368309]
[92.72605896 1.76033235]
[90.53309631 -1.98731828]
[89.72775269 -5.84943533]
[90.17562866 -9.37573910]
[91.60987854 -12.20585060]
[93.67204285 -14.10470200]
[95.01027679 -29.04488754]
[96.34851074 -43.98507309]
[97.68674469 -58.92525864]
[89.55352020 -75.44592285]
[100.20124054 -89.39558411]
[101.31688690 -104.35403442]
[102.43253326 -119.31249237]
[87.76893616 -122.59832001]
[73.74005127 -127.98426056]
[60.64491653 -135.35551453]
[48.76264954 -144.55494690]
[38.34652328 -155.38647461]
[29.61855698 -167.61923218]
[22.76478767 -180.99249268]
[17.93130493 -195.22116089]
[15.22113514 -210.00198364]
[14.69204426 -225.01991272]
[16.35531044 -239.95481873]
[20.17548180 -254.48837280]
[26.07112885 -268.31079102]
[33.91658783 -281.12744141]
[43.54463196 -292.66513062]
[54.75003815 -302.67797852]
[67.29396820 -310.95248413]
[80.90903473 -317.31234741]
[95.30503845 -321.62197876]
[110.17513275 -323.78948975]
[125.20235443 -323.76873779]
[140.06640625 -321.56011963]
[154.45043945 -317.21072388]
[168.04788208 -310.81326294]
[180.56889343 -302.50408936]
[191.74658203 -292.46032715]
[201.34269714 -280.89605713]
[209.15270996 -268.05776978]
[215.01013184 -254.21911621]
[218.79011536 -239.67506409]
[220.41209412 -224.73561096]
[219.84149170 -209.71922302]
[217.09048462 -194.94593811]
[212.21769714 -180.73066711]
[205.32699585 -167.37641907]
[196.56524658 -155.16783142]
[186.11921692 -144.36512756]
[174.21157837 -135.19856262]
[161.09611511 -127.86354065]
[147.05239868 -122.51639557]
[132.37977600 -119.27110291]
[117.39099121 -118.19683838]
[116.27533722 -103.23838806]
[115.15969086 -88.27993774]
[122.81311798 -78.91235352]
[122.00607300 -66.44108582]
[112.62693024 -57.58702087]
[111.28869629 -42.64683914]
[109.95046234 -27.70665169]
[108.61222076 -12.76646709]
[107.71940613 2.20693827]
[107.27280426 17.20028877]
[106.82619476 32.19363785]
[106.71453094 47.19322205]
[106.93785858 62.19155884]
[107.16118622 77.18989563]
[107.38451385 92.18823242]
[110.37928772 106.88623810]
[116.04207611 120.77626801]
[121.70485687 134.66629028]
[127.36764526 148.55632019]
[133.03042603 162.44635010]
[150.76022339 169.12232971]
[157.85829163 186.34239197]
[150.24809265 202.99172974]
[156.32191467 216.70698547]
[162.39575195 230.42225647]
[168.46958923 244.13752747]
[174.54342651 257.85278320]
[181.62052917 271.07830811]
[189.66169739 283.74084473]
[197.70288086 296.40338135]
[211.63243103 303.90524292]
[211.92366028 318.79699707]
[219.96482849 331.45953369]
[228.00599670 344.12203979]
[236.04718018 356.78457642]
[249.53094482 350.17764282]
[263.65969849 345.09420776]
[278.26193237 341.59588623]
[293.16036987 339.72521973]
[308.17419434 339.50488281]
[323.12112427 340.93756104]
[337.81970215 344.00585938]
[352.09155273 348.67251587]
[365.76339722 354.88088989]
[378.66925049 362.55563354]
[390.65249634 371.60357666]
[401.56762695 381.91488647]
[411.28216553 393.36437988]
[419.67819214 405.81307983]
[426.65374756 419.10986328]
[432.12420654 433.09335327]
[436.02313232 447.59375000]
[438.30319214 462.43505859]
[438.93673706 477.43710327]
[437.91604614 492.41781616]
[435.25350952 507.19531250]
[430.98147583 521.59020996]
[425.15176392 535.42773438]
[417.83517456 548.53997803]
[409.12051392 560.76776123]
[399.11358643 571.96258545]
[387.93582153 581.98858643]
[375.72296143 590.72412109]
[362.62322998 598.06304932]
[348.79565430 603.91632080]
[334.40805054 608.21289062]
[319.63513184 610.90063477]
[304.65618896 611.94689941]
[289.65307617 611.33892822]
[274.80789185 609.08422852]
[260.30087280 605.21002197]
[246.30809021 599.76342773]
[232.99942017 592.81054688]
[220.53642273 584.43579102]
[209.07037354 574.74078369]
[198.74046326 563.84326172]
[189.67208862 551.87548828]
[181.97534180 538.98272705]
[175.74363708 525.32147217]
[171.05264282 511.05764771]
[167.95927429 496.36428833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 164]
[10 163]
[11 162]
[12 161]
[14 159]
[15 158]
[16 157]
[27 156]
[28 155]
[29 154]
[30 153]
[31 152]
[36 149]
[37 148]
[38 147]
[39 146]
[40 145]
[66 144]
[67 143]
[68 142]
[69 141]
[73 140]
[74 139]
[75 138]
[80 137]
[81 136]
[82 135]
[83 134]
[85 131]
[86 130]
[87 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
