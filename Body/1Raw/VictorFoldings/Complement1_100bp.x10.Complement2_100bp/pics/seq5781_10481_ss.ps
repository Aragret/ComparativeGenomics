%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[96.51979065 584.84191895]
[83.47656250 577.42346191]
[70.94087982 569.17633057]
[58.96532822 560.13500977]
[47.60013199 550.33752441]
[36.89296341 539.82489014]
[26.88873482 528.64123535]
[17.62940788 516.83343506]
[9.15381527 504.45104980]
[1.49751043 491.54602051]
[-5.30739403 478.17245483]
[-11.23235607 464.38647461]
[-16.25252342 450.24584961]
[-20.34684181 435.80993652]
[-23.49813461 421.13928223]
[-25.69318581 406.29541016]
[-26.92279053 391.34057617]
[-27.18178749 376.33752441]
[-26.46909332 361.34915161]
[-24.78769684 346.43835449]
[-22.14464951 331.66766357]
[-18.55103874 317.09906006]
[-14.02193451 302.79357910]
[-8.57633686 288.81130981]
[-2.23708487 275.21084595]
[4.96923113 262.04922485]
[13.01238632 249.38168335]
[21.85864449 237.26135254]
[31.47089958 225.73904419]
[41.80883408 214.86311340]
[52.82909012 204.67915344]
[64.48544312 195.22990417]
[76.72899628 186.55497742]
[89.50840759 178.69078064]
[102.77006531 171.67028809]
[116.45834351 165.52293396]
[111.21162415 151.47047424]
[105.96490479 137.41799927]
[94.26460266 128.20104980]
[96.68610382 112.56625366]
[91.02332306 98.67623138]
[84.94948578 84.96096039]
[78.87564850 71.24569702]
[66.21304321 61.76049805]
[68.13410187 46.99029541]
[62.06026459 33.27503204]
[55.98643112 19.55976295]
[49.91259766 5.84449720]
[43.83876419 -7.87076950]
[37.76493073 -21.58603668]
[31.69109535 -35.30130386]
[17.54421997 -30.29244614]
[3.05542731 -26.38122368]
[-11.69025421 -23.59059143]
[-26.60629082 -21.93692589]
[-41.60514832 -21.42992973]
[-56.59880447 -22.07258034]
[-71.49927521 -23.86110497]
[-86.21910858 -26.78500938]
[-100.67192841 -30.82713318]
[-114.77291107 -35.96375275]
[-128.43931580 -42.16473007]
[-141.59094238 -49.39367294]
[-154.15060425 -57.60815430]
[-166.04458618 -66.75997162]
[-177.20310974 -76.79541779]
[-187.56068420 -87.65559387]
[-197.05651855 -99.27677917]
[-205.63488770 -111.59076691]
[-213.24545288 -124.52529144]
[-219.84355164 -138.00445557]
[-225.39047241 -151.94914246]
[-229.85365295 -166.27754211]
[-233.20690918 -180.90554810]
[-235.43054199 -195.74731445]
[-236.51152039 -210.71575928]
[-236.44351196 -225.72302246]
[-235.22688293 -240.68104553]
[-232.86880493 -255.50205994]
[-229.38308716 -270.09906006]
[-224.79020691 -284.38641357]
[-219.11711121 -298.28024292]
[-212.39709473 -311.69903564]
[-204.66960144 -324.56405640]
[-195.97994995 -336.79977417]
[-186.37916565 -348.33441162]
[-175.92358398 -359.10025024]
[-164.67454529 -369.03411865]
[-152.69808960 -378.07775879]
[-140.06448364 -386.17803955]
[-126.84787750 -393.28747559]
[-113.12582397 -399.36431885]
[-98.97885132 -404.37289429]
[-84.48998260 -408.28384399]
[-69.74424744 -411.07421875]
[-54.82818222 -412.72760010]
[-39.82931519 -413.23431396]
[-24.83567047 -412.59136963]
[-9.93523788 -410.80255127]
[4.78454161 -407.87838745]
[19.23728371 -403.83596802]
[33.33817673 -398.69909668]
[47.00446320 -392.49786377]
[60.15594864 -385.26867676]
[72.71545410 -377.05395508]
[84.60926819 -367.90191650]
[95.76760101 -357.86624146]
[106.12496185 -347.00585938]
[115.62057495 -335.38449097]
[124.19871521 -323.07034302]
[131.80903625 -310.13568115]
[138.40689087 -296.65640259]
[143.95353699 -282.71160889]
[148.41644287 -268.38311768]
[151.76940918 -253.75505066]
[153.99278259 -238.91323853]
[155.07347107 -223.94477844]
[155.00517273 -208.93751526]
[153.78826904 -193.97950745]
[151.42990112 -179.15855408]
[147.94390869 -164.56161499]
[143.35076904 -150.27435303]
[137.67739868 -136.38061523]
[130.95713806 -122.96195221]
[123.22938538 -110.09709167]
[114.53951263 -97.86153412]
[104.93850708 -86.32708740]
[94.48271179 -75.56143951]
[83.23349762 -65.62776947]
[71.25686646 -56.58436966]
[58.62310791 -48.48431396]
[45.40636063 -41.37513733]
[51.48019409 -27.65987015]
[57.55403137 -13.94460392]
[63.62786484 -0.22933687]
[69.70169830 13.48592949]
[75.77552795 27.20119667]
[81.84936523 40.91646194]
[94.07752991 49.42065430]
[92.59091949 65.17185974]
[98.66474915 78.88713074]
[104.73858643 92.60239410]
[107.47855377 93.93733978]
[109.79335022 96.29874420]
[111.30185699 99.53105927]
[111.68574524 103.34011078]
[110.73857880 107.31953430]
[122.81416321 117.54161072]
[120.01737976 132.17127991]
[125.26409912 146.22375488]
[130.51081848 160.27622986]
[144.87846375 155.94844055]
[159.49610901 152.55973816]
[174.30244446 150.12435913]
[189.23538208 148.65248108]
[204.23226929 148.15031433]
[219.23022461 148.61994934]
[234.16630554 150.05941772]
[248.97790527 152.46269226]
[263.60287476 155.81967163]
[277.97985840 160.11627197]
[292.04858398 165.33450317]
[305.75003052 171.45245361]
[319.02673340 178.44447327]
[331.82299805 186.28121948]
[344.08514404 194.92984009]
[355.76174927 204.35406494]
[366.80383301 214.51432800]
[377.16506958 225.36805725]
[386.80206299 236.86970520]
[395.67428589 248.97102356]
[403.74462891 261.62127686]
[410.97918701 274.76739502]
[417.34759521 288.35421753]
[422.82321167 302.32479858]
[427.38299561 316.62048340]
[431.00787354 331.18136597]
[433.68261719 345.94635010]
[435.39599609 360.85348511]
[436.14086914 375.84030151]
[435.91406250 390.84387207]
[434.71658325 405.80130005]
[432.55337524 420.64987183]
[429.43359375 435.32727051]
[425.37026978 449.77191162]
[420.38046265 463.92327881]
[414.48510742 477.72195435]
[407.70892334 491.11010742]
[400.08032227 504.03152466]
[391.63134766 516.43206787]
[382.39736938 528.25970459]
[372.41717529 539.46478271]
[361.73257446 550.00042725]
[350.38845825 559.82226562]
[338.43234253 568.88928223]
[325.91436768 577.16333008]
[312.88708496 584.60968018]
[299.40512085 591.19726562]
[285.52502441 596.89825439]
[271.30502319 601.68890381]
[256.80471802 605.54895020]
[242.08496094 608.46240234]
[227.20750427 610.41687012]
[212.23472595 611.40423584]
[197.22944641 611.42034912]
[182.25457764 610.46508789]
[167.37295532 608.54254150]
[152.64698792 605.66076660]
[138.13844299 601.83178711]
[123.90817261 597.07171631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 151]
[37 150]
[38 149]
[40 147]
[41 142]
[42 141]
[43 140]
[45 138]
[46 137]
[47 136]
[48 135]
[49 134]
[50 133]
[51 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
