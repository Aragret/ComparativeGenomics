%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[85.00122833 850.53906250]
[70.03222656 849.53698730]
[55.12273026 847.86914062]
[40.30233002 845.53869629]
[25.60045815 842.55041504]
[11.04629707 838.91015625]
[-3.33125329 834.62518311]
[-17.50364876 829.70397949]
[-31.44275093 824.15637207]
[-45.12088394 817.99328613]
[-58.51089478 811.22698975]
[-71.58619690 803.87091064]
[-84.32082367 795.93969727]
[-96.68949890 787.44909668]
[-108.66767120 778.41589355]
[-120.23154449 768.85809326]
[-131.35816956 758.79461670]
[-142.02545166 748.24548340]
[-152.21221924 737.23162842]
[-161.89823914 725.77496338]
[-171.06428528 713.89813232]
[-179.69215393 701.62481689]
[-187.76472473 688.97930908]
[-195.26596069 675.98675537]
[-202.18096924 662.67291260]
[-208.49601746 649.06427002]
[-214.19857788 635.18786621]
[-219.27732849 621.07116699]
[-223.72218323 606.74224854]
[-227.52432251 592.22949219]
[-230.67617798 577.56182861]
[-233.17150879 562.76831055]
[-235.00535583 547.87829590]
[-236.17408752 532.92138672]
[-236.67535400 517.92730713]
[-236.50820923 502.92572021]
[-235.67294312 487.94647217]
[-234.17121887 473.01934814]
[-232.00604248 458.17388916]
[-229.18168640 443.43966675]
[-225.70378113 428.84585571]
[-221.57920837 414.42147827]
[-216.81617737 400.19512939]
[-211.42411804 386.19509888]
[-205.41377258 372.44915771]
[-198.79704285 358.98461914]
[-191.58708191 345.82821655]
[-183.79820251 333.00601196]
[-175.44587708 320.54354858]
[-166.54666138 308.46551514]
[-157.11824036 296.79589844]
[-147.17935181 285.55786133]
[-136.74969482 274.77374268]
[-125.84999084 264.46493530]
[-114.50188446 254.65190125]
[-102.72790527 245.35414124]
[-90.55142975 236.59010315]
[-77.99662781 228.37718201]
[-65.08843231 220.73170471]
[-51.85246658 213.66882324]
[-38.31501007 207.20259094]
[-24.50294113 201.34582520]
[-10.44368362 196.11015320]
[3.83485055 191.50596619]
[18.30431175 187.54243469]
[32.93597412 184.22738647]
[47.70078278 181.56744385]
[62.56943130 179.56785583]
[77.51239014 178.23260498]
[92.50000000 177.56434631]
[92.50000000 162.56434631]
[92.50000000 147.56434631]
[92.50000000 132.56434631]
[92.50000000 117.56434631]
[82.32884216 107.24475861]
[82.32884216 92.75524139]
[92.50000000 82.43565369]
[92.50000000 67.43565369]
[92.50000000 52.43565369]
[92.50000000 37.43565369]
[92.50000000 22.43565369]
[92.50000000 7.43565369]
[90.19642639 3.75495720]
[89.27645111 -0.08146963]
[89.61914062 -3.61954451]
[90.96849060 -6.49110460]
[92.97319794 -8.45051193]
[93.86601257 -23.42391777]
[94.75883484 -38.39732361]
[80.10191345 -41.74762344]
[66.19638824 -47.46482086]
[53.42162323 -55.39294815]
[42.12611389 -65.31571960]
[32.61801147 -76.96242523]
[25.15670776 -90.01535034]
[19.94574928 -104.11839294]
[17.12729645 -118.88681030]
[16.77823639 -133.91770935]
[18.90809250 -148.80104065]
[23.45876312 -163.13078308]
[30.30610085 -176.51599121]
[39.26330566 -188.59152222]
[50.08601379 -199.02793884]
[62.47898483 -207.54052734]
[76.10411835 -213.89706421]
[90.58971405 -217.92413330]
[105.54060364 -219.51187134]
[120.54889679 -218.61697388]
[135.20516968 -215.26385498]
[149.10958862 -209.54397583]
[161.88282776 -201.61338806]
[173.17643738 -191.68844604]
[182.68228149 -180.03990173]
[190.14108276 -166.98554993]
[195.34931946 -152.88150024]
[198.16493225 -138.11253357]
[198.51109314 -123.08156586]
[196.37837219 -108.19864655]
[191.82493591 -93.86978912]
[184.97502136 -80.48590088]
[176.01548767 -68.41210175]
[165.19076538 -57.97776794]
[152.79615784 -49.46756363]
[139.16979980 -43.11365509]
[124.68342590 -39.08937073]
[109.73223877 -37.50450897]
[108.83942413 -22.53110123]
[107.94660950 -7.55769634]
[107.50000000 7.43565369]
[107.50000000 22.43565369]
[107.50000000 37.43565369]
[107.50000000 52.43565369]
[107.50000000 67.43565369]
[107.50000000 82.43565369]
[117.67115784 92.75524139]
[117.67115784 107.24475861]
[107.50000000 117.56434631]
[107.50000000 132.56434631]
[107.50000000 147.56434631]
[107.50000000 162.56434631]
[107.50000000 177.56434631]
[122.48760986 178.23260498]
[137.43057251 179.56785583]
[152.29920959 181.56744385]
[167.06402588 184.22738647]
[181.69569397 187.54243469]
[196.16514587 191.50596619]
[210.44367981 196.11015320]
[224.50294495 201.34582520]
[238.31500244 207.20259094]
[251.85246277 213.66882324]
[265.08843994 220.73170471]
[277.99664307 228.37718201]
[290.55142212 236.59010315]
[302.72790527 245.35414124]
[314.50189209 254.65190125]
[325.85000610 264.46493530]
[336.74969482 274.77374268]
[347.17935181 285.55786133]
[357.11825562 296.79589844]
[366.54666138 308.46551514]
[375.44586182 320.54354858]
[383.79821777 333.00601196]
[391.58709717 345.82821655]
[398.79705811 358.98461914]
[405.41375732 372.44915771]
[411.42413330 386.19509888]
[416.81616211 400.19512939]
[421.57919312 414.42147827]
[425.70376587 428.84585571]
[429.18170166 443.43966675]
[432.00604248 458.17388916]
[434.17123413 473.01934814]
[435.67294312 487.94647217]
[436.50820923 502.92572021]
[436.67535400 517.92730713]
[436.17407227 532.92138672]
[435.00534058 547.87829590]
[433.17150879 562.76831055]
[430.67617798 577.56182861]
[427.52432251 592.22949219]
[423.72219849 606.74224854]
[419.27734375 621.07116699]
[414.19857788 635.18786621]
[408.49603271 649.06427002]
[402.18096924 662.67291260]
[395.26596069 675.98675537]
[387.76470947 688.97930908]
[379.69216919 701.62481689]
[371.06430054 713.89813232]
[361.89825439 725.77496338]
[352.21221924 737.23162842]
[342.02545166 748.24548340]
[331.35818481 758.79461670]
[320.23153687 768.85809326]
[308.66766357 778.41589355]
[296.68951416 787.44909668]
[284.32083130 795.93969727]
[271.58618164 803.87091064]
[258.51089478 811.22698975]
[245.12088013 817.99328613]
[231.44274902 824.15637207]
[217.50364685 829.70397949]
[203.33125305 834.62518311]
[188.95370483 838.91015625]
[174.39953613 842.55041504]
[159.69766235 845.53869629]
[144.87727356 847.86914062]
[129.96777344 849.53698730]
[114.99877167 850.53906250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[87 128]
[88 127]
[89 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
