%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[86.72888947 186.06802368]
[88.81558990 200.93113708]
[89.65123749 215.91673279]
[89.22998810 230.91970825]
[87.55478668 245.83480835]
[84.63739014 260.55743408]
[80.49825287 274.98428345]
[75.16641998 289.01416016]
[68.67928314 302.54870605]
[61.08235168 315.49295044]
[52.42890930 327.75607300]
[42.77965546 339.25210571]
[32.20227432 349.90036011]
[20.77095604 359.62619019]
[8.56589031 368.36132812]
[-4.32731438 376.04455566]
[-17.81822014 382.62191772]
[-31.81219673 388.04736328]
[-46.21108627 392.28274536]
[-60.91388321 395.29840088]
[-75.81746674 397.07318115]
[-90.81728363 397.59463501]
[-105.80813599 396.85910034]
[-120.68485260 394.87170410]
[-135.34310913 391.64642334]
[-149.68005371 387.20590210]
[-163.59513855 381.58123779]
[-176.99076843 374.81192017]
[-189.77296448 366.94540405]
[-201.85208130 358.03689575]
[-213.14337158 348.14886475]
[-223.56764221 337.35064697]
[-233.05178833 325.71804810]
[-241.52926636 313.33261108]
[-248.94061279 300.28125000]
[-255.23385620 286.65545654]
[-260.36483765 272.55087280]
[-264.29757690 258.06640625]
[-267.00448608 243.30363464]
[-268.46655273 228.36613464]
[-268.67358398 213.35867310]
[-267.62405396 198.38653564]
[-265.32537842 183.55473328]
[-261.79364014 168.96728516]
[-257.05364990 154.72653198]
[-251.13864136 140.93235779]
[-244.09008789 127.68152618]
[-235.95745850 115.06698608]
[-226.79777527 103.17720032]
[-216.67530823 92.09558868]
[-205.66104126 81.89987946]
[-193.83224487 72.66158295]
[-181.27189636 64.44550323]
[-168.06808472 57.30926895]
[-154.31343079 51.30294037]
[-140.10440063 46.46864319]
[-125.54069519 42.84029388]
[-110.72444916 40.44333649]
[-95.75959778 39.29459000]
[-80.75109863 39.40210724]
[-65.80423737 40.76513290]
[-51.02385330 43.37411118]
[-36.51362228 47.21074295]
[-22.37532234 52.24811172]
[-8.70812988 58.45088196]
[4.39209032 65.77555084]
[16.83344841 74.17073822]
[28.52867508 83.57755280]
[39.39573669 93.93001556]
[49.35840607 105.15551758]
[58.34680176 117.17530060]
[71.06884003 109.22861481]
[83.79087830 101.28192902]
[91.28350830 86.27404785]
[108.05302429 85.87456512]
[120.65533447 77.73934937]
[133.25764465 69.60413361]
[145.85995483 61.46892166]
[158.46228027 53.33370590]
[171.06459045 45.19849014]
[183.66690063 37.06327438]
[169.77676392 31.40076065]
[165.39721680 17.05434608]
[173.75671387 4.59967136]
[188.69293213 3.21786022]
[199.19544983 13.92753220]
[197.52307129 28.83251190]
[210.69554138 21.65714455]
[223.86802673 14.48177910]
[237.04049683 7.30641270]
[250.21298218 0.13104625]
[263.38543701 -7.04432011]
[257.04910278 -20.64579964]
[251.57931519 -34.61830139]
[246.99766541 -48.90668488]
[243.32221985 -63.45455933]
[240.56750488 -78.20450592]
[238.74438477 -93.09832764]
[237.86006165 -108.07722473]
[237.91801453 -123.08209229]
[238.91802979 -138.05371094]
[240.85614014 -152.93299866]
[243.72471619 -167.66123962]
[247.51242065 -182.18028259]
[252.20431519 -196.43284607]
[257.78186035 -210.36268616]
[264.22308350 -223.91481018]
[271.50256348 -237.03573608]
[279.59152222 -249.67370605]
[288.45806885 -261.77880859]
[298.06723022 -273.30331421]
[308.38104248 -284.20169067]
[319.35882568 -294.43093872]
[330.95724487 -303.95071411]
[343.13052368 -312.72344971]
[355.83062744 -320.71447754]
[369.00744629 -327.89230347]
[382.60894775 -334.22857666]
[396.58148193 -339.69827271]
[410.86990356 -344.27987671]
[425.41778564 -347.95523071]
[440.16775513 -350.70986938]
[455.06158447 -352.53289795]
[470.04049683 -353.41714478]
[485.04534912 -353.35913086]
[500.01696777 -352.35903931]
[514.89624023 -350.42083740]
[529.62445068 -347.55218506]
[544.14349365 -343.76440430]
[558.39605713 -339.07244873]
[572.32586670 -333.49481201]
[585.87792969 -327.05352783]
[598.99884033 -319.77398682]
[611.63671875 -311.68496704]
[623.74182129 -302.81832886]
[635.26623535 -293.20913696]
[646.16455078 -282.89526367]
[656.39379883 -271.91741943]
[665.91351318 -260.31896973]
[674.68615723 -248.14562988]
[682.67712402 -235.44546509]
[689.85485840 -222.26861572]
[696.19104004 -208.66708374]
[701.66070557 -194.69451904]
[706.24224854 -180.40608215]
[709.91748047 -165.85816956]
[712.67205811 -151.10820007]
[714.49505615 -136.21435547]
[715.37921143 -121.23545074]
[715.32110596 -106.23058319]
[714.32092285 -91.25897217]
[712.38262939 -76.37970734]
[709.51391602 -61.65150452]
[705.72607422 -47.13249588]
[701.03405762 -32.87997818]
[695.45629883 -18.95020294]
[689.01495361 -5.39814329]
[681.73535156 7.72271633]
[673.64624023 20.36059380]
[664.77960205 32.46561050]
[655.17034912 43.98999786]
[644.85638428 54.88827133]
[633.87847900 65.11741638]
[622.27996826 74.63707733]
[610.10662842 83.40966034]
[597.40643311 91.40056610]
[584.22955322 98.57824707]
[570.62792969 104.91437531]
[556.65533447 110.38394928]
[542.36688232 114.96538544]
[527.81896973 118.64059448]
[513.06896973 121.39508057]
[498.17514038 123.21796417]
[483.19622803 124.10205078]
[468.19134521 124.04386139]
[453.21975708 123.04362488]
[438.34048462 121.10527802]
[423.61230469 118.23647308]
[409.09332275 114.44853973]
[394.84082031 109.75642395]
[380.91107178 104.17864227]
[367.35903931 97.73721313]
[354.23822021 90.45754242]
[341.60040283 82.36837769]
[329.49542236 73.50164032]
[317.97109985 63.89231110]
[307.07287598 53.57832718]
[296.84378052 42.60038757]
[287.32418823 31.00181580]
[278.55166626 18.82839203]
[270.56082153 6.12815571]
[257.38833618 13.30352211]
[244.21586609 20.47888756]
[231.04339600 27.65425491]
[217.87091064 34.82962036]
[204.69844055 42.00498581]
[191.80210876 49.66558456]
[179.19979858 57.80080032]
[166.59748840 65.93601990]
[153.99517822 74.07123566]
[141.39286804 82.20645142]
[128.79055786 90.34166718]
[116.18824005 98.47688293]
[113.05411530 109.69376373]
[103.22250366 115.93721008]
[91.73755646 114.00396729]
[79.01552582 121.95065308]
[66.29348755 129.89733887]
[73.15213013 143.24745178]
[78.86959839 157.12466431]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 208]
[72 207]
[73 206]
[75 203]
[76 202]
[77 201]
[78 200]
[79 199]
[80 198]
[81 197]
[87 196]
[88 195]
[89 194]
[90 193]
[91 192]
[92 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
