%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[171.05557251 540.68524170]
[160.71287537 529.81542969]
[151.00756836 518.37292480]
[141.97134399 506.39505005]
[133.63366699 493.92083740]
[126.02172089 480.99093628]
[119.16033936 467.64761353]
[113.07191467 453.93429565]
[107.77629089 439.89578247]
[103.29074860 425.57785034]
[99.62992096 411.02719116]
[96.80574036 396.29125977]
[94.82743073 381.41815186]
[93.70143890 366.45635986]
[93.43142700 351.45465088]
[94.01829529 336.46203613]
[95.46012115 321.52734375]
[97.75218964 306.69934082]
[100.88704681 292.02636719]
[104.85445404 277.55630493]
[109.64146423 263.33630371]
[115.23248291 249.41281128]
[121.60925293 235.83119202]
[128.75099182 222.63577271]
[136.63438416 209.86958313]
[145.23373413 197.57427979]
[154.52098083 185.78994751]
[164.46583557 174.55503845]
[153.81983948 163.98799133]
[143.17382812 153.42094421]
[132.52781677 142.85389709]
[121.88180542 132.28684998]
[111.23580170 121.71980286]
[100.58979034 111.15275574]
[89.86540985 100.66525269]
[79.06325531 90.25788116]
[68.26109314 79.85050964]
[57.45893860 69.44313812]
[46.24984741 79.42205811]
[34.30976105 88.51365662]
[21.70874977 96.66456604]
[8.52076435 103.82695007]
[-5.17680359 109.95878601]
[-19.30356979 115.02407837]
[-33.77663040 118.99311066]
[-48.51105499 121.84259033]
[-63.42036819 123.55579376]
[-78.41708374 124.12266541]
[-93.41318512 123.53987885]
[-108.32067871 121.81085205]
[-123.05206299 118.94573975]
[-137.52090454 114.96134949]
[-151.64228821 109.88106537]
[-165.33334351 103.73469543]
[-178.51371765 96.55831909]
[-191.10607910 88.39404297]
[-203.03649902 79.28978729]
[-214.23500061 69.29896545]
[-224.63584900 58.48022461]
[-234.17799377 46.89704514]
[-242.80546570 34.61740494]
[-250.46760559 21.71336365]
[-257.11947632 8.26065159]
[-262.72201538 -5.66178513]
[-267.24237061 -19.97224236]
[-270.65399170 -34.58674240]
[-272.93685913 -49.41951752]
[-274.07760620 -64.38352203]
[-274.06948853 -79.39094543]
[-272.91259766 -94.35371399]
[-270.61370850 -109.18401337]
[-267.18627930 -123.79481506]
[-262.65048218 -138.10038757]
[-257.03289795 -152.01675415]
[-250.36651611 -165.46228027]
[-242.69042969 -178.35803223]
[-234.04971313 -190.62835693]
[-224.49505615 -202.20121765]
[-214.08253479 -213.00871277]
[-202.87324524 -222.98742676]
[-190.93298340 -232.07879639]
[-178.33181763 -240.22946167]
[-165.14370728 -247.39160156]
[-151.44601440 -253.52317810]
[-137.31915283 -258.58819580]
[-122.84601593 -262.55697632]
[-108.11154175 -265.40615845]
[-93.20219421 -267.11907959]
[-78.20546722 -267.68566895]
[-63.20937729 -267.10260010]
[-48.30192184 -265.37329102]
[-33.57058334 -262.50790405]
[-19.10181808 -258.52322388]
[-4.98053122 -253.44268799]
[8.71040535 -247.29605103]
[21.89064598 -240.11943054]
[34.48284531 -231.95491028]
[46.41310501 -222.85043335]
[57.61141205 -212.85940552]
[68.01204681 -202.04046631]
[77.55398560 -190.45710754]
[86.18121338 -178.17729187]
[93.84311676 -165.27310181]
[100.49472809 -151.82026672]
[106.09700775 -137.89773560]
[110.61708069 -123.58718109]
[114.02842712 -108.97261810]
[116.31101990 -94.13980103]
[117.45146942 -79.17577362]
[117.44307709 -64.16835022]
[116.28589630 -49.20560837]
[113.98672485 -34.37535095]
[110.55903625 -19.76461220]
[106.02296448 -5.45913124]
[100.40512085 8.45713902]
[93.73847198 21.90253067]
[86.06214905 34.79814148]
[77.42119598 47.06829453]
[67.86631012 58.64097977]
[78.66847229 69.04835510]
[89.47062683 79.45572662]
[100.27278137 89.86309814]
[107.80117798 92.74334717]
[111.15683746 100.50674438]
[121.80284882 111.07379150]
[132.44885254 121.64083862]
[143.09486389 132.20788574]
[153.74087524 142.77493286]
[164.38688660 153.34197998]
[175.03288269 163.90902710]
[186.19345093 153.88081360]
[197.90832520 144.50608826]
[210.13926697 135.81544495]
[222.84640503 127.83723450]
[235.98829651 120.59746552]
[249.52206421 114.11975861]
[263.40356445 108.42524719]
[277.58752441 103.53250122]
[292.02764893 99.45748901]
[306.67687988 96.21349335]
[321.48742676 93.81108856]
[336.41094971 92.25812531]
[351.39880371 91.55966949]
[366.40206909 91.71798706]
[381.37185669 92.73256683]
[396.25927734 94.60010529]
[411.01580811 97.31449890]
[425.59332275 100.86690521]
[439.94427490 105.24573517]
[454.02182007 110.43669891]
[467.78005981 116.42287445]
[481.17410278 123.18472290]
[494.16027832 130.70021057]
[506.69625854 138.94479370]
[518.74108887 147.89160156]
[530.25549316 157.51144409]
[541.20196533 167.77294922]
[551.54473877 178.64262390]
[561.25012207 190.08505249]
[570.28649902 202.06288147]
[578.62426758 214.53704834]
[586.23632812 227.46685791]
[593.09777832 240.81015015]
[599.18634033 254.52340698]
[604.48205566 268.56185913]
[608.96771240 282.87976074]
[612.62866211 297.43041992]
[615.45294189 312.16632080]
[617.43139648 327.03939819]
[618.55749512 342.00122070]
[618.82757568 357.00289917]
[618.24084473 371.99551392]
[616.79913330 386.93020630]
[614.50720215 401.75823975]
[611.37243652 416.43124390]
[607.40515137 430.90133667]
[602.61828613 445.12136841]
[597.02734375 459.04492188]
[590.65069580 472.62658691]
[583.50903320 485.82205200]
[575.62573242 498.58828735]
[567.02648926 510.88366699]
[557.73931885 522.66809082]
[547.79455566 533.90307617]
[537.22460938 544.55200195]
[526.06396484 554.58013916]
[514.34906006 563.95477295]
[502.11804199 572.64532471]
[489.41082764 580.62341309]
[476.26889038 587.86309814]
[462.73507690 594.34069824]
[448.85351562 600.03509521]
[434.66952515 604.92773438]
[420.22937012 609.00262451]
[405.58010864 612.24652100]
[390.76956177 614.64880371]
[375.84600830 616.20166016]
[360.85815430 616.89996338]
[345.85488892 616.74151611]
[330.88513184 615.72686768]
[315.99771118 613.85919189]
[301.24118042 611.14465332]
[286.66369629 607.59216309]
[272.31280518 603.21319580]
[258.23529053 598.02215576]
[244.47709656 592.03588867]
[231.08309937 585.27392578]
[218.09696960 577.75830078]
[205.56108093 569.51361084]
[193.51631165 560.56671143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 130]
[29 129]
[30 128]
[31 127]
[32 126]
[33 125]
[34 124]
[35 122]
[36 121]
[37 120]
[38 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
