%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[-65.20005035 522.65093994]
[-57.29281998 535.43865967]
[-51.59835815 549.35351562]
[-48.27201843 564.01586914]
[-47.40454865 579.02581787]
[-49.01961136 593.97375488]
[-53.07314682 608.45196533]
[-59.45456696 622.06549072]
[-67.98979187 634.44287109]
[-78.44596863 645.24652100]
[-90.53784180 654.18164062]
[-103.93553925 661.00445557]
[-118.27356720 665.52893066]
[-133.16076660 667.63159180]
[-148.19100952 667.25506592]
[-162.95423889 664.40966797]
[-177.04774475 659.17291260]
[-190.08700562 651.68780518]
[-201.71632385 642.15844727]
[-211.61843872 630.84478760]
[-219.52320862 618.05560303]
[-225.21498108 604.13964844]
[-228.53849792 589.47662354]
[-229.40307617 574.46655273]
[-227.78514099 559.51885986]
[-223.72882080 545.04144287]
[-217.34477234 531.42919922]
[-208.80715942 519.05346680]
[-198.34890747 508.25183105]
[-186.25531006 499.31903076]
[-172.85629272 492.49874878]
[-158.51739502 487.97705078]
[-143.62979126 485.87725830]
[-128.59962463 486.25665283]
[-113.83693695 489.10494995]
[-99.74444580 494.34439087]
[-92.27671051 481.33541870]
[-84.80896759 468.32647705]
[-77.34122467 455.31753540]
[-69.87348175 442.30856323]
[-79.05401611 427.74298096]
[-79.59565735 410.44500732]
[-71.25903320 395.17724609]
[-56.26161957 386.18902588]
[-38.68865585 386.03387451]
[-31.61154938 372.80834961]
[-24.53444481 359.58282471]
[-17.45734024 346.35729980]
[-31.78778267 350.78881836]
[-45.66234970 345.08825684]
[-52.73777390 331.86181641]
[-49.77927017 317.15649414]
[-38.13942337 307.69531250]
[-23.13981438 307.80380249]
[-11.63806534 317.43240356]
[-8.89291573 332.18084717]
[-0.47829735 319.76333618]
[7.93632126 307.34585571]
[16.35094070 294.92834473]
[17.08542252 280.05187988]
[31.23216057 272.96804810]
[38.01215363 259.58779907]
[43.04906845 245.45875549]
[38.96184921 228.39236450]
[53.08805084 216.58000183]
[57.91404724 202.37754822]
[62.74004745 188.17509460]
[59.50892258 173.63517761]
[71.27480316 163.05810547]
[76.10079956 148.85565186]
[72.86967468 134.31573486]
[84.63555908 123.73865509]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.59759521 71.72930145]
[104.56968689 57.26477432]
[108.54178619 42.80025101]
[112.51387787 28.33572578]
[108.70716095 12.97931099]
[119.53852081 2.75526953]
[123.51061249 -11.70925426]
[119.70389557 -27.06567001]
[130.53524780 -37.28971100]
[126.72853851 -52.64612579]
[137.55989075 -62.87016678]
[133.75317383 -78.22658539]
[144.58453369 -88.45062256]
[148.55662537 -102.91514587]
[152.31292725 -117.43721008]
[155.85260010 -132.01358032]
[159.39227295 -146.58996582]
[162.93194580 -161.16633606]
[166.36300659 -175.76866150]
[169.13861084 -190.50961304]
[171.36372375 -205.34365845]
[173.58885193 -220.17770386]
[175.81396484 -235.01174927]
[161.87068176 -240.74307251]
[149.70455933 -249.64527893]
[140.02294922 -261.20077515]
[133.38871765 -274.73779297]
[130.18756104 -289.46923828]
[130.60560608 -304.53872681]
[134.61853027 -319.07006836]
[141.99304199 -332.21844482]
[152.30038452 -343.21945190]
[164.94131470 -351.43347168]
[179.18090820 -356.38299561]
[194.19126892 -357.78021240]
[209.09974670 -355.54394531]
[223.03955078 -349.80416870]
[235.20027161 -340.89459229]
[244.87487793 -329.33319092]
[251.50090027 -315.79217529]
[254.69311523 -301.05877686]
[254.26594543 -285.98956299]
[250.24420166 -271.46066284]
[242.86172485 -258.31677246]
[232.54771423 -247.32200623]
[219.90180969 -239.11564636]
[205.65922546 -234.17475891]
[190.64801025 -232.78663635]
[188.42289734 -217.95259094]
[186.19776917 -203.11854553]
[183.97265625 -188.28450012]
[197.40290833 -194.96496582]
[211.06332397 -188.76875305]
[214.88395691 -174.26348877]
[206.04838562 -162.14190674]
[191.06985474 -161.33959961]
[180.99046326 -172.44639587]
[182.57443237 -165.22747803]
[177.50831604 -157.62666321]
[173.96864319 -143.05029297]
[170.42897034 -128.47390747]
[166.88929749 -113.89753723]
[168.56494141 -109.42526245]
[167.44892883 -103.85286713]
[163.02114868 -98.94305420]
[159.04905701 -84.47853088]
[163.13987732 -70.15671539]
[152.02441406 -58.89807129]
[156.11523438 -44.57625580]
[144.99977112 -33.31761551]
[149.09060669 -18.99580002]
[137.97514343 -7.73715830]
[134.00303650 6.72736549]
[138.09387207 21.04918098]
[126.97840881 32.30782318]
[123.00630951 46.77234650]
[119.03421021 61.23686981]
[115.06211853 75.70139313]
[116.60386658 80.22158051]
[115.32242584 85.75827026]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[104.69515991 120.38526917]
[102.65003204 125.68757629]
[98.83802032 128.56465149]
[101.72395325 144.12042236]
[90.30326080 153.68164062]
[85.47726440 167.88409424]
[88.36319733 183.43986511]
[76.94250488 193.00108337]
[72.11650085 207.20353699]
[67.29050446 221.40600586]
[72.28113556 233.29954529]
[67.96916199 245.02944946]
[57.17810059 250.49566650]
[52.14118195 264.62469482]
[63.28093719 254.57951355]
[77.05281067 248.63513184]
[92.00341797 247.41891479]
[106.55500031 251.05918884]
[119.17188263 259.17178345]
[128.52256775 270.90057373]
[133.62028503 285.00778198]
[133.92703247 300.00463867]
[129.41044617 314.30850220]
[120.54718018 326.40985107]
[108.27258301 335.03158569]
[93.88202667 339.26382446]
[78.89418793 338.65997314]
[64.89076233 333.28372192]
[53.34956741 323.70245361]
[45.48857117 310.92730713]
[42.13736343 296.30642700]
[43.64965820 281.38269043]
[42.31330490 297.14733887]
[28.76843452 303.34295654]
[20.35381699 315.76046753]
[11.93919849 328.17794800]
[3.52457952 340.59545898]
[-4.23181200 353.43438721]
[-11.30891705 366.65991211]
[-18.38602257 379.88546753]
[-25.46312904 393.11099243]
[-17.63721275 403.38397217]
[-14.29005623 415.80862427]
[-15.88478279 428.52993774]
[-22.14942360 439.66247559]
[-32.12252808 447.56976318]
[-44.30056000 451.10476685]
[-56.86453247 449.77630615]
[-64.33227539 462.78527832]
[-71.80001831 475.79421997]
[-79.26775360 488.80316162]
[-86.73549652 501.81213379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 210]
[37 209]
[38 208]
[39 207]
[40 206]
[45 199]
[46 198]
[47 197]
[48 196]
[56 195]
[57 194]
[58 193]
[59 192]
[61 190]
[62 172]
[63 171]
[65 168]
[66 167]
[67 166]
[69 164]
[70 163]
[72 161]
[73 158]
[75 156]
[76 153]
[77 152]
[78 151]
[79 150]
[81 148]
[82 147]
[84 145]
[86 143]
[88 141]
[89 140]
[90 137]
[91 136]
[92 135]
[93 134]
[94 132]
[95 126]
[96 125]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
