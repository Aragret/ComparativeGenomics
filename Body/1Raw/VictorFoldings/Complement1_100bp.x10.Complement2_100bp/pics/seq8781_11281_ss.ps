%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[77.42867279 558.39300537]
[72.41040039 572.54833984]
[65.72244263 585.99560547]
[57.46231842 598.53863525]
[47.75049210 609.99456787]
[36.72859192 620.19622803]
[24.55734825 628.99499512]
[11.41425133 636.26251221]
[-2.50903296 641.89276123]
[-17.00946045 645.80358887]
[-31.87557602 647.93811035]
[-46.89058304 648.26507568]
[-61.83552170 646.77972412]
[-76.49244690 643.50378418]
[-90.64762878 638.48498535]
[-104.09462738 631.79650879]
[-116.63735199 623.53594971]
[-128.09289551 613.82366943]
[-138.29420471 602.80139160]
[-147.09251404 590.62982178]
[-154.35949707 577.48645020]
[-159.98921204 563.56298828]
[-163.89955139 549.06237793]
[-166.03347778 534.19616699]
[-166.35987854 519.18115234]
[-164.87399292 504.23629761]
[-161.59750366 489.57949829]
[-156.57817078 475.42449951]
[-149.88920593 461.97775269]
[-141.62814331 449.43533325]
[-131.91546631 437.98016357]
[-120.89280701 427.77926636]
[-108.72090149 418.98141479]
[-95.57726288 411.71490479]
[-81.65355682 406.08572388]
[-67.15283203 402.17593384]
[-52.28656387 400.04254150]
[-37.27153015 399.71670532]
[-22.32670403 401.20315552]
[-7.67002010 404.48019409]
[6.48478031 409.50006104]
[13.16497517 396.06967163]
[19.84516907 382.63928223]
[26.52536392 369.20892334]
[33.20555878 355.77853394]
[39.88575363 342.34817505]
[45.23693848 328.33514404]
[41.14611053 314.01333618]
[52.26157761 302.75469971]
[56.23367310 288.29016113]
[60.20576859 273.82565308]
[64.17786407 259.36111450]
[68.14996338 244.89659119]
[72.12205505 230.43206787]
[76.09415436 215.96754456]
[78.86976624 201.22657776]
[80.43029022 186.30798340]
[81.99081421 171.38937378]
[83.55133057 156.47076416]
[81.29320526 152.26245117]
[81.65474701 146.59091187]
[85.38687897 141.13356018]
[87.39089203 126.26802826]
[74.06159973 133.14770508]
[60.31044388 127.15556335]
[56.27426529 112.70879364]
[64.92839050 100.45700836]
[79.89331055 99.43177795]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[103.17843628 42.26428604]
[103.62503815 27.27093697]
[104.07164764 12.27758694]
[104.51824951 -2.71576333]
[104.96485901 -17.70911407]
[104.96485901 -32.70911407]
[96.82010651 -46.27280045]
[104.17504120 -59.22479630]
[103.72843170 -74.21814728]
[103.28182983 -89.21149445]
[102.83522034 -104.20484924]
[102.38861084 -119.19819641]
[94.24385834 -132.76188660]
[101.59879303 -145.71388245]
[101.15219116 -160.70722961]
[100.59397888 -175.69683838]
[99.92419434 -190.68188477]
[99.25440979 -205.66691589]
[84.44892120 -208.47659302]
[70.69071960 -214.62547302]
[58.72176743 -223.78193665]
[49.18753433 -235.45220947]
[42.60219193 -249.00691223]
[39.32087326 -263.71505737]
[39.52054214 -278.78344727]
[43.19042587 -293.39950562]
[50.13261795 -306.77496338]
[59.97272873 -318.18850708]
[72.18009949 -327.02459717]
[86.09638977 -332.80676270]
[100.97113037 -335.22317505]
[116.00212860 -334.14346313]
[130.37878418 -329.62591553]
[143.32580566 -321.91412354]
[154.14494324 -311.42398071]
[162.25274658 -298.72122192]
[167.21197510 -284.49087524]
[168.75518799 -269.50036621]
[166.79914856 -254.55812073]
[161.44935608 -240.46995544]
[152.99430847 -227.99563599]
[141.88998413 -217.80786133]
[128.73522949 -210.45605469]
[114.23944855 -206.33670044]
[114.90923309 -191.35166931]
[115.57901764 -176.36662292]
[119.01805115 -169.82484436]
[116.14553833 -161.15383911]
[116.59214020 -146.16049194]
[124.70494843 -133.66921997]
[117.38196564 -119.64480591]
[117.82856750 -104.65145111]
[118.27517700 -89.65810394]
[118.72177887 -74.66474915]
[119.16838837 -59.67140198]
[127.28119659 -47.18014145]
[119.95820618 -33.15571976]
[121.90369415 -31.13749313]
[123.16694641 -28.22702980]
[123.40413666 -24.68032074]
[122.37034607 -20.87298584]
[119.95820618 -17.26250648]
[119.51160431 -2.26915741]
[119.06499481 12.72419262]
[118.61839294 27.71754265]
[118.17178345 42.71089172]
[126.67258453 30.35223579]
[139.65057373 22.83080673]
[154.59989929 21.59887695]
[168.63407898 26.89431190]
[179.04335022 37.69464493]
[183.81782532 51.91450500]
[182.03562927 66.80825806]
[174.04089355 79.50014496]
[161.37725830 87.53958130]
[146.48988342 89.37425995]
[132.25328064 84.64993286]
[121.41632843 74.27880859]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[102.25641632 128.27204895]
[100.25240326 143.13757324]
[98.46994019 158.03129578]
[96.90941620 172.94989014]
[95.34889221 187.86849976]
[93.78836823 202.78710938]
[103.48917389 191.34619141]
[117.36080933 185.63850403]
[132.30432129 186.93914795]
[144.98127747 194.95755005]
[152.55961609 207.90237427]
[153.34632874 222.88172913]
[147.16564941 236.54917908]
[135.39837646 245.85139465]
[120.67331696 248.71022034]
[106.28011322 244.48698425]
[95.43423462 234.12518311]
[90.55867767 219.93963623]
[86.58657837 234.40415955]
[82.61448669 248.86868286]
[78.64238739 263.33322144]
[74.67029572 277.79772949]
[70.69819641 292.26226807]
[66.72609711 306.72677612]
[70.53281403 322.08319092]
[59.70146179 332.30725098]
[70.65783691 322.06234741]
[84.80712128 317.08261108]
[99.76490784 318.20718384]
[113.01054382 325.24658203]
[122.31191254 337.01452637]
[126.10157013 351.52792358]
[123.74089050 366.34100342]
[115.62768555 378.95748901]
[103.12918091 387.25131226]
[88.35159302 389.82479858]
[73.78520203 386.24426270]
[61.88469696 377.11309814]
[54.65552902 363.97006226]
[53.31612778 349.02835083]
[46.63593674 362.45874023]
[39.95574188 375.88909912]
[33.27554703 389.31948853]
[26.59535027 402.74987793]
[19.91515732 416.18023682]
[32.45849991 424.43988037]
[43.91477203 434.15127563]
[54.11690521 445.17282104]
[62.91611862 457.34371948]
[70.18409729 470.48654175]
[75.81484985 484.40963745]
[79.72626495 498.90991211]
[81.86130524 513.77593994]
[82.18882751 528.79095459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 201]
[42 200]
[43 199]
[44 198]
[45 197]
[46 196]
[47 182]
[49 180]
[50 179]
[51 178]
[52 177]
[53 176]
[54 175]
[55 174]
[56 162]
[57 161]
[58 160]
[59 159]
[62 158]
[63 157]
[69 156]
[71 154]
[72 153]
[73 152]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[79 130]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[87 122]
[88 121]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
