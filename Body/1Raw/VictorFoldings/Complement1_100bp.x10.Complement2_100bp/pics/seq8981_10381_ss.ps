%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[199.56562805 163.92057800]
[186.28778076 156.94212341]
[173.00993347 149.96366882]
[159.73208618 142.98522949]
[146.45423889 136.00677490]
[133.17639160 129.02832031]
[129.71907043 129.72062683]
[125.75466156 128.77273560]
[122.05770874 125.96455383]
[119.47177124 121.43024445]
[116.72937012 122.01106262]
[113.59165192 121.54057312]
[110.45790100 119.86277008]
[107.77645111 116.96892548]
[105.99217224 113.01035309]
[92.05313110 111.91732788]
[85.68588257 99.46944427]
[73.20609283 91.14749908]
[57.43191147 89.92854309]
[51.13562012 76.43016815]
[38.59422302 68.20136261]
[25.99190903 60.06614685]
[13.38959789 51.93093109]
[0.78728616 43.79571533]
[-11.81502533 35.66049957]
[-24.41733742 27.52528381]
[-37.07986069 19.48410988]
[-49.80189896 11.53742599]
[-58.63952637 23.66547585]
[-68.31984711 35.13215256]
[-78.79353333 45.87902451]
[-90.00720215 55.85132217]
[-101.90372467 64.99823761]
[-114.42247009 73.27315521]
[-127.49964905 80.63390350]
[-141.06861877 87.04298401]
[-155.06024170 92.46772766]
[-169.40321350 96.88049316]
[-184.02444458 100.25879669]
[-198.84942627 102.58541870]
[-213.80261230 103.84850311]
[-228.80781555 104.04161835]
[-243.78855896 103.16378021]
[-258.66848755 101.21945190]
[-273.37182617 98.21855927]
[-287.82360840 94.17637634]
[-301.95019531 89.11351013]
[-315.67962646 83.05576324]
[-328.94189453 76.03399658]
[-341.66946411 68.08399963]
[-353.79745483 59.24627686]
[-365.26403809 49.56586838]
[-376.01083374 39.09210587]
[-385.98306274 27.87835503]
[-395.12988281 15.98176289]
[-403.40469360 3.46295261]
[-410.76535034 -9.61428261]
[-417.17431641 -23.18330383]
[-422.59896851 -37.17496490]
[-427.01162720 -51.51796722]
[-430.38980103 -66.13922119]
[-432.71630859 -80.96422577]
[-433.97927856 -95.91741943]
[-434.17230225 -110.92262268]
[-433.29434204 -125.90335846]
[-431.34988403 -140.78329468]
[-428.34887695 -155.48660278]
[-424.30657959 -169.93835449]
[-419.24362183 -184.06491089]
[-413.18576050 -197.79428101]
[-406.16390991 -211.05650330]
[-398.21380615 -223.78399658]
[-389.37597656 -235.91191101]
[-379.69549561 -247.37844849]
[-369.22164917 -258.12515259]
[-358.00781250 -268.09729004]
[-346.11114502 -277.24401855]
[-333.59228516 -285.51873779]
[-320.51498413 -292.87930298]
[-306.94592285 -299.28814697]
[-292.95422363 -304.71267700]
[-278.61117554 -309.12524414]
[-263.98989868 -312.50332642]
[-249.16488647 -314.82971191]
[-234.21166992 -316.09255981]
[-219.20646667 -316.28546143]
[-204.22573853 -315.40737915]
[-189.34582520 -313.46282959]
[-174.64254761 -310.46170044]
[-160.19082642 -306.41931152]
[-146.06430054 -301.35623169]
[-132.33497620 -295.29827881]
[-119.07280731 -288.27630615]
[-106.34536743 -280.32611084]
[-94.21752167 -271.48818970]
[-82.75106812 -261.80761719]
[-72.00444031 -251.33367920]
[-62.03239441 -240.11978149]
[-52.88575363 -228.22305298]
[-44.61112595 -215.70410156]
[-37.25067520 -202.62675476]
[-30.84190941 -189.05764771]
[-25.41748810 -175.06590271]
[-21.00505257 -160.72282410]
[-17.62708664 -146.10151672]
[-15.30080605 -131.27648926]
[-14.03806210 -116.32326508]
[-13.84529209 -101.31806183]
[-14.72347736 -86.33734131]
[-16.66814232 -71.45743561]
[-19.66937828 -56.75417709]
[-23.71188927 -42.30248642]
[-28.77507973 -28.17600822]
[-34.83314514 -14.44672871]
[-41.85521317 -1.18461001]
[-29.13317871 6.76207447]
[-21.79479790 7.63955069]
[-16.28212166 14.92297173]
[-3.67980981 23.05818748]
[8.92250156 31.19340324]
[21.52481461 39.32862091]
[34.12712479 47.46383667]
[46.72943878 55.59905243]
[54.05393982 56.58568954]
[59.45756531 63.95037842]
[74.33910370 64.57408905]
[81.52803802 78.66770172]
[94.00782776 86.98964691]
[107.94686890 88.08267212]
[114.31411743 100.53055573]
[127.03614807 108.47724152]
[140.15484619 115.75047302]
[153.43269348 122.72892761]
[166.71054077 129.70738220]
[179.98838806 136.68583679]
[193.26623535 143.66427612]
[206.54408264 150.64273071]
[214.59951782 137.97903442]
[223.67321777 126.02379608]
[233.70318604 114.85870361]
[244.62091064 104.56002045]
[256.35180664 95.19809723]
[268.81573486 86.83689117]
[281.92758179 79.53350830]
[295.59774780 73.33785248]
[309.73284912 68.29223633]
[324.23632812 64.43112946]
[339.00915527 61.78091049]
[353.95034790 60.35968018]
[368.95788574 60.17714691]
[383.92922974 61.23456192]
[398.76214600 63.52470016]
[413.35525513 67.03191376]
[427.60888672 71.73224640]
[441.42572021 77.59359741]
[454.71130371 84.57591248]
[467.37490845 92.63150787]
[479.33001709 101.70534515]
[490.49499512 111.73544312]
[500.79354858 122.65328979]
[510.15533447 134.38429260]
[518.51641846 146.84832764]
[525.81964111 159.96025085]
[532.01513672 173.63049316]
[537.06054688 187.76565552]
[540.92150879 202.26919556]
[543.57153320 217.04203796]
[544.99261475 231.98326111]
[545.17492676 246.99079895]
[544.11737061 261.96215820]
[541.82702637 276.79501343]
[538.31964111 291.38809204]
[533.61914062 305.64166260]
[527.75762939 319.45840454]
[520.77514648 332.74392700]
[512.71942139 345.40744019]
[503.64541626 357.36245728]
[493.61520386 368.52728271]
[482.69723511 378.82571411]
[470.96612549 388.18734741]
[458.50198364 396.54827881]
[445.38995361 403.85134888]
[431.71966553 410.04666138]
[417.58444214 415.09194946]
[403.08084106 418.95272827]
[388.30798340 421.60256958]
[373.36672974 423.02346802]
[358.35919189 423.20562744]
[343.38784790 422.14785767]
[328.55502319 419.85736084]
[313.96197510 416.34979248]
[299.70846558 411.64913940]
[285.89178467 405.78744507]
[272.60635376 398.80480957]
[259.94296265 390.74893188]
[247.98803711 381.67480469]
[236.82330322 371.64443970]
[226.52500916 360.72634888]
[217.16351318 348.99511719]
[208.80274963 336.53088379]
[201.49983215 323.41879272]
[195.30467224 309.74841309]
[190.25955200 295.61309814]
[186.39897156 281.10946655]
[183.74928284 266.33657837]
[182.32858276 251.39532471]
[182.14659119 236.38777161]
[183.20454407 221.41645813]
[185.49520874 206.58364868]
[189.00294495 191.99066162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 134]
[5 133]
[6 132]
[10 131]
[15 130]
[17 128]
[18 127]
[20 125]
[21 123]
[22 122]
[23 121]
[24 120]
[25 119]
[26 118]
[27 116]
[28 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
