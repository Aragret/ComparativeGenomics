%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[90.60900116 619.94702148]
[75.10740662 619.25415039]
[62.99462509 609.55566406]
[58.92826843 594.58087158]
[64.47193909 580.08789062]
[77.49398041 571.64947510]
[78.16376495 556.66448975]
[71.00248718 543.60437012]
[79.34828186 530.16345215]
[80.01806641 515.17846680]
[80.57627869 500.18884277]
[81.02288055 485.19546509]
[81.46949005 470.20211792]
[67.56211853 464.73675537]
[56.34273529 454.82440186]
[49.17822647 441.64700317]
[46.95026016 426.78570557]
[49.94682693 412.03137207]
[57.82517242 399.16854858]
[69.65089417 389.75982666]
[84.00871277 384.95584106]
[76.65377808 372.00384521]
[84.79853058 358.44015503]
[85.24514008 343.44680786]
[85.69174194 328.45346069]
[86.13835144 313.46008301]
[73.39498901 305.74826050]
[66.17469025 292.60583496]
[66.50433350 277.51419067]
[74.39550781 264.52859497]
[87.81451416 257.18844604]
[88.26111603 242.19509888]
[80.90618896 229.24310303]
[89.05094147 215.67941284]
[89.49754333 200.68606567]
[89.94415283 185.69271851]
[82.58921814 172.74072266]
[90.73397064 159.17703247]
[91.18058014 144.18368530]
[91.62718201 129.19032288]
[92.07379150 114.19698334]
[83.74431610 99.63689423]
[92.71562195 85.46325684]
[92.93894958 70.46492004]
[93.16227722 55.46658325]
[93.38560486 40.46824265]
[80.96827698 48.88310623]
[66.60250092 44.56748962]
[60.87820053 30.70269966]
[68.01511383 17.50934792]
[82.75216675 14.71308231]
[94.22508240 24.37370110]
[87.74982452 9.93827057]
[96.59174347 -2.04796124]
[83.58293915 5.42003632]
[69.57793427 0.04789330]
[64.90070343 -14.20424652]
[72.99912262 -26.83023643]
[87.90333557 -28.52266693]
[98.62594604 -18.03549004]
[101.07167816 -32.83475876]
[103.51740265 -47.63403320]
[105.96313477 -62.43330383]
[108.40885925 -77.23257446]
[95.61588287 -69.40060425]
[81.00021362 -72.77434540]
[72.93436432 -85.42116547]
[76.03882599 -100.09639740]
[88.53521729 -108.39339447]
[103.26504517 -105.55925751]
[111.79018402 -93.21845245]
[115.54647827 -107.74050903]
[119.30278015 -122.26256561]
[122.95086670 -136.81219482]
[126.49053955 -151.38856506]
[130.03021240 -165.96493530]
[132.80583191 -180.70590210]
[134.80984497 -195.57142639]
[136.81385803 -210.43695068]
[138.81787109 -225.30249023]
[136.66410828 -231.55331421]
[137.81733704 -237.11811829]
[141.10923767 -240.57824707]
[143.55496216 -255.37751770]
[146.00070190 -270.17678833]
[131.57711792 -274.35971069]
[117.74951935 -280.21920776]
[104.71202087 -287.67306519]
[92.64764404 -296.61663818]
[81.72576141 -306.92434692]
[72.09969330 -318.45147705]
[63.90457153 -331.03625488]
[57.25544739 -344.50195312]
[52.24566269 -358.65957642]
[48.94554901 -373.31039429]
[47.40143204 -388.24865723]
[47.63499451 -403.26470947]
[49.64294815 -418.14773560]
[53.39711380 -432.68881226]
[58.84477997 -446.68377686]
[65.90947723 -459.93618774]
[74.49202728 -472.25997925]
[84.47193909 -483.48217773]
[95.70912170 -493.44522095]
[108.04580688 -502.00924683]
[121.30881500 -509.05401611]
[135.31196594 -514.48065186]
[149.85865784 -518.21295166]
[164.74467468 -520.19854736]
[179.76106262 -520.40954590]
[194.69700623 -518.84301758]
[209.34281921 -515.52087402]
[223.49290466 -510.48983765]
[236.94860840 -503.82049561]
[249.52105713 -495.60647583]
[261.03372192 -485.96310425]
[271.32501221 -475.02572632]
[280.25042725 -462.94793701]
[287.68469238 -449.89926147]
[293.52340698 -436.06286621]
[297.68466187 -421.63302612]
[300.10998535 -406.81228638]
[300.76535034 -391.80871582]
[299.64157104 -376.83297729]
[296.75439453 -362.09524536]
[292.14437866 -347.80242920]
[285.87622070 -334.15521240]
[278.03793335 -321.34515381]
[268.73953247 -309.55209351]
[258.11157227 -298.94158936]
[246.30325317 -289.66259766]
[233.48033142 -281.84536743]
[219.82283020 -275.59967041]
[205.52247620 -271.01315308]
[190.78001404 -268.15020752]
[175.80242920 -267.05102539]
[160.79997253 -267.73104858]
[158.35423279 -252.93179321]
[155.90850830 -238.13252258]
[153.68339539 -223.29847717]
[151.67938232 -208.43293762]
[149.67536926 -193.56741333]
[147.67135620 -178.70188904]
[159.54649353 -187.86599731]
[174.53857422 -187.37860107]
[185.79341125 -177.46250916]
[188.16545105 -162.65126038]
[180.57022095 -149.71632385]
[166.48016357 -144.57139587]
[152.33706665 -149.56866455]
[144.60658264 -162.42526245]
[141.06692505 -147.84889221]
[137.52725220 -133.27252197]
[139.00355530 -126.03080750]
[133.82484436 -118.50626373]
[130.06854248 -103.98420715]
[126.31224060 -89.46215057]
[123.20812988 -74.78684235]
[120.76240540 -59.98757553]
[118.31667328 -45.18830490]
[115.87094879 -30.38903236]
[113.42521667 -15.58976269]
[111.53192902 -0.70972717]
[118.10290527 12.65708065]
[109.16526794 25.71193504]
[108.38394165 40.69157028]
[108.16061401 55.68991089]
[107.93728638 70.68824768]
[107.71395874 85.68658447]
[115.30745697 94.51721954]
[115.04737091 106.16082764]
[107.06713867 114.64358521]
[106.62053680 129.63693237]
[106.17392731 144.63027954]
[105.72731781 159.62364197]
[113.05030823 173.64805603]
[104.93750000 186.13931274]
[104.49089050 201.13267517]
[104.04428864 216.12602234]
[111.36727905 230.15043640]
[103.25447083 242.64170837]
[102.80786133 257.63504028]
[115.76618195 265.76089478]
[122.87044525 279.19317627]
[122.30123138 294.27767944]
[114.31148529 306.96704102]
[101.13169861 313.90670776]
[100.68509674 328.90005493]
[100.23848724 343.89340210]
[99.79188538 358.88674927]
[107.11486816 372.91116333]
[99.00205994 385.40243530]
[113.04849243 391.05249023]
[124.29322815 401.14843750]
[131.39199829 414.45736694]
[133.50505066 429.36392212]
[130.39648438 444.06622314]
[122.46034241 456.79385376]
[110.67085266 466.02084351]
[96.46283722 470.64874268]
[96.01622772 485.64208984]
[95.56962585 500.63543701]
[98.44213867 509.30645752]
[95.00310516 515.84820557]
[94.33332062 530.83325195]
[101.44669342 544.96514893]
[93.14880371 557.33422852]
[92.47901917 572.31927490]
[104.69629669 581.88580322]
[108.92485809 596.81555176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[9 205]
[10 204]
[11 202]
[12 201]
[13 200]
[21 192]
[23 190]
[24 189]
[25 188]
[26 187]
[31 182]
[32 181]
[34 179]
[35 178]
[36 177]
[38 175]
[39 174]
[40 173]
[41 172]
[43 169]
[44 168]
[45 167]
[46 166]
[52 165]
[54 163]
[60 162]
[61 161]
[62 160]
[63 159]
[64 158]
[71 157]
[72 156]
[73 155]
[74 153]
[75 152]
[76 151]
[77 143]
[78 142]
[79 141]
[80 140]
[83 139]
[84 138]
[85 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
