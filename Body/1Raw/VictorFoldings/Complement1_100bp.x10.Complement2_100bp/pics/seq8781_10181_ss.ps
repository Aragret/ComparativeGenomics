%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[87.34655762 924.85357666]
[72.35867310 924.18365479]
[57.41963577 922.80139160]
[42.56329346 920.70977783]
[27.82329750 917.91369629]
[13.23304176 914.41943359]
[-1.17442262 910.23486328]
[-15.36645889 905.36950684]
[-29.31091690 899.83435059]
[-42.97620773 893.64202881]
[-56.33137512 886.80639648]
[-69.34616089 879.34313965]
[-81.99109650 871.26898193]
[-94.23751831 862.60235596]
[-106.05770111 853.36285400]
[-117.42485046 843.57135010]
[-128.31323242 833.25006104]
[-138.69816589 822.42236328]
[-148.55615234 811.11285400]
[-157.86482239 799.34704590]
[-166.60311890 787.15161133]
[-174.75123596 774.55426025]
[-182.29072571 761.58343506]
[-189.20448303 748.26861572]
[-195.47686768 734.63983154]
[-201.09365845 720.72808838]
[-206.04214478 706.56481934]
[-210.31111145 692.18212891]
[-213.89088440 677.61260986]
[-216.77336121 662.88928223]
[-218.95199585 648.04547119]
[-220.42187500 633.11474609]
[-221.17965698 618.13104248]
[-221.22361755 603.12829590]
[-220.55368042 588.14038086]
[-219.17132568 573.20135498]
[-217.07972717 558.34503174]
[-214.28359985 543.60504150]
[-210.78927612 529.01477051]
[-206.60469055 514.60736084]
[-201.73928833 500.41531372]
[-196.20413208 486.47085571]
[-190.01173401 472.80557251]
[-183.17611694 459.45043945]
[-175.71279907 446.43566895]
[-167.63865662 433.79074097]
[-158.97198486 421.54434204]
[-149.73242188 409.72418213]
[-139.94090271 398.35705566]
[-129.61959839 387.46868896]
[-118.79190063 377.08377075]
[-107.48232269 367.22583008]
[-95.71650696 357.91717529]
[-83.52108002 349.17889404]
[-70.92369080 341.03082275]
[-57.95286942 333.49136353]
[-44.63799286 326.57763672]
[-31.00923157 320.30529785]
[-17.09745407 314.68850708]
[-2.93417764 309.74005127]
[11.44851398 305.47113037]
[26.01803780 301.89138794]
[40.74139404 299.00894165]
[55.58522034 296.83035278]
[70.51589966 295.36050415]
[85.49960327 294.60275269]
[100.50239563 294.55883789]
[101.17218018 279.57379150]
[101.84196472 264.58874512]
[102.51174927 249.60371399]
[103.18153381 234.61866760]
[103.85131836 219.63363647]
[103.40471649 204.64028931]
[101.84419250 189.72167969]
[100.28366852 174.80307007]
[98.72314453 159.88447571]
[97.16262054 144.96586609]
[95.60209656 130.04725647]
[94.04157257 115.12865448]
[85.45252991 107.26293182]
[84.32715607 95.67092133]
[91.24282074 86.29996490]
[82.30518341 73.24510956]
[88.87615967 59.87830353]
[87.53792572 44.93812180]
[86.19969177 29.99793434]
[82.31714630 21.72970390]
[84.95444489 14.82561588]
[83.83879852 -0.13283715]
[82.72315216 -15.09129047]
[81.60750580 -30.04974365]
[80.49185181 -45.00819778]
[65.69017029 -47.97683334]
[52.23883057 -54.82986069]
[41.13600540 -65.05873108]
[33.20560074 -77.90440369]
[29.03610611 -92.41364288]
[28.93692398 -107.50975800]
[32.91541672 -122.07252502]
[40.67635345 -135.02128601]
[51.64381790 -145.39515686]
[65.00395203 -152.42433167]
[79.76535034 -155.58720398]
[94.83261871 -154.64904785]
[109.08765411 -149.67950439]
[121.47265625 -141.04733276]
[131.06855774 -129.39309692]
[137.16329956 -115.58161926]
[139.30458069 -100.63780975]
[137.33354187 -85.67059326]
[131.39640808 -71.79064178]
[121.93379211 -60.02793121]
[109.64785767 -51.25533676]
[95.45030975 -46.12384415]
[96.56595612 -31.16539192]
[97.68160248 -16.20693970]
[98.79725647 -1.24848580]
[99.91290283 13.70996761]
[101.13987732 28.65970039]
[102.47811127 43.59988785]
[103.81634521 58.54006958]
[112.65826416 70.52630615]
[106.18300629 84.96173096]
[116.18365479 98.42885590]
[108.96018219 113.56813049]
[110.52070618 128.48674011]
[112.08122253 143.40534973]
[113.64174652 158.32394409]
[115.20227051 173.24255371]
[116.76279449 188.16116333]
[118.32331848 203.07975769]
[125.86463165 190.11332703]
[138.82939148 182.56912231]
[153.82864380 182.41918945]
[166.94161987 189.70272827]
[174.74061584 202.51583862]
[175.18699646 217.50918579]
[168.16406250 230.76358032]
[155.50762939 238.81431580]
[140.52601624 239.55697632]
[127.13541412 232.79740906]
[118.83635712 220.30342102]
[118.16657257 235.28845215]
[117.49678802 250.27349854]
[116.82700348 265.25854492]
[116.15721893 280.24356079]
[115.48743439 295.22860718]
[130.42646790 296.61083984]
[145.28282166 298.70236206]
[160.02284241 301.49838257]
[174.61311340 304.99261475]
[189.02058411 309.17709351]
[203.21264648 314.04238892]
[217.15713501 319.57745361]
[230.82244873 325.76977539]
[244.17764282 332.60528564]
[257.19247437 340.06854248]
[269.83743286 348.14257812]
[282.08389282 356.80917358]
[293.90411377 366.04864502]
[305.27133179 375.84008789]
[316.15975952 386.16131592]
[326.54473877 396.98895264]
[336.40277100 408.29846191]
[345.71148682 420.06420898]
[354.44985962 432.25958252]
[362.59802246 444.85690308]
[370.13757324 457.82769775]
[377.05139160 471.14251709]
[383.32382202 484.77124023]
[388.94070435 498.68298340]
[393.88925171 512.84619141]
[398.15826416 527.22888184]
[401.73809814 541.79840088]
[404.62063599 556.52172852]
[406.79934692 571.36553955]
[408.26928711 586.29620361]
[409.02713013 601.27990723]
[409.07116699 616.28271484]
[408.40130615 631.27056885]
[407.01901245 646.20959473]
[404.92749023 661.06597900]
[402.13143921 675.80596924]
[398.63717651 690.39624023]
[394.45263672 704.80371094]
[389.58731079 718.99572754]
[384.05221558 732.94024658]
[377.85986328 746.60552979]
[371.02432251 759.96069336]
[363.56106567 772.97552490]
[355.48696899 785.62048340]
[346.82037354 797.86688232]
[337.58084106 809.68713379]
[327.78939819 821.05426025]
[317.46813965 831.94268799]
[306.64047241 842.32763672]
[295.33096313 852.18566895]
[283.56518555 861.49438477]
[271.36978149 870.23266602]
[258.77243042 878.38079834]
[245.80165100 885.92034912]
[232.48680115 892.83410645]
[218.85806274 899.10656738]
[204.94631958 904.72338867]
[190.78306580 909.67187500]
[176.40039062 913.94091797]
[161.83088684 917.52069092]
[147.10754395 920.40319824]
[132.26371765 922.58184814]
[117.33305359 924.05175781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[72 142]
[73 131]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[82 123]
[84 121]
[85 120]
[86 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
