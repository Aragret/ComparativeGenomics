%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[187.85624695 424.34402466]
[192.39529419 409.99539185]
[199.64666748 396.80813599]
[209.33163452 385.28912354]
[221.07795715 375.88113403]
[234.43412781 368.94580078]
[230.24711609 354.54199219]
[226.06010437 340.13821411]
[221.87309265 325.73443604]
[217.68608093 311.33065796]
[213.49906921 296.92687988]
[207.22171021 283.30355835]
[198.99290466 270.76214600]
[190.76409912 258.22076416]
[177.31297302 251.82415771]
[176.21147156 236.04133606]
[169.91381836 232.17335510]
[167.95513916 223.25138855]
[159.91397095 210.58886719]
[151.87278748 197.92634583]
[143.83161926 185.26382446]
[132.09788513 182.32341003]
[125.29502106 171.83985901]
[127.52746582 159.13635254]
[119.67571259 146.35551453]
[111.82395172 133.57467651]
[103.97219849 120.79383087]
[87.83689880 117.32687378]
[79.09365082 103.32960510]
[83.05612946 87.30879211]
[75.01495361 74.64626312]
[66.97377777 61.98374176]
[58.93260956 49.32121658]
[50.15200424 37.15975952]
[40.66310501 25.54249573]
[25.94079399 19.74904442]
[23.88202477 4.99740887]
[14.39312649 -6.61985445]
[4.90422821 -18.23711777]
[-4.75658226 -29.71181870]
[-14.58716297 -41.04141235]
[-24.41774368 -52.37100601]
[-34.24832535 -63.70059586]
[-49.13660431 -69.05314636]
[-51.63367081 -83.73693848]
[-63.76329422 -74.89691162]
[-76.59890747 -67.11740112]
[-90.04804230 -60.45446396]
[-104.01377869 -54.95610428]
[-118.39550781 -50.66194153]
[-133.08958435 -47.60291290]
[-147.99017334 -45.80105972]
[-162.98986816 -45.26936722]
[-177.98063660 -46.01166534]
[-192.85443115 -48.02260208]
[-207.50410461 -51.28769302]
[-221.82411194 -55.78340912]
[-235.71125793 -61.47736359]
[-249.06547546 -68.32852173]
[-261.79058838 -76.28752899]
[-273.79486084 -85.29703522]
[-284.99182129 -95.29212189]
[-295.30078125 -106.20078278]
[-304.64749146 -117.94441223]
[-312.96459961 -130.43840027]
[-320.19216919 -143.59271240]
[-326.27813721 -157.31259155]
[-331.17861938 -171.49917603]
[-334.85833740 -186.05023193]
[-337.29080200 -200.86094666]
[-338.45843506 -215.82458496]
[-338.35284424 -230.83332825]
[-336.97479248 -245.77906799]
[-334.33419800 -260.55407715]
[-330.45010376 -275.05194092]
[-325.35049438 -289.16815186]
[-319.07211304 -302.80105591]
[-311.66018677 -315.85238647]
[-303.16809082 -328.22808838]
[-293.65707397 -339.83905029]
[-283.19564819 -350.60159302]
[-271.85916138 -360.43814087]
[-259.72930908 -369.27786255]
[-246.89349365 -377.05703735]
[-233.44419861 -383.71963501]
[-219.47831726 -389.21765137]
[-205.09648132 -393.51144409]
[-190.40231323 -396.57006836]
[-175.50169373 -398.37155151]
[-160.50196838 -398.90286255]
[-145.51123047 -398.16015625]
[-130.63748169 -396.14883423]
[-115.98788452 -392.88339233]
[-101.66800690 -388.38729858]
[-87.78100586 -382.69299316]
[-74.42695618 -375.84146118]
[-61.70206451 -367.88214111]
[-49.69802094 -358.87231445]
[-38.50131607 -348.87695312]
[-28.19261932 -337.96801758]
[-18.84621048 -326.22415161]
[-10.52943134 -313.72994995]
[-3.30220509 -300.57543945]
[2.78339577 -286.85540771]
[7.68352318 -272.66870117]
[11.36287117 -258.11755371]
[13.79492950 -243.30677795]
[14.96217442 -228.34310913]
[14.85619640 -213.33435059]
[13.47775841 -198.38865662]
[10.83679295 -183.61370850]
[6.95232821 -169.11596680]
[1.85235214 -154.99986267]
[-4.42638922 -141.36714172]
[-11.83865643 -128.31600952]
[-20.33104324 -115.94049835]
[-29.84235954 -104.32978821]
[-40.30407715 -93.56752014]
[-26.11894798 -89.02534485]
[-22.91873169 -73.53118134]
[-13.08815098 -62.20158386]
[-3.25757003 -50.87199020]
[6.57301092 -39.54240036]
[11.18909740 -38.31732941]
[15.08461189 -34.17945862]
[16.52149200 -27.72601700]
[26.01038933 -16.10875320]
[35.49928665 -4.49148941]
[49.54289246 0.47101802]
[52.28036880 16.05359840]
[61.76926804 27.67086029]
[62.27480698 12.67938232]
[71.40432739 0.77762395]
[85.75274658 -3.59535241]
[99.96845245 1.19146514]
[108.74934387 13.35271168]
[108.82036591 28.35254478]
[100.15502930 40.59639359]
[85.98528290 45.51760864]
[71.59513092 41.28004074]
[79.63630676 53.94256592]
[87.67748260 66.60509491]
[95.71865082 79.26761627]
[108.32976532 80.53781128]
[117.95488739 88.78466797]
[121.14367676 101.05191040]
[116.75304413 112.94207001]
[124.60479736 125.72291565]
[132.45655823 138.50375366]
[140.30830383 151.28460693]
[156.69992065 159.67486572]
[156.49414062 177.22264099]
[164.53530884 189.88517761]
[172.57649231 202.54769897]
[180.61766052 215.21022034]
[188.75288391 227.81253052]
[202.79258728 235.10618591]
[203.30549622 249.99195862]
[211.53430176 262.53335571]
[219.76310730 275.07476807]
[218.14909363 260.16183472]
[220.74517822 245.38819885]
[227.34664917 231.91896057]
[237.43286133 220.81632996]
[250.20838928 212.95594788]
[264.66571045 208.95767212]
[279.66464233 209.13685608]
[294.02230835 213.47937012]
[306.60641479 221.64271545]
[316.42449951 232.98313904]
[322.70230103 246.60624695]
[324.94473267 261.43768311]
[322.97488403 276.30776978]
[316.94818115 290.04382324]
[307.33987427 301.56250000]
[294.90771484 309.95544434]
[280.63217163 314.56072998]
[265.63903809 315.01516724]
[251.11079407 311.28292847]
[238.19314575 303.65832520]
[227.90284729 292.73986816]
[232.08985901 307.14364624]
[236.27687073 321.54742432]
[240.46388245 335.95120239]
[244.65089417 350.35498047]
[248.83790588 364.75878906]
[263.83065796 363.45343018]
[278.78994751 365.09841919]
[293.14077759 369.63049316]
[306.33154297 376.87545776]
[317.85525513 386.55484009]
[327.26895142 398.29656982]
[334.21078491 411.64938354]
[338.41394043 426.09997559]
[339.71685791 441.09292603]
[338.06945801 456.05194092]
[333.53506470 470.40203857]
[326.28796387 483.59164429]
[316.60671997 495.11380005]
[304.86343384 504.52557373]
[291.50952148 511.46527100]
[277.05825806 515.66607666]
[262.06509399 516.96655273]
[247.10632324 515.31677246]
[232.75695801 510.78002930]
[219.56852722 503.53079224]
[208.04795837 493.84768677]
[198.63806152 482.10287476]
[191.70056152 468.74783325]
[187.50207520 454.29589844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[11 181]
[12 160]
[13 159]
[14 158]
[16 156]
[18 155]
[19 154]
[20 153]
[21 152]
[24 150]
[25 149]
[26 148]
[27 147]
[30 143]
[31 142]
[32 141]
[33 140]
[34 131]
[35 130]
[37 128]
[38 127]
[39 126]
[40 123]
[41 122]
[42 121]
[43 120]
[45 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
