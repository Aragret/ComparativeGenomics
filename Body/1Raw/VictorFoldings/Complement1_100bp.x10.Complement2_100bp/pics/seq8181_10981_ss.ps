%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[121.18508148 335.74200439]
[115.26903534 349.53625488]
[108.18905640 362.77090454]
[99.99755859 375.34790039]
[90.75520325 387.17413330]
[80.53041077 398.16210938]
[69.39888000 408.23037720]
[57.44303894 417.30447388]
[44.75139236 425.31719971]
[31.41791153 432.20919800]
[17.54131508 437.92947388]
[3.22434258 442.43566895]
[-11.42700672 445.69439697]
[-26.30425835 447.68157959]
[-41.29726410 448.38244629]
[-56.29501724 447.79183960]
[-71.18648529 445.91415405]
[-85.86140442 442.76324463]
[-100.21112823 438.36248779]
[-114.12941742 432.74441528]
[-127.51322174 425.95065308]
[-140.26345825 418.03149414]
[-152.28570557 409.04556274]
[-163.49098206 399.05941772]
[-173.79631042 388.14694214]
[-183.12538147 376.38897705]
[-191.40914917 363.87258911]
[-198.58627319 350.69036865]
[-204.60360718 336.94000244]
[-209.41661072 322.72323608]
[-212.98963928 308.14532471]
[-215.29624939 293.31423950]
[-216.31936646 278.33978271]
[-216.05139160 263.33279419]
[-214.49433899 248.40440369]
[-211.65971375 233.66511536]
[-207.56851196 219.22409058]
[-202.25103760 205.18820190]
[-195.74662781 191.66140747]
[-188.10346985 178.74385071]
[-179.37814331 166.53114319]
[-169.63523865 155.11373901]
[-158.94689941 144.57614136]
[-147.39225769 134.99639893]
[-135.05685425 126.44540405]
[-122.03203583 118.98648834]
[-108.41421509 112.67486572]
[-94.30422974 107.55728149]
[-79.80654144 103.67160797]
[-65.02848816 101.04662323]
[-50.07947922 99.70175171]
[-35.07020187 99.64696503]
[-20.11177635 100.88265991]
[-5.31495190 103.39968872]
[9.21071815 107.17942047]
[23.35768890 112.19386292]
[37.02122116 118.40589905]
[50.10015106 125.76952362]
[62.49764633 134.23023987]
[71.98654175 122.61296844]
[81.47544098 110.99570465]
[90.96434021 99.37844086]
[91.12509918 95.52532196]
[92.98347473 91.76177216]
[96.46138000 88.84437561]
[101.14559174 87.46670532]
[111.14376831 76.28473663]
[121.14193726 65.10276031]
[131.14010620 53.92078400]
[141.13829041 42.73880768]
[130.48785400 32.17139435]
[120.40026855 21.06542587]
[110.90271759 9.45084286]
[102.02082062 -2.64104581]
[93.77850342 -15.17764091]
[86.19800568 -28.12514687]
[79.29974365 -41.44865799]
[73.10232544 -55.11225510]
[67.62245178 -69.07910919]
[62.87490082 -83.31156158]
[58.87247086 -97.77124023]
[55.62594604 -112.41918182]
[53.14408493 -127.21587372]
[51.43357849 -142.12144470]
[50.49903107 -157.09571838]
[50.34296799 -172.09829712]
[50.96580887 -187.08876038]
[52.36587143 -202.02668762]
[54.53938675 -216.87181091]
[57.48049164 -231.58412170]
[61.18125534 -246.12393188]
[65.63170624 -260.45205688]
[70.81984711 -274.52990723]
[76.73168182 -288.31945801]
[83.35128784 -301.78359985]
[90.66081238 -314.88598633]
[98.64054871 -327.59133911]
[107.26898193 -339.86535645]
[116.52285767 -351.67501831]
[126.37722778 -362.98843384]
[136.80552673 -373.77511597]
[147.77963257 -384.00598145]
[159.26997375 -393.65347290]
[171.24557495 -402.69155884]
[183.67413330 -411.09588623]
[196.52217102 -418.84378052]
[209.75503540 -425.91439819]
[223.33705139 -432.28860474]
[237.23159790 -437.94931030]
[251.40122986 -442.88116455]
[265.80776978 -447.07092285]
[280.41232300 -450.50729370]
[295.17556763 -453.18096924]
[310.05767822 -455.08477783]
[325.01855469 -456.21359253]
[340.01785278 -456.56436157]
[355.01513672 -456.13613892]
[369.96997070 -454.93005371]
[384.84207153 -452.94940186]
[399.59130859 -450.19946289]
[414.17791748 -446.68771362]
[428.56262207 -442.42361450]
[442.70657349 -437.41860962]
[456.57171631 -431.68624878]
[470.12060547 -425.24194336]
[483.31677246 -418.10308838]
[496.12460327 -410.28890991]
[508.50961304 -401.82049561]
[520.43835449 -392.72067261]
[531.87872314 -383.01397705]
[542.79980469 -372.72656250]
[553.17230225 -361.88613892]
[562.96807861 -350.52197266]
[572.16082764 -338.66470337]
[580.72576904 -326.34625244]
[588.63977051 -313.59985352]
[595.88146973 -300.45986938]
[602.43145752 -286.96173096]
[608.27197266 -273.14181519]
[613.38732910 -259.03738403]
[617.76373291 -244.68644714]
[621.38934326 -230.12771606]
[624.25439453 -215.40042114]
[626.35119629 -200.54426575]
[627.67407227 -185.59930420]
[628.21948242 -170.60581970]
[627.98596191 -155.60423279]
[626.97406006 -140.63500977]
[625.18658447 -125.73846436]
[622.62835693 -110.95478058]
[619.30621338 -96.32381439]
[615.22912598 -81.88499451]
[610.40814209 -67.67725372]
[604.85620117 -53.73889542]
[598.58825684 -40.10749054]
[591.62127686 -26.81978989]
[583.97399902 -13.91161442]
[575.66705322 -1.41776097]
[566.72277832 10.62808800]
[557.16540527 22.19345856]
[547.02056885 33.24717331]
[536.31567383 43.75943375]
[525.07958984 53.70189667]
[513.34265137 63.04776382]
[501.13638306 71.77184296]
[488.49377441 79.85060120]
[475.44888306 87.26227570]
[462.03689575 93.98687744]
[448.29394531 100.00627899]
[434.25708008 105.30426025]
[419.96417236 109.86652374]
[405.45370483 113.68078613]
[390.76483154 116.73674774]
[375.93713379 119.02619171]
[361.01062012 120.54292297]
[346.02548218 121.28287506]
[331.02212524 121.24403381]
[316.04101562 120.42652130]
[301.12252808 118.83252716]
[286.30688477 116.46635437]
[271.63403320 113.33438110]
[257.14352417 109.44505310]
[242.87442017 104.80884552]
[228.86517334 99.43827057]
[215.15356445 93.34780121]
[201.77656555 86.55385590]
[188.77023315 79.07474518]
[176.16961670 70.93064117]
[164.00869751 62.14348602]
[152.32025146 52.73698044]
[142.32208252 63.91895676]
[132.32391357 75.10092926]
[122.32574463 86.28290558]
[112.32756805 97.46488190]
[102.58160400 108.86734009]
[93.09270477 120.48460388]
[83.60380554 132.10186768]
[74.11490631 143.71913147]
[84.88045502 154.17784119]
[94.70706177 165.52328491]
[103.52197266 177.67147827]
[111.25992584 190.53248596]
[117.86363220 204.01109314]
[123.28419495 218.00747681]
[127.48149109 232.41802979]
[130.42442322 247.13606262]
[132.09123230 262.05261230]
[132.46955872 277.05722046]
[131.55661011 292.03881836]
[129.35913086 306.88644409]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 198]
[60 197]
[61 196]
[62 195]
[66 194]
[67 193]
[68 192]
[69 191]
[70 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
