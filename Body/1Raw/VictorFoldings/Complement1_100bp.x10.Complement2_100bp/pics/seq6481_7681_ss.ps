%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUGAAGAGGAUAGAGAGGGUCAGGAUCGACGACCGUAGUGAUAUGAUGAUUGUCUGGCGUUGGAGUUGUGGUGGAAGAAGCUGGGGCGGCCUCCUCCUxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[183.34992981 580.40588379]
[176.07420349 567.27941895]
[169.86437988 553.61639404]
[164.75973511 539.50317383]
[160.79252625 525.02905273]
[157.98782349 510.28543091]
[156.36340332 495.36560059]
[155.92948914 480.36389160]
[156.68885803 465.37509155]
[158.63668823 450.49404907]
[161.76066589 435.81478882]
[166.04104614 421.43011475]
[171.45077515 407.43099976]
[177.95564270 393.90597534]
[185.51451111 380.94049072]
[194.07960510 368.61657715]
[203.59677124 357.01208496]
[214.00582886 346.20046997]
[225.24098206 336.25000000]
[237.23118591 327.22363281]
[223.87678528 320.62747192]
[223.01040649 304.83001709]
[214.96922302 292.16748047]
[206.92805481 279.50497437]
[193.57365417 272.90881348]
[192.70727539 257.11132812]
[184.66610718 244.44882202]
[176.62492371 231.78628540]
[168.58375549 219.12376404]
[152.75190735 221.29249573]
[137.50375366 216.32185364]
[125.90772247 205.15870667]
[120.32057953 190.00140381]
[121.90848541 173.86689758]
[130.40406799 159.99032593]
[122.17525482 147.44892883]
[113.94644928 134.90753174]
[105.71763611 122.36612701]
[97.48883057 109.82472229]
[90.78533936 105.34859467]
[89.23249054 97.03477478]
[81.19131470 84.37225342]
[65.82545471 83.27838898]
[54.18610001 73.46112061]
[50.60174179 58.84550095]
[56.24342346 45.08652878]
[48.20225143 32.42400360]
[40.16107941 19.76147652]
[32.11990356 7.09895229]
[16.95484352 3.54105330]
[8.98033237 -9.41509724]
[12.46570301 -23.85074043]
[4.42453003 -36.51326370]
[-3.71068597 -49.11557770]
[-11.93949413 -61.65697861]
[-20.16830254 -74.19837952]
[-28.39710999 -86.73977661]
[-41.75459671 -79.88342285]
[-55.76520920 -74.48574829]
[-70.27019501 -70.60791779]
[-85.10519409 -68.29386902]
[-100.10211945 -67.56981659]
[-115.09104919 -68.44396210]
[-129.90214539 -70.90641022]
[-144.36756897 -74.92926025]
[-158.32345581 -80.46691895]
[-171.61163330 -87.45664978]
[-184.08155823 -95.81925201]
[-195.59191895 -105.45997620]
[-206.01232910 -116.26956940]
[-215.22468567 -128.12556458]
[-223.12460327 -140.89361572]
[-229.62258911 -154.42906189]
[-234.64501953 -168.57852173]
[-238.13496399 -183.18168640]
[-240.05290222 -198.07308960]
[-240.37707520 -213.08398438]
[-239.10383606 -228.04429626]
[-236.24758911 -242.78451538]
[-231.84072876 -257.13760376]
[-225.93315125 -270.94097900]
[-218.59182739 -284.03817749]
[-209.89990234 -296.28085327]
[-199.95590210 -307.53024292]
[-188.87248230 -317.65890503]
[-176.77520752 -326.55206299]
[-163.80119324 -334.10894775]
[-150.09739685 -340.24395752]
[-135.81913757 -344.88757324]
[-121.12815857 -347.98715210]
[-106.19094849 -349.50759888]
[-91.17674255 -349.43167114]
[-76.25566864 -347.76025391]
[-61.59679413 -344.51226807]
[-47.36621475 -339.72448730]
[-33.72517395 -333.45120239]
[-20.82823372 -325.76348877]
[-8.82152939 -316.74844360]
[2.15889692 -306.50820923]
[11.98862743 -295.15881348]
[20.55628204 -282.82888794]
[27.76478577 -269.65808105]
[33.53245926 -255.79570007]
[37.79394913 -241.39875793]
[40.50097275 -226.63041687]
[41.62285233 -211.65798950]
[41.14688110 -196.65113831]
[39.07844925 -181.77990723]
[35.44099808 -167.21278381]
[30.27573586 -153.11483765]
[23.64119339 -139.64579773]
[15.61254311 -126.95829010]
[6.28075743 -115.19606781]
[-4.24842787 -104.49240112]
[-15.85570908 -94.96858215]
[-7.62690115 -82.42718506]
[0.60190648 -69.88578796]
[8.83071423 -57.34438324]
[15.12837029 -53.47639847]
[17.08705521 -44.55443954]
[25.12822723 -31.89191246]
[39.67576599 -28.90783501]
[48.01103973 -16.18078423]
[44.78242874 -0.94222069]
[52.82360458 11.72030449]
[60.86477661 24.38282967]
[68.90595245 37.04535294]
[83.75800323 37.79004669]
[95.46209717 47.24933243]
[99.39799500 61.95858765]
[93.85384369 76.33107758]
[101.89501190 88.99360657]
[110.03022766 101.59591675]
[118.25904083 114.13731384]
[126.48784637 126.67871857]
[134.71665955 139.22012329]
[142.94546509 151.76152039]
[156.87474060 149.36949158]
[170.62199402 152.45777893]
[182.11888123 160.52790833]
[189.64862061 172.33441162]
[192.10218811 186.07702637]
[189.14166260 199.67509460]
[181.24627686 211.08259583]
[189.28744507 223.74511719]
[197.32862854 236.40763855]
[205.36979675 249.07015991]
[219.29934692 256.57205200]
[219.59057617 271.46380615]
[227.63175964 284.12631226]
[235.67292786 296.78884888]
[249.60247803 304.29071045]
[249.89370728 319.18246460]
[263.16201782 312.16873169]
[276.94561768 306.23135376]
[291.15737915 301.40786743]
[305.70742798 297.72875977]
[320.50378418 295.21728516]
[335.45294189 293.88934326]
[350.46032715 293.75332642]
[365.43106079 294.81005859]
[380.27053833 297.05291748]
[394.88488770 300.46765137]
[409.18176270 305.03274536]
[423.07070923 310.71929932]
[436.46395874 317.49136353]
[449.27682495 325.30612183]
[461.42831421 334.11416626]
[472.84158325 343.85980225]
[483.44445801 354.48144531]
[493.16992188 365.91189575]
[501.95648193 378.07891846]
[509.74859619 390.90554810]
[516.49700928 404.31076050]
[522.15899658 418.20974731]
[526.69885254 432.51464844]
[530.08776855 447.13500977]
[532.30438232 461.97839355]
[533.33471680 476.95098877]
[533.17218018 491.95812988]
[531.81781006 506.90487671]
[529.28021240 521.69677734]
[525.57543945 536.24035645]
[520.72680664 550.44354248]
[514.76513672 564.21667480]
[507.72796631 577.47253418]
[499.65985107 590.12744141]
[490.61184692 602.10125732]
[480.64108276 613.31842041]
[469.81063843 623.70788574]
[458.18896484 633.20404053]
[445.84957886 641.74682617]
[432.87045288 649.28222656]
[419.33364868 655.76263428]
[405.32479858 661.14703369]
[390.93240356 665.40142822]
[376.24752808 668.49884033]
[361.36294556 670.41973877]
[346.37283325 671.15197754]
[331.37191772 670.69091797]
[316.45504761 669.03955078]
[301.71655273 666.20819092]
[287.24957275 662.21478271]
[273.14562988 657.08459473]
[259.49386597 650.85009766]
[246.38058472 643.55065918]
[233.88870239 635.23242188]
[222.09721375 625.94793701]
[211.08064270 615.75604248]
[200.90866089 604.72106934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 153]
[22 151]
[23 150]
[24 149]
[26 147]
[27 146]
[28 145]
[29 144]
[35 137]
[36 136]
[37 135]
[38 134]
[39 133]
[41 132]
[42 131]
[46 127]
[47 126]
[48 125]
[49 124]
[52 121]
[53 120]
[54 118]
[55 117]
[56 116]
[57 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
