%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[55.50876999 596.10266113]
[41.96887589 602.56866455]
[28.06327629 608.20538330]
[13.84270763 612.99218750]
[-0.64093614 616.91168213]
[-15.33480740 619.94946289]
[-30.18528938 622.09454346]
[-45.13819504 623.33905029]
[-60.13895798 623.67846680]
[-75.13285065 623.11151123]
[-90.06514740 621.64031982]
[-104.88137817 619.27014160]
[-119.52747345 616.00976562]
[-133.94998169 611.87103271]
[-148.09628296 606.86901855]
[-161.91476440 601.02197266]
[-175.35501099 594.35125732]
[-188.36795044 586.88122559]
[-200.90612793 578.63909912]
[-212.92376709 569.65502930]
[-224.37704468 559.96166992]
[-235.22416687 549.59448242]
[-245.42552185 538.59130859]
[-254.94390869 526.99224854]
[-263.74459839 514.83959961]
[-271.79547119 502.17782593]
[-279.06716919 489.05300903]
[-285.53311157 475.51306152]
[-291.16976929 461.60745239]
[-295.95651245 447.38687134]
[-299.87591553 432.90319824]
[-302.91363525 418.20932007]
[-305.05865479 403.35882568]
[-306.30310059 388.40591431]
[-306.64242554 373.40515137]
[-306.07540894 358.41125488]
[-304.60409546 343.47897339]
[-302.23391724 328.66275024]
[-298.97344971 314.01666260]
[-294.83462524 299.59417725]
[-289.83255005 285.44787598]
[-283.98544312 271.62942505]
[-277.31469727 258.18923950]
[-269.84460449 245.17631531]
[-261.60241699 232.63818359]
[-252.61825562 220.62057495]
[-242.92488098 209.16734314]
[-232.55764771 198.32028198]
[-221.55441284 188.11897278]
[-209.95529175 178.60063171]
[-197.80264282 169.80000305]
[-185.14079285 161.74919128]
[-172.01594543 154.47755432]
[-158.47598267 148.01167297]
[-144.57032776 142.37509155]
[-130.34971619 137.58840942]
[-115.86604309 133.66908264]
[-101.17214203 130.63140869]
[-86.32164001 128.48646545]
[-71.36872101 127.24210358]
[-56.36795425 126.90284729]
[-41.37406921 127.46993256]
[-26.44178200 128.94129944]
[-11.62557507 131.31156921]
[3.02048564 134.57209778]
[17.44295883 138.71098328]
[31.58921814 143.71313477]
[45.40764618 149.56028748]
[58.84782028 156.23110962]
[66.31555939 143.22215271]
[73.78330231 130.21321106]
[81.25104523 117.20425415]
[88.71878052 104.19529724]
[75.88885498 111.96658325]
[61.18832779 114.94895935]
[46.34421158 112.79205322]
[33.10037613 105.74926758]
[23.01269531 94.64797974]
[17.26626015 80.79235077]
[16.53615379 65.81012726]
[20.90814972 51.46141052]
[29.86862946 39.43187332]
[42.36492538 31.13472939]
[56.92898560 27.54472351]
[71.84983826 29.08360291]
[85.37459564 35.57058334]
[95.91439056 46.24357986]
[102.23100281 59.84873962]
[103.58237457 74.78774261]
[99.80909729 89.30699921]
[110.13576508 78.42765808]
[120.46243286 67.54832458]
[130.78910828 56.66899109]
[120.78182220 45.48386383]
[111.71953583 33.52025986]
[103.66255951 20.85779953]
[96.66450500 7.58074951]
[90.77194977 -6.22253180]
[86.02410889 -20.46018410]
[82.45256805 -35.03746033]
[80.08110809 -49.85734177]
[78.92549896 -64.82121277]
[78.99344635 -79.82948303]
[80.28448486 -94.78227234]
[82.79003143 -109.58007812]
[86.49340820 -124.12442017]
[91.36996460 -138.31849670]
[97.38726044 -152.06787109]
[104.50523376 -165.28100586]
[112.67652893 -177.87001038]
[121.84676361 -189.75106812]
[131.95491028 -200.84512329]
[142.93368530 -211.07836914]
[154.71005249 -220.38267517]
[167.20561218 -228.69612122]
[180.33723450 -235.96340942]
[194.01751709 -242.13615417]
[208.15541077 -247.17327881]
[222.65684509 -251.04125977]
[237.42530823 -253.71437073]
[252.36250305 -255.17480469]
[267.36904907 -255.41284180]
[282.34503174 -254.42692566]
[297.19085693 -252.22358704]
[311.80767822 -248.81748962]
[326.09823608 -244.23132324]
[339.96740723 -238.49560547]
[353.32293701 -231.64848328]
[366.07589722 -223.73553467]
[378.14144897 -214.80943298]
[389.43927002 -204.92956543]
[399.89419556 -194.16169739]
[409.43667603 -182.57746887]
[418.00314331 -170.25398254]
[425.53662109 -157.27325439]
[431.98699951 -143.72166443]
[437.31130981 -129.68939209]
[441.47412109 -115.26984406]
[444.44778442 -100.55895233]
[446.21243286 -85.65463257]
[446.75637817 -70.65606689]
[446.07595825 -55.66307068]
[444.17575073 -40.77542877]
[441.06835938 -26.09220695]
[436.77450562 -11.71112537]
[431.32272339 2.27210951]
[424.74929810 15.76444149]
[417.09799194 28.67608070]
[408.41973877 40.92110062]
[398.77224731 52.41801071]
[388.21975708 63.09030151]
[376.83248901 72.86694336]
[364.68621826 81.68288422]
[351.86178589 89.47944641]
[338.44451904 96.20475006]
[324.52371216 101.81403351]
[310.19201660 106.26996613]
[295.54479980 109.54290009]
[280.67956543 111.61105347]
[265.69519043 112.46065521]
[250.69145203 112.08606720]
[235.76815796 110.48976135]
[221.02464294 107.68237305]
[206.55900574 103.68258667]
[192.46752930 98.51702118]
[178.84399414 92.22003937]
[165.77903748 84.83356476]
[153.35964966 76.40674591]
[141.66844177 66.99565887]
[131.34176636 77.87499237]
[121.01509857 88.75433350]
[110.68843079 99.63366699]
[101.72773743 111.66304016]
[94.25999451 124.67199707]
[86.79225159 137.68095398]
[79.32451630 150.68989563]
[71.85677338 163.69885254]
[84.39501953 171.94084167]
[96.41275787 180.92485046]
[107.86611938 190.61807251]
[118.71332550 200.98513794]
[128.91479492 211.98825073]
[138.43328857 223.58721924]
[147.23410034 235.73976135]
[155.28507996 248.40148926]
[162.55688477 261.52624512]
[169.02297974 275.06610107]
[174.65974426 288.97167969]
[179.44662476 303.19223022]
[183.36614990 317.67584229]
[186.40403748 332.36972046]
[188.54917908 347.22018433]
[189.79374695 362.17309570]
[190.13320923 377.17385864]
[189.56634521 392.16772461]
[188.09518433 407.10003662]
[185.72511292 421.91629028]
[182.46479797 436.56237793]
[178.32611084 450.98492432]
[173.32415771 465.13125610]
[167.47718811 478.94976807]
[160.80654907 492.39001465]
[153.33657837 505.40301514]
[145.09452820 517.94122314]
[136.11047363 529.95892334]
[126.41719818 541.41223145]
[116.05007172 552.25939941]
[105.04692078 562.46081543]
[93.44789886 571.97924805]
[81.29532623 580.77996826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 177]
[70 176]
[71 175]
[72 174]
[73 173]
[90 172]
[91 171]
[92 170]
[93 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
