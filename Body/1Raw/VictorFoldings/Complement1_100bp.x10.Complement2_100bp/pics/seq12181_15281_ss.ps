%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[160.40658569 630.96014404]
[158.40257263 616.09460449]
[156.39855957 601.22906494]
[154.39454651 586.36352539]
[152.39053345 571.49798584]
[143.02221680 559.91851807]
[148.84643555 545.20837402]
[146.84242249 530.34283447]
[144.83840942 515.47729492]
[142.61329651 500.64328003]
[140.16755676 485.84399414]
[137.72183228 471.04473877]
[135.16600037 456.26406860]
[132.50021362 441.50286865]
[129.83441162 426.74163818]
[119.95839691 415.59204102]
[125.11996460 400.63650513]
[122.45417023 385.87527466]
[111.88732910 396.52148438]
[96.95970917 395.04974365]
[88.67538452 382.54495239]
[93.14125824 368.22515869]
[107.06525421 362.64642334]
[120.18215942 369.91979980]
[118.62163544 355.00119019]
[117.06111145 340.08258057]
[108.04171753 328.22933960]
[114.30133057 313.69909668]
[105.65451813 325.95605469]
[91.49224091 330.89868164]
[77.09666443 326.68353271]
[67.83699036 314.88275146]
[67.16684723 299.89773560]
[75.33618164 287.31750488]
[89.29803467 281.83419800]
[103.84497833 285.49295044]
[113.55181122 296.93020630]
[113.77513885 281.93188477]
[113.99846649 266.93353271]
[114.22179413 251.93519592]
[114.44512177 236.93685913]
[114.66844940 221.93852234]
[113.33021545 206.99833679]
[110.44494629 192.27844238]
[107.55966949 177.55854797]
[104.67440033 162.83866882]
[101.78913116 148.11877441]
[98.90385437 133.39888000]
[96.01858521 118.67898560]
[84.05237579 110.50854492]
[81.26529694 96.28960419]
[89.26152802 84.20628357]
[84.53986359 76.38684082]
[86.44458771 69.24584198]
[83.77879333 54.48462677]
[81.11299896 39.72341156]
[68.41329956 30.70368958]
[65.92008209 15.69574070]
[74.59727478 3.64410305]
[64.53057861 -8.56131554]
[69.88282013 -22.46105576]
[67.21702576 -37.22227097]
[64.55123138 -51.98348999]
[50.19184875 -57.25182724]
[40.46168137 -68.92318726]
[37.89697266 -83.79895782]
[43.08782578 -97.86704254]
[54.54621506 -107.38391876]
[51.88042068 -122.14513397]
[49.21462250 -136.90635681]
[46.54882812 -151.66757202]
[36.48213577 -163.87298584]
[41.83437729 -177.77273560]
[39.16858292 -192.53395081]
[36.50278854 -207.29516602]
[28.79155731 -194.42904663]
[15.03611565 -188.44674683]
[0.36690548 -191.57952881]
[-9.74482155 -202.65892029]
[-11.52764225 -217.55259705]
[-4.31660748 -230.70558167]
[9.19874477 -237.21212769]
[23.97752190 -234.64547729]
[34.50813293 -223.96185303]
[33.61531830 -238.93527222]
[24.50394821 -248.06465149]
[24.06857872 -260.55441284]
[31.99751854 -269.68997192]
[23.02308273 -278.95401001]
[22.77371597 -291.44888306]
[30.83779335 -300.46536255]
[30.39118576 -315.45870972]
[29.94458008 -330.45208740]
[29.49797440 -345.44543457]
[29.05136871 -360.43878174]
[25.66783905 -368.92343140]
[28.71140480 -375.65832520]
[28.48807716 -390.65664673]
[28.26474953 -405.65499878]
[14.57931995 -412.50827026]
[5.65577602 -424.94326782]
[3.54468274 -440.10247803]
[8.73115444 -454.50244141]
[20.02337646 -464.83416748]
[34.82648087 -468.72348022]
[49.73882294 -465.27664185]
[61.33365250 -455.28570557]
[66.94656372 -441.04653931]
[65.28775024 -425.83120728]
[56.73840332 -413.13601685]
[43.26308823 -405.87832642]
[43.48641586 -390.87997437]
[43.70974350 -375.88165283]
[44.04471970 -360.88537598]
[44.49132538 -345.89202881]
[44.93793106 -330.89868164]
[45.38453674 -315.90533447]
[45.83114243 -300.91198730]
[55.84535217 -286.50079346]
[46.98255920 -270.35977173]
[57.21021652 -256.09927368]
[48.58872223 -239.82807922]
[49.48154068 -224.85467529]
[51.26400375 -209.96095276]
[53.92980194 -195.19973755]
[56.59559631 -180.43852234]
[66.47161102 -169.28892517]
[61.31004715 -154.33337402]
[63.97584152 -139.57214355]
[66.64163971 -124.81092834]
[69.30743408 -110.04971313]
[83.37083435 -105.14193726]
[93.15454102 -93.77817535]
[95.95510864 -78.94499969]
[90.92200470 -64.60746765]
[79.31244659 -54.64928436]
[81.97824097 -39.88806915]
[84.64404297 -25.12685013]
[94.52005768 -13.97725296]
[89.35848999 0.97830749]
[101.70298767 9.23354244]
[104.61676025 24.16554070]
[95.87421417 37.05761337]
[98.54000854 51.81883240]
[101.20580292 66.58004761]
[103.98141479 81.32101440]
[115.94762421 89.49145508]
[118.73470306 103.71039581]
[110.73847198 115.79371643]
[113.62374878 130.51361084]
[116.50901794 145.23350525]
[119.39429474 159.95338440]
[122.27956390 174.67327881]
[125.16484070 189.39317322]
[128.05010986 204.11306763]
[133.04183960 189.96800232]
[143.00936890 178.75871277]
[156.47409058 172.14801025]
[171.43858337 171.11657715]
[185.68296814 175.81739807]
[197.09414673 185.55314636]
[203.97937012 198.87957764]
[205.31723022 213.81979370]
[200.90928650 228.15751648]
[191.40942383 239.76580811]
[178.22686768 246.92265320]
[163.31721497 248.56639099]
[148.89218140 244.45317078]
[137.09165955 235.19316101]
[129.66679382 222.16184998]
[129.44346619 237.16018677]
[129.22013855 252.15852356]
[128.99681091 267.15686035]
[128.77348328 282.15521240]
[128.55015564 297.15353394]
[129.21994019 312.13858032]
[138.35095215 325.05889893]
[131.97972107 338.52206421]
[133.54023743 353.44067383]
[135.10076904 368.35928345]
[137.21539307 383.20947266]
[139.88117981 397.97070312]
[149.94787598 410.17611694]
[144.59562683 424.07586670]
[147.26142883 438.83706665]
[149.92721558 453.59829712]
[154.53193665 461.48715210]
[152.52110291 468.59899902]
[154.96682739 483.39828491]
[157.41256714 498.19754028]
[161.30552673 503.54138184]
[161.83576965 509.19961548]
[159.70393372 513.47332764]
[161.70794678 528.33886719]
[163.71195984 543.20434570]
[173.22361755 555.84710693]
[167.25605774 569.49401855]
[169.26007080 584.35949707]
[171.26408386 599.22503662]
[173.26809692 614.09057617]
[175.27210999 628.95611572]
[189.51031494 634.71533203]
[198.94869995 646.83197021]
[201.04835510 662.04669189]
[195.24450684 676.26678467]
[183.09835815 685.66711426]
[167.87715149 687.71905518]
[153.67532349 681.87066650]
[144.31309509 669.69512939]
[142.30885315 654.46759033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[4 198]
[5 197]
[7 195]
[8 194]
[9 193]
[10 190]
[11 189]
[12 188]
[13 186]
[14 185]
[15 184]
[17 182]
[18 181]
[24 180]
[25 179]
[26 178]
[28 176]
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[42 170]
[43 155]
[44 154]
[45 153]
[46 152]
[47 151]
[48 150]
[49 149]
[52 146]
[54 145]
[55 144]
[56 143]
[59 140]
[61 138]
[62 137]
[63 136]
[68 131]
[69 130]
[70 129]
[71 128]
[73 126]
[74 125]
[75 124]
[84 123]
[85 122]
[88 120]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
