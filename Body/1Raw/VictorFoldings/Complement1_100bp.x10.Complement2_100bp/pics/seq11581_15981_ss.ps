%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-8.80022907 604.96429443]
[-21.97824860 612.13647461]
[-35.50801086 618.62072754]
[-49.35363770 624.39990234]
[-63.47841263 629.45867920]
[-77.84487152 633.78356934]
[-92.41493225 637.36322021]
[-107.14994812 640.18804932]
[-122.01084137 642.25054932]
[-136.95820618 643.54534912]
[-151.95240784 644.06896973]
[-166.95368958 643.81994629]
[-181.92225647 642.79907227]
[-196.81842041 641.00891113]
[-211.60267639 638.45434570]
[-226.23582458 635.14208984]
[-240.67906189 631.08093262]
[-254.89408875 626.28161621]
[-268.84320068 620.75689697]
[-282.48941040 614.52136230]
[-295.79653931 607.59167480]
[-308.72927856 599.98614502]
[-321.25335693 591.72491455]
[-333.33554077 582.82989502]
[-344.94378662 573.32470703]
[-356.04733276 563.23455811]
[-366.61676025 552.58618164]
[-376.62396240 541.40783691]
[-386.04248047 529.72912598]
[-394.84729004 517.58105469]
[-403.01504517 504.99581909]
[-410.52410889 492.00680542]
[-417.35455322 478.64846802]
[-423.48828125 464.95623779]
[-428.90899658 450.96636963]
[-433.60235596 436.71600342]
[-437.55590820 422.24295044]
[-440.75915527 407.58554077]
[-443.20358276 392.78268433]
[-444.88278198 377.87359619]
[-445.79220581 362.89782715]
[-445.92950439 347.89514160]
[-445.29431152 332.90524292]
[-443.88830566 317.96792603]
[-441.71517944 303.12280273]
[-438.78073120 288.40921021]
[-435.09274292 273.86621094]
[-430.66101074 259.53234863]
[-425.49722290 245.44561768]
[-419.61514282 231.64340210]
[-413.03033447 218.16229248]
[-405.76025391 205.03802490]
[-397.82418823 192.30541992]
[-389.24319458 179.99822998]
[-380.04000854 168.14910889]
[-370.23907471 156.78945923]
[-359.86633301 145.94941711]
[-348.94931030 135.65773010]
[-337.51696777 125.94168091]
[-325.59957886 116.82703400]
[-313.22882080 108.33796692]
[-300.43743896 100.49699402]
[-287.25936890 93.32489777]
[-273.72958374 86.84070587]
[-259.88391113 81.06159973]
[-245.75912476 76.00292206]
[-231.39262390 71.67808533]
[-216.82255554 68.09854889]
[-202.08752441 65.27380371]
[-187.22662354 63.21135330]
[-172.27923584 61.91666031]
[-157.28503418 61.39315414]
[-142.28376770 61.64222717]
[-127.31520081 62.66321945]
[-112.41904449 64.45342255]
[-97.63479614 67.00808716]
[-83.00166321 70.32044220]
[-68.55844879 74.38169861]
[-54.34345627 79.18109131]
[-40.39437866 84.70589447]
[-26.74820518 90.94145966]
[-13.44112396 97.87123871]
[-0.50842440 105.47686005]
[12.01559830 113.73816681]
[24.09773254 122.63323212]
[35.70594025 132.13848877]
[46.80943680 142.22871399]
[57.45544434 131.66166687]
[68.10145569 121.09461212]
[78.74745941 110.52756500]
[89.39347076 99.96051788]
[99.47460938 88.85328674]
[108.96350861 77.23602295]
[118.45240784 65.61875916]
[127.94130707 54.00149536]
[130.67878723 38.41891479]
[144.72238159 33.45640945]
[154.21128845 21.83914566]
[163.70018005 10.22188187]
[173.18908691 -1.39538109]
[162.65484619 -12.09477329]
[153.33918762 -23.87041473]
[145.35131836 -36.58423996]
[138.78492737 -50.08718872]
[133.71696472 -64.22094727]
[130.20687866 -78.81980133]
[128.29580688 -93.71258545]
[128.00614929 -108.72469330]
[129.34132385 -123.68010712]
[132.28565979 -138.40350342]
[136.80464172 -152.72222900]
[142.84527588 -166.46842957]
[150.33676147 -179.48091125]
[159.19125366 -191.60713196]
[169.30491638 -202.70492554]
[180.55921936 -212.64414978]
[192.82215881 -221.30828857]
[205.94999695 -228.59574890]
[219.78880310 -234.42109680]
[234.17633057 -238.71603394]
[248.94387817 -241.43020630]
[263.91830444 -242.53176880]
[278.92407227 -242.00784302]
[293.78521729 -239.86454773]
[308.32751465 -236.12701416]
[322.38043213 -230.83908081]
[335.77923584 -224.06271362]
[348.36685181 -215.87739563]
[359.99563599 -206.37905884]
[370.52932739 -195.67910767]
[379.84432983 -183.90296936]
[387.83151245 -171.18870544]
[394.39718628 -157.68540955]
[399.46438599 -143.55137634]
[402.97369385 -128.95233154]
[404.88397217 -114.05944824]
[405.17279053 -99.04732513]
[403.83682251 -84.09197998]
[400.89169312 -69.36875153]
[396.37194824 -55.05025864]
[390.33056641 -41.30438995]
[382.83837891 -28.29230118]
[373.98324585 -16.16655350]
[363.86898804 -5.06931448]
[352.61416626 4.86930561]
[340.35073853 13.53278160]
[327.22250366 20.81953812]
[313.38339233 26.64414406]
[298.99563599 30.93830490]
[284.22793579 33.65167618]
[269.25344849 34.75244904]
[254.24771118 34.22771072]
[239.38668823 32.08361435]
[224.84460449 28.34530258]
[210.79194641 23.05660248]
[197.39350891 16.27952194]
[184.80635071 8.09351730]
[175.31744385 19.71078110]
[165.82855225 31.32804489]
[156.33964539 42.94530869]
[154.28088379 57.69694138]
[139.55856323 63.49039459]
[130.06967163 75.10765839]
[120.58077240 86.72492218]
[111.09187317 98.34218597]
[126.00711823 96.74989319]
[138.52607727 105.01280212]
[142.92526245 119.35320282]
[137.19340515 133.21487427]
[123.95104980 140.26043701]
[109.25241089 137.26875305]
[99.81752014 125.60758972]
[99.96051788 110.60652924]
[89.31451416 121.17357635]
[78.66850281 131.74063110]
[68.02249146 142.30767822]
[57.37648392 152.87472534]
[67.38376617 164.05302429]
[76.80233765 175.73167419]
[85.60721588 187.87968445]
[93.77505493 200.46487427]
[101.28419495 213.45382690]
[108.11472321 226.81213379]
[114.24851990 240.50434875]
[119.66932678 254.49417114]
[124.36276245 268.74450684]
[128.31639099 283.21752930]
[131.51971436 297.87493896]
[133.96424866 312.67779541]
[135.64350891 327.58685303]
[136.55303955 342.56259155]
[136.69042969 357.56530762]
[136.05531311 372.55520630]
[134.64938354 387.49252319]
[132.47634888 402.33767700]
[129.54199219 417.05126953]
[125.85408783 431.59429932]
[121.42241669 445.92819214]
[116.25872803 460.01492310]
[110.37671661 473.81719971]
[103.79197693 487.29833984]
[96.52198029 500.42263794]
[88.58599091 513.15527344]
[80.00506592 525.46252441]
[70.80195618 537.31170654]
[61.00106812 548.67138672]
[50.62839127 559.51153564]
[39.71142960 569.80328369]
[28.27913666 579.51940918]
[16.36182594 588.63409424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[87 177]
[88 176]
[89 175]
[90 174]
[91 173]
[92 165]
[93 164]
[94 163]
[95 162]
[97 160]
[98 159]
[99 158]
[100 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
