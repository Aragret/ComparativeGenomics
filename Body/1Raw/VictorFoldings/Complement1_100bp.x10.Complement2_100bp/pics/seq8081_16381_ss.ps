%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[99.11637878 745.87902832]
[84.11109161 746.44586182]
[69.13668823 745.32904053]
[54.38149643 742.54260254]
[40.03107452 738.12158203]
[26.26589203 732.12158203]
[13.25906563 724.61810303]
[1.17416692 715.70544434]
[-9.83682346 705.49572754]
[-19.63542938 694.11737061]
[-28.09842491 681.71343994]
[-35.11937714 668.43994141]
[-40.60999298 654.46374512]
[-44.50121689 639.96069336]
[-46.74411774 625.11315918]
[-47.31048584 610.10784912]
[-46.19319916 595.13348389]
[-43.40631104 580.37835693]
[-38.98486710 566.02807617]
[-32.98447037 552.26306152]
[-25.48058510 539.25646973]
[-16.56757927 527.17187500]
[-6.35754299 516.16119385]
[5.02112103 506.36291504]
[17.42531395 497.90026855]
[30.69903946 490.87973022]
[44.67536926 485.38952637]
[59.17853165 481.49874878]
[74.02613831 479.25628662]
[89.03146362 478.69036865]
[90.14710999 463.73190308]
[91.26275635 448.77343750]
[92.37841034 433.81500244]
[93.49405670 418.85653687]
[94.60970306 403.89810181]
[95.61396790 388.93173218]
[96.50678253 373.95834351]
[83.20372009 369.96765137]
[71.12151337 363.10211182]
[60.87255859 353.70571899]
[52.97723389 342.25079346]
[47.83747101 329.31433105]
[45.71630859 315.54882812]
[46.72441864 301.64950562]
[50.81435013 288.31915283]
[57.78273010 276.23254395]
[67.28040314 266.00228882]
[78.82989502 258.14788818]
[91.84944916 253.06915283]
[105.68228149 251.02610779]
[107.02051544 236.08592224]
[108.35874939 221.14573669]
[109.69698334 206.20555115]
[109.02719879 191.22050476]
[106.36140442 176.45928955]
[103.69561005 161.69807434]
[101.02980804 146.93685913]
[98.36401367 132.17564392]
[88.48799896 121.02603912]
[93.64956665 106.07048035]
[91.30199432 104.12667084]
[89.60980988 101.28571320]
[88.90666962 97.78870392]
[89.43247223 93.99663544]
[91.29194641 90.35311127]
[81.96958160 77.57015228]
[88.13966370 64.01362610]
[86.35720062 49.11990738]
[84.57472992 34.22618866]
[75.25236511 21.44323158]
[81.42244720 7.88670635]
[74.49654388 21.19203949]
[62.23358917 29.83031845]
[47.37314987 31.87173080]
[33.23509216 26.86021614]
[22.97788811 15.91536427]
[18.89303017 1.48227978]
[21.89308167 -13.21464825]
[31.30782509 -24.89208794]
[45.03398132 -30.94127083]
[60.00509262 -30.01079369]
[72.87657928 -22.30852509]
[80.77291870 -9.55515480]
[81.44270325 -24.54019356]
[82.11248779 -39.52523041]
[82.78227234 -54.51026917]
[83.45205688 -69.49530792]
[84.12184143 -84.48034668]
[84.79162598 -99.46538544]
[77.67825317 -113.59728241]
[85.97613525 -125.96636963]
[71.34248352 -129.46676636]
[57.63584900 -135.67356873]
[45.35170746 -144.36244202]
[34.93413162 -155.21926880]
[26.75970650 -167.85157776]
[21.12393570 -181.80271912]
[18.23054695 -196.56838989]
[18.18413353 -211.61479187]
[20.98637390 -226.39802551]
[26.53597069 -240.38368225]
[34.63230515 -253.06617737]
[44.98270416 -263.98706055]
[57.21300888 -272.75155640]
[70.88109589 -279.04281616]
[85.49287415 -282.63342285]
[100.52014160 -283.39355469]
[115.41966248 -281.29577637]
[129.65283203 -276.41589355]
[142.70513916 -268.93032837]
[154.10473633 -259.10964966]
[163.43955994 -247.30889893]
[170.37213135 -233.95465088]
[174.65185547 -219.52964783]
[176.12402344 -204.55537415]
[174.73542786 -189.57310486]
[170.53623962 -175.12445068]
[163.67828369 -161.73173523]
[154.40945435 -149.87908936]
[143.06483459 -139.99496460]
[130.05448914 -132.43669128]
[115.84876251 -127.47747040]
[100.96118164 -125.29658508]
[108.12245941 -112.23651886]
[99.77666473 -98.79560089]
[99.10688019 -83.81056213]
[98.43709564 -68.82552338]
[97.76731110 -53.84048462]
[97.09752655 -38.85544586]
[96.42774200 -23.87040901]
[95.75795746 -8.88536930]
[96.31616211 6.10424042]
[105.51103973 17.82190132]
[99.46845245 32.44372559]
[101.25091553 47.33744049]
[103.03337860 62.23115921]
[112.22825623 73.94882202]
[106.18566895 88.57064056]
[108.41078186 103.40468597]
[118.47747803 115.61010742]
[113.12522888 129.50984192]
[115.79103088 144.27105713]
[118.45682526 159.03227234]
[121.12261963 173.79350281]
[123.78841400 188.55471802]
[128.32424927 174.25694275]
[137.00514221 162.02410889]
[149.00369263 153.02218628]
[163.17626953 148.10916138]
[178.17205811 147.75332642]
[192.56172180 151.98858643]
[204.97375488 160.41125488]
[214.22509766 172.21856689]
[219.43400574 186.28509521]
[220.10395813 201.27012634]
[216.17112732 215.74537659]
[208.01036072 228.33116150]
[196.39947510 237.82788086]
[182.44517517 243.33035278]
[167.47746277 244.31413269]
[152.92298889 240.68547058]
[140.16899109 232.79019165]
[130.43109131 221.38084412]
[124.63716888 207.54377747]
[123.29893494 222.48396301]
[121.96070099 237.42414856]
[120.62246704 252.36433411]
[135.85620117 257.80673218]
[149.16223145 266.98757935]
[159.64353943 279.28128052]
[166.59521484 293.85247803]
[169.55195618 309.71304321]
[168.31916809 325.78890991]
[162.98576355 340.99295044]
[153.91780090 354.29837036]
[141.73332214 364.80813599]
[127.26026917 371.81542969]
[111.48018646 374.85116577]
[110.58737183 389.82455444]
[113.20043945 398.57727051]
[109.56816101 405.01373291]
[108.45250702 419.97219849]
[107.33686066 434.93063354]
[106.22121429 449.88909912]
[105.10556030 464.84756470]
[103.98991394 479.80599976]
[118.74527740 482.59158325]
[133.09596252 487.01171875]
[146.86149597 493.01089478]
[159.86877441 500.51361084]
[171.95420837 509.42553711]
[182.96580505 519.63458252]
[192.76509094 531.01239014]
[201.22883606 543.41577148]
[208.25057983 556.68890381]
[213.74203491 570.66473389]
[217.63412476 585.16754150]
[219.87791443 600.01495361]
[220.44517517 615.02020264]
[219.32878113 629.99462891]
[216.54278564 644.74993896]
[212.12219238 659.10046387]
[206.12261963 672.86584473]
[198.61950684 685.87292480]
[189.70722961 697.95806885]
[179.49784851 708.96936035]
[168.11978149 718.76831055]
[155.71609497 727.23168945]
[142.44277954 734.25305176]
[128.46678162 739.74407959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[35 181]
[36 179]
[37 178]
[50 167]
[51 166]
[52 165]
[53 164]
[54 145]
[55 144]
[56 143]
[57 142]
[58 141]
[60 139]
[65 138]
[67 136]
[68 135]
[69 134]
[71 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[91 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
