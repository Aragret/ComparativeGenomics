%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[190.66415405 486.26672363]
[192.51400757 471.36621094]
[195.96408081 456.75305176]
[200.97392273 442.59860229]
[207.48478699 429.06878662]
[215.42033386 416.32223511]
[224.68751526 404.50842285]
[235.17770386 393.76583862]
[246.76789856 384.22042847]
[238.53909302 371.67901611]
[230.31027222 359.13763428]
[222.08146667 346.59622192]
[213.85266113 334.05480957]
[205.62385559 321.51342773]
[192.17272949 315.11682129]
[191.07124329 299.33398438]
[182.84243774 286.79260254]
[174.61361694 274.25119019]
[166.38481140 261.70980835]
[158.15600586 249.16839600]
[149.92720032 236.62699890]
[141.69839478 224.08560181]
[142.64268494 239.05584717]
[138.18487549 253.37812805]
[128.91145325 265.16812134]
[116.04250336 272.87460327]
[101.27115631 275.48370361]
[86.54084015 272.65213013]
[73.78958130 264.75244141]
[64.69502258 252.82394409]
[60.45371246 238.43605042]
[61.62366867 223.48175049]
[68.05095673 209.92852783]
[78.88996887 199.55953979]
[92.71463776 193.73901367]
[107.70609283 193.23272705]
[121.89194489 198.10729980]
[133.40733337 207.72323608]
[128.16061401 193.67076111]
[122.91389465 179.61828613]
[117.56270599 165.60527039]
[112.10735321 151.63247681]
[106.65199280 137.65966797]
[101.19664001 123.68687439]
[95.74127960 109.71408081]
[89.76971436 95.95397186]
[83.29022217 82.42562866]
[76.81072235 68.89728546]
[70.33123016 55.36893845]
[63.85173416 41.84059143]
[57.37223816 28.31224632]
[50.79220963 14.83251286]
[44.11201477 1.40213656]
[37.43181992 -12.02823925]
[30.75162697 -25.45861626]
[24.07143211 -38.88899231]
[17.39123726 -52.31936646]
[10.61124516 -65.69963837]
[-2.59347963 -74.41432953]
[-1.55497003 -89.27268982]
[-8.43438244 -102.60211945]
[-15.31379509 -115.93154144]
[-28.51852036 -124.64623260]
[-27.48001099 -139.50459290]
[-34.35942459 -152.83401489]
[-48.46442032 -147.67143250]
[-63.10524750 -144.31742859]
[-78.05100250 -142.82489014]
[-93.06597137 -143.21739197]
[-107.91333771 -145.48870850]
[-122.35894012 -149.60302734]
[-136.17495728 -155.49548340]
[-149.14349365 -163.07310486]
[-161.05999756 -172.21641541]
[-171.73654175 -182.78120422]
[-181.00474548 -194.60083008]
[-188.71842957 -207.48890686]
[-194.75593567 -221.24214172]
[-199.02204895 -235.64366150]
[-201.44947815 -250.46629333]
[-201.99995422 -265.47631836]
[-200.66479492 -280.43695068]
[-197.46502686 -295.11224365]
[-192.45115662 -309.27078247]
[-185.70223999 -322.68927002]
[-177.32470703 -335.15603638]
[-167.45069885 -346.47448730]
[-156.23594666 -356.46609497]
[-143.85731506 -364.97329712]
[-130.51002502 -371.86193848]
[-116.40459442 -377.02334595]
[-101.76348877 -380.37609863]
[-86.81760406 -381.86737061]
[-71.80267334 -381.47363281]
[-56.95549774 -379.20104980]
[-42.51023483 -375.08551025]
[-28.69471550 -369.19189453]
[-15.72682571 -361.61318970]
[-3.81108737 -352.46887207]
[6.86456966 -341.90319824]
[16.13177681 -330.08279419]
[23.84437370 -317.19406128]
[29.88072395 -303.44030762]
[34.14562607 -289.03845215]
[36.57181168 -274.21557617]
[37.12102509 -259.20553589]
[35.78459549 -244.24502563]
[32.58360672 -229.56997681]
[27.56853867 -215.41184998]
[20.81848717 -201.99395752]
[12.43991280 -189.52789307]
[2.56495523 -178.21028137]
[-8.65064240 -168.21960449]
[-21.02999496 -159.71343994]
[-14.15058136 -146.38400269]
[-1.43791807 -138.62272644]
[-1.98436594 -122.81095886]
[4.89504671 -109.48152924]
[11.77445889 -96.15209961]
[24.48712158 -88.39082336]
[23.94067383 -72.57905579]
[29.80175209 -68.07688141]
[30.82161331 -58.99956131]
[37.50180817 -45.56918716]
[44.18200302 -32.13880920]
[50.86219788 -18.70843315]
[57.54239273 -5.27805805]
[64.22258759 8.15231800]
[70.01598358 12.74125481]
[70.90058136 21.83275032]
[77.38008118 35.36109543]
[83.85957336 48.88944244]
[90.33907318 62.41778946]
[96.81856537 75.94613647]
[103.29806519 89.47447968]
[110.66849518 76.41014862]
[125.45295715 73.87642670]
[136.75288391 83.74108887]
[136.23840332 98.73226166]
[124.28876495 107.79901886]
[109.71408081 104.25872040]
[115.16943359 118.23152161]
[120.62479401 132.20431519]
[126.08014679 146.17710876]
[131.53550720 160.14991760]
[137.57167053 167.00575256]
[136.96636963 174.37156677]
[142.21308899 188.42404175]
[147.45980835 202.47651672]
[154.23979187 215.85679626]
[162.46859741 228.39819336]
[170.69740295 240.93959045]
[178.92622375 253.48098755]
[187.15502930 266.02239990]
[195.38383484 278.56378174]
[203.61264038 291.10519409]
[217.65234375 298.39883423]
[218.16525269 313.28460693]
[226.39405823 325.82601929]
[234.62287903 338.36740112]
[242.85168457 350.90881348]
[251.08049011 363.45022583]
[259.30929565 375.99160767]
[272.67977905 369.15954590]
[286.71057129 363.81314087]
[301.23718262 360.01510620]
[316.08926392 357.80996704]
[331.09271240 357.22357178]
[346.07159424 358.26278687]
[360.85034180 360.91546631]
[375.25561523 365.15045166]
[389.11853027 370.91815186]
[402.27661133 378.15087891]
[414.57553101 386.76391602]
[425.87109375 396.65618896]
[436.03088379 407.71176147]
[444.93576050 419.80102539]
[452.48135376 432.78222656]
[458.57916260 446.50314331]
[463.15771484 460.80294800]
[466.16333008 475.51394653]
[467.56072998 490.46368408]
[467.33358765 505.47686768]
[465.48452759 520.37750244]
[462.03524780 534.99084473]
[457.02615356 549.14556885]
[450.51602173 562.67572021]
[442.58117676 575.42266846]
[433.31460571 587.23699951]
[422.82501221 597.98016357]
[411.23532104 607.52618408]
[398.68148804 615.76318359]
[385.31060791 622.59454346]
[371.27954102 627.94018555]
[356.75274658 631.73742676]
[341.90051270 633.94177246]
[326.89703369 634.52734375]
[311.91821289 633.48730469]
[297.13961792 630.83386230]
[282.73458862 626.59808350]
[268.87194824 620.82965088]
[255.71427917 613.59619141]
[243.41583252 604.98254395]
[232.12078857 595.08959961]
[221.96160889 584.03350830]
[213.05735779 571.94378662]
[205.51246643 558.96215820]
[199.41539001 545.24090576]
[194.83761597 530.94085693]
[191.83280945 516.22967529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 163]
[10 162]
[11 161]
[12 160]
[13 159]
[14 158]
[16 156]
[17 155]
[18 154]
[19 153]
[20 152]
[21 151]
[22 150]
[38 149]
[39 148]
[40 147]
[41 145]
[42 144]
[43 143]
[44 142]
[45 141]
[46 135]
[47 134]
[48 133]
[49 132]
[50 131]
[51 130]
[52 128]
[53 127]
[54 126]
[55 125]
[56 124]
[57 123]
[58 121]
[60 119]
[61 118]
[62 117]
[64 115]
[65 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
