%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[15.28200054 277.80340576]
[11.30752277 292.27276611]
[6.40477753 306.45449829]
[0.59432906 320.28915405]
[-6.09945154 333.71868896]
[-13.64848804 346.68676758]
[-22.02111816 359.13897705]
[-31.18222046 371.02313232]
[-41.09337234 382.28936768]
[-51.71300507 392.89041138]
[-62.99657059 402.78182983]
[-74.89674377 411.92211914]
[-87.36361694 420.27294922]
[-100.34488678 427.79925537]
[-113.78610992 434.46951294]
[-127.63091278 440.25573730]
[-141.82122803 445.13363647]
[-156.29753113 449.08276367]
[-170.99908447 452.08657837]
[-185.86425781 454.13244629]
[-200.83068848 455.21182251]
[-215.83558655 455.32012939]
[-230.81604004 454.45693970]
[-245.70919800 452.62588501]
[-260.45260620 449.83465576]
[-274.98440552 446.09490967]
[-289.24365234 441.42236328]
[-303.17056274 435.83663940]
[-316.70666504 429.36111450]
[-329.79525757 422.02301025]
[-342.38137817 413.85302734]
[-354.41226196 404.88549805]
[-365.83746338 395.15802002]
[-376.60903931 384.71139526]
[-386.68179321 373.58941650]
[-396.01351929 361.83874512]
[-404.56503296 349.50869751]
[-412.30050659 336.65097046]
[-419.18746948 323.31945801]
[-425.19705200 309.57012939]
[-430.30401611 295.46066284]
[-434.48696899 281.05017090]
[-437.72836304 266.39916992]
[-440.01458740 251.56904602]
[-441.33609009 236.62205505]
[-441.68728638 221.62088013]
[-441.06671143 206.62841797]
[-439.47695923 191.70756531]
[-436.92474365 176.92091370]
[-433.42074585 162.33049011]
[-428.97961426 147.99746704]
[-423.62005615 133.98197937]
[-417.36450195 120.34280396]
[-410.23919678 107.13715363]
[-402.27404785 94.42042542]
[-393.50244141 82.24594879]
[-383.96118164 70.66479492]
[-373.69027710 59.72553253]
[-362.73281860 49.47404861]
[-351.13476562 39.95334244]
[-338.94473267 31.20334244]
[-326.21389771 23.26075554]
[-312.99563599 16.15889359]
[-299.34539795 9.92754364]
[-285.32043457 4.59284306]
[-270.97955322 0.17716782]
[-256.38293457 -3.30096102]
[-241.59176636 -5.82695532]
[-226.66812134 -7.39021969]
[-211.67459106 -7.98419762]
[-196.67405701 -7.60639715]
[-181.72943115 -6.25840378]
[-166.90339661 -3.94587064]
[-152.25814819 -0.67849773]
[-137.85511780 3.53001022]
[-123.75470734 8.66200161]
[-110.01606750 14.69594955]
[-96.69680786 21.60654831]
[-83.85281372 29.36480904]
[-71.53794098 37.93819046]
[-59.80385590 47.29073715]
[-48.69976425 57.38321686]
[-38.27225113 68.17329407]
[-28.56504822 79.61572266]
[-19.61887169 91.66249847]
[-11.47124672 104.26309967]
[-4.15634537 117.36466980]
[2.29515028 130.91226196]
[16.22694778 125.35302734]
[30.15874672 119.79380798]
[44.09054565 114.23458099]
[58.02234268 108.67535400]
[71.95413971 103.11612701]
[85.88594055 97.55690002]
[94.69132996 86.69611359]
[108.55483246 88.51129913]
[122.48663330 82.95207214]
[117.82967377 68.68783569]
[114.09620667 54.15453720]
[111.30155945 39.41188812]
[109.45722198 24.52047920]
[108.57077789 9.54149818]
[108.64585876 -5.46350193]
[109.68216705 -20.43286133]
[111.67543793 -35.30506897]
[114.61748505 -50.01900864]
[118.49621582 -64.51422119]
[123.29569244 -78.73113251]
[128.99618530 -92.61133575]
[135.57427979 -106.09778595]
[143.00294495 -119.13506317]
[151.25164795 -131.66960144]
[160.28649902 -143.64988708]
[170.07037354 -155.02668762]
[180.56304932 -165.75325012]
[191.72143555 -175.78550720]
[203.49966431 -185.08222961]
[215.84933472 -193.60522461]
[228.71969604 -201.31944275]
[242.05787659 -208.19320679]
[255.80905151 -214.19827271]
[269.91671753 -219.30995178]
[284.32293701 -223.50723267]
[298.96844482 -226.77288818]
[313.79309082 -229.09349060]
[328.73599243 -230.45950317]
[343.73568726 -230.86531067]
[358.73056030 -230.30924988]
[373.65899658 -228.79359436]
[388.45965576 -226.32458496]
[403.07174683 -222.91236877]
[417.43515015 -218.57095337]
[431.49090576 -213.31819153]
[445.18121338 -207.17565918]
[458.44985962 -200.16860962]
[471.24230957 -192.32582092]
[483.50598145 -183.67953491]
[495.19046021 -174.26527405]
[506.24777222 -164.12171936]
[516.63244629 -153.29057312]
[526.30187988 -141.81631470]
[535.21624756 -129.74612427]
[543.33892822 -117.12957764]
[550.63659668 -104.01852417]
[557.07922363 -90.46685028]
[562.64038086 -76.53022766]
[567.29718018 -62.26594162]
[571.03051758 -47.73259735]
[573.82501221 -32.98992157]
[575.66918945 -18.09848976]
[576.55541992 -3.11949921]
[576.48016357 11.88549995]
[575.44372559 26.85484886]
[573.45025635 41.72703171]
[570.50805664 56.44094086]
[566.62921143 70.93611145]
[561.82952881 85.15296936]
[556.12890625 99.03311157]
[549.55065918 112.51948547]
[542.12182617 125.55668640]
[533.87298584 138.09112549]
[524.83801270 150.07130432]
[515.05401611 161.44799805]
[504.56121826 172.17445374]
[493.40274048 182.20658875]
[481.62438965 191.50317383]
[469.27462769 200.02603149]
[456.40417480 207.74011230]
[443.06591797 214.61372375]
[429.31466675 220.61863708]
[415.20693970 225.73016357]
[400.80072021 229.92729187]
[386.15515137 233.19277954]
[371.33047485 235.51321411]
[356.38757324 236.87905884]
[341.38787842 237.28469849]
[326.39300537 236.72846985]
[311.46456909 235.21264648]
[296.66394043 232.74348450]
[282.05191040 229.33110046]
[267.68853760 224.98953247]
[253.63284302 219.73660278]
[239.94258118 213.59393311]
[226.67402649 206.58673096]
[213.88166809 198.74380493]
[201.61810303 190.09738159]
[189.93371582 180.68298340]
[178.87652588 170.53932190]
[168.49195862 159.70805359]
[158.82269287 148.23368835]
[149.90844727 136.16339111]
[141.78588867 123.54675293]
[134.48835754 110.43562317]
[128.04585266 96.88387299]
[114.11405945 102.44309998]
[105.30867004 113.30388641]
[91.44516754 111.48870087]
[77.51336670 117.04792786]
[63.58156967 122.60715485]
[49.64977264 128.16638184]
[35.71797180 133.72560120]
[21.78617477 139.28483582]
[7.85437584 144.84405518]
[12.50194073 159.11146545]
[16.21622849 173.64979553]
[18.98165894 188.39805603]
[20.78663445 203.29440308]
[21.62358284 218.27633667]
[21.48899651 233.28103638]
[20.38343620 248.24554443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 203]
[89 202]
[90 201]
[91 200]
[92 199]
[93 198]
[94 197]
[96 195]
[97 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
