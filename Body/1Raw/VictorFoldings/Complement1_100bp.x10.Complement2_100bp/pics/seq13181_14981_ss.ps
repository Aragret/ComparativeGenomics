%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[154.66352844 479.62326050]
[148.35545349 465.99368286]
[143.73626709 451.70309448]
[140.87333679 436.95993042]
[139.80841064 421.97915649]
[140.55703735 406.97927856]
[143.10827637 392.17898560]
[147.42494202 377.79412842]
[153.44407654 364.03451538]
[161.07789612 351.10073853]
[170.21508789 339.18145752]
[180.72239685 328.45050049]
[192.44659424 319.06430054]
[205.21672058 311.15979004]
[218.84652710 304.85220337]
[214.23252869 290.57946777]
[209.61851501 276.30676270]
[205.00450134 262.03402710]
[198.72714233 248.41070557]
[190.87538147 235.62985229]
[183.02363586 222.84901428]
[175.17187500 210.06817627]
[167.32011414 197.28732300]
[155.63146973 194.17254639]
[148.98544312 183.58886719]
[151.40676880 170.92001343]
[142.53587341 158.82426453]
[132.53770447 147.64228821]
[122.53953552 136.46031189]
[112.54136658 125.27834320]
[102.54319000 114.09636688]
[89.32199860 109.54755402]
[86.27483368 95.90180206]
[87.16576385 110.87532043]
[79.91297150 124.00532532]
[66.76382446 131.22334290]
[51.79271317 130.29280090]
[39.63861084 121.50202179]
[34.06759644 107.57492828]
[36.80590439 92.82699585]
[47.00504684 81.82801819]
[61.50470352 77.98614502]
[75.81221771 82.49198151]
[67.39759827 70.07448578]
[58.98297882 57.65699005]
[50.56835938 45.23949432]
[42.15373993 32.82199860]
[33.73912048 20.40450478]
[19.59238243 13.32069397]
[18.85790062 -1.55579054]
[10.44328117 -13.97328568]
[2.02866268 -26.39078140]
[-1.85806453 -11.90308475]
[-14.78128433 -4.28794336]
[-29.33798981 -7.90765572]
[-37.18943787 -20.68868637]
[-33.83796692 -35.30948257]
[-21.20344543 -43.39458466]
[-6.52429152 -40.31301498]
[-13.79752064 -53.43170547]
[-21.07075119 -66.55039978]
[-28.34397888 -79.66909790]
[-35.61721039 -92.78778839]
[-49.53374481 -87.14089203]
[-64.02947998 -83.21266174]
[-78.89302826 -81.06038666]
[-93.90763092 -80.71544647]
[-108.85433960 -82.18287659]
[-123.51517487 -85.44127655]
[-137.67634583 -90.44312286]
[-151.13134766 -97.11548615]
[-163.68395996 -105.36105347]
[-175.15112305 -115.05958557]
[-185.36561584 -126.06964874]
[-194.17848206 -138.23068237]
[-201.46119690 -151.36534119]
[-207.10757446 -165.28208923]
[-211.03526306 -179.77796936]
[-213.18699646 -194.64160156]
[-213.53137207 -209.65621948]
[-212.06338501 -224.60287476]
[-208.80442810 -239.26359558]
[-203.80204773 -253.42457581]
[-197.12918091 -266.87933350]
[-188.88314819 -279.43161011]
[-179.18418884 -290.89840698]
[-168.17373657 -301.11251831]
[-156.01237488 -309.92492676]
[-142.87744141 -317.20715332]
[-128.96049500 -322.85299683]
[-114.46446228 -326.78015137]
[-99.60075378 -328.93130493]
[-84.58612061 -329.27514648]
[-69.63952637 -327.80657959]
[-54.97893143 -324.54708862]
[-40.81813049 -319.54418945]
[-27.36363220 -312.87081909]
[-14.81164169 -304.62429810]
[-3.34520364 -294.92492676]
[6.86846685 -283.91409302]
[15.68042469 -271.75241089]
[22.96216583 -258.61718750]
[28.60750198 -244.70002747]
[32.53410339 -230.20384216]
[34.68471527 -215.34005737]
[35.02796936 -200.32540894]
[33.55886459 -185.37887573]
[30.29882050 -170.71839905]
[25.29538155 -156.55778503]
[18.62150955 -143.10353088]
[10.37453270 -130.55184937]
[0.67471439 -119.08577728]
[-10.33649349 -108.87252045]
[-22.49851608 -100.06101990]
[-15.22528553 -86.94232178]
[-7.95205641 -73.82363129]
[-0.67882681 -60.70493698]
[6.59440279 -47.58624268]
[14.44615841 -34.80540085]
[22.86077690 -22.38790512]
[31.27539444 -9.97040939]
[44.82026291 -3.77478170]
[46.15661621 11.98988533]
[54.57123566 24.40738106]
[62.98585510 36.82487488]
[71.40047455 49.24237061]
[79.81509399 61.65986633]
[88.22971344 74.07736206]
[97.45681000 85.90363312]
[110.67800140 90.45244598]
[113.72516632 104.09819794]
[123.72333527 115.28016663]
[133.72151184 126.46214294]
[143.71968079 137.64411926]
[153.71784973 148.82609558]
[151.05273438 134.06475830]
[154.54281616 119.47642517]
[163.59994507 107.51949310]
[176.69787598 100.20891571]
[191.62933350 98.77664948]
[205.87812805 103.46405792]
[217.04309082 113.48123169]
[223.24270630 127.14009857]
[223.43226624 142.13890076]
[217.57978821 155.95007324]
[206.67153931 166.24620056]
[192.54574585 171.29219055]
[177.58285522 170.23771667]
[164.30310059 163.25941467]
[180.56797791 171.89280701]
[180.10096741 189.43557739]
[187.95271301 202.21641541]
[195.80447388 214.99725342]
[203.65623474 227.77810669]
[211.50798035 240.55894470]
[210.82081604 225.57469177]
[215.23390198 211.23857117]
[224.22882080 199.23475647]
[236.74884033 190.97344971]
[251.32313538 187.42518616]
[266.23950195 189.00682068]
[279.74563599 195.53253174]
[290.25479126 206.23568726]
[296.53237915 219.85888672]
[297.84094238 234.80169678]
[294.02673340 249.30865479]
[285.53784180 261.67547607]
[273.37152100 270.44937134]
[258.95709229 274.59951782]
[243.98791504 273.63842773]
[230.22256470 267.67895508]
[219.27723694 257.42001343]
[223.89125061 271.69274902]
[228.50524902 285.96548462]
[233.11926270 300.23822021]
[247.86210632 297.37362671]
[262.84274292 296.30703735]
[277.84274292 297.05395508]
[292.64331055 299.60354614]
[307.02865601 303.91860962]
[320.78894043 309.93618774]
[333.72357178 317.56857300]
[345.64385986 326.70440674]
[356.37600708 337.21051025]
[365.76351929 348.93365479]
[373.66946411 361.70291138]
[379.97857666 375.33200073]
[384.59881592 389.62222290]
[387.46286011 404.36517334]
[388.52890015 419.34588623]
[387.78140259 434.34582520]
[385.23126221 449.14630127]
[380.91567993 463.53146362]
[374.89755249 477.29156494]
[367.26470947 490.22589111]
[358.12841797 502.14584351]
[347.62191772 512.87762451]
[335.89840698 522.26464844]
[323.12887573 530.17010498]
[309.49954224 536.47869873]
[295.20913696 541.09844971]
[280.46606445 543.96191406]
[265.48535156 545.02740479]
[250.48542786 544.27935791]
[235.68504333 541.72863770]
[221.30003357 537.41253662]
[207.54017639 531.39392090]
[194.60612488 523.76055908]
[182.68650818 514.62384033]
[171.95513916 504.11691284]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 175]
[16 174]
[17 173]
[18 172]
[19 155]
[20 154]
[21 153]
[22 152]
[23 151]
[26 149]
[27 135]
[28 134]
[29 133]
[30 132]
[31 131]
[33 129]
[43 128]
[44 127]
[45 126]
[46 125]
[47 124]
[48 123]
[50 121]
[51 120]
[52 119]
[59 118]
[60 117]
[61 116]
[62 115]
[63 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
