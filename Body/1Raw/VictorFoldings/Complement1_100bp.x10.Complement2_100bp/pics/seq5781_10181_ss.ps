%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[34.55160141 295.12826538]
[39.02355576 309.46719360]
[41.66305161 324.25354004]
[42.42846298 339.25411987]
[41.30771637 354.23236084]
[38.31848907 368.95199585]
[33.50792313 383.18087769]
[26.95189285 396.69464111]
[18.75379181 409.28012085]
[9.04291725 420.73886108]
[-2.02757573 430.89007568]
[-14.28309059 439.57373047]
[-27.53033829 446.65280151]
[-41.56039429 452.01571655]
[-56.15197754 455.57788086]
[-71.07496643 457.28305054]
[-86.09400177 457.10440063]
[-100.97220612 455.04473877]
[-115.47492981 451.13650513]
[-129.37344360 445.44140625]
[-142.44856262 438.04919434]
[-154.49404907 429.07647705]
[-165.31994629 418.66479492]
[-174.75550842 406.97833252]
[-182.65193176 394.20141602]
[-188.88465881 380.53552246]
[-193.35540771 366.19622803]
[-195.99365234 351.40966797]
[-196.75781250 336.40899658]
[-195.63580322 321.43087769]
[-192.64533997 306.71148682]
[-187.83357239 292.48300171]
[-181.27639771 278.96978760]
[-173.07723999 266.38500977]
[-163.36540222 254.92709351]
[-152.29405212 244.77679443]
[-140.03781128 236.09419250]
[-126.78996277 229.01620483]
[-112.75946045 223.65447998]
[-98.16757202 220.09356689]
[-83.24444580 218.38963318]
[-68.22542572 218.56954956]
[-53.34739685 220.63047791]
[-38.84499741 224.53991699]
[-24.94695854 230.23620605]
[-11.87246799 237.62950134]
[-2.91177201 225.60012817]
[6.04892397 213.57075500]
[15.00961971 201.54136658]
[23.97031593 189.51199341]
[32.93101120 177.48262024]
[41.89170837 165.45324707]
[50.85240555 153.42385864]
[59.81309891 141.39448547]
[68.77379608 129.36511230]
[77.73448944 117.33573151]
[86.69519043 105.30635071]
[88.51278687 91.44316864]
[101.27543640 85.73294830]
[89.66743469 76.22853851]
[78.50739288 66.20193481]
[67.81876373 55.67422485]
[57.62403870 44.66754532]
[47.94465256 33.20504379]
[38.80096054 21.31082916]
[30.21219444 9.00991344]
[22.19641304 -3.67183375]
[14.77047825 -16.70774269]
[7.95000410 -30.07039833]
[1.74933434 -43.73169708]
[-3.81849027 -57.66291428]
[-8.74176121 -71.83474731]
[-13.01012325 -86.21739197]
[-16.61460114 -100.78060913]
[-19.54761505 -115.49375916]
[-21.80299568 -130.32591248]
[-23.37600136 -145.24586487]
[-24.26332092 -160.22224426]
[-24.46309090 -175.22357178]
[-23.97489166 -190.21827698]
[-22.79974937 -205.17481995]
[-20.94013405 -220.06176758]
[-18.39995766 -234.84780884]
[-15.18456078 -249.50184631]
[-11.30070782 -263.99304199]
[-6.75656509 -278.29095459]
[-1.56168914 -292.36550903]
[4.27299452 -306.18707275]
[10.73521614 -319.72662354]
[17.81138420 -332.95565796]
[25.48661995 -345.84634399]
[33.74478149 -358.37161255]
[42.56849670 -370.50509644]
[51.93921661 -382.22128296]
[61.83723068 -393.49554443]
[72.24172211 -404.30413818]
[83.13081360 -414.62438965]
[94.48159790 -424.43453979]
[106.27021790 -433.71395874]
[118.47187042 -442.44317627]
[131.06089783 -450.60382080]
[144.01081848 -458.17868042]
[157.29441833 -465.15188599]
[170.88372803 -471.50875854]
[184.75021362 -477.23593140]
[198.86466980 -482.32131958]
[213.19744873 -486.75427246]
[227.71838379 -490.52548218]
[242.39694214 -493.62695312]
[257.20227051 -496.05221558]
[272.10321045 -497.79614258]
[287.06845093 -498.85510254]
[302.06646729 -499.22680664]
[317.06579590 -498.91052246]
[332.03482056 -497.90692139]
[346.94213867 -496.21807861]
[361.75631714 -493.84756470]
[376.44622803 -490.80038452]
[390.98101807 -487.08288574]
[405.33007812 -482.70294189]
[419.46325684 -477.66976929]
[433.35079956 -471.99389648]
[446.96353149 -465.68731689]
[460.27279663 -458.76327515]
[473.25064087 -451.23629761]
[485.86975098 -443.12225342]
[498.10357666 -434.43823242]
[509.92642212 -425.20242310]
[521.31341553 -415.43429565]
[532.24060059 -405.15438843]
[542.68493652 -394.38433838]
[552.62457275 -383.14672852]
[562.03851318 -371.46527100]
[570.90704346 -359.36450195]
[579.21148682 -346.86984253]
[586.93426514 -334.00759888]
[594.05932617 -320.80480957]
[600.57153320 -307.28927612]
[606.45727539 -293.48934937]
[611.70416260 -279.43411255]
[616.30114746 -265.15310669]
[620.23852539 -250.67634583]
[623.50805664 -236.03430176]
[626.10290527 -221.25775146]
[628.01751709 -206.37777710]
[629.24792480 -191.42567444]
[629.79156494 -176.43287659]
[629.64727783 -161.43092346]
[628.81530762 -146.45137024]
[627.29748535 -131.52569580]
[625.09692383 -116.68530273]
[622.21832275 -101.96141052]
[618.66772461 -87.38497162]
[614.45257568 -72.98664856]
[609.58172607 -58.79671097]
[604.06542969 -44.84500504]
[597.91528320 -31.16087723]
[591.14428711 -17.77309799]
[583.76660156 -4.70982742]
[575.79772949 8.00146580]
[567.25451660 20.33404732]
[558.15484619 32.26198196]
[548.51788330 43.76018524]
[538.36389160 54.80447769]
[527.71429443 65.37163544]
[516.59136963 75.43942261]
[505.01858521 84.98667908]
[493.02026367 93.99332428]
[480.62164307 102.44042206]
[467.84878540 110.31019592]
[454.72854614 117.58609772]
[441.28851318 124.25283051]
[427.55697632 130.29638672]
[413.56280518 135.70402527]
[399.33544922 140.46440125]
[384.90478516 144.56748962]
[370.30117798 148.00466919]
[355.55532837 150.76870728]
[340.69830322 152.85379028]
[325.76126099 154.25553894]
[310.77569580 154.97100830]
[295.77307129 154.99867249]
[280.78497314 154.33848572]
[265.84286499 152.99185181]
[250.97824097 150.96157837]
[236.22230530 148.25195312]
[221.60612488 144.86866760]
[207.16043091 140.81883240]
[192.91558838 136.11097717]
[178.90156555 130.75498962]
[165.14782715 124.76213074]
[151.68331909 118.14501190]
[138.53633118 110.91755676]
[125.73451996 103.09494781]
[113.30480957 94.69364929]
[111.48721313 108.55683136]
[98.72456360 114.26705170]
[89.76387024 126.29642487]
[80.80317688 138.32580566]
[71.84247589 150.35517883]
[62.88178253 162.38455200]
[53.92108536 174.41394043]
[44.96038818 186.44331360]
[35.99969482 198.47268677]
[27.03899765 210.50207520]
[18.07830238 222.53144836]
[9.11760521 234.56082153]
[0.15690967 246.59020996]
[10.98368359 257.00097656]
[20.42023087 268.68664551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 208]
[47 207]
[48 206]
[49 205]
[50 204]
[51 203]
[52 202]
[53 201]
[54 200]
[55 199]
[56 198]
[57 197]
[59 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
