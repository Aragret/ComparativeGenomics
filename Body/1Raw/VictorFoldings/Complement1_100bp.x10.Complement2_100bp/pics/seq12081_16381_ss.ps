%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[65.56272125 510.97454834]
[72.28936768 497.16702271]
[85.02754974 488.58599854]
[83.91189575 473.62753296]
[82.79624939 458.66909790]
[81.68060303 443.71063232]
[80.56495667 428.75216675]
[79.44930267 413.79373169]
[68.80158997 399.84405518]
[76.93480682 383.32339478]
[68.09288788 371.33715820]
[74.56814575 356.90173340]
[66.33776093 369.44210815]
[52.67772675 375.63916016]
[37.82075119 373.57266235]
[26.37043762 363.88296509]
[21.87478256 349.57250977]
[25.72681808 335.07556152]
[36.73294830 324.88412476]
[51.48280334 322.15615845]
[65.40598297 327.73693848]
[74.18831635 339.89746094]
[67.02703857 326.83740234]
[75.37283325 313.39648438]
[68.21154785 300.33639526]
[76.55734253 286.89547729]
[77.22712708 271.91046143]
[77.89691162 256.92541504]
[78.56669617 241.94036865]
[79.23648071 226.95533752]
[72.07520294 213.89526367]
[80.42099762 200.45434570]
[81.09078217 185.46931458]
[70.08057404 195.65632629]
[55.10478973 196.50839233]
[43.01016617 187.63595581]
[39.32619476 173.09538269]
[45.73714066 159.53442383]
[59.31200409 153.15295410]
[73.84454346 156.86851501]
[82.69119263 168.98416138]
[84.91631317 154.15011597]
[77.62267303 138.18861389]
[89.21295166 123.87963867]
[91.21697235 109.01410675]
[92.88851166 94.10753632]
[94.22674561 79.16735077]
[81.77505493 70.28462982]
[75.48289490 56.45330429]
[76.94893646 41.42942047]
[85.67980957 29.23811531]
[99.24928284 23.09523392]
[100.58751678 8.15504932]
[101.92575073 -6.78513575]
[103.26398468 -21.72532082]
[104.60221863 -36.66550446]
[105.94045258 -51.60569000]
[107.27868652 -66.54587555]
[108.61692047 -81.48606110]
[109.62117767 -96.45240784]
[110.29096222 -111.43744659]
[110.96074677 -126.42248535]
[111.63053131 -141.40751648]
[112.30032349 -156.39256287]
[105.18695068 -170.52445984]
[113.48483276 -182.89353943]
[114.04304504 -197.88314819]
[114.48964691 -212.87651062]
[114.93625641 -227.86985779]
[107.61326599 -241.89427185]
[115.72607422 -254.38554382]
[116.17268372 -269.37887573]
[108.84969330 -283.40332031]
[116.96250153 -295.89456177]
[117.40911102 -310.88790894]
[105.77717590 -301.41702271]
[90.84179688 -302.80783081]
[81.15863037 -314.26367188]
[82.27463531 -329.22210693]
[93.55052185 -339.11425781]
[108.52693176 -338.27343750]
[118.62438965 -327.18225098]
[120.40685272 -342.07595825]
[122.18932343 -356.96966553]
[123.97178650 -371.86337280]
[117.92919922 -386.48519897]
[127.12406921 -398.20288086]
[128.90653992 -413.09658813]
[130.68901062 -427.99029541]
[132.47146606 -442.88403320]
[132.80644226 -457.88027954]
[131.69079590 -472.83874512]
[130.57514954 -487.79718018]
[129.45950317 -502.75564575]
[128.34385681 -517.71411133]
[113.81391144 -522.10101318]
[101.85229492 -531.44366455]
[94.07672119 -544.47839355]
[91.53875732 -559.44244385]
[94.58165741 -574.31207275]
[102.79389191 -587.07623291]
[115.06481934 -596.00866699]
[129.73489380 -599.90142822]
[144.82011414 -598.22790527]
[158.28033447 -591.21459961]
[168.29515076 -579.80987549]
[173.51016235 -565.55615234]
[173.22006226 -550.38116455]
[167.46411133 -536.33715820]
[157.02072144 -525.32354736]
[143.30230713 -518.82977295]
[144.41795349 -503.87127686]
[145.53359985 -488.91284180]
[146.64924622 -473.95437622]
[147.76489258 -458.99594116]
[154.64491272 -472.32504272]
[166.30046082 -481.76690674]
[180.76734924 -485.73034668]
[195.60766602 -483.54751587]
[208.32057190 -475.58621216]
[216.76370239 -463.18807983]
[219.51423645 -448.44241333]
[216.10867310 -433.83413696]
[207.12091064 -421.82495117]
[194.06553650 -414.43869019]
[179.14260864 -412.91998291]
[164.86691284 -417.52484131]
[153.64414978 -427.47720337]
[147.36518860 -441.10156250]
[145.58271790 -426.20785522]
[143.80026245 -411.31411743]
[142.01779175 -396.42041016]
[148.18786621 -382.86389160]
[138.86550903 -370.08093262]
[137.08303833 -355.18719482]
[135.30056763 -340.29348755]
[133.51811218 -325.39978027]
[132.40246582 -310.44131470]
[131.95585632 -295.44796753]
[139.31079102 -282.49597168]
[131.16603088 -268.93228149]
[130.71942139 -253.93893433]
[138.07435608 -240.98693848]
[129.92961121 -227.42324829]
[129.48300171 -212.42990112]
[129.03639221 -197.43655396]
[131.97935486 -190.65710449]
[128.46986389 -182.22375488]
[135.63114929 -169.16369629]
[127.28536224 -155.72277832]
[126.61557007 -140.73773193]
[125.94578552 -125.75270081]
[125.27600098 -110.76766205]
[124.60621643 -95.78262329]
[126.70299530 -92.94786072]
[127.53090668 -88.95667267]
[126.56137848 -84.41648102]
[123.55710602 -80.14782715]
[122.21887207 -65.20764160]
[120.88063812 -50.26745605]
[119.54240417 -35.32727051]
[118.20417023 -20.38708687]
[116.86593628 -5.44690132]
[115.52770233 9.49328327]
[114.18946838 24.43346786]
[126.45121765 32.89012527]
[132.87646484 46.43900681]
[131.64912415 61.48427200]
[122.99903107 73.97717285]
[109.16693115 80.50558472]
[107.82869720 95.44577026]
[109.85711670 98.72569275]
[110.42994690 102.88378143]
[109.18740845 107.24991608]
[106.08249664 111.01811981]
[104.07848358 125.88365173]
[111.26365662 136.59513855]
[109.28846741 148.93542480]
[99.75035858 156.37524414]
[97.52523804 171.20928955]
[96.07582092 186.13909912]
[95.40603638 201.12413025]
[102.51940918 215.25602722]
[94.22151947 227.62512207]
[93.55173492 242.61015320]
[92.88195038 257.59518433]
[92.21216583 272.58023071]
[91.54238129 287.56527710]
[98.65575409 301.69717407]
[90.35787201 314.06625366]
[97.47124481 328.19815063]
[89.17335510 340.56723022]
[89.50833130 355.56350708]
[98.44596863 368.61834717]
[91.87499237 381.98516846]
[101.25414276 390.83923340]
[102.06118774 403.31048584]
[94.40776062 412.67807007]
[95.52340698 427.63653564]
[96.63905334 442.59497070]
[97.75470734 457.55343628]
[98.87035370 472.51190186]
[99.98600006 487.47033691]
[113.85617065 494.06686401]
[122.55661774 506.72378540]
[123.74696350 522.03649902]
[117.10700989 535.88592529]
[104.42287445 544.54663086]
[89.10652161 545.68896484]
[75.27797699 539.00561523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[5 201]
[6 200]
[7 199]
[8 198]
[10 195]
[12 193]
[22 192]
[24 190]
[26 188]
[27 187]
[28 186]
[29 185]
[30 184]
[32 182]
[33 181]
[41 180]
[42 179]
[44 176]
[45 175]
[46 171]
[47 170]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[66 148]
[67 146]
[68 145]
[69 144]
[71 142]
[72 141]
[74 139]
[75 138]
[82 137]
[83 136]
[84 135]
[85 134]
[87 132]
[88 131]
[89 130]
[90 129]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
