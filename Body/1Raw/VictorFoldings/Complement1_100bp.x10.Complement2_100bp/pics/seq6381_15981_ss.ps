%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[106.85796356 781.09869385]
[92.35976410 777.22509766]
[78.18300629 772.30352783]
[64.40332031 766.36022949]
[51.09423065 759.42694092]
[38.32674408 751.54064941]
[26.16898346 742.74340820]
[14.68581867 733.08221436]
[3.93851542 722.60852051]
[-6.01558352 711.37829590]
[-15.12336826 699.45135498]
[-23.33624458 686.89147949]
[-30.61039162 673.76556396]
[-36.90700150 660.14373779]
[-42.19247437 646.09857178]
[-46.43861008 631.70507812]
[-49.62275696 617.04003906]
[-51.72792435 602.18170166]
[-52.74287796 587.20928955]
[-52.66220474 572.20275879]
[-51.48633575 557.24218750]
[-49.22154236 542.40728760]
[-45.87991333 527.77734375]
[-41.47927094 513.43029785]
[-36.04309845 499.44281006]
[-29.60040283 485.88943481]
[-22.18555450 472.84249878]
[-13.83811665 460.37161255]
[-4.60262871 448.54333496]
[5.47163534 437.42077637]
[16.33092308 427.06326294]
[27.91729736 417.52603149]
[40.16893387 408.86001587]
[53.02046967 401.11145020]
[66.40333557 394.32165527]
[80.24612427 388.52685547]
[94.47497559 383.75799561]
[109.01397705 380.04049683]
[123.78555298 377.39419556]
[122.22503662 362.47558594]
[120.66451263 347.55697632]
[119.10398865 332.63836670]
[110.08459473 320.78512573]
[116.34420776 306.25488281]
[114.78368378 291.33627319]
[103.08737183 282.18576050]
[101.29225922 267.07839966]
[110.96945953 254.87228394]
[101.95006561 243.01902771]
[108.20967865 228.48878479]
[106.64916229 213.57017517]
[105.08863831 198.65158081]
[90.19971466 188.00094604]
[87.78262329 169.53285217]
[99.83538818 154.91624451]
[97.83137512 140.05072021]
[95.82735443 125.18519592]
[93.82334137 110.31966400]
[91.59822845 95.48561859]
[89.15249634 80.68634796]
[86.70677185 65.88707733]
[84.26104736 51.08781052]
[81.81531525 36.28853989]
[67.05148315 32.78069687]
[54.78849030 23.91153717]
[46.87677383 11.05780697]
[44.49543381 -3.80546427]
[47.97660446 -18.40842056]
[56.75951385 -30.53302002]
[69.48056793 -38.34992981]
[67.03483582 -53.14920044]
[64.58911133 -67.94847107]
[62.14338303 -82.74774170]
[52.25952530 -95.10168457]
[57.81812286 -108.92019653]
[53.33136749 -116.87676239]
[55.44786072 -123.95787811]
[53.22274399 -138.79191589]
[39.95721817 -143.22909546]
[29.94541740 -152.90277100]
[25.10155296 -165.88412476]
[26.31750488 -179.61985779]
[33.29919052 -191.43446350]
[44.63503265 -199.05126953]
[42.63101578 -213.91680908]
[33.11936569 -226.55955505]
[39.08692551 -240.20643616]
[37.08291245 -255.07196045]
[35.07889938 -269.93750000]
[33.07488632 -284.80300903]
[31.07087135 -299.66854858]
[16.15813828 -302.13873291]
[2.63677502 -308.89624023]
[-8.29090500 -319.34024048]
[-15.65322113 -332.54205322]
[-18.79552078 -347.32775879]
[-17.43839455 -362.38265991]
[-11.70251369 -376.36804199]
[-2.09791136 -388.04037476]
[10.52137756 -396.36172485]
[25.03325653 -400.59219360]
[40.14733505 -400.35559082]
[54.51968384 -395.67294312]
[66.87232208 -386.96069336]
[76.10686493 -374.99343872]
[81.40217590 -360.83535767]
[82.28739929 -345.74539185]
[78.68383026 -331.06527710]
[70.91188812 -318.10037231]
[59.66265488 -308.00354004]
[45.93640137 -301.67254639]
[47.94041443 -286.80703735]
[49.94442749 -271.94149780]
[51.94844055 -257.07598877]
[53.95245361 -242.21044922]
[63.32076645 -230.63098145]
[57.49654388 -215.92082214]
[59.50056076 -201.05528259]
[74.59417725 -195.28509521]
[84.77693176 -182.61752319]
[87.19575500 -166.45069885]
[81.09681702 -151.18313599]
[68.05678558 -141.01704407]
[70.28190613 -126.18299103]
[72.61739349 -111.36592865]
[82.32631683 -100.07052612]
[76.94264984 -85.19347382]
[79.38838196 -70.39420319]
[81.83410645 -55.59492874]
[84.27983856 -40.79565811]
[98.83947754 -37.48715210]
[111.05628204 -28.83296776]
[119.05061340 -16.12645340]
[121.57789612 -1.28730059]
[118.22231293 13.42846394]
[109.46484375 25.77146721]
[96.61458588 33.84281158]
[99.06031799 48.64208221]
[101.50604248 63.44135284]
[103.95176697 78.24062347]
[106.39749908 93.03989410]
[109.85940552 96.98059845]
[110.86698151 102.58042908]
[108.68887329 108.31565094]
[110.69288635 123.18118286]
[112.69689941 138.04670715]
[114.70091248 152.91223145]
[125.37727356 158.14215088]
[132.13421631 167.77774048]
[133.38786316 179.35885620]
[128.94177246 189.99597168]
[120.00724030 197.09104919]
[121.56776428 212.00965881]
[123.12828827 226.92826843]
[132.25930786 239.84860229]
[125.88806915 253.31175232]
[137.88172913 263.25106812]
[139.25180054 278.40286255]
[129.70228577 289.77575684]
[131.26281738 304.69436646]
[140.39382935 317.61468506]
[134.02259827 331.07785034]
[135.58311462 345.99645996]
[137.14363098 360.91506958]
[138.70416260 375.83367920]
[153.70361328 375.36584473]
[168.69720459 375.99417114]
[183.60491943 377.71527100]
[198.34724426 380.51998901]
[212.84548950 384.39337158]
[227.02233887 389.31469727]
[240.80212402 395.25775146]
[254.11132812 402.19082642]
[266.87893677 410.07693481]
[279.03683472 418.87396240]
[290.52017212 428.53500366]
[301.26763916 439.00848389]
[311.22192383 450.23855591]
[320.32989502 462.16531372]
[328.54299927 474.72506714]
[335.81735229 487.85086060]
[342.11419678 501.47259521]
[347.39990234 515.51770020]
[351.64627075 529.91107178]
[354.83065796 544.57611084]
[356.93606567 559.43438721]
[357.95126343 574.40679932]
[357.87084961 589.41333008]
[356.69522095 604.37396240]
[354.43066406 619.20886230]
[351.08926392 633.83886719]
[346.68887329 648.18591309]
[341.25292969 662.17352295]
[334.81045532 675.72705078]
[327.39581299 688.77404785]
[319.04858398 701.24511719]
[309.81329346 713.07354736]
[299.73919678 724.19622803]
[288.88009644 734.55395508]
[277.29388428 744.09136963]
[265.04238892 752.75756836]
[252.19096375 760.50634766]
[238.80821228 767.29638672]
[224.96553040 773.09136963]
[210.73675537 777.86047363]
[196.19781494 781.57824707]
[181.42626953 784.22479248]
[166.50096130 785.78601074]
[151.50149536 786.25360107]
[136.50791931 785.62500000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 165]
[40 164]
[41 163]
[42 162]
[44 160]
[45 159]
[48 156]
[50 154]
[51 153]
[52 152]
[55 147]
[56 146]
[57 145]
[58 144]
[59 141]
[60 140]
[61 139]
[62 138]
[63 137]
[70 130]
[71 129]
[72 128]
[73 127]
[75 125]
[77 124]
[78 123]
[84 118]
[85 117]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
