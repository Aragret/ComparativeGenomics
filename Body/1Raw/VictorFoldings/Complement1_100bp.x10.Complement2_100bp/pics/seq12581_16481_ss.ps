%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-9.75098324 431.77151489]
[-9.33926868 446.81860352]
[-11.96528244 461.64053345]
[-17.52149200 475.63027954]
[-25.78037262 488.21502686]
[-36.40372849 498.87942505]
[-48.95653915 507.18673706]
[-62.92477798 512.79687500]
[-77.73645020 515.47998047]
[-92.78503418 515.12628174]
[-107.45429230 511.75021362]
[-121.14352417 505.49005127]
[-133.29217529 496.60214233]
[-143.40277100 485.45040894]
[-151.06126404 472.49154663]
[-155.95407104 458.25619507]
[-157.88081360 443.32727051]
[-156.76260376 428.31613159]
[-152.64523315 413.83743286]
[-145.69729614 400.48413086]
[-136.20330811 388.80297852]
[-124.55205536 379.27233887]
[-111.22064209 372.28247070]
[-96.75497437 368.11962891]
[-81.74741364 366.95425415]
[-66.81251526 368.83407593]
[-61.98651886 354.63162231]
[-57.16052246 340.42916870]
[-52.33452225 326.22671509]
[-47.50852585 312.02423096]
[-58.40819931 322.32943726]
[-71.93180847 328.81881714]
[-86.79037476 330.87384033]
[-101.56766510 328.29864502]
[-114.85520935 321.33865356]
[-125.38652039 310.65728760]
[-132.15782166 297.27261353]
[-134.52371216 282.46038818]
[-132.25869751 267.63238525]
[-125.57865906 254.20191956]
[-115.12029266 243.44912720]
[-101.88043213 236.39888000]
[-87.12101746 233.72314453]
[-72.24880981 235.67698669]
[-58.68133926 242.07415771]
[-47.71177292 252.30491638]
[-40.38565826 265.39416504]
[-37.40127563 280.09426880]
[-39.04336929 295.00524902]
[-30.72142601 282.52545166]
[-22.49261856 269.98403931]
[-14.26381111 257.44265747]
[-6.03500319 244.90126038]
[2.19380474 232.35984802]
[10.42261219 219.81845093]
[18.65142059 207.27705383]
[26.88022804 194.73565674]
[27.92136383 187.41870117]
[35.32607651 182.07005310]
[43.74069595 169.65255737]
[40.68667221 155.11953735]
[49.04339981 142.40655518]
[64.30767059 139.30175781]
[72.72229004 126.88426208]
[81.13690948 114.46676636]
[89.55152893 102.04927063]
[96.92221832 88.98508453]
[103.19957733 75.36177063]
[109.37534332 61.69210052]
[115.44918060 47.97683334]
[121.52301788 34.26156998]
[127.59684753 20.54630089]
[133.67068481 6.83103514]
[139.53964233 -6.97314167]
[145.20242310 -20.86316872]
[150.86521912 -34.75319672]
[148.91029358 -50.45315933]
[160.87983704 -59.31765747]
[166.54261780 -73.20768738]
[172.20541382 -87.09770966]
[177.86819458 -100.98773956]
[183.53097534 -114.87776184]
[189.19377136 -128.76779175]
[181.18533325 -145.93692017]
[188.15019226 -163.21128845]
[205.23184204 -169.79406738]
[210.47856140 -183.84654236]
[215.72526550 -197.89901733]
[220.97198486 -211.95147705]
[226.21870422 -226.00395203]
[212.82739258 -232.79753113]
[200.28092957 -241.04776001]
[188.73710632 -250.65089417]
[178.34111023 -261.48617554]
[169.22366333 -273.41732788]
[161.49945068 -286.29428101]
[155.26559448 -299.95513916]
[150.60049438 -314.22808838]
[147.56282043 -328.93362427]
[146.19076538 -343.88677979]
[146.50161743 -358.89956665]
[148.49142456 -373.78314209]
[152.13519287 -388.35034180]
[157.38708496 -402.41793823]
[164.18104553 -415.80905151]
[172.43165588 -428.35525513]
[182.03514099 -439.89880371]
[192.87072754 -450.29446411]
[204.80215454 -459.41156006]
[217.67935181 -467.13540649]
[231.34039307 -473.36883545]
[245.61347961 -478.03350830]
[260.31909180 -481.07073975]
[275.27230835 -482.44235229]
[290.28506470 -482.13107300]
[305.16857910 -480.14080811]
[319.73565674 -476.49661255]
[333.80313110 -471.24429321]
[347.19403076 -464.44992065]
[359.73999023 -456.19894409]
[371.28323364 -446.59512329]
[381.67858887 -435.75921631]
[390.79531860 -423.82751465]
[398.51876831 -410.95007324]
[404.75183105 -397.28884888]
[409.41607666 -383.01562500]
[412.45285034 -368.30993652]
[413.82400513 -353.35665894]
[413.51226807 -338.34390259]
[411.52157593 -323.46044922]
[407.87692261 -308.89349365]
[402.62420654 -294.82620239]
[395.82943726 -281.43548584]
[387.57806396 -268.88977051]
[377.97390747 -257.34680176]
[367.13769531 -246.95178223]
[355.20571899 -237.83540344]
[342.32806396 -230.11233521]
[328.66662598 -223.87969971]
[314.39328003 -219.21588135]
[299.68746948 -216.17953491]
[284.73419189 -214.80882263]
[269.72143555 -215.12101746]
[254.83804321 -217.11216736]
[240.27117920 -220.75723267]
[235.02445984 -206.70477295]
[229.77774048 -192.65229797]
[224.53102112 -178.59982300]
[219.28430176 -164.54734802]
[226.15740967 -155.44094849]
[227.79809570 -144.02937317]
[223.68424988 -133.13121033]
[214.72964478 -125.49470520]
[203.08378601 -123.10500336]
[197.42100525 -109.21498108]
[191.75822449 -95.32495117]
[186.09542847 -81.43492126]
[180.43264771 -67.54489899]
[174.76986694 -53.65486908]
[177.12982178 -38.94841385]
[164.75524902 -29.09040833]
[159.09245300 -15.20038223]
[153.42967224 -1.31035531]
[154.42335510 3.36100769]
[152.49307251 8.70619392]
[147.38595581 12.90486908]
[141.31211853 26.62013626]
[135.23828125 40.33540344]
[129.16444397 54.05067062]
[123.09061432 67.76593781]
[123.25643158 75.15473175]
[116.82289124 81.63912964]
[110.54553223 95.26245117]
[123.41146851 87.55092621]
[138.38191223 86.60967255]
[152.11241150 92.64897919]
[161.53555298 104.31964111]
[164.54618835 119.01440430]
[160.47171021 133.45042419]
[150.22238159 144.40266418]
[136.08793640 149.42434692]
[121.22603607 147.39361572]
[108.95686340 138.76417542]
[102.02139282 125.46382141]
[101.96902466 110.46389008]
[93.55440521 122.88138580]
[85.13978577 135.29888916]
[76.72516632 147.71638489]
[79.49864197 163.04431152]
[70.78812408 175.51754761]
[56.15819168 178.06716919]
[47.74357224 190.48466492]
[39.42162704 202.96446228]
[31.19282150 215.50585938]
[22.96401215 228.04725647]
[14.73520470 240.58865356]
[6.50639725 253.13006592]
[-1.72241068 265.67144775]
[-9.95121861 278.21286011]
[-18.18002701 290.75427246]
[-20.27132797 299.64605713]
[-26.62587547 303.41986084]
[-33.30606842 316.85025024]
[-38.13206863 331.05270386]
[-42.95806503 345.25515747]
[-47.78406143 359.45761108]
[-52.61006165 373.66006470]
[-39.62176514 381.26855469]
[-28.43114662 391.33605957]
[-19.49645805 403.45037842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 207]
[27 206]
[28 205]
[29 204]
[30 203]
[49 202]
[50 200]
[51 199]
[52 198]
[53 197]
[54 196]
[55 195]
[56 194]
[57 193]
[59 192]
[60 191]
[63 188]
[64 187]
[65 186]
[66 185]
[67 173]
[68 172]
[69 170]
[70 169]
[71 168]
[72 167]
[73 166]
[74 163]
[75 162]
[76 161]
[78 159]
[79 158]
[80 157]
[81 156]
[82 155]
[83 154]
[86 149]
[87 148]
[88 147]
[89 146]
[90 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
