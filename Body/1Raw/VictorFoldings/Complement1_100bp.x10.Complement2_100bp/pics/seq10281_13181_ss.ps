%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[137.44937134 777.13824463]
[133.41679382 762.41748047]
[136.17910767 747.40643311]
[145.18786621 735.08551025]
[158.65435791 727.90106201]
[157.98457336 712.91601562]
[157.31478882 697.93096924]
[156.64500427 682.94592285]
[155.97521973 667.96087646]
[155.30543518 652.97583008]
[154.63565063 637.99078369]
[153.96586609 623.00579834]
[153.29608154 608.02075195]
[152.06910706 593.07098389]
[150.28663635 578.17730713]
[134.92335510 576.86566162]
[120.16050720 572.39538574]
[106.64041138 564.95855713]
[94.95185089 554.87634277]
[85.60437012 542.58514404]
[79.00612640 528.61785889]
[75.44601440 513.58044434]
[75.08106232 498.12606812]
[77.92945862 482.92626953]
[83.86971283 468.64221191]
[92.64579773 455.89556885]
[103.87820435 445.24176025]
[117.08032990 437.14547729]
[131.67959595 431.96063232]
[129.67558289 417.09509277]
[127.67156982 402.22958374]
[125.66755676 387.36404419]
[123.66354370 372.49853516]
[114.29522705 360.91906738]
[120.11945343 346.20889282]
[103.92656708 342.32995605]
[90.43587494 332.50735474]
[81.73358154 318.22518921]
[79.17881775 301.65972900]
[83.19142151 285.34793091]
[93.18324280 271.79888916]
[107.64420319 263.10797119]
[105.19847107 248.30868530]
[102.75274658 233.50941467]
[100.30702209 218.71014404]
[97.86128998 203.91087341]
[95.41556549 189.11160278]
[92.96984100 174.31233215]
[87.00498962 188.07534790]
[75.71611023 197.95265198]
[61.28290939 202.03710938]
[46.49221039 199.54005432]
[34.19986725 190.94364929]
[26.77933884 177.90769958]
[25.66341019 162.94926453]
[31.06755257 148.95658875]
[41.94830704 138.63140869]
[56.20477676 133.96739197]
[71.08425140 135.86505127]
[83.71374512 143.95800781]
[91.65512085 156.68482971]
[77.27195740 152.59507751]
[64.43686676 144.92292786]
[54.02408218 134.19094849]
[46.74285126 121.13012695]
[43.08911896 106.63007355]
[43.31174850 91.67842102]
[47.39558411 77.29357147]
[55.06245804 64.45532990]
[65.79015350 54.03813553]
[78.84798431 46.75153732]
[93.34654236 43.09184647]
[93.56987000 28.09350967]
[86.03888702 14.17967033]
[93.96482086 1.56900609]
[91.08353424 -4.38160086]
[91.56732178 -10.04401875]
[94.42472839 -13.87080097]
[95.09451294 -28.85584068]
[87.98114014 -42.98773575]
[96.27902222 -55.35682678]
[96.94880676 -70.34186554]
[97.61859131 -85.32690430]
[98.06520081 -100.32025146]
[98.28852844 -115.31858826]
[84.00720215 -123.65139771]
[75.92317963 -137.96725464]
[76.16041565 -154.31231689]
[84.55948639 -168.22674561]
[98.74688721 -175.96173096]
[98.74688721 -190.96173096]
[98.74688721 -205.96173096]
[98.74688721 -220.96173096]
[98.74688721 -235.96173096]
[98.74688721 -250.96173096]
[84.24936676 -255.20420837]
[71.53508759 -263.36041260]
[61.63474274 -274.76916504]
[55.35089874 -288.50561523]
[53.19296646 -303.45620728]
[55.33588028 -318.40896606]
[61.60591888 -332.15170288]
[71.49480438 -343.57040405]
[84.20088196 -351.73937988]
[98.69412994 -355.99642944]
[113.79964447 -355.99642944]
[128.29289246 -351.73937988]
[140.99897766 -343.57040405]
[150.88786316 -332.15170288]
[157.15789795 -318.40896606]
[159.30081177 -303.45620728]
[157.14288330 -288.50561523]
[150.85903931 -274.76916504]
[140.95869446 -263.36041260]
[128.24441528 -255.20420837]
[113.74688721 -250.96173096]
[113.74688721 -235.96173096]
[113.74688721 -220.96173096]
[113.74688721 -205.96173096]
[113.74688721 -190.96173096]
[113.74688721 -175.96173096]
[125.99871826 -169.92767334]
[134.49626160 -159.15174866]
[137.53640747 -145.70159912]
[134.47029114 -132.18949890]
[125.84066010 -121.26495361]
[113.28686523 -115.09526062]
[113.06353760 -100.09692383]
[115.68810272 -96.10684967]
[115.83399963 -90.42567444]
[112.60363007 -84.65711975]
[111.93384552 -69.67208099]
[111.26406097 -54.68704224]
[118.42534637 -41.62697601]
[110.07955170 -28.18605423]
[109.40976715 -13.20101643]
[108.96315765 1.79233384]
[116.51010895 14.63339233]
[108.56820679 28.31683731]
[108.34487915 43.31517410]
[122.72804260 47.40491867]
[135.56314087 55.07706833]
[145.97592163 65.80904388]
[153.25715637 78.86987305]
[156.91088867 93.36992645]
[156.68824768 108.32157898]
[152.60441589 122.70642853]
[144.93754578 135.54466248]
[134.20983887 145.96186829]
[121.15201569 153.24845886]
[106.65345764 156.90815735]
[107.76911163 171.86660767]
[110.21483612 186.66587830]
[112.66056061 201.46514893]
[115.10629272 216.26441956]
[117.55201721 231.06369019]
[119.99774170 245.86296082]
[122.44347382 260.66223145]
[135.68376160 262.97604370]
[147.54670715 269.24642944]
[156.88441467 278.85076904]
[162.79824829 290.84466553]
[164.72526550 304.05468750]
[162.49186707 317.19326782]
[156.32920837 328.98416138]
[146.84945679 338.28643799]
[134.98498535 344.20486450]
[144.49662781 356.84762573]
[138.52906799 370.49450684]
[140.53308105 385.36004639]
[142.53709412 400.22555542]
[144.54110718 415.09109497]
[146.54512024 429.95663452]
[161.12223816 430.93856812]
[175.22073364 434.75225830]
[188.29612732 441.24841309]
[199.84393311 450.17416382]
[209.41896057 461.18301392]
[216.65257263 473.84814453]
[221.26687622 487.67904663]
[223.08537292 502.14053345]
[222.03967285 516.67333984]
[218.17214966 530.71588135]
[211.63418579 543.72589111]
[202.68020630 555.20141602]
[191.65783691 564.70007324]
[178.99441528 571.85620117]
[165.18035889 576.39483643]
[166.96281433 591.28851318]
[178.14459229 581.29016113]
[192.95816040 583.64776611]
[200.48348999 596.62353516]
[195.17320251 610.65209961]
[180.94184875 615.39215088]
[168.28111267 607.35095215]
[168.95089722 622.33599854]
[169.62068176 637.32104492]
[170.29046631 652.30609131]
[170.96026611 667.29107666]
[171.63005066 682.27612305]
[172.29983521 697.26116943]
[172.96961975 712.24621582]
[173.63940430 727.23126221]
[187.69316101 733.18560791]
[197.76521301 744.65368652]
[201.85572815 759.35845947]
[199.15255737 774.38031006]
[190.19238281 786.73663330]
[176.75428772 793.97399902]
[161.50639343 794.65557861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 189]
[15 188]
[29 173]
[30 172]
[31 171]
[32 170]
[33 169]
[35 167]
[42 158]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[48 152]
[61 151]
[72 140]
[73 139]
[75 137]
[78 136]
[79 135]
[81 133]
[82 132]
[83 131]
[84 128]
[85 127]
[90 121]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
