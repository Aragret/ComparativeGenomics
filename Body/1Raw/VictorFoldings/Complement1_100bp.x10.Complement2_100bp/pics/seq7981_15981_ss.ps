%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[103.15165710 755.90887451]
[91.34935760 765.48876953]
[76.77796936 769.81811523]
[61.65951920 768.23669434]
[48.29946136 760.98565674]
[38.73511124 749.17077637]
[34.42495728 734.59368896]
[36.02627182 719.47735596]
[43.29486465 706.12683105]
[55.12232590 696.57806396]
[69.70505524 692.28704834]
[71.26557922 677.36846924]
[72.82610321 662.44982910]
[74.38661957 647.53125000]
[75.94714355 632.61267090]
[77.50766754 617.69403076]
[69.50858307 602.07415771]
[80.44837952 587.26190186]
[81.78661346 572.32171631]
[83.12484741 557.38153076]
[84.24049377 542.42309570]
[85.13330841 527.44964600]
[86.02613068 512.47625732]
[86.91894531 497.50283813]
[87.47715759 482.51324463]
[87.70048523 467.51489258]
[87.92381287 452.51657104]
[88.14714050 437.51821899]
[88.37046814 422.51989746]
[88.59379578 407.52154541]
[88.81712341 392.52322388]
[89.04045105 377.52487183]
[89.26377869 362.52655029]
[89.48710632 347.52819824]
[86.44353485 340.79333496]
[89.82706451 332.30865479]
[90.27367401 317.31530762]
[75.92945099 313.05001831]
[63.16833115 305.21096802]
[52.86333466 294.32742310]
[45.72128677 281.13714600]
[42.23431015 266.53640747]
[42.64594650 251.51910400]
[46.93414307 237.10906982]
[54.81233597 224.29029846]
[65.74861908 213.93975830]
[79.00163269 206.76737976]
[93.67081451 203.26733398]
[94.11741638 188.27398682]
[94.56402588 173.28063965]
[95.01062775 158.28727722]
[95.45723724 143.29393005]
[95.90383911 128.30058289]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[77.71810150 62.35702896]
[83.07034302 48.45729065]
[80.40454865 33.69607162]
[77.73875427 18.93485451]
[73.76666260 13.64958858]
[73.15223694 7.99985313]
[75.22019958 3.69490528]
[72.99507904 -11.13913822]
[70.76996613 -25.97318268]
[62.67908096 -13.34236336]
[48.75162125 -7.77227116]
[34.18218994 -11.34041214]
[24.40481949 -22.71595764]
[23.06623077 -37.65611267]
[30.66568184 -50.58856583]
[44.36876678 -56.68983078]
[59.06457138 -53.68429184]
[69.27242279 -42.69187927]
[68.82582092 -57.68523026]
[68.37921143 -72.67858124]
[59.54369736 -82.07520294]
[59.48038864 -94.57238770]
[67.67781067 -103.46782684]
[67.45448303 -118.46616364]
[67.23115540 -133.46450806]
[67.00782776 -148.46284485]
[66.67285156 -163.45909119]
[66.22624969 -178.45245361]
[53.10561371 -183.70559692]
[43.00875473 -193.53298950]
[37.43706131 -206.42724609]
[37.20143127 -220.42849731]
[42.30442429 -233.42230225]
[51.94487000 -243.45892334]
[64.64344025 -249.04591370]
[56.70153427 -262.72937012]
[64.24848175 -275.57040405]
[64.02515411 -290.56875610]
[63.80183029 -305.56707764]
[49.40212631 -310.24975586]
[37.30459213 -319.35626221]
[28.82148170 -331.89880371]
[24.87297630 -346.51687622]
[25.88737869 -361.62481689]
[31.75465775 -375.58380127]
[41.83837128 -386.87969971]
[55.04471970 -394.28723145]
[69.94116974 -397.00280762]
[84.91186523 -394.73193359]
[98.33290863 -387.72091675]
[108.74847412 -376.73025513]
[115.02876282 -362.95214844]
[116.49253845 -347.88110352]
[112.98101807 -333.15194702]
[104.87509918 -320.36239624]
[93.05406952 -310.89971924]
[78.80017090 -305.79040527]
[79.02349854 -290.79208374]
[79.24682617 -275.79373169]
[87.17275238 -263.18307495]
[79.64177704 -249.26924133]
[94.26661682 -242.82994080]
[104.65702057 -230.61300659]
[108.69413757 -215.03144836]
[105.52059937 -199.19197083]
[95.72200012 -186.27565002]
[81.21959686 -178.89904785]
[81.66620636 -163.90570068]
[85.00746155 -157.31344604]
[82.00617218 -148.68617249]
[82.22949982 -133.68783569]
[82.45282745 -118.68949127]
[82.67615509 -103.69115448]
[92.47468567 -89.13246155]
[83.37256622 -73.12518311]
[83.81916809 -58.13183594]
[84.26577759 -43.13848495]
[85.60401154 -28.19829941]
[87.82912445 -13.36425591]
[90.05424500 1.46978819]
[92.49996948 16.26905823]
[95.16576385 31.03027534]
[97.83155823 45.79149246]
[107.70758057 56.94108963]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[114.75118256 96.60716248]
[124.88449860 85.54751587]
[138.44615173 79.13802338]
[153.42434692 78.32949829]
[167.59715271 83.24187469]
[178.86212158 93.14643860]
[185.54817200 106.57390594]
[186.66345215 121.53238678]
[182.04252625 135.80288696]
[172.37088013 147.26844788]
[159.08323669 154.22824097]
[144.15075684 155.64981079]
[129.78857422 151.32228088]
[118.12722015 141.88760376]
[110.89719391 128.74719238]
[110.45058441 143.74053955]
[110.00398254 158.73388672]
[109.55737305 173.72723389]
[109.11077118 188.72059631]
[108.66416168 203.71394348]
[123.09901428 208.08090210]
[135.90161133 216.02940369]
[146.20243835 227.01252747]
[153.30368042 240.27748108]
[156.72656250 254.91720581]
[156.24362183 269.93240356]
[151.89378357 284.29968262]
[143.97929382 297.04147339]
[133.04476929 307.29235840]
[119.83969116 314.35797119]
[105.26702118 317.76193237]
[104.82041931 332.75527954]
[104.48544312 347.75152588]
[104.26211548 362.74987793]
[104.03878784 377.74819946]
[103.81546021 392.74655151]
[103.59213257 407.74487305]
[103.36880493 422.74322510]
[103.14547729 437.74154663]
[102.92214966 452.73989868]
[102.69882202 467.73822021]
[102.47549438 482.73657227]
[105.01937866 487.29461670]
[105.51130676 491.91101074]
[104.27266693 495.79443359]
[101.89234924 498.39566040]
[100.99953461 513.36907959]
[100.10671997 528.34246826]
[99.21389771 543.31585693]
[101.82660675 549.38922119]
[101.09046173 555.02435303]
[98.06503296 558.71972656]
[96.72679901 573.65991211]
[95.38856506 588.60009766]
[103.04486084 598.98010254]
[101.62267303 611.39624023]
[92.42626953 619.25457764]
[90.86575317 634.17315674]
[89.30522919 649.09179688]
[87.74470520 664.01037598]
[86.18418121 678.92895508]
[84.62365723 693.84759521]
[98.00274658 701.06341553]
[107.59814453 712.85314941]
[111.94664001 727.41882324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[16 202]
[18 199]
[19 198]
[20 197]
[21 194]
[22 193]
[23 192]
[24 191]
[25 187]
[26 186]
[27 185]
[28 184]
[29 183]
[30 182]
[31 181]
[32 180]
[33 179]
[34 178]
[36 177]
[37 176]
[48 165]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[54 145]
[56 143]
[57 142]
[59 140]
[60 139]
[61 138]
[64 137]
[65 136]
[66 135]
[75 134]
[76 133]
[77 132]
[80 130]
[81 129]
[82 128]
[83 127]
[84 125]
[85 124]
[92 118]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
