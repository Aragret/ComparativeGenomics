%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[115.38610840 722.62188721]
[101.51599884 716.89398193]
[88.08448029 710.20196533]
[75.15847778 702.57910156]
[62.80237198 694.06353760]
[51.07773590 684.69750977]
[40.04297638 674.52783203]
[29.75306511 663.60504150]
[20.25927162 651.98364258]
[11.60889244 639.72149658]
[3.84502316 626.87976074]
[-2.99365640 613.52227783]
[-8.87307644 599.71575928]
[-13.76394463 585.52880859]
[-17.64189529 571.03228760]
[-20.48760986 556.29827881]
[-22.28690720 541.40020752]
[-23.03082848 526.41235352]
[-22.71566200 511.40939331]
[-21.34298134 496.46600342]
[-18.91962624 481.65667725]
[-15.45766640 467.05517578]
[-10.97435093 452.73425293]
[-5.49201632 438.76525879]
[0.96202534 425.21777344]
[8.35561943 412.15930176]
[16.65193176 399.65490723]
[25.80962944 387.76687622]
[35.78308868 376.55441284]
[46.52262497 366.07342529]
[57.97472763 356.37609863]
[70.08235168 347.51074219]
[82.78516388 339.52151489]
[96.01988983 332.44827271]
[109.72058868 326.32620239]
[123.81900787 321.18582153]
[138.24490356 317.05273438]
[135.14079285 302.37744141]
[124.93719482 291.52682495]
[129.65118408 276.42422485]
[126.54708099 261.74890137]
[123.44297028 247.07360840]
[120.33885956 232.39831543]
[117.23474884 217.72300720]
[103.58135986 211.83038330]
[95.92527771 198.87475586]
[97.38302612 183.71797180]
[107.60418701 172.19259644]
[104.50007629 157.51730347]
[101.39597321 142.84199524]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[87.03283691 74.93741608]
[83.71057892 60.30995560]
[80.17090607 45.73358154]
[76.63123322 31.15720558]
[72.01657867 45.42972946]
[62.05648804 56.64564133]
[48.42942810 62.91486740]
[33.43178558 63.18092728]
[19.59093475 57.39898682]
[9.23929787 46.54340744]
[4.12130785 32.44354248]
[5.09943676 17.47546959]
[12.00885201 4.16156769]
[23.68519592 -5.25453424]
[38.16080093 -9.18605804]
[52.99627304 -6.97047329]
[65.69157410 1.01885569]
[74.10794830 13.43712044]
[73.43816376 -1.54791808]
[72.76837921 -16.53295708]
[72.09859467 -31.51799583]
[56.80452347 -34.25785828]
[42.50666428 -40.32170486]
[29.91727257 -49.40409851]
[19.66275215 -61.04932022]
[12.25247955 -74.67422485]
[8.05351257 -89.59745789]
[7.27240133 -105.07350159]
[9.94503498 -120.32995605]
[15.93500137 -134.60604858]
[24.94054985 -147.19061279]
[36.50978470 -157.45744324]
[50.06335449 -164.89657593]
[64.92343903 -169.13949585]
[64.03062439 -184.11289978]
[63.13780594 -199.08630371]
[62.24499130 -214.05970764]
[61.35217667 -229.03312683]
[60.45935822 -244.00653076]
[45.73502731 -247.37857056]
[32.55782318 -254.76356506]
[21.99596596 -265.56280518]
[14.90565681 -278.90087891]
[11.86167622 -293.69653320]
[13.11078453 -308.75030518]
[18.55172348 -322.84188843]
[27.74342155 -334.82894897]
[39.94074631 -343.73971558]
[54.15491867 -348.85186768]
[69.23365021 -349.75097656]
[83.95458984 -346.36413574]
[97.12436676 -338.96591187]
[107.67536926 -328.15603638]
[114.75228119 -314.81085205]
[117.78139496 -300.01217651]
[116.51715851 -284.95965576]
[111.06207275 -270.87353516]
[101.85833740 -258.89572144]
[89.65206146 -249.99720764]
[75.43276215 -244.89933777]
[76.32557678 -229.92593384]
[77.21839905 -214.95252991]
[78.11121368 -199.97912598]
[79.00402832 -185.00572205]
[79.89684296 -170.03231812]
[94.22977448 -167.83531189]
[107.79557800 -162.69674683]
[119.99736786 -154.83999634]
[130.29771423 -144.60812378]
[138.24229431 -132.44883728]
[143.47996521 -118.89495850]
[145.77825928 -104.54103851]
[145.03370667 -90.01728058]
[141.27650452 -75.96189117]
[134.66925049 -62.99303436]
[125.49998474 -51.68160629]
[114.16956329 -42.52615738]
[101.17418671 -35.93087769]
[87.08363342 -32.18778229]
[87.75341797 -17.20274162]
[88.42320251 -2.21770334]
[89.09298706 12.76733589]
[91.20761108 27.61753273]
[94.74728394 42.19390869]
[98.28695679 56.77028275]
[101.82708740 59.97597885]
[103.39101410 65.43959808]
[101.70813751 71.83330536]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[116.07127380 139.73788452]
[119.17538452 154.41319275]
[122.27949524 169.08848572]
[136.29209900 175.48794556]
[143.76231384 188.75630188]
[142.00799561 203.70240784]
[131.91004944 214.61889648]
[135.01416016 229.29420471]
[138.11827087 243.96949768]
[141.22238159 258.64480591]
[144.32649231 273.32009888]
[154.75212097 285.22039795]
[149.81610107 299.27331543]
[152.92021179 313.94863892]
[167.78411865 311.88635254]
[182.75648499 310.87768555]
[197.76269531 310.92770386]
[212.72799683 312.03610229]
[227.57785034 314.19738770]
[242.23823547 317.40078735]
[256.63613892 321.63034058]
[270.69982910 326.86499023]
[284.35925293 333.07861328]
[297.54632568 340.24029541]
[310.19540405 348.31436157]
[322.24340820 357.26055908]
[333.63034058 367.03433228]
[344.29946899 377.58697510]
[354.19766235 388.86593628]
[363.27557373 400.81500244]
[371.48800659 413.37466431]
[378.79403687 426.48233032]
[385.15722656 440.07272339]
[390.54595947 454.07809448]
[394.93328857 468.42871094]
[398.29745483 483.05303955]
[400.62161255 497.87826538]
[401.89425659 512.83050537]
[402.10897827 527.83526611]
[401.26473999 542.81781006]
[399.36578369 557.70343018]
[396.42150879 572.41809082]
[392.44659424 586.88836670]
[387.46087646 601.04223633]
[381.48916626 614.80914307]
[374.56124878 628.12048340]
[366.71157837 640.91003418]
[357.97930908 653.11395264]
[348.40795898 664.67156982]
[338.04516602 675.52520752]
[326.94256592 685.62078857]
[315.15548706 694.90808105]
[302.74267578 703.34082031]
[289.76593018 710.87695312]
[276.28991699 717.47894287]
[262.38177490 723.11383057]
[248.11079407 727.75366211]
[233.54808044 731.37530518]
[218.76617432 733.96063232]
[203.83871460 735.49682617]
[188.84007263 735.97625732]
[173.84498596 735.39648438]
[158.92814636 733.76037598]
[144.16386414 731.07617188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 160]
[38 159]
[40 157]
[41 156]
[42 155]
[43 154]
[44 153]
[48 149]
[49 148]
[50 147]
[51 146]
[52 145]
[54 143]
[55 142]
[56 139]
[57 138]
[58 137]
[72 136]
[73 135]
[74 134]
[75 133]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
