%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[77.09953308 449.34643555]
[62.19995499 447.01116943]
[48.34956360 441.04312134]
[36.41899872 431.81750488]
[27.15822601 419.91418457]
[21.14938927 406.08142090]
[18.77020645 391.18881226]
[20.17023659 376.17245483]
[25.26147079 361.97631836]
[33.72386932 349.49279785]
[45.02548218 339.50659180]
[58.45587540 332.64544678]
[73.17080688 329.34066772]
[73.61741638 314.34732056]
[74.06401825 299.35397339]
[74.51062775 284.36059570]
[74.95722961 269.36724854]
[66.89315796 260.35076904]
[67.14252472 247.85589600]
[76.11695862 238.59187317]
[76.78674316 223.60682678]
[77.45652771 208.62179565]
[78.12631226 193.63674927]
[78.79609680 178.65171814]
[79.46588135 163.66667175]
[70.78202820 175.89739990]
[57.69349670 183.22476196]
[42.72748566 184.23399353]
[28.77369499 178.73019409]
[18.52638626 167.77607727]
[13.96415138 153.48670959]
[15.96788692 138.62113953]
[24.15070343 126.04968262]
[36.93262863 118.19969177]
[51.84566879 116.58686829]
[66.01035309 121.52262878]
[76.69170380 132.05395508]
[81.82747650 146.14866638]
[77.10122681 132.02380371]
[87.70288086 120.28005981]
[91.02513885 105.65260315]
[93.80075073 90.91163635]
[96.02587128 76.07759094]
[98.25098419 61.24354935]
[100.47610474 46.40950775]
[102.70121765 31.57546234]
[104.92633820 16.74141884]
[107.15145111 1.90737557]
[109.37657166 -12.92666817]
[100.74180603 -0.66123843]
[89.26086426 8.99215317]
[75.69523621 15.39323330]
[60.94468689 18.11743927]
[45.98756409 16.98408508]
[31.81592178 12.06834316]
[19.36971092 3.69625592]
[9.47444534 -7.57688618]
[2.78644395 -21.00337601]
[-0.25070396 -35.69268417]
[0.56444526 -50.67051697]
[5.17782593 -64.94345093]
[13.28344822 -77.56481934]
[24.34369659 -87.69748688]
[37.62498474 -94.66938782]
[52.24641037 -98.01810455]
[67.23818970 -97.52153015]
[81.60596466 -93.21259308]
[94.39678192 -85.37709808]
[104.76227570 -74.53474426]
[112.01492310 -61.40466309]
[115.67369843 -46.85772324]
[115.49519348 -31.85369682]
[122.37461090 -45.18312454]
[129.25401306 -58.51255417]
[136.13343811 -71.84198761]
[142.91342163 -85.22225952]
[149.59361267 -98.65263367]
[156.27381897 -112.08300781]
[159.92190552 -126.63262939]
[160.36849976 -141.62597656]
[160.81510925 -156.61932373]
[151.71298218 -172.62660217]
[161.51152039 -187.18530273]
[161.73484802 -202.18363953]
[161.95817566 -217.18197632]
[162.18150330 -232.18031311]
[162.40483093 -247.17864990]
[162.62815857 -262.17700195]
[162.85148621 -277.17532349]
[163.07481384 -292.17367554]
[148.34342957 -295.23678589]
[134.45806885 -301.03277588]
[121.92067719 -309.35202026]
[111.18447113 -319.89385986]
[102.63755798 -332.27719116]
[96.58891296 -346.05438232]
[93.25717163 -360.72732544]
[92.76279449 -375.76568604]
[95.12364197 -390.62579346]
[100.25437164 -404.77047729]
[107.96951294 -417.68841553]
[117.99016571 -428.91262817]
[129.95410156 -438.03738403]
[143.42880249 -444.73278809]
[157.92720032 -448.75686646]
[172.92517090 -449.96408081]
[187.88055420 -448.31085205]
[202.25270081 -443.85690308]
[215.52209473 -436.76324463]
[227.20904541 -427.28634644]
[236.89106750 -415.76876831]
[244.21818542 -402.62683105]
[248.92549133 -388.33566284]
[250.84284973 -373.41186523]
[249.90093994 -358.39489746]
[246.13381958 -343.82760620]
[239.67765808 -330.23666382]
[230.76583862 -318.11328125]
[219.72052002 -307.89578247]
[206.94097900 -299.95349121]
[192.88920593 -294.57351685]
[178.07315063 -291.95034790]
[177.84982300 -276.95199585]
[177.62649536 -261.95367432]
[177.40316772 -246.95532227]
[177.17984009 -231.95698547]
[176.95651245 -216.95864868]
[176.73318481 -201.96031189]
[176.50985718 -186.96197510]
[184.70729065 -178.06654358]
[184.64398193 -165.56935120]
[175.80845642 -156.17272949]
[175.36186218 -141.17936707]
[174.91525269 -126.18602753]
[181.95675659 -139.43054199]
[191.48808289 -151.01301575]
[203.12962341 -160.47212219]
[216.41767883 -167.43109131]
[230.82301331 -171.61277771]
[245.77185059 -172.85061646]
[260.66879272 -171.09529114]
[274.92050171 -166.41671753]
[287.95932007 -159.00126648]
[299.26593018 -149.14427185]
[308.39001465 -137.23832703]
[314.96813965 -123.75765991]
[318.73828125 -109.23919678]
[319.55032349 -94.26119232]
[317.37188721 -79.42021942]
[312.28976440 -65.30738831]
[304.50634766 -52.48481369]
[294.33166504 -41.46320343]
[282.17095947 -32.68155289]
[268.50860596 -26.48962402]
[253.88874817 -23.13404655]
[238.89370728 -22.74846649]
[224.12071228 -25.34824371]
[210.15818787 -30.82982826]
[197.56224060 -38.97489548]
[186.83456421 -49.45902252]
[178.40243530 -61.86463547]
[172.60171509 -75.69762421]
[169.66343689 -90.40702820]
[169.70419312 -105.40281677]
[163.02400208 -91.97244263]
[156.34379578 -78.54206085]
[156.17951965 -71.15323639]
[149.46286011 -64.96257019]
[142.58345032 -51.63314438]
[135.70404053 -38.30371475]
[128.82463074 -24.97428513]
[124.21061707 -10.70155144]
[121.98549652 4.13249254]
[119.76038361 18.96653557]
[117.53526306 33.80057907]
[115.31014252 48.63462448]
[113.08502960 63.46866608]
[110.85990906 78.30271149]
[108.63479614 93.13675690]
[122.06504059 86.45629883]
[135.72544861 92.65250397]
[139.54609680 107.15777588]
[130.71052551 119.27935028]
[115.73199463 120.08166504]
[105.65260315 108.97486115]
[102.33033752 123.60231781]
[106.81896210 138.77343750]
[96.45494080 149.47093201]
[94.45092010 164.33645630]
[93.78113556 179.32150269]
[93.11135101 194.30653381]
[92.44156647 209.29158020]
[91.77178192 224.27661133]
[91.10199738 239.26165771]
[99.96479034 255.40266418]
[89.95058441 269.81387329]
[89.50397491 284.80722046]
[89.05737305 299.80056763]
[88.61076355 314.79391479]
[88.16416168 329.78726196]
[102.65629578 333.96203613]
[115.65449524 341.61041260]
[126.34168243 352.25158691]
[134.04605103 365.21667480]
[138.28327942 379.69067383]
[138.78704834 394.76373291]
[135.52565002 409.48834229]
[128.70413208 422.93890381]
[118.75128174 434.26992798]
[106.29274750 442.76907349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[20 194]
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[38 188]
[40 186]
[41 185]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 172]
[72 171]
[73 170]
[74 169]
[75 168]
[76 166]
[77 165]
[78 164]
[79 134]
[80 133]
[81 132]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
