%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[83.25027466 641.56616211]
[68.25983429 640.89611816]
[53.34531021 639.24713135]
[38.57057190 636.62615967]
[23.99888420 633.04455566]
[9.69265079 628.51751709]
[-4.28686953 623.06451416]
[-17.87981415 616.70886230]
[-31.02797318 609.47778320]
[-43.67504883 601.40228271]
[-55.76687622 592.51690674]
[-67.25168610 582.85974121]
[-78.08028412 572.47204590]
[-88.20631409 561.39843750]
[-97.58641052 549.68621826]
[-106.18040466 537.38555908]
[-113.95149231 524.54919434]
[-120.86640167 511.23205566]
[-126.89551544 497.49114990]
[-132.01301575 483.38537598]
[-136.19700623 468.97506714]
[-139.42955017 454.32199097]
[-141.69680786 439.48886108]
[-142.98907471 424.53918457]
[-143.30082703 409.53701782]
[-142.63070679 394.54660034]
[-140.98159790 379.63208008]
[-138.36056519 364.85736084]
[-134.77883911 350.28570557]
[-130.25172424 335.97949219]
[-124.79863739 322.00000000]
[-118.44292450 308.40710449]
[-111.21179199 295.25897217]
[-103.13620758 282.61193848]
[-94.25076294 270.52017212]
[-84.59349823 259.03543091]
[-74.20576477 248.20687866]
[-63.13205338 238.08091736]
[-51.41978073 228.70088196]
[-39.11909485 220.10696411]
[-26.28267860 212.33595276]
[-12.96549511 205.42112732]
[0.77542877 199.39208984]
[14.88125134 194.27467346]
[29.29156876 190.09077454]
[43.94467163 186.85830688]
[58.77781677 184.59114075]
[73.72748566 183.29895020]
[88.72965240 182.98730469]
[89.39943695 168.00225830]
[90.06922150 153.01722717]
[90.73901367 138.03218079]
[91.40879822 123.04714203]
[92.07858276 108.06210327]
[81.70922852 118.90076447]
[66.97043610 121.68787384]
[53.35940552 115.38391113]
[45.95272064 102.34010315]
[47.51288986 87.42145538]
[57.45800781 76.19226837]
[72.07878876 72.84074402]
[85.92205048 78.61692047]
[93.82487488 91.36756134]
[96.27059937 76.56829071]
[98.71632385 61.76901627]
[101.16205597 46.96974564]
[103.38716888 32.13570404]
[105.39118195 17.27017403]
[107.39519501 2.40464640]
[109.39920807 -12.46088219]
[111.40322876 -27.32641029]
[96.73602295 -30.50654984]
[82.36785126 -34.84195709]
[68.38955688 -40.30521774]
[54.88950348 -46.86179352]
[41.95305252 -54.47023392]
[29.66199303 -63.08243179]
[18.09403229 -72.64393616]
[7.32230997 -83.09429932]
[-2.58507276 -94.36744690]
[-11.56547642 -106.39210510]
[-19.56212425 -119.09225464]
[-26.52445602 -132.38758850]
[-32.40845490 -146.19406128]
[-37.17692184 -160.42437744]
[-40.79970169 -174.98857117]
[-43.25389862 -189.79454041]
[-44.52399063 -204.74870300]
[-44.60194778 -219.75650024]
[-43.48727798 -234.72305298]
[-41.18703079 -249.55372620]
[-37.71574783 -264.15475464]
[-33.09537506 -278.43383789]
[-27.35512352 -292.30068970]
[-20.53128815 -305.66766357]
[-12.66701126 -318.45019531]
[-3.81201243 -330.56750488]
[5.97772169 -341.94296265]
[16.64029694 -352.50466919]
[28.10830116 -362.18582153]
[40.30922699 -370.92526245]
[53.16593933 -378.66766357]
[66.59714508 -385.36413574]
[80.51793671 -390.97232056]
[94.84029388 -395.45675659]
[109.47366333 -398.78909302]
[124.32553101 -400.94827271]
[139.30200195 -401.92065430]
[154.30838013 -401.70004272]
[169.24980164 -400.28787231]
[184.03178406 -397.69305420]
[198.56086731 -393.93197632]
[212.74522400 -389.02847290]
[226.49513245 -383.01351929]
[239.72369385 -375.92510986]
[252.34725952 -367.80810547]
[264.28601074 -358.71380615]
[275.46447754 -348.69973755]
[285.81198120 -337.82916260]
[295.26309204 -326.17083740]
[303.75808716 -313.79846191]
[311.24322510 -300.79028320]
[317.67117310 -287.22851562]
[323.00131226 -273.19891357]
[327.19995117 -258.79019165]
[330.24053955 -244.09342957]
[332.10385132 -229.20153809]
[332.77807617 -214.20869446]
[332.25900269 -199.20967102]
[330.54986572 -184.29931641]
[327.66149902 -169.57186890]
[323.61218262 -155.12046814]
[318.42745972 -141.03648376]
[312.14016724 -127.40893555]
[304.79000854 -114.32400513]
[296.42349243 -101.86441040]
[287.09350586 -90.10892487]
[276.85903931 -79.13188171]
[265.78475952 -69.00267029]
[253.94075012 -59.78534317]
[241.40184021 -51.53816986]
[228.24732971 -44.31328964]
[214.56037903 -38.15638351]
[200.42752075 -33.10637665]
[185.93812561 -29.19520378]
[171.18377686 -26.44758606]
[156.25778198 -24.88089561]
[141.25448608 -24.50504112]
[126.26875305 -25.32239723]
[124.26473999 -10.45686817]
[122.26072693 4.40865993]
[120.25671387 19.27418900]
[118.25270081 34.13971710]
[120.38452911 38.41339874]
[119.85428619 44.07165527]
[115.96132660 49.41547394]
[113.51559448 64.21474457]
[111.06987000 79.01401520]
[108.62414551 93.81328583]
[107.06362152 108.73188782]
[106.39383698 123.71692657]
[105.72405243 138.70196533]
[105.05426025 153.68701172]
[104.38447571 168.67204285]
[103.71469116 183.65708923]
[118.62923431 185.30592346]
[133.40400696 187.92669678]
[147.97573853 191.50817871]
[162.28201294 196.03503418]
[176.26161194 201.48786926]
[189.85462952 207.84335327]
[203.00286865 215.07424927]
[215.65003967 223.14959717]
[227.74197388 232.03483582]
[239.22689819 241.69189453]
[250.05561829 252.07943726]
[260.18179321 263.15298462]
[269.56201172 274.86508179]
[278.15615845 287.16561890]
[285.92739868 300.00189209]
[292.84246826 313.31893921]
[298.87173462 327.05978394]
[303.98941040 341.16549683]
[308.17355347 355.57574463]
[311.40628052 370.22879028]
[313.67370605 385.06188965]
[314.96615601 400.01153564]
[315.27807617 415.01370239]
[314.60815430 430.00415039]
[312.95919800 444.91867065]
[310.33834839 459.69345093]
[306.75677490 474.26513672]
[302.22985840 488.57141113]
[296.77691650 502.55096436]
[290.42135620 516.14392090]
[283.19039917 529.29211426]
[275.11495972 541.93927002]
[266.22964478 554.03112793]
[256.57254028 565.51599121]
[246.18492126 576.34466553]
[235.11132812 586.47076416]
[223.39916992 595.85095215]
[211.09858704 604.44500732]
[198.26225281 612.21618652]
[184.94515991 619.13116455]
[171.20429993 625.16033936]
[157.09854126 630.27795410]
[142.68827820 634.46197510]
[128.03520203 637.69464111]
[113.20208740 639.96197510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 165]
[50 164]
[51 163]
[52 162]
[53 161]
[54 160]
[63 159]
[64 158]
[65 157]
[66 156]
[67 153]
[68 152]
[69 151]
[70 150]
[71 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
