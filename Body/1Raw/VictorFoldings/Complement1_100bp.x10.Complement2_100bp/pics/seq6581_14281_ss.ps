%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[102.82954407 839.90679932]
[87.89545441 838.47821045]
[73.03544617 836.41705322]
[58.27630997 833.72711182]
[43.64463806 830.41314697]
[29.16679573 826.48120117]
[14.86887360 821.93835449]
[0.77664012 816.79278564]
[-13.08451176 811.05377197]
[-26.68960190 804.73162842]
[-40.01411438 797.83776855]
[-53.03403473 790.38458252]
[-65.72590637 782.38555908]
[-78.06684875 773.85504150]
[-90.03462982 764.80847168]
[-101.60767365 755.26214600]
[-112.76513672 745.23327637]
[-123.48690796 734.73986816]
[-133.75366211 723.80084229]
[-143.54690552 712.43597412]
[-152.84898376 700.66571045]
[-161.64312744 688.51123047]
[-169.91351318 675.99444580]
[-177.64520264 663.13800049]
[-184.82429504 649.96496582]
[-191.43783569 636.49914551]
[-197.47390747 622.76470947]
[-202.92163086 608.78649902]
[-207.77119446 594.58966064]
[-212.01385498 580.19982910]
[-215.64198303 565.64288330]
[-218.64901733 550.94506836]
[-221.02954102 536.13287354]
[-222.77928162 521.23297119]
[-223.89508057 506.27227783]
[-224.37492371 491.27767944]
[-224.21792603 476.27624512]
[-223.42440796 461.29498291]
[-221.99577332 446.36087036]
[-219.93461609 431.50088501]
[-217.24462891 416.74176025]
[-213.93066406 402.11007690]
[-209.99870300 387.63223267]
[-205.45582581 373.33432007]
[-200.31022644 359.24209595]
[-194.57116699 345.38095093]
[-188.24900818 331.77587891]
[-181.35511780 318.45138550]
[-173.90193176 305.43145752]
[-165.90287781 292.73962402]
[-157.37237549 280.39868164]
[-148.32579041 268.43090820]
[-138.77943420 256.85787964]
[-128.75050354 245.70043945]
[-118.25708008 234.97868347]
[-107.31806183 224.71194458]
[-95.95316315 214.91871643]
[-84.18287659 205.61666870]
[-72.02839661 196.82254028]
[-59.51163864 188.55218506]
[-46.65515518 180.82049561]
[-33.48211288 173.64143372]
[-20.01625061 167.02792358]
[-6.28183508 160.99186707]
[7.69638157 155.54417419]
[21.89321136 150.69462585]
[36.28306961 146.45198059]
[50.84002304 142.82388306]
[65.53784180 139.81687927]
[80.35004425 137.43637085]
[95.24992371 135.68664551]
[94.13427734 120.72819519]
[93.01863098 105.76974487]
[90.48256683 102.86444092]
[89.23942566 98.85539246]
[89.75344849 94.34509277]
[92.20240784 90.12106323]
[91.75580597 75.12771606]
[91.30919647 60.13436127]
[90.86259460 45.14101410]
[90.41598511 30.14766312]
[89.96938324 15.15431309]
[89.52277374 0.16096327]
[74.59243774 -1.53192139]
[60.05501938 -5.33246517]
[46.20647430 -11.16329288]
[33.32874298 -18.90569878]
[21.68400192 -28.40205383]
[11.50932217 -39.45902634]
[3.01184750 -51.85151291]
[-3.63542509 -65.32721710]
[-8.29716587 -79.61178589]
[-10.87846661 -94.41440582]
[-11.32677555 -109.43372345]
[-9.63296700 -124.36395264]
[-5.83152390 -138.90113831]
[0.00016125 -152.74931335]
[7.74336290 -165.62657166]
[17.24043846 -177.27072144]
[28.29804230 -187.44471741]
[40.69105148 -195.94142151]
[54.16716766 -202.58786011]
[68.45202637 -207.24871826]
[83.25480652 -209.82910156]
[98.27414703 -210.27648926]
[113.20427704 -208.58175659]
[127.74122620 -204.77941895]
[141.58905029 -198.94686890]
[154.46582031 -191.20286560]
[166.10939026 -181.70507812]
[176.28269958 -170.64683533]
[184.77864075 -158.25331116]
[191.42424011 -144.77677917]
[196.08421326 -130.49163818]
[198.66368103 -115.68869019]
[199.11013794 -100.66932678]
[197.41447449 -85.73930359]
[193.61123657 -71.20258331]
[187.77783203 -57.35512543]
[180.03303528 -44.47883224]
[170.53451538 -32.83585358]
[159.47566223 -22.66322708]
[147.08160400 -14.16805363]
[133.60466003 -7.52328348]
[119.31922913 -2.86419535]
[104.51612091 -0.28564265]
[104.96273041 14.70770741]
[105.40933990 29.70105743]
[105.85594177 44.69440842]
[106.30255127 59.68775558]
[106.74915314 74.68110657]
[107.19576263 89.67445374]
[107.97708130 104.65409088]
[109.09272766 119.61254883]
[110.20838165 134.57099915]
[125.20297241 134.09109497]
[140.20442200 134.24800110]
[155.18568420 135.04145813]
[170.11978149 136.47001648]
[184.97979736 138.53111267]
[199.73893738 141.22102356]
[214.37062073 144.53491211]
[228.84848022 148.46679688]
[243.14640808 153.00961304]
[257.23867798 158.15513611]
[271.09982300 163.89413452]
[284.70495605 170.21623230]
[298.02947998 177.11006165]
[311.04943848 184.56318665]
[323.74133301 192.56217957]
[336.08230591 201.09262085]
[348.05010986 210.13914490]
[359.62316895 219.68544006]
[370.78067017 229.71432495]
[381.50247192 240.20770264]
[391.76925659 251.14666748]
[401.56256104 262.51150513]
[410.86465454 274.28176880]
[419.65884399 286.43618774]
[427.92926025 298.95291138]
[435.66101074 311.80935669]
[442.84011841 324.98236084]
[449.45370483 338.44821167]
[455.48983765 352.18258667]
[460.93759155 366.16076660]
[465.78720093 380.35757446]
[470.02993774 394.74740601]
[473.65808105 409.30435181]
[476.66516113 424.00216675]
[479.04574585 438.81436157]
[480.79553223 453.71423340]
[481.91137695 468.67492676]
[482.39126587 483.66952515]
[482.23434448 498.67095947]
[481.44085693 513.65222168]
[480.01226807 528.58636475]
[477.95114136 543.44635010]
[475.26119995 558.20550537]
[471.94729614 572.83715820]
[468.01538086 587.31500244]
[463.47256470 601.61291504]
[458.32699585 615.70520020]
[452.58798218 629.56634521]
[446.26586914 643.17144775]
[439.37200928 656.49597168]
[431.91888428 669.51593018]
[423.91986084 682.20776367]
[415.38940430 694.54876709]
[406.34286499 706.51654053]
[396.79653931 718.08959961]
[386.76763916 729.24707031]
[376.27426147 739.96887207]
[365.33526611 750.23565674]
[353.97039795 760.02886963]
[342.20013428 769.33099365]
[330.04568481 778.12518311]
[317.52896118 786.39556885]
[304.67251587 794.12725830]
[291.49948120 801.30639648]
[278.03363037 807.91992188]
[264.29925537 813.95605469]
[250.32104492 819.40380859]
[236.12423706 824.25335693]
[221.73439026 828.49609375]
[207.17744446 832.12420654]
[192.47962952 835.13128662]
[177.66744995 837.51184082]
[162.76756287 839.26159668]
[147.80685425 840.37738037]
[132.81225586 840.85723877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 135]
[72 134]
[73 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
