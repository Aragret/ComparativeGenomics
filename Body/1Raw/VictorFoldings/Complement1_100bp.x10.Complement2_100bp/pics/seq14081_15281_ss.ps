%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[-23.68419266 394.89883423]
[-23.20187759 409.90454102]
[-24.26504326 424.88031006]
[-26.86242104 439.66738892]
[-30.96647644 454.10900879]
[-36.53370285 468.05212402]
[-43.50508881 481.34887695]
[-51.80672836 493.85833740]
[-61.35062027 505.44790649]
[-72.03559875 515.99475098]
[-83.74839020 525.38696289]
[-96.36483765 533.52514648]
[-109.75119781 540.32287598]
[-123.76557159 545.70819092]
[-138.25939941 549.62390137]
[-153.07902527 552.02862549]
[-168.06735229 552.89685059]
[-183.06552124 552.21923828]
[-197.91452026 550.00317383]
[-212.45695496 546.27197266]
[-226.53866577 541.06524658]
[-240.01036072 534.43823242]
[-252.72924805 526.46118164]
[-264.56051636 517.21856689]
[-275.37869263 506.80847168]
[-285.06915283 495.34115601]
[-293.52917480 482.93823242]
[-300.66903687 469.73117065]
[-306.41305542 455.85998535]
[-310.70037842 441.47171021]
[-313.48556519 426.71884155]
[-314.73901367 411.75778198]
[-314.44750977 396.74716187]
[-312.61413574 381.84606934]
[-309.25827026 367.21246338]
[-304.41555786 353.00146484]
[-298.13729858 339.36373901]
[-290.49005127 326.44384766]
[-281.55487061 314.37875366]
[-271.42651367 303.29632568]
[-260.21228027 293.31408691]
[-248.03111267 284.53781128]
[-235.01210022 277.06054688]
[-221.29325867 270.96157837]
[-207.02003479 266.30554199]
[-192.34370422 263.14178467]
[-177.41984558 261.50384521]
[-162.40669250 261.40908813]
[-147.46336365 262.85855103]
[-132.74827576 265.83682251]
[-118.41740417 270.31237793]
[-104.62268829 276.23770142]
[-91.51034546 283.55007935]
[-79.21937561 292.17190552]
[-69.38879395 280.84231567]
[-59.55821228 269.51272583]
[-49.72763062 258.18313599]
[-39.89704895 246.85353088]
[-48.78672409 235.34696960]
[-55.25553894 222.31904602]
[-59.05171585 208.27249146]
[-60.02663803 193.74972534]
[-58.14068985 179.31195068]
[-53.46483231 165.51747131]
[-46.17795944 152.90013123]
[-36.56004333 141.94857788]
[-24.98138237 133.08740234]
[-11.88833523 126.66066742]
[2.21387196 122.91852570]
[16.78065109 122.00749969]
[31.24907684 123.96474457]
[45.05964661 128.71653748]
[57.67791367 136.08103943]
[67.67608643 124.89907074]
[77.67425537 113.71709442]
[87.67243195 102.53511810]
[97.41839600 91.13265991]
[106.90729523 79.51539612]
[116.39619446 67.89813232]
[119.13367462 52.31555176]
[133.17727661 47.35304260]
[142.66616821 35.73577881]
[152.15507507 24.11851692]
[161.64396667 12.50125408]
[150.71229553 2.22102618]
[140.52435303 -8.79671764]
[131.12979126 -20.49830055]
[122.57439423 -32.82671356]
[114.89981842 -45.72189331]
[108.14346313 -59.12101364]
[102.33824921 -72.95879364]
[97.51245117 -87.16781616]
[93.68959045 -101.67886353]
[90.88828278 -116.42123413]
[89.12217712 -131.32310486]
[88.39988708 -146.31185913]
[88.72491455 -161.31449890]
[90.09569550 -176.25791931]
[92.50553894 -191.06930542]
[95.94270325 -205.67651367]
[100.39044952 -220.00837708]
[105.82711029 -233.99507141]
[112.22618866 -247.56845093]
[119.55651855 -260.66238403]
[127.78237915 -273.21307373]
[136.86369324 -285.15939331]
[146.75622559 -296.44311523]
[157.41178894 -307.00927734]
[168.77844238 -316.80639648]
[180.80082703 -325.78677368]
[193.42036438 -333.90661621]
[206.57557678 -341.12640381]
[220.20237732 -347.41091919]
[234.23437500 -352.72955322]
[248.60319519 -357.05642700]
[263.23883057 -360.37042236]
[278.07000732 -362.65539551]
[293.02444458 -363.90026855]
[308.02926636 -364.09890747]
[323.01141357 -363.25036621]
[337.89788818 -361.35879517]
[352.61611938 -358.43341064]
[367.09445190 -354.48843384]
[381.26232910 -349.54312134]
[395.05072021 -343.62155151]
[408.39245605 -336.75256348]
[421.22253418 -328.96963501]
[433.47842407 -320.31069946]
[445.10046387 -310.81790161]
[456.03198242 -300.53750610]
[466.21978760 -289.51962280]
[475.61416626 -277.81790161]
[484.16940308 -265.48937988]
[491.84378052 -252.59408569]
[498.59994507 -239.19487000]
[504.40496826 -225.35699463]
[509.23056030 -211.14790344]
[513.05322266 -196.63681030]
[515.85430908 -181.89439392]
[517.62017822 -166.99250793]
[518.34228516 -152.00373840]
[518.01702881 -137.00109863]
[516.64605713 -122.05770111]
[514.23596191 -107.24634552]
[510.79861450 -92.63918304]
[506.35064697 -78.30738831]
[500.91378784 -64.32077026]
[494.51452637 -50.74748993]
[487.18399048 -37.65366364]
[478.95797729 -25.10308647]
[469.87646484 -13.15690613]
[459.98376465 -1.87332046]
[449.32806396 8.69269562]
[437.96127319 18.48966599]
[425.93875122 27.46985817]
[413.31909180 35.58952332]
[400.16378784 42.80910492]
[386.53689575 49.09342575]
[372.50482178 54.41186905]
[358.13595581 58.73852539]
[343.50024414 62.05231476]
[328.66906738 64.33708954]
[313.71459961 65.58172607]
[298.70974731 65.78015900]
[283.72763062 64.93141174]
[268.84118652 63.03963089]
[254.12298584 60.11402893]
[239.64471436 56.16885757]
[225.47691345 51.22333908]
[211.68861389 45.30156708]
[198.34698486 38.43239212]
[185.51701355 30.64928055]
[173.26123047 21.99015236]
[163.77233887 33.60741425]
[154.28343201 45.22467804]
[144.79454041 56.84194183]
[142.73576355 71.59357452]
[128.01345825 77.38703156]
[118.52455902 89.00429535]
[109.03565979 100.62155914]
[108.87490082 104.47467804]
[107.01652527 108.23822784]
[103.53862000 111.15562439]
[98.85440826 112.53329468]
[88.85623169 123.71526337]
[78.85806274 134.89724731]
[68.85988617 146.07920837]
[78.03707886 158.56120300]
[84.42443085 172.66963196]
[87.74645996 187.79032898]
[87.86106110 203.26556396]
[84.76560211 218.42271423]
[78.59690857 232.60346985]
[69.62525940 245.19241333]
[58.24249268 255.64372253]
[44.94493866 263.50488281]
[30.31175423 268.43621826]
[14.97970486 270.22561646]
[-0.38454789 268.79766846]
[-15.11342812 264.21670532]
[-28.56745720 256.68411255]
[-38.39803696 268.01370239]
[-48.22861862 279.34329224]
[-58.05920029 290.67288208]
[-67.88977814 302.00247192]
[-57.62133026 312.95523071]
[-48.53349304 324.90579224]
[-40.72261047 337.72741699]
[-34.27148056 351.28421021]
[-29.24848557 365.43249512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 205]
[55 204]
[56 203]
[57 202]
[58 201]
[73 187]
[74 186]
[75 185]
[76 184]
[77 180]
[78 179]
[79 178]
[81 176]
[82 175]
[83 174]
[84 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
