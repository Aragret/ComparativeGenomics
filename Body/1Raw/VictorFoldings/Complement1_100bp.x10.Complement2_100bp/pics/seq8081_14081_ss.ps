%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[53.30694199 474.58782959]
[44.21560669 486.52908325]
[34.19287109 497.70007324]
[23.30373764 508.02835083]
[11.61882877 517.44689941]
[-0.78607231 525.89465332]
[-13.83051491 533.31683350]
[-27.42990112 539.66534424]
[-41.49602890 544.89892578]
[-55.93767548 548.98364258]
[-70.66117859 551.89306641]
[-85.57105255 553.60827637]
[-100.57059479 554.11822510]
[-115.56253052 553.41949463]
[-130.44963074 551.51672363]
[-145.13534546 548.42211914]
[-159.52441406 544.15588379]
[-173.52354431 538.74566650]
[-187.04193115 532.22650146]
[-199.99189758 524.64068604]
[-212.28945923 516.03741455]
[-223.85485840 506.47247314]
[-234.61309814 496.00793457]
[-244.49440002 484.71163940]
[-253.43467712 472.65686035]
[-261.37594604 459.92178345]
[-268.26672363 446.58895874]
[-274.06228638 432.74493408]
[-278.72509766 418.47940063]
[-282.22485352 403.88497925]
[-284.53887939 389.05621338]
[-285.65219116 374.08935547]
[-285.55755615 359.08145142]
[-284.25558472 344.12982178]
[-281.75469971 329.33145142]
[-278.07116699 314.78228760]
[-273.22882080 300.57672119]
[-267.25912476 286.80688477]
[-260.20074463 273.56204224]
[-252.09950256 260.92810059]
[-243.00790405 248.98704529]
[-232.98492432 237.81626892]
[-222.09556580 227.48825073]
[-210.41044617 218.06994629]
[-198.00535583 209.62245178]
[-184.96075439 202.20054626]
[-171.36122131 195.85238647]
[-157.29498291 190.61911011]
[-142.85324097 186.53468323]
[-128.12968445 183.62559509]
[-113.21976471 181.91069031]
[-98.22021484 181.40110779]
[-83.22829437 182.10014343]
[-68.34123993 184.00328064]
[-53.65559387 187.09815979]
[-39.26661301 191.36471558]
[-25.26760674 196.77526855]
[-11.74936771 203.29475403]
[1.20043170 210.88085938]
[9.79899597 198.59001160]
[18.39756012 186.29917908]
[26.99612427 174.00834656]
[12.24061680 176.70556641]
[-0.85823822 169.39666748]
[-6.31182051 155.42317200]
[-1.62682593 141.17358398]
[11.05482864 133.16261292]
[25.93526268 135.05278015]
[36.21134186 145.97990417]
[37.18446732 160.95005798]
[47.01504898 149.62046814]
[56.84562683 138.29086304]
[66.67620850 126.96127319]
[76.50679016 115.63168335]
[86.33737183 104.30208588]
[89.18103790 90.61248779]
[102.33303833 85.86733246]
[112.16362000 74.53773499]
[121.99419403 63.20814514]
[122.66651917 58.91839600]
[124.48594666 55.41779327]
[127.06352997 52.97004700]
[129.96464539 51.68546677]
[132.76295471 51.51934814]
[143.25045776 40.79496765]
[153.73796082 30.07058716]
[154.37457275 17.18813705]
[163.33042908 8.47168350]
[175.42399597 8.20313358]
[186.07000732 -2.36391401]
[196.71601868 -12.93096161]
[207.36203003 -23.49800873]
[197.64659119 -34.93648529]
[188.84677124 -47.09343719]
[181.01550293 -59.89575958]
[174.19985962 -73.26644897]
[168.44085693 -87.12509918]
[163.77310181 -101.38835907]
[160.22470093 -115.97043610]
[157.81697083 -130.78364563]
[156.56440735 -145.73889160]
[156.47453308 -160.74623108]
[157.54788208 -175.71540833]
[159.77801514 -190.55639648]
[163.15150452 -205.17993164]
[167.64808655 -219.49807739]
[173.24069214 -233.42469788]
[179.89569092 -246.87606812]
[187.57307434 -259.77127075]
[196.22665405 -272.03274536]
[205.80438232 -283.58676147]
[216.24865723 -294.36383057]
[227.49668884 -304.29913330]
[239.48080444 -313.33291626]
[252.12893677 -321.41085815]
[265.36502075 -328.48437500]
[279.10943604 -334.51089478]
[293.27954102 -339.45419312]
[307.79013062 -343.28457642]
[322.55389404 -345.97894287]
[337.48205566 -347.52114868]
[352.48483276 -347.90185547]
[367.47198486 -347.11883545]
[382.35342407 -345.17675781]
[397.03958130 -342.08734131]
[411.44219971 -337.86911011]
[425.47460938 -332.54748535]
[439.05242920 -326.15444946]
[452.09399414 -318.72842407]
[464.52090454 -310.31411743]
[476.25839233 -300.96212769]
[487.23583984 -290.72869873]
[497.38729858 -279.67532349]
[506.65164185 -267.86856079]
[514.97320557 -255.37936401]
[522.30194092 -242.28286743]
[528.59368896 -228.65782166]
[533.81072998 -214.58618164]
[537.92163086 -200.15258789]
[540.90161133 -185.44381714]
[542.73284912 -170.54835510]
[543.40429688 -155.55577087]
[542.91192627 -140.55624390]
[541.25860596 -125.63997650]
[538.45440674 -110.89668274]
[534.51611328 -96.41503143]
[529.46746826 -82.28211212]
[523.33880615 -68.58293152]
[516.16693115 -55.39987564]
[507.99505615 -42.81222916]
[498.87231445 -30.89569473]
[488.85354614 -19.72194481]
[477.99902344 -9.35817814]
[466.37402344 0.13327493]
[454.04846191 8.69533157]
[441.09646606 16.27649689]
[427.59591675 22.83117867]
[413.62805176 28.31995392]
[399.27682495 32.70981216]
[384.62860107 35.97434998]
[369.77142334 38.09393692]
[354.79464722 39.05582428]
[339.78839111 38.85422897]
[324.84289551 37.49036026]
[310.04803467 34.97242355]
[295.49276733 31.31555939]
[281.26464844 26.54176140]
[267.44924927 20.67974281]
[254.12968445 13.76475525]
[241.38601685 5.83838940]
[229.29490662 -3.05168486]
[217.92907715 -12.85200119]
[207.28306580 -2.28495312]
[196.63705444 8.28209496]
[185.99104309 18.84914207]
[182.30516052 36.00668335]
[164.46234131 40.55809021]
[153.97483826 51.28246689]
[143.48733521 62.00684738]
[133.32379150 73.03872681]
[123.49320984 84.36831665]
[113.66262817 95.69791412]
[110.81896210 109.38751221]
[97.66696167 114.13266754]
[87.83638000 125.46226501]
[78.00580597 136.79185486]
[68.17522430 148.12144470]
[58.34463882 159.45103455]
[48.51406097 170.78063965]
[39.28696060 182.60690308]
[30.68839836 194.89773560]
[22.08983421 207.18858337]
[13.49127007 219.47941589]
[25.05688667 229.04408264]
[35.81535721 239.50839233]
[45.69690704 250.80445862]
[54.63745499 262.85903931]
[62.57901001 275.59396362]
[69.47006989 288.92660522]
[75.26594543 302.77053833]
[79.92904663 317.03591919]
[83.42913055 331.63031006]
[85.74349976 346.45898438]
[86.85713959 361.42584229]
[86.76282501 376.43374634]
[85.46118164 391.38540649]
[82.96063232 406.18383789]
[79.27741241 420.73306274]
[74.43540192 434.93875122]
[68.46599579 448.70874023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 193]
[60 192]
[61 191]
[62 190]
[70 189]
[71 188]
[72 187]
[73 186]
[74 185]
[75 184]
[77 182]
[78 181]
[79 180]
[84 179]
[85 178]
[86 177]
[89 175]
[90 174]
[91 173]
[92 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
