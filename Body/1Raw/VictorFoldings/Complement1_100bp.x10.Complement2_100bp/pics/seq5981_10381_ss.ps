%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGGAUCCGUGUCGAGAUUCGGAGGAAUAAGCUCGGCUCGACCCGGUCGGUCCGUUGGAAGAUCCAUUGCUGGUGUAGAUGUUGCAAUAGCAGUGUCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[157.08641052 282.52468872]
[155.45019531 267.60839844]
[154.82470703 252.61567688]
[155.21281433 237.61494446]
[156.61274719 222.67462158]
[159.01809692 207.86289978]
[162.41789246 193.24734497]
[166.79664612 178.89465332]
[172.13433838 164.87033081]
[178.40664673 151.23834229]
[165.23417664 144.06297302]
[152.06169128 136.88760376]
[137.18385315 137.59403992]
[128.76622009 124.19799805]
[115.59375000 117.02262878]
[102.42127228 109.84726715]
[94.39891815 109.06340790]
[89.10725403 102.46574402]
[76.04306793 95.09505463]
[62.97888565 87.72436523]
[49.91469955 80.35367584]
[36.85051346 72.98298645]
[31.63091469 73.03656006]
[27.34161949 71.26026154]
[24.52386475 68.31487274]
[23.37819290 64.98023987]
[10.65615559 57.03355789]
[-2.06588054 49.08687210]
[-14.78791714 41.14018631]
[-27.50995255 33.19350433]
[-36.38911057 45.29196548]
[-46.14756775 56.69305038]
[-56.73074341 67.33300018]
[-68.07946014 77.15231323]
[-80.13024139 86.09607697]
[-92.81569672 94.11426544]
[-106.06488800 101.16204834]
[-119.80371094 107.20000458]
[-133.95533752 112.19436646]
[-148.44062805 116.11720276]
[-163.17855835 118.94657898]
[-178.08673096 120.66667175]
[-193.08175659 121.26785278]
[-208.07978821 120.74677277]
[-222.99693298 119.10633850]
[-237.74977112 116.35572052]
[-252.25579834 112.51031494]
[-266.43389893 107.59161377]
[-280.20477295 101.62712860]
[-293.49142456 94.65022278]
[-306.21954346 86.69990540]
[-318.31793213 77.82063293]
[-329.71890259 68.06208038]
[-340.35876465 57.47880936]
[-350.17797852 46.13000870]
[-359.12164307 34.07915115]
[-367.13973999 21.39362144]
[-374.18737793 8.14437103]
[-380.22521973 -5.59450769]
[-385.21945190 -19.74617958]
[-389.14218140 -34.23150253]
[-391.97140503 -48.96946716]
[-393.69137573 -63.87765121]
[-394.29241943 -78.87268066]
[-393.77120972 -93.87069702]
[-392.13064575 -108.78782654]
[-389.37991333 -123.54064941]
[-385.53436279 -138.04664612]
[-380.61553955 -152.22470093]
[-374.65093994 -165.99552917]
[-367.67391968 -179.28211975]
[-359.72348022 -192.01014709]
[-350.84411621 -204.10845947]
[-341.08544922 -215.50936890]
[-330.50207520 -226.14913940]
[-319.15319824 -235.96824646]
[-307.10226440 -244.91180420]
[-294.41665649 -252.92976379]
[-281.16735840 -259.97732544]
[-267.42840576 -266.01501465]
[-253.27670288 -271.00912476]
[-238.79133606 -274.93173218]
[-224.05335999 -277.76083374]
[-209.14515686 -279.48065186]
[-194.15011597 -280.08157349]
[-179.15209961 -279.56024170]
[-164.23498535 -277.91952515]
[-149.48219299 -275.16867065]
[-134.97622681 -271.32299805]
[-120.79821014 -266.40405273]
[-107.02743530 -260.43933105]
[-93.74091339 -253.46217346]
[-81.01294708 -245.51164246]
[-68.91472626 -236.63215637]
[-57.51389694 -226.87339783]
[-46.87422562 -216.28994751]
[-37.05521011 -204.94096375]
[-28.11176872 -192.88995361]
[-20.09391212 -180.20428467]
[-13.04648209 -166.95491028]
[-7.00889158 -153.21592712]
[-2.01490426 -139.06416321]
[1.90755010 -124.57877350]
[4.73653555 -109.84075928]
[6.45623159 -94.93254089]
[7.05702019 -79.93750000]
[6.53554153 -64.93949127]
[4.89471245 -50.02239227]
[2.14370871 -35.26962280]
[-1.70208442 -20.76368904]
[-6.62115955 -6.58571625]
[-12.58600712 7.18500614]
[-19.56326866 20.47146606]
[-6.84123230 28.41815186]
[5.88080406 36.36483383]
[18.60284042 44.31151962]
[31.32487679 52.25820541]
[44.22120285 59.91880035]
[57.28538895 67.28948975]
[70.34957123 74.66017914]
[83.41375732 82.03086853]
[96.47794342 89.40155792]
[109.59664154 96.67478943]
[122.76911163 103.85015869]
[135.94158936 111.02552032]
[151.76161194 110.83231354]
[159.23706055 123.71513367]
[172.40954590 130.89050293]
[185.58201599 138.06585693]
[193.63320923 125.40287781]
[202.52091980 113.31232452]
[212.20458984 101.84935760]
[222.64002991 91.06629181]
[233.77963257 81.01232147]
[245.57255554 71.73332214]
[257.96499634 63.27163315]
[270.90042114 55.66586304]
[284.31979370 48.95071411]
[298.16189575 43.15682983]
[312.36358643 38.31064224]
[326.86001587 34.43426895]
[341.58508301 31.54539108]
[356.47155762 29.65719414]
[371.45156860 28.77829361]
[386.45672607 28.91269684]
[401.41857910 30.05979347]
[416.26885986 32.21434784]
[430.93981934 35.36653137]
[445.36447144 39.50195694]
[459.47708130 44.60175705]
[473.21316528 50.64266586]
[486.51010132 57.59711838]
[499.30722046 65.43338013]
[511.54608154 74.11569214]
[523.17089844 83.60445404]
[534.12860107 93.85635376]
[544.36926270 104.82461548]
[553.84600830 116.45920563]
[562.51574707 128.70703125]
[570.33880615 141.51220703]
[577.27954102 154.81629944]
[583.30627441 168.55860901]
[588.39154053 182.67643738]
[592.51214600 197.10536194]
[595.64923096 211.77954102]
[597.78845215 226.63203430]
[598.92016602 241.59506226]
[599.03906250 256.60037231]
[598.14477539 271.57943726]
[596.24121094 286.46398926]
[593.33721924 301.18606567]
[589.44586182 315.67849731]
[584.58508301 329.87518311]
[578.77691650 343.71130371]
[572.04797363 357.12374878]
[564.42889404 370.05133057]
[555.95440674 382.43505859]
[546.66326904 394.21841431]
[536.59783936 405.34765625]
[525.80401611 415.77197266]
[514.33111572 425.44384766]
[502.23138428 434.31909180]
[489.56011963 442.35723877]
[476.37512207 449.52160645]
[462.73651123 455.77954102]
[448.70654297 461.10241699]
[434.34924316 465.46600342]
[419.73010254 468.85037231]
[404.91586304 471.24008179]
[389.97406006 472.62420654]
[374.97293091 472.99649048]
[359.98086548 472.35516357]
[345.06631470 470.70321655]
[330.29730225 468.04812622]
[315.74124146 464.40206909]
[301.46453857 459.78164673]
[287.53231812 454.20791626]
[274.00814819 447.70635986]
[260.95379639 440.30661011]
[248.42875671 432.04244995]
[236.49020386 422.95156860]
[225.19262695 413.07543945]
[214.58755493 402.45916748]
[204.72337341 391.15115356]
[195.64511108 379.20303345]
[187.39418030 366.66928101]
[180.00822449 353.60708618]
[173.52093506 340.07608032]
[167.96194458 326.13800049]
[163.35658264 311.85641479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 129]
[11 128]
[12 127]
[14 125]
[15 124]
[16 123]
[18 122]
[19 121]
[20 120]
[21 119]
[22 118]
[26 117]
[27 116]
[28 115]
[29 114]
[30 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
