%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[70.02066803 290.57830811]
[71.22062683 305.55633545]
[70.27669525 320.55267334]
[67.20808411 335.26199341]
[62.07727432 349.38485718]
[54.98871994 362.63375854]
[46.08673477 374.73895264]
[35.55255508 385.45394897]
[23.60063553 394.56069946]
[10.47430801 401.87371826]
[-3.55919480 407.24414062]
[-18.21416855 410.56265259]
[-33.19225311 411.76168823]
[-48.18852234 410.81683350]
[-62.89766312 407.74731445]
[-77.02021790 402.61563110]
[-90.26866913 395.52624512]
[-102.37330627 386.62350464]
[-113.08767700 376.08868408]
[-122.19365692 364.13619995]
[-129.50587463 351.00939941]
[-134.87542725 336.97558594]
[-138.19303894 322.32040405]
[-139.39114380 307.34222412]
[-138.44535828 292.34603882]
[-135.37492371 277.63708496]
[-130.24237061 263.51483154]
[-123.15217590 250.26683044]
[-114.24869537 238.16275024]
[-103.71318817 227.44902039]
[-91.76013947 218.34378052]
[-78.63290405 211.03237915]
[-64.59873962 205.66368103]
[-49.94335556 202.34698486]
[-34.96512222 201.14981079]
[-19.96897316 202.09652710]
[-5.26021194 205.16786194]
[8.86170864 210.30130005]
[15.93881416 197.07575989]
[23.01591873 183.85023499]
[30.09302521 170.62471008]
[37.17013168 157.39918518]
[24.79645538 165.87811279]
[10.49125004 170.39044189]
[-4.50794554 170.54579163]
[-18.90354919 166.33074951]
[-31.45019913 158.10995483]
[-41.06248093 146.59457397]
[-46.90884018 132.78080750]
[-48.48350525 117.86368561]
[-45.65025330 103.13368988]
[-38.65419006 89.86511230]
[-28.10054016 79.20582581]
[-14.90230656 72.07794952]
[-0.20126390 69.09812164]
[14.73079872 70.52413177]
[28.60210991 76.23261261]
[40.21266174 85.72972107]
[48.55802155 98.19387054]
[52.91624069 112.54677582]
[52.91028214 127.54677582]
[48.54217529 141.89303589]
[59.02967453 131.16865540]
[62.39630890 116.65952301]
[77.57678223 112.20262909]
[88.06428528 101.47824860]
[98.39095306 90.59891510]
[108.55449677 79.56703949]
[118.71804810 68.53516388]
[128.88159180 57.50328445]
[132.54170227 42.11127090]
[146.85578918 37.99345016]
[157.01933289 26.96157455]
[167.18287659 15.92969704]
[170.84300232 0.53768247]
[185.15707397 -3.58013678]
[195.32061768 -14.61201382]
[184.89530945 -25.40279770]
[175.11506653 -36.78150177]
[166.01300049 -48.70962906]
[157.61987305 -61.14681625]
[149.96411133 -74.05097961]
[143.07162476 -87.37845612]
[136.96571350 -101.08414459]
[131.66705322 -115.12167358]
[127.19356537 -129.44354248]
[123.56039429 -144.00129700]
[120.77983093 -158.74566650]
[118.86128998 -173.62677002]
[117.81124878 -188.59425354]
[117.63326263 -203.59747314]
[118.32794952 -218.58564758]
[119.89294434 -233.50807190]
[122.32295227 -248.31425476]
[125.60975647 -262.95410156]
[129.74223328 -277.37805176]
[134.70640564 -291.53735352]
[140.48545837 -305.38403320]
[147.05986023 -318.87124634]
[154.40734863 -331.95339966]
[162.50306702 -344.58618164]
[171.31962585 -356.72686768]
[180.82717896 -368.33438110]
[190.99357605 -379.36944580]
[201.78440857 -389.79470825]
[213.16314697 -399.57489014]
[225.09132385 -408.67694092]
[237.52853394 -417.07000732]
[250.43273926 -424.72570801]
[263.76022339 -431.61813354]
[277.46594238 -437.72399902]
[291.50350952 -443.02261353]
[305.82540894 -447.49603271]
[320.38314819 -451.12911987]
[335.12753296 -453.90963745]
[350.00866699 -455.82812500]
[364.97613525 -456.87811279]
[379.97937012 -457.05603027]
[394.96752930 -456.36126709]
[409.88995361 -454.79623413]
[424.69613647 -452.36614990]
[439.33596802 -449.07928467]
[453.75988770 -444.94674683]
[467.91915894 -439.98251343]
[481.76580811 -434.20339966]
[495.25302124 -427.62893677]
[508.33511353 -420.28140259]
[520.96789551 -412.18563843]
[533.10852051 -403.36901855]
[544.71600342 -393.86141968]
[555.75103760 -383.69497681]
[566.17626953 -372.90411377]
[575.95642090 -361.52532959]
[585.05834961 -349.59710693]
[593.45141602 -337.15985107]
[601.10705566 -324.25564575]
[607.99945068 -310.92810059]
[614.10522461 -297.22235107]
[619.40374756 -283.18478394]
[623.87713623 -268.86288452]
[627.51019287 -254.30509949]
[630.29064941 -239.56069946]
[632.20904541 -224.67958069]
[633.25897217 -209.71209717]
[633.43682861 -194.70887756]
[632.74200439 -179.72070312]
[631.17687988 -164.79829407]
[628.74676514 -149.99212646]
[625.45983887 -135.35231018]
[621.32720947 -120.92839050]
[616.36297607 -106.76914978]
[610.58380127 -92.92252350]
[604.00927734 -79.43534851]
[596.66168213 -66.35326385]
[588.56585693 -53.72053909]
[579.74920654 -41.57992172]
[570.24151611 -29.97248459]
[560.07507324 -18.93751144]
[549.28411865 -8.51233673]
[537.90533447 1.26776290]
[525.97705078 10.36969376]
[513.53979492 18.76265907]
[500.63552856 26.41825867]
[487.30795288 33.31058884]
[473.60220337 39.41632462]
[459.56460571 44.71480942]
[445.24267578 49.18811798]
[430.68487549 52.82110596]
[415.94046021 55.60148621]
[401.05935669 57.51985168]
[386.09185791 58.56970596]
[371.08862305 58.74749756]
[356.10046387 58.05263138]
[341.17807007 56.48744965]
[326.37188721 54.05725479]
[311.73208618 50.77026749]
[297.30819702 46.63761139]
[283.14898682 41.67326736]
[269.30236816 35.89403534]
[255.81521606 29.31947136]
[242.73316956 21.97181892]
[230.10047913 13.87594318]
[217.95989990 5.05923700]
[206.35249329 -4.44846725]
[196.18894958 6.58341026]
[193.25579834 21.18635178]
[178.21475220 26.09324455]
[168.05120850 37.12512207]
[157.88766479 48.15699768]
[154.95451355 62.75994110]
[139.91346741 67.66683197]
[129.74992371 78.69870758]
[119.58637238 89.73058319]
[109.42282867 100.76246643]
[108.44546509 105.91597748]
[104.65025330 110.15505219]
[98.78866577 111.96575165]
[88.30116272 122.69013214]
[84.18438721 137.96635437]
[69.75405121 141.65615845]
[59.26655197 152.38053894]
[50.39565659 164.47628784]
[43.31855392 177.70181274]
[36.24144745 190.92733765]
[29.16434097 204.15287781]
[22.08723640 217.37840271]
[34.19297028 226.27963257]
[44.90864563 236.81315613]
[54.01610947 248.76451111]
[61.32994080 261.89038086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 206]
[39 205]
[40 204]
[41 203]
[42 202]
[62 201]
[63 200]
[65 198]
[66 197]
[67 194]
[68 193]
[69 192]
[70 191]
[72 189]
[73 188]
[74 187]
[76 185]
[77 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
