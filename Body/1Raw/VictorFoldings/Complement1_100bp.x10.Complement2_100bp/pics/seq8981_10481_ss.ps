%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[82.49668121 783.08428955]
[67.54432678 781.81475830]
[52.71695328 779.50531006]
[38.08679962 776.16711426]
[23.72514153 771.81652832]
[9.70195293 766.47473145]
[-3.91444898 760.16772461]
[-17.05772400 752.92626953]
[-29.66384125 744.78558350]
[-41.67138290 735.78540039]
[-53.02185059 725.96948242]
[-63.65994263 715.38574219]
[-73.53382874 704.08569336]
[-82.59541321 692.12438965]
[-90.80053711 679.56018066]
[-98.10923767 666.45416260]
[-104.48589325 652.87023926]
[-109.89945221 638.87457275]
[-114.32352448 624.53540039]
[-117.73657227 609.92254639]
[-120.12195587 595.10717773]
[-121.46805573 580.16149902]
[-121.76831818 565.15832520]
[-121.02127838 550.17077637]
[-119.23056793 535.27185059]
[-116.40492249 520.53417969]
[-112.55810547 506.02944946]
[-107.70885468 491.82839966]
[-101.88079834 478.00021362]
[-95.10233307 464.61227417]
[-87.40647125 451.72979736]
[-78.83072662 439.41552734]
[-69.41686249 427.72946167]
[-59.21074677 416.72854614]
[-48.26210403 406.46640015]
[-36.62427902 396.99298096]
[-24.35396957 388.35443115]
[-11.51095200 380.59289551]
[1.84220123 373.74612427]
[15.64043331 367.84753418]
[29.81652260 362.92581177]
[44.30139923 359.00497437]
[59.02449799 356.10409546]
[73.91408539 354.23733521]
[88.89762878 353.41375732]
[89.12095642 338.41540527]
[81.57400513 325.57437134]
[89.51590729 311.89089966]
[89.73923492 296.89257812]
[82.19228363 284.05151367]
[90.13419342 270.36807251]
[90.35752106 255.36973572]
[90.58084869 240.37139893]
[90.80417633 225.37306213]
[77.06429291 219.52969360]
[66.57997894 208.84210205]
[60.97111130 194.91709900]
[61.12126923 179.86502075]
[67.03871155 165.97987366]
[77.85037231 155.38973999]
[91.93050385 149.73062134]
[92.15383148 134.73228455]
[92.37715912 119.73394012]
[92.60048676 104.73560333]
[90.67064667 102.37653351]
[89.55652618 99.26313019]
[89.53916931 95.69618225]
[90.78456116 92.07606506]
[93.31015778 88.85824585]
[94.42580414 73.89979553]
[95.54145050 58.94134140]
[96.65710449 43.98288727]
[97.77275085 29.02443314]
[98.88839722 14.06597996]
[88.85206604 2.15339160]
[90.19657898 -13.00071430]
[101.61526489 -22.49541092]
[101.95024109 -37.49167252]
[93.80548859 -51.05535507]
[101.16041565 -64.00735474]
[100.71381378 -79.00070190]
[100.26720428 -93.99405670]
[99.82060242 -108.98740387]
[99.37399292 -123.98075104]
[98.70420837 -138.96578979]
[97.81139374 -153.93919373]
[96.91857910 -168.91259766]
[96.02576447 -183.88601685]
[95.13294983 -198.85942078]
[80.24457550 -201.10220337]
[66.14799500 -206.39181519]
[53.45943832 -214.49702454]
[42.73360062 -225.06347656]
[34.43937302 -237.62928772]
[28.93933487 -251.64511108]
[26.47393227 -266.49822998]
[27.15093613 -281.53936768]
[30.94075394 -296.11093140]
[37.67771149 -309.57598877]
[47.06729507 -321.34582520]
[58.69903564 -330.90597534]
[72.06443787 -337.83847046]
[86.57923126 -341.84027100]
[101.60888672 -342.73645020]
[116.49637604 -340.48779297]
[130.59088135 -335.19265747]
[143.27624512 -327.08245850]
[153.99792480 -316.51177979]
[162.28720093 -303.94271851]
[167.78172302 -289.92471313]
[170.24128723 -275.07061768]
[169.55836487 -260.02975464]
[165.76281738 -245.45968628]
[159.02056885 -231.99729919]
[149.62634277 -220.23114014]
[137.99084473 -210.67558289]
[124.62271881 -203.74833679]
[110.10635376 -199.75222778]
[110.99916840 -184.77882385]
[111.89198303 -169.80541992]
[112.78479767 -154.83201599]
[113.67761230 -139.85861206]
[116.59168243 -136.07479858]
[117.15971375 -130.42021179]
[114.36734772 -124.42736053]
[114.81394958 -109.43401337]
[115.26055908 -94.44065857]
[115.70716095 -79.44731140]
[116.15377045 -64.45396423]
[124.26657867 -51.96269989]
[116.94358826 -37.93827820]
[127.16562653 -48.91597748]
[142.03656006 -50.87953568]
[154.75758362 -42.93123627]
[159.51283264 -28.70493317]
[154.12825012 -14.70470524]
[141.06562805 -7.33126497]
[126.29698944 -9.95565033]
[116.57371521 -21.37976265]
[126.45761108 -10.29625225]
[125.53927612 4.88963938]
[113.84685516 15.18162823]
[112.73120117 30.14008141]
[111.61555481 45.09853363]
[110.49990845 60.05698776]
[109.38425446 75.01544189]
[108.26860809 89.97389221]
[107.59882355 104.95893097]
[107.37549591 119.95727539]
[107.15216827 134.95561218]
[106.92884064 149.95394897]
[120.83423615 156.02976990]
[131.32579041 166.93711853]
[136.82720947 180.99229431]
[136.52914429 196.04217529]
[130.50814819 209.79399109]
[119.71028137 220.16468811]
[105.80251312 225.59638977]
[105.57918549 240.59472656]
[105.35585785 255.59306335]
[105.13253021 270.59140015]
[112.66350555 284.50524902]
[104.73757172 297.11590576]
[104.51424408 312.11422729]
[112.04522705 326.02807617]
[104.11929321 338.63873291]
[103.89596558 353.63708496]
[118.84834290 354.90640259]
[133.67575073 357.21566772]
[148.30595398 360.55361938]
[162.66766357 364.90399170]
[176.69093323 370.24560547]
[190.30743408 376.55242920]
[203.45080566 383.79370117]
[216.05703735 391.93420410]
[228.06471252 400.93423462]
[239.41531372 410.74996948]
[250.05355835 421.33355713]
[259.92761230 432.63345337]
[268.98937988 444.59460449]
[277.19467163 457.15875244]
[284.50357056 470.26467896]
[290.88040161 483.84851074]
[296.29415894 497.84408569]
[300.71844482 512.18316650]
[304.13171387 526.79602051]
[306.51730347 541.61132812]
[307.86361694 556.55694580]
[308.16409302 571.56011963]
[307.41726685 586.54766846]
[305.62677002 601.44665527]
[302.80133057 616.18438721]
[298.95471191 630.68914795]
[294.10568237 644.89025879]
[288.27783203 658.71850586]
[281.49954224 672.10656738]
[273.80386353 684.98919678]
[265.22830200 697.30358887]
[255.81460571 708.98974609]
[245.60864258 719.99078369]
[234.66015625 730.25311279]
[223.02246094 739.72674561]
[210.75227356 748.36541748]
[197.90936279 756.12713623]
[184.55632019 762.97412109]
[170.75816345 768.87292480]
[156.58215332 773.79479980]
[142.09732056 777.71588135]
[127.37426758 780.61694336]
[112.48470306 782.48394775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 167]
[46 166]
[48 164]
[49 163]
[51 161]
[52 160]
[53 159]
[54 158]
[61 151]
[62 150]
[63 149]
[64 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 142]
[77 139]
[78 131]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
