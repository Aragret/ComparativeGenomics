%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[48.43240738 735.16827393]
[34.99402618 741.90301514]
[20.66751671 746.45245361]
[5.80567884 748.70465088]
[-9.22550106 748.60406494]
[-24.05586624 746.15319824]
[-38.32020569 741.41241455]
[-51.66724777 734.49841309]
[-63.76831055 725.58154297]
[-74.32539368 714.88134766]
[-83.07851410 702.66131592]
[-89.81212616 689.22235107]
[-94.36041260 674.89544678]
[-96.61135101 660.03344727]
[-96.50952148 645.00225830]
[-94.05743408 630.17211914]
[-89.31546783 615.90814209]
[-82.40039825 602.56170654]
[-73.48251343 590.46136475]
[-62.78143692 579.90515137]
[-50.56067657 571.15307617]
[-37.12118530 564.42053223]
[-22.79392624 559.87347412]
[-7.93171597 557.62371826]
[7.09944725 557.72680664]
[9.54517460 542.92755127]
[11.99090195 528.12823486]
[14.21601963 513.29418945]
[16.22003365 498.42868042]
[18.22404671 483.56317139]
[20.22805977 468.69763184]
[22.23207474 453.83209229]
[13.02540493 442.17993164]
[14.84599495 427.07565308]
[27.13027573 417.49783325]
[29.13429070 402.63232422]
[31.13830376 387.76678467]
[33.14231873 372.90124512]
[34.92478180 358.00753784]
[36.48530579 343.08892822]
[38.04582977 328.17031860]
[27.55697823 338.89340210]
[12.96001625 342.34719849]
[-1.22202671 337.46151733]
[-10.59469223 325.75030518]
[-12.25375652 310.84231567]
[-5.68514156 297.35702515]
[7.07579613 289.47296143]
[22.07494164 289.63308716]
[34.66464615 297.78781128]
[40.94388962 311.41052246]
[44.48356247 296.83416748]
[48.02323532 282.25778198]
[35.54792023 274.03271484]
[26.62266350 262.01318359]
[22.34018707 247.63838196]
[23.23585320 232.63774109]
[29.22082710 218.82289124]
[39.59047318 207.86886597]
[53.10725784 201.11100769]
[68.14842224 199.38223267]
[71.68809509 184.80586243]
[67.17266846 170.61218262]
[77.94799042 159.02758789]
[81.48766327 144.45121765]
[85.02733612 129.87483215]
[88.56700897 115.29846191]
[81.11830139 102.87014771]
[84.53751373 88.78983307]
[96.85661316 81.16186523]
[100.39628601 66.58548737]
[87.63219452 74.46443939]
[72.77217102 72.41998291]
[62.61002731 61.38681793]
[61.79175186 46.40915298]
[70.69145203 34.33457947]
[85.24030304 30.68342781]
[98.78676605 37.12495804]
[105.13775635 50.71603012]
[110.17467499 36.58700180]
[115.21158600 22.45797157]
[120.14318085 8.29183769]
[124.96917725 -5.91061831]
[122.08324432 -21.46638680]
[133.50393677 -31.02760887]
[130.61799622 -46.58337784]
[142.03869629 -56.14459991]
[146.86470032 -70.34705353]
[143.97875977 -85.90282440]
[155.39945984 -95.46404266]
[160.22544861 -109.66649628]
[155.23483276 -121.56005096]
[159.54679871 -133.28994751]
[170.33786011 -138.75616455]
[175.37477112 -152.88519287]
[172.72076416 -168.48220825]
[184.28254700 -177.87232971]
[189.31945801 -192.00135803]
[194.35636902 -206.13040161]
[181.24821472 -213.49816895]
[169.57386780 -222.97538757]
[159.66923523 -234.28936768]
[151.81927490 -247.11459351]
[146.24987793 -261.08203125]
[143.12126160 -275.78985596]
[142.52345276 -290.81484985]
[144.47363281 -305.72473145]
[148.91572571 -320.09054565]
[155.72189331 -333.49890137]
[164.69631958 -345.56402588]
[175.58081055 -355.93881226]
[188.06216431 -364.32473755]
[201.78128052 -370.48052979]
[216.34344482 -374.22906494]
[231.32965088 -375.46249390]
[246.30874634 -374.14532471]
[260.84973145 -370.31549072]
[274.53424072 -364.08309937]
[286.96853638 -355.62756348]
[297.79486084 -345.19210815]
[306.70172119 -333.07699585]
[313.43286133 -319.63082886]
[317.79458618 -305.24044800]
[319.66140747 -290.31988525]
[318.97964478 -275.29846191]
[315.76889038 -260.60836792]
[310.12152100 -246.67224121]
[302.20001221 -233.89109802]
[292.23229980 -222.63264465]
[280.50515747 -213.22080994]
[267.35604858 -205.92640686]
[253.16322327 -200.95930481]
[238.33509827 -198.46241760]
[223.29827881 -198.50756836]
[208.48541260 -201.09347534]
[203.44848633 -186.96444702]
[198.41157532 -172.83541870]
[201.42585754 -158.24900818]
[189.50379944 -147.84828186]
[184.46688843 -133.71925354]
[188.55410767 -116.65287018]
[174.42790222 -104.84049988]
[169.60191345 -90.63804626]
[172.83303833 -76.09812927]
[161.06715393 -65.52105713]
[156.24114990 -51.31859970]
[159.47227478 -36.77868652]
[147.70639038 -26.20161057]
[150.93751526 -11.66169643]
[139.17163086 -1.08462071]
[134.34564209 13.11783504]
[135.16998291 20.46237373]
[129.34062195 27.49488831]
[124.30370331 41.62391663]
[119.26678467 55.75294876]
[114.97266388 70.12516022]
[111.43299103 84.70153809]
[118.88169861 97.12985229]
[115.46248627 111.21016693]
[103.14338684 118.83813477]
[99.60371399 133.41450500]
[96.06404114 147.99089050]
[92.52436829 162.56726074]
[96.78661346 177.80352783]
[86.26447296 188.34553528]
[82.72480011 202.92190552]
[95.29794312 211.35644531]
[104.21000671 223.56082153]
[108.40095520 238.05068970]
[107.38349915 253.07183838]
[101.29970551 266.81262207]
[90.90149689 277.62240601]
[77.45777893 284.20993042]
[62.59960938 285.79745483]
[59.05994034 300.37380981]
[55.52026749 314.95019531]
[52.96443558 329.73086548]
[51.40391159 344.64944458]
[49.84338760 359.56805420]
[52.18229675 365.75198364]
[51.19526672 371.34866333]
[48.00784683 374.90527344]
[46.00382996 389.77081299]
[43.99981689 404.63632202]
[41.99580383 419.50186157]
[51.30529404 431.99069214]
[49.06117630 447.03790283]
[37.09760284 455.83612061]
[35.09358978 470.70166016]
[33.08957672 485.56716919]
[31.08556175 500.43270874]
[29.08154678 515.29821777]
[31.23530197 521.54907227]
[30.08207512 527.11389160]
[26.79017258 530.57397461]
[24.34444618 545.37329102]
[21.89871788 560.17254639]
[36.16384125 564.91094971]
[49.51202393 571.82275391]
[61.61455536 580.73760986]
[72.17340088 591.43609619]
[80.92854309 603.65466309]
[87.66437531 617.09252930]
[92.21501923 631.41864014]
[94.46841431 646.28027344]
[94.36906433 661.31146240]
[91.91942596 676.14202881]
[87.17980957 690.40679932]
[80.26694489 703.75439453]
[71.35105896 715.85620117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 197]
[26 196]
[27 195]
[28 192]
[29 191]
[30 190]
[31 189]
[32 188]
[35 185]
[36 184]
[37 183]
[38 182]
[39 179]
[40 178]
[41 177]
[51 176]
[52 175]
[53 174]
[61 166]
[62 165]
[64 163]
[65 162]
[66 161]
[67 160]
[70 157]
[71 156]
[79 155]
[80 154]
[81 153]
[82 151]
[83 150]
[85 148]
[87 146]
[88 145]
[90 143]
[91 142]
[94 140]
[95 139]
[97 137]
[98 136]
[99 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
