%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[107.51898956 376.51507568]
[102.16109467 362.49804688]
[97.79404449 348.14138794]
[94.43910217 333.51507568]
[92.11261749 318.69033813]
[90.82592010 303.73944092]
[90.58528900 288.73522949]
[91.39189148 273.75076294]
[93.24179840 258.85906982]
[96.12599182 244.13269043]
[100.03041840 229.64338684]
[104.93607330 215.46173096]
[110.81903839 201.65682983]
[117.65065765 188.29592896]
[125.39765167 175.44412231]
[134.02227783 163.16403198]
[143.48251343 151.51548767]
[132.52659607 141.27009583]
[121.57068634 131.02470398]
[114.53813171 128.75205994]
[110.52937317 120.54427338]
[99.72721863 110.13690186]
[92.19882202 107.25665283]
[88.84316254 99.49325562]
[78.19715118 88.92620850]
[67.55114746 78.35916138]
[56.90513611 67.79210663]
[46.25912857 57.22506332]
[28.35052299 52.93981552]
[24.40959549 35.83905411]
[13.60743904 25.43167877]
[2.80528283 15.02430630]
[-7.99687338 4.61693335]
[-19.12138557 14.68778229]
[-30.90722466 23.97598648]
[-43.29943848 32.43824005]
[-56.24025345 40.03508759]
[-69.66932678 46.73110962]
[-83.52404785 52.49508286]
[-97.73982239 57.30014038]
[-112.25036621 61.12386703]
[-126.98802185 63.94844437]
[-141.88407898 65.76069641]
[-156.86907959 66.55218506]
[-171.87315369 66.31920624]
[-186.82637024 65.06284332]
[-201.65896606 62.78897476]
[-216.30181885 59.50818253]
[-230.68664551 55.23577499]
[-244.74638367 49.99166489]
[-258.41546631 43.80030441]
[-271.63015747 36.69056702]
[-284.32888794 28.69559479]
[-296.45239258 19.85266685]
[-307.94415283 10.20301342]
[-318.75064087 -0.20837398]
[-328.82141113 -11.33295250]
[-338.10952759 -23.11885452]
[-346.57168579 -35.51112747]
[-354.16845703 -48.45199203]
[-360.86437988 -61.88111115]
[-366.62826538 -75.73587036]
[-371.43322754 -89.95167542]
[-375.25686646 -104.46224213]
[-378.08132935 -119.19992065]
[-379.89349365 -134.09599304]
[-380.68487549 -149.08099365]
[-380.45178223 -164.08506775]
[-379.19534302 -179.03826904]
[-376.92135620 -193.87086487]
[-373.64047241 -208.51368713]
[-369.36798096 -222.89849854]
[-364.12377930 -236.95819092]
[-357.93231201 -250.62722778]
[-350.82247925 -263.84188843]
[-342.82742310 -276.54052734]
[-333.98443604 -288.66397095]
[-324.33468628 -300.15570068]
[-313.92324829 -310.96209717]
[-302.79858398 -321.03280640]
[-291.01263428 -330.32083130]
[-278.62030029 -338.78292847]
[-265.67938232 -346.37960815]
[-252.25021362 -353.07543945]
[-238.39541626 -358.83923340]
[-224.17958069 -363.64410400]
[-209.66899109 -367.46762085]
[-194.93128967 -370.29202271]
[-180.03521729 -372.10406494]
[-165.05020142 -372.89535522]
[-150.04612732 -372.66217041]
[-135.09294128 -371.40560913]
[-120.26036072 -369.13153076]
[-105.61754608 -365.85055542]
[-91.23278046 -361.57794189]
[-77.17311859 -356.33364868]
[-63.50411606 -350.14212036]
[-50.28950882 -343.03219604]
[-37.59090805 -335.03704834]
[-25.46752357 -326.19396973]
[-13.97587585 -316.54415894]
[-3.16954756 -306.13262939]
[6.90107727 -295.00790405]
[16.18904495 -283.22189331]
[24.65104866 -270.82949829]
[32.24763489 -257.88851929]
[38.94338989 -244.45932007]
[44.70708466 -230.60447693]
[49.51185226 -216.38861084]
[53.33528900 -201.87799072]
[56.15957260 -187.14027405]
[57.97152710 -172.24418640]
[58.76270676 -157.25917053]
[58.52942657 -142.25509644]
[57.27276993 -127.30191040]
[54.99859619 -112.46935272]
[51.71751404 -97.82656097]
[47.44481277 -83.44182587]
[42.20042038 -69.38219452]
[36.00878906 -55.71323776]
[28.89878273 -42.49868011]
[20.90355492 -29.80013275]
[12.06038380 -17.67680550]
[2.41049957 -6.18522310]
[13.21265602 4.22214985]
[24.01481247 14.62952328]
[34.81696701 25.03689575]
[46.91319656 25.12536049]
[55.99782562 33.70750809]
[56.82617569 46.57905197]
[67.47218323 57.14610291]
[78.11819458 67.71315002]
[88.76419830 78.28019714]
[99.41020966 88.84724426]
[110.13459015 99.33474731]
[120.93674469 109.74211884]
[131.81608582 120.06878662]
[142.77198792 130.31417847]
[153.72790527 140.55957031]
[164.71694946 130.34068298]
[176.39205933 120.91325378]
[188.69636536 112.32320404]
[201.56990051 104.61238861]
[214.94996643 97.81837463]
[228.77136230 91.97425842]
[242.96675110 87.10852051]
[257.46697998 83.24485779]
[272.20141602 80.40209198]
[287.09826660 78.59408569]
[302.08493042 77.82963562]
[317.08843994 78.11246490]
[332.03564453 79.44120789]
[346.85375977 81.80937958]
[361.47058105 85.20545197]
[375.81488037 89.61286926]
[389.81680298 95.01016235]
[403.40814209 101.37104034]
[416.52264404 108.66451263]
[429.09640503 116.85503387]
[441.06820679 125.90271759]
[452.37973022 135.76347351]
[462.97583008 146.38926697]
[472.80490112 157.72831726]
[481.81903076 169.72540283]
[489.97433472 182.32205200]
[497.23107910 195.45690918]
[503.55389404 209.06597900]
[508.91198730 223.08294678]
[513.27923584 237.43954468]
[516.63439941 252.06581116]
[518.96112061 266.89050293]
[520.24798584 281.84136963]
[520.48883057 296.84558105]
[519.68249512 311.83007812]
[517.83276367 326.72180176]
[514.94879150 341.44821167]
[511.04458618 355.93756104]
[506.13912964 370.11929321]
[500.25634766 383.92428589]
[493.42492676 397.28527832]
[485.67813110 410.13720703]
[477.05368042 422.41741943]
[467.59359741 434.06610107]
[457.34402466 445.02648926]
[446.35482788 455.24523926]
[434.67956543 464.67248535]
[422.37515259 473.26235962]
[409.50149536 480.97299194]
[396.12133789 487.76681519]
[382.29986572 493.61074829]
[368.10440063 498.47628784]
[353.60409546 502.33972168]
[338.86962891 505.18228149]
[323.97274780 506.99008179]
[308.98608398 507.75430298]
[293.98260498 507.47125244]
[279.03540039 506.14230347]
[264.21731567 503.77392578]
[249.60054016 500.37765503]
[235.25630188 495.97003174]
[221.25444031 490.57254028]
[207.66322327 484.21145630]
[194.54882812 476.91778564]
[181.97515869 468.72708130]
[170.00347900 459.67922974]
[158.69212341 449.81832886]
[148.09617615 439.19238281]
[138.26727295 427.85317993]
[129.25329590 415.85595703]
[121.09816742 403.25921631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 139]
[18 138]
[19 137]
[21 136]
[22 135]
[24 134]
[25 133]
[26 132]
[27 131]
[28 130]
[30 127]
[31 126]
[32 125]
[33 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
