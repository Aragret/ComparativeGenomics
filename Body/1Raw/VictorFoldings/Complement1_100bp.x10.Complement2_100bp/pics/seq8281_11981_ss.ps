%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[17.92742920 950.69952393]
[2.92653394 950.90460205]
[-12.06942654 950.46856689]
[-27.03306007 949.39215088]
[-41.93703079 947.67736816]
[-56.75411224 945.32727051]
[-71.45724487 942.34613037]
[-86.01956940 938.73956299]
[-100.41447449 934.51397705]
[-114.61568451 929.67712402]
[-128.59724426 924.23791504]
[-142.33361816 918.20629883]
[-155.79971313 911.59313965]
[-168.97093201 904.41070557]
[-181.82321167 896.67199707]
[-194.33308411 888.39117432]
[-206.47769165 879.58331299]
[-218.23486328 870.26464844]
[-229.58309937 860.45208740]
[-240.50167847 850.16357422]
[-250.97065735 839.41790771]
[-260.97091675 828.23468018]
[-270.48419189 816.63439941]
[-279.49310303 804.63824463]
[-287.98120117 792.26806641]
[-295.93295288 779.54644775]
[-303.33386230 766.49676514]
[-310.17037964 753.14270020]
[-316.43005371 739.50872803]
[-322.10144043 725.61968994]
[-327.17416382 711.50103760]
[-331.63897705 697.17852783]
[-335.48770142 682.67828369]
[-338.71331787 668.02685547]
[-341.30993652 653.25097656]
[-343.27282715 638.37768555]
[-344.59835815 623.43402100]
[-345.28417969 608.44744873]
[-345.32897949 593.44519043]
[-344.73269653 578.45477295]
[-343.49642944 563.50347900]
[-341.62240601 548.61871338]
[-339.11410522 533.82757568]
[-335.97604370 519.15716553]
[-332.21398926 504.63418579]
[-327.83480835 490.28524780]
[-322.84652710 476.13656616]
[-317.25820923 462.21392822]
[-311.08007812 448.54278564]
[-304.32342529 435.14813232]
[-297.00061035 422.05444336]
[-289.12496948 409.28558350]
[-280.71090698 396.86492920]
[-271.77383423 384.81515503]
[-262.33001709 373.15826416]
[-252.39672852 361.91552734]
[-241.99211121 351.10751343]
[-231.13517761 340.75396729]
[-219.84574890 330.87380981]
[-208.14445496 321.48504639]
[-196.05267334 312.60485840]
[-183.59248352 304.24945068]
[-170.78665161 296.43411255]
[-157.65856934 289.17309570]
[-144.23220825 282.47967529]
[-130.53211975 276.36605835]
[-116.58329010 270.84344482]
[-102.41123199 265.92190552]
[-88.04181671 261.61041260]
[-73.50129700 257.91687012]
[-58.81623077 254.84802246]
[-44.01345062 252.40945435]
[-29.11998749 250.60563660]
[-14.16305065 249.43986511]
[0.83003807 248.91426086]
[15.83189201 249.02980042]
[30.81510735 249.78623962]
[45.75231552 251.18223572]
[60.61623001 253.21520996]
[63.28202438 238.45399475]
[65.94782257 223.69277954]
[68.61361694 208.93156433]
[71.27941132 194.17033386]
[69.58015442 191.08085632]
[69.29289246 187.01484680]
[70.86030579 182.64488220]
[74.40794373 178.81587219]
[77.73020172 164.18841553]
[81.05245972 149.56095886]
[84.37472534 134.93348694]
[87.69698334 120.30603027]
[91.01924133 105.67857361]
[93.35472870 90.86150360]
[86.87947083 76.42607117]
[95.72138977 64.43984222]
[97.05962372 49.49965668]
[98.39785767 34.55947113]
[99.73609161 19.61928749]
[101.07432556 4.67910147]
[102.41255951 -10.26108360]
[88.67717743 -16.67318726]
[77.96540833 -27.39856339]
[71.57073975 -41.14207458]
[70.26536560 -56.24412155]
[74.20692444 -70.88105774]
[82.91944122 -83.28540802]
[95.35084534 -91.95928192]
[109.99997711 -95.85526276]
[125.09788513 -94.50289917]
[138.82142639 -88.06549835]
[149.51341248 -77.32039642]
[155.88275146 -63.56512451]
[157.16027832 -48.46070099]
[153.19175720 -33.83105087]
[144.45640564 -21.44277954]
[132.00903320 -12.79183102]
[117.35274506 -8.92284966]
[116.01451111 6.01733589]
[114.67627716 20.95752144]
[113.33804321 35.89770508]
[111.99980927 50.83789062]
[110.66157532 65.77807617]
[117.23255157 79.14488220]
[108.29491425 92.19973755]
[118.62295532 81.32170105]
[133.16687012 77.65096283]
[147.42008972 82.32492828]
[156.96607971 93.89532471]
[158.84690857 108.77693939]
[152.47979736 122.35854340]
[139.83766174 130.43171692]
[124.83779144 130.49491882]
[112.12807465 122.52854919]
[105.64669800 109.00083160]
[102.32444000 123.62828827]
[99.00218201 138.25575256]
[95.67992401 152.88320923]
[92.35766602 167.51066589]
[89.03540039 182.13813782]
[86.04062653 196.83613586]
[83.37483215 211.59735107]
[80.70903778 226.35856628]
[78.04324341 241.11978149]
[75.37744904 255.88101196]
[90.01352692 259.17556763]
[104.49546051 263.09252930]
[118.79680634 267.62469482]
[132.89141846 272.76382446]
[146.75357056 278.50051880]
[160.35794067 284.82431030]
[173.67965698 291.72363281]
[186.69439697 299.18591309]
[199.37840271 307.19744873]
[211.70849609 315.74368286]
[223.66213989 324.80895996]
[235.21749878 334.37673950]
[246.35348511 344.42956543]
[257.04974365 354.94900513]
[267.28674316 365.91589355]
[277.04577637 377.31021118]
[286.30902100 389.11111450]
[295.05957031 401.29705811]
[303.28140259 413.84576416]
[310.95953369 426.73434448]
[318.07992554 439.93923950]
[324.62954712 453.43630981]
[330.59649658 467.20092773]
[335.96981812 481.20794678]
[340.73971558 495.43176270]
[344.89746094 509.84640503]
[348.43551636 524.42553711]
[351.34735107 539.14257812]
[353.62765503 553.97052002]
[355.27230835 568.88238525]
[356.27825928 583.85095215]
[356.64370728 598.84881592]
[356.36795044 613.84857178]
[355.45150757 628.82281494]
[353.89605713 643.74426270]
[351.70443726 658.58563232]
[348.88067627 673.31976318]
[345.42987061 687.91979980]
[341.35836792 702.35906982]
[336.67361450 716.61114502]
[331.38415527 730.65002441]
[325.49963379 744.45007324]
[319.03079224 757.98608398]
[311.98950195 771.23333740]
[304.38858032 784.16760254]
[296.24191284 796.76525879]
[287.56442261 809.00329590]
[278.37188721 820.85937500]
[268.68115234 832.31182861]
[258.50991821 843.33972168]
[247.87675476 853.92297363]
[236.80108643 864.04217529]
[225.30313110 873.67889404]
[213.40390015 882.81549072]
[201.12515259 891.43530273]
[188.48927307 899.52252197]
[175.51937866 907.06250000]
[162.23915100 914.04132080]
[148.67285156 920.44635010]
[134.84524536 926.26586914]
[120.78160858 931.48919678]
[106.50762939 936.10681152]
[92.04936981 940.11022949]
[77.43325043 943.49224854]
[62.68597031 946.24664307]
[47.83446503 948.36840820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[87 139]
[88 138]
[89 137]
[90 136]
[91 135]
[92 134]
[93 124]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
