%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[103.48408508 837.35302734]
[88.49051666 837.98156738]
[73.49105072 837.51397705]
[58.56573868 835.95275879]
[43.79420471 833.30621338]
[29.25526619 829.58850098]
[15.02649021 824.81939697]
[1.18379688 819.02435303]
[-12.19895554 812.23437500]
[-25.05036354 804.48553467]
[-37.30186081 795.81933594]
[-48.88807678 786.28192139]
[-59.74719620 775.92425537]
[-69.82127380 764.80151367]
[-79.05657196 752.97308350]
[-87.40380096 740.50207520]
[-94.81843567 727.45501709]
[-101.26091003 713.90155029]
[-106.69685364 699.91394043]
[-111.09725952 685.56683350]
[-114.43865204 670.93682861]
[-116.70320129 656.10192871]
[-117.87882233 641.14129639]
[-117.95925140 626.13476562]
[-116.94404602 611.16241455]
[-114.83863831 596.30407715]
[-111.65425110 581.63909912]
[-107.40787506 567.24566650]
[-102.12216949 553.20062256]
[-95.82534027 539.57885742]
[-88.55097961 526.45306396]
[-80.33789062 513.89331055]
[-71.22991180 501.96655273]
[-61.27563095 490.73648071]
[-50.52815628 480.26300049]
[-39.04483032 470.60195923]
[-26.88692665 461.80490112]
[-14.11931133 453.91882324]
[-0.81010646 446.98574829]
[12.96967697 441.04269409]
[27.14651871 436.12136841]
[41.64477539 432.24798584]
[56.38709259 429.44326782]
[71.29481506 427.72216797]
[86.28839874 427.09384155]
[101.28785706 427.56164551]
[102.84837341 412.64306641]
[104.40889740 397.72445679]
[105.96942139 382.80584717]
[107.52994537 367.88723755]
[109.09046936 352.96862793]
[110.65099335 338.05001831]
[104.27975464 324.58688354]
[113.41077423 311.66653442]
[114.97129059 296.74792480]
[116.53181458 281.82931519]
[116.19683838 266.83306885]
[113.97172546 251.99902344]
[111.74660492 237.16497803]
[109.52149200 222.33093262]
[95.78390503 219.46418762]
[83.82455444 212.06471252]
[75.09071350 201.00399780]
[70.64751434 187.59802246]
[71.04802704 173.45069885]
[76.26451874 160.26202393]
[85.68935394 149.62371826]
[98.20566559 142.82716370]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.71172333 74.07386780]
[86.26599121 59.27459335]
[83.82026672 44.47532272]
[81.37453461 29.67605209]
[78.92881012 14.87678242]
[75.03585052 9.53296280]
[74.50560760 3.87470651]
[76.63743591 -0.39897537]
[74.63342285 -15.26450348]
[72.62940979 -30.13003159]
[60.34512711 -39.70782852]
[58.52453613 -54.81213760]
[67.73120880 -66.46429443]
[65.72719574 -81.32982635]
[61.47932434 -89.41644287]
[63.80570984 -96.43140411]
[62.02324677 -111.32512665]
[60.24077988 -126.21884155]
[58.45831299 -141.11256409]
[43.55937958 -143.60221863]
[29.96597672 -150.18978882]
[18.78006172 -160.34124756]
[10.90842724 -173.23364258]
[6.98919106 -187.82186890]
[7.34006834 -202.92330933]
[11.93261433 -217.31376648]
[20.39453316 -229.82666016]
[32.03985596 -239.44764709]
[45.92454529 -245.39675903]
[60.92303085 -247.19177246]
[75.81945801 -244.68714905]
[89.40623474 -238.08592224]
[100.58194733 -227.92323303]
[108.44062805 -215.02293396]
[112.34520721 -200.43077087]
[111.97915649 -185.32969666]
[107.37215424 -170.94386292]
[98.89766693 -158.43946838]
[87.24269104 -148.83020020]
[73.35202789 -142.89501953]
[75.13449860 -128.00131226]
[76.91696167 -113.10758972]
[78.69943237 -98.21387482]
[80.59272003 -83.33383942]
[82.59673309 -68.46830750]
[94.56031036 -59.67009735]
[96.80442810 -44.62288666]
[87.49493408 -32.13404465]
[89.49894714 -17.26851654]
[91.50296783 -2.40298915]
[93.72808075 12.43105507]
[96.17380524 27.23032570]
[98.61953735 42.02959824]
[101.06526184 56.82886887]
[103.51099396 71.62813568]
[106.80289459 75.08825684]
[107.95611572 80.65306854]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[113.07118988 140.82315063]
[128.64050293 144.83621216]
[141.44702148 154.49351501]
[149.54754639 168.29269409]
[151.72720337 184.10575867]
[147.68153381 199.50729370]
[138.05862427 212.14646912]
[124.35552979 220.10581970]
[126.58065033 234.93986511]
[128.80577087 249.77391052]
[131.03088379 264.60794067]
[136.11343384 250.49526978]
[145.45152283 238.75643921]
[158.05967712 230.63029480]
[172.60733032 226.97438049]
[187.55924988 228.17454529]
[201.33749390 234.10411072]
[212.48803711 244.13732910]
[219.83412170 257.21536255]
[222.60050964 271.95806885]
[220.49523926 286.80960083]
[213.74050903 300.20263672]
[203.04913330 310.72378540]
[189.54942322 317.26272583]
[174.66603088 319.12939453]
[159.96961975 316.12680054]
[147.01115417 308.57177734]
[137.15817261 297.26165771]
[131.45042419 283.38986206]
[129.88989258 298.30844116]
[128.32937622 313.22705078]
[134.58898926 327.75729370]
[125.56959534 339.61056519]
[124.00907135 354.52917480]
[122.44854736 369.44775391]
[120.88802338 384.36636353]
[119.32750702 399.28497314]
[117.76698303 414.20358276]
[116.20645905 429.12219238]
[130.97804260 431.76849365]
[145.51704407 435.48599243]
[159.74589539 440.25485229]
[173.58868408 446.04965210]
[186.97154236 452.83944702]
[199.82307434 460.58801270]
[212.07472229 469.25402832]
[223.66108704 478.79125977]
[234.52038574 489.14877319]
[244.59465027 500.27133179]
[253.83013916 512.09960938]
[262.17758179 524.57049561]
[269.59240723 537.61743164]
[276.03512573 551.17077637]
[281.47128296 565.15832520]
[285.87191772 579.50531006]
[289.21356201 594.13531494]
[291.47836304 608.97015381]
[292.65420532 623.93078613]
[292.73489380 638.93725586]
[291.71994019 653.90966797]
[289.61477661 668.76800537]
[286.43063354 683.43304443]
[282.18447876 697.82653809]
[276.89901733 711.87170410]
[270.60241699 725.49359131]
[263.32824707 738.61944580]
[255.11538696 751.17938232]
[246.00759888 763.10626221]
[236.05349731 774.33648682]
[225.30619812 784.81018066]
[213.82302856 794.47143555]
[201.66526794 803.26861572]
[188.89778137 811.15496826]
[175.58869934 818.08825684]
[161.80900574 824.03149414]
[147.63224792 828.95306396]
[133.13404846 832.82666016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 172]
[47 171]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[54 164]
[55 163]
[56 162]
[57 144]
[58 143]
[59 142]
[60 141]
[68 134]
[69 133]
[70 132]
[72 130]
[73 127]
[74 126]
[75 125]
[76 124]
[77 123]
[80 122]
[81 121]
[82 120]
[85 117]
[86 116]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
