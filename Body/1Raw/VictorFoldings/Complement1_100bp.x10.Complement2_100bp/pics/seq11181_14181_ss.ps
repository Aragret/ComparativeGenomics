%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[138.67787170 714.60290527]
[125.41874695 707.57952881]
[112.59897614 699.78295898]
[100.26359558 691.24060059]
[88.45593262 681.98254395]
[77.21746063 672.04119873]
[66.58766174 661.45159912]
[56.60387039 650.25085449]
[47.30115128 638.47833252]
[38.71218872 626.17535400]
[30.86714363 613.38519287]
[23.79357719 600.15277100]
[17.51633453 586.52447510]
[12.05746555 572.54833984]
[7.43614340 558.27331543]
[3.66860127 543.74957275]
[0.76807320 529.02813721]
[-1.25525284 514.16076660]
[-2.39426970 499.19964600]
[-2.64497662 484.19729614]
[-2.00649261 469.20645142]
[-0.48106098 454.27978516]
[1.92596054 439.46966553]
[5.20611715 424.82815552]
[9.34788704 410.40670776]
[14.33672142 396.25592041]
[20.15509796 382.42553711]
[26.78257751 368.96414185]
[34.19588470 355.91897583]
[42.36897278 343.33590698]
[51.27313995 331.25912476]
[60.87710571 319.73104858]
[71.14714050 308.79214478]
[82.04716492 298.48086548]
[93.53889465 288.83343506]
[105.58196259 279.88372803]
[118.13406372 271.66314697]
[131.15112305 264.20062256]
[144.58740234 257.52233887]
[138.71844482 243.71817017]
[132.84947205 229.91400146]
[126.98051453 216.10981750]
[121.11155701 202.30564880]
[115.24259186 188.50146484]
[112.30595398 203.21119690]
[102.94166565 214.92913818]
[89.24172211 221.03746033]
[74.26673889 220.17155457]
[61.36215210 212.52487183]
[53.41089249 199.80569458]
[52.18928528 184.85551453]
[57.97024155 171.01426697]
[69.46228027 161.37408447]
[84.09805298 158.08862305]
[98.60788727 161.89187622]
[109.75025940 171.93418884]
[106.21058655 157.35781860]
[102.67091370 142.78143311]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[82.75270844 60.75823212]
[79.21303558 46.18185806]
[68.43771362 34.59725952]
[72.95314026 20.40359116]
[69.41346741 5.82721663]
[54.53324509 7.82640362]
[39.52556610 8.25920773]
[24.55486488 7.12088728]
[9.78516483 4.42391443]
[-4.62170839 0.19783820]
[-18.50790405 -5.51103783]
[-31.72127914 -12.64016438]
[-44.11705780 -21.11143112]
[-55.55942917 -30.83201981]
[-65.92301941 -41.69543076]
[-75.09428406 -53.58263397]
[-82.97274017 -66.36338806]
[-89.47205353 -79.89766693]
[-94.52102661 -94.03717041]
[-98.06433868 -108.62698364]
[-100.06316376 -123.50724792]
[-100.49560547 -138.51493835]
[-99.35691833 -153.48561096]
[-96.65959167 -168.25524902]
[-92.43316650 -182.66201782]
[-86.72395325 -196.54808044]
[-79.59450531 -209.76127625]
[-71.12293243 -222.15684509]
[-61.40206909 -233.59898376]
[-50.53840637 -243.96231079]
[-38.65097809 -253.13328552]
[-25.87003326 -261.01144409]
[-12.33560085 -267.51040649]
[1.80402577 -272.55905151]
[16.39392471 -276.10202026]
[31.27424240 -278.10046387]
[46.28194046 -278.53253174]
[61.25259018 -277.39349365]
[76.02215576 -274.69580078]
[90.42882538 -270.46902466]
[104.31474304 -264.75949097]
[117.52777100 -257.62969971]
[129.92314148 -249.15785217]
[141.36503601 -239.43670654]
[151.72810364 -228.57278442]
[160.89878845 -216.68513489]
[168.77662659 -203.90399170]
[175.27528381 -190.36941528]
[180.32356262 -176.22966003]
[183.86616516 -161.63967896]
[185.86427307 -146.75930786]
[186.29598999 -131.75160217]
[185.15657043 -116.78097534]
[182.45852661 -102.01147461]
[178.23139954 -87.60491180]
[172.52151489 -73.71913147]
[165.39141846 -60.50627518]
[156.91925049 -48.11111069]
[147.19783020 -36.66944885]
[136.33366394 -26.30665016]
[124.44579315 -17.13625145]
[111.66445923 -9.25873089]
[98.12971497 -2.76039958]
[83.98983765 2.28754401]
[87.52951050 16.86392021]
[98.05165863 27.40591812]
[93.78941345 42.64218521]
[97.32908630 57.21855927]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[117.24729156 139.24176025]
[120.78696442 153.81814575]
[124.32663727 168.39451599]
[129.04676819 182.63250732]
[134.91572571 196.43669128]
[140.78469849 210.24085999]
[146.65365601 224.04504395]
[152.52261353 237.84921265]
[158.39157104 251.65339661]
[172.52331543 246.61090088]
[186.92897034 242.41442871]
[201.55790710 239.07873535]
[216.35877991 236.61553955]
[231.27957153 235.03347778]
[246.26788330 234.33810425]
[261.27105713 234.53189087]
[276.23641968 235.61412048]
[291.11135864 237.58102417]
[305.84368896 240.42565918]
[320.38159180 244.13806152]
[334.67404175 248.70518494]
[348.67083740 254.11097717]
[362.32281494 260.33645630]
[375.58200073 267.35977173]
[388.40185547 275.15621948]
[400.73730469 283.69842529]
[412.54504395 292.95642090]
[423.78359985 302.89764404]
[434.41351318 313.48718262]
[444.39739990 324.68783569]
[453.70022583 336.46029663]
[462.28927612 348.76315308]
[470.13442993 361.55325317]
[477.20812988 374.78564453]
[483.48547363 388.41384888]
[488.94448853 402.38998413]
[493.56591797 416.66494751]
[497.33358765 431.18865967]
[500.23425293 445.91003418]
[502.25772095 460.77740479]
[503.39685059 475.73852539]
[503.64770508 490.74084473]
[503.00933838 505.73171997]
[501.48403931 520.65838623]
[499.07714844 535.46850586]
[495.79711914 550.11004639]
[491.65548706 564.53155518]
[486.66677856 578.68237305]
[480.84851074 592.51281738]
[474.22116089 605.97430420]
[466.80795288 619.01947021]
[458.63497925 631.60266113]
[449.73092651 643.67950439]
[440.12704468 655.20764160]
[429.85711670 666.14666748]
[418.95718384 676.45800781]
[407.46554565 686.10559082]
[395.42254639 695.05541992]
[382.87051392 703.27606201]
[369.85351562 710.73870850]
[356.41729736 717.41711426]
[342.60903931 723.28778076]
[328.47726440 728.33013916]
[314.07156372 732.52648926]
[299.44259644 735.86206055]
[284.64172363 738.32513428]
[269.72091675 739.90704346]
[254.73258972 740.60229492]
[239.72941589 740.40838623]
[224.76406860 739.32604980]
[209.88912964 737.35900879]
[195.15684509 734.51422119]
[180.61895752 730.80169678]
[166.32653809 726.23443604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[62 133]
[63 132]
[64 131]
[65 130]
[67 128]
[68 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
