%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[150.26380920 775.26232910]
[135.89091492 770.95971680]
[121.74839020 765.95159912]
[107.87083435 760.25018311]
[94.29222107 753.86944580]
[81.04576874 746.82501221]
[68.16390228 739.13415527]
[55.67814255 730.81561279]
[43.61904526 721.88977051]
[32.01611710 712.37847900]
[20.89775658 702.30499268]
[10.29117107 691.69403076]
[0.22231686 680.57147217]
[-9.28416634 668.96459961]
[-18.20501328 656.90185547]
[-26.51839447 644.41265869]
[-34.20396423 631.52758789]
[-41.24291611 618.27819824]
[-47.61802292 604.69696045]
[-53.31368637 590.81707764]
[-58.31596756 576.67242432]
[-62.61262131 562.29779053]
[-66.19313049 547.72821045]
[-69.04874420 532.99938965]
[-71.17247009 518.14739990]
[-72.55910492 503.20852661]
[-73.20526123 488.21936035]
[-73.10935211 473.21658325]
[-72.27162170 458.23690796]
[-70.69411469 443.31698608]
[-68.38068390 428.49334717]
[-65.33700562 413.80224609]
[-61.57051468 399.27963257]
[-57.09043884 384.96105957]
[-51.90773392 370.88156128]
[-46.03508759 357.07562256]
[-39.48686981 343.57696533]
[-32.27910614 330.41867065]
[-24.42943192 317.63293457]
[-15.95706081 305.25103760]
[-6.88272429 293.30328369]
[2.77137113 281.81890869]
[12.98159981 270.82601929]
[23.72297668 260.35150146]
[34.96921539 250.42100525]
[46.69279099 241.05883789]
[58.86501694 232.28790283]
[71.45610809 224.12965393]
[84.43524933 216.60406494]
[97.77067566 209.72956848]
[111.42975616 203.52294922]
[125.37906647 197.99943542]
[120.55306244 183.79696655]
[115.72706604 169.59451294]
[104.30637360 160.03329468]
[107.19230652 144.47752380]
[102.36631012 130.27507019]
[97.54031372 116.07261658]
[87.42245483 110.30458069]
[83.75758362 99.24972534]
[88.42597961 88.57979584]
[83.81196594 74.30706024]
[79.19795990 60.03432846]
[74.58395386 45.76159668]
[69.96994019 31.48886108]
[63.21845627 44.88354111]
[49.48671341 50.92003250]
[35.05268097 46.83853531]
[26.51539993 34.50505066]
[27.77800369 19.55828285]
[38.26324844 8.83169460]
[53.17741776 7.22933722]
[65.70306396 15.48526955]
[62.59895706 0.80996704]
[59.49484634 -13.86533546]
[56.28157043 -28.51712227]
[52.95931244 -43.14458466]
[49.63705444 -57.77204132]
[46.31479263 -72.39950562]
[42.99253464 -87.02696228]
[27.97733498 -86.21960449]
[13.04169273 -87.96160889]
[-1.38466644 -92.20285797]
[-14.88666725 -98.82131195]
[-27.07582855 -107.62655640]
[-37.60144806 -118.36524200]
[-46.16067505 -130.72839355]
[-52.50725174 -144.36030579]
[-56.45857239 -158.86875916]
[-57.90094376 -173.83630371]
[-56.79287338 -188.83232117]
[-53.16623688 -203.42530823]
[-47.12538528 -217.19543457]
[-38.84412384 -229.74647522]
[-28.56071663 -240.71731567]
[-16.57104301 -249.79232788]
[-3.22006965 -256.71038818]
[11.10807133 -261.27243042]
[26.00113106 -263.34725952]
[41.03060532 -262.87509155]
[55.76406479 -259.86956787]
[69.77760315 -254.41716003]
[82.66801453 -246.67472839]
[94.06443024 -236.86505127]
[103.63893127 -225.27037048]
[111.11606598 -212.22427368]
[116.28067780 -198.10212708]
[118.98419189 -183.31027222]
[119.14880371 -168.27429199]
[116.76979065 -153.42678833]
[111.91559601 -139.19496155]
[104.72588348 -125.98829651]
[95.40752411 -114.18676758]
[84.22861481 -104.12992859]
[71.51079559 -96.10713959]
[57.61999512 -90.34922028]
[60.94225311 -75.72176361]
[64.26451111 -61.09430313]
[67.58677673 -46.46684265]
[70.90903473 -31.83938217]
[75.45592499 -26.01292992]
[74.17015076 -16.96944618]
[77.27426147 -2.29414320]
[80.37837219 12.38115883]
[84.24267578 26.87485313]
[88.85668182 41.14758682]
[93.47069550 55.42031860]
[98.08470154 69.69305420]
[102.69870758 83.96578979]
[115.43373108 94.88345337]
[111.74276733 111.24662018]
[116.56876373 125.44907379]
[121.39476776 139.65153503]
[133.16064453 150.22860718]
[129.92951965 164.76852417]
[134.75552368 178.97097778]
[139.58151245 193.17343140]
[154.00820923 189.05477905]
[168.62092590 185.65463257]
[183.38391113 182.98129272]
[198.26103210 181.04130554]
[213.21589661 179.83943176]
[228.21189880 179.37860107]
[243.21234131 179.65994263]
[258.18051147 180.68276978]
[273.07980347 182.44458008]
[287.87371826 184.94105530]
[302.52609253 188.16609192]
[317.00100708 192.11180115]
[331.26312256 196.76852417]
[345.27746582 202.12486267]
[359.00979614 208.16770935]
[372.42645264 214.88227844]
[385.49465942 222.25213623]
[398.18240356 230.25924683]
[410.45861816 238.88401794]
[422.29330444 248.10534668]
[433.65747070 257.90066528]
[444.52331543 268.24597168]
[454.86425781 279.11599731]
[464.65499878 290.48413086]
[473.87152100 302.32254028]
[482.49133301 314.60223389]
[490.49331665 327.29321289]
[497.85791016 340.36437988]
[504.56704712 353.78375244]
[510.60437012 367.51852417]
[515.95501709 381.53503418]
[520.60601807 395.79901123]
[524.54583740 410.27554321]
[527.76501465 424.92919922]
[530.25549316 439.72412109]
[532.01129150 454.62411499]
[533.02807617 469.59271240]
[533.30334473 484.59326172]
[532.83648682 499.58908081]
[531.62854004 514.54345703]
[529.68255615 529.41979980]
[527.00329590 544.18170166]
[523.59722900 558.79302979]
[519.47271729 573.21807861]
[514.63995361 587.42144775]
[509.11065674 601.36846924]
[502.89837646 615.02502441]
[496.01837158 628.35760498]
[488.48739624 641.33361816]
[480.32394409 653.92132568]
[471.54797363 666.08990479]
[462.18093872 677.80963135]
[452.24578857 689.05175781]
[441.76684570 699.78875732]
[430.76971436 709.99444580]
[419.28134155 719.64379883]
[407.32983398 728.71319580]
[394.94442749 737.18041992]
[382.15545654 745.02484131]
[368.99417114 752.22711182]
[355.49282837 758.76977539]
[341.68444824 764.63671875]
[327.60281372 769.81353760]
[313.28237915 774.28771973]
[298.75820923 778.04821777]
[284.06585693 781.08581543]
[269.24124146 783.39306641]
[254.32067871 784.96441650]
[239.34066772 785.79595947]
[224.33784485 785.88562012]
[209.34895325 785.23327637]
[194.41065979 783.84045410]
[179.55952454 781.71057129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 137]
[53 136]
[54 135]
[56 133]
[57 132]
[58 131]
[61 129]
[62 128]
[63 127]
[64 126]
[65 125]
[73 124]
[74 123]
[75 122]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
