%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[-108.32785034 483.97000122]
[-101.01850891 497.09359741]
[-95.48473358 511.05899048]
[-91.82119751 525.62719727]
[-90.09060669 540.54901123]
[-90.32256317 555.56903076]
[-92.51310730 570.43029785]
[-96.62474060 584.87847900]
[-102.58712006 598.66632080]
[-110.29822540 611.55792236]
[-119.62609100 623.33276367]
[-130.41111755 633.78924561]
[-142.46876526 642.74847412]
[-155.59269714 650.05718994]
[-169.55836487 655.59033203]
[-184.12677002 659.25317383]
[-199.04866028 660.98303223]
[-214.06867981 660.75036621]
[-228.92980957 658.55908203]
[-243.37777710 654.44677734]
[-257.16534424 648.48376465]
[-270.05661011 640.77203369]
[-281.83096313 631.44360352]
[-292.28692627 620.65808105]
[-301.24560547 608.59997559]
[-308.55371094 595.47570801]
[-314.08615112 581.50982666]
[-317.74829102 566.94122314]
[-319.47747803 552.01922607]
[-319.24407959 536.99926758]
[-317.05212402 522.13818359]
[-312.93911743 507.69042969]
[-306.97543335 493.90313721]
[-299.26309204 481.01226807]
[-289.93411255 469.23834229]
[-279.14807129 458.78289795]
[-267.08959961 449.82476807]
[-253.96495056 442.51730347]
[-239.99876404 436.98553467]
[-225.43000793 433.32406616]
[-210.50796509 431.59561157]
[-195.48796082 431.82971191]
[-180.62704468 434.02236938]
[-166.17945862 438.13607788]
[-152.39245605 444.10043335]
[-139.50193787 451.81335449]
[-130.18704224 440.05612183]
[-120.87216949 428.29885864]
[-119.03325653 413.51821899]
[-104.39882660 407.50622559]
[-95.08394623 395.74896240]
[-85.76906586 383.99169922]
[-76.45418549 372.23446655]
[-67.13929749 360.47720337]
[-65.30038452 345.69656372]
[-50.66596222 339.68453979]
[-41.35108185 327.92730713]
[-32.03619766 316.17004395]
[-22.72131538 304.41281128]
[-13.40643215 292.65554810]
[-11.71666050 285.46066284]
[-3.86429286 280.79394531]
[5.62460566 269.17669678]
[15.11350441 257.55941772]
[24.60240173 245.94215393]
[34.09130096 234.32489014]
[43.58020020 222.70762634]
[51.04793930 209.69868469]
[56.29465866 195.64620972]
[61.54137802 181.59373474]
[58.74459076 166.96406555]
[70.82017517 156.74198914]
[68.02339172 142.11231995]
[80.09897614 131.89025879]
[85.34569550 117.83777618]
[90.59241486 103.78530884]
[90.23749542 95.73257446]
[96.02327728 89.56364441]
[101.47863007 75.59085083]
[106.93399048 61.61804962]
[100.83451080 47.28507996]
[106.56606293 33.19239044]
[120.26795197 27.46579552]
[125.72330475 13.49299717]
[123.53485107 -2.17611957]
[135.37109375 -11.21784401]
[139.45075989 -25.65239716]
[134.28918457 -40.60795593]
[144.16520691 -51.75755310]
[146.83099365 -66.51876831]
[149.49679565 -81.27999115]
[152.16258240 -96.04120636]
[150.60812378 -105.04239655]
[154.97952271 -111.00164795]
[157.86479187 -125.72153473]
[160.75007629 -140.44142151]
[162.64337158 -155.32145691]
[163.53617859 -170.29487610]
[164.42900085 -185.26828003]
[150.50878906 -191.26858521]
[139.48243713 -201.67027283]
[132.68141174 -215.21730042]
[130.92697144 -230.27378845]
[134.43098450 -245.02159119]
[142.77030945 -257.67984009]
[154.93794250 -266.72000122]
[169.46458435 -271.05041504]
[184.59606934 -270.14816284]
[198.50518799 -264.12222290]
[209.51235962 -253.70022583]
[216.28842163 -240.14068604]
[218.01510620 -225.08099365]
[214.48391724 -210.33967590]
[206.12127686 -197.69682312]
[193.93699646 -188.67909241]
[179.40240479 -184.37545776]
[178.50958252 -169.40205383]
[177.61677551 -154.42864990]
[187.61634827 -165.60935974]
[202.04452515 -169.71150208]
[216.43058777 -165.46398926]
[226.31683350 -154.18293762]
[228.63992310 -139.36392212]
[222.68000793 -125.59876251]
[210.28384399 -117.15275574]
[195.29251099 -116.64299011]
[182.35122681 -124.22740936]
[175.46997070 -137.55615234]
[172.58468628 -122.83626556]
[169.69941711 -108.11637115]
[166.92381287 -93.37541199]
[164.25801086 -78.61419678]
[161.59220886 -63.85297775]
[158.92642212 -49.09175873]
[164.27867126 -35.19202042]
[154.21197510 -22.98660088]
[164.21064758 -34.16812134]
[177.85923767 -40.39034271]
[192.85771179 -40.60471344]
[206.67855835 -34.77510834]
[216.99270630 -23.88391685]
[222.06207275 -9.76649761]
[221.03236389 5.19811678]
[214.07710266 18.48812675]
[202.36837769 27.86393166]
[187.87931824 31.74554253]
[173.05157471 29.47884178]
[160.38388062 21.44580650]
[152.01097107 9.00014591]
[149.34388733 -5.76248646]
[151.92254639 8.90720272]
[139.69610596 18.94835472]
[134.24075317 32.92115402]
[140.43774414 46.41680908]
[135.10429382 60.66492844]
[120.90678406 67.07341003]
[115.45143127 81.04620361]
[109.99607086 95.01900482]
[104.64488983 109.03202820]
[99.39817047 123.08449554]
[94.15145111 137.13696289]
[96.57295227 152.77175903]
[84.87265015 161.98870850]
[87.29415131 177.62350464]
[75.59384918 186.84045410]
[70.34712982 200.89292908]
[65.10041046 214.94540405]
[76.08648682 204.73236084]
[89.31658173 197.66380310]
[103.91320038 194.20855713]
[118.90820312 194.59580994]
[133.30702209 198.79986572]
[146.15463257 206.54190063]
[156.59889221 217.30838013]
[163.94709778 230.38523865]
[167.71183777 244.90510559]
[167.64341736 259.90493774]
[163.74639893 274.38989258]
[156.27923584 287.39916992]
[145.73719788 298.06994629]
[132.81950378 305.69445801]
[118.38293457 309.76699829]
[103.38502502 310.01745605]
[88.82052612 306.42922974]
[75.65545654 299.24029541]
[64.76299286 288.92745972]
[56.86561203 276.17477417]
[52.48710251 261.82803345]
[51.91788101 246.83883667]
[55.19746399 232.19653320]
[45.70856476 243.81379700]
[36.21966553 255.43106079]
[26.73076820 267.04830933]
[17.24186897 278.66558838]
[7.75297070 290.28283691]
[-1.64918065 301.97042847]
[-10.96406364 313.72769165]
[-20.27894592 325.48492432]
[-29.59382820 337.24218750]
[-38.90871048 348.99942017]
[-41.41388702 364.62103271]
[-55.38204575 369.79208374]
[-64.69692993 381.54934692]
[-74.01181030 393.30657959]
[-83.32669830 405.06384277]
[-92.64157867 416.82110596]
[-95.14675140 432.44271851]
[-109.11491394 437.61373901]
[-118.42979431 449.37100220]
[-127.74468231 461.12826538]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 210]
[47 209]
[48 208]
[50 206]
[51 205]
[52 204]
[53 203]
[54 202]
[56 200]
[57 199]
[58 198]
[59 197]
[60 196]
[62 195]
[63 194]
[64 193]
[65 192]
[66 191]
[67 190]
[68 167]
[69 166]
[70 165]
[72 163]
[74 161]
[75 160]
[76 159]
[78 158]
[79 157]
[80 156]
[83 153]
[84 152]
[86 150]
[87 136]
[89 134]
[90 133]
[91 132]
[92 131]
[94 130]
[95 129]
[96 128]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
