%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[240.89286804 373.62911987]
[250.76583862 362.30487061]
[262.08886719 352.43054199]
[253.86007690 339.88912964]
[245.63125610 327.34771729]
[232.18014526 320.95114136]
[231.07864380 305.16830444]
[222.84983826 292.62692261]
[214.62103271 280.08551025]
[201.16990662 273.68890381]
[200.06842041 257.90609741]
[191.83959961 245.36468506]
[189.12550354 244.66340637]
[186.52565002 242.84478760]
[184.46702576 239.94694519]
[183.35493469 236.16174316]
[183.52029419 231.82278442]
[176.05255127 218.81382751]
[168.58482361 205.80487061]
[161.11708069 192.79592896]
[153.64933777 179.78697205]
[145.14250183 167.43246460]
[135.65361023 155.81520081]
[126.16471100 144.19793701]
[112.12110901 139.23542786]
[109.38362885 123.65284729]
[99.89472961 112.03558350]
[102.57765198 126.79370117]
[100.11943817 141.59089661]
[92.80888367 154.68882751]
[81.50482178 164.54875183]
[67.53524017 170.01234436]
[52.54127502 170.43774414]
[38.28439713 165.77496338]
[26.43949699 156.57179260]
[18.39809608 143.90940857]
[15.10489368 129.27537537]
[16.94677162 114.38889313]
[23.70734596 100.99880219]
[34.59239197 90.67815399]
[48.32314682 84.63941193]
[63.28653336 83.59200287]
[77.72467041 87.65897369]
[89.94247437 96.36365509]
[83.46298218 82.83531189]
[76.98348236 69.30696869]
[70.50399017 55.77862167]
[64.02449036 42.25027466]
[57.49512863 35.86237717]
[57.55091476 28.47193336]
[51.27355576 14.84861660]
[46.10449219 10.72644424]
[44.09483719 5.41059017]
[45.01885986 0.72495043]
[39.14989853 -13.07922649]
[33.28094101 -26.88340378]
[27.41197968 -40.68758011]
[21.54301834 -54.49175644]
[9.89509964 -60.03150558]
[5.29101610 -71.64985657]
[9.69189548 -82.91745758]
[4.02910900 -96.80748749]
[-1.63367784 -110.69751740]
[-5.82250261 -96.29425812]
[-17.06314278 -86.36209106]
[-31.87256432 -83.97859192]
[-45.66190720 -89.88233185]
[-54.15839005 -102.24394989]
[-54.72929001 -117.23308563]
[-47.19770432 -130.20518494]
[-33.89737701 -137.14068604]
[-18.94956207 -135.89057922]
[-6.98584461 -126.84198761]
[-10.74214554 -141.36404419]
[-14.49844551 -155.88610840]
[-18.25474548 -170.40817261]
[-22.96793556 -156.16787720]
[-33.33058548 -145.32281494]
[-47.34183502 -139.96697998]
[-62.29632950 -141.13452148]
[-75.30658722 -148.59997559]
[-83.86053467 -160.92190552]
[-86.30654144 -175.72113037]
[-82.17231750 -190.14015198]
[-72.25611115 -201.39488220]
[-58.47259903 -207.31221008]
[-43.48315430 -206.74958801]
[-30.18200493 -199.81565857]
[-21.13686752 -187.84808350]
[-29.87914658 -201.03456116]
[-23.10988808 -214.30206299]
[-24.22553635 -229.26051331]
[-25.34118652 -244.21896362]
[-26.45683479 -259.17742920]
[-27.57248306 -274.13586426]
[-42.10242462 -278.52282715]
[-54.06404114 -287.86541748]
[-61.83961868 -300.90017700]
[-64.37757111 -315.86422729]
[-61.33467484 -330.73382568]
[-53.12244415 -343.49798584]
[-40.85151672 -352.43045044]
[-26.18144035 -356.32318115]
[-11.09621906 -354.64968872]
[2.36399484 -347.63635254]
[12.37881756 -336.23162842]
[17.59382629 -321.97790527]
[17.30373383 -306.80291748]
[11.54777431 -292.75894165]
[1.10439253 -281.74530029]
[-12.61402988 -275.25152588]
[-11.49838161 -260.29306030]
[-10.38273239 -245.33460999]
[-9.26708412 -230.37615967]
[-8.15143490 -215.41770935]
[0.51104558 -203.30116272]
[-6.17841434 -188.96374512]
[-3.73268723 -174.16447449]
[0.02361353 -159.64241028]
[3.77991414 -145.12034607]
[7.53621483 -130.59829712]
[12.25634956 -116.36029816]
[17.91913605 -102.47027588]
[23.58192253 -88.58024597]
[38.00431061 -78.58216858]
[35.34719467 -60.36071777]
[41.21615601 -46.55654144]
[47.08511734 -32.75236511]
[52.95407867 -18.94818687]
[58.82303619 -5.14401054]
[64.89687347 8.57125664]
[71.17423248 22.19457245]
[77.55284119 35.77077866]
[84.03233337 49.29912567]
[90.51183319 62.82746887]
[96.99132538 76.35581970]
[103.47081757 89.88416290]
[111.51199341 102.54668427]
[121.00089264 114.16394806]
[135.72320557 119.95740509]
[137.78196716 134.70903015]
[147.27087402 146.32629395]
[156.75976562 157.94355774]
[155.47369385 142.99879456]
[161.19490051 129.13273621]
[172.64526367 119.44307709]
[187.26672363 116.09453583]
[201.79283142 119.83517456]
[212.97839355 129.82931519]
[218.32455444 143.84426880]
[216.63694763 158.74902344]
[208.29258728 171.21385193]
[195.15563965 178.45405579]
[180.16093445 178.85217285]
[166.65827942 172.31922913]
[174.12602234 185.32818604]
[181.59376526 198.33712769]
[189.06150818 211.34608459]
[196.52925110 224.35504150]
[204.38101196 237.13587952]
[212.60981750 249.67727661]
[226.64952087 256.97091675]
[227.16242981 271.85668945]
[235.39123535 284.39810181]
[243.62004089 296.93951416]
[257.65975952 304.23315430]
[258.17266846 319.11892700]
[266.40145874 331.66030884]
[274.63027954 344.20172119]
[288.19616699 337.74566650]
[302.51480103 333.19702148]
[317.31945801 330.64053345]
[332.33435059 330.12384033]
[347.27972412 331.65655518]
[361.87719727 335.21011353]
[375.85479736 340.71832275]
[388.95214844 348.07858276]
[400.92523193 357.15377808]
[411.55099487 367.77481079]
[420.63153076 379.74386597]
[427.99761963 392.83792114]
[433.51208496 406.81304932]
[437.07217407 421.40893555]
[438.61154175 436.35363770]
[438.10153198 451.36874390]
[435.55166626 466.17453003]
[431.00939941 480.49520874]
[424.55938721 494.06396484]
[416.32177734 506.62802124]
[406.45004272 517.95330811]
[395.12808228 527.82891846]
[382.56680298 536.07073975]
[369.00021362 542.52532959]
[354.68109131 547.07244873]
[339.87612915 549.62731934]
[324.86120605 550.14239502]
[309.91598511 548.60809326]
[295.31890869 545.05291748]
[281.34188843 539.54321289]
[268.24536133 532.18151855]
[256.27325439 523.10504150]
[245.64862061 512.48284912]
[236.56939697 500.51281738]
[229.20471191 487.41796875]
[223.69175720 473.44223022]
[220.13327026 458.84597778]
[218.59550476 443.90109253]
[219.10714722 428.88604736]
[221.65863037 414.08050537]
[226.20242310 399.76034546]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 169]
[4 168]
[5 167]
[7 165]
[8 164]
[9 163]
[11 161]
[12 160]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[22 143]
[23 142]
[24 141]
[26 139]
[27 138]
[44 137]
[45 136]
[46 135]
[47 134]
[48 133]
[50 132]
[51 131]
[54 130]
[55 129]
[56 128]
[57 127]
[58 126]
[61 124]
[62 123]
[63 122]
[73 121]
[74 120]
[75 119]
[76 118]
[89 117]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
