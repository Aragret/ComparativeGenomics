%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[77.57157135 517.22851562]
[64.25223541 510.30389404]
[51.66340256 502.12606812]
[39.92263031 492.77139282]
[29.13953400 482.32723999]
[19.41479683 470.89111328]
[10.83921814 458.56979370]
[3.49286771 445.47833252]
[-2.55566144 431.73892212]
[-7.24989462 417.47991943]
[-10.54600239 402.83438110]
[-12.41320896 387.93911743]
[-12.83407974 372.93316650]
[-11.80468655 357.95666504]
[-9.33463860 343.14941406]
[-5.44700050 328.64971924]
[-0.17807031 314.59289551]
[6.42295647 301.11026001]
[14.29444599 288.32763672]
[23.36290169 276.36441040]
[33.54365540 265.33227539]
[44.74164581 255.33425903]
[56.85231781 246.46368408]
[69.76259613 238.80339050]
[83.35193634 232.42488098]
[97.49346161 227.38774109]
[112.05512238 223.73896790]
[109.83000946 208.90492249]
[107.60488892 194.07087708]
[105.37977600 179.23684692]
[103.04428864 164.41976929]
[93.33536530 153.12437439]
[98.71902466 138.24731445]
[96.27330017 123.44804382]
[93.82756805 108.64877319]
[90.39650726 94.04645538]
[85.99551392 79.70660400]
[81.59451294 65.36676025]
[75.41874695 51.69708633]
[67.56698608 38.91624451]
[59.71523285 26.13540268]
[51.86347961 13.35456085]
[43.91679382 0.63252431]
[35.87562180 -12.03000069]
[27.83444786 -24.69252586]
[19.79327583 -37.35504913]
[11.75210285 -50.01757431]
[3.15353847 -62.30841446]
[-5.98526382 -74.20304871]
[-15.12406635 -86.09767914]
[-24.26286888 -97.99230957]
[-33.40167236 -109.88694763]
[-42.54047394 -121.78157806]
[-55.30937958 -113.88562775]
[-68.81160736 -107.32202148]
[-82.90859222 -102.15810394]
[-97.45567322 -98.44686890]
[-112.30358887 -96.22640228]
[-127.29996490 -95.51948547]
[-142.29090881 -96.33338165]
[-157.12260437 -98.65972900]
[-171.64285278 -102.47465515]
[-185.70263672 -107.73902130]
[-199.15768433 -114.39879608]
[-211.86993408 -122.38565063]
[-223.70892334 -131.61761475]
[-234.55317688 -141.99996948]
[-244.29141235 -153.42614746]
[-252.82369995 -165.77893066]
[-260.06246948 -178.93153381]
[-265.93347168 -192.74900818]
[-270.37643433 -207.08953857]
[-273.34576416 -221.80599976]
[-274.81100464 -236.74734497]
[-274.75714111 -251.76028442]
[-273.18466187 -266.69073486]
[-270.10977173 -281.38549805]
[-265.56396484 -295.69375610]
[-259.59393311 -309.46871948]
[-252.26091003 -322.56903076]
[-243.64016724 -334.86022949]
[-233.82015991 -346.21621704]
[-222.90164185 -356.52044678]
[-210.99668884 -365.66720581]
[-198.22743225 -373.56259155]
[-184.72491455 -380.12561035]
[-170.62770081 -385.28890991]
[-156.08045959 -388.99948120]
[-141.23243713 -391.21929932]
[-126.23603821 -391.92556763]
[-111.24512482 -391.11102295]
[-96.41352844 -388.78399658]
[-81.89346313 -384.96844482]
[-67.83390808 -379.70346069]
[-54.37915421 -373.04309082]
[-41.66725922 -365.05566406]
[-29.82866859 -355.82318115]
[-18.98487091 -345.44036865]
[-9.24713802 -334.01373291]
[-0.71539485 -321.66058350]
[6.52280807 -308.50765991]
[12.39319515 -294.68994141]
[16.83552551 -280.34921265]
[19.80421638 -265.63262939]
[21.26880264 -250.69120789]
[21.21425247 -235.67826843]
[19.64113045 -220.74789429]
[16.56557655 -206.05326843]
[12.01915169 -191.74519348]
[6.04850864 -177.97048950]
[-1.28508246 -164.87051392]
[-9.90636826 -152.57968140]
[-19.72687912 -141.22413635]
[-30.64583969 -130.92037964]
[-21.50703812 -119.02574921]
[-12.36823559 -107.13111115]
[-3.22943330 -95.23648071]
[5.90936899 -83.34185028]
[15.04817104 -71.44721222]
[18.06568527 -86.14057159]
[30.51273155 -94.51141357]
[45.25907898 -91.76454926]
[53.85734558 -79.47350311]
[51.38206100 -64.67914581]
[39.25117493 -55.85636139]
[24.41462708 -58.05875015]
[32.45579910 -45.39622498]
[40.49697495 -32.73369980]
[48.53814697 -20.07117271]
[56.57931900 -7.40864849]
[62.81868744 -3.44732785]
[64.64431763 5.50280523]
[72.49607849 18.28364754]
[80.34783173 31.06448936]
[88.19958496 43.84533310]
[87.35516357 28.86911964]
[91.35581970 14.41247082]
[99.77936554 2.00102854]
[111.73683929 -7.05539656]
[125.96633911 -11.80105877]
[140.96620178 -11.73513699]
[155.15344238 -6.86458778]
[167.03085327 2.29658771]
[175.34497070 14.78158855]
[179.21841431 29.27284431]
[178.24238586 44.24105453]
[172.51989746 58.10659409]
[162.65486145 69.40619659]
[149.68835449 76.94738770]
[134.98875427 79.93432617]
[120.10735321 78.05179596]
[106.61461639 71.49845886]
[95.93436432 60.96575928]
[100.33535767 75.30561066]
[104.73635864 89.64545441]
[110.19347382 75.67334747]
[122.27539825 66.78362274]
[137.23840332 65.73086548]
[150.44606018 72.84127808]
[157.80580139 85.91162872]
[157.03717041 100.89192200]
[148.37829590 113.14035034]
[134.51225281 118.86161041]
[119.73557281 116.28289795]
[108.62683868 106.20304871]
[111.07257080 121.00231934]
[113.51829529 135.80158997]
[123.40215302 148.15553284]
[117.84355927 161.97404480]
[122.33031464 169.93060303]
[120.21381378 177.01171875]
[122.43893433 191.84576416]
[124.66404724 206.67980957]
[126.88916779 221.51385498]
[141.88052368 220.72964478]
[156.87756348 221.39598083]
[171.74029541 223.50665283]
[186.32991028 227.04194641]
[200.51022339 231.96885681]
[214.14880371 238.24139404]
[227.11833191 245.80094910]
[239.29768372 254.57698059]
[250.57316589 264.48754883]
[260.83947754 275.44009399]
[270.00079346 287.33233643]
[277.97155762 300.05328369]
[284.67733765 313.48416138]
[290.05554199 327.49951172]
[294.05593872 341.96853638]
[296.64117432 356.75610352]
[297.78710938 371.72415161]
[297.48306274 386.73291016]
[295.73187256 401.64227295]
[292.54986572 416.31298828]
[287.96679688 430.60812378]
[282.02539062 444.39419556]
[274.78118896 457.54244995]
[266.30175781 469.93014526]
[256.66635132 481.44165039]
[245.96488953 491.96942139]
[234.29728699 501.41519165]
[221.77250671 509.69076538]
[208.50747681 516.71887207]
[194.62605286 522.43389893]
[180.25784302 526.78247070]
[165.53700256 529.72399902]
[150.60099792 531.23101807]
[135.58926392 531.28948975]
[120.64197540 529.89880371]
[105.89868927 527.07189941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 174]
[28 173]
[29 172]
[30 171]
[31 169]
[33 167]
[34 166]
[35 165]
[36 155]
[37 154]
[38 153]
[39 135]
[40 134]
[41 133]
[42 132]
[43 130]
[44 129]
[45 128]
[46 127]
[47 126]
[48 119]
[49 118]
[50 117]
[51 116]
[52 115]
[53 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
