%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[48.90867615 534.00354004]
[38.21594620 544.53289795]
[26.78314018 554.25366211]
[14.67125988 563.11395264]
[1.94492793 571.06646729]
[-11.32795429 578.06884766]
[-25.07657051 584.08367920]
[-39.22756195 589.07885742]
[-53.70543289 593.02770996]
[-68.43292999 595.90924072]
[-83.33147430 597.70806885]
[-98.32158661 598.41455078]
[-113.32327271 598.02490234]
[-128.25650024 596.54125977]
[-143.04158020 593.97149658]
[-157.59963989 590.32940674]
[-171.85301208 585.63427734]
[-185.72563171 579.91125488]
[-199.14349365 573.19091797]
[-212.03498840 565.50897217]
[-224.33135986 556.90655518]
[-235.96697998 547.42950439]
[-246.87977600 537.12835693]
[-257.01150513 526.05810547]
[-266.30816650 514.27783203]
[-274.72009277 501.85037231]
[-282.20242310 488.84204102]
[-288.71524048 475.32220459]
[-294.22378540 461.36303711]
[-298.69869995 447.03903198]
[-302.11605835 432.42657471]
[-304.45767212 417.60363770]
[-305.71102905 402.64932251]
[-305.86941528 387.64340210]
[-304.93203735 372.66598511]
[-302.90386963 357.79690552]
[-299.79571533 343.11557007]
[-295.62420654 328.70025635]
[-290.41156006 314.62792969]
[-284.18560791 300.97363281]
[-276.97955322 287.81024170]
[-268.83184814 275.20794678]
[-259.78594971 263.23403931]
[-249.89016724 251.95239258]
[-239.19726562 241.42318726]
[-227.76429749 231.70260620]
[-215.65226746 222.84251404]
[-202.92581177 214.89018250]
[-189.65281677 207.88804626]
[-175.90409851 201.87345886]
[-161.75302124 196.87850952]
[-147.27508545 192.92987061]
[-132.54754639 190.04856873]
[-117.64896393 188.25001526]
[-102.65885162 187.54379272]
[-87.65716553 187.93365479]
[-72.72396851 189.41755676]
[-57.93892288 191.98754883]
[-43.38091660 195.62991333]
[-29.12762833 200.32525635]
[-15.25510311 206.04849243]
[-1.83735752 212.76908875]
[11.05401802 220.45120239]
[19.65258217 208.16036987]
[28.25114632 195.86952209]
[36.84970856 183.57868958]
[45.44827271 171.28785706]
[53.77021790 158.80805969]
[61.81138992 146.14553833]
[69.85256195 133.48300171]
[77.89373779 120.82048035]
[85.93490601 108.15795898]
[84.08722687 96.65894318]
[90.40368652 86.87407684]
[101.64359283 83.82354736]
[109.87239838 71.28214264]
[117.91357422 58.61962128]
[125.76532745 45.83877945]
[133.61708069 33.05793381]
[134.24816895 17.24932098]
[147.50288391 10.45506287]
[155.35464478 -2.32577944]
[143.18283081 -11.10382843]
[131.69253540 -20.75682831]
[120.94651794 -31.23206139]
[111.00348663 -42.47230911]
[101.91772461 -54.41618729]
[93.73886871 -66.99845886]
[86.51158142 -80.15039825]
[80.27534485 -93.80017853]
[75.06420898 -107.87325287]
[70.90664673 -122.29274750]
[67.82535553 -136.97991943]
[65.83717346 -151.85453796]
[64.95295715 -166.83537292]
[65.17752838 -181.84059143]
[66.50966644 -196.78825378]
[68.94210052 -211.59672546]
[72.46153259 -226.18510437]
[77.04875183 -240.47372437]
[82.67870331 -254.38453674]
[89.32063293 -267.84158325]
[96.93827057 -280.77133179]
[105.48999786 -293.10321045]
[114.92912292 -304.76983643]
[125.20407867 -315.70751953]
[136.25875854 -325.85647583]
[148.03277588 -335.16128540]
[160.46183777 -343.57113647]
[173.47804260 -351.04013062]
[187.01031494 -357.52740479]
[200.98472595 -362.99758911]
[215.32496643 -367.42077637]
[229.95272827 -370.77282715]
[244.78808594 -373.03540039]
[259.75003052 -374.19619751]
[274.75683594 -374.24880981]
[289.72656250 -373.19299316]
[304.57742310 -371.03448486]
[319.22833252 -367.78509521]
[333.59924316 -363.46258545]
[347.61166382 -358.09054565]
[361.18908691 -351.69830322]
[374.25735474 -344.32077026]
[386.74508667 -335.99829102]
[398.58404541 -326.77627563]
[409.70962524 -316.70507812]
[420.06103516 -305.83975220]
[429.58175659 -294.23959351]
[438.21975708 -281.96798706]
[445.92785645 -269.09194946]
[452.66400146 -255.68182373]
[458.39135742 -241.81082153]
[463.07867432 -227.55473328]
[466.70031738 -212.99139404]
[469.23654175 -198.20034790]
[470.67346191 -183.26239014]
[471.00326538 -168.25910950]
[470.22412109 -153.27244568]
[468.34030151 -138.38424683]
[465.36206055 -123.67583466]
[461.30572510 -109.22753906]
[456.19342041 -95.11827087]
[450.05303955 -81.42509460]
[442.91818237 -68.22279358]
[434.82775879 -55.58347702]
[425.82595825 -43.57617950]
[415.96200562 -32.26648331]
[405.28970337 -21.71615028]
[393.86740112 -11.98281002]
[381.75744629 -3.11962175]
[369.02597046 4.82500648]
[355.74255371 11.80768394]
[341.97970581 17.79027176]
[327.81262207 22.74009705]
[313.31863403 26.63012314]
[298.57696533 29.43910408]
[283.66812134 31.15169907]
[268.67349243 31.75855446]
[253.67498779 31.25635529]
[238.75453186 29.64784241]
[223.99362183 26.94180489]
[209.47285461 23.15302086]
[195.27157593 18.30218315]
[181.46731567 12.41578388]
[168.13548279 5.52597618]
[160.28372192 18.30681801]
[160.21424866 33.20126343]
[146.39791870 40.90969086]
[138.54617310 53.69053268]
[130.69441223 66.47137451]
[130.91314697 71.24224854]
[128.13716125 76.20117188]
[122.41379547 79.51095581]
[114.18498993 92.05235291]
[113.66068268 108.81842804]
[98.59743500 116.19913483]
[90.55625916 128.86166382]
[82.51509094 141.52418518]
[74.47391510 154.18670654]
[66.43273926 166.84922791]
[66.21436310 172.06452942]
[64.21705627 176.25547791]
[61.12889481 178.91600037]
[57.73911285 179.88641357]
[49.14054871 192.17726135]
[40.54198456 204.46809387]
[31.94342041 216.75892639]
[23.34485626 229.04977417]
[34.98063278 238.52664185]
[45.89359665 248.82759094]
[56.02552414 259.89767456]
[65.32234955 271.67779541]
[73.73448181 284.10510254]
[81.21702576 297.11334229]
[87.73007202 310.63305664]
[93.23885345 324.59213257]
[97.71398926 338.91607666]
[101.13159943 353.52847290]
[103.47344971 368.35137939]
[104.72705078 383.30566406]
[104.88570404 398.31158447]
[103.94856262 413.28903198]
[101.92063904 428.15811157]
[98.81274414 442.83950806]
[94.64145660 457.25488281]
[89.42903900 471.32730103]
[83.20330811 484.98171997]
[75.99746704 498.14523315]
[67.84996796 510.74765015]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 189]
[64 188]
[65 187]
[66 186]
[67 185]
[68 181]
[69 180]
[70 179]
[71 178]
[72 177]
[75 175]
[76 174]
[77 171]
[78 170]
[79 169]
[81 167]
[82 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
