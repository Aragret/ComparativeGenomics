%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[90.00373077 497.77749634]
[75.36830902 494.20645142]
[61.89469528 487.46780396]
[50.25871658 477.89953613]
[41.04402542 465.98159790]
[34.71282959 452.31179810]
[31.58270264 437.57577515]
[31.81064415 422.51272583]
[35.38522339 407.87817383]
[42.12714386 394.40618896]
[51.69822693 382.77252197]
[63.61839676 373.56072998]
[77.28974152 367.23284912]
[92.02651215 364.10629272]
[92.24983978 349.10794067]
[92.47316742 334.10961914]
[92.69649506 319.11126709]
[92.91982269 304.11294556]
[93.14315033 289.11459351]
[93.36647797 274.11627197]
[93.58980560 259.11791992]
[78.09739685 253.56098938]
[65.42395020 243.01945496]
[57.11246109 228.75389099]
[54.18265533 212.47961426]
[57.00595093 196.16046143]
[65.25843048 181.77182007]
[77.95793152 171.06146240]
[93.58089447 165.33732605]
[93.35756683 150.33898926]
[93.13423920 135.34065247]
[92.91091156 120.34231567]
[92.68758392 105.34397888]
[90.32894897 102.29287720]
[89.32663727 98.21694183]
[90.10820007 93.74523163]
[92.80423737 89.67445374]
[93.25084686 74.68110657]
[93.69744873 59.68775558]
[90.82493591 51.01674271]
[94.26397705 44.47496796]
[94.93376160 29.48992920]
[87.82038879 15.35803318]
[96.11827087 2.98894405]
[96.78805542 -11.99609470]
[97.45783997 -26.98113441]
[98.12762451 -41.96617126]
[98.79740906 -56.95121002]
[83.86509705 -58.41115570]
[69.03064728 -60.65712357]
[54.33539581 -63.68285751]
[39.82031250 -67.47991943]
[25.52584648 -72.03773499]
[11.49184322 -77.34359741]
[-2.24258399 -83.38271332]
[-15.63915348 -90.13825226]
[-28.66052628 -97.59138489]
[-41.27041245 -105.72134399]
[-53.43366241 -114.50546265]
[-65.11637115 -123.91926575]
[-76.28598785 -133.93650818]
[-86.91136932 -144.52926636]
[-96.96291351 -155.66802979]
[-106.41259003 -167.32173157]
[-115.23406982 -179.45791626]
[-123.40275574 -192.04273987]
[-130.89590454 -205.04113770]
[-137.69259644 -218.41687012]
[-143.77391052 -232.13265991]
[-149.12290955 -246.15028381]
[-153.72465515 -260.43066406]
[-157.56632996 -274.93402100]
[-160.63723755 -289.61990356]
[-162.92880249 -304.44735718]
[-164.43466187 -319.37512207]
[-165.15058899 -334.36154175]
[-165.07461548 -349.36486816]
[-164.20692444 -364.34326172]
[-162.54997253 -379.25500488]
[-160.10833740 -394.05850220]
[-156.88885498 -408.71252441]
[-152.90048218 -423.17620850]
[-148.15434265 -437.40927124]
[-142.66365051 -451.37197876]
[-136.44372559 -465.02548218]
[-129.51191711 -478.33169556]
[-121.88750458 -491.25354004]
[-113.59177399 -503.75497437]
[-104.64783478 -515.80120850]
[-95.08061218 -527.35858154]
[-84.91677094 -538.39501953]
[-74.18464661 -548.87957764]
[-62.91415405 -558.78320312]
[-51.13669586 -568.07818604]
[-38.88510513 -576.73864746]
[-26.19352531 -584.74047852]
[-13.09733391 -592.06134033]
[0.36696875 -598.68090820]
[14.16185570 -604.58056641]
[28.24887848 -609.74401855]
[42.58877182 -614.15686035]
[57.14156723 -617.80670166]
[71.86670685 -620.68341064]
[86.72315216 -622.77905273]
[101.66947937 -624.08770752]
[116.66404724 -624.60571289]
[131.66505432 -624.33166504]
[146.63070679 -623.26629639]
[161.51925659 -621.41259766]
[176.28924561 -618.77569580]
[190.89947510 -615.36303711]
[205.30924988 -611.18408203]
[219.47839355 -606.25042725]
[233.36741638 -600.57586670]
[246.93759155 -594.17620850]
[260.15112305 -587.06933594]
[272.97119141 -579.27496338]
[285.36199951 -570.81494141]
[297.28909302 -561.71270752]
[308.71917725 -551.99371338]
[319.62042236 -541.68505859]
[329.96240234 -530.81549072]
[339.71633911 -519.41522217]
[348.85504150 -507.51605225]
[357.35299683 -495.15118408]
[365.18658447 -482.35507202]
[372.33389282 -469.16336060]
[378.77508545 -455.61282349]
[384.49212646 -441.74124146]
[389.46914673 -427.58728027]
[393.69223022 -413.19039917]
[397.14965820 -398.59066772]
[399.83172607 -383.82882690]
[401.73101807 -368.94601440]
[402.84219360 -353.98370361]
[403.16220093 -338.98361206]
[402.69009399 -323.98751831]
[401.42724609 -309.03726196]
[399.37713623 -294.17446899]
[396.54550171 -279.44058228]
[392.94024658 -264.87667847]
[388.57138062 -250.52334595]
[383.45108032 -236.42056274]
[377.59365845 -222.60768127]
[371.01541138 -209.12316895]
[363.73468018 -196.00462341]
[355.77175903 -183.28858948]
[347.14883423 -171.01054382]
[337.88995361 -159.20466614]
[328.02090454 -147.90390015]
[317.56921387 -137.13970947]
[306.56402588 -126.94212341]
[295.03598022 -117.33955383]
[283.01721191 -108.35876465]
[270.54122925 -100.02478027]
[257.64279175 -92.36083984]
[244.35786438 -85.38830566]
[230.72348022 -79.12659454]
[216.77763367 -73.59317780]
[202.55918884 -68.80347443]
[188.10778809 -64.77082062]
[173.46369934 -61.50647354]
[158.66773987 -59.01952362]
[143.76113892 -57.31689835]
[128.78546143 -56.40335083]
[113.78244781 -56.28142548]
[113.11266327 -41.29638672]
[112.44287872 -26.31134796]
[111.77309418 -11.32630920]
[111.10330963 3.65872908]
[118.26458740 16.71879578]
[109.91880035 30.15971375]
[109.24901581 45.14475250]
[108.69080353 60.13436127]
[108.24419403 75.12771606]
[107.79759216 90.12106323]
[107.68592072 105.12064362]
[107.90924835 120.11898804]
[108.13257599 135.11732483]
[108.35590363 150.11566162]
[108.57923126 165.11399841]
[121.63254547 169.00051880]
[133.04878235 176.39683533]
[141.90888977 186.69624329]
[147.50274658 199.05874634]
[149.38610840 212.47961426]
[147.41590881 225.87101746]
[141.76098633 238.15020752]
[132.88777161 248.32705688]
[121.52174377 255.58390808]
[108.58814240 259.34124756]
[108.36481476 274.33959961]
[108.14148712 289.33792114]
[107.91815948 304.33627319]
[107.69483185 319.33459473]
[107.47150421 334.33294678]
[107.24817657 349.33126831]
[107.02484894 364.32962036]
[121.66199493 367.89355469]
[135.13887024 374.62567139]
[146.77949524 384.18829346]
[155.99995422 396.10177612]
[162.33776855 409.76852417]
[165.47503662 424.50302124]
[165.25439453 439.56619263]
[161.68690491 454.20245361]
[154.95152283 467.67770386]
[145.38607788 479.31600952]
[133.47036743 488.53359985]
[119.80209351 494.86810303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 198]
[15 197]
[16 196]
[17 195]
[18 194]
[19 193]
[20 192]
[21 191]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[37 176]
[38 175]
[39 174]
[41 173]
[42 172]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
