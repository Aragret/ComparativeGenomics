%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[134.94287109 865.01916504]
[120.25504303 861.95953369]
[105.73797607 858.17156982]
[91.42777252 853.66467285]
[77.36000824 848.45007324]
[63.56966019 842.54071045]
[50.09100723 835.95135498]
[36.95756531 828.69830322]
[24.20198631 820.79962158]
[11.85597801 812.27496338]
[-0.04976122 803.14550781]
[-11.48563290 793.43389893]
[-22.42320633 783.16436768]
[-32.83528900 772.36236572]
[-42.69599152 761.05487061]
[-51.98080444 749.26983643]
[-60.66663742 737.03668213]
[-68.73190308 724.38580322]
[-76.15653992 711.34857178]
[-82.92210388 697.95745850]
[-89.01175690 684.24578857]
[-94.41037750 670.24761963]
[-99.10452271 655.99774170]
[-103.08254242 641.53161621]
[-106.33454132 626.88519287]
[-108.85242462 612.09484863]
[-110.62994385 597.19738770]
[-111.66266632 582.22979736]
[-111.94804382 567.22937012]
[-111.48535156 552.23339844]
[-110.27574158 537.27911377]
[-108.32222748 522.40368652]
[-105.62966156 507.64416504]
[-102.20474243 493.03717041]
[-98.05597687 478.61907959]
[-93.19368744 464.42568970]
[-87.62995911 450.49230957]
[-81.37862396 436.85360718]
[-74.45522308 423.54342651]
[-66.87696838 410.59490967]
[-58.66270828 398.04025269]
[-49.83285522 385.91061401]
[-40.40936661 374.23620605]
[-30.41567039 363.04605103]
[-19.87661362 352.36791992]
[-8.81839466 342.22839355]
[2.73149180 332.65270996]
[14.74433041 323.66461182]
[27.19025612 315.28649902]
[40.03832626 307.53915405]
[53.25659943 300.44189453]
[66.81221008 294.01232910]
[80.67145538 288.26644897]
[94.79988861 283.21853638]
[109.16236877 278.88113403]
[123.72320557 275.26504517]
[113.68228149 264.26370239]
[118.62061310 249.23295593]
[115.73533630 234.51306152]
[112.85006714 219.79318237]
[109.96479034 205.07328796]
[106.57132721 201.71270752]
[105.25292969 196.18470764]
[107.21961975 189.87252808]
[104.77388763 175.07325745]
[92.55366516 166.63514709]
[89.86252594 151.66142273]
[98.79605103 138.90093994]
[96.35032654 124.10166168]
[93.90459442 109.30239105]
[84.31162262 120.83386230]
[69.38761902 122.34185028]
[57.68172455 112.96250153]
[55.89961624 98.06874084]
[65.06216431 86.19239044]
[79.92063904 84.13676453]
[91.96295166 93.07859802]
[83.22067261 79.89212036]
[89.98992920 66.62462616]
[88.87428284 51.66617584]
[87.75862885 36.70772171]
[86.64298248 21.74926758]
[74.41307068 15.39159203]
[66.98058319 3.91219330]
[66.19710541 -9.63239098]
[72.16051483 -21.69812202]
[83.21727753 -29.18078041]
[82.32445526 -44.15418625]
[81.43164062 -59.12759018]
[80.53882599 -74.10099792]
[78.02026367 -77.63805389]
[76.87356567 -81.41292572]
[77.00505066 -84.96512604]
[78.18109894 -87.91190338]
[80.06562805 -89.98715973]
[80.06562805 -104.98715973]
[80.06562805 -119.98715973]
[65.81295776 -125.14828491]
[54.18702698 -134.87522888]
[46.59172440 -147.99343872]
[43.94422150 -162.91880798]
[46.56421280 -177.84901428]
[54.13532639 -190.98120117]
[65.74330902 -200.72955322]
[79.98645020 -205.91693115]
[95.14480591 -205.91693115]
[109.38793945 -200.72955322]
[120.99592590 -190.98120117]
[128.56703186 -177.84901428]
[131.18702698 -162.91880798]
[128.53952026 -147.99343872]
[120.94422913 -134.87522888]
[109.31829834 -125.14828491]
[95.06562805 -119.98715973]
[95.06562805 -104.98715973]
[95.06562805 -89.98715973]
[95.51222992 -74.99381256]
[96.40504456 -60.02040863]
[97.29786682 -45.04700089]
[98.19068146 -30.07359505]
[112.29817963 -21.67978859]
[118.68666840 -6.37786150]
[114.65563202 9.87796974]
[101.60143280 20.63361931]
[102.71708679 35.59207153]
[103.83273315 50.55052567]
[104.94837952 65.50897980]
[113.61086273 77.62552643]
[106.92140198 91.96295166]
[108.70386505 106.85666656]
[111.14959717 121.65593719]
[113.59532166 136.45520020]
[126.15932465 145.66300964]
[128.42881775 160.70642090]
[119.57315826 172.62753296]
[122.01889038 187.42680359]
[124.68468475 202.18801880]
[127.56995392 216.90789795]
[130.45523071 231.62779236]
[133.34049988 246.34768677]
[143.58779907 258.40188599]
[138.44309998 272.37976074]
[153.29159546 270.23126221]
[168.22872925 268.82559204]
[183.21736145 268.16622925]
[198.22024536 268.25479126]
[213.20004272 269.09109497]
[228.11953735 270.67303467]
[242.94165039 272.99667358]
[257.62948608 276.05624390]
[272.14657593 279.84414673]
[286.45681763 284.35098267]
[300.52459717 289.56549072]
[314.31497192 295.47476196]
[327.79367065 302.06405640]
[340.92715454 309.31704712]
[353.68276978 317.21566772]
[366.02880859 325.74026489]
[377.93460083 334.86968994]
[389.37051392 344.58120728]
[400.30813599 354.85067749]
[410.72027588 365.65261841]
[420.58105469 376.96008301]
[429.86593628 388.74505615]
[438.55181885 400.97814941]
[446.61715698 413.62902832]
[454.04187012 426.66619873]
[460.80749512 440.05725098]
[466.89721680 453.76889038]
[472.29589844 467.76702881]
[476.99014282 482.01687622]
[480.96823120 496.48300171]
[484.22030640 511.12945557]
[486.73825073 525.91979980]
[488.51583862 540.81719971]
[489.54864502 555.78479004]
[489.83410645 570.78515625]
[489.37149048 585.78118896]
[488.16195679 600.73547363]
[486.20852661 615.61090088]
[483.51605225 630.37048340]
[480.09118652 644.97747803]
[475.94250488 659.39556885]
[471.08029175 673.58898926]
[465.51663208 687.52239990]
[459.26538086 701.16113281]
[452.34204102 714.47137451]
[444.76385498 727.41992188]
[436.54965210 739.97460938]
[427.71987915 752.10430908]
[418.29644775 763.77874756]
[408.30279541 774.96899414]
[397.76379395 785.64715576]
[386.70562744 795.78674316]
[375.15579224 805.36248779]
[363.14300537 814.35064697]
[350.69711304 822.72882080]
[337.84909058 830.47619629]
[324.63085938 837.57354736]
[311.07528687 844.00317383]
[297.21606445 849.74914551]
[283.08764648 854.79711914]
[268.72518921 859.13458252]
[254.16438293 862.75079346]
[239.44142151 865.63665771]
[224.59291077 867.78503418]
[209.65576172 869.19067383]
[194.66712952 869.84997559]
[179.66426086 869.76129150]
[164.68444824 868.92492676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 142]
[58 140]
[59 139]
[60 138]
[61 137]
[64 136]
[65 135]
[68 132]
[69 131]
[70 130]
[77 129]
[79 127]
[80 126]
[81 125]
[82 124]
[87 120]
[88 119]
[89 118]
[90 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
