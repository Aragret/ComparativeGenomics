%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[103.67654419 450.50189209]
[88.99753571 447.15222168]
[75.33591461 440.82342529]
[63.28889084 431.79220581]
[53.38312149 420.45333862]
[46.05163956 407.30255127]
[41.61494446 392.91473389]
[40.26699448 377.91885376]
[42.06671143 362.97045898]
[46.93542480 348.72302246]
[54.66028595 335.79937744]
[64.90361023 324.76452637]
[77.21759033 316.10083008]
[91.06391907 310.18707275]
[105.83729553 307.28170776]
[106.06062317 292.28338623]
[106.28395081 277.28503418]
[106.50727844 262.28668213]
[106.73060608 247.28836060]
[106.95393372 232.29002380]
[107.17726135 217.29168701]
[107.40058899 202.29335022]
[107.62391663 187.29501343]
[107.84724426 172.29667664]
[108.07057190 157.29833984]
[105.84545898 142.46429443]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[79.88181305 62.14971924]
[74.26441193 54.94675827]
[75.30706787 47.63002014]
[70.90606689 33.29017258]
[59.46031952 22.36747169]
[63.12292099 7.93020678]
[48.56572342 11.56272507]
[33.83582687 14.41532803]
[18.97498512 16.47992897]
[4.02532291 17.75067520]
[-10.97078323 18.22396660]
[-25.97082520 17.89845848]
[-40.93228149 16.77507782]
[-55.81274414 14.85700417]
[-70.57003784 12.14967728]
[-85.16231537 8.66077137]
[-99.54823303 4.40017557]
[-113.68699646 -0.62003285]
[-127.53853607 -6.38562346]
[-141.06358337 -12.88025284]
[-154.22381592 -20.08551216]
[-166.98190308 -27.98097610]
[-179.30169678 -36.54426193]
[-191.14826965 -45.75110245]
[-202.48803711 -55.57539368]
[-213.28887939 -65.98928833]
[-223.52014160 -76.96327209]
[-233.15286255 -88.46623230]
[-242.15969849 -100.46556091]
[-250.51515198 -112.92725372]
[-258.19552612 -125.81597137]
[-265.17901611 -139.09519958]
[-271.44589233 -152.72727966]
[-276.97833252 -166.67356873]
[-281.76071167 -180.89454651]
[-285.77941895 -195.34989929]
[-289.02307129 -209.99865723]
[-291.48251343 -224.79927063]
[-293.15072632 -239.70982361]
[-294.02301025 -254.68801880]
[-294.09686279 -269.69140625]
[-293.37213135 -284.67745972]
[-291.85079956 -299.60369873]
[-289.53723145 -314.42782593]
[-286.43798828 -329.10781860]
[-282.56179810 -343.60202026]
[-277.91970825 -357.86941528]
[-272.52487183 -371.86950684]
[-266.39251709 -385.56265259]
[-259.54013062 -398.90997314]
[-251.98703003 -411.87371826]
[-243.75469971 -424.41708374]
[-234.86645508 -436.50451660]
[-225.34747314 -448.10177612]
[-215.22476196 -459.17596436]
[-204.52699280 -469.69570923]
[-193.28451538 -479.63119507]
[-181.52917480 -488.95422363]
[-169.29429626 -497.63839722]
[-156.61457825 -505.65911865]
[-143.52593994 -512.99359131]
[-130.06549072 -519.62109375]
[-116.27140045 -525.52282715]
[-102.18275452 -530.68200684]
[-87.83949280 -535.08404541]
[-73.28227234 -538.71649170]
[-58.55235291 -541.56896973]
[-43.69149780 -543.63348389]
[-28.74182892 -544.90417480]
[-13.74571991 -545.37731934]
[1.25431955 -545.05175781]
[16.21577072 -543.92828369]
[31.09622192 -542.01007080]
[45.85349274 -539.30267334]
[60.44575500 -535.81365967]
[74.83164215 -531.55297852]
[88.97037506 -526.53271484]
[102.82187653 -520.76702881]
[116.34688568 -514.27227783]
[129.50706482 -507.06695557]
[142.26510620 -499.17141724]
[154.58483887 -490.60803223]
[166.43136597 -481.40112305]
[177.77107239 -471.57678223]
[188.57183838 -461.16281128]
[198.80303955 -450.18875122]
[208.43568420 -438.68572998]
[217.44244385 -426.68634033]
[225.79782104 -414.22460938]
[233.47810364 -401.33584595]
[240.46153259 -388.05657959]
[246.72830200 -374.42443848]
[252.26066589 -360.47811890]
[257.04293823 -346.25711060]
[261.06155396 -331.80172729]
[264.30511475 -317.15295410]
[266.76446533 -302.35232544]
[268.43258667 -287.44177246]
[269.30474854 -272.46356201]
[269.37854004 -257.46017456]
[268.65368652 -242.47412109]
[267.13229370 -227.54788208]
[264.81863403 -212.72378540]
[261.71926880 -198.04382324]
[257.84301758 -183.54962158]
[253.20082092 -169.28227234]
[247.80587769 -155.28221130]
[241.67346191 -141.58911133]
[234.82096863 -128.24182129]
[227.26780701 -115.27813721]
[219.03540039 -102.73483276]
[210.14706421 -90.64744568]
[200.62802124 -79.05025482]
[190.50523376 -67.97612000]
[179.80740356 -57.45644379]
[168.56484985 -47.52103806]
[156.80944824 -38.19806671]
[144.57452393 -29.51396179]
[131.89474487 -21.49333191]
[118.80606842 -14.15891838]
[105.34558105 -7.53150892]
[91.55144501 -1.62989032]
[77.46276855 3.52920890]
[88.59372711 13.42622852]
[85.24591827 28.88917542]
[89.64691925 43.22902298]
[94.15454102 57.53570938]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[120.11818695 137.85028076]
[122.38703918 123.02286530]
[128.36749268 109.26662445]
[137.66288757 97.49396515]
[149.65670776 88.48571777]
[163.55342102 82.83937836]
[178.43133545 80.92943573]
[193.30363464 82.88258362]
[207.18388367 88.56926727]
[219.15148926 97.61231232]
[228.41265869 109.41191864]
[234.35311890 123.18547821]
[236.57888794 138.01942444]
[234.94233704 152.92987061]
[229.55200195 166.92788696]
[220.76539612 179.08500671]
[209.16531372 188.59490967]
[195.52114868 194.82682800]
[180.73786926 197.36743164]
[165.79600525 196.04818726]
[151.68656921 190.95663452]
[139.34541321 182.43043518]
[129.59107971 171.03514099]
[123.06890869 157.52166748]
[122.84558105 172.52000427]
[122.62225342 187.51834106]
[122.39892578 202.51667786]
[122.17559814 217.51501465]
[121.95227051 232.51335144]
[121.72894287 247.51168823]
[121.50561523 262.51000977]
[121.28228760 277.50836182]
[121.05895996 292.50671387]
[120.83563232 307.50503540]
[135.51596069 310.84896851]
[149.18006897 317.17236328]
[161.23065186 326.19885254]
[171.14086914 337.53381348]
[178.47752380 350.68170166]
[182.91987610 365.06777954]
[184.27372742 380.06314087]
[182.47990417 395.01223755]
[177.61679077 409.26159668]
[169.89701843 422.18826294]
[159.65803528 433.22714233]
[147.34745789 441.89569092]
[133.50346375 447.81491089]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 197]
[16 196]
[17 195]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[26 164]
[27 163]
[28 162]
[30 160]
[31 159]
[32 158]
[34 157]
[35 156]
[37 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
