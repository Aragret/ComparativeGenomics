%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[63.84771729 958.30413818]
[48.85722733 957.71490479]
[33.90293121 956.51861572]
[19.00940132 954.71728516]
[4.20110416 952.31390381]
[-10.49762917 949.31237793]
[-25.06264687 945.71759033]
[-39.47002029 941.53558350]
[-53.69607925 936.77307129]
[-67.71744537 931.43798828]
[-81.51109314 925.53906250]
[-95.05434418 919.08593750]
[-108.32495117 912.08929443]
[-121.30111694 904.56060791]
[-133.96151733 896.51226807]
[-146.28535461 887.95745850]
[-158.25238037 878.91021729]
[-169.84292603 869.38543701]
[-181.03794861 859.39880371]
[-191.81907654 848.96661377]
[-202.16856384 838.10614014]
[-212.06942749 826.83520508]
[-221.50538635 815.17224121]
[-230.46095276 803.13647461]
[-238.92140198 790.74761963]
[-246.87283325 778.02612305]
[-254.30220032 764.99285889]
[-261.19726562 751.66918945]
[-267.54672241 738.07702637]
[-273.34011841 724.23870850]
[-278.56796265 710.17700195]
[-283.22167969 695.91497803]
[-287.29354858 681.47613525]
[-290.77697754 666.88403320]
[-293.66613770 652.16284180]
[-295.95639038 637.33660889]
[-297.64389038 622.42974854]
[-298.72589111 607.46673584]
[-299.20062256 592.47222900]
[-299.06732178 577.47070312]
[-298.32617188 562.48699951]
[-296.97839355 547.54559326]
[-295.02621460 532.67108154]
[-292.47283936 517.88787842]
[-289.32247925 503.22033691]
[-285.58029175 488.69250488]
[-281.25244141 474.32824707]
[-276.34600830 460.15118408]
[-270.86907959 446.18463135]
[-264.83062744 432.45147705]
[-258.24060059 418.97433472]
[-251.10983276 405.77529907]
[-243.45001221 392.87609863]
[-235.27374268 380.29794312]
[-226.59443665 368.06143188]
[-217.42639160 356.18673706]
[-207.78463745 344.69329834]
[-197.68501282 333.60006714]
[-187.14414978 322.92523193]
[-176.17932129 312.68637085]
[-164.80857849 302.90023804]
[-153.05058289 293.58297729]
[-140.92465210 284.74984741]
[-128.45072937 276.41540527]
[-115.64928436 268.59332275]
[-102.54135895 261.29644775]
[-89.14849854 254.53677368]
[-75.49269867 248.32539368]
[-61.59639359 242.67254639]
[-47.48242188 237.58749390]
[-33.17396927 233.07858276]
[-18.69454384 229.15324402]
[-4.06793737 225.81791687]
[10.68181896 223.07807922]
[25.53049278 220.93824768]
[40.45368576 219.40191650]
[55.42687988 218.47161865]
[70.42547607 218.14888000]
[85.42482758 218.43423462]
[86.31764221 203.46083069]
[87.21045685 188.48742676]
[88.10327911 173.51402283]
[81.13722992 160.34878540]
[89.68222046 147.03361511]
[90.57503510 132.06019592]
[91.46784973 117.08679962]
[81.92896271 106.18010712]
[82.79138947 91.71627808]
[93.55874634 82.02038574]
[94.00534821 67.02703857]
[94.00534821 52.02703476]
[94.00534821 37.02703476]
[94.00534821 22.02703667]
[94.00534821 7.02703667]
[94.00534821 -7.97296333]
[79.50783539 -12.21544170]
[66.79355621 -20.37165260]
[56.89320374 -31.78041267]
[50.60936356 -45.51686096]
[48.45143127 -60.46744537]
[50.59434128 -75.42018890]
[56.86437988 -89.16294861]
[66.75326538 -100.58164215]
[79.45934296 -108.75062561]
[93.95259094 -113.00766754]
[109.05811310 -113.00766754]
[123.55136108 -108.75062561]
[136.25744629 -100.58164215]
[146.14631653 -89.16294861]
[152.41636658 -75.42018890]
[154.55926514 -60.46744537]
[152.40133667 -45.51686096]
[146.11749268 -31.78041267]
[136.21714783 -20.37165260]
[123.50286865 -12.21544170]
[109.00534821 -7.97296333]
[109.00534821 7.02703667]
[109.00534821 22.02703667]
[109.00534821 37.02703476]
[109.00534821 52.02703476]
[109.00534821 67.02703857]
[110.88988495 69.10229492]
[112.06592560 72.04907990]
[112.19741058 75.60127258]
[111.05072021 79.37614441]
[108.53215027 82.91320038]
[118.07103729 93.81989288]
[117.20861053 108.28372192]
[106.44125366 117.97961426]
[105.54843903 132.95301819]
[104.65562439 147.92642212]
[111.55780792 162.16265869]
[103.07668304 174.40682983]
[102.18386841 189.38024902]
[101.29104614 204.35365295]
[100.39823151 219.32705688]
[115.32521820 220.82611084]
[130.17918396 222.92886353]
[144.93574524 225.63183594]
[159.57063293 228.93063354]
[174.05981445 232.81979370]
[188.37948608 237.29293823]
[202.50611877 242.34272766]
[216.41648865 247.96086121]
[230.08776855 254.13810730]
[243.49746704 260.86431885]
[256.62356567 268.12841797]
[269.44451904 275.91851807]
[281.93920898 284.22177124]
[294.08715820 293.02459717]
[305.86840820 302.31246948]
[317.26354980 312.07012939]
[328.25390625 322.28161621]
[338.82141113 332.93008423]
[348.94869995 343.99804688]
[358.61914062 355.46734619]
[367.81683350 367.31912231]
[376.52664185 379.53390503]
[384.73431396 392.09161377]
[392.42633057 404.97164917]
[399.59005737 418.15280151]
[406.21371460 431.61346436]
[412.28643799 445.33148193]
[417.79821777 459.28433228]
[422.74005127 473.44909668]
[427.10379028 487.80249023]
[430.88223267 502.32092285]
[434.06924438 516.98059082]
[436.65951538 531.75732422]
[438.64883423 546.62689209]
[440.03390503 561.56488037]
[440.81250000 576.54675293]
[440.98327637 591.54785156]
[440.54598999 606.54351807]
[439.50137329 621.50921631]
[437.85110474 636.42022705]
[435.59790039 651.25213623]
[432.74548340 665.98052979]
[429.29855347 680.58123779]
[425.26272583 695.03021240]
[420.64468384 709.30383301]
[415.45196533 723.37854004]
[409.69314575 737.23126221]
[403.37765503 750.83923340]
[396.51586914 764.18005371]
[389.11907959 777.23187256]
[381.19946289 789.97320557]
[372.76998901 802.38311768]
[363.84451294 814.44122314]
[354.43768311 826.12774658]
[344.56500244 837.42340088]
[334.24267578 848.30969238]
[323.48767090 858.76873779]
[312.31759644 868.78332520]
[300.75088501 878.33697510]
[288.80648804 887.41406250]
[276.50405884 895.99969482]
[263.86380005 904.07965088]
[250.90647888 911.64068604]
[237.65338135 918.67047119]
[224.12629700 925.15734863]
[210.34742737 931.09069824]
[196.33943176 936.46081543]
[182.12530518 941.25885010]
[167.72842407 945.47686768]
[153.17243958 949.10797119]
[138.48124695 952.14624023]
[123.67899323 954.58660889]
[108.79000854 956.42510986]
[93.83874512 957.65869141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 136]
[80 135]
[81 134]
[82 133]
[84 131]
[85 130]
[86 129]
[89 126]
[90 121]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
