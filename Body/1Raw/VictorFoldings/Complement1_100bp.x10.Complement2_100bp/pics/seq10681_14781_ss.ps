%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[97.68227386 126.13662720]
[105.40525055 113.26493835]
[91.52891541 111.55059052]
[85.72385406 98.83081055]
[73.62809753 89.95991516]
[61.53234863 81.08901978]
[49.43659592 72.21812439]
[37.34084320 63.34722900]
[25.24509239 54.47633362]
[15.80270004 66.13515472]
[5.81218433 77.32785797]
[-4.70347452 88.02868652]
[-15.72009087 98.21304321]
[-27.21232605 107.85749054]
[-39.15374756 116.93985748]
[-51.51689148 125.43924713]
[-64.27331543 133.33612061]
[-77.39369202 140.61228943]
[-90.84782410 147.25105286]
[-104.60478973 153.23710632]
[-118.63292694 158.55671692]
[-132.89997864 163.19761658]
[-147.37313843 167.14915466]
[-162.01911926 170.40222168]
[-176.80419922 172.94935608]
[-191.69441223 174.78469849]
[-206.65550232 175.90402222]
[-221.65304565 176.30473328]
[-236.65255737 175.98593140]
[-251.61953735 174.94836426]
[-266.51956177 173.19438171]
[-281.31832886 170.72804260]
[-295.98184204 167.55500793]
[-310.47637939 163.68258667]
[-324.76855469 159.11967468]
[-338.82556152 153.87677002]
[-352.61502075 147.96594238]
[-366.10519409 141.40077209]
[-379.26513672 134.19636536]
[-392.06448364 126.36929321]
[-404.47387695 117.93756104]
[-416.46472168 108.92055511]
[-428.00946045 99.33901215]
[-439.08154297 89.21498871]
[-449.65548706 78.57174683]
[-459.70700073 67.43378448]
[-469.21292114 55.82671356]
[-478.15142822 43.77722549]
[-486.50195312 31.31304169]
[-494.24526978 18.46282578]
[-501.36355591 5.25613546]
[-507.84048462 -8.27665329]
[-513.66113281 -22.10441399]
[-518.81213379 -36.19534302]
[-523.28155518 -50.51703262]
[-527.05926514 -65.03653717]
[-530.13647461 -79.72046661]
[-532.50610352 -94.53504944]
[-534.16271973 -109.44619751]
[-535.10253906 -124.41963196]
[-535.32336426 -139.42089844]
[-534.82470703 -154.41551208]
[-533.60766602 -169.36897278]
[-531.67517090 -184.24687195]
[-529.03149414 -199.01501465]
[-525.68286133 -213.63943481]
[-521.63684082 -228.08647156]
[-516.90289307 -242.32290649]
[-511.49176025 -256.31600952]
[-505.41598511 -270.03356934]
[-498.68951416 -283.44406128]
[-491.32778931 -296.51663208]
[-483.34777832 -309.22122192]
[-474.76782227 -321.52859497]
[-465.60766602 -333.41043091]
[-455.88836670 -344.83944702]
[-445.63229370 -355.78930664]
[-434.86300659 -366.23486328]
[-423.60528564 -376.15206909]
[-411.88504028 -385.51809692]
[-399.72921753 -394.31146240]
[-387.16580200 -402.51190186]
[-374.22363281 -410.10052490]
[-360.93252563 -417.05993652]
[-347.32302856 -423.37408447]
[-333.42645264 -429.02850342]
[-319.27478027 -434.01010132]
[-304.90051270 -438.30749512]
[-290.33673096 -441.91076660]
[-275.61697388 -444.81164551]
[-260.77502441 -447.00344849]
[-245.84509277 -448.48114014]
[-230.86146545 -449.24130249]
[-215.85861206 -449.28219604]
[-200.87106323 -448.60372925]
[-185.93328857 -447.20748901]
[-171.07962036 -445.09664917]
[-156.34425354 -442.27609253]
[-141.76104736 -438.75228882]
[-127.36357117 -434.53332520]
[-113.18492126 -429.62896729]
[-99.25772858 -424.05041504]
[-85.61400604 -417.81057739]
[-72.28514862 -410.92373657]
[-59.30180359 -403.40576172]
[-46.69384003 -395.27398682]
[-34.49025726 -386.54702759]
[-22.71911812 -377.24502563]
[-11.40750027 -367.38937378]
[-0.58142042 -357.00268555]
[9.73422146 -346.10891724]
[19.51569748 -334.73309326]
[28.74051285 -322.90136719]
[37.38744736 -310.64096069]
[45.43661118 -297.98007202]
[52.86949539 -284.94784546]
[59.66900253 -271.57421875]
[65.81949615 -257.88998413]
[71.30682373 -243.92660522]
[76.11836243 -229.71618652]
[80.24305725 -215.29142761]
[83.67140961 -200.68548584]
[86.39554596 -185.93197632]
[88.40918732 -171.06483459]
[89.70771027 -156.11824036]
[90.28812408 -141.12657166]
[90.14909363 -126.12431335]
[89.29094696 -111.14598083]
[87.71565247 -96.22601318]
[85.42683411 -81.39873505]
[82.42974854 -66.69824982]
[78.73130035 -52.15835953]
[74.33998871 -37.81251144]
[69.26591492 -23.69370461]
[63.52075577 -9.83440971]
[57.11772156 3.73349452]
[50.07153702 16.97880173]
[42.39841080 29.87104988]
[34.11598969 42.38058090]
[46.21173859 51.25147629]
[58.30749130 60.12237167]
[70.40324402 68.99327087]
[82.49899292 77.86416626]
[94.59474945 86.73506165]
[108.47108459 88.44940948]
[114.27614594 101.16918945]
[124.23207092 89.93511963]
[135.18208313 79.66760254]
[147.03274536 70.45423126]
[159.68298340 62.37362289]
[173.02484131 55.49471283]
[186.94450378 49.87619019]
[201.32319641 45.56599426]
[216.03825378 42.60089874]
[230.96412659 41.00619888]
[245.97346497 40.79550171]
[260.93820190 41.97060776]
[275.73071289 44.52148819]
[290.22470093 48.42637634]
[304.29660034 53.65196228]
[317.82629395 60.15365982]
[330.69836426 67.87599182]
[342.80297852 76.75308990]
[354.03689575 86.70919800]
[364.30422974 97.65937805]
[373.51739502 109.51020050]
[381.59777832 122.16056824]
[388.47647095 135.50254822]
[394.09475708 149.42230225]
[398.40472412 163.80105591]
[401.36956787 178.51615906]
[402.96401978 193.44206238]
[403.17446899 208.45140076]
[401.99911499 223.41613770]
[399.44799805 238.20858765]
[395.54287720 252.70252991]
[390.31704712 266.77432251]
[383.81512451 280.30392456]
[376.09255981 293.17584229]
[367.21527100 305.28033447]
[357.25897217 316.51406860]
[346.30862427 326.78121948]
[334.45764160 335.99420166]
[321.80715942 344.07437134]
[308.46505737 350.95285034]
[294.54522705 356.57089233]
[280.16638184 360.88061523]
[265.45123291 363.84521484]
[250.52529907 365.43942261]
[235.51594543 365.64962769]
[220.55123901 364.47402954]
[205.75883484 361.92263794]
[191.26495361 358.01727295]
[177.19323730 352.79122925]
[163.66377258 346.28906250]
[150.79196167 338.56631470]
[138.68762207 329.68881226]
[127.45405579 319.73233032]
[117.18708801 308.78179932]
[107.97431183 296.93066406]
[99.89433289 284.28002930]
[93.01609039 270.93783569]
[87.39826202 257.01788330]
[83.08878326 242.63899231]
[80.12442780 227.92378235]
[78.53047180 212.99783325]
[78.32052612 197.98847961]
[79.49637604 183.02378845]
[82.04799652 168.23143005]
[85.95361328 153.73760986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 146]
[4 144]
[5 143]
[6 142]
[7 141]
[8 140]
[9 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
