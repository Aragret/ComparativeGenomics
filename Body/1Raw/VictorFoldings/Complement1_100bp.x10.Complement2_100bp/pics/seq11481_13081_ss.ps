%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[-57.69043732 553.67120361]
[-63.02025986 567.97351074]
[-74.03375244 578.54071045]
[-88.54416656 583.27471924]
[-103.67044830 581.23553467]
[-116.40927124 572.82806396]
[-124.23133087 559.72167969]
[-125.58354950 544.51855469]
[-120.19744873 530.23736572]
[-109.14243317 519.71362305]
[-94.61348724 515.03680420]
[-92.60947418 500.17126465]
[-90.60546112 485.30575562]
[-88.60144806 470.44021606]
[-86.59743500 455.57470703]
[-92.56499481 441.92779541]
[-83.05334473 429.28506470]
[-91.41921997 441.73544312]
[-102.23521423 452.12844849]
[-115.00927734 459.99121094]
[-129.16027832 464.96606445]
[-144.04443359 466.82669067]
[-158.98461914 465.48843384]
[-173.30114746 461.01217651]
[-186.34272766 453.60156250]
[-197.51603699 443.59368896]
[-206.31277466 431.44390869]
[-212.33273315 417.70492554]
[-215.30207825 403.00173950]
[-215.08569336 388.00329590]
[-211.69343567 373.39193726]
[-205.27961731 359.83230591]
[-196.13604736 347.94134521]
[-184.67868042 338.25997925]
[-171.42874146 331.22866821]
[-156.98904419 327.16729736]
[-142.01646423 326.26058960]
[-127.19218445 328.54980469]
[-113.19058990 333.93081665]
[-100.64867401 342.15884399]
[-90.13699341 352.85952759]
[-82.13377380 365.54608154]
[-77.00310516 379.64132690]
[-74.97839355 394.50405884]
[-76.15254974 409.46234131]
[-68.49195099 396.56600952]
[-60.83135223 383.66967773]
[-53.17075729 370.77337646]
[-45.51015854 357.87704468]
[-37.84955978 344.98071289]
[-30.18896294 332.08438110]
[-42.77445602 320.54718018]
[-52.52784348 306.52633667]
[-58.97231674 290.70260620]
[-61.79180908 273.84487915]
[-60.84646225 256.77297974]
[-56.17958069 240.31777954]
[-48.01565552 225.28068542]
[-36.74955750 212.39466858]
[-22.92745018 202.28851318]
[-7.22029829 195.45616150]
[9.60868549 192.23251343]
[26.74113846 192.77708435]
[43.34333420 197.06608582]
[50.02352905 183.63571167]
[48.76391602 168.79446411]
[61.83742905 159.88414001]
[68.51762390 146.45376587]
[75.19781494 133.02339172]
[81.87801361 119.59300995]
[88.55820465 106.16263580]
[94.83556366 92.53931427]
[93.11460876 76.81198883]
[105.21480560 68.12667847]
[111.08376312 54.32250595]
[116.95272064 40.51832581]
[115.23176575 24.79099846]
[127.33196259 16.10569191]
[133.20092773 2.30151510]
[139.06988525 -11.50266171]
[144.93884277 -25.30683899]
[150.80780029 -39.11101532]
[137.63442993 -31.93730736]
[122.66653442 -32.91825867]
[110.54209900 -41.74990463]
[105.01799774 -55.69567108]
[107.80594635 -70.43430328]
[118.04206085 -81.39888000]
[132.55456543 -85.19190979]
[146.84661865 -80.63807678]
[156.48965454 -69.14843750]
[158.49565125 -54.28292465]
[158.89129639 -70.09918213]
[172.04338074 -77.09003448]
[179.70397949 -89.98635864]
[187.36457825 -102.88268280]
[195.02517700 -115.77901459]
[183.09112549 -124.89466095]
[172.29606628 -135.33416748]
[162.78598022 -146.95632935]
[154.68946838 -159.60397339]
[148.11604309 -173.10607910]
[143.15460205 -187.28001404]
[139.87223816 -201.93411255]
[138.31333923 -216.87019348]
[138.49899292 -231.88624573]
[140.42669678 -246.77922058]
[144.07035828 -261.34768677]
[149.38070679 -275.39462280]
[156.28594971 -288.73007202]
[164.69267273 -301.17370605]
[174.48719788 -312.55718994]
[185.53706360 -322.72659302]
[197.69282532 -331.54440308]
[210.79011536 -338.89135742]
[224.65177917 -344.66812134]
[239.09036255 -348.79650879]
[253.91059875 -351.22076416]
[268.91207886 -351.90805054]
[283.89190674 -350.84909058]
[298.64749146 -348.05819702]
[312.97930908 -343.57312012]
[326.69348145 -337.45449829]
[339.60461426 -329.78512573]
[351.53805542 -320.66867065]
[362.33242798 -310.22845459]
[371.84173584 -298.60565186]
[379.93737793 -285.95745850]
[386.50991821 -272.45492554]
[391.47039795 -258.28063965]
[394.75180054 -243.62634277]
[396.30969238 -228.69015503]
[396.12304688 -213.67410278]
[394.19436646 -198.78126526]
[390.54971313 -184.21304321]
[385.23843384 -170.16645813]
[378.33230591 -156.83146667]
[369.92474365 -144.38841248]
[360.12945557 -133.00558472]
[349.07891846 -122.83689880]
[336.92254639 -114.01990509]
[323.82479858 -106.67382050]
[309.96273804 -100.89799500]
[295.52386475 -96.77055359]
[280.70346069 -94.34730530]
[265.70196533 -93.66102600]
[250.72219849 -94.72098541]
[235.96679688 -97.51286316]
[221.63528442 -101.99889374]
[207.92150879 -108.11841583]
[200.26091003 -95.22209167]
[192.60031128 -82.32575989]
[184.93971252 -69.42943573]
[185.09199524 -54.53560638]
[171.39196777 -46.62232971]
[164.61198425 -33.24205399]
[158.74301147 -19.43787766]
[152.87405396 -5.63370132]
[147.00509644 8.17047596]
[141.13613892 21.97465324]
[143.27688599 36.71461487]
[130.75689697 46.38728714]
[124.88793945 60.19146347]
[119.01898193 73.99564362]
[121.15972900 88.73560333]
[108.63974762 98.40827942]
[109.53618622 101.32133484]
[109.39249420 104.62495422]
[108.06197357 107.93450928]
[105.54207611 110.81658173]
[101.98858643 112.84282684]
[95.30838776 126.27320099]
[88.62819672 139.70358276]
[81.94799805 153.13395691]
[75.26780701 166.56433105]
[76.04960632 182.36621094]
[63.45390320 190.31590271]
[56.77370834 203.74627686]
[67.20255280 211.57064819]
[76.17478180 221.02542114]
[83.43885040 231.84385681]
[88.79138947 243.72105408]
[92.08286285 256.32247925]
[93.22179413 269.29336548]
[92.17726898 282.26882935]
[88.97978210 294.88394165]
[83.72038269 306.78421021]
[76.54802704 317.63534546]
[67.66539001 327.13275146]
[57.32315063 335.01007080]
[45.81288528 341.04660034]
[33.45887375 345.07360840]
[20.60895157 346.97885132]
[7.62471342 346.70989990]
[-5.12865067 344.27542114]
[-17.29263687 339.74499512]
[-24.95323372 352.64129639]
[-32.61383057 365.53762817]
[-40.27442932 378.43395996]
[-47.93502426 391.33029175]
[-55.59562302 404.22662354]
[-63.25622177 417.12295532]
[-68.18781281 431.28906250]
[-62.36359406 445.99923706]
[-71.73190308 457.57870483]
[-73.73591614 472.44424438]
[-75.73992920 487.30975342]
[-77.74394989 502.17529297]
[-79.74796295 517.04083252]
[-66.97612762 525.39801025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 209]
[12 208]
[13 207]
[14 206]
[15 205]
[17 203]
[45 202]
[46 201]
[47 200]
[48 199]
[49 198]
[50 197]
[51 196]
[64 178]
[65 177]
[67 175]
[68 174]
[69 173]
[70 172]
[71 171]
[72 166]
[74 164]
[75 163]
[76 162]
[78 160]
[79 159]
[80 158]
[81 157]
[82 156]
[92 155]
[94 153]
[95 152]
[96 151]
[97 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
