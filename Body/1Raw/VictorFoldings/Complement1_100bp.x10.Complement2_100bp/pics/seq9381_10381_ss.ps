%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[164.62266541 808.56292725]
[150.40928650 803.75939941]
[136.45300293 798.25335693]
[122.78852844 792.05853271]
[109.44982910 785.19024658]
[96.47006226 777.66564941]
[83.88150787 769.50341797]
[71.71544647 760.72381592]
[60.00214386 751.34875488]
[48.77070999 741.40142822]
[38.04906845 730.90667725]
[27.86388016 719.89050293]
[18.24046326 708.38031006]
[9.20274353 696.40478516]
[0.77319133 683.99365234]
[-7.02723646 671.17773438]
[-14.17914581 657.98895264]
[-20.66475868 644.46008301]
[-26.46794701 630.62469482]
[-31.57428551 616.51727295]
[-35.97107697 602.17285156]
[-39.64739609 587.62713623]
[-42.59409332 572.91619873]
[-44.80385208 558.07672119]
[-46.27117157 543.14550781]
[-46.99240875 528.15972900]
[-46.96576691 513.15661621]
[-46.19131470 498.17349243]
[-44.67097473 483.24758911]
[-42.40853119 468.41601562]
[-39.40960312 453.71566772]
[-35.68165207 439.18307495]
[-31.23394394 424.85433960]
[-26.07753563 410.76516724]
[-20.22524643 396.95050049]
[-13.69162941 383.44473267]
[-6.49292469 370.28143311]
[1.35296857 357.49331665]
[9.82654476 345.11218262]
[18.90673828 333.16879272]
[28.57097244 321.69290161]
[38.79521942 310.71298218]
[49.55406570 300.25634766]
[60.82075500 290.34896851]
[72.56728363 281.01553345]
[84.76444244 272.27923584]
[97.38191223 264.16174316]
[110.38831329 256.68328857]
[123.75132751 249.86244202]
[137.43771362 243.71617126]
[131.98236084 229.74336243]
[126.52700043 215.77056885]
[121.07164764 201.79777527]
[115.12939453 215.57055664]
[101.78129578 222.41368103]
[87.12992096 219.19854736]
[77.87367249 207.39506531]
[78.24439240 192.39965820]
[88.07258606 181.06799316]
[102.86493683 178.58076477]
[115.85978699 186.07652283]
[111.88768768 171.61199951]
[107.91558838 157.14747620]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[74.76403046 86.25194550]
[64.03140259 75.49520874]
[60.14976501 60.90756607]
[64.06482697 46.43247604]
[74.62847137 35.93128586]
[70.65637207 21.46676254]
[66.68428040 7.00223827]
[62.71218109 -7.46228552]
[58.74008560 -21.92680931]
[54.76799011 -36.39133453]
[50.79589462 -50.85585785]
[45.50572586 -58.30246353]
[46.87405396 -65.56534576]
[43.11775208 -80.08740234]
[39.36145020 -94.60946655]
[24.31133270 -94.05448914]
[9.49385452 -96.74826813]
[-4.39794064 -102.56480408]
[-16.71430969 -111.23204803]
[-26.87919426 -122.34461975]
[-34.41716385 -135.38275146]
[-38.97565079 -149.73664856]
[-40.34145355 -164.73493958]
[-38.45068359 -179.67613220]
[-33.39178085 -193.86138916]
[-25.40135765 -206.62724304]
[-14.85313892 -217.37663269]
[-2.24048615 -225.60675049]
[11.84668446 -230.93269348]
[26.74949074 -233.10534668]
[41.77090454 -232.02310181]
[56.20833969 -227.73654175]
[69.38653564 -220.44619751]
[80.68912506 -210.49302673]
[89.58746338 -198.34257507]
[95.66536713 -184.56312561]
[98.63854980 -169.79917908]
[98.36795044 -154.74125671]
[94.86623383 -140.09365845]
[88.29718018 -126.54148102]
[78.96803284 -114.71858215]
[67.31513214 -105.17792511]
[53.88351059 -98.36576843]
[57.63981247 -83.84370422]
[61.39611053 -69.32164764]
[65.26041412 -54.82795334]
[69.23251343 -40.36343002]
[73.20461273 -25.89890671]
[77.17670441 -11.43438148]
[81.14880371 3.03014207]
[85.12089539 17.49466515]
[89.09299469 31.95919037]
[103.53816986 35.59272003]
[114.29668427 46.03830719]
[118.40943146 60.56248474]
[114.67552948 75.29187012]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[122.38011932 153.17538452]
[126.35221100 167.63990784]
[130.32431030 182.10443115]
[135.04444885 196.34240723]
[140.49980164 210.31521606]
[145.95515442 224.28800964]
[151.41050720 238.26080322]
[165.64080811 233.50765991]
[180.09034729 229.46972656]
[194.72320557 226.15707397]
[209.50299072 223.57792664]
[224.39295959 221.73870850]
[239.35609436 220.64396667]
[254.35520935 220.29644775]
[269.35299683 220.69700623]
[284.31216431 221.84463501]
[299.19552612 223.73649597]
[313.96609497 226.36788940]
[328.58715820 229.73226929]
[343.02230835 233.82124329]
[357.23571777 238.62469482]
[371.19204712 244.13064575]
[384.85653687 250.32540894]
[398.19528198 257.19360352]
[411.17507935 264.71813965]
[423.76367188 272.88031006]
[435.92977905 281.65982056]
[447.64312744 291.03488159]
[458.87463379 300.98211670]
[469.59631348 311.47683716]
[479.78155518 322.49295044]
[489.40505981 334.00305176]
[498.44284058 345.97854614]
[506.87243652 358.38964844]
[514.67291260 371.20553589]
[521.82489014 384.39428711]
[528.31060791 397.92312622]
[534.11383057 411.75845337]
[539.22027588 425.86584473]
[543.61712646 440.21023560]
[547.29351807 454.75595093]
[550.24029541 469.46685791]
[552.45013428 484.30633545]
[553.91754150 499.23754883]
[554.63885498 514.22332764]
[554.61230469 529.22644043]
[553.83789062 544.20959473]
[552.31762695 559.13549805]
[550.05529785 573.96704102]
[547.05645752 588.66741943]
[543.32855225 603.20007324]
[538.88092041 617.52874756]
[533.72460938 631.61798096]
[527.87237549 645.43267822]
[521.33880615 658.93847656]
[514.14019775 672.10180664]
[506.29437256 684.89001465]
[497.82086182 697.27117920]
[488.74072266 709.21459961]
[479.07653809 720.69055176]
[468.85235596 731.67053223]
[458.09356689 742.12719727]
[446.82693481 752.03460693]
[435.08044434 761.36810303]
[422.88333130 770.10449219]
[410.26589966 778.22204590]
[397.25955200 785.70056152]
[383.89657593 792.52148438]
[370.21020508 798.66784668]
[356.23449707 804.12432861]
[342.00418091 808.87744141]
[327.55459595 812.91528320]
[312.92175293 816.22784424]
[298.14193726 818.80688477]
[283.25195312 820.64605713]
[268.28881836 821.74072266]
[253.28971863 822.08813477]
[238.29193115 821.68750000]
[223.33276367 820.53979492]
[208.44940186 818.64788818]
[193.67884827 816.01641846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 136]
[51 135]
[52 134]
[53 133]
[61 132]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[68 125]
[73 120]
[74 119]
[75 118]
[76 117]
[77 116]
[78 115]
[79 114]
[81 113]
[82 112]
[83 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
