%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[27.50851059 702.32818604]
[21.63167000 716.15270996]
[14.00059319 729.09185791]
[4.74585533 740.92425537]
[-5.97418213 751.44732666]
[-17.97608566 760.48114014]
[-31.05448532 767.87103271]
[-44.98559570 773.49060059]
[-59.53103256 777.24359131]
[-74.44190979 779.06591797]
[-89.46308136 778.92626953]
[-104.33750916 776.82714844]
[-118.81067657 772.80444336]
[-132.63493347 766.92694092]
[-145.57373047 759.29522705]
[-157.40565491 750.03997803]
[-167.92825317 739.31939697]
[-176.96147156 727.31707764]
[-184.35072327 714.23834229]
[-189.96960449 700.30694580]
[-193.72193909 685.76135254]
[-195.54353333 670.85034180]
[-195.40321350 655.82922363]
[-193.30337524 640.95489502]
[-189.27995300 626.48187256]
[-183.40180969 612.65789795]
[-175.76950073 599.71948242]
[-166.51362610 587.88800049]
[-155.79258728 577.36590576]
[-143.78982544 568.33325195]
[-130.71072388 560.94464111]
[-116.77907562 555.32641602]
[-102.23328400 551.57476807]
[-87.32223511 549.75390625]
[-72.30107880 549.89495850]
[-57.42684937 551.99548340]
[-42.95405960 556.01959229]
[-37.08509827 542.21539307]
[-31.21613884 528.41125488]
[-25.34717751 514.60705566]
[-19.47821617 500.80288696]
[-13.60925579 486.99868774]
[-8.57234001 472.86965942]
[-4.38532877 458.46588135]
[-0.19831748 444.06210327]
[3.88134933 429.62756348]
[7.85344553 415.16302490]
[-5.45967722 408.30325317]
[-17.06004333 398.82156372]
[-26.43905258 387.13052368]
[-33.18484879 373.73962402]
[-37.00039291 359.23312378]
[-37.71655273 344.24447632]
[-35.29959488 329.42874146]
[-29.85277176 315.43389893]
[-21.61189461 302.87255859]
[-10.93514633 292.29510498]
[1.71249676 284.16564941]
[15.77951241 278.84158325]
[30.65188217 276.55786133]
[45.67989349 277.41671753]
[49.65198898 262.95220947]
[53.62408829 248.48767090]
[48.27885056 231.77255249]
[61.48736191 218.94224548]
[65.24365997 204.42018127]
[68.99996185 189.89813232]
[72.75626373 175.37606812]
[76.51256561 160.85400391]
[80.26886749 146.33195496]
[84.02516174 131.80989075]
[87.78146362 117.28782654]
[80.09548950 107.20916748]
[79.54473114 94.54621887]
[86.32662964 83.83830261]
[98.01004791 78.92390442]
[94.20333099 63.56748962]
[105.03468323 53.34344864]
[109.00678253 38.87892532]
[112.97887421 24.41440201]
[116.51854706 9.83802605]
[119.62265778 -4.83727646]
[114.90866089 -19.93988609]
[125.11226654 -30.79049492]
[111.98233032 -23.53757286]
[97.53188324 -27.56057358]
[90.03879547 -40.55493927]
[93.79544067 -55.07691193]
[106.64984894 -62.80763626]
[121.23843384 -59.31861115]
[129.20402527 -46.60943985]
[133.60502625 -60.94928741]
[138.00601196 -75.28913879]
[142.40701294 -89.62898254]
[128.81518555 -96.03543854]
[116.27346802 -104.31108093]
[105.03721619 -114.28742218]
[95.33517456 -125.76136017]
[87.36487579 -138.49929810]
[81.28857422 -152.24191284]
[77.22998047 -166.70941162]
[75.27172089 -181.60725403]
[75.45366669 -196.63215637]
[77.77210236 -211.47822571]
[82.17984772 -225.84320068]
[88.58714294 -239.43464661]
[96.86356354 -251.97584534]
[106.84059906 -263.21148682]
[118.31513214 -272.91281128]
[131.05357361 -280.88232422]
[144.79655457 -286.95776367]
[159.26429749 -291.01547241]
[174.16227722 -292.97280884]
[189.18716431 -292.78994751]
[204.03308105 -290.47058105]
[218.39779663 -286.06195068]
[231.98883057 -279.65380859]
[244.52952576 -271.37661743]
[255.76454163 -261.39886475]
[265.46514893 -249.92373657]
[273.43389893 -237.18481445]
[279.50848389 -223.44145203]
[283.56527710 -208.97344971]
[285.52169800 -194.07536316]
[285.33789062 -179.05047607]
[283.01760864 -164.20471191]
[278.60809326 -149.84027100]
[272.19912720 -136.24961853]
[263.92114258 -123.70944977]
[253.94271851 -112.47505188]
[242.46697998 -102.77513885]
[229.72756958 -94.80720520]
[215.98382568 -88.73345947]
[201.51557922 -84.67755127]
[186.61737061 -82.72205353]
[171.59249878 -82.90678406]
[156.74685669 -85.22798157]
[152.34587097 -70.88813782]
[147.94487000 -56.54829025]
[143.54386902 -42.20844269]
[139.78756714 -27.68638420]
[144.72358704 -13.63345051]
[134.29795837 -1.73316622]
[131.19384766 12.94213581]
[132.60813904 15.36245632]
[133.14891052 18.48882294]
[132.54244995 21.99133873]
[130.63940430 25.44719696]
[127.44339752 28.38649750]
[123.47130585 42.85102081]
[119.49920654 57.31554413]
[123.59003448 71.63735962]
[112.47457123 82.89600372]
[120.96316528 97.04914856]
[116.71150970 112.99565887]
[102.30352783 121.04412842]
[98.54722595 135.56619263]
[94.79092407 150.08824158]
[91.03462219 164.61030579]
[87.27832031 179.13237000]
[83.52201843 193.65443420]
[79.76572418 208.17648315]
[76.00942230 222.69854736]
[81.87082672 234.18795776]
[78.44322205 246.20608521]
[68.08860779 252.45977783]
[64.11651611 266.92428589]
[60.14441681 281.38882446]
[73.50345612 288.32531738]
[85.12374115 297.88415527]
[94.49888611 309.64569092]
[101.22099304 323.09426880]
[104.99842072 337.64096069]
[105.66839600 352.64929199]
[103.20407104 367.46316528]
[97.71556854 381.43542480]
[89.44504547 393.95626831]
[78.75604248 404.47967529]
[66.11750031 412.54742432]
[52.08316040 417.80895996]
[37.26732635 420.03649902]
[22.31797028 419.13513184]
[18.34587288 433.59963989]
[19.09109306 442.70361328]
[14.20546436 448.24911499]
[10.01845360 462.65289307]
[5.83144188 477.05667114]
[18.46563530 468.97106934]
[33.44587708 469.74069214]
[45.18490982 479.07852173]
[49.30436325 493.50177002]
[44.26778030 507.63092041]
[31.95368767 516.19616699]
[16.95493507 516.00286865]
[4.86568356 507.12307739]
[0.19492073 492.86764526]
[-5.67403984 506.67184448]
[-11.54300117 520.47601318]
[-17.41196251 534.28021240]
[-23.28092194 548.08435059]
[-29.14988327 561.88854980]
[-16.21036720 569.51898193]
[-4.37756252 578.77319336]
[6.14605618 589.49273682]
[15.18041611 601.49420166]
[22.57092667 614.57226562]
[28.19112778 628.50305176]
[31.94485092 643.04833984]
[33.76786423 657.95910645]
[33.62897110 672.98028564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 201]
[38 200]
[39 199]
[40 198]
[41 197]
[42 196]
[43 187]
[44 186]
[45 185]
[46 183]
[47 182]
[61 168]
[62 167]
[63 166]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[76 153]
[78 151]
[79 150]
[80 149]
[81 144]
[82 143]
[84 141]
[91 140]
[92 139]
[93 138]
[94 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
