%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[99.55590820 571.61755371]
[84.71634674 569.25787354]
[70.36367798 564.81018066]
[56.79010391 558.36511230]
[44.27196121 550.05389404]
[33.06410980 540.04565430]
[23.39472008 528.54418945]
[15.46065426 515.78363037]
[9.42343616 502.02383423]
[5.40597773 487.54483032]
[3.49006772 472.64147949]
[3.71471238 457.61715698]
[6.07533789 442.77774048]
[10.52388573 428.42535400]
[16.96978760 414.85217285]
[25.28181648 402.33456421]
[35.29074478 391.12731934]
[46.79280853 381.45864868]
[59.55384064 373.52536011]
[73.31403351 367.48901367]
[87.79326630 363.47244263]
[102.69673920 361.55746460]
[102.92006683 346.55911255]
[103.14339447 331.56079102]
[103.36672211 316.56243896]
[103.59004974 301.56411743]
[103.36672211 286.56576538]
[102.69693756 271.58071899]
[102.02715302 256.59567261]
[101.35736847 241.61064148]
[99.38204956 239.62161255]
[98.07559967 236.73028564]
[97.78562927 233.18750000]
[98.76262665 229.36518860]
[101.12074280 225.71919250]
[101.34407043 210.72085571]
[101.56739807 195.72251892]
[101.79072571 180.72418213]
[102.01405334 165.72584534]
[100.89839935 150.76739502]
[98.45267487 135.96812439]
[96.00695038 121.16885376]
[93.56121826 106.36958313]
[90.77606964 103.70212555]
[89.18022156 99.81996918]
[89.28980255 95.28179932]
[91.35214996 90.85612488]
[89.56968689 75.96240997]
[87.67639160 61.08237076]
[85.67237854 46.21684265]
[83.66836548 31.35131454]
[81.66435242 16.48578644]
[79.66033936 1.62025833]
[74.88452911 15.83967113]
[67.29377747 28.77722931]
[57.21082687 39.88282013]
[45.06442261 48.68423080]
[31.37102699 54.80721664]
[16.71289825 57.99143219]
[1.71330118 58.10147476]
[-12.98997021 55.13267136]
[-26.77172661 49.21125412]
[-39.04596329 40.58900833]
[-49.29076767 29.63254929]
[-57.07052994 16.80775642]
[-62.05445099 2.65994620]
[-64.03060913 -12.20931053]
[-62.91497803 -27.16776466]
[-58.75499344 -41.57937622]
[-51.72754669 -54.83135605]
[-42.13143921 -66.36022186]
[-30.37470818 -75.67576599]
[-16.95725441 -82.38187408]
[-2.44959545 -86.19341278]
[12.53139687 -86.94830322]
[27.34872246 -84.61445618]
[41.37234116 -79.29109955]
[54.00596237 -71.20459747]
[64.71240234 -60.69877625]
[73.03640747 -48.22035599]
[78.62403870 -34.29992676]
[81.23773193 -19.52922058]
[85.42474365 -33.93300247]
[89.61175537 -48.33678436]
[93.79876709 -62.74056625]
[97.98577881 -77.14434814]
[94.40811157 -92.55574036]
[105.39048767 -102.61738586]
[109.57749939 -117.02116394]
[113.54959869 -131.48568726]
[117.30590057 -146.00775146]
[121.06219482 -160.52980042]
[107.18064880 -166.27861023]
[94.23431396 -173.90347290]
[82.47518921 -183.25596619]
[72.13217926 -194.15405273]
[63.40660858 -206.38558960]
[56.46832657 -219.71249390]
[51.45238495 -233.87535095]
[48.45642471 -248.59846497]
[47.53875732 -263.59527588]
[48.71725082 -278.57382202]
[51.96896362 -293.24258423]
[57.23060226 -307.31600952]
[64.39974213 -320.52017212]
[73.33683777 -332.59802246]
[83.86791992 -343.31448364]
[95.78800964 -352.46093750]
[108.86507416 -359.85934448]
[122.84455872 -365.36572266]
[137.45434570 -368.87286377]
[152.41006470 -370.31250000]
[167.42059326 -369.65661621]
[182.19375610 -366.91796875]
[196.44197083 -362.14990234]
[209.88789368 -355.44519043]
[222.26980591 -346.93435669]
[233.34667969 -336.78305054]
[242.90290833 -325.18887329]
[250.75248718 -312.37756348]
[256.74258423 -298.59841919]
[260.75665283 -284.11968994]
[262.71652222 -269.22320557]
[262.58404541 -254.19894409]
[260.36181641 -239.33934021]
[256.09307861 -224.93363953]
[249.86094666 -211.26226807]
[241.78669739 -198.59133911]
[232.02751160 -187.16748047]
[220.77336121 -177.21307373]
[208.24330139 -168.92189026]
[194.68124390 -162.45530701]
[180.35116577 -157.93919373]
[165.53202820 -155.46147156]
[150.51226807 -155.07037354]
[135.58425903 -156.77351379]
[131.82795715 -142.25144958]
[128.07165527 -127.72938538]
[129.68052673 -123.23265839]
[128.48167419 -117.67750549]
[123.98128510 -112.83415222]
[119.79427338 -98.43037415]
[123.67141724 -84.04924011]
[112.38955688 -72.95733643]
[108.20254517 -58.55355453]
[104.01553345 -44.14977264]
[99.82852173 -29.74599075]
[95.64151001 -15.34220886]
[94.52586365 -0.38375527]
[96.52987671 14.48177338]
[98.53388977 29.34730148]
[100.53790283 44.21282959]
[102.54191589 59.07835770]
[106.55087280 65.28723145]
[104.46340179 74.17993927]
[106.24586487 89.07365417]
[108.36048889 103.92385864]
[110.80622101 118.72312927]
[113.25194550 133.52239990]
[115.69766998 148.32167053]
[121.66252136 134.55865479]
[132.95140076 124.68134308]
[147.38459778 120.59689331]
[162.17529297 123.09394836]
[174.46763611 131.69035339]
[181.88816833 144.72630310]
[183.00410461 159.68473816]
[177.59996033 173.67741394]
[166.71920776 184.00259399]
[152.46273804 188.66661072]
[137.58325195 186.76895142]
[124.95376587 178.67599487]
[117.01239014 165.94917297]
[116.78906250 180.94750977]
[116.56573486 195.94584656]
[116.34240723 210.94418335]
[116.11907959 225.94252014]
[116.34240723 240.94085693]
[117.01219177 255.92590332]
[117.68197632 270.91094971]
[118.35176086 285.89596558]
[120.81738281 289.47015381]
[121.90774536 293.26165771]
[121.72338867 296.81152344]
[120.50360870 299.74044800]
[118.58838654 301.78744507]
[118.36505890 316.78576660]
[118.14173126 331.78411865]
[117.91840363 346.78244019]
[117.69507599 361.78079224]
[132.53492737 364.13864136]
[146.88815308 368.58453369]
[160.46252441 375.02792358]
[172.98168945 383.33761597]
[184.19078064 393.34448242]
[193.86158752 404.84472656]
[201.79724121 417.60427856]
[207.83615112 431.36337280]
[211.85540771 445.84185791]
[213.77316284 460.74496460]
[213.55038452 475.76931763]
[211.19158936 490.60903931]
[206.74481201 504.96197510]
[200.30059814 518.53594971]
[191.99011230 531.05462646]
[181.98257446 542.26306152]
[170.48170471 551.93316650]
[157.72166443 559.86804199]
[143.96220398 565.90606689]
[129.48347473 569.92443848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[27 181]
[28 180]
[29 179]
[30 178]
[35 177]
[36 176]
[37 175]
[38 174]
[39 173]
[40 160]
[41 159]
[42 158]
[43 157]
[47 156]
[48 155]
[49 153]
[50 152]
[51 151]
[52 150]
[53 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[88 142]
[89 141]
[90 138]
[91 137]
[92 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
