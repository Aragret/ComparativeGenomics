%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[160.13587952 284.18582153]
[158.49966431 269.26953125]
[157.87419128 254.27680969]
[158.26229858 239.27606201]
[159.66221619 224.33573914]
[162.06756592 209.52401733]
[165.46737671 194.90846252]
[169.84611511 180.55578613]
[175.18382263 166.53144836]
[181.45613098 152.89945984]
[168.28364563 145.72409058]
[155.11117554 138.54873657]
[141.93870544 131.37336731]
[128.76622009 124.19799805]
[115.59375000 117.02262878]
[102.42127228 109.84726715]
[94.39891815 109.06340790]
[89.10725403 102.46574402]
[76.04306793 95.09505463]
[62.97888565 87.72436523]
[49.91469955 80.35367584]
[36.85051346 72.98298645]
[23.78632927 65.61229706]
[10.72214317 58.24160767]
[-2.34204197 50.87091827]
[-10.59962559 63.40060425]
[-19.70197487 75.33072662]
[-29.60571289 86.60444641]
[-40.26364136 97.16802216]
[-51.62497330 106.97113037]
[-63.63556290 115.96704102]
[-76.23817444 124.11288452]
[-89.37274933 131.36985779]
[-102.97669983 137.70335388]
[-116.98519135 143.08320618]
[-131.33146667 147.48376465]
[-145.94715881 150.88407898]
[-160.76263428 153.26792908]
[-175.70726013 154.62396240]
[-190.70982361 154.94572449]
[-205.69885254 154.23165894]
[-220.60289001 152.48516846]
[-235.35092163 149.71459961]
[-249.87268066 145.93315125]
[-264.09893799 141.15882874]
[-277.96191406 135.41438293]
[-291.39553833 128.72721863]
[-304.33581543 121.12916565]
[-316.72103882 112.65645599]
[-328.49218750 103.34945679]
[-339.59323120 93.25252533]
[-349.97119141 82.41377258]
[-359.57666016 70.88486481]
[-368.36383057 58.72072601]
[-376.29083252 45.97933197]
[-383.31991577 32.72140503]
[-389.41757202 19.01011658]
[-394.55471802 4.91081667]
[-398.70690918 -9.50930882]
[-401.85433960 -24.18153954]
[-403.98199463 -39.03595734]
[-405.07977295 -54.00177002]
[-405.14242554 -69.00765991]
[-404.16964722 -83.98211670]
[-402.16604614 -98.85378265]
[-399.14123535 -113.55178070]
[-395.10958862 -128.00607300]
[-390.09033203 -142.14776611]
[-384.10736084 -155.90948486]
[-377.18920898 -169.22563171]
[-369.36886597 -182.03276062]
[-360.68353271 -194.26983643]
[-351.17468262 -205.87855530]
[-340.88754272 -216.80355835]
[-329.87121582 -226.99282837]
[-318.17816162 -236.39776611]
[-305.86410522 -244.97358704]
[-292.98773193 -252.67941284]
[-279.61041260 -259.47851562]
[-265.79586792 -265.33850098]
[-251.60997009 -270.23141479]
[-237.12028503 -274.13397217]
[-222.39590454 -277.02758789]
[-207.50695801 -278.89843750]
[-192.52441406 -279.73760986]
[-177.51968384 -279.54113770]
[-162.56425476 -278.30993652]
[-147.72941589 -276.04983521]
[-133.08583069 -272.77166748]
[-118.70331573 -268.49102783]
[-104.65039825 -263.22833252]
[-90.99404144 -257.00863647]
[-77.79933929 -249.86157227]
[-65.12915802 -241.82122803]
[-53.04387665 -232.92590332]
[-41.60109711 -223.21800232]
[-30.85534668 -212.74377441]
[-20.85783195 -201.55313110]
[-11.65619659 -189.69941711]
[-3.29429150 -177.23910522]
[4.18803453 -164.23159790]
[10.75512505 -150.73886108]
[16.37568474 -136.82519531]
[21.02292633 -122.55691528]
[24.67470741 -108.00201416]
[27.31362343 -93.22985077]
[28.92709732 -78.31082153]
[29.50744247 -63.31602478]
[29.05189323 -48.31692123]
[27.56261826 -33.38498688]
[25.04671478 -18.59137535]
[21.51617432 -4.00658989]
[16.98782158 10.29986668]
[11.48323536 24.25981522]
[5.02864790 37.80673218]
[18.09283257 45.17742157]
[31.15701866 52.54811096]
[44.22120285 59.91880035]
[57.28538895 67.28948975]
[70.34957123 74.66017914]
[83.41375732 82.03086853]
[96.47794342 89.40155792]
[109.59664154 96.67478943]
[122.76911163 103.85015869]
[135.94158936 111.02552032]
[149.11405945 118.20088959]
[162.28654480 125.37625122]
[175.45901489 132.55162048]
[188.63150024 139.72698975]
[196.68269348 127.06400299]
[205.57040405 114.97344971]
[215.25407410 103.51048279]
[225.68949890 92.72741699]
[236.82910156 82.67344666]
[248.62202454 73.39444733]
[261.01446533 64.93275452]
[273.94989014 57.32698441]
[287.36929321 50.61183929]
[301.21139526 44.81795120]
[315.41305542 39.97176743]
[329.90948486 36.09539032]
[344.63455200 33.20651627]
[359.52102661 31.31831932]
[374.50103760 30.43941689]
[389.50619507 30.57382202]
[404.46804810 31.72091675]
[419.31832886 33.87547302]
[433.98928833 37.02765274]
[448.41397095 41.16308212]
[462.52655029 46.26288223]
[476.26263428 52.30379105]
[489.55957031 59.25823975]
[502.35668945 67.09450531]
[514.59558105 75.77681732]
[526.22039795 85.26557159]
[537.17810059 95.51747894]
[547.41870117 106.48574066]
[556.89550781 118.12033081]
[565.56518555 130.36814880]
[573.38824463 143.17332458]
[580.32904053 156.47741699]
[586.35577393 170.21972656]
[591.44104004 184.33755493]
[595.56158447 198.76647949]
[598.69866943 213.44067383]
[600.83795166 228.29316711]
[601.96960449 243.25619507]
[602.08856201 258.26147461]
[601.19421387 273.24057007]
[599.29071045 288.12512207]
[596.38665771 302.84719849]
[592.49536133 317.33963013]
[587.63452148 331.53628540]
[581.82641602 345.37243652]
[575.09747314 358.78488159]
[567.47833252 371.71246338]
[559.00390625 384.09619141]
[549.71276855 395.87954712]
[539.64733887 407.00878906]
[528.85351562 417.43310547]
[517.38055420 427.10494995]
[505.28088379 435.98022461]
[492.60961914 444.01837158]
[479.42459106 451.18273926]
[465.78598022 457.44064331]
[451.75601196 462.76354980]
[437.39871216 467.12713623]
[422.77960205 470.51150513]
[407.96533203 472.90121460]
[393.02352905 474.28533936]
[378.02239990 474.65762329]
[363.03033447 474.01629639]
[348.11578369 472.36434937]
[333.34677124 469.70925903]
[318.79071045 466.06320190]
[304.51400757 461.44274902]
[290.58178711 455.86904907]
[277.05764771 449.36746216]
[264.00326538 441.96774292]
[251.47822571 433.70355225]
[239.53968811 424.61267090]
[228.24209595 414.73657227]
[217.63702393 404.12030029]
[207.77285767 392.81228638]
[198.69458008 380.86416626]
[190.44364929 368.33038330]
[183.05769348 355.26821899]
[176.57041931 341.73721313]
[171.01141357 327.79910278]
[166.40605164 313.51751709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 129]
[11 128]
[12 127]
[13 126]
[14 125]
[15 124]
[16 123]
[18 122]
[19 121]
[20 120]
[21 119]
[22 118]
[23 117]
[24 116]
[25 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
