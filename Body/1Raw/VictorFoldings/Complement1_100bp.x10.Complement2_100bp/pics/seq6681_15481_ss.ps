%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[116.42375946 748.75238037]
[102.98311615 742.07830811]
[90.05284119 734.46246338]
[77.69882965 725.94360352]
[65.98402405 716.56506348]
[54.96812820 706.37469482]
[44.70727158 695.42443848]
[35.25374603 683.77008057]
[26.65572357 671.47100830]
[18.95701981 658.58990479]
[12.19686413 645.19238281]
[6.40970469 631.34674072]
[1.62503338 617.12347412]
[-2.13276887 602.59515381]
[-4.84455252 587.83581543]
[-6.49649954 572.92053223]
[-7.08019114 557.92547607]
[-6.59265327 542.92694092]
[-5.03637028 528.00140381]
[-2.41927290 513.22497559]
[1.24530280 498.67285156]
[5.93868303 484.41921997]
[11.63695049 470.53674316]
[18.31106949 457.09616089]
[25.92702675 444.16595459]
[34.44601440 431.81201172]
[43.82462311 420.09725952]
[54.01506042 409.08145142]
[64.96539307 398.82067871]
[76.61982727 389.36724854]
[88.91896820 380.76931763]
[101.80014801 373.07070923]
[115.19772339 366.31066895]
[129.04341125 360.52359009]
[143.26667786 355.73904419]
[139.51037598 341.21697998]
[135.75407410 326.69491577]
[132.91786194 324.60012817]
[130.95536804 321.02749634]
[130.55014038 316.40264893]
[132.16976929 311.44039917]
[129.06565857 296.76510620]
[125.96155548 282.08981323]
[121.50191498 276.19628906]
[122.92218781 267.17297363]
[120.03691864 252.45306396]
[115.66551971 246.49382019]
[117.21997833 237.49263000]
[114.55418396 222.73141479]
[111.88838959 207.97019958]
[109.22259521 193.20898438]
[99.34657288 182.05938721]
[104.50814819 167.10382080]
[101.84234619 152.34260559]
[99.17655182 137.58139038]
[96.51075745 122.82016754]
[93.84496307 108.05895233]
[89.42723083 101.31683350]
[91.25107574 93.05822754]
[88.80535126 78.25895691]
[86.35961914 63.45969009]
[83.47434998 48.73979950]
[80.15209198 34.11233902]
[76.82983398 19.48487854]
[66.22817993 7.74113417]
[70.95442963 -6.38373137]
[58.13377762 -19.60161591]
[63.97431564 -36.15018082]
[60.43464661 -50.72655487]
[56.89497375 -65.30293274]
[53.35530090 -79.87931061]
[49.81562805 -94.45568085]
[46.27595520 -109.03205872]
[31.40578461 -112.29386139]
[19.47505379 -121.65039825]
[12.81710052 -135.20368958]
[12.70441532 -150.24191284]
[19.10578728 -163.78193665]
[30.70311737 -173.16102600]
[19.92779160 -184.74562073]
[24.44322014 -198.93928528]
[20.90354729 -213.51567078]
[17.36387444 -228.09204102]
[2.31392193 -227.65316772]
[-12.49832916 -230.35333252]
[-26.42535019 -236.07450867]
[-38.85831070 -244.56657410]
[-49.25369644 -255.45829773]
[-57.15706635 -268.27352905]
[-62.22291946 -282.45208740]
[-64.22979736 -297.37408447]
[-63.08996201 -312.38720703]
[-58.85325241 -326.83520508]
[-51.70487595 -340.08639526]
[-41.95732498 -351.56155396]
[-30.03672409 -360.75897217]
[-16.46418953 -367.27664185]
[-1.83305490 -370.82962036]
[13.21706963 -371.26257324]
[28.02825737 -368.55657959]
[41.95302582 -362.82992554]
[54.38264465 -354.33297729]
[64.77374268 -343.43716431]
[72.67207336 -330.61880493]
[77.73234558 -316.43829346]
[79.73335266 -301.51550293]
[78.58761597 -286.50280762]
[74.34522247 -272.05648804]
[67.19162750 -258.80810547]
[57.43956375 -247.33679199]
[45.51534653 -238.14404297]
[31.94025040 -231.63171387]
[35.47992325 -217.05534363]
[39.01959610 -202.47895813]
[49.54174042 -191.93696594]
[45.27949142 -176.70069885]
[59.88672256 -173.68501282]
[71.78498840 -164.58882141]
[78.58179474 -151.17373657]
[78.88126373 -136.07637024]
[72.57043457 -122.29013824]
[60.85232925 -112.57173157]
[64.39200592 -97.99535370]
[67.93167877 -83.41898346]
[71.47135162 -68.84260559]
[75.01101685 -54.26622772]
[78.55068970 -39.68985367]
[88.71452332 -33.13064957]
[91.78277588 -21.01580048]
[85.58188629 -9.70599079]
[95.94590759 0.99149871]
[91.45729065 16.16261864]
[94.77954865 30.79007912]
[98.10180664 45.41753769]
[100.39916992 47.02386093]
[102.19866943 49.63698196]
[103.11364746 53.07183838]
[102.83150482 57.00692749]
[101.15888977 61.01396179]
[103.60462189 75.81323242]
[106.05034637 90.61250305]
[108.60617828 105.39315796]
[111.27197266 120.15437317]
[113.93777466 134.91558838]
[116.60356903 149.67680359]
[119.26936340 164.43801880]
[129.33605957 176.64344788]
[123.98381042 190.54318237]
[126.64960480 205.30439758]
[129.31539917 220.06561279]
[131.98120117 234.82684326]
[134.75680542 249.56779480]
[137.64207458 264.28768921]
[140.63685608 278.98568726]
[143.74096680 293.66101074]
[146.84507751 308.33630371]
[150.27613831 322.93862915]
[154.03244019 337.46069336]
[157.78874207 351.98272705]
[172.54806519 349.27062988]
[187.46325684 347.61831665]
[202.45832825 347.03430176]
[217.45686340 347.52148438]
[232.38243103 349.07742310]
[247.15895081 351.69418335]
[261.71115112 355.35842896]
[275.96487427 360.05148315]
[289.84747314 365.74942017]
[303.28820801 372.42321777]
[316.21859741 380.03887939]
[328.57275391 388.55758667]
[340.28771973 397.93594360]
[351.30377197 408.12612915]
[361.56478882 419.07623291]
[371.01849365 430.73043823]
[379.61669922 443.02938843]
[387.31561279 455.91036987]
[394.07595825 469.30780029]
[399.86334229 483.15335083]
[404.64822388 497.37652588]
[408.40625000 511.90478516]
[411.11825562 526.66412354]
[412.77041626 541.57934570]
[413.35433960 556.57440186]
[412.86703491 571.57293701]
[411.31100464 586.49847412]
[408.69412231 601.27502441]
[405.02975464 615.82714844]
[400.33660889 630.08087158]
[394.63854980 643.96343994]
[387.96463013 657.40411377]
[380.34887695 670.33441162]
[371.83007812 682.68853760]
[362.45166016 694.40338135]
[352.26138306 705.41937256]
[341.31121826 715.68029785]
[329.65692139 725.13391113]
[317.35791016 733.73205566]
[304.47683716 741.43084717]
[291.07937622 748.19110107]
[277.23376465 753.97839355]
[263.01058960 758.76312256]
[248.48228455 762.52105713]
[233.72291565 765.23297119]
[218.80769348 766.88500977]
[203.81260681 767.46881104]
[188.81408691 766.98138428]
[173.88854980 765.42523193]
[159.11206055 762.80822754]
[144.55992126 759.14379883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 159]
[36 158]
[37 157]
[41 156]
[42 155]
[43 154]
[45 153]
[46 152]
[48 151]
[49 150]
[50 149]
[51 148]
[53 146]
[54 145]
[55 144]
[56 143]
[57 142]
[59 141]
[60 140]
[61 139]
[62 134]
[63 133]
[64 132]
[66 130]
[68 127]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[79 116]
[81 114]
[82 113]
[83 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
