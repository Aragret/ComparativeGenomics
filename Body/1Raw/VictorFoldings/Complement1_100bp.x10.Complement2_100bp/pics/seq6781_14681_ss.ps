%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUCAUCCUUAUCUGCAUCUGUGUGCUCGUAUAAAGUGGAGGCGAUGGUAUUAGUAGCGAUAGGGGUGGCCGCAGUUUCAUAAAUCGACUGAGCGGUGUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[205.63687134 690.03625488]
[199.35467529 676.40173340]
[194.43914795 662.21704102]
[190.93766785 647.61889648]
[188.88392639 632.74780273]
[188.29771423 617.74707031]
[189.18467712 602.76104736]
[191.53628540 587.93414307]
[195.32986450 573.40917969]
[200.52888489 559.32592773]
[207.08329773 545.82012939]
[214.92996216 533.02185059]
[223.99330139 521.05426025]
[234.18605042 510.03271484]
[245.41003418 500.06332397]
[257.55712891 491.24206543]
[270.51040649 483.65393066]
[264.23303223 470.03063965]
[257.95568848 456.40731812]
[251.67832947 442.78399658]
[244.69987488 429.50616455]
[237.03927612 416.60983276]
[229.37867737 403.71350098]
[223.26002502 399.56817627]
[221.70167542 390.56762695]
[214.23393250 377.55868530]
[206.76618958 364.54974365]
[199.29844666 351.54077148]
[184.43005371 352.72235107]
[170.46565247 347.30892944]
[160.19439697 336.32427979]
[155.69264221 321.91058350]
[157.90441895 306.91076660]
[166.44401550 294.30770874]
[158.97627258 281.29876709]
[151.50852966 268.28982544]
[144.04080200 255.28085327]
[136.57305908 242.27191162]
[129.10531616 229.26295471]
[128.65802002 244.25628662]
[122.22457886 257.80657959]
[110.88911438 267.63040161]
[96.56186676 272.07223511]
[81.65721893 270.38357544]
[68.68687439 262.84896851]
[59.83656311 250.73815918]
[56.59771347 236.09199524]
[59.51613235 221.37864685]
[68.10001373 209.07754517]
[80.90281677 201.26165771]
[95.76705933 199.24809265]
[110.18783569 203.37617493]
[121.73603821 212.95153809]
[116.91004181 198.74908447]
[112.08404541 184.54663086]
[107.25804901 170.34417725]
[102.43205261 156.14172363]
[98.79106140 170.69311523]
[89.26373291 182.27888489]
[75.68963623 188.66198730]
[60.68972778 188.60995483]
[47.16024780 182.13282776]
[37.71353149 170.48123169]
[34.17358398 155.90492249]
[37.22392273 141.21835327]
[46.27556992 129.25726318]
[59.58079529 122.33115387]
[74.57057190 121.77735138]
[88.35060120 127.70278168]
[98.26078796 138.96446228]
[96.03567505 124.13041687]
[93.81055450 109.29637146]
[91.47506714 94.47930908]
[89.02934265 79.68003845]
[86.58361816 64.88076782]
[76.69976044 52.52682114]
[82.25835419 38.70830917]
[69.69435120 29.50050926]
[67.42485809 14.45710278]
[76.28051758 2.53599215]
[73.83479309 -12.26327896]
[71.38906097 -27.06254959]
[62.72529221 -14.81758690]
[48.25001526 -10.88486385]
[34.58113098 -17.06236839]
[27.96786690 -30.52582932]
[31.43372345 -45.11993408]
[43.39415359 -54.17245102]
[58.38101196 -53.54469681]
[69.54338837 -43.52203369]
[60.99840546 -56.83720779]
[67.96444702 -70.00244904]
[64.32979584 -78.38261414]
[67.17149353 -85.20511627]
[66.50170898 -100.19015503]
[65.83191681 -115.17519379]
[51.43903732 -119.99279785]
[39.76088715 -129.68739319]
[32.37685013 -142.94789124]
[30.28555489 -157.98088074]
[33.76982880 -172.75329590]
[42.35845566 -185.26728821]
[54.88989258 -193.83042908]
[69.66936493 -197.28463745]
[84.69807434 -195.16276550]
[97.94351196 -187.75177002]
[107.61433411 -176.05390930]
[112.40264130 -161.65126038]
[111.66086578 -146.49163818]
[105.48931122 -132.62525940]
[94.72264099 -121.92744446]
[80.81695557 -115.84497833]
[81.48674774 -100.85993958]
[82.15653229 -85.87490082]
[82.93785095 -70.89526367]
[91.41897583 -58.65108871]
[84.51679230 -44.41485214]
[86.18833160 -29.50827789]
[88.63406372 -14.70900631]
[91.07978821 0.09026464]
[103.30001068 8.52837563]
[105.99114990 23.50209999]
[97.05762482 36.26258087]
[106.76654816 47.55798340]
[101.38288879 62.43503952]
[103.82861328 77.23430634]
[106.27433777 92.03357697]
[110.59120178 98.84072876]
[108.64459991 107.07125854]
[110.86972046 121.90530396]
[113.09483337 136.73934937]
[116.63450623 151.31571960]
[121.46050262 165.51817322]
[126.28649902 179.72062683]
[131.11250305 193.92308044]
[135.93849182 208.12554932]
[142.11427307 221.79521179]
[149.58200073 234.80416870]
[157.04974365 247.81312561]
[164.51748657 260.82208252]
[171.98522949 273.83102417]
[179.45297241 286.83996582]
[194.64256287 285.82135010]
[208.71080017 291.47570801]
[218.88729858 302.63183594]
[223.19319153 317.04086304]
[220.82574463 331.82952881]
[212.30740356 344.07302856]
[219.77514648 357.08200073]
[227.24288940 370.09094238]
[234.71063232 383.09991455]
[242.27500916 396.05288696]
[249.93560791 408.94921875]
[257.59619141 421.84555054]
[261.21328735 407.28820801]
[273.26699829 398.36026001]
[288.24655151 399.14349365]
[299.30346680 409.27978516]
[301.38269043 424.13497925]
[293.53363037 436.91748047]
[279.34475708 441.78329468]
[265.30163574 436.50662231]
[271.57901001 450.12994385]
[277.85635376 463.75326538]
[284.13372803 477.37658691]
[298.31808472 472.46020508]
[312.91604614 468.95785522]
[327.78698730 466.90322876]
[342.78771973 466.31610107]
[357.77377319 467.20217896]
[372.60083008 469.55288696]
[387.12603760 473.34558105]
[401.20956421 478.54376221]
[414.71575928 485.09738159]
[427.51452637 492.94326782]
[439.48263550 502.00588989]
[450.50482178 512.19799805]
[460.47488403 523.42138672]
[469.29687500 535.56793213]
[476.88577271 548.52075195]
[483.16851807 562.15502930]
[488.08459473 576.33953857]
[491.58666992 590.93756104]
[493.64102173 605.80853271]
[494.22781372 620.80926514]
[493.34146118 635.79528809]
[490.99044800 650.62231445]
[487.19744873 665.14746094]
[481.99899292 679.23083496]
[475.44512939 692.73693848]
[467.59896851 705.53552246]
[458.53610229 717.50347900]
[448.34378052 728.52545166]
[437.12020874 738.49530029]
[424.97344971 747.31701660]
[412.02047729 754.90570068]
[398.38607788 761.18817139]
[384.20150757 766.10394287]
[369.60342407 769.60571289]
[354.73239136 771.65979004]
[339.73162842 772.24627686]
[324.74560547 771.35961914]
[309.91867065 769.00830078]
[295.39358521 765.21502686]
[281.31027222 760.01629639]
[267.80435181 753.46215820]
[255.00588989 745.61572266]
[243.03814697 736.55261230]
[232.01638794 726.36010742]
[222.04675293 715.13629150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 165]
[18 164]
[19 163]
[20 162]
[21 154]
[22 153]
[23 152]
[25 151]
[26 150]
[27 149]
[28 148]
[34 142]
[35 141]
[36 140]
[37 139]
[38 138]
[39 137]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[70 131]
[71 130]
[72 129]
[73 127]
[74 126]
[75 125]
[77 123]
[80 120]
[81 119]
[82 118]
[90 117]
[92 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
