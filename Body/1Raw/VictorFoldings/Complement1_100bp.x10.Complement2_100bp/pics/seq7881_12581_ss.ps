%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[201.21650696 353.17785645]
[209.19490051 340.45458984]
[218.62216187 328.76428223]
[229.36592102 318.27105713]
[220.22712708 306.37643433]
[211.08831787 294.48178101]
[201.86122131 282.65551758]
[192.54634094 270.89828491]
[183.23146057 259.14102173]
[173.91658020 247.38377380]
[169.62274170 261.75607300]
[155.76664734 267.50137329]
[142.56248474 260.38446045]
[139.74388123 245.65167236]
[149.38861084 234.16343689]
[164.38543701 234.38775635]
[155.97082520 221.97026062]
[147.55619812 209.55276489]
[145.71520996 224.43936157]
[135.56027222 235.47915649]
[120.87892914 238.55459595]
[107.14696503 232.51860046]
[99.48606110 219.62245178]
[100.75354004 204.67610168]
[110.47666931 193.25416565]
[125.02896118 189.61672974]
[138.98367310 195.12123108]
[132.10426331 181.79179382]
[125.22484589 168.46237183]
[118.34542847 155.13293457]
[114.14880371 152.85317993]
[111.33975220 147.91290283]
[111.46632385 141.30264282]
[104.98682404 127.77430725]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[81.48483276 78.70519257]
[74.95546722 72.31729126]
[75.01125336 64.92684937]
[68.73389435 51.30353546]
[62.45653152 37.68021774]
[56.17917252 24.05690193]
[43.09060287 20.87823486]
[34.35011673 10.88752079]
[32.98001099 -2.12035799]
[39.25767136 -13.37293530]
[33.18383789 -27.08820152]
[27.11000443 -40.80346680]
[21.03616905 -54.51873398]
[8.37356377 -64.00393677]
[10.29461670 -78.77413177]
[4.22078323 -92.48940277]
[-1.85305083 -106.20466614]
[-14.51565742 -115.68986511]
[-12.59460354 -130.46006775]
[-18.66843796 -144.17533875]
[-32.88246536 -139.35166931]
[-47.47166443 -135.82157898]
[-62.31856918 -133.61347961]
[-77.30363464 -132.74516296]
[-92.30621338 -133.22358704]
[-107.20550537 -135.04492188]
[-121.88155365 -138.19450378]
[-136.21618652 -142.64695740]
[-150.09399414 -148.36647034]
[-163.40324402 -155.30694580]
[-176.03675842 -163.41253662]
[-187.89283752 -172.61795044]
[-198.87599182 -182.84909058]
[-208.89782715 -194.02359009]
[-217.87762451 -206.05145264]
[-225.74308777 -218.83584595]
[-232.43090820 -232.27381897]
[-237.88720703 -246.25720215]
[-242.06806946 -260.67340088]
[-244.93981934 -275.40634155]
[-246.47937012 -290.33737183]
[-246.67428589 -305.34631348]
[-245.52301025 -320.31231689]
[-243.03482056 -335.11483765]
[-239.22975159 -349.63473511]
[-234.13842773 -363.75512695]
[-227.80184937 -377.36224365]
[-220.27102661 -390.34658813]
[-211.60661316 -402.60357666]
[-201.87835693 -414.03457642]
[-191.16459656 -424.54748535]
[-179.55158997 -434.05770874]
[-167.13282776 -442.48864746]
[-154.00830078 -449.77239990]
[-140.28370667 -455.85037231]
[-126.06953430 -460.67358398]
[-111.48023224 -464.20324707]
[-96.63325500 -466.41088867]
[-81.64816284 -467.27874756]
[-66.64559937 -466.79986572]
[-51.74636078 -464.97808838]
[-37.07041168 -461.82806396]
[-22.73591042 -457.37515259]
[-8.85827541 -451.65521240]
[4.45075607 -444.71432495]
[17.08402443 -436.60836792]
[28.93981552 -427.40258789]
[39.92266846 -417.17111206]
[49.94415665 -405.99630737]
[58.92358780 -393.96817017]
[66.78866577 -381.18353271]
[73.47606659 -367.74536133]
[78.93193817 -353.76181030]
[83.11235809 -339.34548950]
[85.98367310 -324.61245728]
[87.52275085 -309.68136597]
[87.71721649 -294.67242432]
[86.56548309 -279.70648193]
[84.07684326 -264.90402222]
[80.27132416 -250.38421631]
[75.17957306 -236.26400757]
[68.84258270 -222.65707397]
[61.31136703 -209.67295837]
[52.64657974 -197.41622925]
[42.91797638 -185.98554993]
[32.20388794 -175.47294617]
[20.59058380 -165.96308899]
[8.17156696 -157.53253174]
[-4.95317078 -150.24916077]
[1.12066305 -136.53390503]
[13.34882832 -128.02970886]
[11.86221600 -112.27850342]
[17.93605042 -98.56323242]
[24.00988388 -84.84796906]
[36.23804855 -76.34378052]
[34.75143814 -60.59256744]
[40.82527161 -46.87730408]
[46.89910507 -33.16203690]
[52.97293854 -19.44676971]
[68.90625000 -14.06454086]
[76.15981293 1.48218596]
[69.80249023 17.77954102]
[76.07984924 31.40285683]
[82.35720825 45.02617264]
[88.63456726 58.64949036]
[95.01317596 72.22569275]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[118.51516724 121.29480743]
[124.99466705 134.82315063]
[131.67486572 148.25352478]
[138.55427551 161.58296204]
[145.43368530 174.91238403]
[152.31309509 188.24182129]
[159.97369385 201.13813782]
[168.38832092 213.55563354]
[176.80293274 225.97312927]
[185.67382812 238.06889343]
[194.98870850 249.82614136]
[204.30358887 261.58340454]
[213.61846924 273.34063721]
[221.40049744 278.12374878]
[222.98295593 285.34298706]
[232.12176514 297.23760986]
[241.26055908 309.13226318]
[254.16741943 301.45440674]
[267.89178467 295.35702515]
[282.24099731 290.92568970]
[297.01358032 288.22262573]
[312.00219727 287.28576660]
[326.99642944 288.12829590]
[341.78573608 290.73834229]
[356.16253662 295.07928467]
[369.92501831 301.09020996]
[382.87991333 308.68670654]
[394.84539795 317.76211548]
[405.65353394 328.18905640]
[415.15249634 339.82116699]
[423.20901489 352.49511719]
[429.70996094 366.03298950]
[434.56408691 380.24475098]
[437.70321655 394.93087769]
[439.08328247 409.88519287]
[438.68493652 424.89776611]
[436.51376343 439.75787354]
[432.60025024 454.25686646]
[426.99932861 468.19119263]
[419.78961182 481.36526489]
[411.07232666 493.59414673]
[400.96984863 504.70614624]
[389.62402344 514.54528809]
[377.19409180 522.97338867]
[363.85455322 529.87219238]
[349.79272461 535.14483643]
[335.20593262 538.71728516]
[320.29901123 540.53936768]
[305.28121948 540.58557129]
[290.36337280 538.85516357]
[275.75491333 535.37249756]
[261.66088867 530.18646240]
[248.27917480 523.36987305]
[235.79763794 515.01837158]
[224.39149475 505.24923706]
[214.22085571 494.19958496]
[205.42852783 482.02456665]
[198.13790894 468.89508057]
[192.45138550 454.99545288]
[188.44876099 440.52078247]
[186.18621826 425.67434692]
[185.69554138 410.66448975]
[186.98361206 395.70196533]
[190.03234863 380.99679565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 163]
[5 162]
[6 161]
[7 159]
[8 158]
[9 157]
[10 156]
[16 155]
[17 154]
[18 153]
[27 152]
[28 151]
[29 150]
[30 149]
[33 148]
[34 147]
[35 146]
[37 144]
[38 143]
[40 142]
[41 141]
[42 140]
[43 139]
[47 136]
[48 135]
[49 134]
[50 133]
[52 131]
[53 130]
[54 129]
[56 127]
[57 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
