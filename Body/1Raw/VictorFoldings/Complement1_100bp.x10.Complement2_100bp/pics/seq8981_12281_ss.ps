%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[87.28927612 785.94366455]
[72.28113556 786.06713867]
[57.31405258 784.95086670]
[42.49028015 782.60241699]
[27.91107368 779.03784180]
[13.67602634 774.28143311]
[-0.11761948 768.36578369]
[-13.37563896 761.33129883]
[-26.00746536 753.22595215]
[-37.92680740 744.10516357]
[-49.05224228 734.03125000]
[-59.30777359 723.07293701]
[-68.62334442 711.30523682]
[-76.93531799 698.80841064]
[-84.18691254 685.66784668]
[-90.32859039 671.97332764]
[-95.31840515 657.81842041]
[-99.12226105 643.29980469]
[-101.71417999 628.51666260]
[-103.07645416 613.57000732]
[-103.19977570 598.56182861]
[-102.08330536 583.59478760]
[-99.73467255 568.77105713]
[-96.16990662 554.19189453]
[-91.41337585 539.95690918]
[-85.49757385 526.16333008]
[-78.46289062 512.90539551]
[-70.35740662 500.27365112]
[-61.23647308 488.35440063]
[-51.16240311 477.22909546]
[-40.20401382 466.97369385]
[-28.43616295 457.65826416]
[-15.93923759 449.34643555]
[-2.79860711 442.09500122]
[10.89596462 435.95349121]
[25.05092812 430.96383667]
[39.56958771 427.16015625]
[54.35276794 424.56842041]
[69.29948425 423.20632935]
[84.30762482 423.08316040]
[85.42327118 408.12472534]
[86.53892517 393.16625977]
[87.65457153 378.20782471]
[88.65882874 363.24145508]
[89.55165100 348.26806641]
[90.44446564 333.29464722]
[80.62741852 324.94869995]
[77.36106110 312.28326416]
[82.05485535 299.86639404]
[93.20480347 292.31039429]
[94.32044983 277.35192871]
[95.43610382 262.39349365]
[96.55175018 247.43502808]
[97.66739655 232.47657776]
[98.56021118 217.50315857]
[99.22999573 202.51812744]
[99.00666809 187.51979065]
[97.89102173 172.56134033]
[96.77537537 157.60289001]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[88.93695068 58.51106644]
[86.93292999 43.64553833]
[84.92891693 28.78001213]
[82.92490387 13.91448307]
[80.92089081 -0.95104516]
[77.72901154 -5.08129501]
[76.55771637 -9.57366276]
[77.20658875 -13.59784222]
[79.17469788 -16.52339935]
[77.83646393 -31.46358299]
[76.49822998 -46.40377045]
[74.71575928 -61.29748535]
[72.49064636 -76.13153076]
[70.26552582 -90.96557617]
[67.81980133 -105.76484680]
[64.82502747 -120.46284485]
[61.50276566 -135.09030151]
[58.18050385 -149.71777344]
[54.85824585 -164.34523010]
[39.79827499 -164.23860168]
[25.06757164 -167.37236023]
[11.35511494 -173.59992981]
[-0.69773829 -182.63003540]
[-10.52725315 -194.04031372]
[-17.67368698 -207.29710388]
[-21.80278587 -221.78036499]
[-22.72142601 -236.81266785]
[-20.38664055 -251.69093323]
[-14.90763283 -265.71926880]
[-6.54066372 -278.24157715]
[4.32292747 -288.67211914]
[17.17502975 -296.52310181]
[31.41452980 -301.42724609]
[46.37541580 -303.15521240]
[61.35794449 -301.62619019]
[75.66135406 -296.91171265]
[88.61665344 -289.23220825]
[99.61788940 -278.94692993]
[108.15051270 -266.53692627]
[113.81545258 -252.58262634]
[116.34774017 -237.73670959]
[115.62893677 -222.69352722]
[111.69265747 -208.15667725]
[104.72301483 -194.80609131]
[95.04598999 -183.26618958]
[83.11419678 -174.07672119]
[69.48570251 -167.66749573]
[72.80796814 -153.04002380]
[76.13022614 -138.41256714]
[79.45248413 -123.78511047]
[82.22507477 -121.60678864]
[84.08032227 -117.97731018]
[84.34767914 -113.34246063]
[82.58101654 -108.43064117]
[85.92407227 -105.01991272]
[87.16001892 -99.47289276]
[85.09957123 -93.19068909]
[87.32468414 -78.35664368]
[89.54980469 -63.52260208]
[91.72132874 -61.74985886]
[93.32148743 -59.01013565]
[93.97845459 -55.51674271]
[93.40441895 -51.61353683]
[91.43840790 -47.74200439]
[92.77664948 -32.80181885]
[94.11488342 -17.86163330]
[95.78642273 -2.95505881]
[97.79043579 11.91046906]
[99.79444885 26.77599716]
[101.79846191 41.64152527]
[103.80247498 56.50705338]
[105.94736481 58.31193161]
[107.50656128 61.07517624]
[108.11144257 64.57796478]
[107.47935486 68.47219086]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[111.73382568 156.48722839]
[112.84947968 171.44569397]
[113.96512604 186.40414429]
[122.97303772 174.41007996]
[137.27619934 169.89129639]
[151.53990173 174.53317261]
[160.44410706 186.60441589]
[160.66780090 201.60275269]
[152.12751770 213.93415833]
[138.00860596 218.99934387]
[123.57703400 214.90910339]
[114.21503448 203.18791199]
[113.54524994 218.17295837]
[116.24809265 224.20671082]
[115.59593201 229.85220337]
[112.62585449 233.59222412]
[111.51020050 248.55067444]
[110.39455414 263.50912476]
[109.27890778 278.46759033]
[108.16325378 293.42602539]
[119.81950378 306.47024536]
[118.46208954 323.57205200]
[105.41786957 334.18746948]
[104.52505493 349.16088867]
[103.63224030 364.13427734]
[106.24530792 372.88696289]
[102.61302185 379.32345581]
[101.49737549 394.28192139]
[100.38172913 409.24035645]
[99.26608276 424.19882202]
[114.08991241 426.54693604]
[128.66920471 430.11117554]
[142.90435791 434.86718750]
[156.69815063 440.78250122]
[169.95632935 447.81671143]
[182.58834839 455.92175293]
[194.50791931 465.04223633]
[205.63359070 475.11590576]
[215.88938904 486.07394409]
[225.20523071 497.84146118]
[233.51750183 510.33807373]
[240.76940918 523.47845459]
[246.91142273 537.17279053]
[251.90156555 551.32757568]
[255.70576477 565.84613037]
[258.29803467 580.62921143]
[259.66067505 595.57586670]
[259.78436279 610.58398438]
[258.66824341 625.55108643]
[256.31994629 640.37487793]
[252.75553894 654.95416260]
[247.99935913 669.18927002]
[242.08387756 682.98297119]
[235.04951477 696.24108887]
[226.94432068 708.87298584]
[217.82366943 720.79248047]
[207.74986267 731.91802979]
[196.79173279 742.17364502]
[185.02409363 751.48937988]
[172.52737427 759.80151367]
[159.38691711 767.05322266]
[145.69248962 773.19506836]
[131.53764343 778.18505859]
[117.01907349 781.98913574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 176]
[41 175]
[42 174]
[43 173]
[44 171]
[45 170]
[46 169]
[50 166]
[51 165]
[52 164]
[53 163]
[54 162]
[55 159]
[56 158]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[62 144]
[64 142]
[65 141]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[74 131]
[75 130]
[76 129]
[77 124]
[78 123]
[79 122]
[80 119]
[81 115]
[82 114]
[83 113]
[84 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
