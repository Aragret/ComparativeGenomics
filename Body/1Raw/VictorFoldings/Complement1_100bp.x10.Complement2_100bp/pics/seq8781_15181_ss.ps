%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[206.69485474 443.23355103]
[202.93855286 428.71148682]
[199.18225098 414.18945312]
[195.42594910 399.66738892]
[191.66964722 385.14532471]
[178.71231079 373.31002808]
[183.77999878 355.60693359]
[179.80790710 341.14239502]
[174.98190308 326.93994141]
[169.31912231 313.04992676]
[163.65634155 299.15988159]
[157.99354553 285.26986694]
[152.33076477 271.37985229]
[146.89471436 266.37271118]
[146.68876648 257.24060059]
[141.23341370 243.26780701]
[135.77804565 229.29501343]
[130.32269287 215.32221985]
[116.05075836 205.11051941]
[118.97887421 186.93064880]
[113.31608582 173.04061890]
[108.43429565 187.22399902]
[96.21459198 195.92335510]
[81.21462250 195.89405823]
[69.02899933 187.14701843]
[64.20266724 172.94467163]
[68.53572083 158.58415222]
[80.41204071 149.42156982]
[95.40205383 148.87432861]
[107.91558838 157.14747620]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[77.61988068 46.82462311]
[73.64778900 32.36009979]
[70.27827454 46.97674561]
[62.40129089 59.74205399]
[50.84810638 69.30886841]
[36.83796310 74.66757965]
[21.84937668 75.25267792]
[7.46413517 71.00240326]
[-4.79965544 62.36530685]
[-13.64776707 50.25288010]
[-18.14643860 35.94337463]
[-17.82091331 20.94690514]
[-12.70554447 6.84608984]
[-3.34017062 -4.87098217]
[9.28685951 -12.96777916]
[23.84298325 -16.58982658]
[38.79206085 -15.35488224]
[52.55648041 -9.39327240]
[63.68364716 0.66586065]
[70.99935150 13.76113224]
[70.77602386 -1.23720479]
[70.55269623 -16.23554230]
[70.32936859 -31.23387909]
[60.52155685 -46.81875610]
[69.66024017 -61.80045700]
[69.21363831 -76.79380798]
[68.76702881 -91.78715515]
[68.32042694 -106.78050995]
[54.04573441 -119.23632812]
[53.41928864 -137.85139465]
[66.37239838 -150.78710938]
[65.47958374 -165.76051331]
[64.58676910 -180.73391724]
[63.69395065 -195.70732117]
[62.80113602 -210.68072510]
[61.46289825 -225.62091064]
[59.68043518 -240.51463318]
[57.89796829 -255.40834045]
[56.11550140 -270.30206299]
[52.46503830 -275.81439209]
[52.18798065 -281.49066162]
[54.50851059 -285.66488647]
[53.17027664 -300.60507202]
[51.83204269 -315.54525757]
[50.49380875 -330.48544312]
[49.15557480 -345.42562866]
[34.15837860 -346.44082642]
[19.50465965 -349.78970337]
[5.55528069 -355.38983154]
[-7.34624386 -363.10327148]
[-18.88220215 -372.74008179]
[-28.76851082 -384.06295776]
[-36.76171112 -396.79302979]
[-42.66496277 -410.61685181]
[-46.33288956 -425.19400024]
[-47.67517090 -440.16546631]
[-46.65874863 -455.16256714]
[-43.30865479 -469.81600952]
[-37.70738983 -483.76492310]
[-29.99288559 -496.66583252]
[-20.35512161 -508.20098877]
[-9.03143501 -518.08636475]
[3.69931698 -526.07849121]
[17.52362823 -531.98059082]
[32.10106277 -535.64733887]
[47.07263947 -536.98840332]
[62.06966782 -535.97070312]
[76.72283173 -532.61944580]
[90.67128754 -527.01702881]
[103.57154083 -519.30145264]
[115.10591125 -509.66271973]
[124.99034882 -498.33822632]
[132.98144531 -485.60681152]
[138.88241577 -471.78201294]
[142.54794312 -457.20428467]
[143.88775635 -442.23260498]
[142.86885071 -427.23565674]
[139.51634216 -412.58276367]
[133.91278076 -398.63476562]
[126.19614410 -385.73513794]
[116.55647278 -374.20156860]
[105.23115540 -364.31808472]
[92.49908447 -356.32803345]
[78.67379761 -350.42819214]
[64.09575653 -346.76388550]
[65.43399048 -331.82369995]
[66.77223206 -316.88351440]
[68.11046600 -301.94332886]
[69.44869995 -287.00314331]
[71.00921631 -272.08453369]
[72.79168701 -257.19082642]
[74.57415009 -242.29708862]
[76.35662079 -227.40338135]
[78.47439575 -225.56677246]
[79.99227905 -222.78060913]
[80.54494476 -219.26921082]
[79.85494995 -215.38482666]
[77.77454376 -211.57354736]
[78.66735840 -196.60014343]
[79.56017303 -181.62672424]
[80.45298767 -166.65332031]
[81.34580231 -151.67991638]
[91.31762695 -146.13653564]
[97.43857574 -136.36671448]
[98.08998871 -124.73616028]
[92.99452972 -114.12780762]
[83.31377411 -107.22711182]
[83.76038361 -92.23376465]
[84.20698547 -77.24041748]
[84.65359497 -62.24706268]
[93.24004364 -53.72653580]
[93.73482513 -41.23898315]
[85.32770538 -31.45720673]
[85.55103302 -16.45886993]
[85.77436066 -1.46053243]
[85.99768829 13.53780460]
[88.11231232 28.38800240]
[92.08441162 42.85252762]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[122.38011932 153.17538452]
[127.20611572 167.37783813]
[132.86889648 181.26785278]
[144.43304443 186.98040771]
[148.86364746 198.66603088]
[144.29548645 209.86685181]
[149.75085449 223.83966064]
[155.20620728 237.81245422]
[160.66156006 251.78524780]
[166.22079468 265.71704102]
[171.88357544 279.60708618]
[177.54635620 293.49710083]
[183.20915222 307.38714600]
[188.87193298 321.27716064]
[193.75372314 307.09378052]
[205.97341919 298.39440918]
[220.97340393 298.42373657]
[233.15901184 307.17077637]
[237.98535156 321.37310791]
[233.65229797 335.73361206]
[221.77598572 344.89620972]
[206.78596497 345.44345093]
[194.27243042 337.17031860]
[198.24452209 351.63482666]
[209.04791260 358.68109131]
[212.05850220 370.81039429]
[206.19171143 381.38900757]
[209.94801331 395.91107178]
[213.70431519 410.43313599]
[217.46060181 424.95520020]
[221.21690369 439.47726440]
[236.31779480 440.38195801]
[250.39927673 445.91070557]
[262.08181763 455.52182007]
[270.22082520 468.27374268]
[274.01898193 482.91714478]
[273.10415649 498.01742554]
[267.56600952 512.09521484]
[257.94705200 523.77130127]
[245.18968201 531.90179443]
[230.54373169 535.69012451]
[215.44407654 534.76519775]
[201.37001038 529.21759033]
[189.70037842 519.59075928]
[181.57844543 506.82797241]
[177.79991150 492.17950439]
[178.73497009 477.08047485]
[184.29200745 463.01013184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[3 191]
[4 190]
[5 189]
[7 186]
[8 185]
[9 176]
[10 175]
[11 174]
[12 173]
[13 172]
[15 171]
[16 170]
[17 169]
[18 168]
[20 165]
[21 164]
[30 163]
[31 162]
[32 161]
[33 160]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[57 153]
[58 152]
[59 151]
[60 150]
[62 147]
[63 146]
[64 145]
[65 144]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[73 130]
[74 129]
[75 128]
[76 127]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
