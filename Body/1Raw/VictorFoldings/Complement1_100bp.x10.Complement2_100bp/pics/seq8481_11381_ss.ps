%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[36.67233658 778.98535156]
[22.91036987 772.99450684]
[9.71435165 765.84283447]
[-2.81801772 757.58325195]
[-14.59395218 748.27685547]
[-25.52626610 737.99261475]
[-35.53401566 726.80657959]
[-44.54310989 714.80169678]
[-52.48684692 702.06677246]
[-59.30640793 688.69610596]
[-64.95130920 674.78863525]
[-69.37975311 660.44744873]
[-72.55895233 645.77862549]
[-74.46537781 630.89080811]
[-75.08489990 615.89422607]
[-74.41294098 600.89990234]
[-72.45446777 586.01885986]
[-69.22399902 571.36126709]
[-64.74542999 557.03558350]
[-59.05193329 543.14801025]
[-52.18565750 529.80126953]
[-44.19743729 517.09417725]
[-35.14641953 505.12084961]
[-25.09961510 493.96990967]
[-14.13140678 483.72393799]
[-2.32300186 474.45880127]
[10.23817348 466.24307251]
[23.45911980 459.13757324]
[37.24195099 453.19491577]
[51.48461914 448.45913696]
[66.08168030 444.96524048]
[63.85656357 430.13119507]
[61.63144684 415.29714966]
[59.40633011 400.46310425]
[53.78797531 414.37115479]
[43.32986069 425.12420654]
[29.58338547 431.12707520]
[14.58775902 431.48928833]
[0.56749278 426.15710449]
[-10.39758968 415.92153931]
[-16.68088531 402.30096436]
[-17.35030174 387.31588745]
[-12.30653858 373.18930054]
[-2.29780507 362.01678467]
[11.19116116 355.45571899]
[26.15935326 354.47937012]
[40.38632584 359.23260498]
[51.76159668 369.01028442]
[58.59718323 382.36013794]
[59.48999786 367.38671875]
[60.38281250 352.41333008]
[61.27563095 337.43991089]
[62.16844559 322.46652222]
[49.38776016 330.31851196]
[35.22901535 325.36575317]
[30.12951851 311.25918579]
[37.84842300 298.39767456]
[52.69564438 296.26223755]
[63.72574234 306.42550659]
[65.72975922 291.55996704]
[54.84785461 281.42477417]
[51.98674774 266.65054321]
[58.44942093 252.86332703]
[71.94725037 245.43939209]
[73.95126343 230.57386780]
[75.95527649 215.70834351]
[77.95928955 200.84280396]
[79.96330261 185.97727966]
[81.96731567 171.11175537]
[74.88502502 161.30523682]
[76.43294525 148.90411377]
[86.32246399 140.62400818]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[88.78869629 72.02370453]
[98.32836914 60.58500671]
[100.55348969 45.75096512]
[89.11280060 55.45203400]
[74.16403198 56.69067001]
[61.28269577 49.00489426]
[55.27321243 35.26131058]
[58.37697220 20.58593178]
[69.43634796 10.45231724]
[84.32646942 8.64005184]
[97.49369049 15.82506466]
[104.02711487 29.32868195]
[107.99921417 14.86415863]
[111.97131348 0.39963433]
[115.94340515 -14.06488991]
[119.91550446 -28.52941322]
[123.45517731 -43.10578918]
[118.74118042 -58.20839691]
[128.94477844 -69.05900574]
[132.04888916 -83.73430634]
[134.38438416 -98.55137634]
[135.94490051 -113.46997833]
[137.50543213 -128.38858032]
[139.06594849 -143.30718994]
[125.32472229 -149.66780090]
[114.39504242 -160.14733887]
[107.46247864 -173.60906982]
[105.27902985 -188.59277344]
[108.08153534 -203.47312927]
[115.56600952 -216.63600159]
[126.92057800 -226.65361023]
[140.91358948 -232.43930054]
[156.02719116 -233.36550903]
[170.62196350 -229.33174133]
[183.11477661 -220.77555847]
[192.15051270 -208.62507629]
[196.74903870 -194.19828796]
[196.41152954 -179.06008911]
[191.17460632 -164.85258484]
[181.60633850 -153.11686707]
[168.74459839 -145.12597656]
[153.98455811 -141.74667358]
[152.42402649 -126.82806396]
[150.86351013 -111.90946198]
[149.30297852 -96.99085236]
[160.90000916 -106.50447083]
[175.89996338 -106.46365356]
[187.44503784 -96.88706970]
[190.25701904 -82.15299988]
[183.05027771 -68.99765778]
[169.11964417 -63.43550110]
[154.83403015 -68.00946045]
[146.72419739 -80.63019562]
[143.62008667 -65.95489502]
[148.55610657 -51.90196228]
[138.13047791 -40.00167847]
[139.54475403 -37.58135986]
[140.08554077 -34.45499039]
[139.47908020 -30.95247650]
[137.57603455 -27.49661827]
[134.38002014 -24.55731773]
[130.40792847 -10.09279346]
[126.43583679 4.37173033]
[122.46373749 18.83625412]
[118.49163818 33.30077744]
[115.38753510 47.97608185]
[113.16241455 62.81012344]
[118.92613220 76.54434204]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[101.15650940 142.84913635]
[108.29197693 159.82460022]
[96.83283997 173.11576843]
[94.82882690 187.98129272]
[92.82481384 202.84681702]
[90.82080078 217.71235657]
[88.81678772 232.57788086]
[86.81277466 247.44340515]
[97.86284637 258.17663574]
[100.44386292 273.18301392]
[93.77258301 286.67221069]
[80.59528351 293.56399536]
[78.59127045 308.42953491]
[77.14185333 323.35934448]
[76.24903870 338.33273315]
[75.35621643 353.30615234]
[74.46340179 368.27954102]
[73.57058716 383.25296021]
[74.24037170 398.23800659]
[76.46549225 413.07205200]
[78.69060516 427.90606689]
[80.91572571 442.74011230]
[95.89546967 441.79745483]
[110.90080261 442.14605713]
[125.82061768 443.78326416]
[140.54446411 446.69702148]
[154.96331787 450.86575317]
[168.97041321 456.25854492]
[182.46208191 462.83551025]
[195.33840942 470.54794312]
[207.50405884 479.33877563]
[218.86897278 489.14285278]
[229.34899902 499.88766479]
[238.86653137 511.49359131]
[247.35113525 523.87475586]
[254.73999023 536.93945312]
[260.97836304 550.59094238]
[266.02008057 564.72821045]
[269.82781982 579.24658203]
[272.37338257 594.03851318]
[273.63793945 608.99456787]
[273.61209106 624.00390625]
[272.29605103 638.95550537]
[269.69958496 653.73858643]
[265.84188843 668.24371338]
[260.75152588 682.36352539]
[254.46617126 695.99353027]
[247.03239441 709.03271484]
[238.50521851 721.38458252]
[228.94776917 732.95764160]
[218.43080139 743.66632080]
[207.03221130 753.43121338]
[194.83636475 762.18011475]
[181.93356323 769.84814453]
[168.41932678 776.37866211]
[154.39373779 781.72320557]
[139.96061707 785.84222412]
[125.22683716 788.70526123]
[110.30147552 790.29113770]
[95.29502869 790.58801270]
[80.31861877 789.59381104]
[65.48311615 787.31579590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 170]
[32 169]
[33 168]
[34 167]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[59 161]
[60 160]
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
[72 149]
[73 148]
[74 147]
[76 145]
[78 143]
[79 142]
[88 141]
[89 140]
[90 139]
[91 138]
[92 137]
[93 132]
[95 130]
[96 129]
[97 121]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
