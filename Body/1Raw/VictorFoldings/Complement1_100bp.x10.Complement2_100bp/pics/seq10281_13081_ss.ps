%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[202.09678650 255.76301575]
[207.00798035 241.57899475]
[213.17086792 227.89231873]
[220.53582764 214.81318665]
[229.04354858 202.44691467]
[217.49725342 192.87179565]
[205.95094299 183.29667664]
[194.40464783 173.72154236]
[182.85833740 164.14642334]
[171.31204224 154.57130432]
[159.15058899 145.79071045]
[146.42854309 137.84402466]
[133.70651245 129.89733887]
[120.98447418 121.95065308]
[108.26244354 114.00396729]
[96.77749634 115.93721008]
[86.94588470 109.69376373]
[83.81175995 98.47688293]
[71.20944977 90.34166718]
[58.60713577 82.20645142]
[46.00482178 74.07123566]
[33.40251160 65.93601990]
[20.80019951 57.80080032]
[8.19788742 49.66558456]
[-6.21548128 55.10258484]
[-20.89502525 51.05729675]
[-30.26692009 39.28310394]
[-30.90102577 24.42592239]
[-43.50333786 16.29070473]
[-56.10565186 8.15548992]
[-65.15332794 20.12824059]
[-75.06051636 31.40009880]
[-85.77311707 41.90950012]
[-97.23260498 51.59904099]
[-109.37640381 60.41580963]
[-122.13818359 68.31164551]
[-135.44824219 75.24342346]
[-149.23388672 81.17327881]
[-163.41983032 86.06884003]
[-177.92857361 89.90335083]
[-192.68089294 92.65588379]
[-207.59619141 94.31139374]
[-222.59304810 94.86083984]
[-237.58950806 94.30123138]
[-252.50369263 92.63562012]
[-267.25415039 89.87309265]
[-281.76028442 86.02875519]
[-295.94290161 81.12358856]
[-309.72451782 75.18438721]
[-323.02987671 68.24359894]
[-335.78631592 60.33911896]
[-347.92413330 51.51412964]
[-359.37707520 41.81682205]
[-370.08255005 31.30016708]
[-379.98208618 20.02160072]
[-389.02166748 8.04272461]
[-397.15185547 -4.57103825]
[-404.32830811 -17.75079346]
[-410.51177979 -31.42455864]
[-415.66851807 -45.51765060]
[-419.77035522 -59.95309448]
[-422.79489136 -74.65205383]
[-424.72561646 -89.53424072]
[-425.55197144 -104.51837921]
[-425.26947021 -119.52262878]
[-423.87960815 -134.46502686]
[-421.38998413 -149.26399231]
[-417.81423950 -163.83866882]
[-413.17187500 -178.10946655]
[-407.48825073 -191.99842834]
[-400.79440308 -205.42973328]
[-393.12689209 -218.32997131]
[-384.52758789 -230.62873840]
[-375.04348755 -242.25881958]
[-364.72634888 -253.15670776]
[-353.63256836 -263.26290894]
[-341.82269287 -272.52218628]
[-329.36126709 -280.88397217]
[-316.31628418 -288.30261230]
[-302.75906372 -294.73760986]
[-288.76364136 -300.15377808]
[-274.40643311 -304.52154541]
[-259.76583862 -307.81707764]
[-244.92184448 -310.02233887]
[-229.95552063 -311.12533569]
[-214.94862366 -311.11999512]
[-199.98309326 -310.00637817]
[-185.14067078 -307.79052734]
[-170.50244141 -304.48458862]
[-156.14833069 -300.10659790]
[-142.15675354 -294.68048096]
[-128.60411072 -288.23583984]
[-115.56443787 -280.80792236]
[-103.10894775 -272.43725586]
[-91.30567169 -263.16958618]
[-80.21907043 -253.05551147]
[-69.90969849 -242.15026855]
[-60.43386841 -230.51344299]
[-51.84332657 -218.20857239]
[-44.18499374 -205.30287170]
[-37.50070190 -191.86682129]
[-31.82695389 -177.97380066]
[-27.19473839 -163.69970703]
[-23.62935829 -149.12249756]
[-21.15028381 -134.32176208]
[-19.77105713 -119.37837219]
[-19.49921036 -104.37393188]
[-20.33622742 -89.39038849]
[-22.27753639 -74.50957489]
[-25.31253624 -59.81277466]
[-29.42465019 -45.38024902]
[-34.59141922 -31.29083061]
[-40.78462219 -17.62146950]
[-47.97043610 -4.44682217]
[-35.36812210 3.68839383]
[-22.76581001 11.82360935]
[-8.96521759 6.28451014]
[5.62331343 9.97757816]
[15.35366249 21.68969536]
[16.33310318 37.06327438]
[28.93541527 45.19849014]
[41.53772736 53.33370590]
[54.14003754 61.46892166]
[66.74234772 69.60413361]
[79.34466553 77.73934937]
[91.94697571 85.87456512]
[108.71649170 86.27404785]
[116.20912170 101.28192902]
[128.93116760 109.22861481]
[141.65319824 117.17530060]
[154.37522888 125.12198639]
[167.09727478 133.06866455]
[162.06213379 118.93900299]
[165.36160278 104.30638885]
[175.97331238 93.70489502]
[190.60910034 90.41950989]
[204.73390198 95.46825409]
[213.97100830 107.28670502]
[215.45820618 122.21279907]
[208.73463440 135.62152100]
[195.88371277 143.35803223]
[180.88716125 143.02500916]
[192.43345642 152.60012817]
[203.97976685 162.17524719]
[215.52606201 171.75036621]
[227.07237244 181.32548523]
[238.61866760 190.90060425]
[249.19711304 180.25154114]
[260.68756104 170.59359741]
[272.99749756 162.00454712]
[286.02780151 154.55352783]
[299.67355347 148.30055237]
[313.82489014 143.29595947]
[328.36785889 139.58003235]
[343.18539429 137.18270874]
[358.15814209 136.12327576]
[373.16561890 136.41027832]
[388.08694458 138.04139709]
[402.80197144 141.00349426]
[417.19223022 145.27272034]
[431.14187622 150.81471252]
[444.53857422 157.58483887]
[457.27447510 165.52857971]
[469.24703979 174.58201599]
[480.35983276 184.67221069]
[490.52337646 195.71792603]
[499.65591431 207.63026428]
[507.68383789 220.31326294]
[514.54254150 233.66484070]
[520.17675781 247.57748413]
[524.54119873 261.93914795]
[527.60070801 276.63424683]
[529.33056641 291.54443359]
[529.71697998 306.54968262]
[528.75671387 321.52914429]
[526.45758057 336.36221313]
[522.83801270 350.92947388]
[517.92724609 365.11364746]
[511.76480103 378.80050659]
[504.40023804 391.87985229]
[495.89288330 404.24639893]
[486.31124878 415.80056763]
[475.73248291 426.44931030]
[464.24172974 436.10690308]
[451.93154907 444.69555664]
[438.90100098 452.14617920]
[425.25506592 458.39874268]
[411.10357666 463.40292358]
[396.56048584 467.11837769]
[381.74288940 469.51525879]
[366.77008057 470.57424927]
[351.76263428 470.28677368]
[336.84136963 468.65521240]
[322.12643433 465.69265747]
[307.73629761 461.42300415]
[293.78680420 455.88058472]
[280.39031982 449.11004639]
[267.65466309 441.16589355]
[255.68240356 432.11212158]
[244.56991577 422.02157593]
[234.40667725 410.97555542]
[225.27453613 399.06292725]
[217.24699402 386.37969971]
[210.38870239 373.02789307]
[204.75488281 359.11508179]
[200.39088440 344.75326538]
[197.33184814 330.05807495]
[195.60241699 315.14785767]
[195.21649170 300.14260864]
[196.17720032 285.16317749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 132]
[12 131]
[13 130]
[14 129]
[15 128]
[18 126]
[19 125]
[20 124]
[21 123]
[22 122]
[23 121]
[24 120]
[28 116]
[29 115]
[30 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
