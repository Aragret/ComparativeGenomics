%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[107.71189880 898.01654053]
[92.80500793 896.32318115]
[77.99387360 893.93292236]
[63.31105042 890.85107422]
[48.78882217 887.08441162]
[34.45910645 882.64117432]
[20.35340500 877.53112793]
[6.50272751 871.76556396]
[-7.06248140 865.35711670]
[-20.31240273 858.31988525]
[-33.21790695 850.66937256]
[-45.75062943 842.42230225]
[-57.88301849 833.59686279]
[-69.58840179 824.21246338]
[-80.84105682 814.28973389]
[-91.61623383 803.85046387]
[-101.89025879 792.91760254]
[-111.64054108 781.51513672]
[-120.84564972 769.66827393]
[-129.48535156 757.40295410]
[-137.54064941 744.74609375]
[-144.99383545 731.72558594]
[-151.82853699 718.37011719]
[-158.02972412 704.70892334]
[-163.58375549 690.77203369]
[-168.47843933 676.59020996]
[-172.70298767 662.19445801]
[-176.24815369 647.61657715]
[-179.10610962 632.88854980]
[-181.27059937 618.04272461]
[-182.73683167 603.11181641]
[-183.50161743 588.12854004]
[-183.56326294 573.12591553]
[-182.92163086 558.13684082]
[-181.57814026 543.19433594]
[-179.53573608 528.33123779]
[-176.79888916 513.58026123]
[-173.37365723 498.97369385]
[-169.26753235 484.54379272]
[-164.48956299 470.32217407]
[-159.05024719 456.34014893]
[-152.96154785 442.62844849]
[-146.23683167 429.21722412]
[-138.89088440 416.13592529]
[-130.93986511 403.41333008]
[-122.40125275 391.07739258]
[-113.29380798 379.15527344]
[-103.63755798 367.67312622]
[-93.45372009 356.65618896]
[-82.76469421 346.12872314]
[-71.59396362 336.11383057]
[-59.96609116 326.63354492]
[-47.90663910 317.70874023]
[-35.44211197 309.35894775]
[-22.59991074 301.60260010]
[-9.40826702 294.45672607]
[4.10382128 287.93704224]
[17.90665245 282.05783081]
[31.96988297 276.83206177]
[46.26259995 272.27124023]
[60.75338745 268.38534546]
[75.41038513 265.18292236]
[90.20137787 262.67105103]
[105.09385681 260.85522461]
[103.97820282 245.89677429]
[102.86255646 230.93830872]
[101.74691010 215.97985840]
[100.63126373 201.02140808]
[99.51560974 186.06295776]
[98.39996338 171.10450745]
[97.28431702 156.14604187]
[86.63660431 142.19638062]
[94.76982117 125.67572021]
[93.43158722 110.73553467]
[91.76004028 95.82896423]
[89.75602722 80.96343231]
[87.75201416 66.09790802]
[85.74800110 51.23237610]
[83.08220673 36.47116089]
[79.75994873 21.84369850]
[76.43769073 7.21623898]
[73.11543274 -7.41122103]
[69.79316711 -22.03868103]
[54.74374771 -21.72280884]
[39.93886566 -24.44317055]
[25.98477554 -30.08836746]
[13.45288658 -38.42723083]
[2.85637379 -49.11829376]
[-5.37084293 -61.72375870]
[-10.89186478 -75.72744751]
[-13.48060799 -90.55590820]
[-13.03106689 -105.60192871]
[-9.56164932 -120.24938965]
[-3.21442533 -133.89848328]
[5.75068998 -145.99028015]
[16.96658134 -156.02963257]
[29.97396469 -163.60543823]
[44.24019241 -168.40747070]
[59.18107986 -170.23910522]
[74.18479919 -169.02531433]
[88.63696289 -164.81581116]
[101.94575500 -157.78295898]
[113.56620026 -148.21478271]
[123.02243805 -136.50306702]
[129.92724609 -123.12739563]
[133.99789429 -108.63550568]
[135.06765747 -93.62083435]
[133.09275818 -78.69821167]
[128.15405273 -64.47871399]
[120.45377350 -51.54462433]
[110.30725861 -40.42557907]
[98.12999725 -31.57690430]
[84.42063141 -25.36094093]
[87.74288940 -10.73348045]
[91.06514740 3.89397955]
[94.38740540 18.52144051]
[97.70967102 33.14889908]
[106.59926605 21.06688881]
[121.40705872 18.67328453]
[133.65046692 27.33925438]
[136.31590271 42.10053635]
[127.87649536 54.50119781]
[113.16671753 57.43757629]
[100.61353302 49.22836304]
[102.61754608 64.09389496]
[104.62155914 78.95941925]
[106.62557220 93.82495117]
[109.33006287 96.57415009]
[110.80962372 100.50209808]
[110.56497192 105.03499603]
[108.37177277 109.39730072]
[109.71000671 124.33748627]
[119.08914948 133.19154358]
[119.89619446 145.66281128]
[112.24276733 155.03039551]
[113.35841370 169.98884583]
[114.47406769 184.94731140]
[115.58971405 199.90576172]
[116.70536041 214.86421204]
[117.82101440 229.82266235]
[118.93666077 244.78111267]
[120.05230713 259.73956299]
[135.04937744 259.32614136]
[150.04934692 259.61611938]
[165.01922607 260.60885620]
[179.92613220 262.30218506]
[194.73727417 264.69238281]
[209.42012024 267.77416992]
[223.94235229 271.54077148]
[238.27209473 275.98394775]
[252.37782288 281.09390259]
[266.22851562 286.85940552]
[279.79376221 293.26779175]
[293.04370117 300.30496216]
[305.94924927 307.95547485]
[318.48199463 316.20248413]
[330.61444092 325.02786255]
[342.31985474 334.41220093]
[353.57254028 344.33489990]
[364.34777832 354.77413940]
[374.62185669 365.70693970]
[384.37219238 377.10931396]
[393.57733154 388.95617676]
[402.21710205 401.22146606]
[410.27246094 413.87826538]
[417.72570801 426.89871216]
[424.56045532 440.25421143]
[430.76168823 453.91537476]
[436.31579590 467.85220337]
[441.21051025 482.03405762]
[445.43515015 496.42971802]
[448.98037720 511.00759888]
[451.83837891 525.73565674]
[454.00292969 540.58142090]
[455.46923828 555.51239014]
[456.23410034 570.49560547]
[456.29580688 585.49829102]
[455.65423584 600.48730469]
[454.31082153 615.42980957]
[452.26846313 630.29290771]
[449.53167725 645.04394531]
[446.10650635 659.65051270]
[442.00045776 674.08044434]
[437.22256470 688.30206299]
[431.78329468 702.28411865]
[425.69464111 715.99584961]
[418.97000122 729.40710449]
[411.62411499 742.48846436]
[403.67315674 755.21105957]
[395.13458252 767.54705811]
[386.02719116 779.46923828]
[376.37097168 790.95141602]
[366.18719482 801.96838379]
[355.49819946 812.49591064]
[344.32751465 822.51080322]
[332.69970703 831.99114990]
[320.64028931 840.91601562]
[308.17578125 849.26586914]
[295.33361816 857.02227783]
[282.14199829 864.16821289]
[268.62994385 870.68792725]
[254.82714844 876.56719971]
[240.76393127 881.79302979]
[226.47123718 886.35394287]
[211.98046875 890.23986816]
[197.32348633 893.44238281]
[182.53250122 895.95428467]
[167.64002991 897.77020264]
[152.67881775 898.88604736]
[137.68174744 899.29943848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[70 136]
[71 135]
[73 132]
[74 131]
[75 127]
[76 126]
[77 125]
[78 124]
[79 117]
[80 116]
[81 115]
[82 114]
[83 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
