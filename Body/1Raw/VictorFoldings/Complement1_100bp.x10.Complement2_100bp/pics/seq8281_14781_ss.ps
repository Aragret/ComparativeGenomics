%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[81.75637054 486.85739136]
[70.73703766 497.04403687]
[59.01907730 506.41860962]
[46.66219711 514.93334961]
[33.72935867 522.54486084]
[20.28647423 529.21435547]
[6.40204191 534.90783691]
[-7.85318470 539.59631348]
[-22.40656471 543.25585938]
[-37.18393326 545.86785889]
[-52.10999298 547.41900635]
[-67.10868073 547.90136719]
[-82.10356140 547.31250000]
[-97.01822662 545.65545654]
[-111.77667999 542.93859863]
[-126.30371094 539.17578125]
[-140.52528381 534.38623047]
[-154.36894226 528.59429932]
[-167.76414490 521.82952881]
[-180.64260864 514.12640381]
[-192.93872070 505.52410889]
[-204.58982849 496.06658936]
[-215.53654480 485.80197144]
[-225.72311401 474.78256226]
[-235.09759521 463.06451416]
[-243.61222839 450.70758057]
[-251.22363281 437.77468872]
[-257.89303589 424.33172607]
[-263.58639526 410.44726562]
[-268.27478027 396.19198608]
[-271.93423462 381.63858032]
[-274.54611206 366.86120605]
[-276.09713745 351.93511963]
[-276.57940674 336.93643188]
[-275.99044800 321.94155884]
[-274.33325195 307.02691650]
[-271.61627197 292.26849365]
[-267.85336304 277.74148560]
[-263.06365967 263.51992798]
[-257.27163696 249.67633057]
[-250.50677490 236.28118896]
[-242.80352783 223.40277100]
[-234.20117188 211.10671997]
[-224.74354553 199.45568848]
[-214.47885132 188.50904846]
[-203.45936584 178.32257080]
[-191.74125671 168.94818115]
[-179.38424683 160.43363953]
[-166.45129395 152.82232666]
[-153.00830078 146.15304565]
[-139.12377930 140.45976257]
[-124.86848450 135.77151489]
[-110.31504822 132.11216736]
[-95.53763580 129.50039673]
[-80.61155701 127.94947815]
[-65.61286163 127.46733093]
[-50.61798859 128.05641174]
[-35.70334625 129.71372986]
[-20.94493484 132.43081665]
[-6.41796350 136.19384766]
[7.80354166 140.98362732]
[21.64710999 146.77577209]
[35.04219818 153.54074097]
[47.92054749 161.24407959]
[56.51911163 148.95324707]
[65.11767578 136.66239929]
[73.71623993 124.37156677]
[74.67212677 109.50766754]
[88.92276764 102.63526154]
[74.55001831 106.92758179]
[60.10912704 102.87039948]
[50.07476807 91.72088623]
[47.55619431 76.93383789]
[53.33381653 63.09118271]
[65.61737061 54.48221588]
[80.60066986 53.77452469]
[93.64096832 61.18738937]
[100.69759369 74.42385864]
[99.58387756 89.38269806]
[109.74742889 78.35082245]
[119.91097260 67.31894684]
[130.07452393 56.28706741]
[140.23806763 45.25519180]
[141.37983704 40.16172028]
[144.09016418 36.39244843]
[147.60198975 34.32311630]
[151.11027527 33.97057343]
[161.75627136 23.40352631]
[172.40228271 12.83647823]
[162.62651062 1.45087790]
[153.69776917 -10.61044407]
[145.66264343 -23.28460503]
[138.56300354 -36.50552750]
[132.43585205 -50.20428467]
[127.31316376 -64.30945587]
[123.22162628 -78.74749756]
[120.18257904 -93.44313812]
[118.21186066 -108.31976318]
[117.31975555 -123.29981232]
[117.51090240 -138.30519104]
[118.78430939 -153.25765991]
[121.13334656 -168.07925415]
[124.54575348 -182.69271851]
[129.00373840 -197.02185059]
[134.48406982 -210.99194336]
[140.95817566 -224.53018188]
[148.39230347 -237.56596375]
[156.74768066 -250.03132629]
[165.98075867 -261.86129761]
[176.04339600 -272.99417114]
[186.88311768 -283.37194824]
[198.44343567 -292.94049072]
[210.66406250 -301.64990234]
[223.48129272 -309.45480347]
[236.82829285 -316.31448364]
[250.63548279 -322.19320679]
[264.83087158 -327.06030273]
[279.34045410 -330.89038086]
[294.08859253 -333.66348267]
[308.99838257 -335.36517334]
[323.99212646 -335.98657227]
[338.99157715 -335.52441406]
[353.91860962 -333.98114014]
[368.69537354 -331.36480713]
[383.24481201 -327.68899536]
[397.49108887 -322.97290039]
[411.35992432 -317.24114990]
[424.77899170 -310.52355957]
[437.67837524 -302.85519409]
[449.99081421 -294.27603149]
[461.65206909 -284.83078003]
[472.60137939 -274.56872559]
[482.78167725 -263.54330444]
[492.13983154 -251.81204224]
[500.62710571 -239.43609619]
[508.19921875 -226.47999573]
[514.81671143 -213.01127625]
[520.44506836 -199.10014343]
[525.05499268 -184.81916809]
[528.62237549 -170.24275208]
[531.12866211 -155.44694519]
[532.56072998 -140.50883484]
[532.91125488 -125.50634003]
[532.17822266 -110.51766205]
[530.36560059 -95.62094879]
[527.48278809 -80.89385986]
[523.54473877 -66.41318512]
[518.57214355 -52.25442123]
[512.59082031 -38.49137497]
[505.63192749 -25.19581223]
[497.73184204 -12.43704510]
[488.93167114 -0.28159395]
[479.27734375 11.20716763]
[468.81918335 21.96934128]
[457.61169434 31.94882011]
[445.71331787 41.09357071]
[433.18609619 49.35592270]
[420.09533691 56.69279099]
[406.50927734 63.06592941]
[392.49877930 68.44211578]
[378.13684082 72.79330444]
[363.49838257 76.09683228]
[348.65969849 78.33545685]
[333.69818115 79.49752045]
[318.69180298 79.57695770]
[303.71881104 78.57335663]
[288.85726929 76.49194336]
[274.18466187 73.34358215]
[259.77746582 69.14467621]
[245.71081543 63.91711807]
[232.05805969 57.68816757]
[218.89035034 50.49029541]
[206.27636719 42.36103058]
[194.28184509 33.34275436]
[182.96932983 23.48248672]
[172.32333374 34.04953384]
[161.67732239 44.61658096]
[151.26994324 55.41873932]
[141.10639954 66.45061493]
[130.94285583 77.48249054]
[120.77930450 88.51437378]
[110.61576080 99.54624939]
[101.21360779 111.23382568]
[99.64269257 126.97685242]
[86.00708008 132.97012329]
[77.40851593 145.26097107]
[68.80995178 157.55180359]
[60.21138763 169.84265137]
[71.86263275 179.30000305]
[82.80951691 189.56445312]
[92.99624634 200.58370972]
[102.37091064 212.30160522]
[110.88573456 224.65841675]
[118.49734497 237.59118652]
[125.16693115 251.03402710]
[130.86053467 264.91842651]
[135.54910278 279.17361450]
[139.20878601 293.72695923]
[141.82090759 308.50430298]
[143.37216187 323.43035889]
[143.85466003 338.42904663]
[143.26591492 353.42391968]
[141.60894775 368.33859253]
[138.89219666 383.09707642]
[135.12950134 397.62414551]
[130.34004211 411.84576416]
[124.54822540 425.68945312]
[117.78356171 439.08468628]
[110.08052063 451.96322632]
[101.47835541 464.25939941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 188]
[65 187]
[66 186]
[67 185]
[69 183]
[79 182]
[80 181]
[81 180]
[82 179]
[83 178]
[87 177]
[88 176]
[89 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
