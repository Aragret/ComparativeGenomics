%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[79.75280762 540.10906982]
[65.82271576 534.51733398]
[52.45882797 527.68194580]
[39.77188873 519.65972900]
[27.86702538 510.51696777]
[16.84288597 500.32955933]
[6.79082584 489.18185425]
[-2.20586205 477.16622925]
[-10.07262516 464.38229370]
[-16.74427605 450.93594360]
[-22.16553116 436.93859863]
[-26.29146767 422.50628662]
[-29.08789253 407.75857544]
[-30.53163719 392.81765747]
[-30.61073685 377.80737305]
[-29.32453346 362.85205078]
[-26.68368912 348.07568359]
[-22.71008682 333.60067749]
[-17.43665123 319.54699707]
[-10.90708065 306.03109741]
[-3.17548394 293.16494751]
[5.69407129 281.05517578]
[15.62808895 269.80215454]
[26.54424858 259.49911499]
[38.35209656 250.23143005]
[50.95378494 242.07591248]
[64.24489594 235.10011292]
[78.11528015 229.36184692]
[92.45001221 224.90869141]
[107.13030243 221.77751160]
[105.34783936 206.88378906]
[103.56537628 191.99008179]
[101.78290558 177.09635925]
[92.58803558 165.37869263]
[98.63062286 150.75688171]
[96.84815979 135.86315918]
[95.06568909 120.96943665]
[93.28322601 106.07572174]
[90.61996460 103.28656006]
[89.19905090 99.33702087]
[89.51116180 94.80826569]
[91.76907349 90.47909546]
[83.02679443 77.29262543]
[89.79605103 64.02513123]
[88.68039703 49.06667328]
[87.56475067 34.10822296]
[86.44910431 19.14976692]
[75.86559296 29.77941322]
[60.86656570 29.94993019]
[50.04413605 19.56363869]
[49.59788895 4.57027721]
[59.78345490 -6.44127417]
[74.76607513 -7.16310024]
[85.96261597 2.81744123]
[86.18594360 -12.18089581]
[86.40927124 -27.17923355]
[86.63259888 -42.17757034]
[71.67353821 -43.35194397]
[56.81908417 -45.47271347]
[42.12904358 -48.53134918]
[27.66257095 -52.51552582]
[13.47791672 -57.40921021]
[-0.36780122 -63.19268799]
[-13.81883144 -69.84267426]
[-26.82101059 -77.33238983]
[-39.32198334 -85.63168335]
[-51.27141190 -94.70712280]
[-62.62117767 -104.52217865]
[-73.32558441 -115.03732300]
[-83.34152222 -126.21021271]
[-92.62866974 -137.99586487]
[-101.14962006 -150.34680176]
[-108.87006378 -163.21331787]
[-115.75891876 -176.54359436]
[-121.78844452 -190.28395081]
[-126.93436432 -204.37905884]
[-131.17594910 -218.77217102]
[-134.49612427 -233.40530396]
[-136.88151550 -248.21957397]
[-138.32252502 -263.15530396]
[-138.81335449 -278.15234375]
[-138.35202026 -293.15036011]
[-136.94036865 -308.08886719]
[-134.58410645 -322.90780640]
[-131.29270935 -337.54745483]
[-127.07942200 -351.94885254]
[-121.96122742 -366.05407715]
[-115.95872498 -379.80624390]
[-109.09609222 -393.15002441]
[-101.40095520 -406.03170776]
[-92.90430450 -418.39938354]
[-83.64035034 -430.20327759]
[-73.64639282 -441.39581299]
[-62.96268082 -451.93200684]
[-51.63223267 -461.76934814]
[-39.70066833 -470.86825562]
[-27.21603584 -479.19210815]
[-14.22860813 -486.70736694]
[-0.79067755 -493.38378906]
[13.04364395 -499.19448853]
[27.21864891 -504.11602783]
[41.67726135 -508.12866211]
[56.36125946 -511.21615601]
[71.21151733 -513.36614990]
[86.16823578 -514.56988525]
[101.17118835 -514.82263184]
[116.15997314 -514.12335205]
[131.07421875 -512.47479248]
[145.85388184 -509.88360596]
[160.43943787 -506.36026001]
[174.77217102 -501.91894531]
[188.79435730 -496.57751465]
[202.44953918 -490.35751343]
[215.68273926 -483.28396606]
[228.44064331 -475.38534546]
[240.67190552 -466.69348145]
[252.32727051 -457.24334717]
[263.35980225 -447.07299805]
[273.72509766 -436.22341919]
[283.38134766 -424.73825073]
[292.28976440 -412.66378784]
[300.41442871 -400.04861450]
[307.72259521 -386.94354248]
[314.18490601 -373.40133667]
[319.77529907 -359.47653198]
[324.47125244 -345.22518921]
[328.25387573 -330.70471191]
[331.10794067 -315.97357178]
[333.02194214 -301.09106445]
[333.98818970 -286.11712646]
[334.00277710 -271.11206055]
[333.06567383 -256.13626099]
[331.18060303 -241.25004578]
[328.35519409 -226.51338196]
[324.60079956 -211.98558044]
[319.93255615 -197.72514343]
[314.36926270 -183.78948975]
[307.93328857 -170.23475647]
[300.65060425 -157.11549377]
[292.55050659 -144.48454285]
[283.66558838 -132.39277649]
[274.03167725 -120.88886261]
[263.68750000 -110.01914215]
[252.67477417 -99.82736969]
[241.03781128 -90.35459137]
[228.82347107 -81.63895416]
[216.08093262 -73.71553802]
[202.86152649 -66.61626434]
[189.21846008 -60.36971664]
[175.20668030 -55.00104141]
[160.88261414 -50.53186035]
[146.30392456 -46.98016739]
[131.52934265 -44.36026764]
[116.61832428 -42.68270874]
[101.63093567 -41.95424271]
[101.40760803 -26.95590591]
[101.18428040 -11.95756817]
[100.96095276 3.04076910]
[101.40755463 18.03411865]
[102.52320862 32.99257278]
[103.63885498 47.95102692]
[104.75450134 62.90948105]
[113.41698456 75.02602386]
[106.72752380 89.36344910]
[108.17694092 104.29325867]
[109.95941162 119.18697357]
[111.74187469 134.08068848]
[113.52433777 148.97441101]
[122.84671021 161.75737000]
[116.67662048 175.31388855]
[118.45909119 190.20761108]
[120.24155426 205.10133362]
[122.02402496 219.99504089]
[137.02861023 219.57356262]
[152.00935364 220.51828003]
[166.84211731 222.82136536]
[181.40400696 226.46374512]
[195.57432556 231.41522217]
[209.23567200 237.63478088]
[222.27484131 245.07087708]
[234.58377075 253.66188049]
[246.06047058 263.33660889]
[256.60983276 274.01492310]
[266.14447021 285.60827637]
[274.58532715 298.02066040]
[281.86248779 311.14916992]
[287.91567993 324.88507080]
[292.69467163 339.11447144]
[296.15991211 353.71951294]
[298.28265381 368.57916260]
[299.04534912 383.57028198]
[298.44165039 398.56866455]
[296.47656250 413.44998169]
[293.16638184 428.09094238]
[288.53851318 442.37023926]
[282.63134766 456.16952515]
[275.49377441 469.37445068]
[267.18499756 481.87564087]
[257.77380371 493.56942749]
[247.33825684 504.35897827]
[235.96478271 514.15484619]
[223.74761963 522.87591553]
[210.78804016 530.44982910]
[197.19340515 536.81390381]
[183.07638550 541.91534424]
[168.55393982 545.71191406]
[153.74641418 548.17211914]
[138.77653503 549.27563477]
[123.76832581 549.01324463]
[108.84615326 547.38720703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 173]
[31 172]
[32 171]
[33 170]
[35 168]
[36 167]
[37 166]
[38 165]
[42 164]
[44 162]
[45 161]
[46 160]
[47 159]
[54 158]
[55 157]
[56 156]
[57 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
