%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[106.23759460 315.59347534]
[91.31828308 317.62020874]
[76.30363464 316.50036621]
[61.85003281 312.28289795]
[48.58932114 305.15219116]
[37.10120773 295.41992188]
[27.88789940 283.51156616]
[21.35216331 269.94772339]
[17.77971458 255.32133484]
[17.32672501 240.27180481]
[20.01299667 225.45703125]
[25.72109795 211.52464294]
[34.20149612 199.08372498]
[45.08346176 188.67811584]
[57.89128494 180.76274109]
[72.06505585 175.68357849]
[86.98516846 173.66270447]
[88.10082245 158.70425415]
[89.21646881 143.74580383]
[90.33211517 128.78735352]
[91.44776917 113.82889557]
[83.77674103 98.91139984]
[93.37198639 85.15248871]
[94.26480103 70.17908478]
[95.15762329 55.20568085]
[96.05043793 40.23227310]
[84.14167786 49.35266113]
[69.25432587 47.51776505]
[59.91653824 35.77869797]
[61.47742081 20.86013031]
[73.04282379 11.30809498]
[87.98757172 12.59443283]
[97.75032043 23.98136711]
[99.97544098 9.14732361]
[102.20055389 -5.68671989]
[104.42567444 -20.52076340]
[106.65078735 -35.35480881]
[91.92230988 -38.20787811]
[77.32819366 -41.68347549]
[62.89473724 -45.77532959]
[48.64794540 -50.47607422]
[34.61349869 -55.77723312]
[20.81668282 -61.66925812]
[7.28236389 -68.14152527]
[-5.96506882 -75.18237305]
[-18.90174294 -82.77911377]
[-31.50434494 -90.91806030]
[-43.75016403 -99.58454895]
[-55.61713409 -108.76294708]
[-67.08386993 -118.43672943]
[-78.12969971 -128.58845520]
[-88.73473358 -139.19984436]
[-98.87984467 -150.25173950]
[-108.54676819 -161.72427368]
[-117.71806335 -173.59672546]
[-126.37721252 -185.84773254]
[-134.50862122 -198.45520020]
[-142.09761047 -211.39642334]
[-149.13053894 -224.64807129]
[-155.59469604 -238.18624878]
[-161.47846985 -251.98658752]
[-166.77122498 -266.02420044]
[-171.46343994 -280.27380371]
[-175.54666138 -294.70971680]
[-179.01351929 -309.30590820]
[-181.85777283 -324.03610229]
[-184.07431030 -338.87371826]
[-185.65910339 -353.79205322]
[-186.60932922 -368.76419067]
[-186.92324829 -383.76318359]
[-186.60032654 -398.76196289]
[-185.64111328 -413.73352051]
[-184.04736328 -428.65090942]
[-181.82192993 -443.48718262]
[-178.96884155 -458.21566772]
[-175.49322510 -472.80978394]
[-171.40133667 -487.24322510]
[-166.70057678 -501.49002075]
[-161.39939880 -515.52447510]
[-155.50735474 -529.32128906]
[-149.03506470 -542.85559082]
[-141.99418640 -556.10296631]
[-134.39743042 -569.03967285]
[-126.25846100 -581.64227295]
[-117.59195709 -593.88806152]
[-108.41353607 -605.75500488]
[-98.73973083 -617.22174072]
[-88.58798981 -628.26751709]
[-77.97659302 -638.87255859]
[-66.92466736 -649.01763916]
[-55.45212936 -658.68457031]
[-43.57965469 -667.85583496]
[-31.32863808 -676.51495361]
[-18.72115326 -684.64636230]
[-5.77992249 -692.23535156]
[7.47173262 -699.26824951]
[21.00993347 -705.73236084]
[34.81027985 -711.61608887]
[48.84790802 -716.90881348]
[63.09751892 -721.60101318]
[77.53343201 -725.68420410]
[92.12963104 -729.15106201]
[106.85981750 -731.99530029]
[121.69744110 -734.21179199]
[136.61576843 -735.79656982]
[151.58792114 -736.74676514]
[166.58689880 -737.06066895]
[181.58569336 -736.73773193]
[196.55726624 -735.77850342]
[211.47462463 -734.18469238]
[226.31091309 -731.95928955]
[241.03938293 -729.10614014]
[255.63348389 -725.63049316]
[270.06692505 -721.53857422]
[284.31372070 -716.83782959]
[298.34814453 -711.53662109]
[312.14492798 -705.64453125]
[325.67922974 -699.17224121]
[338.92663574 -692.13134766]
[351.86331177 -684.53454590]
[364.46588135 -676.39556885]
[376.71166992 -667.72906494]
[388.57861328 -658.55059814]
[400.04531860 -648.87677002]
[411.09112549 -638.72503662]
[421.69610596 -628.11358643]
[431.84118652 -617.06164551]
[441.50805664 -605.58911133]
[450.67932129 -593.71661377]
[459.33843994 -581.46557617]
[467.46978760 -568.85809326]
[475.05874634 -555.91687012]
[482.09164429 -542.66516113]
[488.55575562 -529.12695312]
[494.43948364 -515.32659912]
[499.73217773 -501.28897095]
[504.42437744 -487.03936768]
[508.50753784 -472.60345459]
[511.97433472 -458.00723267]
[514.81854248 -443.27703857]
[517.03503418 -428.43942261]
[518.61981201 -413.52108765]
[519.56994629 -398.54895020]
[519.88385010 -383.54995728]
[519.56085205 -368.55117798]
[518.60162354 -353.57958984]
[517.00781250 -338.66223145]
[514.78234863 -323.82595825]
[511.92919922 -309.09750366]
[508.45352173 -294.50338745]
[504.36160278 -280.06994629]
[499.66079712 -265.82318115]
[494.35955811 -251.78875732]
[488.46746826 -237.99197388]
[481.99514771 -224.45768738]
[474.95422363 -211.21028137]
[467.35742188 -198.27365112]
[459.21841431 -185.67108154]
[450.55187988 -173.42530823]
[441.37341309 -161.55838013]
[431.69958496 -150.09169006]
[421.54779053 -139.04591370]
[410.93637085 -128.44093323]
[399.88439941 -118.29586792]
[388.41183472 -108.62900543]
[376.53933716 -99.45776367]
[364.28829956 -90.79866791]
[351.68078613 -82.66732788]
[338.73953247 -75.07839203]
[325.48785400 -68.04553986]
[311.94961548 -61.58143616]
[298.14926147 -55.69773865]
[284.11160278 -50.40504456]
[269.86199951 -45.71289825]
[255.42605591 -41.62974930]
[240.82984924 -38.16296005]
[226.09965515 -35.31877518]
[211.26202393 -33.10232162]
[196.34368896 -31.51758957]
[181.37153625 -30.56744003]
[166.37255859 -30.25358391]
[151.37376404 -30.57658577]
[136.40219116 -31.53586388]
[121.48483276 -33.12968826]
[119.25971985 -18.29564667]
[117.03459930 -3.46160245]
[114.80947876 11.37244129]
[112.58436584 26.20648575]
[111.02384186 41.12509155]
[110.13102722 56.09849548]
[109.23821259 71.07189941]
[108.34539032 86.04530334]
[115.53700256 95.20619965]
[114.75726318 106.82658386]
[106.40621948 114.94454193]
[105.29057312 129.90299988]
[104.17491913 144.86145020]
[103.05927277 159.81990051]
[101.94362640 174.77835083]
[116.39888763 178.99014282]
[129.66239929 186.11564636]
[141.15434265 195.84339905]
[150.37232971 207.74810791]
[156.91340637 221.30938721]
[160.49160767 235.93437195]
[160.95051575 250.98371887]
[158.27008057 265.79956055]
[152.56745911 279.73419189]
[144.09194946 292.17843628]
[133.21408081 302.58831787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 199]
[18 198]
[19 197]
[20 196]
[21 195]
[23 192]
[24 191]
[25 190]
[26 189]
[33 188]
[34 187]
[35 186]
[36 185]
[37 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
