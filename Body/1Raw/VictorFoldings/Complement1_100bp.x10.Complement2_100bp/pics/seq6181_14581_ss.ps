%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[151.67309570 581.56732178]
[141.80941772 570.25872803]
[132.74044800 558.30334473]
[124.50849152 545.75701904]
[117.15193176 532.67810059]
[110.70505524 519.12762451]
[105.19792938 505.16882324]
[100.65622711 490.86676025]
[97.10112000 476.28805542]
[94.54919434 461.50076294]
[93.01234436 446.57376099]
[92.49774170 431.57672119]
[93.00776672 416.57949829]
[94.54006195 401.65203857]
[97.08747101 386.86395264]
[100.63812256 372.28417969]
[105.17545319 357.98071289]
[110.67832184 344.02023315]
[117.12106323 330.46780396]
[124.47363281 317.38665771]
[132.70175171 304.83776855]
[141.76707458 292.87963867]
[151.62730408 281.56802368]
[162.23648071 270.95568848]
[173.54515076 261.09207153]
[185.50057983 252.02319336]
[177.27175903 239.48179626]
[169.04295349 226.94038391]
[160.81414795 214.39898682]
[157.45475769 213.32806396]
[154.44718933 210.57679749]
[152.57554626 206.32823181]
[152.51254272 201.10874939]
[144.85194397 188.21241760]
[137.19134521 175.31608582]
[121.44538879 167.56805420]
[121.37012482 149.15405273]
[113.51836395 136.37319946]
[105.66661072 123.59236145]
[97.81485748 110.81151581]
[91.84356689 124.57173920]
[77.40292358 128.62980652]
[65.13803864 119.99427032]
[64.09012604 105.03091431]
[75.03166199 94.77017975]
[89.89557648 96.77499390]
[83.01616669 83.44556427]
[76.13675690 70.11613464]
[69.25733948 56.78670502]
[62.37792969 43.45727539]
[55.49851608 30.12784576]
[48.61910248 16.79841614]
[41.73969269 3.46898675]
[34.86027908 -9.86044216]
[34.58848572 5.13709497]
[29.52366829 19.25614738]
[20.20033455 31.00669861]
[7.60239506 39.14868164]
[-6.94065905 42.82286072]
[-21.89406586 41.64148331]
[-35.67975235 35.72922516]
[-46.84288788 25.71002197]
[-54.20539856 12.64122581]
[-56.99029922 -2.09798479]
[-54.90369415 -16.95214462]
[-48.16578674 -30.35366058]
[-37.48764420 -40.88823700]
[-23.99615669 -47.44413376]
[-9.11511421 -49.32949448]
[5.58505201 -46.34534836]
[18.55299759 -38.80662537]
[28.42028809 -27.50873566]
[25.09802818 -42.13619614]
[20.14564514 -49.81159210]
[21.83691216 -57.00613403]
[18.73280144 -71.68143463]
[15.62869167 -86.35673523]
[12.52458191 -101.03204346]
[9.42047215 -115.70734406]
[6.31636190 -130.38264465]
[3.21225166 -145.05795288]
[-11.81797791 -144.54479980]
[-26.70894623 -146.64959717]
[-41.00813293 -151.30839539]
[-54.28100204 -158.37960815]
[-66.12420654 -167.64834595]
[-76.17784882 -178.83294678]
[-84.13639832 -191.59353638]
[-89.75801849 -205.54232788]
[-92.87186432 -220.25541687]
[-93.38331604 -235.28570557]
[-91.27682495 -250.17643738]
[-86.61640930 -264.47509766]
[-79.54369354 -277.74716187]
[-70.27360535 -289.58932495]
[-59.08785629 -299.64169312]
[-46.32637024 -307.59878540]
[-32.37694931 -313.21881104]
[-17.66350365 -316.33099365]
[-2.63315868 -316.84075928]
[12.25733185 -314.73257446]
[26.55546188 -310.07052612]
[39.82672882 -302.99630737]
[51.66783142 -293.72488403]
[61.71893311 -282.53799438]
[69.67459106 -269.77560425]
[75.29304504 -255.82554626]
[78.40355682 -241.11174011]
[78.91159821 -226.08134460]
[76.80172729 -211.19108582]
[72.13806915 -196.89349365]
[65.06233978 -183.62303162]
[55.78956985 -171.78297424]
[44.60153961 -161.73313904]
[31.83824921 -153.77893066]
[17.88755417 -148.16206360]
[20.99166489 -133.48675537]
[24.09577370 -118.81145477]
[27.19988441 -104.13615417]
[30.30399513 -89.46084595]
[33.40810394 -74.78554535]
[36.51221466 -60.11024475]
[39.72548676 -45.45845413]
[43.04774857 -30.83099556]
[48.18970871 -16.73985481]
[55.06911850 -3.41042566]
[61.94853210 9.91900349]
[68.82794189 23.24843216]
[75.70735931 36.57786179]
[82.58676910 49.90729141]
[89.46618652 63.23672104]
[96.34559631 76.56614685]
[103.22500610 89.89557648]
[110.59569550 102.95976257]
[118.44745636 115.74060822]
[126.29920959 128.52145386]
[134.15097046 141.30229187]
[146.49179077 145.05288696]
[152.76841736 155.85972595]
[150.08767700 167.65548706]
[157.74826050 180.55181885]
[165.40885925 193.44815063]
[173.35554504 206.17018127]
[181.58435059 218.71157837]
[189.81317139 231.25297546]
[198.04197693 243.79438782]
[211.12072754 236.43756104]
[224.67103577 229.99040222]
[238.62974548 224.48300171]
[252.93173218 219.94100952]
[267.51034546 216.38562012]
[282.29760742 213.83338928]
[297.22454834 212.29623413]
[312.22161865 211.78132629]
[327.21884155 212.29106140]
[342.14633179 213.82304382]
[356.93444824 216.37016296]
[371.51428223 219.92051697]
[385.81787109 224.45756531]
[399.77844238 229.96015930]
[413.33099365 236.40261841]
[426.41229248 243.75492859]
[438.96136475 251.98280334]
[450.91967773 261.04788208]
[462.23147583 270.90786743]
[472.84402466 281.51684570]
[482.70788574 292.82531738]
[491.77700806 304.78054810]
[500.00912476 317.32681274]
[507.36587524 330.40563965]
[513.81292725 343.95599365]
[519.32025146 357.91470337]
[523.86212158 372.21673584]
[527.41741943 386.79537964]
[529.96954346 401.58264160]
[531.50659180 416.50961304]
[532.02142334 431.50668335]
[531.51159668 446.50390625]
[529.97949219 461.43136597]
[527.43225098 476.21948242]
[523.88183594 490.79931641]
[519.34466553 505.10284424]
[513.84197998 519.06341553]
[507.39944458 532.61590576]
[500.04705811 545.69714355]
[491.81909180 558.24615479]
[482.75393677 570.20440674]
[472.89385986 581.51611328]
[462.28482056 592.12866211]
[450.97628784 601.99237061]
[439.02099609 611.06146240]
[426.47467041 619.29345703]
[413.39581299 626.65014648]
[399.84539795 633.09710693]
[385.88662720 638.60430908]
[371.58456421 643.14611816]
[357.00592041 646.70129395]
[342.21862793 649.25335693]
[327.29165649 650.79028320]
[312.29458618 651.30499268]
[297.29736328 650.79504395]
[282.36990356 649.26287842]
[267.58181763 646.71557617]
[253.00201416 643.16503906]
[238.69851685 638.62774658]
[224.73799133 633.12500000]
[211.18553162 626.68237305]
[198.10433960 619.32989502]
[185.55538940 611.10180664]
[173.59719849 602.03662109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 146]
[27 145]
[28 144]
[29 143]
[33 142]
[34 141]
[35 140]
[37 137]
[38 136]
[39 135]
[40 134]
[46 133]
[47 132]
[48 131]
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[54 125]
[72 124]
[73 123]
[75 122]
[76 121]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
