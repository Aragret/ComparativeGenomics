%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[182.60403442 579.67742920]
[173.93710327 567.34936523]
[168.34739685 553.35461426]
[166.13636780 538.44799805]
[167.42324829 523.43328857]
[172.13864136 509.12033081]
[180.02824402 496.28088379]
[190.66658020 485.60745239]
[203.47994995 477.67559814]
[217.77732849 472.91308594]
[216.43908691 457.97290039]
[215.10086060 443.03271484]
[213.76261902 428.09252930]
[212.42439270 413.15234375]
[211.08615112 398.21215820]
[209.74792480 383.27197266]
[206.09983826 368.72235107]
[200.23088074 354.91815186]
[194.36190796 341.11398315]
[188.49295044 327.30981445]
[182.62399292 313.50564575]
[176.75503540 299.70144653]
[164.65483093 291.01614380]
[166.37579346 275.28881836]
[151.44660950 275.50952148]
[137.53262329 269.98263550]
[126.76560211 259.52145386]
[120.80798340 245.69776917]
[120.59619904 230.60575867]
[126.19366455 216.54476929]
[136.77635193 205.66899109]
[130.90737915 191.86482239]
[118.80718994 183.17951965]
[120.52815247 167.45217896]
[114.65918732 153.64801025]
[108.79022980 139.84382629]
[102.92127228 126.03965759]
[97.05230713 112.23548126]
[90.87654114 98.56581116]
[84.39704132 85.03746033]
[77.91754913 71.50911713]
[64.78310394 68.52567291]
[55.89484024 58.66619873]
[54.33121872 45.68016052]
[60.44064713 34.33536530]
[54.16328812 20.71204758]
[47.88592529 7.08873224]
[41.60856628 -6.53458357]
[35.33120728 -20.15789986]
[29.05384445 -33.78121567]
[13.77540016 -44.05986404]
[16.06494141 -61.45885849]
[9.58544540 -74.98720551]
[2.70603251 -88.31663513]
[-4.56719685 -101.43532562]
[-11.84042645 -114.55402374]
[-19.11365509 -127.67271423]
[-26.38688469 -140.79141235]
[-25.69554329 -125.80735016]
[-27.90077972 -110.97033691]
[-32.92015076 -96.83506775]
[-40.56600189 -83.92999268]
[-50.55248642 -72.73757935]
[-62.50625610 -63.67626572]
[-75.98040771 -57.08481598]
[-90.47120667 -53.20965958]
[-105.43689728 -52.19566345]
[-120.31797028 -54.08074570]
[-134.55810547 -58.79442215]
[-147.62489319 -66.16047668]
[-159.02986145 -75.90351868]
[-168.34658813 -87.65930176]
[-175.22679138 -100.98832703]
[-179.41323853 -115.39227295]
[-180.74942017 -130.33264160]
[-179.18536377 -145.25086975]
[-174.77957153 -159.58924866]
[-167.69673157 -172.81170654]
[-158.20166016 -184.42391968]
[-146.64932251 -193.99176025]
[-133.47161865 -201.15751648]
[-119.16120148 -205.65330505]
[-104.25308228 -207.31103516]
[-89.30461884 -206.06875610]
[-74.87465668 -201.97286987]
[-61.50267410 -195.17654419]
[-49.68859863 -185.93383789]
[-39.87409973 -174.59030151]
[-32.42860794 -161.57560730]
[-40.97359085 -174.89077759]
[-34.00754929 -188.05601501]
[-34.90036774 -203.02941895]
[-35.79318237 -218.00282288]
[-36.68599701 -232.97622681]
[-51.33086777 -236.76872253]
[-64.08593750 -244.90281677]
[-73.70158386 -256.58160400]
[-79.23577881 -270.66094971]
[-80.14633179 -285.76147461]
[-76.34403229 -300.40380859]
[-68.20139313 -313.15344238]
[-56.51615524 -322.76126099]
[-42.43310547 -328.28601074]
[-27.33196640 -329.18643188]
[-12.69219112 -325.37432861]
[0.05196325 -317.22314453]
[9.65195560 -305.53146362]
[15.16727543 -291.44473267]
[16.05758858 -276.34298706]
[12.23567104 -261.70578003]
[4.07595539 -248.96708679]
[-7.62215281 -239.37492371]
[-21.71259117 -233.86904907]
[-20.81977654 -218.89564514]
[-19.92695999 -203.92224121]
[-19.03414345 -188.94883728]
[-10.55302143 -176.70465088]
[-17.45520210 -162.46841431]
[-13.26819134 -148.06463623]
[-5.99496174 -134.94593811]
[1.27826750 -121.82724762]
[8.55149651 -108.70855713]
[15.82472610 -95.58985901]
[18.47915268 -94.68865967]
[20.93653679 -92.68170166]
[22.77392769 -89.63877869]
[23.60142136 -85.78134918]
[23.11379051 -81.46669769]
[29.59328651 -67.93835449]
[40.89447021 -63.62444305]
[46.40336227 -52.40678406]
[42.67716217 -40.05857849]
[48.95452118 -26.43526077]
[55.23188400 -12.81194496]
[61.50924301 0.81137162]
[67.78660583 14.43468761]
[74.06396484 28.05800438]
[90.07564545 33.20241165]
[97.55986786 48.63941956]
[91.44589233 65.02961731]
[97.92539215 78.55796814]
[104.40488434 92.08631134]
[107.82390594 93.87031555]
[110.43996429 97.15270233]
[111.60150146 101.54108429]
[110.85648346 106.36651611]
[116.72544861 120.17069244]
[122.59440613 133.97486877]
[128.46336365 147.77905273]
[134.33232117 161.58322144]
[146.85231018 171.25590515]
[144.71156311 185.99586487]
[150.58052063 199.80003357]
[165.75517273 199.72486877]
[179.76477051 205.44975281]
[190.48625183 216.07347107]
[196.30773926 229.95504761]
[196.37086487 244.96707153]
[190.69714355 258.82180786]
[180.17997742 269.41986084]
[192.69995117 279.09252930]
[190.55920410 293.83248901]
[196.42816162 307.63668823]
[202.29713440 321.44085693]
[208.16609192 335.24502563]
[214.03504944 349.04919434]
[219.90400696 362.85339355]
[220.89598083 347.88623047]
[225.83712769 333.72341919]
[234.37072754 321.38739014]
[245.88075256 311.76867676]
[259.53628540 305.56170654]
[274.35150146 303.21450806]
[289.25689697 304.89657593]
[303.17642212 310.48645020]
[315.10522461 319.58059692]
[324.18215942 331.52252197]
[329.75192261 345.45010376]
[331.41247559 360.35787964]
[329.04391479 375.16970825]
[322.81726074 388.81625366]
[313.18194580 400.31240845]
[300.83361816 408.82818604]
[286.66369629 413.74890137]
[271.69512939 414.71926880]
[257.00848389 411.66925049]
[243.66401672 404.81906128]
[232.62507629 394.66317749]
[224.68811035 381.93371582]
[226.02633667 396.87390137]
[227.36457825 411.81408691]
[228.70280457 426.75427246]
[230.04104614 441.69445801]
[231.37927246 456.63464355]
[232.71751404 471.57482910]
[247.63369751 473.72061157]
[261.65274048 479.24902344]
[274.01861572 487.86190796]
[284.06442261 499.09481812]
[291.24844360 512.34191895]
[295.18325806 526.88891602]
[295.65661621 541.95117188]
[292.64303589 556.71655273]
[286.30502319 570.38861084]
[276.98437500 582.23016357]
[265.18371582 591.60253906]
[251.53948975 598.00036621]
[236.78749084 601.07849121]
[221.72326660 600.67108154]
[207.15922546 596.79998779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 195]
[11 194]
[12 193]
[13 192]
[14 191]
[15 190]
[16 189]
[17 167]
[18 166]
[19 165]
[20 164]
[21 163]
[22 162]
[24 160]
[31 153]
[32 152]
[34 150]
[35 149]
[36 148]
[37 147]
[38 146]
[39 142]
[40 141]
[41 140]
[45 137]
[46 136]
[47 135]
[48 134]
[49 133]
[50 132]
[52 129]
[53 128]
[54 123]
[55 122]
[56 121]
[57 120]
[58 119]
[89 118]
[91 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
