%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[46.22226715 652.45611572]
[35.78614044 663.36437988]
[22.79341507 671.05151367]
[8.20823956 674.94702148]
[-6.88706827 674.76196289]
[-21.37233734 670.50994873]
[-34.17266464 662.50653076]
[-44.33817673 651.34570312]
[-51.11453247 637.85552979]
[-53.99887848 623.03723145]
[-52.77717590 607.99029541]
[-47.54008102 593.83135986]
[-38.67622375 581.61108398]
[-26.84336281 572.23632812]
[-12.91957283 566.40277100]
[2.06190777 564.54327393]
[4.28702497 549.70922852]
[6.51214218 534.87518311]
[8.73725891 520.04113770]
[6.62076378 512.96002197]
[11.10751915 505.00344849]
[13.55324650 490.20416260]
[15.99897385 475.40490723]
[18.44470215 460.60562134]
[16.69963646 457.54177856]
[16.35186768 453.48049927]
[17.85404396 449.08767700]
[21.34428024 445.20626831]
[24.44839096 430.53097534]
[27.55250168 415.85568237]
[19.40458107 407.86956787]
[16.08925056 396.82763672]
[18.54093742 385.43978882]
[26.26365471 376.55944824]
[37.42617035 372.46862793]
[40.96584320 357.89224243]
[44.50551605 343.31588745]
[48.04518890 328.73950195]
[33.02870178 319.40060425]
[22.08977318 305.47610474]
[16.55657768 288.63037109]
[17.10992050 270.88403320]
[23.69950485 254.37153625]
[35.54803467 241.08454895]
[51.24285889 232.63165283]
[68.90439606 230.04357910]
[71.57019043 215.28236389]
[74.23599243 200.52113342]
[76.90178680 185.75991821]
[79.56758118 170.99870300]
[82.23337555 156.23748779]
[73.55618286 144.18585205]
[76.04940033 129.17790222]
[88.74909973 120.15818024]
[91.41490173 105.39696503]
[89.63449860 97.53549194]
[94.23183441 90.43652344]
[97.11711121 75.71662903]
[100.00238037 60.99674225]
[102.77799225 46.25577927]
[105.44378662 31.49456215]
[108.10958099 16.73334312]
[110.77537537 1.97212672]
[113.44116974 -12.78909016]
[116.10697174 -27.55030823]
[110.94539642 -42.50586700]
[120.82141876 -53.65546417]
[121.60273743 -68.63510132]
[120.48709106 -83.59355927]
[119.37144470 -98.55200958]
[118.25579071 -113.51045990]
[109.00951385 -122.50318909]
[108.38823700 -134.98509216]
[116.18028259 -144.23768616]
[115.28746796 -159.21109009]
[100.43569183 -161.70722961]
[86.51850891 -167.44311523]
[74.23268127 -176.12812805]
[64.19251251 -187.32403564]
[56.89915466 -200.46722412]
[52.71556854 -214.89692688]
[51.84848404 -229.88861084]
[54.33818054 -244.69017029]
[60.05662155 -258.55984497]
[68.71404266 -270.80322266]
[79.87361908 -280.80816650]
[92.97352600 -288.07525635]
[107.35520935 -292.24288940]
[106.46239471 -307.21627808]
[105.56958008 -322.18969727]
[104.67676544 -337.16308594]
[103.78395081 -352.13650513]
[102.89112854 -367.10992432]
[88.16680145 -370.48196411]
[74.98959351 -377.86694336]
[64.42773438 -388.66619873]
[57.33742905 -402.00427246]
[54.29344940 -416.79989624]
[55.54255676 -431.85369873]
[60.98349762 -445.94528198]
[70.17519379 -457.93231201]
[82.37252045 -466.84310913]
[96.58669281 -471.95526123]
[111.66542816 -472.85433960]
[126.38636017 -469.46749878]
[139.55613708 -462.06927490]
[150.10714722 -451.25942993]
[157.18405151 -437.91424561]
[160.21316528 -423.11557007]
[158.94892883 -408.06301880]
[153.49383545 -393.97692871]
[144.29010010 -381.99911499]
[132.08383179 -373.10058594]
[117.86454010 -368.00271606]
[118.75735474 -353.02932739]
[119.65016937 -338.05590820]
[120.54298401 -323.08251953]
[121.43579865 -308.10910034]
[122.32861328 -293.13571167]
[137.10363770 -290.70660400]
[150.97428894 -285.04766846]
[163.24368286 -276.43972778]
[173.29466248 -265.31185913]
[180.62072754 -252.22000122]
[184.85166931 -237.81915283]
[185.77221680 -222.83067322]
[183.33296204 -208.00605774]
[177.65310669 -194.08932495]
[169.01449585 -181.77964783]
[157.84776306 -171.69624329]
[144.71080017 -164.34719849]
[130.26087952 -160.10389709]
[131.15368652 -145.13049316]
[141.59252930 -131.02384949]
[133.21424866 -114.62611389]
[134.32989502 -99.66765594]
[135.44554138 -84.70920563]
[136.56118774 -69.75075531]
[142.67932129 -83.44631958]
[152.86463928 -94.45809937]
[166.04226685 -101.62399292]
[180.82154846 -104.18776703]
[195.64277649 -101.87885284]
[208.94184875 -94.94092560]
[219.31526184 -84.10616302]
[225.66830444 -70.51797485]
[227.33050537 -55.61035538]
[224.12646484 -40.95654678]
[216.39431763 -28.10299492]
[204.95002747 -18.40617180]
[191.00137329 -12.88940144]
[176.02035522 -12.13488293]
[161.58798218 -16.22224426]
[149.22732544 -24.72013474]
[140.24282837 -36.73175049]
[135.58264160 -50.98966980]
[140.93487549 -37.08993149]
[130.86817932 -24.88451195]
[128.20239258 -10.12329483]
[125.53659821 4.63792229]
[122.87079620 19.39913940]
[120.20500183 34.16035843]
[117.53920746 48.92157364]
[119.44393158 56.06256866]
[114.72227478 63.88201523]
[111.83699799 78.60190582]
[108.95172882 93.32180023]
[106.17611694 108.06275940]
[103.51032257 122.82397461]
[112.25286865 135.71604919]
[109.33909607 150.64805603]
[96.99459076 158.90328979]
[94.32879639 173.66450500]
[91.66300201 188.42572021]
[88.99720764 203.18693542]
[86.33141327 217.94815063]
[83.66561890 232.70936584]
[94.87286377 238.11724854]
[104.44683838 246.04895020]
[111.83167267 256.03704834]
[116.60025787 267.49496460]
[118.47895050 279.75137329]
[117.36325073 292.08953857]
[113.32361603 303.78921509]
[106.60102844 314.16873169]
[97.59262848 322.62469482]
[86.82824707 328.66699219]
[74.93926239 331.94732666]
[62.62156296 332.27917480]
[59.08189392 346.85556030]
[55.54222107 361.43191528]
[52.00254822 376.00830078]
[62.46927261 391.79949951]
[58.14396667 409.91592407]
[42.22780228 418.95977783]
[39.12369156 433.63507080]
[36.01958466 448.31039429]
[33.24397278 463.05136108]
[30.79824448 477.85061646]
[28.35251808 492.64990234]
[25.90678978 507.44915771]
[23.57130241 522.26623535]
[21.34618568 537.10028076]
[19.12106895 551.93432617]
[16.89595222 566.76837158]
[30.67251205 572.94158936]
[42.27194214 582.60369873]
[50.83348846 595.03759766]
[55.72182083 609.32067871]
[56.57419968 624.39306641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 205]
[17 204]
[18 203]
[19 202]
[21 201]
[22 200]
[23 199]
[24 198]
[28 197]
[29 196]
[30 195]
[35 192]
[36 191]
[37 190]
[38 189]
[46 177]
[47 176]
[48 175]
[49 174]
[50 173]
[51 172]
[54 169]
[55 168]
[57 167]
[58 166]
[59 165]
[60 163]
[61 162]
[62 161]
[63 160]
[64 159]
[65 158]
[67 156]
[68 138]
[69 137]
[70 136]
[71 135]
[74 133]
[75 132]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
