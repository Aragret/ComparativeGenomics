%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[161.41674805 786.29309082]
[147.90927124 779.75988770]
[134.81666565 772.43048096]
[122.18582916 764.33129883]
[110.06197357 755.49114990]
[98.48848724 745.94183350]
[87.50681305 735.71740723]
[77.15625763 724.85455322]
[67.47387695 713.39215088]
[58.49432373 701.37121582]
[50.24975204 688.83477783]
[42.76966858 675.82769775]
[36.08085251 662.39654541]
[30.20724678 648.58947754]
[25.16987991 634.45581055]
[20.98678398 620.04614258]
[17.67293358 605.41217041]
[15.24018955 590.60620117]
[13.69726276 575.68121338]
[13.04967594 560.69067383]
[13.29974651 545.68823242]
[14.44658089 530.72760010]
[16.48607063 515.86236572]
[19.41091919 501.14566040]
[23.21065331 486.63024902]
[27.87167168 472.36804199]
[33.37728882 458.41009521]
[39.70779419 444.80642700]
[46.84053040 431.60568237]
[54.74995804 418.85513306]
[63.40776825 406.60043335]
[72.78296661 394.88543701]
[82.84199524 383.75207520]
[93.54883575 373.24023438]
[104.86517334 363.38751221]
[116.75048828 354.22918701]
[129.16223145 345.79806519]
[142.05598450 338.12429810]
[155.38557434 331.23535156]
[169.10330200 325.15591431]
[163.85658264 311.10345459]
[158.60987854 297.05099487]
[153.36315918 282.99850464]
[148.07859802 277.83175659]
[148.14463806 268.69757080]
[143.10772705 254.56854248]
[138.07080078 240.43951416]
[133.03388977 226.31048584]
[127.99697113 212.18144226]
[122.96005249 198.05241394]
[117.92314148 183.92338562]
[114.91133881 182.08998108]
[112.63793945 178.70668030]
[111.82172394 174.13644409]
[112.99218750 169.04948425]
[108.59118652 154.70964050]
[104.19019318 140.36979675]
[99.78919220 126.02994537]
[95.38819122 111.69009399]
[92.84450531 126.47283936]
[86.45674896 140.04475403]
[76.68607330 151.42604065]
[64.23782349 159.79510498]
[50.01065826 164.54776001]
[35.03164291 165.34091187]
[20.38212585 162.11729431]
[7.11966896 155.10963440]
[-3.79829812 144.82382202]
[-11.58359909 132.00239563]
[-15.67420673 117.57093811]
[-15.77481556 102.57127380]
[-11.87816429 88.08624268]
[-4.26555347 75.16152954]
[6.51345491 64.73018646]
[19.68071556 57.54524994]
[34.28567123 54.12541962]
[49.27397919 54.71756363]
[63.56361771 59.27894211]
[76.12300873 67.48026276]
[86.04547882 78.72946930]
[92.61508179 92.21556854]
[92.83840942 77.21723175]
[93.06173706 62.21889496]
[92.72676086 47.22263718]
[91.83394623 32.24923325]
[90.94112396 17.27582550]
[87.62523651 11.55600071]
[87.68653107 5.87328434]
[90.25139618 1.84457731]
[89.80479431 -13.14877224]
[89.35818481 -28.14212227]
[74.57649994 -31.04892540]
[60.81245804 -37.17256165]
[48.75646210 -46.20586777]
[39.01322937 -57.69573975]
[32.07147980 -71.06584930]
[28.27940941 -85.64556122]
[27.82722664 -100.70355988]
[30.73761177 -115.48454285]
[36.86458206 -129.24710083]
[45.90081024 -141.30090332]
[57.39304352 -151.04135132]
[70.76483154 -157.97985840]
[85.34545898 -161.76840210]
[100.40357208 -162.21693420]
[115.18384552 -159.30296326]
[128.94491577 -153.17266846]
[140.99653625 -144.13351440]
[150.73419189 -132.63891602]
[157.66946411 -119.26544952]
[161.45446777 -104.68390656]
[161.89935303 -89.62568665]
[158.98181152 -74.84612274]
[152.84817505 -61.08653259]
[143.80610657 -49.03710556]
[132.30915833 -39.30222702]
[118.93399811 -32.37020111]
[104.35153961 -28.58872795]
[104.79814148 -13.59537888]
[105.24475098 1.39797139]
[105.91453552 16.38301086]
[106.80735016 31.35641670]
[107.70016479 46.32982254]
[119.45722961 37.01470566]
[134.10420227 40.24989700]
[140.84385681 53.65052795]
[134.70799255 67.33815765]
[120.21973419 71.22277069]
[108.06007385 62.44222641]
[107.83674622 77.44055939]
[107.61341858 92.43889618]
[109.72804260 107.28909302]
[114.12903595 121.62894440]
[118.53003693 135.96879578]
[122.93103790 150.30863953]
[127.33203125 164.64848328]
[132.05216980 178.88647461]
[137.08908081 193.01550293]
[142.12600708 207.14453125]
[147.16291809 221.27355957]
[152.19982910 235.40258789]
[157.23675537 249.53161621]
[162.27366638 263.66064453]
[167.41561890 277.75180054]
[172.66233826 291.80426025]
[177.90905762 305.85671997]
[183.15577698 319.90921021]
[197.50115967 315.51083374]
[212.08389282 311.97824097]
[226.85179138 309.32406616]
[241.75199890 307.55783081]
[256.73114014 306.68588257]
[271.73565674 306.71130371]
[286.71176147 307.63400269]
[301.60589600 309.45068359]
[316.36471558 312.15484619]
[330.93542480 315.73681641]
[345.26580811 320.18374634]
[359.30459595 325.47976685]
[373.00155640 331.60586548]
[386.30761719 338.54016113]
[399.17517090 346.25778198]
[411.55813599 354.73114014]
[423.41220093 363.92987061]
[434.69491577 373.82107544]
[445.36587524 384.36932373]
[455.38693237 395.53686523]
[464.72219849 407.28372192]
[473.33822632 419.56784058]
[481.20419312 432.34524536]
[488.29193115 445.57019043]
[494.57608032 459.19537354]
[500.03411865 473.17196655]
[504.64654541 487.44995117]
[508.39685059 501.97824097]
[511.27154541 516.70477295]
[513.26043701 531.57690430]
[514.35632324 546.54132080]
[514.55529785 561.54455566]
[513.85662842 576.53277588]
[512.26287842 591.45245361]
[509.77975464 606.25006104]
[506.41610718 620.87268066]
[502.18395996 635.26794434]
[497.09848022 649.38439941]
[491.17788696 663.17144775]
[484.44338989 676.57971191]
[476.91906738 689.56121826]
[468.63183594 702.06951904]
[459.61138916 714.05981445]
[449.89004517 725.48919678]
[439.50256348 736.31671143]
[428.48611450 746.50366211]
[416.88018799 756.01354980]
[404.72631836 764.81231689]
[392.06796265 772.86853027]
[378.95046997 780.15325928]
[365.42083740 786.64044189]
[351.52740479 792.30688477]
[337.32000732 797.13232422]
[322.84942627 801.09948730]
[308.16751099 804.19409180]
[293.32681274 806.40515137]
[278.38043213 807.72473145]
[263.38186646 808.14801025]
[248.38485718 807.67364502]
[233.44305420 806.30322266]
[218.60995483 804.04162598]
[203.93865967 800.89703369]
[189.48168945 796.88061523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 147]
[41 146]
[42 145]
[43 144]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[50 138]
[51 137]
[55 136]
[56 135]
[57 134]
[58 133]
[59 132]
[81 131]
[82 130]
[83 129]
[84 123]
[85 122]
[86 121]
[89 120]
[90 119]
[91 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
