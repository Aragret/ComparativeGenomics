%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[123.57336426 573.23913574]
[108.55258942 573.30761719]
[93.64638519 571.45465088]
[79.09951782 567.71075439]
[65.15087128 562.13726807]
[52.02948761 554.82580566]
[39.95083237 545.89636230]
[29.11325073 535.49566650]
[19.69470215 523.79443359]
[11.84985065 510.98477173]
[5.70751333 497.27709961]
[1.36855388 482.89651489]
[-1.09577763 468.07910156]
[-1.64501500 453.06823730]
[-0.27013904 438.11035156]
[3.00627327 423.45111084]
[8.13042068 409.33120728]
[15.01815987 395.98251343]
[23.55638695 383.62423706]
[33.60489655 372.45932007]
[44.99868774 362.67105103]
[57.55065536 354.42022705]
[71.05469513 347.84228516]
[85.28904724 343.04525757]
[100.01998138 340.10791016]
[115.00559235 339.07849121]
[115.89840698 324.10507202]
[116.79122925 309.13168335]
[117.68404388 294.15826416]
[118.57685852 279.18487549]
[119.46967316 264.21145630]
[120.36248779 249.23805237]
[121.25530243 234.26464844]
[114.28926086 221.09941101]
[122.83424377 207.78424072]
[121.16270447 192.87765503]
[116.97569275 178.47387695]
[112.78868103 164.07009888]
[108.60166931 149.66632080]
[104.09404755 135.35963440]
[99.26804352 121.15717316]
[84.30135345 114.20261383]
[78.87542725 98.61649323]
[86.28784180 83.87119293]
[81.25093079 69.74216461]
[76.21401215 55.61313248]
[71.17709351 41.48410416]
[65.51431274 27.59407616]
[59.23694992 13.97076035]
[52.95958710 0.34744453]
[46.68222809 -13.27587128]
[40.40486526 -26.89918709]
[34.12750626 -40.52250290]
[27.85014534 -54.14582062]
[21.57278442 -67.76913452]
[17.32918739 -53.38192368]
[5.51011801 -44.14560318]
[-9.47620010 -43.50509262]
[-22.04024315 -51.69928741]
[-27.49593163 -65.67195892]
[-23.80843163 -80.21163940]
[-12.35308647 -89.89539337]
[2.59754157 -91.11141205]
[15.46800995 -83.40528870]
[10.85400105 -97.67801666]
[6.23999119 -111.95075226]
[1.62598205 -126.22348785]
[-3.51597762 -140.31462097]
[-9.17876434 -154.20465088]
[-14.84155083 -168.09468079]
[-20.50433731 -181.98471069]
[-26.16712379 -195.87474060]
[-40.77328491 -192.33670044]
[-55.74363327 -191.01521301]
[-70.74372864 -191.93980408]
[-85.43845367 -195.08981323]
[-99.49953461 -200.39488220]
[-112.61283875 -207.73646545]
[-124.48540497 -216.95057678]
[-134.85200500 -227.83135986]
[-143.48103333 -240.13572693]
[-150.17971802 -253.58880615]
[-154.79841614 -267.89004517]
[-157.23393250 -282.71994019]
[-157.43186951 -297.74719238]
[-155.38778687 -312.63610840]
[-151.14736938 -327.05401611]
[-144.80534363 -340.67886353]
[-136.50338745 -353.20623779]
[-126.42697144 -364.35629272]
[-114.80120850 -373.87991333]
[-101.88582611 -381.56433105]
[-87.96935272 -387.23791504]
[-73.36268616 -390.77386475]
[-58.39214706 -392.09320068]
[-43.39218521 -391.16647339]
[-28.69790649 -388.01437378]
[-14.63758087 -382.70730591]
[-1.52532470 -375.36386108]
[10.34593010 -366.14807129]
[20.71097565 -355.26580811]
[29.33825302 -342.96020508]
[36.03502274 -329.50616455]
[40.65167999 -315.20428467]
[43.08509064 -300.37402344]
[43.28087997 -285.34674072]
[41.23468399 -270.45812988]
[36.99221420 -256.04083252]
[30.64824295 -242.41688538]
[22.34450340 -229.89068604]
[12.26650143 -218.74208069]
[0.63938296 -209.22010803]
[-12.27709675 -201.53752136]
[-6.61431026 -187.64749146]
[-0.95152384 -173.75746155]
[4.71126270 -159.86744690]
[10.37404919 -145.97741699]
[18.50901604 -158.57987976]
[33.41807556 -160.22912598]
[44.11082077 -149.70936584]
[42.70495987 -134.77540588]
[30.23684120 -126.43597412]
[15.89871502 -130.83749390]
[20.51272392 -116.56475830]
[25.12673378 -102.29203033]
[29.74074364 -88.01929474]
[35.19610214 -74.04649353]
[41.47346115 -60.42317963]
[47.75082016 -46.79986572]
[54.02818298 -33.17654800]
[60.30554199 -19.55323219]
[66.58290100 -5.92991638]
[72.86026764 7.69339991]
[79.13762665 21.31671524]
[85.33454132 7.65661812]
[99.32645416 2.25049353]
[113.09817505 8.19521618]
[118.76062775 22.08537865]
[113.07010651 35.96406555]
[99.28639984 41.88093567]
[85.30612183 36.44718933]
[90.34304047 50.57621765]
[95.37995911 64.70524597]
[100.41687012 78.83427429]
[112.43344879 82.86608887]
[119.99297333 93.03993225]
[120.38557434 105.70877075]
[113.47050476 116.33117676]
[118.29650116 130.53363037]
[122.22323608 133.97279358]
[124.23677063 138.15596008]
[124.37407684 142.22981262]
[123.00545502 145.47930908]
[127.19246674 159.88308716]
[131.37947083 174.28686523]
[135.56648254 188.69064331]
[138.23480225 173.92988586]
[144.44363403 160.27520752]
[153.81335449 148.56159973]
[165.77096558 139.50537109]
[179.58526611 133.66027832]
[194.41151428 131.38378906]
[209.34307861 132.81509399]
[223.46687317 137.86666870]
[235.91923523 146.22959900]
[245.93869019 157.39250183]
[252.91255188 170.67276001]
[256.41436768 185.25828552]
[256.22998047 200.25714111]
[252.37069702 214.75218201]
[245.07249451 227.85699463]
[234.78166199 238.77023315]
[222.12748718 246.82453918]
[207.88378906 251.52740479]
[192.92155457 252.59123230]
[178.15574646 249.95097351]
[164.48930359 243.76808167]
[152.75791931 234.42063904]
[143.67897034 222.48025513]
[137.80764771 208.67704773]
[144.70983887 222.91328430]
[136.22871399 235.15745544]
[135.33589172 250.13087463]
[134.44308472 265.10427856]
[133.55026245 280.07766724]
[132.65744019 295.05108643]
[131.76463318 310.02450562]
[130.87181091 324.99789429]
[129.97900391 339.97131348]
[144.73609924 342.77420044]
[159.01361084 347.44119263]
[172.57707214 353.89572144]
[185.20376587 362.03176880]
[196.68634033 371.71569824]
[206.83625793 382.78854370]
[215.48681641 395.06845093]
[222.49600220 408.35375977]
[227.74870300 422.42633057]
[231.15866089 437.05508423]
[232.66989136 451.99981689]
[232.25755310 467.01507568]
[229.92845154 481.85433960]
[225.72080994 496.27392578]
[219.70373535 510.03701782]
[211.97602844 522.91766357]
[202.66458130 534.70428467]
[191.92228699 545.20343018]
[179.92556763 554.24261475]
[166.87139893 561.67346191]
[152.97416687 567.37390137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 189]
[27 188]
[28 187]
[29 186]
[30 185]
[31 184]
[32 183]
[33 182]
[35 180]
[36 156]
[37 155]
[38 154]
[39 153]
[40 149]
[41 148]
[44 144]
[45 143]
[46 142]
[47 141]
[48 134]
[49 133]
[50 132]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
[64 126]
[65 125]
[66 124]
[67 123]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
