%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[59.98106384 686.18530273]
[61.63243866 701.16430664]
[59.78431320 716.12023926]
[54.53635025 730.24670410]
[46.17156982 742.78173828]
[35.14107513 753.04937744]
[22.03972435 760.49597168]
[7.57405615 764.71984863]
[-7.47581291 765.49322510]
[-22.29826164 762.77447510]
[-36.09393692 756.71014404]
[-48.11885071 747.62725830]
[-57.72452164 736.01574707]
[-64.39292145 722.50170898]
[-67.76442719 707.81396484]
[-67.65723419 692.74462891]
[-64.07711029 678.10632324]
[-57.21712875 664.68853760]
[-47.44724274 653.21484375]
[-35.29432678 644.30395508]
[-21.41377449 638.43652344]
[-6.55414772 635.92889404]
[8.48319530 636.91632080]
[12.88419342 622.57647705]
[17.28519249 608.23663330]
[21.68618965 593.89678955]
[26.08718681 579.55694580]
[30.48818588 565.21710205]
[34.88918304 550.87725830]
[39.29018021 536.53741455]
[31.71984673 526.11053467]
[31.53450394 513.03204346]
[39.02585220 502.07345581]
[51.64395905 497.36196899]
[56.25796509 483.08923340]
[60.87197495 468.81649780]
[65.48598480 454.54376221]
[70.09999847 440.27102661]
[72.87560272 425.53009033]
[62.82778931 414.59494019]
[63.51992798 399.39706421]
[75.05782318 388.93212891]
[75.95063782 373.95874023]
[76.84345245 358.98532104]
[77.62477875 344.00570679]
[78.29456329 329.02066040]
[78.96434784 314.03561401]
[79.63413239 299.05056763]
[80.30391693 284.06555176]
[80.97370148 269.08050537]
[81.64348602 254.09545898]
[82.31327057 239.11042786]
[79.80867004 235.04397583]
[79.83199310 229.36097717]
[83.23267365 223.69114685]
[84.34832001 208.73269653]
[85.46397400 193.77424622]
[78.69470978 180.50674438]
[87.43698883 167.32028198]
[88.55264282 152.36181641]
[89.66828918 137.40336609]
[90.78393555 122.44491577]
[91.89958954 107.48646545]
[79.00341034 115.14731598]
[64.91997528 109.98427582]
[60.03107071 95.80335999]
[67.94061279 83.05818939]
[82.81797791 81.14405060]
[93.69553375 91.47042084]
[95.92065430 76.63637543]
[98.14577484 61.80233002]
[89.02325439 49.17626953]
[91.49115753 34.16413879]
[103.58439636 25.54502106]
[105.80950928 10.71097851]
[108.03462982 -4.12306547]
[110.25974274 -18.95710945]
[104.65518188 -33.75236130]
[114.19485474 -45.19105911]
[107.05938721 -62.16653061]
[118.51851654 -75.45770264]
[120.52252960 -90.32322693]
[107.19323730 -83.44355011]
[93.44208527 -89.43569183]
[89.40590668 -103.88246918]
[98.06002808 -116.13424683]
[113.02495575 -117.15948486]
[123.26859283 -106.20397949]
[126.37270355 -120.87928009]
[129.47680664 -135.55458069]
[132.58091736 -150.22988892]
[135.68502808 -164.90518188]
[138.78913879 -179.58049011]
[141.89324951 -194.25579834]
[144.99736023 -208.93109131]
[147.88262939 -223.65098572]
[150.43846130 -238.43164062]
[152.88420105 -253.23091125]
[155.32992554 -268.03018188]
[141.52545166 -274.10369873]
[129.66560364 -283.42007446]
[120.49590302 -295.39367676]
[114.59275818 -309.27185059]
[112.32724762 -324.18218994]
[113.84177399 -339.18740845]
[119.04115295 -353.34429932]
[127.59852600 -365.76293945]
[138.97598267 -375.66262817]
[152.45832825 -382.42114258]
[167.19804382 -385.61358643]
[182.26856995 -385.03927612]
[196.72257996 -380.73434448]
[209.65147400 -372.96939087]
[220.24252319 -362.23254395]
[227.82998657 -349.19866943]
[231.93688965 -334.68716431]
[232.30506897 -319.61016846]
[228.91139221 -304.91549683]
[221.96919250 -291.52682495]
[211.91484070 -280.28579712]
[199.38038635 -271.89901733]
[185.15373230 -266.89367676]
[170.12919617 -265.58444214]
[167.68347168 -250.78518677]
[165.23773193 -235.98591614]
[167.24856567 -228.87406921]
[162.64384460 -220.98518372]
[164.58271790 -216.62057495]
[163.80035400 -210.99163818]
[159.67266846 -205.82698059]
[156.56855774 -191.15168762]
[153.46444702 -176.47637939]
[150.36033630 -161.80107117]
[147.25622559 -147.12577820]
[144.15211487 -132.45046997]
[141.04800415 -117.77516937]
[137.94389343 -103.09986877]
[135.38806152 -88.31921387]
[133.38404846 -73.45368195]
[140.46633911 -63.64717102]
[138.91842651 -51.24605179]
[129.02890015 -42.96594238]
[134.79261780 -29.23172379]
[125.09378815 -16.73199272]
[122.86867523 -1.89794850]
[120.64355469 12.93609524]
[118.41843414 27.77013969]
[127.45059967 39.55808258]
[125.40533447 54.63360977]
[112.97981262 64.02745056]
[110.75469971 78.86149597]
[108.52957916 93.69553375]
[106.85803986 108.60211182]
[105.74239349 123.56056213]
[104.62673950 138.51901245]
[103.51109314 153.47747803]
[102.39544678 168.43592834]
[109.08490753 182.77334595]
[100.42242432 194.88989258]
[99.30677795 209.84834290]
[98.19112396 224.80679321]
[97.29830933 239.78021240]
[96.62852478 254.76524353]
[95.95874023 269.75027466]
[95.28895569 284.73532104]
[94.61917114 299.72036743]
[93.94938660 314.70541382]
[93.27960205 329.69042969]
[92.60981750 344.67547607]
[95.35291290 353.38830566]
[91.81685638 359.87814331]
[90.92404175 374.85156250]
[90.03122711 389.82495117]
[100.24381256 401.58679199]
[99.12506866 416.75924683]
[87.84901428 426.42288208]
[95.74202728 413.66748047]
[107.30722046 404.11520386]
[121.32408905 398.77407837]
[136.31340027 398.20782471]
[150.69328308 402.47616577]
[162.94621277 411.12866211]
[171.77909851 423.25219727]
[176.25979614 437.56735229]
[175.91543579 452.56338501]
[170.78234863 466.65777588]
[161.40226746 478.36306763]
[148.76507568 486.44400024]
[134.20440674 490.04776001]
[119.25689697 488.79403687]
[105.49997711 482.81512451]
[94.38545990 472.74203491]
[87.08627319 459.63775635]
[84.37272644 444.88504028]
[79.75872040 459.15777588]
[75.14470673 473.43051147]
[70.53070068 487.70324707]
[65.91669464 501.97598267]
[74.16560364 517.40240479]
[68.81086731 533.70092773]
[53.63002777 540.93841553]
[49.22903061 555.27825928]
[44.82803345 569.61810303]
[40.42703629 583.95794678]
[36.02603531 598.29779053]
[31.62503815 612.63763428]
[27.22404099 626.97747803]
[22.82304192 641.31732178]
[35.82537842 648.93548584]
[46.71995544 659.34722900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 208]
[24 207]
[25 206]
[26 205]
[27 204]
[28 203]
[29 202]
[30 201]
[34 198]
[35 197]
[36 196]
[37 195]
[38 194]
[39 176]
[42 173]
[43 172]
[44 171]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[55 161]
[56 160]
[57 159]
[59 157]
[60 156]
[61 155]
[62 154]
[63 153]
[69 152]
[70 151]
[71 150]
[74 147]
[75 146]
[76 145]
[77 144]
[79 142]
[81 139]
[82 138]
[88 137]
[89 136]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 127]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
