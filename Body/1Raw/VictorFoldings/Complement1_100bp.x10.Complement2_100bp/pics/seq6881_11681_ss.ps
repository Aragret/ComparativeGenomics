%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[76.04115295 527.50524902]
[70.52872467 541.50268555]
[62.53793716 554.24871826]
[52.34094620 565.30932617]
[40.28506851 574.30767822]
[26.78091240 580.93731689]
[12.28843021 584.97247314]
[-2.69877172 586.27569580]
[-17.67023468 584.80267334]
[-32.11603546 580.60339355]
[-45.54415512 573.82104492]
[-57.49723816 564.68658447]
[-67.56816864 553.51116943]
[-75.41392517 540.67529297]
[-80.76729584 526.61627197]
[-83.44594574 511.81292725]
[-83.35863495 496.76940918]
[-80.50833893 481.99813843]
[-74.99213409 468.00219727]
[-66.99790955 455.25830078]
[-56.79794312 444.20050049]
[-44.73963928 435.20538330]
[-31.23369598 428.57937622]
[-16.74012756 424.54809570]
[-1.75257468 423.24890137]
[13.21848965 424.72601318]
[17.40550041 410.32223511]
[21.59251213 395.91845703]
[20.44103432 388.61804199]
[25.95057106 381.33224487]
[30.35156822 366.99240112]
[29.30891037 359.67565918]
[34.92631149 352.47271729]
[39.54032135 338.19998169]
[44.15433121 323.92724609]
[48.76834106 309.65451050]
[53.38234711 295.38177490]
[57.78334808 281.04193115]
[61.97035599 266.63815308]
[65.51003265 252.06176758]
[68.39530182 237.34187317]
[71.28057861 222.62199402]
[74.16584778 207.90209961]
[76.83164215 193.14088440]
[71.27304840 179.32237244]
[81.15690613 166.96842957]
[83.60263062 152.16915894]
[86.04835510 137.36988831]
[88.49408722 122.57061005]
[90.93981171 107.77133942]
[81.49091339 119.42115784]
[68.50802612 126.93412781]
[53.69927597 129.32177734]
[39.01300430 126.26998138]
[26.38144875 118.18025208]
[17.46650124 106.11692810]
[13.44108009 91.66716003]
[14.83479786 76.73204803]
[21.46428680 63.27656937]
[32.45732498 53.07102585]
[46.36758804 47.45812988]
[61.36494064 47.17635345]
[75.47622681 52.26277161]
[86.84485626 62.04817963]
[93.97509766 75.24513245]
[95.92872620 90.11972809]
[101.59150696 76.22970581]
[104.91377258 61.60224152]
[105.80658722 46.62883759]
[106.69940186 31.65543175]
[107.59221649 16.68202591]
[108.48503113 1.70861959]
[109.37784576 -13.26478577]
[110.27066803 -28.23819160]
[110.49399567 -43.23653030]
[110.04738617 -58.22987747]
[109.48917389 -73.21949005]
[98.10836792 -83.85504150]
[97.64257812 -99.06154633]
[107.85208893 -109.84586334]
[107.18230438 -124.83090210]
[106.51251984 -139.81593323]
[105.84273529 -154.80097961]
[105.17295074 -169.78601074]
[104.50316620 -184.77105713]
[103.72183990 -199.75068665]
[102.82902527 -214.72409058]
[91.79281616 -222.44528198]
[87.28440857 -234.93066406]
[90.73896790 -247.54605103]
[100.67918396 -255.74491882]
[100.00939941 -270.72994995]
[99.33961487 -285.71499634]
[90.36518097 -294.97903442]
[90.11581421 -307.47390747]
[98.17989349 -316.49038696]
[97.73328400 -331.48373413]
[97.28667450 -346.47708130]
[83.32312775 -352.64004517]
[73.42293549 -364.25680542]
[69.55179596 -379.02084351]
[72.47833252 -394.00076294]
[81.62146759 -406.22229004]
[95.16584015 -413.25885010]
[110.42218781 -413.71328735]
[124.36136627 -407.49539185]
[134.21572876 -395.83972168]
[138.02870178 -381.06054688]
[135.04319763 -366.09228516]
[125.85199738 -353.90682983]
[112.28002930 -346.92370605]
[112.72663116 -331.93035889]
[113.17324066 -316.93701172]
[123.18744659 -302.52578735]
[114.32465363 -286.38479614]
[114.99443817 -271.39974976]
[115.66422272 -256.41470337]
[128.54895020 -245.60626221]
[129.65159607 -228.48612976]
[117.80242920 -215.61691284]
[118.69524384 -200.64350891]
[122.23130035 -194.15365601]
[119.48820496 -185.44084167]
[120.15798950 -170.45579529]
[120.82777405 -155.47076416]
[121.49755859 -140.48571777]
[122.16734314 -125.50068665]
[122.83712769 -110.51564789]
[133.96806335 -100.68518066]
[134.86077881 -85.49776459]
[124.47421265 -73.88927460]
[127.91325378 -67.34749603]
[125.04073334 -58.67648697]
[125.48734283 -43.68313599]
[136.53492737 -53.82960129]
[151.52661133 -53.33020401]
[161.87448120 -42.47102737]
[161.65078735 -27.47269440]
[150.98368835 -16.92693520]
[135.98377991 -16.87483788]
[125.24407196 -27.34537697]
[124.35125732 -12.37197018]
[123.45844269 2.60143542]
[122.56562042 17.57484055]
[121.67280579 32.54824829]
[120.77999115 47.52165222]
[119.88717651 62.49505997]
[127.39324188 49.50818253]
[137.96716309 38.86900711]
[150.90762329 31.28318596]
[165.35630798 27.25386429]
[180.35490417 27.04829025]
[194.90859985 30.68009758]
[208.05209351 37.90840530]
[218.91363525 48.25378036]
[226.77282715 61.03005600]
[231.10838318 75.38982391]
[231.63273621 90.38066101]
[228.31112671 105.00826263]
[221.36384583 118.30245209]
[211.25169373 129.38145447]
[198.64537048 137.51045227]
[184.38101196 142.15028381]
[169.40470886 142.99317932]
[154.70979309 139.98326111]
[141.27093506 133.32014465]
[129.97947693 123.44579315]
[121.58433533 111.01512146]
[116.64234161 96.85260773]
[115.48153687 81.89248657]
[109.81874847 95.78251648]
[105.73908234 110.21707153]
[103.29335785 125.01634216]
[100.84762573 139.81561279]
[98.40190125 154.61488342]
[95.95617676 169.41415405]
[101.33983612 184.29121399]
[91.63091278 195.58660889]
[93.59760284 201.89878845]
[92.27920532 207.42680359]
[88.88574219 210.78736877]
[86.00046539 225.50726318]
[83.11519623 240.22715759]
[80.22991943 254.94705200]
[93.25041199 247.49943542]
[107.75915527 251.30685425]
[115.44488525 264.18823242]
[111.90486145 278.76449585]
[99.16697693 286.68576050]
[84.52806854 283.41433716]
[76.37413788 270.82516479]
[72.18712616 285.22894287]
[73.38980103 291.73010254]
[71.42384338 297.06228638]
[67.65508270 299.99578857]
[63.04107285 314.26852417]
[58.42706299 328.54125977]
[53.81305313 342.81399536]
[49.19904327 357.08673096]
[44.69141769 371.39340210]
[40.29041672 385.73324585]
[35.99629593 400.10546875]
[31.80928230 414.50924683]
[27.62227249 428.91302490]
[41.05221939 435.69177246]
[53.00776291 444.82299805]
[63.08170319 455.99575806]
[70.93092346 468.82946777]
[76.28808594 482.88705444]
[78.97072601 497.68969727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 204]
[27 203]
[28 202]
[30 201]
[31 200]
[33 199]
[34 198]
[35 197]
[36 196]
[37 195]
[38 192]
[39 191]
[40 184]
[41 183]
[42 182]
[43 181]
[44 178]
[46 176]
[47 175]
[48 174]
[49 173]
[50 172]
[66 171]
[67 170]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 134]
[76 133]
[77 131]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[86 121]
[87 120]
[91 117]
[92 116]
[93 115]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
