%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[129.41043091 517.09320068]
[124.44586945 502.92330933]
[121.01562500 488.30599976]
[119.15856171 473.40689087]
[118.89572144 458.39480591]
[120.23007965 443.43981934]
[123.14653015 428.71139526]
[127.61201477 414.37643433]
[133.57594299 400.59732056]
[140.97073364 387.53021240]
[149.71260071 375.32318115]
[159.70248413 364.11450195]
[170.82720947 354.03121948]
[182.96070862 345.18756104]
[195.96549988 337.68374634]
[189.89166260 323.96847534]
[183.81784058 310.25320435]
[178.23512268 305.41015625]
[177.75735474 296.28823853]
[171.88839722 282.48403931]
[166.01943970 268.67987061]
[160.15048218 254.87570190]
[145.58082581 245.09346008]
[147.96636963 226.83445740]
[141.89253235 213.11920166]
[135.81869507 199.40393066]
[123.59053040 190.89973450]
[125.07714081 175.14852905]
[119.00331116 161.43327332]
[112.92947388 147.71800232]
[98.98554993 142.60893250]
[92.63043976 128.78623962]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[80.25421143 79.15660095]
[70.59340668 67.68190002]
[55.78646851 62.10828018]
[53.50829697 47.38893127]
[43.84748459 35.91423416]
[34.18667603 24.43953323]
[16.73179436 18.57364464]
[14.33223724 1.18948400]
[4.50165606 -10.14010906]
[-13.03862476 -15.74546909]
[-15.69674015 -33.09197617]
[-25.69491196 -44.27395248]
[-35.69308472 -55.45592880]
[-45.69125748 -66.63790131]
[-55.68942642 -77.81987762]
[-67.82116699 -68.97682953]
[-80.77311707 -61.38567352]
[-94.41654968 -55.12185669]
[-108.61585999 -50.24763107]
[-123.22994232 -46.81144333]
[-138.11352539 -44.84744263]
[-153.11871338 -44.37514496]
[-168.09635925 -45.39925003]
[-182.89759827 -47.90958023]
[-197.37535095 -51.88117981]
[-211.38569641 -57.27458191]
[-224.78939819 -64.03617859]
[-237.45326233 -72.09877014]
[-249.25138855 -81.38223267]
[-260.06655884 -91.79428864]
[-269.79125977 -103.23145294]
[-278.32882690 -115.58007050]
[-285.59445190 -128.71740723]
[-291.51589966 -142.51287842]
[-296.03430176 -156.82939148]
[-299.10476685 -171.52465820]
[-300.69677734 -186.45262146]
[-300.79452515 -201.46492004]
[-299.39700317 -216.41235352]
[-296.51812744 -231.14634705]
[-292.18652344 -245.52047729]
[-286.44522095 -259.39187622]
[-279.35128784 -272.62271118]
[-270.97521973 -285.08145142]
[-261.40023804 -296.64425659]
[-250.72157288 -307.19625854]
[-239.04531860 -316.63253784]
[-226.48751831 -324.85934448]
[-213.17298889 -331.79489136]
[-199.23405457 -337.37026978]
[-184.80924988 -341.53002930]
[-170.04194641 -344.23287964]
[-155.07890320 -345.45190430]
[-140.06884766 -345.17504883]
[-125.16094208 -343.40499878]
[-110.50336456 -340.15939331]
[-96.24179077 -335.47045898]
[-82.51795197 -329.38482666]
[-69.46826172 -321.96295166]
[-57.22240829 -313.27862549]
[-45.90209961 -303.41812134]
[-35.61984253 -292.47949219]
[-26.47783852 -280.57141113]
[-18.56694031 -267.81225586]
[-11.96577358 -254.32879639]
[-6.73994541 -240.25509644]
[-2.94139433 -225.73098755]
[-0.60787243 -210.90083313]
[0.23742783 -195.91203308]
[-0.41389477 -180.91355896]
[-2.55536699 -166.05445862]
[-6.16570520 -151.48243713]
[-11.20902729 -137.34230042]
[-17.63521004 -123.77458191]
[-25.38038254 -110.91414642]
[-34.36757278 -98.88879395]
[-44.50745392 -87.81804657]
[-34.50928116 -76.63607025]
[-24.51110840 -65.45410156]
[-14.51293755 -54.27212524]
[-4.51476526 -43.09014893]
[7.54137945 -42.10225296]
[15.96253586 -32.86819077]
[15.83124924 -19.97068977]
[25.66183090 -8.64109707]
[37.70193100 -7.47381258]
[45.98467255 1.88460410]
[45.66137695 14.77872276]
[55.32218552 26.25342178]
[64.98299408 37.72812271]
[79.09893036 42.48099136]
[82.06809998 58.02108765]
[91.72891235 69.49578857]
[88.43967438 54.86086655]
[89.55040741 39.90205002]
[94.96504211 25.91341782]
[104.21514130 14.10513306]
[116.50049591 5.49872828]
[130.75828552 0.83874297]
[145.75506592 0.52831316]
[160.19348145 4.59429407]
[172.82446289 12.68493748]
[182.55528259 24.10032082]
[188.54414368 37.85290146]
[190.27296448 52.75294113]
[187.59214783 67.51144409]
[180.73364258 80.85163879]
[170.29077148 91.61947632]
[157.16694641 98.88343048]
[142.49749756 102.01509094]
[127.55148315 100.74353790]
[113.62189484 95.17877960]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[126.26860046 113.88950348]
[132.23295593 127.88526154]
[126.64474487 141.64416504]
[132.71858215 155.35943604]
[138.79240417 169.07469177]
[151.45501709 178.55989075]
[149.53396606 193.33009338]
[155.60780334 207.04536438]
[161.68162537 220.76063538]
[173.41073608 226.12634277]
[178.18728638 237.67486572]
[173.95465088 249.00674438]
[179.82362366 262.81091309]
[185.69258118 276.61508179]
[191.56153870 290.41928101]
[197.53309631 304.17938232]
[203.60693359 317.89465332]
[209.68077087 331.60989380]
[223.97743225 327.02322388]
[238.68063354 323.98217773]
[253.62377930 322.52127075]
[268.63757324 322.65701294]
[283.55184937 324.38787842]
[298.19769287 327.69424438]
[312.40905762 332.53866577]
[326.02502441 338.86624146]
[338.89123535 346.60528564]
[350.86190796 355.66809082]
[361.80145264 365.95199585]
[371.58590698 377.34045410]
[380.10437012 389.70443726]
[387.26034546 402.90380859]
[392.97271729 416.78909302]
[397.17681885 431.20288086]
[399.82498169 445.98190308]
[400.88720703 460.95867920]
[400.35147095 475.96350098]
[398.22381592 490.82638550]
[394.52835083 505.37890625]
[389.30694580 519.45617676]
[382.61880493 532.89868164]
[374.53967285 545.55407715]
[365.16110229 557.27905273]
[354.58935547 567.94067383]
[342.94421387 577.41815186]
[330.35763550 585.60412598]
[316.97225952 592.40588379]
[302.93969727 597.74621582]
[288.41900635 601.56475830]
[273.57467651 603.81817627]
[258.57489014 604.48095703]
[243.58967590 603.54553223]
[228.78877258 601.02258301]
[214.33988953 596.94067383]
[200.40676880 591.34606934]
[187.14724731 584.30206299]
[174.71160889 575.88861084]
[163.24072266 566.20092773]
[152.86457825 555.34881592]
[143.70074463 543.45526123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 168]
[16 167]
[17 166]
[19 165]
[20 164]
[21 163]
[22 162]
[24 159]
[25 158]
[26 157]
[28 155]
[29 154]
[30 153]
[33 150]
[35 148]
[36 128]
[37 127]
[39 125]
[40 124]
[41 123]
[43 120]
[44 119]
[46 116]
[47 115]
[48 114]
[49 113]
[50 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
