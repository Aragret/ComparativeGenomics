%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[35.23589706 354.37298584]
[28.80307770 367.92944336]
[21.50623894 381.04107666]
[13.37598610 393.65289307]
[4.44642067 405.71200562]
[-5.24500370 417.16778564]
[-15.65763760 427.97222900]
[-26.74780655 438.07998657]
[-38.46899414 447.44869995]
[-50.77203369 456.03906250]
[-63.60533142 463.81500244]
[-76.91504669 470.74395752]
[-90.64536285 476.79684448]
[-104.73868561 481.94824219]
[-119.13591003 486.17660522]
[-133.77664185 489.46417236]
[-148.59945679 491.79711914]
[-163.54222107 493.16571045]
[-178.54222107 493.56417847]
[-193.53656006 492.99087524]
[-208.46234131 491.44818115]
[-223.25695801 488.94256592]
[-237.85836792 485.48455811]
[-252.20532227 481.08865356]
[-266.23764038 475.77328491]
[-279.89645386 469.56076050]
[-293.12448120 462.47711182]
[-305.86627197 454.55209351]
[-318.06832886 445.81887817]
[-329.67950439 436.31417847]
[-340.65106201 426.07778931]
[-350.93704224 415.15270996]
[-360.49426270 403.58471680]
[-369.28262329 391.42233276]
[-377.26531982 378.71658325]
[-384.40878296 365.52078247]
[-390.68313599 351.89022827]
[-396.06201172 337.88214111]
[-400.52285767 323.55526733]
[-404.04699707 308.96966553]
[-406.61959839 294.18655396]
[-408.22988892 279.26791382]
[-408.87112427 264.27633667]
[-408.54058838 249.27467346]
[-407.23971558 234.32586670]
[-404.97390747 219.49263000]
[-401.75271606 204.83715820]
[-397.58963013 190.42092896]
[-392.50210571 176.30441284]
[-386.51150513 162.54681396]
[-379.64291382 149.20585632]
[-371.92517090 136.33746338]
[-363.39065552 123.99562836]
[-354.07513428 112.23212433]
[-344.01770020 101.09628296]
[-333.26052856 90.63481140]
[-321.84875488 80.89159393]
[-309.83023071 71.90748596]
[-297.25537109 63.72018814]
[-284.17694092 56.36402893]
[-270.64974976 49.86986542]
[-256.73056030 44.26493835]
[-242.47776794 39.57275391]
[-227.95112610 35.81299591]
[-213.21159363 33.00143051]
[-198.32096863 31.14985466]
[-183.34172058 30.26603127]
[-168.33668518 30.35366821]
[-153.36878967 31.41239929]
[-138.50080872 33.43778229]
[-123.79512024 36.42132568]
[-109.31339264 40.35050964]
[-95.11637115 45.20885468]
[-81.26360321 50.97598648]
[-67.81320190 57.62771606]
[-54.82156754 65.13613892]
[-42.34320068 73.46976471]
[-30.43044281 82.59363556]
[-19.13325500 92.46949005]
[-8.49902439 103.05590057]
[1.42764592 114.30845642]
[10.60511875 126.17997742]
[18.99490166 138.62065125]
[31.94789886 131.05627441]
[44.90089798 123.49189758]
[57.85389709 115.92751312]
[70.80689240 108.36313629]
[83.75989532 100.79875946]
[91.69604492 86.02060699]
[108.47002411 86.12059784]
[121.30895996 78.36420441]
[129.12004089 64.60565186]
[144.01458740 64.64705658]
[156.85351562 56.89066696]
[169.69245911 49.13427353]
[182.53140259 41.37788391]
[195.37034607 33.62149429]
[208.20928955 25.86510086]
[201.41891479 12.48234653]
[195.63545227 -1.36534989]
[190.89045715 -15.60235691]
[187.20988464 -30.15091515]
[184.61380005 -44.93156433]
[183.11640930 -59.86357880]
[182.72589111 -74.86540222]
[183.44435120 -89.85510254]
[185.26788330 -104.75080109]
[188.18653870 -119.47115326]
[192.18435669 -133.93576050]
[197.23950195 -148.06559753]
[203.32438660 -161.78352356]
[210.40576172 -175.01460266]
[218.44494629 -187.68656921]
[227.39804077 -199.73020935]
[237.21614075 -211.07975769]
[247.84562683 -221.67320251]
[259.22845459 -231.45269775]
[271.30242920 -240.36485291]
[284.00161743 -248.36094666]
[297.25668335 -255.39735413]
[310.99517822 -261.43560791]
[325.14212036 -266.44274902]
[339.62020874 -270.39141846]
[354.35040283 -273.26004028]
[369.25219727 -275.03298950]
[384.24426270 -275.70056152]
[399.24465942 -275.25906372]
[414.17150879 -273.71096802]
[428.94323730 -271.06472778]
[443.47921753 -267.33474731]
[457.70004272 -262.54144287]
[471.52801514 -256.71096802]
[484.88763428 -249.87519836]
[497.70590210 -242.07144165]
[509.91287231 -233.34233093]
[521.44183350 -223.73553467]
[532.22979736 -213.30352783]
[542.21789551 -202.10328674]
[551.35150146 -190.19596863]
[559.58081055 -177.64663696]
[566.86083984 -164.52381897]
[573.15179443 -150.89918518]
[578.41943359 -136.84713745]
[582.63482666 -122.44445038]
[585.77502441 -107.76976776]
[587.82293701 -92.90325165]
[588.76727295 -77.92608643]
[588.60296631 -62.92008209]
[587.33081055 -47.96718979]
[584.95782471 -33.14908600]
[581.49700928 -18.54669571]
[576.96716309 -4.23977613]
[571.39312744 9.69353199]
[564.80529785 23.17712975]
[557.23962402 36.13737106]
[548.73742676 48.50347519]
[539.34521484 60.20790100]
[529.11425781 71.18672180]
[518.10040283 81.37997437]
[506.36383057 90.73197937]
[493.96865845 99.19167328]
[480.98254395 106.71283722]
[467.47640991 113.25440216]
[453.52407837 118.78063965]
[439.20169067 123.26136017]
[424.58752441 126.67209625]
[409.76135254 128.99421692]
[394.80419922 130.21504211]
[379.79772949 130.32791138]
[364.82388306 129.33218384]
[349.96447754 127.23332214]
[335.30065918 124.04278564]
[320.91250610 119.77799225]
[306.87863159 114.46223450]
[293.27563477 108.12455750]
[280.17785645 100.79956055]
[267.65682983 92.52725983]
[255.78092957 83.35283661]
[244.61500549 73.32639313]
[234.22006226 62.50270081]
[224.65286255 50.94086838]
[215.96566772 38.70404053]
[203.12673950 46.46043396]
[190.28779602 54.21682358]
[177.44885254 61.97321701]
[164.60990906 69.72960663]
[151.77096558 77.48600006]
[144.87823486 90.68975830]
[129.06535339 91.20314789]
[116.22640991 98.95954132]
[112.75971222 110.07814026]
[102.74655914 116.02608490]
[91.32427216 113.75175476]
[78.37127686 121.31613922]
[65.41827393 128.88050842]
[52.46527863 136.44490051]
[39.51227951 144.00927734]
[26.55928040 151.57365417]
[33.27186966 164.99378967]
[39.10169601 178.82028198]
[44.02430344 192.99514771]
[48.01905060 207.45893860]
[51.06917572 222.15095520]
[53.16189194 237.00961304]
[54.28841782 251.97254944]
[54.44402695 266.97705078]
[53.62806702 281.96014404]
[51.84396362 296.85900879]
[49.09919739 311.61111450]
[45.40528488 326.15463257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 198]
[84 197]
[85 196]
[86 195]
[87 194]
[88 193]
[90 190]
[91 189]
[93 187]
[94 186]
[95 185]
[96 184]
[97 183]
[98 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
