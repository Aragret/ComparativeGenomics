%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[-26.04117203 564.82794189]
[-34.40909195 577.28631592]
[-43.72870255 589.04980469]
[-53.94253540 600.04577637]
[-64.98762512 610.20648193]
[-76.79586792 619.46929932]
[-89.29446411 627.77703857]
[-102.40636444 635.07861328]
[-116.05071259 641.32885742]
[-130.14338684 646.48931885]
[-144.59751892 650.52819824]
[-159.32397461 653.42053223]
[-174.23196411 655.14849854]
[-189.22956848 655.70147705]
[-204.22433472 655.07604980]
[-219.12380981 653.27606201]
[-233.83612061 650.31262207]
[-248.27056885 646.20404053]
[-262.33816528 640.97552490]
[-275.95214844 634.65942383]
[-289.02862549 627.29467773]
[-301.48696899 618.92663574]
[-313.25033569 609.60687256]
[-324.24621582 599.39294434]
[-334.40679932 588.34777832]
[-343.66949463 576.53942871]
[-351.97711182 564.04071045]
[-359.27853394 550.92877197]
[-365.52865601 537.28436279]
[-370.68896484 523.19158936]
[-374.72769165 508.73745728]
[-377.61987305 494.01095581]
[-379.34768677 479.10296631]
[-379.90054321 464.10534668]
[-379.27496338 449.11059570]
[-377.47482300 434.21115112]
[-374.51123047 419.49884033]
[-370.40246582 405.06445312]
[-365.17385864 390.99691772]
[-358.85760498 377.38296509]
[-351.49270630 364.30657959]
[-343.12451172 351.84832764]
[-333.80468750 340.08505249]
[-323.59060669 329.08929443]
[-312.54531860 318.92880249]
[-300.73687744 309.66625977]
[-288.23812866 301.35873413]
[-275.12606812 294.05746460]
[-261.48159790 287.80746460]
[-247.38880920 282.64730835]
[-232.93460083 278.60873413]
[-218.20808411 275.71670532]
[-203.30006409 273.98901367]
[-188.30244446 273.43634033]
[-173.30769348 274.06207275]
[-158.40826416 275.86233521]
[-143.69601440 278.82608032]
[-129.26164246 282.93499756]
[-115.19416046 288.16375732]
[-101.58029175 294.48013306]
[-88.50396729 301.84518433]
[-76.04581451 310.21350098]
[-66.73093414 298.45623779]
[-57.41604996 286.69900513]
[-48.10116577 274.94174194]
[-38.78628540 263.18447876]
[-48.18144989 251.52546692]
[-54.74959946 238.06152344]
[-58.15842819 223.46650696]
[-58.23385239 208.47164917]
[-54.96886444 193.82896423]
[-48.52407837 180.27352905]
[-39.21981049 168.48655701]
[-27.52017021 159.06118774]
[-14.00990486 152.47264099]
[0.63482040 149.05422974]
[15.68026733 148.98052979]
[30.37188339 152.25845337]
[43.97214890 158.72674561]
[53.28702927 146.96949768]
[62.60191345 135.21223450]
[71.91679382 123.45498657]
[81.23168182 111.69773865]
[90.54656219 99.94048309]
[91.13791656 94.72855377]
[94.60733032 90.21894836]
[100.31800842 87.97729492]
[109.97882080 76.50259399]
[119.63963318 65.02789307]
[129.30044556 53.55319595]
[132.26962280 38.01309967]
[146.38554382 33.26023102]
[156.04635620 21.78553009]
[165.70716858 10.31082916]
[175.36798096 -1.16387057]
[185.02879333 -12.63857079]
[174.50099182 -23.33902740]
[165.02145386 -34.97831726]
[156.67352295 -47.45414734]
[149.53053284 -60.65688324]
[143.65525818 -74.47048950]
[139.09934998 -88.77356720]
[135.90284729 -103.44042969]
[134.09381104 -118.34217072]
[133.68818665 -133.34783936]
[134.68948364 -148.32554626]
[137.08895874 -163.14367676]
[140.86547852 -177.67201233]
[145.98588562 -191.78285217]
[152.40515137 -205.35220337]
[160.06689453 -218.26081848]
[168.90376282 -230.39524841]
[178.83810425 -241.64883423]
[189.78259277 -251.92271423]
[201.64106750 -261.12655640]
[214.30931091 -269.17953491]
[227.67599487 -276.01080322]
[241.62362671 -281.56039429]
[256.02966309 -285.77947998]
[270.76748657 -288.63104248]
[285.70755005 -290.08996582]
[300.71859741 -290.14346313]
[315.66870117 -288.79104614]
[330.42645264 -286.04458618]
[344.86218262 -281.92828369]
[358.84902954 -276.47824097]
[372.26403809 -269.74237061]
[384.98937988 -261.77990723]
[396.91314697 -252.66079712]
[407.93057251 -242.46519470]
[417.94485474 -231.28268433]
[426.86798096 -219.21154785]
[434.62152100 -206.35786438]
[441.13732910 -192.83459473]
[446.35818481 -178.76060486]
[450.23812866 -164.25955200]
[452.74316406 -149.45890808]
[453.85116577 -134.48870850]
[453.55249023 -119.48053741]
[451.84970093 -104.56627655]
[448.75781250 -89.87701416]
[444.30395508 -75.54182434]
[438.52728271 -61.68669510]
[431.47857666 -48.43339157]
[423.21975708 -35.89838409]
[413.82342529 -24.19183350]
[403.37213135 -13.41661835]
[391.95776367 -3.66743493]
[379.68060303 4.97003841]
[366.64855957 12.41989422]
[352.97616577 18.61666107]
[338.78356934 23.50588036]
[324.19546509 27.04458427]
[309.34011841 29.20167351]
[294.34805298 29.95819283]
[279.35101318 29.30749321]
[264.48083496 27.25529099]
[249.86813354 23.81962395]
[235.64137268 19.03068542]
[221.92558289 12.93056011]
[208.84129333 5.57285738]
[196.50349426 -2.97776031]
[186.84268188 8.49693966]
[177.18186951 19.97163963]
[167.52105713 31.44634056]
[157.86024475 42.92103958]
[155.58207703 57.64038849]
[140.77514648 63.21400452]
[131.11433411 74.68870544]
[121.45352173 86.16340637]
[111.79270935 97.63810730]
[102.30381012 109.25537109]
[92.98892975 121.01261902]
[83.67404938 132.76986694]
[74.35916138 144.52711487]
[65.04428101 156.28437805]
[55.72939682 168.04162598]
[65.13709259 179.80178833]
[71.68862915 193.35411072]
[75.05834198 208.01753235]
[75.08035278 223.05592346]
[71.75678253 237.71505737]
[65.25744629 251.26045227]
[55.91120529 263.01416016]
[44.18931580 272.38873291]
[30.68166161 278.91647339]
[16.06709290 282.27294922]
[1.07928181 282.29290771]
[-13.53008842 278.97860718]
[-27.02903175 272.49935913]
[-36.34391403 284.25662231]
[-45.65879822 296.01388550]
[-54.97368240 307.77111816]
[-64.28856659 319.52838135]
[-53.29247284 329.74209595]
[-43.13164902 340.78707886]
[-33.86872864 352.59524536]
[-25.56082726 365.09375000]
[-18.25916481 378.20556641]
[-12.00875950 391.84985352]
[-6.84814835 405.94247437]
[-2.80914736 420.39657593]
[0.08334062 435.12298584]
[1.81148243 450.03097534]
[2.36462331 465.02856445]
[1.73935294 480.02334595]
[-0.06047356 494.92282104]
[-3.02375960 509.63516235]
[-7.13223553 524.06964111]
[-12.36056995 538.13732910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 194]
[63 193]
[64 192]
[65 191]
[66 190]
[79 177]
[80 176]
[81 175]
[82 174]
[83 173]
[84 172]
[87 171]
[88 170]
[89 169]
[90 168]
[92 166]
[93 165]
[94 164]
[95 163]
[96 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
