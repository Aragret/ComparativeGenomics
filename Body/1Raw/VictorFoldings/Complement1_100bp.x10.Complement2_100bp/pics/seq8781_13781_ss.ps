%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[145.15794373 793.88482666]
[130.75402832 789.68627930]
[116.58534241 784.75189209]
[102.68946838 779.09460449]
[89.10324097 772.72943115]
[75.86270142 765.67340088]
[63.00296021 757.94500732]
[50.55811310 749.56494141]
[38.56116486 740.55529785]
[27.04392815 730.94000244]
[16.03694725 720.74462891]
[5.56940794 709.99609375]
[-4.33093023 698.72296143]
[-13.63781261 686.95507812]
[-22.32656097 674.72375488]
[-30.37413216 662.06134033]
[-37.75918579 649.00140381]
[-44.46213913 635.57867432]
[-50.46521378 621.82861328]
[-55.75249481 607.78778076]
[-60.30996323 593.49340820]
[-64.12552643 578.98333740]
[-67.18906403 564.29608154]
[-69.49246979 549.47064209]
[-71.02961731 534.54620361]
[-71.79643250 519.56250000]
[-71.79088593 504.55917358]
[-71.01299286 489.57598877]
[-69.46482086 474.65274048]
[-67.15046692 459.82897949]
[-64.07607269 445.14401245]
[-60.24978256 430.63677979]
[-55.68175507 416.34576416]
[-50.38410187 402.30883789]
[-44.37086487 388.56323242]
[-37.65799332 375.14544678]
[-30.26328850 362.09097290]
[-22.20636177 349.43450928]
[-13.50857830 337.20959473]
[-4.19300127 325.44863892]
[5.71566486 314.18280029]
[16.19114304 303.44201660]
[27.20565796 293.25473022]
[38.72999573 283.64797974]
[50.73360062 274.64721680]
[63.18463516 266.27630615]
[76.05008698 258.55746460]
[89.29583740 251.51116943]
[102.88675690 245.15609741]
[116.78681183 239.50907898]
[130.95913696 234.58511353]
[126.77213287 220.18133545]
[122.58512115 205.77755737]
[111.60274506 195.71591187]
[115.18040466 180.30451965]
[104.19802856 170.24287415]
[107.77568817 154.83148193]
[103.58867645 140.42770386]
[99.40167236 126.02391815]
[95.21466064 111.62013245]
[92.45115662 126.36337280]
[85.86204529 139.83866882]
[75.92299652 151.07322693]
[63.35152817 159.25602722]
[49.05517960 163.79634094]
[34.06601334 164.36637878]
[19.46611595 160.92501831]
[6.30946350 153.72067261]
[-4.45415306 143.27345276]
[-12.04769897 130.33752441]
[-15.92299080 115.84677124]
[-15.80026627 100.84727478]
[-11.68838501 86.42185974]
[-3.88418865 73.61192322]
[7.04893208 63.34221649]
[20.32170486 56.35412216]
[34.97595978 53.15211487]
[49.95378876 53.96735001]
[64.17393494 58.74097443]
[76.60982513 67.12837982]
[86.36371613 78.52406311]
[92.73179626 92.10648346]
[93.17840576 77.11313629]
[93.62500763 62.11978531]
[94.07161713 47.12643433]
[94.40659332 32.13017654]
[94.62992096 17.13183784]
[87.09893799 3.21799779]
[95.02487183 -9.39266682]
[95.24819946 -24.39100456]
[95.47152710 -39.38933945]
[95.69485474 -54.38768005]
[95.91818237 -69.38601685]
[81.30618286 -73.07195282]
[67.93836212 -80.02882385]
[56.53563309 -89.88146210]
[47.71292877 -102.09852600]
[41.94605255 -116.02116394]
[39.54599762 -130.89854431]
[40.64220047 -145.92834473]
[45.17554092 -160.30004883]
[52.90154266 -173.23857117]
[63.40355301 -184.04618835]
[76.11521149 -192.14004517]
[90.35099792 -197.08363342]
[105.34318542 -198.61038208]
[120.28327179 -196.63793945]
[134.36555481 -191.27267456]
[146.83059692 -182.80393982]
[157.00616455 -171.68844604]
[164.34352112 -158.52561951]
[168.44694519 -144.02531433]
[169.09516907 -128.96954346]
[166.25323486 -114.17021179]
[160.07437134 -100.42544556]
[150.89184570 -88.47648621]
[139.20082092 -78.96771240]
[125.63179016 -72.41193390]
[110.91651917 -69.16268921]
[110.69319153 -54.16435242]
[110.46986389 -39.16601181]
[110.24653625 -24.16767693]
[110.02320862 -9.16933918]
[117.57015991 3.67171931]
[109.62825775 17.35516548]
[109.40493011 32.35350418]
[112.44849396 39.08837509]
[109.06496429 47.57304001]
[108.61836243 62.56639099]
[108.17175293 77.55973816]
[107.72514343 92.55309296]
[109.61843872 107.43312836]
[113.80545044 121.83690643]
[117.99246216 136.24069214]
[122.17947388 150.64447021]
[133.46133423 161.73637390]
[129.58418274 176.11750793]
[140.86604309 187.20941162]
[136.98890686 201.59054565]
[141.17591858 215.99432373]
[145.36293030 230.39810181]
[159.96638489 226.95729065]
[174.72761536 224.27279663]
[189.60745239 222.35176086]
[204.56646729 221.19926453]
[219.56497192 220.81837463]
[234.56320190 221.21009827]
[249.52137756 222.37338257]
[264.39984131 224.30516052]
[279.15911865 227.00030518]
[293.76010132 230.45166016]
[308.16403198 234.65008545]
[322.33273315 239.58444214]
[336.22863770 245.24163818]
[349.81491089 251.60668945]
[363.05548096 258.66271973]
[375.91528320 266.39096069]
[388.36016846 274.77099609]
[400.35717773 283.78054810]
[411.87445068 293.39578247]
[422.88150024 303.59112549]
[433.34909058 314.33959961]
[443.24951172 325.61267090]
[452.55645752 337.38046265]
[461.24526978 349.61178589]
[469.29290771 362.27413940]
[476.67803955 375.33401489]
[483.38107300 388.75674438]
[489.38424683 402.50674438]
[494.67160034 416.54754639]
[499.22912598 430.84191895]
[503.04479980 445.35192871]
[506.10842896 460.03915405]
[508.41189575 474.86462402]
[509.94912720 489.78900146]
[510.71603394 504.77273560]
[510.71057129 519.77606201]
[509.93276978 534.75921631]
[508.38467407 549.68249512]
[506.07040405 564.50628662]
[502.99609375 579.19128418]
[499.16989136 593.69854736]
[494.60195923 607.98956299]
[489.30438232 622.02648926]
[483.29122925 635.77215576]
[476.57843018 649.19000244]
[469.18380737 662.24450684]
[461.12695312 674.90100098]
[452.42922974 687.12597656]
[443.11370850 698.88696289]
[433.20510864 710.15283203]
[422.72970581 720.89373779]
[411.71524048 731.08105469]
[400.19094849 740.68786621]
[388.18740845 749.68872070]
[375.73641968 758.05969238]
[362.87100220 765.77862549]
[349.62530518 772.82495117]
[336.03442383 779.18011475]
[322.13439941 784.82720947]
[307.96209717 789.75128174]
[293.55511475 793.93920898]
[278.95162964 797.37994385]
[264.19039917 800.06433105]
[249.31053162 801.98529053]
[234.35151672 803.13769531]
[219.35299683 803.51855469]
[204.35478210 803.12670898]
[189.39660645 801.96331787]
[174.51815796 800.03149414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 141]
[52 140]
[53 139]
[55 137]
[57 135]
[58 134]
[59 133]
[60 132]
[82 131]
[83 130]
[84 129]
[85 128]
[86 126]
[87 125]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
