%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[111.19334412 516.42633057]
[104.91114807 502.79174805]
[99.99562836 488.60711670]
[96.49414062 474.00894165]
[94.44039917 459.13787842]
[93.85419464 444.13708496]
[94.74115753 429.15109253]
[97.09275055 414.32418823]
[100.88632965 399.79919434]
[106.08535767 385.71600342]
[112.63977051 372.21020508]
[120.48643494 359.41189575]
[129.54977417 347.44433594]
[139.74252319 336.42276001]
[150.96650696 326.45336914]
[163.11361694 317.63211060]
[176.06687927 310.04397583]
[169.78952026 296.42065430]
[163.51216125 282.79736328]
[159.42150879 280.33245850]
[156.83586121 275.27169800]
[157.25746155 268.67367554]
[151.38850403 254.86950684]
[145.51954651 241.06533813]
[139.65058899 227.26115417]
[133.78161621 213.45697021]
[127.91265869 199.65280151]
[122.04370117 185.84861755]
[116.17473602 172.04444885]
[109.57386017 185.51397705]
[95.42718506 190.50111389]
[81.83856964 184.14900208]
[76.59218597 170.09640503]
[82.69340515 156.39329529]
[96.64717102 150.88943481]
[110.45946503 156.73703003]
[105.84545898 142.46429443]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[80.95548248 90.99866486]
[71.85718536 102.92430878]
[58.73415375 110.18970490]
[43.79784012 111.57050323]
[29.56528473 106.83401489]
[18.43491745 96.77841949]
[12.28240395 83.09826660]
[12.14454937 68.09889984]
[18.04458427 54.30797577]
[28.98825073 44.04951096]
[43.13134766 39.05222702]
[58.09051514 40.15826416]
[71.34487152 47.18123245]
[80.66156006 58.93912125]
[78.87909698 44.04540253]
[77.09663391 29.15168571]
[75.31416321 14.25796890]
[73.53170013 -0.63574821]
[71.74922943 -15.52946568]
[62.42686462 -28.31242561]
[68.59694672 -41.86894989]
[59.39505386 -30.02305794]
[44.75860977 -26.74061203]
[31.37919617 -33.52230453]
[25.37370491 -47.26763153]
[29.48776436 -61.69242096]
[41.84048080 -70.20185089]
[56.78436279 -68.90551758]
[67.48806763 -58.39443207]
[67.26473999 -73.39276886]
[67.04141235 -88.39110565]
[66.81808472 -103.38944244]
[51.85942078 -104.66104126]
[37.10170364 -107.41574097]
[22.69160271 -111.62615967]
[8.77234173 -117.25046539]
[-4.51774263 -124.23274231]
[-17.04656410 -132.50361633]
[-28.68960190 -141.98086548]
[-39.33113861 -152.57031250]
[-48.86541367 -164.16670227]
[-57.19766617 -176.65476990]
[-64.24507904 -189.91043091]
[-69.93762207 -203.80192566]
[-74.21871185 -218.19119263]
[-77.04579926 -232.93521118]
[-78.39079285 -247.88746643]
[-78.24031067 -262.89932251]
[-76.59586334 -277.82159424]
[-73.47378540 -292.50598145]
[-68.90511322 -306.80654907]
[-62.93525314 -320.58114624]
[-55.62352753 -333.69287109]
[-47.04261780 -346.01141357]
[-37.27780151 -357.41433716]
[-26.42612839 -367.78833008]
[-14.59545135 -377.03027344]
[-1.90335083 -385.04833984]
[11.52402878 -391.76281738]
[25.55323792 -397.10696411]
[40.04484177 -401.02767944]
[54.85481644 -403.48599243]
[69.83596039 -404.45745850]
[84.83939362 -403.93246460]
[99.71599579 -401.91619873]
[114.31790924 -398.42868042]
[128.50001526 -393.50460815]
[142.12135315 -387.19290161]
[155.04655457 -379.55627441]
[167.14715576 -370.67068481]
[178.30288696 -360.62435913]
[188.40289307 -349.51721191]
[197.34675598 -337.45962524]
[205.04562378 -324.57141113]
[211.42297363 -310.98068237]
[216.41539001 -296.82247925]
[219.97329712 -282.23754883]
[222.06130981 -267.37084961]
[222.65867615 -252.37013245]
[221.75946045 -237.38447571]
[219.37261963 -222.56282043]
[215.52185059 -208.05247498]
[210.24543762 -193.99765015]
[203.59580994 -180.53804016]
[195.63906860 -167.80740356]
[186.45428467 -155.93228149]
[176.13275146 -145.03070068]
[164.77705383 -135.21099854]
[152.50004578 -126.57076263]
[139.42373657 -119.19588470]
[125.67810059 -113.15964508]
[111.39974976 -108.52204895]
[96.73059845 -105.32917786]
[81.81642151 -103.61277008]
[82.03974915 -88.61443329]
[82.26307678 -73.61609650]
[82.48640442 -58.61775970]
[83.49066925 -43.65141678]
[92.68553925 -31.93375397]
[86.64295197 -17.31193161]
[88.42541504 -2.41821408]
[90.20787811 12.47550297]
[91.99034882 27.36922073]
[93.77281189 42.26293945]
[95.55528259 57.15665436]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[120.11818695 137.85028076]
[124.73220062 152.12301636]
[129.97891235 166.17549133]
[135.84786987 179.97966003]
[141.71684265 193.78384399]
[147.58580017 207.58801270]
[153.45475769 221.39219666]
[159.32371521 235.19636536]
[165.19268799 249.00054932]
[171.06164551 262.80471802]
[177.13548279 276.51998901]
[183.41284180 290.14331055]
[189.69020081 303.76663208]
[203.87455750 298.85025024]
[218.47251892 295.34790039]
[233.34346008 293.29327393]
[248.34420776 292.70614624]
[263.33026123 293.59222412]
[278.15728760 295.94293213]
[292.68252563 299.73562622]
[306.76605225 304.93380737]
[320.27221680 311.48742676]
[333.07101440 319.33331299]
[345.03912354 328.39593506]
[356.06127930 338.58801270]
[366.03137207 349.81140137]
[374.85333252 361.95797729]
[382.44223022 374.91079712]
[388.72500610 388.54507446]
[393.64108276 402.72955322]
[397.14315796 417.32757568]
[399.19747925 432.19857788]
[399.78430176 447.19931030]
[398.89791870 462.18533325]
[396.54693604 477.01232910]
[392.75393677 491.53747559]
[387.55545044 505.62091064]
[381.00158691 519.12695312]
[373.15542603 531.92559814]
[364.09255981 543.89349365]
[353.90026855 554.91546631]
[342.67669678 564.88531494]
[330.52993774 573.70709229]
[317.57696533 581.29571533]
[303.94253540 587.57818604]
[289.75799561 592.49395752]
[275.15988159 595.99578857]
[260.28884888 598.04980469]
[245.28810120 598.63629150]
[230.30207825 597.74963379]
[215.47514343 595.39837646]
[200.95007324 591.60504150]
[186.86676025 586.40631104]
[173.36082458 579.85217285]
[160.56236267 572.00573730]
[148.59461975 562.94268799]
[137.57286072 552.75012207]
[127.60322571 541.52636719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 165]
[18 164]
[19 163]
[22 162]
[23 161]
[24 160]
[25 159]
[26 158]
[27 157]
[28 156]
[29 155]
[36 154]
[37 153]
[38 152]
[39 151]
[41 149]
[42 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
[61 142]
[63 140]
[71 139]
[72 138]
[73 137]
[74 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
