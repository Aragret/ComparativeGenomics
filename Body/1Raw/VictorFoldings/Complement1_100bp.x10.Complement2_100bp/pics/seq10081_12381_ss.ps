%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[23.48609543 943.16094971]
[8.48442936 943.08288574]
[-6.50308180 942.42669678]
[-21.45417213 941.19342041]
[-36.34662628 939.38488770]
[-51.15832520 937.00378418]
[-65.86725616 934.05358887]
[-80.45156860 930.53881836]
[-94.88959503 926.46453857]
[-109.15988159 921.83691406]
[-123.24123383 916.66284180]
[-137.11273193 910.94989014]
[-150.75375366 904.70660400]
[-164.14404297 897.94226074]
[-177.26370239 890.66693115]
[-190.09324646 882.89141846]
[-202.61360168 874.62719727]
[-214.80618286 865.88665771]
[-226.65286255 856.68273926]
[-238.13604736 847.02911377]
[-249.23867798 836.94012451]
[-259.94424438 826.43072510]
[-270.23684692 815.51660156]
[-280.10122681 804.21392822]
[-289.52267456 792.53955078]
[-298.48721313 780.51068115]
[-306.98156738 768.14532471]
[-314.99304199 755.46179199]
[-322.50979614 742.47894287]
[-329.52062988 729.21600342]
[-336.01510620 715.69281006]
[-341.98364258 701.92938232]
[-347.41732788 687.94610596]
[-352.30807495 673.76385498]
[-356.64868164 659.40362549]
[-360.43261719 644.88684082]
[-363.65429688 630.23498535]
[-366.30895996 615.46984863]
[-368.39260864 600.61340332]
[-369.90222168 585.68768311]
[-370.83547974 570.71484375]
[-371.19100952 555.71722412]
[-370.96832275 540.71697998]
[-370.16772461 525.73651123]
[-368.79043579 510.79800415]
[-366.83843994 495.92367554]
[-364.31469727 481.13558960]
[-361.22290039 466.45578003]
[-357.56771851 451.90603638]
[-353.35449219 437.50793457]
[-348.58956909 423.28289795]
[-343.27996826 409.25207520]
[-337.43359375 395.43627930]
[-331.05914307 381.85607910]
[-324.16604614 368.53158569]
[-316.76461792 355.48266602]
[-308.86578369 342.72866821]
[-300.48132324 330.28851318]
[-291.62368774 318.18075562]
[-282.30599976 306.42333984]
[-272.54214478 295.03372192]
[-262.34661865 284.02883911]
[-251.73457336 273.42504883]
[-240.72174072 263.23812866]
[-229.32452393 253.48315430]
[-217.55984497 244.17465210]
[-205.44515991 235.32644653]
[-192.99850464 226.95167542]
[-180.23834229 219.06280518]
[-167.18363953 211.67153931]
[-153.85379028 204.78886414]
[-140.26861572 198.42498779]
[-126.44826508 192.58940125]
[-112.41329956 187.29074097]
[-98.18456268 182.53689575]
[-83.78319550 178.33491516]
[-69.23058319 174.69105530]
[-54.54836655 171.61071777]
[-39.75834274 169.09849548]
[-24.88249016 167.15811157]
[-9.94291115 165.79244995]
[5.03819895 165.00354004]
[20.03858376 164.79255676]
[35.03595734 165.15979004]
[50.00803375 166.10473633]
[64.93257904 167.62596130]
[79.78740692 169.72120667]
[82.45320129 154.95999146]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[105.45137787 27.61299896]
[91.51272583 21.92022133]
[79.06248474 13.45350838]
[68.64492798 2.58299041]
[60.71546173 -10.21612072]
[55.62073135 -24.38430405]
[53.58345032 -39.30218506]
[54.69268799 -54.31761932]
[58.89995193 -68.77420044]
[66.02131653 -82.03993988]
[75.74546051 -93.53491974]
[87.64729309 -102.75663757]
[101.20652008 -109.30194855]
[115.83038330 -112.88471985]
[130.87959290 -113.34834290]
[145.69625854 -110.67253113]
[159.63267517 -104.97426605]
[172.07958984 -96.50265503]
[182.49285889 -85.62804413]
[190.41729736 -72.82581329]
[195.50645447 -58.65562820]
[197.53785706 -43.73694611]
[196.42271423 -28.72194862]
[192.20976257 -14.26702690]
[185.08319092 -1.00408828]
[175.35452271 10.48706818]
[163.44905090 19.70409966]
[149.88725281 26.24407578]
[135.26197815 29.82109833]
[120.21259308 30.27879524]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[97.21441650 157.62577820]
[94.54862213 172.38699341]
[109.19797516 175.62004089]
[123.71185303 179.41523743]
[138.06867981 183.76695251]
[152.24714661 188.66870117]
[166.22618103 194.11320496]
[179.98501587 200.09240723]
[193.50318909 206.59738159]
[206.76065063 213.61848450]
[219.73767090 221.14529419]
[232.41500854 229.16661072]
[244.77378845 237.67051697]
[256.79568481 246.64439392]
[268.46279907 256.07489014]
[279.75781250 265.94799805]
[290.66397095 276.24908447]
[301.16503906 286.96279907]
[311.24542236 298.07321167]
[320.89013672 309.56387329]
[330.08489990 321.41769409]
[338.81597900 333.61703491]
[347.07046509 346.14379883]
[354.83602905 358.97937012]
[362.10119629 372.10467529]
[368.85516357 385.50018311]
[375.08786011 399.14605713]
[380.79006958 413.02197266]
[385.95327759 427.10733032]
[390.56982422 441.38119507]
[394.63290405 455.82238770]
[398.13638306 470.40939331]
[401.07513428 485.12060547]
[403.44479370 499.93414307]
[405.24176025 514.82800293]
[406.46347046 529.78002930]
[407.10803223 544.76806641]
[407.17449951 559.76977539]
[406.66281128 574.76293945]
[405.57369995 589.72521973]
[403.90875244 604.63439941]
[401.67050171 619.46838379]
[398.86227417 634.20501709]
[395.48818970 648.82257080]
[391.55328369 663.29919434]
[387.06341553 677.61340332]
[382.02523804 691.74395752]
[376.44622803 705.66986084]
[370.33471680 719.37042236]
[363.69976807 732.82531738]
[356.55120850 746.01446533]
[348.89968872 758.91833496]
[340.75656128 771.51776123]
[332.13394165 783.79400635]
[323.04461670 795.72888184]
[313.50210571 807.30456543]
[303.52059937 818.50390625]
[293.11489868 829.31024170]
[282.30047607 839.70758057]
[271.09338379 849.68041992]
[259.51031494 859.21398926]
[247.56843567 868.29400635]
[235.28549194 876.90716553]
[222.67976379 885.04052734]
[209.76995850 892.68200684]
[196.57524109 899.82037354]
[183.11524963 906.44488525]
[169.40995789 912.54577637]
[155.47972107 918.11395264]
[141.34526062 923.14117432]
[127.02755737 927.61999512]
[112.54788971 931.54364014]
[97.92776489 934.90643311]
[83.18891144 937.70324707]
[68.35322571 939.92999268]
[53.44274521 941.58337402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[87 136]
[88 135]
[89 134]
[90 133]
[91 132]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
