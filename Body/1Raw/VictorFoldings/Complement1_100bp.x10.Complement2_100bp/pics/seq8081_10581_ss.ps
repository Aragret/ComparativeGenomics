%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[60.41584015 638.64477539]
[47.51453781 630.64971924]
[38.37569809 618.53173828]
[34.23527527 603.92962646]
[35.65322495 588.81823730]
[42.43778610 575.24127197]
[53.67139816 565.03485107]
[67.83480835 559.57940674]
[67.83480835 544.57940674]
[67.83480835 529.57940674]
[67.83480835 514.57940674]
[55.44555283 503.20639038]
[55.10846710 486.05410767]
[67.52045441 473.72680664]
[67.29712677 458.72848511]
[67.07379913 443.73013306]
[66.85047150 428.73181152]
[66.62714386 413.73345947]
[66.40381622 398.73513794]
[66.06884003 383.73886108]
[65.62223053 368.74551392]
[65.06402588 353.75592041]
[64.39424133 338.77087402]
[63.72445297 323.78582764]
[62.94313049 308.80621338]
[62.05031586 293.83279419]
[61.15749741 278.85937500]
[60.26468277 263.88598633]
[54.06197357 277.54345703]
[43.98894882 288.65805054]
[31.00570297 296.17037964]
[16.34971809 299.36447144]
[1.41790640 297.93582153]
[-12.36652374 292.02062988]
[-23.68972969 282.18267822]
[-31.47245598 269.35968018]
[-34.97290421 254.77384949]
[-33.85742950 239.81538391]
[-28.23235512 225.91003418]
[-18.63382721 214.38319397]
[-5.97671461 206.33349609]
[8.53258610 202.52821350]
[23.51114082 203.33001709]
[37.53128815 208.66250610]
[49.25672150 218.01742554]
[57.56983948 230.50309753]
[61.67843628 244.93060303]
[64.78254700 230.25529480]
[59.84651947 216.20236206]
[70.27215576 204.30207825]
[73.37625885 189.62678528]
[76.48036957 174.95147705]
[64.60893250 165.92184448]
[57.80726242 152.57843018]
[57.47215271 137.54350281]
[63.72362518 123.79798889]
[75.37048340 114.09038544]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[104.50007629 42.48270035]
[98.38765717 25.11261749]
[110.61757660 12.52707291]
[105.67925262 -2.50367737]
[115.72017670 -13.50500011]
[118.60544586 -28.22489166]
[112.23508453 -45.50204468]
[124.27627563 -58.26828003]
[126.94207001 -73.02949524]
[129.60786438 -87.79071808]
[132.27366638 -102.55193329]
[127.11209106 -117.50749207]
[136.98811340 -128.65708923]
[139.65390015 -143.41830444]
[137.88723755 -148.33012390]
[138.15460205 -152.96498108]
[140.00984192 -156.59445190]
[142.78244019 -158.77278137]
[138.29382324 -173.94389343]
[148.65783691 -184.64138794]
[144.16921997 -199.81250000]
[154.53324890 -210.50999451]
[157.85549927 -225.13745117]
[161.17776489 -239.76490784]
[154.97686768 -251.07472229]
[158.04513550 -263.18957520]
[168.20895386 -269.74877930]
[171.74862671 -284.32516479]
[175.28829956 -298.90151978]
[161.30699158 -304.40029907]
[148.20468140 -311.75170898]
[136.22546387 -320.81881714]
[125.59250641 -331.43267822]
[116.50389862 -343.39556885]
[109.12895203 -356.48464966]
[103.60505676 -370.45605469]
[100.03512573 -385.04953003]
[98.48564911 -399.99319458]
[98.98551178 -415.00863647]
[101.52539062 -429.81616211]
[106.05796814 -444.13989258]
[112.49880981 -457.71301270]
[120.72792816 -470.28262329]
[130.59201050 -481.61459351]
[141.90730286 -491.49780273]
[154.46301270 -499.74813843]
[168.02522278 -506.21191406]
[182.34129333 -510.76867676]
[197.14450073 -513.33355713]
[212.15908813 -513.85876465]
[227.10534668 -512.33453369]
[241.70481873 -508.78927612]
[255.68554688 -503.28897095]
[268.78704834 -495.93615723]
[280.76528931 -486.86776733]
[291.39709473 -476.25274658]
[300.48440552 -464.28884888]
[307.85794067 -451.19897461]
[313.38031006 -437.22698975]
[316.94866943 -422.63311768]
[318.49652100 -407.68930054]
[317.99505615 -392.67388916]
[315.45355225 -377.86663818]
[310.91943359 -363.54339600]
[304.47711182 -349.97097778]
[296.24664307 -337.40225220]
[286.38134766 -326.07135010]
[275.06497192 -316.18936157]
[262.50836182 -307.94039917]
[248.94546509 -301.47808838]
[234.62890625 -296.92288208]
[219.82540894 -294.35958862]
[204.81076050 -293.83599854]
[189.86466980 -295.36184692]
[186.32501221 -280.78549194]
[182.78533936 -266.20910645]
[188.62586975 -249.66053772]
[175.80522156 -236.44265747]
[172.48295593 -221.81520081]
[169.16070557 -207.18772888]
[173.88694763 -193.06286621]
[163.28529358 -181.31912231]
[168.01155090 -167.19425964]
[157.40989685 -155.45051575]
[154.41511536 -140.75251770]
[151.74932861 -125.99129486]
[157.10157776 -112.09155273]
[147.03488159 -99.88613892]
[144.36907959 -85.12491608]
[141.70329285 -70.36370087]
[139.03749084 -55.60248566]
[145.67483521 -45.48950958]
[143.57472229 -33.16987991]
[133.32533264 -25.33961868]
[130.44006348 -10.61972713]
[135.58476257 3.35815787]
[125.33747101 15.41234589]
[131.82350159 25.62302017]
[129.54020691 37.91001892]
[119.17538452 45.58681107]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[116.81451416 122.85659790]
[123.53301239 136.44882202]
[123.68318176 151.54841614]
[117.28880310 165.15991211]
[105.66664124 174.60633850]
[91.15567780 178.05558777]
[88.05156708 192.73089600]
[84.94745636 207.40618896]
[89.66145325 222.50880432]
[79.45784760 233.35940552]
[76.35373688 248.03471375]
[75.23809052 262.99316406]
[76.13090515 277.96658325]
[77.02371979 292.93997192]
[77.91653442 307.91339111]
[81.55118561 316.29354858]
[78.70948792 323.11605835]
[79.37928009 338.10110474]
[80.04906464 353.08612061]
[83.55854034 361.51947021]
[80.61558533 368.29891968]
[81.06218719 383.29226685]
[84.44571686 391.77694702]
[81.40215302 398.51181030]
[81.62548065 413.51013184]
[81.84880829 428.50848389]
[82.07213593 443.50680542]
[82.29546356 458.50515747]
[82.51879120 473.50347900]
[93.19922638 481.70977783]
[97.14563751 494.38400269]
[93.13121796 506.83255005]
[82.83480835 514.57940674]
[82.83480835 529.57940674]
[82.83480835 544.57940674]
[82.83480835 559.57940674]
[96.99822235 565.03485107]
[108.23183441 575.24127197]
[115.01639557 588.81823730]
[116.43434906 603.92962646]
[112.29392242 618.53173828]
[103.15508270 630.64971924]
[90.25378418 638.64477539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 203]
[9 202]
[10 201]
[11 200]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 191]
[20 189]
[21 188]
[22 186]
[23 185]
[24 184]
[25 182]
[26 181]
[27 180]
[28 179]
[47 178]
[48 177]
[50 175]
[51 174]
[52 173]
[58 167]
[60 165]
[61 164]
[62 163]
[63 162]
[65 159]
[67 157]
[68 156]
[70 153]
[71 152]
[72 151]
[73 150]
[75 148]
[76 147]
[80 146]
[82 144]
[84 142]
[85 141]
[86 140]
[89 138]
[90 137]
[91 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
