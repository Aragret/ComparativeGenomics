%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[20.00627518 523.63336182]
[16.48528099 538.24835205]
[10.66534042 552.10925293]
[2.69720650 564.85699463]
[-7.21272755 576.16143799]
[-18.80777168 585.72967529]
[-31.78758430 593.31390381]
[-45.81595612 598.71765137]
[-60.52952194 601.80102539]
[-75.54716492 602.48413086]
[-90.47988892 600.74920654]
[-104.94090271 596.64123535]
[-118.55563354 590.26666260]
[-130.97142029 581.79058838]
[-141.86666870 571.43249512]
[-150.95916748 559.46075439]
[-158.01339722 546.18542480]
[-162.84663391 531.95037842]
[-165.33367920 517.12438965]
[-165.41014099 502.09140015]
[-163.07400513 487.24087524]
[-158.38578796 472.95742798]
[-151.46694946 459.61105347]
[-142.49667358 447.54745483]
[-131.70733643 437.07910156]
[-119.37840271 428.47714233]
[-105.82921600 421.96441650]
[-91.41072845 417.70962524]
[-76.49642181 415.82293701]
[-61.47260666 416.35321045]
[-46.72844315 419.28677368]
[-41.48172379 405.23431396]
[-36.23500443 391.18185425]
[-30.98828888 377.12936401]
[-38.61687088 362.14126587]
[-32.93311310 345.95452881]
[-16.99332237 338.74743652]
[-11.95640659 324.61840820]
[-6.91949034 310.48937988]
[-21.38393593 314.46176147]
[-33.59740829 305.75366211]
[-34.55659103 290.78436279]
[-23.55440712 280.58865356]
[-8.70126152 282.68246460]
[-0.94650149 295.52066040]
[5.12733221 281.80538940]
[3.20627904 267.03518677]
[15.86888504 257.54998779]
[21.94271851 243.83473206]
[21.02050209 240.43151855]
[21.70084381 236.41253662]
[24.25520325 232.53587341]
[28.60621452 229.65216064]
[35.28641129 216.22178650]
[41.96660233 202.79141235]
[48.64679718 189.36103821]
[46.61655807 171.92988586]
[62.04634094 161.87985229]
[68.52584076 148.35150146]
[75.00533295 134.82315063]
[81.48483276 121.29480743]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[104.98682404 72.22569275]
[111.26418304 58.60237885]
[108.87865448 40.34338760]
[123.44830322 30.56114578]
[129.31726074 16.75696945]
[135.18621826 2.95279217]
[141.05517578 -10.85138512]
[146.92414856 -24.65556145]
[145.20318604 -40.38288879]
[157.30337524 -49.06819534]
[147.03364563 -58.93651962]
[140.76235962 -71.69081879]
[139.22453308 -85.79004669]
[142.58462524 -99.53837585]
[150.41918945 -111.28919220]
[161.77020264 -119.64228821]
[175.26205444 -123.61070251]
[189.26835632 -122.73731232]
[195.34219360 -136.45257568]
[193.85557556 -152.20378113]
[206.08374023 -160.70797729]
[212.15757751 -174.42324829]
[218.23141479 -188.13850403]
[224.30525208 -201.85377502]
[230.37907410 -215.56904602]
[236.45291138 -229.28430176]
[242.52674866 -242.99957275]
[248.60058594 -256.71484375]
[235.63735962 -264.29342651]
[223.60421753 -273.27581787]
[212.65245056 -283.54904175]
[202.91981506 -294.98388672]
[194.52868652 -307.43655396]
[187.58460999 -320.75045776]
[182.17491150 -334.75811768]
[178.36763000 -349.28344727]
[176.21063232 -364.14370728]
[175.73104858 -379.15203857]
[176.93490601 -394.11968994]
[179.80708313 -408.85842896]
[184.31143188 -423.18292236]
[190.39134216 -436.91299438]
[197.97032166 -449.87597656]
[206.95306396 -461.90884399]
[217.22659302 -472.86032104]
[228.66172791 -482.59262085]
[241.11465454 -490.98336792]
[254.42875671 -497.92703247]
[268.43661499 -503.33630371]
[282.96203613 -507.14315796]
[297.82235718 -509.29971313]
[312.83068848 -509.77886963]
[327.79830933 -508.57455444]
[342.53698730 -505.70193481]
[356.86132812 -501.19714355]
[370.59121704 -495.11685181]
[383.55398560 -487.53747559]
[395.58660889 -478.55438232]
[406.53775024 -468.28051758]
[416.26971436 -456.84506226]
[424.66009521 -444.39190674]
[431.60336304 -431.07757568]
[437.01220703 -417.06958008]
[440.81863403 -402.54403687]
[442.97476196 -387.68365479]
[443.45343018 -372.67529297]
[442.24868774 -357.70770264]
[439.37561035 -342.96914673]
[434.87039185 -328.64492798]
[428.78967285 -314.91522217]
[421.20993042 -301.95266724]
[412.22647095 -289.92031860]
[401.95227051 -278.96948242]
[390.51657104 -269.23788452]
[378.06314087 -260.84786987]
[364.74859619 -253.90499878]
[350.74044800 -248.49655151]
[336.21478271 -244.69056702]
[321.35433960 -242.53489685]
[306.34597778 -242.05665588]
[291.37841797 -243.26187134]
[276.63992310 -246.13536072]
[262.31585693 -250.64100647]
[256.24200439 -236.92573547]
[250.16818237 -223.21047974]
[244.09434509 -209.49520874]
[238.02050781 -195.77993774]
[231.94668579 -182.06466675]
[225.87284851 -168.34941101]
[219.79901123 -154.63414001]
[221.72006226 -139.86393738]
[209.05746460 -130.37873840]
[202.98362732 -116.66347504]
[214.08985901 -105.35959625]
[220.02230835 -90.62341309]
[219.84512329 -74.70036316]
[213.55587769 -60.02898788]
[202.09042358 -48.86749649]
[187.18376160 -42.94618225]
[171.10755920 -43.19923782]
[173.24830627 -28.45927429]
[160.72831726 -18.78660011]
[154.85935974 -4.98242378]
[148.99040222 8.82175255]
[143.12144470 22.62592888]
[137.25247192 36.43010712]
[141.48510742 47.76198196]
[136.70855713 59.31050110]
[124.97945404 64.67621613]
[125.83361053 69.37509155]
[123.74503326 74.66043854]
[118.51516724 78.70519257]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[95.01317596 127.77430725]
[88.53367615 141.30264282]
[82.05418396 154.83099365]
[75.57468414 168.35934448]
[79.11663055 180.76165771]
[73.44132996 191.89605713]
[62.07717514 196.04122925]
[55.39698029 209.47160339]
[48.71678543 222.90197754]
[42.03659058 236.33235168]
[35.65798569 249.90856934]
[29.58415222 263.62384033]
[31.07076454 279.37503052]
[18.84259987 287.87924194]
[12.76876545 301.59448242]
[7.20953941 315.52630615]
[2.17262316 329.65533447]
[-2.86429310 343.78436279]
[4.27107573 355.20806885]
[3.53498602 368.46206665]
[-4.58012199 378.72009277]
[-16.93581581 382.37609863]
[-22.18253517 396.42855835]
[-27.42925262 410.48101807]
[-32.67597198 424.53350830]
[-19.61703873 431.98068237]
[-7.92191553 441.42633057]
[2.10646915 452.62576294]
[10.20835495 465.28894043]
[16.17388344 479.08779907]
[19.84853554 493.66494751]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 204]
[32 203]
[33 202]
[34 201]
[37 197]
[38 196]
[39 195]
[45 194]
[46 193]
[48 191]
[49 190]
[53 189]
[54 188]
[55 187]
[56 186]
[58 183]
[59 182]
[60 181]
[61 180]
[62 179]
[64 177]
[65 176]
[66 173]
[68 170]
[69 169]
[70 168]
[71 167]
[72 166]
[74 164]
[82 157]
[83 156]
[85 154]
[86 153]
[87 152]
[88 151]
[89 150]
[90 149]
[91 148]
[92 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
