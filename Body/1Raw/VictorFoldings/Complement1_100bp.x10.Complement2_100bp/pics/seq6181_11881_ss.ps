%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGGGGCGUAUUUGUUGUAUUCGAAGACUGAGAAUGGAGGGAGAGAGGAUGAGGACGAGCGUAGACGAUAUCACCUCCGGCCUCGUCCUUGUCCAACUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[55.50372314 597.11914062]
[42.97188187 605.42944336]
[29.21578598 611.50213623]
[14.63122368 615.16253662]
[-0.36217678 616.30529785]
[-15.33302593 614.89758301]
[-29.85058212 610.97985840]
[-43.49714661 604.66485596]
[-55.88008118 596.13427734]
[-66.64310455 585.63354492]
[-75.47653961 573.46478271]
[-82.12623596 559.97814941]
[-86.40086365 545.56164551]
[-88.17743683 530.63006592]
[-87.40483856 515.61303711]
[-84.10530090 500.94262695]
[-78.37374878 487.04092407]
[-70.37509918 474.30792236]
[-60.33948898 463.10995483]
[-48.55566025 453.76922607]
[-35.36265564 446.55447388]
[-21.14006805 441.67327881]
[-6.29710674 439.26611328]
[8.73916531 439.40219116]
[11.40496159 424.64096069]
[14.07075691 409.87976074]
[7.43341637 399.76678467]
[9.53352737 387.44714355]
[19.78290939 379.61688232]
[22.66818237 364.89700317]
[25.55345535 350.17709351]
[28.43872833 335.45721436]
[31.32399940 320.73733521]
[22.82720375 308.55783081]
[25.54358864 293.58865356]
[38.37617111 284.75903320]
[41.26144409 270.03912354]
[44.14671707 255.31924438]
[39.00201035 241.34135437]
[49.24930954 229.28717041]
[37.84561920 239.03169250]
[22.99873543 241.16944885]
[9.30912209 235.03800964]
[1.01865733 222.53727722]
[0.69623184 207.54075623]
[8.44175243 194.69525146]
[21.85518646 187.98109436]
[36.78023148 189.47875977]
[48.59220505 198.72415161]
[53.63105392 212.85275269]
[50.39992523 198.31283569]
[62.16580963 187.73576355]
[58.93468475 173.19584656]
[70.70056915 162.61877441]
[75.52656555 148.41632080]
[80.35256195 134.21385193]
[85.17856598 120.01140594]
[90.00456238 105.80894470]
[78.01070404 114.81713104]
[63.21942520 117.31072235]
[48.93512726 112.73264313]
[38.34896088 102.10564423]
[33.82590485 87.80382538]
[36.37641907 73.02225494]
[45.43071365 61.06316757]
[58.96603394 54.59825516]
[73.95855713 55.07180023]
[87.05891418 62.37800598]
[95.34045410 74.88465118]
[96.95304871 89.79773712]
[104.03015900 76.57220459]
[105.31983185 67.52928162]
[111.31235504 63.20360947]
[118.58558655 50.08491516]
[125.85881805 36.96622086]
[133.03417969 23.79374504]
[140.11128235 10.56821728]
[147.18840027 -2.65731049]
[154.26550293 -15.88283825]
[149.91242981 -30.83906174]
[157.27803040 -44.15081024]
[171.56332397 -48.20861816]
[178.64044189 -61.43414688]
[185.11993408 -74.96249390]
[190.98889160 -88.76667023]
[189.26792908 -104.49399567]
[201.36813354 -113.17930603]
[207.23709106 -126.98348236]
[213.10604858 -140.78765869]
[218.97500610 -154.59184265]
[224.84397888 -168.39601135]
[230.50675964 -182.28604126]
[235.96211243 -196.25883484]
[232.76365662 -214.39309692]
[246.88197327 -224.81614685]
[252.12869263 -238.86862183]
[257.37539673 -252.92109680]
[262.62213135 -266.97357178]
[249.53483582 -274.36743164]
[237.76539612 -283.71768188]
[227.60366821 -294.79403687]
[219.29985046 -307.32373047]
[213.05847168 -320.99819946]
[209.03321838 -335.48074341]
[207.32319641 -350.41467285]
[207.97055054 -365.43225098]
[210.95930481 -380.16363525]
[216.21589661 -394.24606323]
[223.61083984 -407.33273315]
[232.96205139 -419.10140991]
[244.03923035 -429.26223755]
[256.56961060 -437.56500244]
[270.24462891 -443.80526733]
[284.72747803 -447.82931519]
[299.66156006 -449.53811646]
[314.67907715 -448.88952637]
[329.41021729 -445.89953613]
[343.49221802 -440.64178467]
[356.57827759 -433.24575806]
[368.34619141 -423.89358521]
[378.50610352 -412.81555176]
[386.80783081 -400.28448486]
[393.04696655 -386.60897827]
[397.06982422 -372.12576294]
[398.77737427 -357.19155884]
[398.12753296 -342.17410278]
[395.13635254 -327.44320679]
[389.87744141 -313.36163330]
[382.48034668 -300.27618408]
[373.12719727 -288.50906372]
[362.04830933 -278.35006714]
[349.51657104 -270.04934692]
[335.84054565 -263.81137085]
[321.35702515 -259.78970337]
[306.42266846 -258.08337402]
[291.40524292 -258.73443604]
[276.67459106 -261.72683716]
[271.42788696 -247.67437744]
[266.18115234 -233.62190247]
[260.93444824 -219.56942749]
[265.66885376 -208.43786621]
[261.41271973 -196.68757629]
[249.93490601 -190.80348206]
[244.47955322 -176.83068848]
[245.54267883 -172.17463684]
[243.69218445 -166.80130005]
[238.64814758 -162.52705383]
[232.77919006 -148.72286987]
[226.91023254 -134.91870117]
[221.04125977 -121.11451721]
[215.17230225 -107.31034088]
[217.31304932 -92.57038116]
[204.79307556 -82.89770508]
[198.92410278 -69.09352875]
[213.20396423 -73.68544769]
[226.61073303 -66.95800781]
[231.46441650 -52.76498795]
[224.98458862 -39.23680115]
[210.88320923 -34.12300110]
[197.23817444 -40.35300827]
[191.86596680 -54.35704041]
[184.78886414 -41.13151550]
[189.33824158 -26.99508476]
[182.34945679 -13.48170280]
[167.49102783 -8.80573273]
[160.41392517 4.41979504]
[153.33682251 17.64532280]
[146.25970459 30.87084961]
[145.87551880 38.25151443]
[138.97750854 44.23944855]
[131.70428467 57.35814285]
[124.43105316 70.47683716]
[117.25568390 83.64931488]
[110.17858124 96.87483978]
[104.20701599 110.63494110]
[99.38101959 124.83740234]
[94.55502319 139.03985596]
[89.72902679 153.24230957]
[84.90302277 167.44476318]
[87.78896332 183.00053406]
[76.36826324 192.56175232]
[79.25420380 208.11752319]
[67.83351135 217.67874146]
[63.96920395 232.17243958]
[68.90753174 247.20318604]
[58.86660767 258.20449829]
[55.98133469 272.92440796]
[53.09606171 287.64428711]
[61.64569855 300.66510010]
[58.50993347 315.55206299]
[46.04389191 323.62258911]
[43.15861893 338.34249878]
[40.27334595 353.06237793]
[37.38807297 367.78225708]
[34.50279999 382.50216675]
[40.87316132 399.77932739]
[28.83197403 412.54556274]
[26.16617775 427.30676270]
[23.50038338 442.06799316]
[37.63443756 447.19989014]
[50.69780350 454.64682007]
[62.31462479 464.19445801]
[72.15065765 475.56811523]
[79.92290497 488.44058228]
[85.40774536 502.44146729]
[88.44736481 517.16790771]
[88.95429993 532.19628906]
[86.91397858 547.09405518]
[82.38510132 561.43273926]
[75.49797058 574.79968262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 199]
[25 198]
[26 197]
[29 195]
[30 194]
[31 193]
[32 192]
[33 191]
[36 188]
[37 187]
[38 186]
[40 184]
[50 183]
[52 181]
[54 179]
[55 178]
[56 177]
[57 176]
[58 175]
[70 174]
[71 173]
[73 172]
[74 171]
[75 170]
[76 168]
[77 167]
[78 166]
[79 165]
[82 162]
[83 161]
[84 154]
[85 153]
[87 151]
[88 150]
[89 149]
[90 148]
[91 147]
[92 144]
[93 143]
[95 140]
[96 139]
[97 138]
[98 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
