%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[111.15834045 466.54794312]
[103.45832062 453.66665649]
[96.75455475 440.23992920]
[91.08543396 426.34466553]
[86.48344421 412.06045532]
[82.97493744 397.46908569]
[80.58000946 382.65417480]
[79.31237793 367.70056152]
[79.17931366 352.69390869]
[80.18156433 337.72018433]
[82.31340027 322.86511230]
[85.56260681 308.21383667]
[89.91056824 293.85025024]
[95.33238220 279.85662842]
[101.79699707 266.31314087]
[109.26738739 253.29734802]
[117.70074463 240.88381958]
[127.04878235 229.14364624]
[137.25794983 218.14408875]
[148.26976013 207.94813538]
[160.02113342 198.61419678]
[151.60652161 186.19670105]
[143.19189453 173.77920532]
[134.68507385 161.42469788]
[126.08650970 149.13386536]
[117.39668274 136.90737915]
[108.61608124 124.74591827]
[99.83547974 112.58446503]
[90.78547668 100.62212372]
[81.47059631 88.86487579]
[72.15571594 77.10762787]
[62.84083176 65.35037231]
[52.75969315 54.24314117]
[41.95753479 43.83576584]
[31.15537834 33.42839432]
[20.35322189 23.02102089]
[9.55106640 12.61364651]
[-1.25109017 2.20627356]
[-19.22151184 -1.81186771]
[-23.41660690 -18.85205841]
[-34.37251663 -29.09745026]
[-45.32842636 -39.34284210]
[-56.28433609 -49.58823395]
[-67.46501923 -39.57374954]
[-79.48704529 -30.58661652]
[-92.25631714 -22.69716835]
[-105.67288971 -15.96715450]
[-119.63176727 -10.44924545]
[-134.02369690 -6.18662882]
[-148.73605347 -3.21266460]
[-163.65367126 -1.55062914]
[-178.65979004 -1.21353042]
[-193.63699341 -2.20400667]
[-208.46804810 -4.51430607]
[-223.03688049 -8.12634659]
[-237.22946167 -13.01185894]
[-250.93472290 -19.13260651]
[-264.04537964 -26.44068527]
[-276.45886230 -34.87889862]
[-288.07797241 -44.38120651]
[-298.81179810 -54.87323380]
[-308.57632446 -66.27287292]
[-317.29510498 -78.49089813]
[-324.89996338 -91.43168640]
[-331.33132935 -104.99395752]
[-336.53887939 -119.07156372]
[-340.48184204 -133.55433655]
[-343.12939453 -148.32890320]
[-344.46078491 -163.27966309]
[-344.46563721 -178.28958130]
[-343.14382935 -193.24118042]
[-340.50579834 -208.01745605]
[-336.57214355 -222.50276184]
[-331.37362671 -236.58370972]
[-324.95098877 -250.15011597]
[-317.35449219 -263.09579468]
[-308.64352417 -275.31942749]
[-298.88635254 -286.72534180]
[-288.15927124 -297.22427368]
[-276.54626465 -306.73403931]
[-264.13824463 -315.18023682]
[-251.03227234 -322.49673462]
[-237.33094788 -328.62631226]
[-223.14151001 -333.52093506]
[-208.57501221 -337.14236450]
[-193.74545288 -339.46218872]
[-178.76889038 -340.46231079]
[-163.76254272 -340.13485718]
[-148.84385681 -338.48242188]
[-134.12960815 -335.51791382]
[-119.73493195 -331.26455688]
[-105.77250671 -325.75561523]
[-92.35160828 -319.03424072]
[-79.57726288 -311.15301514]
[-67.54946136 -302.17361450]
[-56.36233902 -292.16632080]
[-46.10344696 -281.20944214]
[-36.85307312 -269.38879395]
[-28.68362427 -256.79681396]
[-21.65903473 -243.53208923]
[-15.83428001 -229.69844055]
[-11.25495148 -215.40412903]
[-7.95688677 -200.76103210]
[-5.96589899 -185.88374329]
[-5.29757071 -170.88871765]
[-5.95713234 -155.89329529]
[-7.93942213 -141.01484680]
[-11.22892570 -126.36982727]
[-15.79989719 -112.07283783]
[-21.61656380 -98.23578644]
[-28.63339806 -84.96696472]
[-36.79548645 -72.37021637]
[-46.03894424 -60.54414368]
[-35.08303452 -50.29875183]
[-24.12712479 -40.05335999]
[-13.17121506 -29.80796814]
[-1.07501066 -29.89960861]
[8.13638687 -21.45366669]
[9.15628338 -8.59588242]
[19.95843887 1.81149030]
[30.76059532 12.21886349]
[41.56275177 22.62623596]
[52.36491013 33.03361130]
[63.16706467 43.44098282]
[61.16492462 28.57520294]
[67.42105865 14.94212627]
[79.99694061 6.76611137]
[94.99578857 6.58058453]
[107.77005768 14.44303322]
[114.36149597 27.91719246]
[112.72766876 42.82794952]
[103.37484741 54.55503845]
[89.20109558 59.46469879]
[74.59808350 56.03549194]
[83.91296387 67.79273987]
[93.22784424 79.54999542]
[102.54273224 91.30724335]
[106.27196503 92.28968048]
[109.55004883 94.91113281]
[111.65469360 98.93326569]
[111.99693298 103.80386353]
[120.77753448 115.96531677]
[129.55813599 128.12677002]
[137.11882019 133.25257874]
[138.37734985 140.53529358]
[146.97590637 152.82614136]
[154.45944214 158.06394958]
[155.60939026 165.36459351]
[164.02401733 177.78208923]
[172.43862915 190.19958496]
[185.46310425 182.74435425]
[199.01411438 176.29550171]
[213.01402283 170.88996887]
[227.38265991 166.55873108]
[242.03771973 163.32658386]
[256.89523315 161.21203613]
[271.87014771 160.22720337]
[286.87661743 160.37773132]
[301.82876587 161.66276550]
[316.64086914 164.07493591]
[331.22814941 167.60041809]
[345.50698853 172.21903992]
[359.39566040 177.90432739]
[372.81457520 184.62371826]
[385.68685913 192.33871460]
[397.93881226 201.00515747]
[409.50024414 210.57336426]
[420.30493164 220.98857117]
[430.29095459 232.19108582]
[439.40118408 244.11674500]
[447.58334351 256.69726562]
[454.79064941 269.86056519]
[460.98178101 283.53121948]
[466.12127686 297.63098145]
[470.17968750 312.07904053]
[473.13378906 326.79266357]
[474.96667480 341.68756104]
[475.66778564 356.67840576]
[475.23315430 371.67938232]
[473.66525269 386.60449219]
[470.97308350 401.36828613]
[467.17202759 415.88616943]
[462.28390503 430.07504272]
[456.33666992 443.85357666]
[449.36444092 457.14285278]
[441.40710449 469.86676025]
[432.51025391 481.95242310]
[422.72485352 493.33062744]
[412.10693359 503.93618774]
[400.71737671 513.70831299]
[388.62136841 522.59112549]
[375.88818359 530.53363037]
[362.59078979 537.49041748]
[348.80535889 543.42163086]
[334.61080933 548.29321289]
[320.08850098 552.07733154]
[305.32159424 554.75238037]
[290.39465332 556.30285645]
[275.39321899 556.72003174]
[260.40316772 556.00146484]
[245.51042175 554.15130615]
[230.80024719 551.18005371]
[216.35691833 547.10479736]
[202.26315308 541.94891357]
[188.59970093 535.74188232]
[175.44479370 528.51928711]
[162.87382507 520.32244873]
[150.95877075 511.19839478]
[139.76788330 501.19931030]
[129.36526489 490.38250732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 150]
[22 149]
[23 148]
[24 146]
[25 145]
[26 143]
[27 142]
[28 141]
[29 137]
[30 136]
[31 135]
[32 134]
[33 124]
[34 123]
[35 122]
[36 121]
[37 120]
[38 119]
[40 116]
[41 115]
[42 114]
[43 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
