%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUUxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[103.16896057 672.49786377]
[93.64047241 660.83502197]
[86.84232330 647.39630127]
[83.09247589 632.81024170]
[82.56632233 617.75909424]
[85.28846741 602.94683838]
[91.13159180 589.06616211]
[99.82240295 576.76641846]
[110.95441437 566.62286377]
[124.00696564 559.10986328]
[138.36955261 554.57885742]
[137.03132629 539.63867188]
[135.69308472 524.69848633]
[134.35485840 509.75830078]
[133.01661682 494.81811523]
[131.67839050 479.87792969]
[122.60000610 471.88357544]
[121.36283112 459.44760132]
[129.17282104 449.18276978]
[128.05717468 434.22433472]
[126.94152832 419.26586914]
[125.82588196 404.30743408]
[124.71022797 389.34896851]
[123.59458160 374.39050293]
[122.47893524 359.43206787]
[120.47492218 344.56652832]
[117.58964539 329.84664917]
[107.18248749 340.64901733]
[92.23460388 339.39965820]
[83.76502228 327.01959229]
[88.01720428 312.63491821]
[101.85659790 306.84948730]
[115.08032990 313.92675781]
[113.29786682 299.03305054]
[111.51540375 284.13934326]
[98.63334656 279.60394287]
[88.91550446 269.91412354]
[84.29859161 256.92056274]
[85.73732758 243.13983154]
[93.00764465 231.26722717]
[104.73934174 223.64947510]
[103.17881775 208.73086548]
[101.61829376 193.81225586]
[92.59889984 181.95899963]
[98.85851288 167.42875671]
[97.29798889 152.51016235]
[93.47567749 146.18467712]
[95.82698822 137.35806274]
[94.48875427 122.41787720]
[93.15052032 107.47769165]
[89.35191345 100.36832428]
[91.90528107 92.30537415]
[90.78962708 77.34691620]
[89.67398071 62.38846588]
[88.55833435 47.43001175]
[87.44268799 32.47155762]
[86.32703400 17.51310539]
[83.38665009 13.20019341]
[82.48482513 8.64607430]
[83.37206268 4.66765118]
[85.51081848 1.86442494]
[85.06420898 -13.12892532]
[84.61760712 -28.12227440]
[84.17099762 -43.11562347]
[74.09667206 -49.42787552]
[68.37882233 -59.71413422]
[68.33682251 -71.36283112]
[73.86540985 -81.47966766]
[83.48960114 -87.60675049]
[83.48960114 -102.60675049]
[83.48960114 -117.60675049]
[74.93778229 -127.26227570]
[75.24658203 -139.75581360]
[83.70522308 -148.40322876]
[83.92855072 -163.40156555]
[84.15187836 -178.39990234]
[69.52689362 -181.99375916]
[56.07487869 -188.74887085]
[44.46903992 -198.32359314]
[35.28939438 -210.23526001]
[28.99378014 -223.88449097]
[25.89501381 -238.58540344]
[26.14536285 -253.60003662]
[29.72905350 -268.17544556]
[36.46323395 -281.58135986]
[46.00729370 -293.14694214]
[57.88009262 -302.29415894]
[71.48422241 -308.56680298]
[86.13604736 -311.65319824]
[86.35937500 -326.65155029]
[86.58270264 -341.64987183]
[86.80603027 -356.64822388]
[77.46658325 -372.51818848]
[87.04727936 -387.22116089]
[79.30998230 -401.02133179]
[87.04727936 -413.74862671]
[87.04727936 -428.74862671]
[72.79460907 -433.90972900]
[61.16868210 -443.63668823]
[53.57337952 -456.75488281]
[50.92587662 -471.68026733]
[53.54586792 -486.61047363]
[61.11698151 -499.74264526]
[72.72496796 -509.49099731]
[86.96810150 -514.67840576]
[102.12645721 -514.67840576]
[116.36959076 -509.49099731]
[127.97757721 -499.74264526]
[135.54869080 -486.61047363]
[138.16868591 -471.68026733]
[135.52117920 -456.75488281]
[127.92588043 -443.63668823]
[116.29994965 -433.90972900]
[102.04727936 -428.74862671]
[102.04727936 -413.74862671]
[109.78458405 -401.02133179]
[102.04727936 -387.22116089]
[110.37623596 -378.44876099]
[110.49900055 -365.95202637]
[101.80436707 -356.42489624]
[101.58103943 -341.42654419]
[101.35771179 -326.42822266]
[101.13438416 -311.42987061]
[115.68782043 -307.90859985]
[129.09915161 -301.23370361]
[140.69433594 -291.73703003]
[149.88981628 -279.89242554]
[156.22187805 -266.29193115]
[159.37001038 -251.61630249]
[159.17320251 -236.60086060]
[155.63810730 -221.99873352]
[148.93890381 -208.54299927]
[139.40867615 -196.90992737]
[127.52290344 -187.68499756]
[113.87572479 -181.33338928]
[99.15021515 -178.17657471]
[98.92688751 -163.17823792]
[98.70355988 -148.17990112]
[108.06429291 -133.33592224]
[98.48960114 -117.60675049]
[98.48960114 -102.60675049]
[98.48960114 -87.60675049]
[112.18968964 -75.46495819]
[112.67234802 -56.84561539]
[99.16435242 -43.56222916]
[99.61095428 -28.56888008]
[100.05756378 -13.57553101]
[100.50416565 1.41781902]
[101.28549194 16.39745712]
[102.40113831 31.35590935]
[103.51678467 46.31436157]
[104.63243866 61.27281570]
[105.74808502 76.23126984]
[106.86373138 91.18972015]
[108.09070587 106.13945770]
[109.42893982 121.07964325]
[110.76717377 136.01982117]
[112.21659851 150.94963074]
[113.77711487 165.86824036]
[122.90813446 178.78857422]
[116.53689575 192.25173950]
[118.09741974 207.17034912]
[119.65794373 222.08894348]
[134.82827759 228.66564941]
[144.55619812 241.91944885]
[146.26293945 258.17687988]
[139.57684326 272.99078369]
[126.40911865 282.35687256]
[128.19158936 297.25057983]
[129.97404480 312.14428711]
[132.30953979 326.96136475]
[135.19480896 341.68127441]
[142.71362305 328.70175171]
[156.37847900 322.51531982]
[171.09271240 325.42935181]
[181.36827087 336.35696411]
[183.37263489 351.22244263]
[176.35823059 364.48135376]
[162.94125366 371.18838501]
[148.12590027 368.84207153]
[137.43739319 358.31640625]
[138.55303955 373.27487183]
[139.66868591 388.23330688]
[140.78433228 403.19177246]
[141.89997864 418.15023804]
[143.01562500 433.10867310]
[144.13127136 448.06713867]
[154.84933472 463.04061890]
[146.61857605 478.53970337]
[147.95680237 493.47988892]
[149.29504395 508.42007446]
[150.63327026 523.36022949]
[151.97151184 538.30041504]
[153.30973816 553.24060059]
[168.24894714 555.14697266]
[182.42892456 560.22064209]
[195.18644714 568.22442627]
[205.92481995 578.78381348]
[214.14178467 591.40502930]
[219.45303345 605.49780273]
[221.61013794 620.40283203]
[220.51222229 635.42309570]
[216.21061707 649.85607910]
[208.90652466 663.02667236]
[198.94157410 674.31884766]
[186.78182983 683.20452881]
[172.99604797 689.26806641]
[158.22900391 692.22583008]
[143.17138672 691.93951416]
[128.52745056 688.42254639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 194]
[12 193]
[13 192]
[14 191]
[15 190]
[16 189]
[19 187]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[25 181]
[26 172]
[27 171]
[33 170]
[34 169]
[35 168]
[41 163]
[42 162]
[43 161]
[45 159]
[46 158]
[48 157]
[49 156]
[50 155]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[61 148]
[62 147]
[63 146]
[64 145]
[69 142]
[70 141]
[71 140]
[74 138]
[75 137]
[76 136]
[89 123]
[90 122]
[91 121]
[92 120]
[94 117]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
