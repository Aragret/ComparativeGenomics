%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[98.35037994 455.81692505]
[90.60427856 442.96313477]
[83.86485291 429.55404663]
[78.17166901 415.66845703]
[73.55812836 401.38775635]
[70.05130768 386.79580688]
[67.67178345 371.97824097]
[66.43352509 357.02197266]
[66.34379578 342.01483154]
[67.40312195 327.04483032]
[69.60529327 312.19985962]
[72.93737793 297.56701660]
[77.37982178 283.23220825]
[82.90656281 269.27947998]
[89.48516083 255.79080200]
[97.07701111 242.84527588]
[105.63755798 230.51889038]
[115.11657715 218.88398743]
[125.45841980 208.00883484]
[136.60241699 197.95726013]
[148.48315430 188.78823853]
[140.25434875 176.24684143]
[133.95669556 172.37886047]
[131.99800110 163.45689392]
[123.95683289 150.79437256]
[115.91565704 138.13185120]
[107.78044128 125.52953339]
[99.55163574 112.98813629]
[90.95307159 100.69729614]
[81.99237061 88.66791534]
[73.03167725 76.63854218]
[64.07098389 64.60916138]
[54.66883087 52.92158127]
[44.83824921 41.59198761]
[35.00766754 30.26239586]
[25.17708778 18.93280411]
[15.34650803 7.60320997]
[0.45822942 2.25066471]
[-2.03883791 -12.43313313]
[-11.86941910 -23.76272583]
[-19.85725021 -28.19356918]
[-21.76049232 -35.33496094]
[-31.42130280 -46.80965805]
[-43.63361359 -38.08615112]
[-56.50040436 -30.36049843]
[-69.94033051 -23.68154335]
[-83.86842346 -18.09151268]
[-98.19660950 -13.62574959]
[-112.83431244 -10.31248856]
[-127.68898773 -8.17267799]
[-142.66671753 -7.21984529]
[-157.67279053 -7.46001577]
[-172.61235046 -8.89167023]
[-187.39094543 -11.50575829]
[-201.91511536 -15.28575039]
[-216.09306335 -20.20775032]
[-229.83512878 -26.24063873]
[-243.05442810 -33.34627151]
[-255.66740417 -41.47972488]
[-267.59429932 -50.58957672]
[-278.75970459 -60.61822891]
[-289.09301758 -71.50228119]
[-298.52893066 -83.17291260]
[-307.00775146 -95.55634308]
[-314.47592163 -108.57427216]
[-320.88619995 -122.14440918]
[-326.19805908 -136.18093872]
[-330.37789917 -150.59513855]
[-333.39932251 -165.29585266]
[-335.24322510 -180.19015503]
[-335.89791870 -195.18386841]
[-335.35928345 -210.18220520]
[-333.63070679 -225.09031677]
[-330.72314453 -239.81398010]
[-326.65496826 -254.26008606]
[-321.45190430 -268.33731079]
[-315.14685059 -281.95663452]
[-307.77963257 -295.03198242]
[-299.39688110 -307.48065186]
[-290.05157471 -319.22396851]
[-279.80279541 -330.18765259]
[-268.71533203 -340.30242920]
[-256.85931396 -349.50430298]
[-244.30966187 -357.73513794]
[-231.14575195 -364.94284058]
[-217.45077515 -371.08190918]
[-203.31135559 -376.11349487]
[-188.81686401 -380.00576782]
[-174.05894470 -382.73416138]
[-159.13092041 -384.28137207]
[-144.12715149 -384.63766479]
[-129.14250183 -383.80078125]
[-114.27171326 -381.77600098]
[-99.60880280 -378.57611084]
[-85.24648285 -374.22137451]
[-71.27555084 -368.73928833]
[-57.78433609 -362.16455078]
[-44.85813904 -354.53869629]
[-32.57868195 -345.90997314]
[-21.02360535 -336.33288574]
[-10.26595974 -325.86804199]
[-0.37376180 -314.58157349]
[8.59044743 -302.54483032]
[16.56999016 -289.83392334]
[23.51441956 -276.52923584]
[29.37982941 -262.71484375]
[34.12913513 -248.47813416]
[37.73230743 -233.90908813]
[40.16656876 -219.09982300]
[41.41653061 -204.14395142]
[41.47428513 -189.13606262]
[40.33946991 -174.17103577]
[38.01926041 -159.34346008]
[34.52832413 -144.74711609]
[29.88873482 -130.47425842]
[24.12982178 -116.61515045]
[17.28800011 -103.25740051]
[9.40652180 -90.48545837]
[0.53522009 -78.38008881]
[-9.26981831 -67.01780701]
[-19.94660187 -56.47047043]
[-10.28579140 -44.99576950]
[-0.53982574 -33.59330750]
[9.29075527 -22.26371384]
[23.47588539 -17.72153664]
[26.67610168 -2.22737074]
[36.50668335 9.10222244]
[46.33726120 20.43181610]
[56.16784286 31.76140785]
[65.99842072 43.09100342]
[69.64622498 28.54130936]
[83.23195648 22.18302155]
[96.74073029 28.70322990]
[100.21437073 43.29548264]
[91.09224701 55.20291138]
[76.10035706 55.64846802]
[85.06105804 67.67784882]
[94.02175140 79.70722198]
[102.98244476 91.73660278]
[105.95003510 92.43152618]
[108.73035431 94.22159576]
[110.91729736 97.03952789]
[112.13529968 100.66895294]
[112.09303284 104.75932312]
[120.32184601 117.30072784]
[127.64610291 122.75902557]
[128.57818604 130.09066772]
[136.61935425 142.75320435]
[144.66052246 155.41572571]
[152.79574585 168.01803589]
[161.02455139 180.55943298]
[174.16543579 173.31097412]
[187.82261658 167.08972168]
[201.91595459 161.93217468]
[216.36276245 157.86860657]
[231.07824707 154.92285156]
[245.97604370 153.11219788]
[260.96871948 152.44729614]
[275.96832275 152.93202209]
[290.88677979 154.56355286]
[305.63659668 157.33229065]
[320.13119507 161.22200012]
[334.28549194 166.20983887]
[348.01641846 172.26657104]
[361.24343872 179.35661316]
[373.88891602 187.43838501]
[385.87860107 196.46446228]
[397.14218140 206.38183594]
[407.61352539 217.13235474]
[417.23120117 228.65290833]
[425.93878174 240.87586975]
[433.68511963 253.72953796]
[440.42480469 267.13848877]
[446.11825562 281.02398682]
[450.73205566 295.30459595]
[454.23916626 309.89645386]
[456.61895752 324.71398926]
[457.85751343 339.67022705]
[457.94750977 354.67736816]
[456.88848877 369.64739990]
[454.68658447 384.49240112]
[451.35479736 399.12530518]
[446.91259766 413.46023560]
[441.38613892 427.41302490]
[434.80780029 440.90185547]
[427.21618652 453.84750366]
[418.65588379 466.17407227]
[409.17706299 477.80914307]
[398.83544922 488.68450928]
[387.69161987 498.73626709]
[375.81106567 507.90551758]
[363.26345825 516.13842773]
[350.12243652 523.38659668]
[336.46514893 529.60760498]
[322.37170410 534.76489258]
[307.92483521 538.82818604]
[293.20928955 541.77368164]
[278.31146240 543.58404541]
[263.31875610 544.24865723]
[248.31916809 543.76361084]
[233.40072632 542.13183594]
[218.65097046 539.36279297]
[204.15646362 535.47283936]
[190.00225830 530.48468018]
[176.27143860 524.42773438]
[163.04455566 517.33740234]
[150.39924622 509.25540161]
[138.40971375 500.22912598]
[127.14632416 490.31152344]
[116.67517853 479.56082153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 151]
[22 150]
[24 149]
[25 148]
[26 147]
[27 145]
[28 144]
[29 139]
[30 138]
[31 137]
[32 136]
[33 130]
[34 129]
[35 128]
[36 127]
[37 126]
[39 124]
[40 123]
[42 122]
[43 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
