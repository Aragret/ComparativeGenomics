%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-20.55438805 289.15780640]
[-17.22064972 303.79483032]
[-15.31516647 318.68524170]
[-14.85572910 333.69006348]
[-15.84662628 348.66915894]
[-18.27860832 363.48269653]
[-22.12896729 377.99237061]
[-27.36175156 392.06265259]
[-33.92810440 405.56222534]
[-41.76671219 418.36505127]
[-50.80439377 430.35153198]
[-60.95675659 441.40979004]
[-72.12901306 451.43655396]
[-84.21684265 460.33822632]
[-97.10739136 468.03167725]
[-110.68029785 474.44509888]
[-124.80882263 479.51858521]
[-139.36106873 483.20474243]
[-154.20114136 485.46920776]
[-169.19047546 486.29080200]
[-184.18914795 485.66186523]
[-199.05708313 483.58825684]
[-213.65548706 480.08935547]
[-227.84803772 475.19784546]
[-241.50221252 468.95935059]
[-254.49055481 461.43212891]
[-266.69177246 452.68652344]
[-277.99191284 442.80410767]
[-288.28552246 431.87719727]
[-297.47647095 420.00781250]
[-305.47891235 407.30679321]
[-312.21817017 393.89270020]
[-317.63131714 379.89077759]
[-321.66778564 365.43179321]
[-324.28988647 350.65072632]
[-325.47314453 335.68557739]
[-325.20654297 320.67611694]
[-323.49252319 305.76242065]
[-320.34713745 291.08380127]
[-315.79971313 276.77728271]
[-309.89270020 262.97647095]
[-302.68130493 249.81016541]
[-294.23281860 237.40135193]
[-284.62612915 225.86587524]
[-273.95095825 215.31144714]
[-262.30694580 205.83660889]
[-249.80284119 197.52981567]
[-236.55538940 190.46864319]
[-222.68824768 184.71900940]
[-208.33093262 180.33460999]
[-193.61747742 177.35636902]
[-178.68527222 175.81211853]
[-163.67373657 175.71624756]
[-148.72302246 177.06967163]
[-133.97273254 179.85974121]
[-119.56059265 184.06040955]
[-105.62116241 189.63246155]
[-92.28459167 196.52386475]
[-79.67540741 204.67027283]
[-67.91134644 213.99563599]
[-57.10223389 224.41285706]
[-45.69977188 214.66690063]
[-34.29730988 204.92092896]
[-22.89484596 195.17495728]
[-11.49238396 185.42900085]
[-0.08992143 175.68302917]
[11.31254101 165.93707275]
[15.96019268 151.78614807]
[31.47775459 148.70135498]
[42.88021469 138.95539856]
[54.28268051 129.20942688]
[65.68514252 119.46346283]
[70.33279419 105.31254578]
[85.85035706 102.22776031]
[90.69329071 89.11145020]
[104.40367889 86.36977386]
[115.80614471 76.62380981]
[127.20860291 66.87784576]
[132.67184448 52.02982712]
[147.37382507 49.64213943]
[158.77627563 39.89617538]
[170.17874146 30.15020943]
[181.58120728 20.40424347]
[183.32014465 15.48253822]
[186.45916748 12.06204510]
[190.19201660 10.42469120]
[193.71733093 10.49153805]
[205.54360962 1.26443982]
[211.66438293 -13.32482338]
[226.45831299 -15.05364895]
[238.28459167 -24.28074837]
[229.89184570 -36.72030258]
[222.37733459 -49.70924759]
[215.77684021 -63.18568039]
[210.12184143 -77.08538055]
[205.43927002 -91.34210205]
[201.75144958 -105.88791656]
[199.07595825 -120.65349579]
[197.42553711 -135.56848145]
[196.80805969 -150.56179810]
[197.22645569 -165.56198120]
[198.67874146 -180.49755859]
[201.15798950 -195.29736328]
[204.65240479 -209.89083862]
[209.14530945 -224.20846558]
[214.61529541 -238.18200684]
[221.03631592 -251.74487305]
[228.37774658 -264.83242798]
[236.60462952 -277.38229370]
[245.67773438 -289.33468628]
[255.55383301 -300.63259888]
[266.18585205 -311.22225952]
[277.52313232 -321.05316162]
[289.51165771 -330.07846069]
[302.09429932 -338.25515747]
[315.21105957 -345.54425049]
[328.79943848 -351.91104126]
[342.79473877 -357.32519531]
[357.13018799 -361.76089478]
[371.73751831 -365.19699097]
[386.54708862 -367.61712646]
[401.48834229 -369.00973511]
[416.49008179 -369.36822510]
[431.48080444 -368.69088745]
[446.38909912 -366.98089600]
[461.14385986 -364.24645996]
[475.67483521 -360.50057983]
[489.91275024 -355.76110840]
[503.78973389 -350.05065918]
[517.23968506 -343.39639282]
[530.19854736 -335.83004761]
[542.60449219 -327.38769531]
[554.39843750 -318.10955811]
[565.52410889 -308.03985596]
[575.92858887 -297.22656250]
[585.56225586 -285.72119141]
[594.37921143 -273.57861328]
[602.33740234 -260.85668945]
[609.39892578 -247.61599731]
[615.53015137 -233.91969299]
[620.70184326 -219.83300781]
[624.88928223 -205.42309570]
[628.07263184 -190.75862122]
[630.23669434 -175.90945435]
[631.37109375 -160.94638062]
[631.47052002 -145.94068909]
[630.53442383 -130.96389771]
[628.56726074 -116.08736420]
[625.57843018 -101.38200378]
[621.58221436 -86.91788483]
[616.59759521 -72.76393890]
[610.64831543 -58.98760986]
[603.76281738 -45.65455246]
[595.97387695 -32.82830811]
[587.31854248 -20.56999779]
[577.83813477 -8.93803787]
[567.57781982 2.01213765]
[556.58642578 12.22834682]
[544.91644287 21.66190529]
[532.62347412 30.26785660]
[519.76599121 38.00518799]
[506.40533447 44.83702850]
[492.60519409 50.73081970]
[478.43133545 55.65847778]
[463.95126343 59.59651566]
[449.23397827 62.52617264]
[434.34967041 64.43347931]
[419.36923218 65.30935669]
[404.36407471 65.14962006]
[389.40567017 63.95503616]
[374.56533813 61.73129654]
[359.91378784 58.48900223]
[345.52081299 54.24359894]
[331.45504761 49.01531982]
[317.78350830 42.82908249]
[304.57131958 35.71436691]
[291.88150024 27.70507431]
[279.77447510 18.83937645]
[268.30795288 9.15952301]
[257.53659058 -1.28835857]
[247.51168823 -12.45447731]
[235.68542480 -3.22737932]
[230.41053772 10.70189953]
[214.77070618 13.09070969]
[202.94442749 22.31780815]
[191.32717896 31.80670547]
[179.92471313 41.55267334]
[168.52224731 51.29863739]
[157.11978149 61.04460144]
[152.47213745 75.19552612]
[136.95457458 78.28030396]
[125.55210876 88.02627563]
[114.14964294 97.77223969]
[109.30670929 110.88854980]
[95.59632111 113.63022614]
[90.13308716 128.47824097]
[75.43110657 130.86592102]
[64.02864838 140.61189270]
[52.62618256 150.35786438]
[41.22372055 160.10382080]
[35.76048660 174.95184326]
[21.05850601 177.33952332]
[9.65604401 187.08549500]
[-1.74641836 196.83146667]
[-13.14888096 206.57742310]
[-24.55134392 216.32339478]
[-35.95380783 226.06935120]
[-47.35626984 235.81532288]
[-38.74905014 248.11456299]
[-31.36907768 261.18710327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 208]
[62 207]
[63 206]
[64 205]
[65 204]
[66 203]
[67 202]
[69 200]
[70 199]
[71 198]
[72 197]
[74 195]
[76 193]
[77 192]
[78 191]
[80 189]
[81 188]
[82 187]
[83 186]
[87 185]
[88 184]
[90 182]
[91 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
