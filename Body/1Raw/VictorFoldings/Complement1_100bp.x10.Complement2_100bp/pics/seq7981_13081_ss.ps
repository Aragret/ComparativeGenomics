%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[119.23883820 855.77911377]
[105.22602081 850.41125488]
[91.60755920 844.10961914]
[78.44558716 836.90301514]
[65.80016327 828.82427979]
[53.72898483 819.91021729]
[42.28713226 810.20166016]
[31.52680969 799.74273682]
[21.49711609 788.58129883]
[12.24381542 776.76818848]
[3.80912733 764.35736084]
[-3.76846147 751.40539551]
[-10.45437622 737.97143555]
[-16.21810913 724.11676025]
[-21.03336525 709.90454102]
[-24.87816811 695.39971924]
[-27.73497772 680.66839600]
[-29.59075928 665.77783203]
[-30.43704414 650.79595947]
[-30.26996994 635.79113770]
[-29.09030151 620.83178711]
[-26.90341949 605.98620605]
[-23.71930313 591.32220459]
[-19.55248070 576.90655518]
[-14.42196465 562.80511475]
[-8.35116386 549.08221436]
[-1.36777973 535.80041504]
[6.49632502 523.02038574]
[15.20526791 510.80044556]
[24.71931076 499.19631958]
[34.99504471 488.26095581]
[45.98558426 478.04425049]
[57.64077759 468.59283447]
[69.90744781 459.94979858]
[82.72962189 452.15463257]
[96.04878998 445.24285889]
[109.80419159 439.24603271]
[123.93305969 434.19152832]
[138.37092590 430.10238647]
[135.26681519 415.42709351]
[132.16270447 400.75180054]
[121.95909882 389.90118408]
[126.67309570 374.79855347]
[123.56898499 360.12326050]
[120.46487427 345.44796753]
[117.36076355 330.77267456]
[114.25665283 316.09735107]
[101.09371185 314.50659180]
[89.04074860 308.92770386]
[79.27660370 299.89083862]
[72.76101685 288.26510620]
[70.14029694 275.17504883]
[71.68325806 261.89172363]
[77.25368500 249.70950317]
[86.32225037 239.81968689]
[98.01679230 233.19422913]
[95.35099030 218.43299866]
[92.68519592 203.67178345]
[87.22920227 217.64433289]
[76.61919403 228.24752808]
[62.64314270 233.69454956]
[47.65625381 233.06745911]
[34.18408966 226.47195435]
[24.49694061 215.01947021]
[20.22726440 200.63998413]
[22.09457397 185.75666809]
[29.78419685 172.87762451]
[42.00029755 164.17320251]
[56.68424606 161.11024475]
[71.36154175 164.20492554]
[83.55879974 172.93572998]
[91.22109985 185.83293152]
[83.67414856 172.99186707]
[91.61605835 159.30842590]
[91.83938599 144.31008911]
[92.06271362 129.31175232]
[92.28604126 114.31341553]
[84.69254303 105.48278046]
[84.95262909 93.83917236]
[92.93286133 85.35641479]
[93.37946320 70.36306763]
[86.05648041 56.33864212]
[94.16928864 43.84738159]
[94.61589050 28.85403061]
[95.06250000 13.86068058]
[95.06250000 -1.13931942]
[94.61589050 -16.13266945]
[94.16928864 -31.12601852]
[81.51705170 -39.91391754]
[76.52380371 -54.29866028]
[80.90641785 -68.69506836]
[92.78368378 -77.64317322]
[84.63893127 -91.20686340]
[91.99386597 -104.15885925]
[91.54725647 -119.15220642]
[91.10065460 -134.14555359]
[76.70063782 -138.88003540]
[64.79025269 -148.25653076]
[56.80773926 -161.14277649]
[53.71702576 -175.98269653]
[55.89133072 -190.98429871]
[63.06809235 -204.33607483]
[74.38068390 -214.42573547]
[88.46305847 -220.03488159]
[103.61469269 -220.48620605]
[118.00596619 -215.72518921]
[129.89904785 -206.32676697]
[137.85780334 -193.42582703]
[140.92115784 -178.58024597]
[138.71920776 -163.58267212]
[131.51785278 -150.24414062]
[120.18668365 -140.17535400]
[106.09400177 -134.59216309]
[106.54061127 -119.59881592]
[106.98721313 -104.60546112]
[115.10002136 -92.11420441]
[107.77703094 -78.08978271]
[120.16584015 -69.86448669]
[125.39758301 -55.75445938]
[121.26937866 -41.09801483]
[109.16263580 -31.57262611]
[109.60924530 -16.57927513]
[110.05584717 -1.58592534]
[112.00133514 0.43230116]
[113.26458740 3.34276366]
[113.50177765 6.88947296]
[112.46798706 10.69680786]
[110.05584717 14.30728626]
[109.60924530 29.30063629]
[109.16263580 44.29398727]
[116.51757050 57.24598312]
[108.37281799 70.80966949]
[107.92620850 85.80301666]
[116.25568390 100.36310577]
[107.28437805 114.53674316]
[107.06105042 129.53507996]
[106.83772278 144.53341675]
[106.61439514 159.53175354]
[114.14537048 173.44560242]
[106.21943665 186.05625916]
[107.44641113 201.00599670]
[110.11221313 215.76721191]
[112.77800751 230.52842712]
[129.31765747 233.85882568]
[143.27900696 243.26593018]
[152.53602600 257.28317261]
[155.69218445 273.74465942]
[152.29107666 290.11972046]
[142.88208008 303.90203857]
[128.93196106 312.99325562]
[132.03607178 327.66854858]
[135.14018250 342.34384155]
[138.24429321 357.01916504]
[141.34840393 371.69445801]
[151.77403259 383.59475708]
[146.83799744 397.64767456]
[149.94210815 412.32296753]
[153.04621887 426.99829102]
[167.90328979 424.89099121]
[182.86871338 423.79147339]
[197.87422180 423.70483398]
[212.85136414 424.63137817]
[227.73176575 426.56692505]
[242.44755554 429.50262451]
[256.93157959 433.42510986]
[271.11776733 438.31643677]
[284.94137573 444.15432739]
[298.33932495 450.91213989]
[311.25048828 458.55902100]
[323.61596680 467.06008911]
[335.37930298 476.37655640]
[346.48684692 486.46591187]
[356.88793945 497.28213501]
[366.53509521 508.77584839]
[375.38427734 520.89459229]
[383.39517212 533.58312988]
[390.53115845 546.78356934]
[396.75970459 560.43554688]
[402.05239868 574.47692871]
[406.38510132 588.84362793]
[409.73800659 603.46997070]
[412.09582520 618.28936768]
[413.44784546 633.23406982]
[413.78784180 648.23602295]
[413.11425781 663.22662354]
[411.43023682 678.13757324]
[408.74337769 692.90087891]
[405.06600952 707.44903564]
[400.41485596 721.71582031]
[394.81118774 735.63598633]
[388.28054810 749.14611816]
[380.85275269 762.18457031]
[372.56164551 774.69177246]
[363.44509888 786.61071777]
[353.54470825 797.88702393]
[342.90563965 808.46923828]
[331.57644653 818.30908203]
[319.60879517 827.36163330]
[307.05734253 835.58557129]
[293.97927856 842.94342041]
[280.43435669 849.40155029]
[266.48434448 854.93054199]
[252.19288635 859.50518799]
[237.62519836 863.10455322]
[222.84774780 865.71228027]
[207.92796326 867.31634521]
[192.93394470 867.90960693]
[177.93406677 867.48919678]
[162.99679565 866.05718994]
[148.19027710 863.61993408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 158]
[40 157]
[41 156]
[43 154]
[44 153]
[45 152]
[46 151]
[47 150]
[56 143]
[57 142]
[58 141]
[72 140]
[74 138]
[75 137]
[76 136]
[77 135]
[80 133]
[81 132]
[83 130]
[84 129]
[85 128]
[86 123]
[87 122]
[88 121]
[92 117]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
