%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[52.04305649 421.37619019]
[43.87620163 433.96502686]
[34.86928940 445.96722412]
[25.06431198 457.32675171]
[14.50698757 467.99069214]
[3.24653816 477.90930176]
[-8.66453362 487.03637695]
[-21.17069244 495.32928467]
[-34.21363068 502.74945068]
[-47.73252869 509.26220703]
[-61.66436386 514.83721924]
[-75.94416809 519.44848633]
[-90.50537872 523.07452393]
[-105.28008270 525.69836426]
[-120.19940948 527.30786133]
[-135.19378662 527.89550781]
[-150.19331360 527.45849609]
[-165.12805176 525.99884033]
[-179.92835999 523.52349854]
[-194.52523804 520.04382324]
[-208.85063171 515.57617188]
[-222.83773804 510.14135742]
[-236.42135620 503.76464844]
[-249.53813171 496.47586060]
[-262.12692261 488.30889893]
[-274.12905884 479.30191040]
[-285.48852539 469.49685669]
[-296.15240479 458.93945312]
[-306.07095337 447.67895508]
[-315.19790649 435.76782227]
[-323.49075317 423.26159668]
[-330.91082764 410.21862793]
[-337.42349243 396.69967651]
[-342.99841309 382.76779175]
[-347.60958862 368.48797607]
[-351.23550415 353.92672729]
[-353.85928345 339.15200806]
[-355.46868896 324.23266602]
[-356.05621338 309.23828125]
[-355.61907959 294.23876953]
[-354.15936279 279.30404663]
[-351.68386841 264.50375366]
[-348.20416260 249.90689087]
[-343.73638916 235.58152771]
[-338.30145264 221.59445190]
[-331.92468262 208.01087952]
[-324.63580322 194.89414978]
[-316.46875000 182.30540466]
[-307.46170044 170.30334473]
[-297.65655518 158.94393921]
[-287.09909058 148.28013611]
[-275.83850098 138.36167908]
[-263.92730713 129.23478699]
[-251.42105103 120.94201660]
[-238.37800598 113.52204132]
[-224.85902405 107.00946045]
[-210.92710876 101.43463898]
[-196.64724731 96.82355499]
[-182.08598328 93.19772339]
[-167.31124878 90.57404327]
[-152.39190674 88.96475220]
[-137.39750671 88.37734222]
[-122.39799500 88.81456757]
[-107.46327972 90.27437592]
[-92.66300201 92.74996185]
[-78.06616974 96.22979736]
[-63.74083710 100.69763947]
[-49.75379944 106.13266754]
[-36.17027283 112.50954437]
[-23.05358505 119.79852295]
[-10.46489620 127.96562958]
[1.53709996 136.97279358]
[12.89644337 146.77798462]
[23.56017113 157.33552551]
[34.81626892 147.42088318]
[46.07236481 137.50622559]
[50.50881577 123.28768158]
[65.97872925 119.97220612]
[70.41517639 105.75365448]
[85.88509369 102.43817902]
[90.53220367 89.25122070]
[104.20025635 86.30572510]
[115.45635223 76.39107513]
[126.71244812 66.47641754]
[127.86576843 50.94234085]
[139.42228699 41.04782104]
[154.22454834 42.24306870]
[165.48065186 32.32841873]
[170.95527649 14.74689484]
[188.28150940 11.95971775]
[199.38874817 1.87857938]
[210.49598694 -8.20255947]
[221.60321045 -18.28369904]
[232.63510132 -28.44724464]
[243.59100342 -38.69263840]
[254.54690552 -48.93802643]
[265.50280762 -59.18341827]
[256.23107910 -70.98664856]
[248.00833130 -83.54323578]
[240.89544678 -96.76020813]
[234.94511414 -110.53971863]
[230.20135498 -124.77973938]
[226.69931030 -139.37484741]
[224.46492004 -154.21697998]
[223.51469421 -169.19624329]
[223.85569763 -184.20175171]
[225.48539734 -199.12239075]
[228.39172363 -213.84770203]
[232.55316162 -228.26866150]
[237.93888855 -242.27848816]
[244.50904846 -255.77346802]
[252.21499634 -268.65368652]
[260.99966431 -280.82376099]
[270.79800415 -292.19363403]
[281.53750610 -302.67907715]
[293.13864136 -312.20248413]
[305.51550293 -320.69332886]
[318.57647705 -328.08877563]
[332.22485352 -334.33401489]
[346.35958862 -339.38287354]
[360.87600708 -343.19793701]
[375.66665649 -345.75097656]
[390.62203979 -347.02307129]
[405.63140869 -347.00482178]
[420.58364868 -345.69631958]
[435.36804199 -343.10729980]
[449.87515259 -339.25692749]
[463.99755859 -334.17370605]
[477.63067627 -327.89523315]
[490.67361450 -320.46804810]
[503.02978516 -311.94708252]
[514.60772705 -302.39547729]
[525.32165527 -291.88394165]
[535.09234619 -280.49026489]
[543.84735107 -268.29882812]
[551.52191162 -255.39990234]
[558.05920410 -241.88897705]
[563.41082764 -227.86608887]
[567.53717041 -213.43504333]
[570.40765381 -198.70271301]
[572.00103760 -183.77815247]
[572.30554199 -168.77185059]
[571.31884766 -153.79493713]
[569.04833984 -138.95829773]
[565.51080322 -124.37174988]
[560.73242188 -110.14331055]
[554.74853516 -96.37832642]
[547.60351562 -83.17869568]
[539.35021973 -70.64215851]
[530.04980469 -58.86153030]
[519.77105713 -47.92402649]
[508.59011841 -37.91063309]
[496.58978271 -28.89548111]
[483.85885620 -20.94531822]
[470.49160767 -14.11900711]
[456.58703613 -8.46708679]
[442.24807739 -4.03140450]
[427.58087158 -0.84479988]
[412.69400024 1.06913400]
[397.69775391 1.69622672]
[382.70306396 1.03183532]
[367.82104492 -0.91912097]
[353.16180420 -4.14219809]
[338.83389282 -8.61353207]
[324.94342041 -14.30001926]
[311.59320068 -21.15955925]
[298.88211060 -29.14136124]
[286.90420532 -38.18633652]
[275.74819946 -48.22751236]
[264.79229736 -37.98212051]
[253.83639526 -27.73672676]
[242.88049316 -17.49133492]
[240.14210510 -10.62670898]
[231.68435669 -7.17646456]
[220.57711792 2.90467429]
[209.46989441 12.98581314]
[198.36265564 23.06695175]
[197.46453857 35.13011551]
[188.29342651 43.61978149]
[175.39529419 43.58451462]
[164.13920593 53.49916458]
[163.45655823 68.33390808]
[152.18251038 78.54911804]
[136.62710571 77.73251343]
[125.37100220 87.64717102]
[114.11490631 97.56182098]
[109.46779633 110.74877930]
[95.79974365 113.69427490]
[90.55818176 128.62199402]
[75.89337921 131.22830200]
[70.65181732 146.15602112]
[55.98701477 148.76232910]
[44.73091888 158.67697144]
[33.47482300 168.59162903]
[42.60195541 180.50263977]
[50.89497375 193.00874329]
[58.31520462 206.05162048]
[64.82805634 219.57048035]
[70.40316772 233.50227356]
[75.01453400 247.78205872]
[78.64065552 262.34323120]
[81.26463318 277.11791992]
[82.87422943 292.03723145]
[83.46193695 307.03161621]
[83.02501678 322.03115845]
[81.56551361 336.96588135]
[79.09021759 351.76620483]
[75.61067963 366.36312866]
[71.14311981 380.68853760]
[65.70837402 394.67568970]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 194]
[75 193]
[76 192]
[78 190]
[80 188]
[82 186]
[83 185]
[84 184]
[87 181]
[88 180]
[90 177]
[91 176]
[92 175]
[93 174]
[94 172]
[95 171]
[96 170]
[97 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
