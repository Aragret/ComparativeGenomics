%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[41.58418274 721.92425537]
[28.37692642 729.05688477]
[14.58346653 734.97692871]
[0.31486413 739.63665771]
[-14.31399632 742.99859619]
[-29.18532944 745.03564453]
[-44.17939758 745.73150635]
[-59.17547607 745.08038330]
[-74.05282593 743.08770752]
[-88.69165039 739.76947021]
[-102.97409058 735.15228271]
[-116.78515625 729.27343750]
[-130.01364136 722.18023682]
[-142.55302429 713.92980957]
[-154.30236816 704.58856201]
[-165.16705322 694.23168945]
[-175.05961609 682.94256592]
[-183.90039062 670.81213379]
[-191.61819458 657.93811035]
[-198.15089417 644.42401123]
[-203.44590759 630.37878418]
[-207.46057129 615.91540527]
[-210.16258240 601.15039062]
[-211.53016663 586.20263672]
[-211.55233765 571.19244385]
[-210.22889709 556.24066162]
[-207.57051086 541.46777344]
[-203.59857178 526.99261475]
[-198.34507751 512.93176270]
[-191.85231018 499.39849854]
[-184.17256165 486.50167847]
[-175.36764526 474.34521484]
[-165.50846863 463.02694702]
[-154.67442322 452.63803101]
[-142.95272827 443.26211548]
[-130.43775940 434.97467041]
[-117.23027802 427.84240723]
[-103.43663788 421.92282104]
[-89.16789246 417.26351929]
[-74.53893280 413.90200806]
[-59.66753387 411.86538696]
[-44.67344284 411.17004395]
[-29.67738533 411.82156372]
[-14.80010033 413.81469727]
[-0.16137466 417.13342285]
[4.45263481 402.86068726]
[9.06664371 388.58795166]
[13.68065357 374.31521606]
[18.29466248 360.04248047]
[4.62003565 351.77697754]
[-6.69755554 340.48556519]
[-15.00348949 326.81573486]
[-19.81599426 311.55261230]
[-20.85408592 295.57403564]
[-18.05397606 279.79998779]
[-11.57297230 265.13952637]
[-1.78064942 252.43864441]
[10.76222706 242.43121338]
[25.33580780 235.69671631]
[41.10247803 232.62664795]
[57.15498734 233.40171814]
[61.34199905 218.99794006]
[65.52901459 204.59416199]
[61.65186691 190.21302795]
[72.93372345 179.12112427]
[77.12073517 164.71734619]
[80.87703705 150.19528198]
[84.19929504 135.56782532]
[87.52155304 120.94036102]
[90.84381866 106.31290436]
[77.60735321 113.36953735]
[63.21840286 109.13183594]
[55.91960907 96.02734375]
[59.89205170 81.56291962]
[72.86013794 74.02442932]
[87.39515686 77.73027039]
[95.17063904 90.55662537]
[99.78464508 76.28389740]
[104.39865875 62.01116180]
[109.01266479 47.73843002]
[113.09233093 33.30387497]
[116.63200378 18.72749901]
[120.17167664 4.15112448]
[123.71134949 -10.42525101]
[119.44910431 -25.66151810]
[129.97125244 -36.20351791]
[133.51092529 -50.77989197]
[137.05059814 -65.35626984]
[139.60643005 -80.13692474]
[141.16694641 -95.05552673]
[142.72747803 -109.97412872]
[144.28799438 -124.89273834]
[145.84851074 -139.81134033]
[146.85278320 -154.77767944]
[147.29937744 -169.77104187]
[147.74598694 -184.76438904]
[148.19259644 -199.75773621]
[133.94447327 -204.84164429]
[121.96595764 -214.08125305]
[113.43058014 -226.57135010]
[109.17455292 -241.08828735]
[109.61483765 -256.20983887]
[114.70829773 -270.45455933]
[123.95592499 -282.42687988]
[136.45173645 -290.95388794]
[150.97152710 -295.20019531]
[166.09277344 -294.74975586]
[180.33407593 -289.64675903]
[192.30020142 -280.39111328]
[200.81883240 -267.88958740]
[205.05540466 -253.36695862]
[204.59484863 -238.24600220]
[199.48229980 -224.00813293]
[190.21864319 -212.04821777]
[177.71141052 -203.53796387]
[163.18594360 -199.31112671]
[162.73933411 -184.31777954]
[162.29273987 -169.32443237]
[161.84613037 -154.33108521]
[174.38735962 -162.56013489]
[188.68728638 -158.03111267]
[194.20452881 -144.08262634]
[186.87197876 -130.99699402]
[172.09492493 -128.42045593]
[160.76712036 -138.25082397]
[159.20660400 -123.33221436]
[157.64607239 -108.41360474]
[156.08555603 -93.49500275]
[154.52502441 -78.57640076]
[165.01388550 -89.29945374]
[179.61083984 -92.75325775]
[193.79289246 -87.86759949]
[203.16555786 -76.15635681]
[204.82461548 -61.24839020]
[198.25599670 -47.76309204]
[185.49505615 -39.87902832]
[170.49591064 -40.03916168]
[157.90621948 -48.19387436]
[151.62696838 -61.81659317]
[148.08729553 -47.24021912]
[144.54762268 -32.66384506]
[149.06304932 -18.47017670]
[138.28771973 -6.88557863]
[134.74804688 7.69079685]
[131.20837402 22.26717186]
[127.66870880 36.84354782]
[141.64140320 31.38791466]
[154.69454956 38.77814102]
[157.20584106 53.56642532]
[147.32408142 64.85139465]
[132.33369446 64.31419373]
[123.28540039 52.35243607]
[118.67138672 66.62516785]
[114.05738068 80.89790344]
[109.44337463 95.17063904]
[105.47127533 109.63516235]
[102.14901733 124.26261902]
[98.82675934 138.89007568]
[95.50449371 153.51754761]
[96.93563843 157.61703491]
[96.98306274 161.56193542]
[95.86526489 164.93623352]
[93.91341400 167.43762207]
[91.52452087 168.90435791]
[87.33750916 183.30813599]
[90.91516876 198.71952820]
[79.93279266 208.78117371]
[75.74578094 223.18495178]
[71.55876923 237.58872986]
[83.88812256 244.36341858]
[94.52545166 253.56007385]
[103.00312042 264.77090454]
[108.94915009 277.49963379]
[112.10356903 291.18350220]
[112.32975006 305.21810913]
[109.62036133 318.98410034]
[104.09753418 331.87460327]
[96.00740814 343.32183838]
[85.70910645 352.82220459]
[73.65884399 359.95846558]
[60.38967514 364.41796875]
[46.48795319 366.00646973]
[32.56739426 364.65649414]
[27.95338631 378.92922974]
[23.33937645 393.20196533]
[18.72536850 407.47470093]
[14.11135864 421.74743652]
[27.92260170 427.62585449]
[41.15130234 434.71865845]
[53.69094467 442.96871948]
[65.44056702 452.30963135]
[76.30557251 462.66616821]
[86.19847107 473.95495605]
[95.03961182 486.08511353]
[102.75782013 498.95895386]
[109.29093933 512.47277832]
[114.58636475 526.51788330]
[118.60147858 540.98114014]
[121.30393982 555.74603271]
[122.67198181 570.69378662]
[122.69461060 585.70397949]
[121.37162781 600.65576172]
[118.71368408 615.42877197]
[114.74219513 629.90405273]
[109.48912811 643.96502686]
[102.99677277 657.49853516]
[95.31741333 670.39556885]
[86.51287079 682.55230713]
[76.65404510 693.87084961]
[65.82031250 704.26013184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 187]
[46 186]
[47 185]
[48 184]
[49 183]
[61 169]
[62 168]
[63 167]
[65 165]
[66 164]
[67 159]
[68 158]
[69 157]
[70 156]
[77 155]
[78 154]
[79 153]
[80 152]
[81 146]
[82 145]
[83 144]
[84 143]
[86 141]
[87 140]
[88 139]
[89 129]
[90 128]
[91 127]
[92 126]
[93 125]
[94 119]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
