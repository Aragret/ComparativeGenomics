%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[120.82087708 202.67224121]
[125.73207855 188.48823547]
[131.89497375 174.80155945]
[139.25991821 161.72242737]
[147.76763916 149.35614014]
[136.22134399 139.78102112]
[124.67504120 130.20590210]
[113.12873840 120.63078308]
[101.58243561 111.05566406]
[89.96517181 101.56676483]
[78.27759552 92.16461182]
[66.59001160 82.76246643]
[54.59149170 91.87953949]
[40.76794052 97.85630798]
[25.92462349 100.34932709]
[10.92508316 99.21797180]
[-3.35910892 94.53232574]
[-16.09898567 86.56888580]
[-26.55629921 75.79425049]
[-34.12629700 62.83773804]
[-38.37269211 48.45469284]
[-39.05281448 33.48241043]
[-36.13146973 18.79140091]
[-29.78272438 5.23478460]
[-41.47030640 -4.16736650]
[-53.15788651 -13.56951809]
[-64.84546661 -22.97166824]
[-76.53305054 -32.37382126]
[-86.68300629 -21.32209206]
[-97.53404999 -10.95787048]
[-109.03971100 -1.32553267]
[-121.15073395 7.53367138]
[-133.81524658 15.58180618]
[-146.97900391 22.78440666]
[-160.58566284 29.11063194]
[-174.57695007 34.53339005]
[-188.89294434 39.02946091]
[-203.47233582 42.57958984]
[-218.25270081 45.16857910]
[-233.17076111 46.78533554]
[-248.16261292 47.42293930]
[-263.16406250 47.07866287]
[-278.11090088 45.75397491]
[-292.93908691 43.45455170]
[-307.58511353 40.19023895]
[-321.98629761 35.97501373]
[-336.08096313 30.82692909]
[-349.80874634 24.76802826]
[-363.11087036 17.82425690]
[-375.93035889 10.02534962]
[-388.21231079 1.40470266]
[-399.90417480 -8.00076866]
[-410.95584106 -18.15078926]
[-421.31997681 -29.00189400]
[-430.95227051 -40.50761414]
[-439.81140137 -52.61868668]
[-447.85946655 -65.28324127]
[-455.06198120 -78.44705200]
[-461.38812256 -92.05374908]
[-466.81079102 -106.04505920]
[-471.30679321 -120.36107635]
[-474.85681152 -134.94049072]
[-477.44573975 -149.72088623]
[-479.06240845 -164.63894653]
[-479.69992065 -179.63081360]
[-479.35556030 -194.63226318]
[-478.03076172 -209.57907104]
[-475.73126221 -224.40724182]
[-472.46685791 -239.05326843]
[-468.25155640 -253.45442200]
[-463.10339355 -267.54904175]
[-457.04440308 -281.27679443]
[-450.10055542 -294.57888794]
[-442.30157471 -307.39831543]
[-433.68084717 -319.68023682]
[-424.27529907 -331.37203979]
[-414.12521362 -342.42364502]
[-403.27404785 -352.78771973]
[-391.76828003 -362.41992188]
[-379.65716553 -371.27899170]
[-366.99255371 -379.32696533]
[-353.82870483 -386.52941895]
[-340.22195435 -392.85549927]
[-326.23062134 -398.27807617]
[-311.91458130 -402.77398682]
[-297.33514404 -406.32394409]
[-282.55474854 -408.91275024]
[-267.63665771 -410.52932739]
[-252.64480591 -411.16674805]
[-237.64334106 -410.82229614]
[-222.69653320 -409.49743652]
[-207.86839294 -407.19784546]
[-193.22238159 -403.93334961]
[-178.82124329 -399.71795654]
[-164.72665405 -394.56970215]
[-150.99894714 -388.51065063]
[-137.69689941 -381.56671143]
[-124.87751007 -373.76766968]
[-112.59564209 -365.14688110]
[-100.90390778 -355.74127197]
[-89.85235596 -345.59112549]
[-79.48832703 -334.73989868]
[-69.85619354 -323.23403931]
[-60.99720383 -311.12286377]
[-52.94929504 -298.45822144]
[-45.74692535 -285.29434204]
[-39.42094040 -271.68756104]
[-33.99843216 -257.69619751]
[-29.50261307 -243.38011169]
[-25.95274162 -228.80065918]
[-23.36401558 -214.02023315]
[-21.74752235 -199.10215759]
[-21.11018181 -184.11029053]
[-21.45472527 -169.10882568]
[-22.77967644 -154.16203308]
[-25.07936287 -139.33389282]
[-28.34393501 -124.68791199]
[-32.55941391 -110.28680420]
[-37.70774841 -96.19223022]
[-43.76689148 -82.46456146]
[-50.71089935 -69.16256714]
[-58.51003265 -56.34321594]
[-67.13089752 -44.06140137]
[-55.44331741 -34.65924835]
[-43.75573730 -25.25709915]
[-32.06815338 -15.85494804]
[-20.38057327 -6.45279646]
[-8.49868011 -15.55823421]
[5.22548437 -21.55884743]
[19.99589348 -24.10184860]
[34.95470428 -23.03513908]
[49.23206711 -18.41639519]
[61.99673462 -10.50996399]
[72.50441742 0.22825336]
[80.14122772 13.17709923]
[84.45949554 27.58608055]
[85.20405579 42.61886978]
[82.32729340 57.40185165]
[75.99216461 71.07488251]
[87.67974091 80.47703552]
[99.36732483 89.87918091]
[107.12266541 92.07629395]
[111.15755463 99.50936127]
[122.70385742 109.08448029]
[134.25016785 118.65959930]
[145.79646301 128.23472595]
[157.34275818 137.80984497]
[167.92121887 127.16077423]
[179.41166687 117.50283051]
[191.72158813 108.91378021]
[204.75189209 101.46276855]
[218.39764404 95.20979309]
[232.54898071 90.20519257]
[247.09194946 86.48927307]
[261.90948486 84.09194946]
[276.88226318 83.03251648]
[291.88970947 83.31951141]
[306.81103516 84.95062256]
[321.52606201 87.91271973]
[335.91632080 92.18195343]
[349.86596680 97.72393799]
[363.26269531 104.49406433]
[375.99856567 112.43782043]
[387.97113037 121.49124146]
[399.08392334 131.58143616]
[409.24749756 142.62716675]
[418.38000488 154.53948975]
[426.40792847 167.22250366]
[433.26660156 180.57406616]
[438.90084839 194.48670959]
[443.26528931 208.84838867]
[446.32476807 223.54348755]
[448.05465698 238.45367432]
[448.44104004 253.45890808]
[447.48080444 268.43835449]
[445.18164062 283.27145386]
[441.56213379 297.83871460]
[436.65136719 312.02288818]
[430.48889160 325.70974731]
[423.12432861 338.78909302]
[414.61697388 351.15563965]
[405.03533936 362.70977783]
[394.45657349 373.35852051]
[382.96582031 383.01611328]
[370.65563965 391.60479736]
[357.62512207 399.05541992]
[343.97915649 405.30798340]
[329.82766724 410.31213379]
[315.28457642 414.02761841]
[300.46697998 416.42449951]
[285.49420166 417.48345947]
[270.48672485 417.19601440]
[255.56547546 415.56445312]
[240.85052490 412.60189819]
[226.46038818 408.33224487]
[212.51091003 402.78982544]
[199.11441040 396.01928711]
[186.37875366 388.07513428]
[174.40649414 379.02136230]
[163.29400635 368.93081665]
[153.13078308 357.88476562]
[143.99862671 345.97216797]
[135.97109985 333.28890991]
[129.11280823 319.93713379]
[123.47898102 306.02432251]
[119.11498260 291.66250610]
[116.05595398 276.96731567]
[114.32651520 262.05706787]
[113.94059753 247.05183411]
[114.90129852 232.07240295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 141]
[11 140]
[12 139]
[24 127]
[25 126]
[26 125]
[27 124]
[28 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
