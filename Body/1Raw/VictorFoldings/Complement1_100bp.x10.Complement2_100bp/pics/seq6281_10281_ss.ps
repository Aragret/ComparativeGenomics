%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[87.02571869 801.88836670]
[72.14779663 799.94531250]
[57.40802383 797.14044189]
[42.85628128 793.48327637]
[28.54180336 788.98620605]
[14.51302624 783.66442871]
[0.81741935 777.53594971]
[-12.49867630 770.62145996]
[-25.39020157 762.94445801]
[-37.81353760 754.53082275]
[-49.72664261 745.40911865]
[-61.08921432 735.61010742]
[-71.86280060 725.16705322]
[-82.01094055 714.11523438]
[-91.49930573 702.49200439]
[-100.29578400 690.33673096]
[-108.37062073 677.69061279]
[-115.69647980 664.59631348]
[-122.24858093 651.09826660]
[-128.00474548 637.24206543]
[-132.94551086 623.07458496]
[-137.05415344 608.64379883]
[-140.31675720 593.99853516]
[-142.72230530 579.18835449]
[-144.26263428 564.26336670]
[-144.93254089 549.27410889]
[-144.72976685 534.27117920]
[-143.65499878 519.30548096]
[-141.71186829 504.42755127]
[-138.90693665 489.68777466]
[-135.24972534 475.13604736]
[-130.75257874 460.82159424]
[-125.43072510 446.79284668]
[-119.30217743 433.09725952]
[-112.38766479 419.78118896]
[-104.71059418 406.88970947]
[-96.29693604 394.46640015]
[-87.17515564 382.55334473]
[-77.37612152 371.19079590]
[-66.93299866 360.41726685]
[-55.88111496 350.26916504]
[-44.25786591 340.78085327]
[-32.10258484 331.98440552]
[-19.45639992 323.90963745]
[-6.36210203 316.58383179]
[7.13600063 310.03179932]
[20.99223518 304.27566528]
[35.15971375 299.33496094]
[49.59050369 295.22637939]
[64.23577118 291.96383667]
[79.04595947 289.55838013]
[93.97096252 288.01809692]
[93.30117798 273.03305054]
[92.63139343 258.04800415]
[84.33350372 245.67892456]
[91.44687653 231.54702759]
[90.77709198 216.56199646]
[90.10730743 201.57695007]
[89.43752289 186.59191895]
[88.76773834 171.60687256]
[88.09795380 156.62184143]
[87.42816925 141.63679504]
[80.39337921 154.88488770]
[68.87332153 164.49156189]
[54.57693100 169.03173828]
[39.62499237 167.83192444]
[26.23553848 161.07008362]
[16.39481354 149.74929810]
[11.56262875 135.54895020]
[12.45581245 120.57556152]
[18.94186401 107.05036163]
[30.05861855 96.97972107]
[44.15697098 91.85756683]
[59.14551163 92.44373322]
[72.80078888 98.65127563]
[83.09710693 109.55933380]
[88.50675201 123.54788208]
[90.95247650 108.74861145]
[93.06710052 93.89841461]
[94.84957123 79.00469208]
[96.63203430 64.11097717]
[98.41449738 49.21725845]
[100.19696808 34.32354355]
[101.97943115 19.42982483]
[102.31440735 4.43356609]
[93.57212830 -8.75290871]
[100.34138489 -22.02040291]
[99.22573853 -36.97885513]
[98.11009216 -51.93730927]
[83.20092010 -54.06587219]
[69.09806061 -59.35012817]
[56.46112061 -67.54291534]
[45.88115311 -78.26104736]
[37.85300446 -91.00321960]
[32.75216293 -105.17345428]
[30.81721115 -120.10897827]
[32.13864517 -135.11123657]
[36.65465546 -149.47856140]
[44.15402603 -162.53894043]
[54.28599930 -173.68151855]
[66.57667542 -182.38516235]
[80.45121002 -188.24275208]
[95.26065063 -190.98034668]
[110.31234741 -190.46989441]
[124.90229797 -186.73527527]
[138.34809875 -179.95114136]
[150.02087402 -170.43481445]
[159.37466431 -158.63140869]
[165.97198486 -145.09295654]
[169.50424194 -130.45269775]
[169.80625916 -115.39537811]
[166.86387634 -100.62525940]
[160.81474304 -86.83316040]
[151.94177246 -74.66416168]
[140.65997314 -64.68743896]
[127.49700928 -57.36961365]
[113.06854248 -53.05295944]
[114.18419647 -38.09450531]
[115.29984283 -23.13605118]
[123.96231842 -11.01950550]
[117.27286530 3.31791735]
[124.15287781 -10.01119900]
[135.80842590 -19.45304489]
[150.27531433 -23.41650200]
[165.11563110 -21.23365974]
[177.82853699 -13.27236462]
[186.27166748 -0.87423491]
[189.02220154 13.87142658]
[185.61663818 28.47971725]
[176.62887573 40.48888397]
[163.57350159 47.87516785]
[148.65057373 49.39385605]
[134.37487793 44.78902054]
[123.15212250 34.83665466]
[116.87314606 21.21229172]
[115.09068298 36.10600662]
[113.30821991 50.99972534]
[111.52574921 65.89344025]
[109.74328613 80.78716278]
[107.96082306 95.68087769]
[109.89068604 99.01973724]
[110.33946228 103.19304657]
[108.96747589 107.52024841]
[105.75174713 111.19433594]
[103.30602264 125.99360657]
[102.41320801 140.96701050]
[103.08299255 155.95205688]
[103.75277710 170.93708801]
[104.42256165 185.92213440]
[105.09234619 200.90716553]
[105.76213074 215.89221191]
[106.43191528 230.87724304]
[114.77770996 244.31816101]
[107.61643219 257.37823486]
[108.28621674 272.36328125]
[108.95600128 287.34829712]
[123.95890045 287.55090332]
[138.92463684 288.62548828]
[153.80258179 290.56842041]
[168.54237366 293.37316895]
[183.09414673 297.03021240]
[197.40866089 301.52719116]
[211.43748474 306.84884644]
[225.13313293 312.97723389]
[238.44929504 319.89157104]
[251.34088135 327.56848145]
[263.76428223 335.98199463]
[275.67745972 345.10363770]
[287.04013062 354.90252686]
[297.81378174 365.34552002]
[307.96203613 376.39727783]
[317.45046997 388.02041626]
[326.24707031 400.17556763]
[334.32199097 412.82165527]
[341.64797974 425.91586304]
[348.20019531 439.41387939]
[353.95648193 453.27005005]
[358.89733887 467.43746948]
[363.00610352 481.86819458]
[366.26882935 496.51342773]
[368.67449951 511.32357788]
[370.21496582 526.24859619]
[370.88497925 541.23785400]
[370.68234253 556.24078369]
[369.60769653 571.20648193]
[367.66467285 586.08441162]
[364.85989380 600.82421875]
[361.20278931 615.37597656]
[356.70574951 629.69049072]
[351.38400269 643.71929932]
[345.25558472 657.41491699]
[338.34118652 670.73101807]
[330.66421509 683.62255859]
[322.25067139 696.04595947]
[313.12896729 707.95910645]
[303.33004761 719.32171631]
[292.88699341 730.09533691]
[281.83520508 740.24353027]
[270.21203613 749.73193359]
[258.05682373 758.52844238]
[245.41070557 766.60333252]
[232.31646729 773.92926025]
[218.81842041 780.48144531]
[204.96223450 786.23767090]
[190.79479980 791.17846680]
[176.36404419 795.28717041]
[161.71881104 798.54986572]
[146.90863037 800.95544434]
[131.98364258 802.49584961]
[116.99434662 803.16583252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 156]
[53 155]
[54 154]
[56 152]
[57 151]
[58 150]
[59 149]
[60 148]
[61 147]
[62 146]
[77 145]
[78 144]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 121]
[87 119]
[88 118]
[89 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
