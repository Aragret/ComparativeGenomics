%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[132.07583618 443.04751587]
[145.07998657 435.31787109]
[141.75772095 420.69042969]
[138.43547058 406.06295776]
[135.11320496 391.43548584]
[131.79095459 376.80804443]
[119.19172668 364.59219360]
[124.78427124 347.04782104]
[121.24459839 332.47146606]
[117.70492554 317.89508057]
[108.99619293 330.10809326]
[94.22568512 332.72192383]
[81.85460663 324.23919678]
[78.96968842 309.51922607]
[87.22353363 296.99429321]
[101.88796997 293.83923340]
[114.56198120 301.86062622]
[112.33686829 287.02658081]
[110.11174774 272.19253540]
[107.88663483 257.35848999]
[98.12303925 268.74588013]
[83.17823029 270.03149414]
[71.61328125 260.47891235]
[70.05311584 245.56025696]
[79.39147186 233.82164001]
[94.27890778 231.98745728]
[106.18674469 241.10760498]
[105.29393005 226.13418579]
[104.40111542 211.16078186]
[103.50830078 196.18737793]
[102.17006683 181.24719238]
[92.97519684 169.52954102]
[99.01778412 154.90771484]
[97.23531342 140.01399231]
[95.45285034 125.12027740]
[93.67038727 110.22656250]
[91.66637421 95.36103058]
[89.44125366 80.52698517]
[87.21613312 65.69294739]
[84.99102020 50.85890198]
[82.16693878 47.56064224]
[80.68804169 43.90312958]
[80.50209045 40.35336685]
[81.41054535 37.31341171]
[83.10240936 35.07830048]
[81.76417542 20.13811684]
[80.42594147 5.19793129]
[68.95143127 14.85896778]
[54.21464157 12.06130791]
[47.07897949 -1.13271832]
[52.80459213 -14.99696541]
[67.17077637 -19.31122589]
[79.58647156 -10.89661312]
[79.36314392 -25.89495087]
[79.13981628 -40.89328766]
[71.19790649 -54.57673264]
[78.74485779 -67.41779327]
[78.52153015 -82.41613007]
[65.74801636 -94.36839294]
[65.57426453 -111.52312469]
[77.61941528 -123.25995636]
[77.17280579 -138.25331116]
[76.72620392 -153.24665833]
[67.89068604 -162.64328003]
[67.82737732 -175.14047241]
[76.02480316 -184.03590393]
[75.80147552 -199.03424072]
[75.57814789 -214.03257751]
[75.35482025 -229.03091431]
[75.13149261 -244.02925110]
[60.16218948 -245.13265991]
[45.34897995 -247.55474854]
[30.80780602 -251.27656555]
[16.65247345 -256.26898193]
[2.99376917 -262.49291992]
[-10.06140900 -269.89965820]
[-22.41088295 -278.43124390]
[-33.95800018 -288.02093506]
[-44.61238861 -298.59359741]
[-54.29065704 -310.06655884]
[-62.91706467 -322.35000610]
[-70.42409515 -335.34777832]
[-76.75299072 -348.95816040]
[-81.85421753 -363.07464600]
[-85.68785858 -377.58673096]
[-88.22389984 -392.38085938]
[-89.44250488 -407.34121704]
[-89.33412933 -422.35073853]
[-87.89962006 -437.29196167]
[-85.15020752 -452.04791260]
[-81.10740662 -466.50314331]
[-75.80286407 -480.54449463]
[-69.27809143 -494.06207275]
[-61.58415222 -506.95007324]
[-52.78126907 -519.10766602]
[-42.93833542 -530.43969727]
[-32.13238525 -540.85742188]
[-20.44799614 -550.27929688]
[-7.97661018 -558.63171387]
[5.18416214 -565.84918213]
[18.93131828 -571.87518311]
[33.15726852 -576.66271973]
[47.75066757 -580.17413330]
[62.59730911 -582.38208008]
[77.58098602 -583.26922607]
[92.58443451 -582.82861328]
[107.49022675 -581.06365967]
[122.18170929 -577.98828125]
[136.54389954 -573.62646484]
[150.46437073 -568.01239014]
[163.83419800 -561.19000244]
[176.54873657 -553.21264648]
[188.50848389 -544.14276123]
[199.61981201 -534.05139160]
[209.79577637 -523.01751709]
[218.95672607 -511.12738037]
[227.03099060 -498.47415161]
[233.95533752 -485.15682983]
[239.67558289 -471.27966309]
[244.14698792 -456.95120239]
[247.33451843 -442.28366089]
[249.21324158 -427.39178467]
[249.76846313 -412.39212036]
[248.99581909 -397.40209961]
[246.90138245 -382.53903198]
[243.50152588 -367.91925049]
[238.82284546 -353.65713501]
[232.90199280 -339.86434937]
[225.78529358 -326.64883423]
[217.52842712 -314.11398315]
[208.19604492 -302.35797119]
[197.86116028 -291.47274780]
[186.60469055 -281.54351807]
[174.51470947 -272.64804077]
[161.68583679 -264.85586548]
[148.21850586 -258.22799683]
[134.21809387 -252.81636047]
[119.79417419 -248.66323853]
[105.05964661 -245.80119324]
[90.12982941 -244.25257874]
[90.35315704 -229.25424194]
[90.57648468 -214.25590515]
[90.79981232 -199.25756836]
[91.02313995 -184.25923157]
[100.82167816 -169.70053101]
[91.71955109 -153.69325256]
[92.16616058 -138.69990540]
[92.61276245 -123.70655823]
[103.13525391 -116.26971436]
[107.51853943 -103.94620514]
[103.95124054 -91.16008759]
[93.51986694 -82.63945770]
[93.74319458 -67.64112091]
[101.66912842 -55.03045654]
[94.13815308 -41.11661530]
[94.36148071 -26.11827850]
[94.58480835 -11.11994076]
[95.36612701 3.85969687]
[96.70436096 18.79988098]
[98.04259491 33.74006653]
[99.82506561 48.63378525]
[102.05017853 63.46782684]
[104.27529907 78.30187225]
[106.50041199 93.13591766]
[109.90326691 97.12772369]
[110.82735443 102.74193573]
[108.56410217 108.44409180]
[110.34656525 123.33781433]
[112.12903595 138.23153687]
[113.91149902 153.12524414]
[123.23386383 165.90820312]
[117.06378174 179.46473694]
[119.78841400 182.84561157]
[121.15775299 186.54553223]
[121.23793793 190.09925842]
[120.23937225 193.11082458]
[118.48170471 195.29457092]
[119.37451935 210.26797485]
[120.26734161 225.24137878]
[121.16015625 240.21478271]
[122.72068024 255.13339233]
[124.94579315 269.96743774]
[127.17091370 284.80148315]
[129.39602661 299.63552856]
[132.28129578 314.35540771]
[135.82096863 328.93179321]
[139.36064148 343.50814819]
[149.94944763 350.87295532]
[152.59756470 363.08651733]
[146.41841125 373.48577881]
[149.74066162 388.11325073]
[153.06292725 402.74069214]
[156.38519287 417.36816406]
[159.70744324 431.99563599]
[174.77470398 433.34951782]
[188.68533325 439.29507446]
[200.07652283 449.24978638]
[207.83227539 462.23837280]
[211.19274902 476.98837280]
[209.82875061 492.05471802]
[203.87388611 505.96136475]
[193.91154480 517.34588623]
[180.91777039 525.09289551]
[166.16552734 528.44354248]
[151.10009766 527.06939697]
[137.19744873 521.10522461]
[125.81961060 511.13528442]
[118.08127594 498.13629150]
[114.74055481 483.38180542]
[116.12475586 468.31732178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 194]
[3 193]
[4 192]
[5 191]
[6 190]
[8 187]
[9 186]
[10 185]
[17 184]
[18 183]
[19 182]
[20 181]
[27 180]
[28 179]
[29 178]
[30 177]
[31 172]
[33 170]
[34 169]
[35 168]
[36 167]
[37 164]
[38 163]
[39 162]
[40 161]
[45 160]
[46 159]
[47 158]
[53 157]
[54 156]
[55 155]
[57 153]
[58 152]
[61 148]
[62 147]
[63 146]
[66 144]
[67 143]
[68 142]
[69 141]
[70 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
