%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[80.01087189 169.47496033]
[86.22853851 183.14198303]
[90.93206787 197.40116882]
[94.06630707 212.08529663]
[95.59451294 227.02223206]
[95.49876404 242.03681946]
[93.78018951 256.95303345]
[90.45893097 271.59600830]
[85.57392883 285.79403687]
[79.18246460 299.38067627]
[71.35947418 312.19659424]
[62.19667053 324.09155273]
[51.80149078 334.92611694]
[40.29580688 344.57321167]
[27.81451797 352.91973877]
[14.50396442 359.86785889]
[0.52020359 365.33612061]
[-13.97281170 369.26037598]
[-28.80515862 371.59460449]
[-43.80293655 372.31149292]
[-58.79030228 371.40258789]
[-73.59153748 368.87857056]
[-88.03310394 364.76904297]
[-101.94568634 359.12213135]
[-115.16616058 352.00411987]
[-127.53952789 343.49841309]
[-138.92071533 333.70474243]
[-149.17628479 322.73794556]
[-158.18600464 310.72662354]
[-165.84420776 297.81155396]
[-172.06114197 284.14416504]
[-176.76390076 269.88473511]
[-179.89735413 255.20045471]
[-181.42475891 240.26344299]
[-181.32820129 225.24884033]
[-179.60882568 210.33271790]
[-176.28677368 195.68992615]
[-171.40101624 181.49215698]
[-165.00881958 167.90588379]
[-157.18513489 155.09037781]
[-148.02169800 143.19589233]
[-137.62593079 132.36190796]
[-126.11972809 122.71543121]
[-113.63799286 114.36956024]
[-100.32706451 107.42215729]
[-86.34300995 101.95466614]
[-71.84977722 98.03119659]
[-57.01730728 95.69774628]
[-42.01948929 94.98167419]
[-27.03217316 95.89138031]
[-12.23107338 98.41619110]
[2.21027350 102.52651215]
[16.12255096 108.17414856]
[29.34264374 115.29288483]
[41.71555328 123.79925537]
[53.09621429 133.59353638]
[64.05212402 123.34813690]
[75.00803375 113.10274506]
[85.96394348 102.85735321]
[90.21636963 89.53787994]
[103.79066467 86.18673706]
[114.74657440 75.94134521]
[125.70248413 65.69595337]
[136.65840149 55.45056152]
[140.78890991 47.30337524]
[147.85452271 45.13568878]
[158.96176147 35.05455017]
[170.06898499 24.97341347]
[160.52590942 13.39692116]
[151.54446411 1.37946320]
[143.14501953 -11.05173779]
[135.34657288 -23.86852074]
[128.16680908 -37.04185486]
[121.62200165 -50.54189301]
[115.72695923 -64.33805084]
[110.49504852 -78.39908600]
[105.93811035 -92.69313812]
[102.06647491 -107.18782806]
[98.88890839 -121.85031891]
[96.41261292 -136.64739990]
[94.64319611 -151.54554749]
[93.58467102 -166.51101685]
[93.23942566 -181.50988770]
[93.60825348 -196.50820923]
[94.69030762 -211.47198486]
[96.48314667 -226.36734009]
[98.98269653 -241.16050720]
[102.18331146 -255.81797791]
[106.07773590 -270.30657959]
[110.65714264 -284.59344482]
[115.91115570 -298.64624023]
[121.82788086 -312.43310547]
[128.39390564 -325.92282104]
[135.59437561 -339.08486938]
[143.41294861 -351.88937378]
[151.83193970 -364.30734253]
[160.83226013 -376.31066895]
[170.39353943 -387.87213135]
[180.49409485 -398.96557617]
[191.11105347 -409.56585693]
[202.22038269 -419.64892578]
[213.79689026 -429.19198608]
[225.81437683 -438.17340088]
[238.24559021 -446.57281494]
[251.06239319 -454.37121582]
[264.23574829 -461.55096436]
[277.73580933 -468.09573364]
[291.53198242 -473.99075317]
[305.59301758 -479.22262573]
[319.88708496 -483.77954102]
[334.38177490 -487.65115356]
[349.04428101 -490.82867432]
[363.84136963 -493.30493164]
[378.73950195 -495.07431030]
[393.70498657 -496.13281250]
[408.70385742 -496.47802734]
[423.70217896 -496.10916138]
[438.66595459 -495.02706909]
[453.56130981 -493.23419189]
[468.35446167 -490.73461914]
[483.01193237 -487.53396606]
[497.50051880 -483.63952637]
[511.78735352 -479.06008911]
[525.84014893 -473.80603027]
[539.62701416 -467.88928223]
[553.11669922 -461.32321167]
[566.27874756 -454.12271118]
[579.08325195 -446.30410767]
[591.50115967 -437.88510132]
[603.50451660 -428.88473511]
[615.06591797 -419.32345581]
[626.15936279 -409.22286987]
[636.75958252 -398.60586548]
[646.84265137 -387.49652100]
[656.38568115 -375.91998291]
[665.36706543 -363.90249634]
[673.76647949 -351.47125244]
[681.56481934 -338.65441895]
[688.74456787 -325.48107910]
[695.28930664 -311.98098755]
[701.18426514 -298.18481445]
[706.41613770 -284.12374878]
[710.97302246 -269.82968140]
[714.84454346 -255.33497620]
[718.02209473 -240.67247009]
[720.49829102 -225.87538147]
[722.26763916 -210.97721863]
[723.32611084 -196.01174927]
[723.67126465 -181.01287842]
[723.30236816 -166.01455688]
[722.22027588 -151.05078125]
[720.42736816 -136.15544128]
[717.92773438 -121.36228943]
[714.72705078 -106.70482635]
[710.83258057 -92.21625519]
[706.25311279 -77.92940521]
[700.99902344 -63.87664032]
[695.08221436 -50.08979034]
[688.51611328 -36.60009003]
[681.31561279 -23.43809509]
[673.49700928 -10.63362408]
[665.07794189 1.78431845]
[656.07757568 13.78760052]
[646.51623535 25.34903145]
[636.41564941 36.44241714]
[625.79858398 47.04263306]
[614.68927002 57.12566757]
[603.11267090 66.66867065]
[591.09515381 75.65003204]
[578.66387939 84.04940033]
[565.84704590 91.84775543]
[552.67370605 99.02742004]
[539.17358398 105.57214355]
[525.37738037 111.46708679]
[511.31634521 116.69890594]
[497.02224731 121.25574493]
[482.52752686 125.12728882]
[467.86502075 128.30474854]
[453.06793213 130.78094482]
[438.16976929 132.55026245]
[423.20431519 133.60868835]
[408.20541382 133.95382690]
[393.20709229 133.58489990]
[378.24331665 132.50274658]
[363.34799194 130.70980835]
[348.55484009 128.21014404]
[333.89739990 125.00943756]
[319.40884399 121.11492157]
[305.12197876 116.53541565]
[291.06924438 111.28130341]
[277.28240967 105.36448669]
[263.79272461 98.79837036]
[250.63073730 91.59781647]
[237.82627869 83.77915192]
[225.40835571 75.36007690]
[213.40509033 66.35967255]
[201.84368896 56.79832077]
[190.75032043 46.69768524]
[180.15013123 36.08064651]
[169.04289246 46.16178513]
[157.93566895 56.24292374]
[146.90379333 66.40647125]
[135.94787598 76.65186310]
[124.99196625 86.89725494]
[114.03605652 97.14264679]
[109.78363037 110.46212006]
[96.20933533 113.81326294]
[85.25342560 124.05865479]
[74.29751587 134.30404663]
[63.34160614 144.54943848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 210]
[57 209]
[58 208]
[59 207]
[61 205]
[62 204]
[63 203]
[64 202]
[66 201]
[67 200]
[68 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
