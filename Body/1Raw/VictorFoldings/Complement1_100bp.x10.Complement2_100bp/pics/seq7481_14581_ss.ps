%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[211.58003235 210.94215393]
[217.12092590 196.99374390]
[223.79473877 183.55055237]
[210.95581055 175.79415894]
[198.11686707 168.03776550]
[185.27792358 160.28137207]
[172.43898010 152.52497864]
[158.08477783 156.33184814]
[144.95376587 148.64866638]
[141.05809021 133.56683350]
[128.21916199 125.81044769]
[115.38021851 118.05405426]
[102.54127502 110.29766846]
[89.42258453 103.02443695]
[76.04230499 96.24444580]
[62.66203308 89.46445465]
[49.28176117 82.68446350]
[58.10592651 94.81434631]
[63.20947647 108.91944122]
[64.18992615 123.88736725]
[60.96995163 138.53768921]
[53.80349350 151.71501160]
[43.25572586 162.38012695]
[30.15849495 169.69192505]
[15.54469967 173.07379150]
[0.56684536 172.25900269]
[-13.59385109 167.31181335]
[-25.82061958 158.62237549]
[-35.14920425 146.87599182]
[-40.84391403 132.99902344]
[-42.45564270 118.08586884]
[-39.85728073 103.31263733]
[-33.25374603 89.84439850]
[-23.16582298 78.74333191]
[-10.38908386 70.88489532]
[4.06884289 66.88885498]
[19.06774521 67.07035065]
[33.42789459 71.41651917]
[22.62573624 61.00914764]
[11.82358074 50.60177612]
[1.02142417 40.19440079]
[-7.32985497 36.49386597]
[-9.86262989 29.55075264]
[-20.50863838 18.98370552]
[-31.15464783 8.41665745]
[-41.80065536 -2.15039086]
[-53.32641220 7.46685457]
[-65.70211029 15.96253967]
[-78.81897736 23.26200294]
[-92.56175232 29.30109406]
[-106.80965424 34.02674103]
[-121.43746948 37.39741135]
[-136.31665039 39.38348770]
[-151.31643677 39.96751404]
[-166.30499268 39.14435196]
[-181.15060425 36.92124557]
[-195.72280884 33.31772232]
[-209.89353943 28.36545944]
[-223.53825378 22.10797310]
[-236.53704834 14.60025692]
[-248.77568054 5.90829039]
[-260.14660645 -3.89153910]
[-270.54986572 -14.71310902]
[-279.89407349 -26.46131516]
[-288.09707642 -39.03291321]
[-295.08682251 -52.31742477]
[-300.80184937 -66.19809723]
[-305.19192505 -80.55294037]
[-308.21850586 -95.25580597]
[-309.85494995 -110.17748260]
[-310.08691406 -125.18683624]
[-308.91235352 -140.15196228]
[-306.34158325 -154.94132996]
[-302.39718628 -169.42498779]
[-297.11383057 -183.47563171]
[-290.53796387 -196.96978760]
[-282.72735596 -209.78887939]
[-273.75064087 -221.82023621]
[-263.68676758 -232.95811462]
[-252.62409973 -243.10464478]
[-240.65991211 -252.17065430]
[-227.89932251 -260.07647705]
[-214.45449829 -266.75262451]
[-200.44357300 -272.14044189]
[-185.98968506 -276.19253540]
[-171.21986389 -278.87335205]
[-156.26390076 -280.15930176]
[-141.25323486 -280.03906250]
[-126.31978607 -278.51373291]
[-111.59479523 -275.59671021]
[-97.20766449 -271.31359863]
[-83.28482819 -265.70208740]
[-69.94865417 -258.81143188]
[-57.31633759 -250.70223999]
[-45.49889374 -241.44575500]
[-34.60017776 -231.12333679]
[-24.71596909 -219.82568359]
[-15.93313313 -207.65209961]
[-8.32885551 -194.70954895]
[-1.96996522 -181.11180115]
[3.08765554 -166.97833252]
[6.79955864 -152.43334961]
[9.13312340 -137.60470581]
[10.06784153 -122.62268829]
[9.59549904 -107.61897278]
[7.72024584 -92.72541809]
[4.45856333 -78.07291412]
[-0.16088431 -63.79022980]
[-6.09750080 -50.00287628]
[-13.29911327 -36.83202744]
[-21.70243263 -24.39343262]
[-31.23360825 -12.79639912]
[-20.58760071 -2.22935176]
[-9.94159126 8.33769608]
[0.70441765 18.90474319]
[11.42879772 29.39224434]
[22.23095322 39.79961777]
[33.03311157 50.20699310]
[43.83526611 60.61436462]
[56.06175232 69.30419159]
[69.44202423 76.08418274]
[82.82229614 82.86417389]
[96.20257568 89.64416504]
[94.08765411 74.79400635]
[104.26769257 63.77734756]
[119.23834229 64.71525574]
[127.96379852 76.91633606]
[124.01197815 91.38641357]
[110.29766846 97.45872498]
[123.13660431 105.21511841]
[135.97554016 112.97151184]
[148.81448364 120.72789764]
[163.97715759 117.15979004]
[176.88717651 125.20877075]
[180.19537354 139.68603516]
[193.03431702 147.44242859]
[205.87326050 155.19882202]
[218.71218872 162.95521545]
[231.55113220 170.71160889]
[240.34605408 158.54981995]
[250.11524963 147.15586853]
[260.79199219 136.60755920]
[272.30334473 126.97696686]
[284.57067871 118.32987976]
[297.51019287 110.72536469]
[311.03347778 104.21536255]
[325.04818726 98.84434509]
[339.45852661 94.64901733]
[354.16613770 91.65802002]
[369.07049561 89.89179230]
[384.06982422 89.36239624]
[399.06161499 90.07345581]
[413.94348145 92.02010345]
[428.61376953 95.18904877]
[442.97225952 99.55864716]
[456.92086792 105.09903717]
[470.36428833 111.77238464]
[483.21072388 119.53309631]
[495.37240601 128.32815552]
[506.76626587 138.09748840]
[517.31445312 148.77435303]
[526.94488525 160.28582764]
[535.59179688 172.55325317]
[543.19616699 185.49285889]
[549.70605469 199.01622009]
[555.07684326 213.03099060]
[559.27203369 227.44140625]
[562.26287842 242.14903259]
[564.02893066 257.05340576]
[564.55810547 272.05273438]
[563.84686279 287.04452515]
[561.90008545 301.92636108]
[558.73095703 316.59661865]
[554.36114502 330.95504761]
[548.82061768 344.90359497]
[542.14709473 358.34695435]
[534.38623047 371.19329834]
[525.59106445 383.35485840]
[515.82159424 394.74859619]
[505.14456177 405.29663086]
[493.63299561 414.92697144]
[481.36544800 423.57376099]
[468.42578125 431.17797852]
[454.90231323 437.68765259]
[440.88748169 443.05831909]
[426.47702026 447.25332642]
[411.76934814 450.24395752]
[396.86495972 452.00982666]
[381.86563110 452.53887939]
[366.87384033 451.82745361]
[351.99203491 449.88046265]
[337.32180786 446.71115112]
[322.96343994 442.34121704]
[309.01495361 436.80050659]
[295.57168579 430.12683105]
[282.72543335 422.36581421]
[270.56396484 413.57046509]
[259.17034912 403.80084229]
[248.62243652 393.12374878]
[238.99224854 381.61203003]
[230.34559631 369.34439087]
[222.74154663 356.40463257]
[216.23202515 342.88110352]
[210.86151123 328.86621094]
[206.66670227 314.45568848]
[203.67622375 299.74798584]
[201.91053772 284.84356689]
[201.38166809 269.84423828]
[202.09326172 254.85246277]
[204.04045105 239.97065735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 139]
[4 138]
[5 137]
[6 136]
[7 135]
[10 132]
[11 131]
[12 130]
[13 129]
[14 123]
[15 122]
[16 121]
[17 120]
[38 119]
[39 118]
[40 117]
[41 116]
[43 115]
[44 114]
[45 113]
[46 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
