%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[80.65946198 717.38531494]
[66.94664764 711.27166748]
[53.94801712 703.75811768]
[41.80598450 694.92700195]
[30.65358734 684.87506104]
[20.61301804 673.71240234]
[11.79428482 661.56140137]
[4.29401207 648.55505371]
[-1.80562377 634.83605957]
[-6.43779135 620.55456543]
[-9.55173874 605.86712646]
[-11.11334610 590.93463135]
[-11.10550594 575.92071533]
[-9.52830315 560.98986816]
[-6.39901781 546.30566406]
[-1.75193679 532.02905273]
[4.36202431 518.31640625]
[11.87587738 505.31793213]
[20.70729637 493.17611694]
[30.75951958 482.02395630]
[41.92240906 471.98364258]
[54.07365799 463.16522217]
[67.08013153 455.66525269]
[80.79932404 449.56594849]
[95.08091736 444.93414307]
[109.76844025 441.82055664]
[108.20791626 426.90194702]
[106.64739227 411.98333740]
[105.08686829 397.06472778]
[103.52634430 382.14611816]
[92.19694519 391.97692871]
[77.42013550 389.39898682]
[70.08882141 376.31268311]
[75.60738373 362.36471558]
[89.90773773 357.83703613]
[102.44734192 366.06585693]
[102.00073242 351.07250977]
[101.55413055 336.07916260]
[88.37434387 329.13949585]
[80.38459778 316.45013428]
[79.81539154 301.36563110]
[86.91965485 287.93334961]
[99.87796783 279.80752563]
[99.43136597 264.81417847]
[98.98475647 249.82081604]
[98.20343781 234.84118652]
[97.08778381 219.88273621]
[95.97213745 204.92427063]
[93.55335999 202.35876465]
[92.25703430 198.49423218]
[92.68018341 193.87100220]
[95.15592194 189.27558899]
[94.70931244 174.28224182]
[86.59650421 161.79098511]
[93.91949463 147.76655579]
[93.47288513 132.77320862]
[93.02628326 117.77986145]
[82.55238342 107.76768494]
[82.12097931 93.28458405]
[91.98036957 82.66674042]
[89.56822968 79.05626678]
[88.53443909 75.24893188]
[88.77162933 71.70221710]
[90.03488922 68.79175568]
[91.98036957 66.77352905]
[92.42697144 51.78018188]
[85.10398865 37.75576019]
[93.21679688 25.26449776]
[93.66339874 10.27114773]
[94.11000824 -4.72220182]
[94.55661011 -19.71555138]
[95.00321960 -34.70890045]
[95.44982910 -49.70225143]
[95.89643097 -64.69560242]
[96.00809479 -79.69518280]
[95.78476715 -94.69352722]
[87.84286499 -108.37696838]
[95.38981628 -121.21802521]
[95.16648865 -136.21636963]
[94.60827637 -151.20597839]
[93.71546173 -166.17938232]
[92.82264709 -181.15278625]
[91.92983246 -196.12619019]
[91.03701782 -211.09959412]
[90.14419556 -226.07299805]
[89.25138092 -241.04640198]
[74.31132507 -242.76853943]
[59.89733124 -247.05899048]
[46.44743729 -253.78739929]
[34.37036896 -262.74929810]
[24.03312874 -273.67233276]
[15.74985790 -286.22454834]
[9.77227497 -300.02453613]
[6.28203201 -314.65292358]
[5.38519335 -329.66513062]
[7.10901260 -344.60501099]
[11.40110493 -359.01849365]
[18.13103867 -372.46762085]
[27.09429932 -384.54370117]
[38.01850128 -394.87969971]
[50.57167435 -403.16152954]
[64.37233734 -409.13754272]
[79.00110626 -412.62612915]
[94.01343536 -413.52127075]
[108.95310211 -411.79577637]
[123.36611938 -407.50204468]
[136.81448364 -400.77056885]
[148.88952637 -391.80593872]
[159.22428894 -380.88058472]
[167.50469971 -368.32644653]
[173.47915649 -354.52511597]
[176.96607971 -339.89596558]
[177.85951233 -324.88351440]
[176.13230896 -309.94406128]
[171.83694458 -295.53152466]
[165.10395813 -282.08392334]
[156.13796997 -270.00988770]
[145.21142578 -259.67639160]
[132.65637207 -251.39738464]
[118.85434723 -245.42448425]
[104.22478485 -241.93922424]
[105.11760712 -226.96582031]
[106.01042175 -211.99241638]
[106.90323639 -197.01901245]
[107.79605103 -182.04560852]
[108.68886566 -167.07218933]
[109.58168030 -152.09878540]
[111.96199799 -149.49755859]
[113.20063782 -145.61415100]
[112.70870972 -140.99772644]
[110.16482544 -136.43969727]
[110.38815308 -121.44135284]
[118.31408691 -108.83068848]
[110.78311157 -94.91685486]
[111.00643921 -79.91851044]
[113.26822662 -77.21358490]
[114.33222961 -73.27874756]
[113.63465118 -68.68890381]
[110.88977814 -64.24899292]
[110.44317627 -49.25564575]
[109.99656677 -34.26229477]
[109.54996490 -19.26894569]
[109.10335541 -4.27559614]
[108.65675354 10.71775436]
[108.21014404 25.71110344]
[115.56507874 38.66310120]
[107.42032623 52.22678757]
[106.97371674 67.22013855]
[106.97371674 82.22013855]
[117.44761658 92.23231506]
[117.87902069 106.71541595]
[108.01963043 117.33325958]
[108.46623993 132.32659912]
[108.91284180 147.31996155]
[117.05759430 160.88363647]
[109.70266724 173.83564758]
[110.14926910 188.82899475]
[110.93059540 203.80862427]
[112.04624176 218.76707458]
[113.16188812 233.72554016]
[116.10227966 238.03845215]
[117.00410461 242.59255981]
[116.11685944 246.57098389]
[113.97811127 249.37422180]
[114.42471313 264.36755371]
[114.87132263 279.36090088]
[128.29032898 286.70104980]
[136.18148804 299.68667603]
[136.51113892 314.77832031]
[129.29084778 327.92074585]
[116.54747772 335.63256836]
[116.99408722 350.62591553]
[117.44068909 365.61926270]
[118.44495392 380.58560181]
[120.00547791 395.50421143]
[121.56599426 410.42282104]
[123.12651825 425.34143066]
[124.68704224 440.26004028]
[139.70095825 440.26678467]
[154.63191223 441.84289551]
[169.31632996 444.97109985]
[183.59330750 449.61715698]
[197.30641174 455.73010254]
[210.30541992 463.24301147]
[222.44787598 472.07354736]
[233.60076904 482.12496948]
[243.64187622 493.28710938]
[252.46119690 505.43771362]
[259.96209717 518.44366455]
[266.06240845 532.16241455]
[270.69528198 546.44366455]
[273.80993652 561.13092041]
[275.37225342 576.06335449]
[275.36514282 591.07727051]
[273.78866577 606.00817871]
[270.66009521 620.69250488]
[266.01370239 634.96936035]
[259.90042114 648.68237305]
[252.38719177 661.68115234]
[243.55636597 673.82342529]
[233.50468445 684.97607422]
[222.34228516 695.01690674]
[210.19146729 703.83593750]
[197.18534851 711.33648682]
[183.46646118 717.43646240]
[169.18508911 722.06896973]
[154.49772644 725.18328857]
[139.56527710 726.74530029]
[124.55136108 726.73779297]
[109.62047577 725.16094971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[36 173]
[37 172]
[38 171]
[43 166]
[44 165]
[45 164]
[46 160]
[47 159]
[48 158]
[52 157]
[53 156]
[55 154]
[56 153]
[57 152]
[60 149]
[65 148]
[66 147]
[68 145]
[69 144]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 135]
[76 134]
[78 132]
[79 131]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
