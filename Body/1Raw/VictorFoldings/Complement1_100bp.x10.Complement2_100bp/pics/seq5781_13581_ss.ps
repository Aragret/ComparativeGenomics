%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[64.36804199 676.66613770]
[49.75661850 680.10437012]
[34.89307785 682.19970703]
[19.90057755 682.93469238]
[4.90335894 682.30328369]
[-9.97430611 680.31072998]
[-24.60913277 676.97351074]
[-38.87985229 672.31927490]
[-52.66820526 666.38659668]
[-65.85993958 659.22467041]
[-78.34574127 650.89282227]
[-90.02214813 641.46002197]
[-100.79240417 631.00457764]
[-110.56726074 619.61303711]
[-119.26570892 607.37976074]
[-126.81568909 594.40625000]
[-133.15461731 580.79986572]
[-138.22998047 566.67346191]
[-141.99972534 552.14398193]
[-144.43258667 537.33197021]
[-145.50843811 522.36004639]
[-145.21835327 507.35235596]
[-143.56472778 492.43322754]
[-140.56127930 477.72625732]
[-136.23286438 463.35336304]
[-130.61538696 449.43362427]
[-123.75538635 436.08239746]
[-115.70970154 423.41030884]
[-106.54499817 411.52233887]
[-96.33722687 400.51702881]
[-85.17097473 390.48559570]
[-73.13877106 381.51110840]
[-60.34031296 373.66796875]
[-46.88166428 367.02117920]
[-32.87434387 361.62576294]
[-18.43442726 357.52648926]
[-3.68156767 354.75732422]
[11.26198578 353.34118652]
[26.27240181 353.28979492]
[41.22529984 354.60363770]
[43.89109421 339.84240723]
[41.98636627 332.70141602]
[46.70803070 324.88195801]
[49.59330368 310.16207886]
[44.44859695 296.18420410]
[54.69589615 284.13000488]
[57.58116913 269.41012573]
[52.43646622 255.43223572]
[62.68376541 243.37803650]
[65.56903839 228.65815735]
[68.45430756 213.93826294]
[61.96826935 203.72758484]
[64.25157166 191.44058228]
[74.61639404 183.76379395]
[77.72050476 169.08848572]
[80.82461548 154.41319275]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[93.56811523 81.54636383]
[93.97334290 76.92153168]
[95.93583679 73.34889984]
[98.77205658 71.25409698]
[102.52835083 56.73203659]
[106.28465271 42.20997620]
[110.04095459 27.68791771]
[113.79725647 13.16585827]
[98.36484528 -0.35202307]
[91.95520782 -19.76018333]
[96.26926422 -39.66065598]
[110.03668976 -54.55995178]
[129.38861084 -60.38553619]
[131.83433533 -75.18480682]
[134.28005981 -89.98407745]
[128.89639282 -104.86112976]
[138.60531616 -116.15653229]
[141.05105591 -130.95581055]
[143.49678040 -145.75508118]
[145.94250488 -160.55435181]
[143.97581482 -166.86653137]
[145.29421997 -172.39453125]
[148.68768311 -175.75511169]
[151.57295227 -190.47500610]
[146.63462830 -205.50575256]
[156.67555237 -216.50708008]
[159.56082153 -231.22695923]
[162.44609070 -245.94685364]
[165.33135986 -260.66674805]
[168.21664429 -275.38662720]
[171.10191345 -290.10653687]
[156.96601868 -295.21310425]
[143.77536011 -302.41775513]
[131.83915710 -311.55160522]
[121.43718719 -322.40054321]
[112.81330109 -334.71026611]
[106.16965485 -348.19219971]
[101.66197968 -362.53030396]
[99.39595032 -377.38848877]
[99.42468262 -392.41842651]
[101.74749756 -407.26785278]
[106.30994415 -421.58862305]
[113.00508118 -435.04504395]
[121.67596436 -447.32171631]
[132.11932373 -458.13079834]
[144.09036255 -467.21896362]
[157.30847168 -474.37313843]
[171.46377563 -479.42562866]
[186.22447205 -482.25802612]
[201.24453735 -482.80386353]
[216.17189026 -481.05041504]
[230.65660095 -477.03875732]
[244.35914612 -470.86294556]
[256.95828247 -462.66769409]
[268.15872192 -452.64517212]
[277.69787598 -441.03030396]
[285.35211182 -428.09536743]
[290.94204712 -414.14355469]
[294.33663940 -399.50192261]
[295.45626831 -384.51370239]
[294.27474976 -369.53024292]
[290.81973267 -354.90274048]
[285.17224121 -340.97412109]
[277.46466064 -328.07089233]
[267.87762451 -316.49551392]
[256.63592529 -306.51934814]
[244.00303650 -298.37619019]
[230.27511597 -292.25698853]
[215.77395630 -288.30517578]
[200.83949280 -286.61337280]
[185.82180786 -287.22125244]
[182.93652344 -272.50137329]
[180.05125427 -257.78146362]
[177.16598511 -243.06158447]
[174.28071594 -228.34169006]
[171.39543152 -213.62179565]
[176.54014587 -199.64392090]
[166.29284668 -187.58972168]
[163.40757751 -172.86984253]
[160.74177551 -158.10861206]
[158.29605103 -143.30934143]
[155.85032654 -128.51007080]
[153.40458679 -113.71080780]
[158.96319580 -99.89229584]
[149.07933044 -87.53835297]
[146.63360596 -72.73908234]
[144.18788147 -57.93980789]
[152.93836975 -53.34871674]
[160.23858643 -46.66347122]
[165.59843445 -38.32111359]
[168.65507507 -28.87031174]
[169.19744873 -18.93528557]
[167.18095398 -9.17457390]
[162.73078918 -0.23738386]
[156.13438416 7.27958632]
[147.82276917 12.87198734]
[138.34240723 16.16165161]
[128.31932068 16.92215919]
[124.56301117 31.44421768]
[120.80671692 45.96627808]
[117.05041504 60.48833847]
[113.29411316 75.01039886]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[95.49992371 157.51730347]
[92.39581299 172.19259644]
[89.29170227 186.86790466]
[95.40412140 204.23799133]
[83.17420197 216.82353210]
[80.28892517 231.54342651]
[77.40365601 246.26332092]
[82.34198761 261.29406738]
[72.30106354 272.29537964]
[69.41578674 287.01528931]
[74.35411835 302.04602051]
[64.31319427 313.04736328]
[61.42792130 327.76724243]
[58.65230942 342.50820923]
[55.98651505 357.26940918]
[70.45440674 361.26882935]
[84.49867249 366.56732178]
[98.00292206 373.12100220]
[110.85525513 380.87551880]
[122.94917297 389.76666260]
[134.18446350 399.72073364]
[144.46801758 410.65524292]
[153.71463013 422.47958374]
[161.84768677 435.09579468]
[168.79975891 448.39932251]
[174.51327515 462.27993774]
[178.94087219 476.62258911]
[182.04586792 491.30844116]
[183.80252075 506.21578979]
[184.19628906 521.22113037]
[183.22389221 536.20013428]
[180.89341736 551.02862549]
[177.22415161 565.58374023]
[172.24650574 579.74487305]
[166.00172424 593.39471436]
[158.54156494 606.42010498]
[149.92782593 618.71313477]
[140.23190308 630.17199707]
[129.53414917 640.70159912]
[117.92318726 650.21478271]
[105.49524689 658.63275146]
[92.35330200 665.88562012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 183]
[41 182]
[43 181]
[44 180]
[46 178]
[47 177]
[49 175]
[50 174]
[51 173]
[54 171]
[55 170]
[56 169]
[57 168]
[58 167]
[59 166]
[61 164]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[74 148]
[75 147]
[76 146]
[78 144]
[79 143]
[80 142]
[81 141]
[84 140]
[85 139]
[87 137]
[88 136]
[89 135]
[90 134]
[91 133]
[92 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
