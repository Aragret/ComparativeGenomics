%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[143.50126648 625.42852783]
[133.20942688 614.50811768]
[123.68680573 602.91088867]
[114.97782135 590.69079590]
[107.12306976 577.90490723]
[100.15917206 564.61273193]
[94.11859894 550.87634277]
[89.02951813 536.75976562]
[84.91565704 522.32879639]
[81.79619598 507.65072632]
[79.68567657 492.79400635]
[78.59394073 477.82788086]
[78.52607727 462.82214355]
[79.48240662 447.84677124]
[81.45846558 432.97155762]
[84.44503784 418.26586914]
[88.42820740 403.79827881]
[93.38940430 389.63623047]
[99.30548096 375.84576416]
[106.14887238 362.49121094]
[113.88765717 349.63476562]
[122.48576355 337.33642578]
[131.90309143 325.65350342]
[142.09574890 314.64047241]
[153.01618958 304.34869385]
[164.61352539 294.82617188]
[176.83366394 286.11727905]
[168.98190308 273.33642578]
[161.13014221 260.55557251]
[153.27839661 247.77473450]
[145.42663574 234.99389648]
[137.57487488 222.21305847]
[137.84614563 237.21060181]
[132.42904663 251.19827271]
[122.12717438 262.10107422]
[108.46874237 268.30166626]
[93.47990417 268.88021851]
[79.38416290 263.75088501]
[68.27253723 253.67457581]
[61.79337311 240.14607239]
[60.90781403 225.17222595]
[65.74723053 210.97433472]
[75.59371948 199.65856934]
[88.98661804 192.90354919]
[103.93916321 191.71134949]
[118.23323822 196.25880432]
[129.74719238 205.86987305]
[124.71028137 191.74084473]
[119.67336273 177.61180115]
[114.63644409 163.48277283]
[103.07466125 154.09265137]
[105.72868347 138.49563599]
[100.69176483 124.36661530]
[95.65484619 110.23757935]
[88.26395416 123.29034424]
[73.84552002 127.42662048]
[60.65907669 120.27694702]
[56.25842285 105.93699646]
[63.16444778 92.62133789]
[77.42107391 87.95778656]
[90.86081696 94.61711884]
[87.10452271 80.09506226]
[83.34822083 65.57299805]
[80.20085144 80.23908997]
[73.41220856 93.61497498]
[63.43257141 104.81349182]
[50.92384338 113.09188080]
[36.71568298 117.90106201]
[21.75047302 118.92206573]
[7.02079630 116.08717346]
[-6.49637794 109.58440399]
[-17.90450478 99.84506989]
[-26.44692421 87.51514435]
[-31.55704880 73.41242218]
[-32.89594269 58.47229767]
[-30.37479782 43.68568802]
[-24.16083717 30.03333664]
[-14.66620922 18.42075539]
[-2.52065873 9.61816502]
[11.47024441 4.20940924]
[26.37853241 2.55323267]
[41.21539307 4.75948238]
[54.99675369 10.68182659]
[66.80854034 19.92745590]
[75.86732483 31.88314247]
[81.57359314 45.76086807]
[82.68923950 30.80241394]
[83.80488586 15.84396076]
[84.92053986 0.88550723]
[86.03618622 -14.07294655]
[77.65789795 -30.47068596]
[88.09674072 -44.57733154]
[88.98956299 -59.55073929]
[89.88237762 -74.52414703]
[87.26966858 -80.59747314]
[88.00581360 -86.23264313]
[91.03124237 -89.92801666]
[92.36947632 -104.86820221]
[93.70771027 -119.80838776]
[79.78745270 -125.73134613]
[68.38012695 -135.66754150]
[60.60330200 -148.64353943]
[57.21888351 -163.38806152]
[58.55843735 -178.45658875]
[64.49073029 -192.37287903]
[74.43457031 -203.77354431]
[87.41576385 -211.54167175]
[102.16255188 -214.91621399]
[117.23018646 -213.56655884]
[131.14250183 -207.62495422]
[142.53649902 -197.67347717]
[150.29592896 -184.68707275]
[153.66058350 -169.93803406]
[152.30082703 -154.87130737]
[146.34989929 -140.96296692]
[136.39079285 -129.57563782]
[123.39919281 -121.82492065]
[108.64789581 -118.47015381]
[107.30966187 -103.52996826]
[105.97142792 -88.58978271]
[104.85578156 -73.63132477]
[103.96296692 -58.65792084]
[103.07015228 -43.68451691]
[110.86219788 -34.43191910]
[110.24092102 -21.95002174]
[100.99463654 -12.95729733]
[99.87899017 2.00115585]
[98.76334381 16.95960999]
[97.64768982 31.91806221]
[96.53204346 46.87651443]
[97.87027740 61.81669998]
[101.62657928 76.33876038]
[105.38288116 90.86081696]
[109.78387451 105.20066833]
[114.82079315 119.32969666]
[119.85771179 133.45872498]
[131.77976990 143.85945129]
[128.76547241 158.44586182]
[133.80239868 172.57489014]
[138.83930969 186.70391846]
[143.87622070 200.83294678]
[150.35572815 214.36129761]
[158.20747375 227.14213562]
[166.05923462 239.92297363]
[173.91099548 252.70382690]
[181.76274109 265.48468018]
[189.61450195 278.26550293]
[202.90649414 271.30133057]
[216.64276123 265.26049805]
[230.75924683 260.17114258]
[245.19012451 256.05697632]
[259.86813354 252.93722534]
[274.72482300 250.82640076]
[289.69091797 249.73435974]
[304.69665527 249.66619873]
[319.67205811 250.62222290]
[334.54730225 252.59799194]
[349.25305176 255.58427429]
[363.72073364 259.56713867]
[377.88287354 264.52804565]
[391.67343140 270.44384766]
[405.02816772 277.28698730]
[417.88473511 285.02551270]
[430.18325806 293.62335205]
[441.86639404 303.04046631]
[452.87960815 313.23287964]
[463.17160034 324.15313721]
[472.69436646 335.75027466]
[481.40350342 347.97021484]
[489.25845337 360.75604248]
[496.22250366 374.04809570]
[502.26327515 387.78439331]
[507.35253906 401.90090942]
[511.46658325 416.33181763]
[514.58624268 431.00985718]
[516.69696045 445.86654663]
[517.78894043 460.83264160]
[517.85699463 475.83837891]
[516.90087891 490.81378174]
[514.92498779 505.68902588]
[511.93859863 520.39477539]
[507.95562744 534.86236572]
[502.99462891 549.02447510]
[497.07873535 562.81500244]
[490.23553467 576.16967773]
[482.49691772 589.02624512]
[473.89898682 601.32470703]
[464.48181152 613.00775146]
[454.28930664 624.02093506]
[443.36898804 634.31280518]
[431.77178955 643.83551025]
[419.55175781 652.54461670]
[406.76589966 660.39941406]
[393.47381592 667.36340332]
[379.73745728 673.40405273]
[365.62091064 678.49322510]
[351.18997192 682.60717773]
[336.51193237 685.72674561]
[321.65521240 687.83740234]
[306.68908691 688.92919922]
[291.68334961 688.99719238]
[276.70797729 688.04095459]
[261.83273315 686.06500244]
[247.12704468 683.07855225]
[232.65942383 679.09545898]
[218.49734497 674.13433838]
[204.70684814 668.21838379]
[191.35223389 661.37506104]
[178.49574280 653.63635254]
[166.19734192 645.03833008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 147]
[28 146]
[29 145]
[30 144]
[31 143]
[32 142]
[47 141]
[48 140]
[49 139]
[50 138]
[52 136]
[53 135]
[54 134]
[61 133]
[62 132]
[63 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
[92 123]
[93 122]
[94 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
