%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[44.81376266 740.61706543]
[30.13921356 743.75366211]
[15.28323174 745.87036133]
[0.31661296 746.95709229]
[-14.68931961 747.00866699]
[-29.66305542 746.02484131]
[-44.53323746 744.01031494]
[-59.22900009 740.97467041]
[-73.68031311 736.93231201]
[-87.81830597 731.90264893]
[-101.57560730 725.90954590]
[-114.88665009 718.98156738]
[-127.68801117 711.15179443]
[-139.91868591 702.45745850]
[-151.52037048 692.94000244]
[-162.43778992 682.64483643]
[-172.61892700 671.62097168]
[-182.01524353 659.92102051]
[-190.58198547 647.60064697]
[-198.27830505 634.71856689]
[-205.06753540 621.33624268]
[-210.91732788 607.51739502]
[-215.79978943 593.32788086]
[-219.69166565 578.83532715]
[-222.57441711 564.10876465]
[-224.43428040 549.21850586]
[-225.26242065 534.23535156]
[-225.05487061 519.23071289]
[-223.81262207 504.27621460]
[-221.54161072 489.44305420]
[-218.25263977 474.80187988]
[-213.96139526 460.42254639]
[-208.68832397 446.37350464]
[-202.45855713 432.72174072]
[-195.30177307 419.53231812]
[-187.25207520 406.86807251]
[-178.34785461 394.78933716]
[-168.63150024 383.35372925]
[-158.14935303 372.61569214]
[-146.95133972 362.62643433]
[-135.09085083 353.43356323]
[-122.62438202 345.08084106]
[-109.61135101 337.60812378]
[-96.11376953 331.05096436]
[-82.19596863 325.44067383]
[-67.92426300 320.80395508]
[-53.36667252 317.16290283]
[-38.59256744 314.53488159]
[-23.67235565 312.93240356]
[-8.67713642 312.36312866]
[6.32162809 312.82974243]
[21.25246239 314.33001709]
[36.04421234 316.85684204]
[39.58388519 302.28045654]
[43.12355804 287.70410156]
[38.60813141 273.51043701]
[49.38345718 261.92581177]
[41.20592499 251.96804810]
[40.24246216 238.92373657]
[47.06826019 227.53871155]
[59.38356400 222.08454895]
[63.13986588 207.56248474]
[66.89616394 193.04042053]
[61.02938080 182.46180725]
[64.03996277 170.33248901]
[74.84334564 163.28623962]
[78.81544495 148.82171631]
[82.78753662 134.35719299]
[86.75963593 119.89266205]
[90.73173523 105.42813873]
[92.18115234 90.49832916]
[91.06549835 75.53987885]
[89.94985199 60.58142090]
[88.83420563 45.62297058]
[87.71855927 30.66451645]
[86.60290527 15.70606232]
[85.48725891 0.74760884]
[77.07107544 13.16404438]
[63.32028961 19.15703011]
[48.49573135 16.86957550]
[37.19094849 7.01047230]
[32.90885544 -7.36532927]
[36.97630310 -21.80332947]
[48.13294601 -31.82975960]
[62.92178345 -34.33781815]
[76.76033020 -28.55035591]
[85.36064148 -16.26044083]
[78.45845795 -30.49667740]
[86.93958282 -42.74085236]
[87.83239746 -57.71426010]
[88.72521210 -72.68766022]
[89.61802673 -87.66107178]
[90.51084137 -102.63447571]
[91.40366364 -117.60787964]
[92.29647827 -132.58128357]
[92.85469055 -147.57089233]
[93.07801819 -162.56922913]
[93.30134583 -177.56756592]
[93.52467346 -192.56590271]
[79.68844604 -198.92819214]
[69.64107513 -210.37242126]
[65.12333679 -224.91580200]
[66.91794586 -240.03860474]
[74.71398163 -253.12072754]
[87.16072845 -261.89559937]
[102.10171509 -264.84292603]
[116.94833374 -261.45205688]
[129.12829590 -252.31048584]
[136.53137207 -239.00205994]
[137.87492371 -223.83251953]
[132.92617798 -209.43009949]
[122.54252625 -198.29010010]
[108.52301025 -192.34257507]
[108.29968262 -177.34423828]
[108.07635498 -162.34590149]
[107.85302734 -147.34756470]
[110.03327942 -144.57649231]
[110.97965240 -140.61172485]
[110.14572906 -136.04467773]
[107.26988220 -131.68847656]
[106.37706757 -116.71506500]
[105.48425293 -101.74166107]
[104.59143066 -86.76825714]
[103.69861603 -71.79484558]
[102.80580139 -56.82144165]
[101.91298676 -41.84803772]
[108.87902832 -28.68279648]
[100.33404541 -15.36762428]
[100.44570923 -0.36803985]
[101.56136322 14.59041309]
[102.67700958 29.54886627]
[103.79265594 44.50732040]
[104.90830994 59.46577454]
[106.02395630 74.42422485]
[107.13960266 89.38268280]
[112.80475616 75.49361420]
[121.70491028 63.41937637]
[133.29582214 53.89830780]
[146.86869812 47.51261902]
[161.59355164 44.65280533]
[176.56996155 45.49374390]
[190.88211060 49.98400879]
[203.65480042 57.84901810]
[214.10697937 68.60782623]
[221.59948730 81.60253143]
[225.67416382 96.03849030]
[226.08184814 111.03295135]
[222.79757690 125.66899109]
[216.02221680 139.05160522]
[206.17007446 150.36245728]
[193.84361267 158.90986633]
[179.79660034 164.17117310]
[164.88800049 165.82463074]
[150.02951050 163.76913452]
[136.12969971 158.13038635]
[124.03858185 149.25318909]
[114.49550629 137.68038940]
[108.08404541 124.11965942]
[105.19625854 109.40023041]
[101.22415924 123.86476135]
[97.25205994 138.32928467]
[93.27996826 152.79380798]
[89.30786896 167.25833130]
[94.37557220 184.96144104]
[81.41822815 196.79672241]
[77.66192627 211.31878662]
[73.90562439 225.84085083]
[83.05810547 240.74894714]
[78.68297577 257.33728027]
[63.95983124 265.46548462]
[68.22207642 280.70175171]
[57.69993210 291.24377441]
[54.16025925 305.82012939]
[50.62059021 320.39651489]
[64.92382812 324.93502808]
[78.87986755 330.44952393]
[92.42219543 336.91372681]
[105.48628998 344.29681396]
[118.00988007 352.56362915]
[129.93328857 361.67477417]
[141.19969177 371.58682251]
[151.75541687 382.25256348]
[161.55014038 393.62112427]
[170.53718567 405.63833618]
[178.67373657 418.24694824]
[185.92102051 431.38687134]
[192.24447632 444.99548340]
[197.61399841 459.00793457]
[202.00398254 473.35745239]
[205.39352417 487.97567749]
[207.76644897 502.79287720]
[209.11145020 517.73852539]
[209.42213440 532.74133301]
[208.69702148 547.72979736]
[206.93954468 562.63256836]
[204.15811157 577.37854004]
[200.36593628 591.89752197]
[195.58113098 606.12023926]
[189.82646179 619.97894287]
[183.12937927 633.40765381]
[175.52178955 646.34228516]
[167.03994751 658.72131348]
[157.72427368 670.48559570]
[147.61915588 681.57916260]
[136.77276611 691.94915771]
[125.23677063 701.54608154]
[113.06615448 710.32427979]
[100.31892395 718.24188232]
[87.05580902 725.26123047]
[73.34003448 731.34875488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 174]
[54 173]
[55 172]
[57 170]
[61 167]
[62 166]
[63 165]
[66 163]
[67 162]
[68 161]
[69 160]
[70 159]
[71 135]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[87 128]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
