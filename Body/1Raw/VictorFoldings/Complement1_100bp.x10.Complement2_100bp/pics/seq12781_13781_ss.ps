%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[105.55184937 697.50659180]
[93.08065796 689.13842773]
[81.70910645 679.32794189]
[71.60301208 668.21832275]
[62.90975952 655.97149658]
[55.75612259 642.76605225]
[50.24641800 628.79467773]
[46.46099472 614.26098633]
[44.45505905 599.37695312]
[44.25785828 584.35968018]
[45.87226868 569.42816162]
[49.27474976 554.80010986]
[54.41568756 540.68878174]
[61.22010040 527.30010986]
[69.58876801 514.82922363]
[79.39965820 503.45803833]
[90.50968170 493.35235596]
[102.75682831 484.65957642]
[115.96250916 477.50643921]
[129.93412781 471.99725342]
[144.46795654 468.21237183]
[142.46394348 453.34683228]
[140.45993042 438.48132324]
[138.45591736 423.61578369]
[136.45190430 408.75024414]
[134.44789124 393.88473511]
[125.07957458 382.30526733]
[130.90379333 367.59509277]
[119.44466400 354.30392456]
[126.58013153 337.32846069]
[124.35501099 322.49441528]
[114.81533813 311.05572510]
[120.41990662 296.26046753]
[110.88022614 284.82174683]
[116.48479462 270.02651978]
[114.25967407 255.19245911]
[112.03456116 240.35842896]
[102.49644470 232.91860962]
[100.52125549 220.57832336]
[107.70642853 209.86683655]
[105.70241547 195.00129700]
[103.69840240 180.13577271]
[101.69438934 165.27024841]
[92.32607269 153.69078064]
[98.15029907 138.98062134]
[96.03567505 124.13041687]
[93.81055450 109.29637146]
[91.47506714 94.47930908]
[89.02934265 79.68003845]
[79.14548492 67.32609558]
[84.70407867 53.50757980]
[74.82022095 41.15363693]
[80.37882233 27.33512497]
[77.93309784 12.53585434]
[75.15748596 -2.20510817]
[72.05337524 -16.88041115]
[68.94926453 -31.55571365]
[65.84515381 -46.23101425]
[55.41952133 -58.13129807]
[60.35554504 -72.18423462]
[56.86531067 -76.06564331]
[55.36313248 -80.45845032]
[55.71089935 -84.51974487]
[57.45596695 -87.58358002]
[55.01023865 -102.38285065]
[52.56451035 -117.18212128]
[50.11878586 -131.98138428]
[35.98954391 -132.56787109]
[22.25482368 -135.91313171]
[9.44773960 -141.88523865]
[-1.93499899 -150.25032043]
[-11.45236874 -160.68177795]
[-18.73611069 -172.77296448]
[-23.50498581 -186.05310059]
[-25.57562447 -200.00553894]
[-24.86958694 -214.08795166]
[-21.41632652 -227.75329590]
[-15.35196877 -240.47120667]
[-6.91394424 -251.74842834]
[3.56830263 -261.14804077]
[15.68617916 -268.30642700]
[28.96787071 -272.94714355]
[26.96385765 -287.81268311]
[24.95984268 -302.67819214]
[12.67556190 -312.25601196]
[10.85497189 -327.36032104]
[20.06164169 -339.01248169]
[18.05762672 -353.87799072]
[8.54597473 -366.52075195]
[14.51353645 -380.16763306]
[-0.43859836 -382.25000000]
[-14.27399158 -388.29022217]
[-25.96596527 -397.84011841]
[-34.64689636 -410.19097900]
[-39.67260361 -424.42633057]
[-40.67014694 -439.48977661]
[-37.56549835 -454.26351929]
[-30.58904648 -467.65127563]
[-20.25848961 -478.65954590]
[-7.34042406 -486.47146606]
[7.20654535 -490.50735474]
[22.30293655 -490.46768188]
[36.82849503 -486.35540771]
[49.70532990 -478.47570801]
[59.97789383 -467.41329956]
[66.88389587 -453.98907471]
[69.91085815 -439.19921875]
[68.83417511 -424.14120483]
[63.73372650 -409.93249512]
[54.98800659 -397.62741089]
[43.24600983 -388.13909912]
[29.37906456 -382.17163086]
[38.74737549 -370.59219360]
[32.92315674 -355.88201904]
[34.92716980 -341.01647949]
[46.89074326 -332.21826172]
[49.13486099 -317.17105103]
[39.82537079 -304.68222046]
[41.82938385 -289.81668091]
[43.83339691 -274.95117188]
[59.68162537 -273.66458130]
[74.85827637 -268.89959717]
[88.60939789 -260.88980103]
[100.25116730 -250.03005981]
[109.20388794 -236.85707092]
[115.02085876 -222.02276611]
[117.41067505 -206.26216125]
[116.25180817 -190.35681152]
[111.59878540 -175.09617615]
[103.67963409 -161.23832703]
[92.88471222 -149.47238159]
[79.74746704 -140.38418579]
[64.91805267 -134.42712402]
[67.36378479 -119.62784576]
[69.80950928 -104.82857513]
[72.25524139 -90.02930450]
[75.03084564 -75.28834534]
[85.23445129 -64.43773651]
[80.52045441 -49.33512497]
[83.62456512 -34.65982437]
[86.72867584 -19.98451996]
[89.83278656 -5.30921841]
[92.57263947 -3.08985877]
[94.37364197 0.56683707]
[94.57196045 5.20515251]
[92.73236847 10.09012699]
[95.17809296 24.88939857]
[104.88701630 36.18479919]
[99.50334930 51.06185532]
[109.21227264 62.35725403]
[103.82861328 77.23430634]
[106.27433777 92.03357697]
[110.59120178 98.84072876]
[108.64459991 107.07125854]
[110.86972046 121.90530396]
[115.23751068 129.92778015]
[113.01582336 136.97660828]
[122.52748108 149.61935425]
[116.55991364 163.26623535]
[118.56392670 178.13175964]
[120.56794739 192.99728394]
[122.57196045 207.86282349]
[134.16224670 222.17179871]
[126.86859894 238.13330078]
[129.09371948 252.96734619]
[131.31883240 267.80139160]
[141.01766968 280.30111694]
[135.25395203 294.03533936]
[144.95277405 306.53506470]
[139.18905640 320.26928711]
[141.41416931 335.10333252]
[151.30369568 343.38345337]
[152.85160828 355.78457642]
[145.76931763 365.59109497]
[155.28097534 378.23382568]
[149.31341553 391.88070679]
[151.31742859 406.74624634]
[153.32144165 421.61175537]
[155.32545471 436.47729492]
[157.32946777 451.34283447]
[159.33348083 466.20834351]
[174.35073853 466.00946045]
[189.28245544 467.62219238]
[203.91090393 471.02304077]
[218.02276611 476.16238403]
[231.41223145 482.96530151]
[243.88404846 491.33258057]
[255.25633240 501.14218140]
[265.36325073 512.25109863]
[274.05743408 524.49725342]
[281.21203613 537.70214844]
[286.72280884 551.67315674]
[290.50930786 566.20654297]
[292.51635742 581.09039307]
[292.71469116 596.10766602]
[291.10137939 611.03930664]
[287.70001221 625.66766357]
[282.56011963 639.77929688]
[275.75671387 653.16851807]
[267.38897705 665.64001465]
[257.57894897 677.01196289]
[246.46966553 687.11846924]
[234.22315979 695.81213379]
[221.01802063 702.96630859]
[207.04681396 708.47650146]
[192.51327515 712.26245117]
[177.62934875 714.26898193]
[162.61207581 714.46673584]
[147.68046570 712.85290527]
[133.05227661 709.45092773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 181]
[22 180]
[23 179]
[24 178]
[25 177]
[26 176]
[28 174]
[30 171]
[31 170]
[33 168]
[35 166]
[36 165]
[37 164]
[40 162]
[41 161]
[42 160]
[43 159]
[45 157]
[46 155]
[47 154]
[48 152]
[49 151]
[51 149]
[53 147]
[54 146]
[55 142]
[56 141]
[57 140]
[58 139]
[60 137]
[64 136]
[65 135]
[66 134]
[67 133]
[82 120]
[83 119]
[84 118]
[87 115]
[88 114]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
