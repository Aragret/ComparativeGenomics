%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAGAUGGGAGGGAAUCGUCCCUUGAUGAGGGUGGGACCUCGGAGGCAUCUGGAUUGGUAGAAGAGGAAUGUGGAUCGUCCACAGAGGAGAUAGAAUCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[109.68801880 877.73077393]
[94.75769806 876.26422119]
[79.90130615 874.17779541]
[65.14456177 871.47521973]
[50.51301575 868.16113281]
[36.03199768 864.24127197]
[21.72657204 859.72241211]
[7.62150908 854.61236572]
[-6.25877523 848.91998291]
[-19.89025116 842.65515137]
[-33.24931717 835.82867432]
[-46.31285095 828.45239258]
[-59.05823517 820.53912354]
[-71.46340179 812.10247803]
[-83.50688171 803.15704346]
[-95.16781616 793.71844482]
[-106.42603302 783.80285645]
[-117.26202393 773.42761230]
[-127.65704346 762.61053467]
[-137.59309387 751.37042236]
[-147.05296326 739.72668457]
[-156.02027893 727.69952393]
[-164.47953796 715.30975342]
[-172.41606140 702.57879639]
[-179.81613159 689.52874756]
[-186.66693115 676.18212891]
[-192.95661926 662.56213379]
[-198.67427063 648.69219971]
[-203.81001282 634.59649658]
[-208.35493469 620.29931641]
[-212.30119324 605.82550049]
[-215.64195251 591.20001221]
[-218.37141418 576.44818115]
[-220.48484802 561.59564209]
[-221.97862244 546.66802979]
[-222.85012817 531.69116211]
[-223.09786987 516.69104004]
[-222.72142029 501.69357300]
[-221.72142029 486.72476196]
[-220.09959412 471.81051636]
[-217.85877991 456.97662354]
[-215.00282288 442.24880981]
[-211.53668213 427.65252686]
[-207.46636963 413.21307373]
[-202.79890442 398.95544434]
[-197.54238892 384.90429688]
[-191.70591736 371.08398438]
[-185.29959106 357.51843262]
[-178.33451843 344.23110962]
[-170.82272339 331.24502563]
[-162.77723694 318.58267212]
[-154.21197510 306.26596069]
[-145.14176941 294.31619263]
[-135.58232117 282.75408936]
[-125.55018616 271.59963989]
[-115.06272125 260.87216187]
[-104.13809204 250.59025574]
[-92.79520416 240.77169800]
[-81.05369568 231.43347168]
[-68.93389130 222.59176636]
[-56.45678329 214.26187134]
[-43.64395905 206.45822144]
[-30.51760864 199.19433594]
[-17.10045052 192.48275757]
[-3.41571546 186.33512878]
[10.51290703 180.76208496]
[24.66130257 175.77326965]
[39.00497818 171.37733459]
[53.51910400 167.58186340]
[68.17855072 164.39346313]
[82.95794678 161.81762695]
[97.83169556 159.85882568]
[96.49346161 144.91864014]
[95.15522766 129.97845459]
[93.81699371 115.03826904]
[85.34600830 107.04553986]
[84.39334106 95.43805695]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[89.21646881 56.25419617]
[88.10082245 41.29574585]
[86.98516846 26.33728981]
[85.86952209 11.37883759]
[77.12724304 -1.80763781]
[83.89649963 -15.07513237]
[68.92766571 -16.50407791]
[54.41567612 -20.44237900]
[40.77807617 -26.77672386]
[28.40724945 -35.32485962]
[17.65912437 -45.84083939]
[8.84294987 -58.02209854]
[2.21238160 -71.51815796]
[-2.04180408 -85.94070435]
[-3.79720592 -100.87477875]
[-3.00331783 -115.89069366]
[0.31701887 -130.55641174]
[6.06827116 -144.44998169]
[14.08496380 -157.17164612]
[24.13644218 -168.35537720]
[35.93350220 -177.67939758]
[49.13672256 -184.87542725]
[63.36621475 -189.73645020]
[78.21257782 -192.12258911]
[93.24864197 -191.96517944]
[108.04179382 -189.26875305]
[122.16640472 -184.11091614]
[135.21607971 -176.64004517]
[146.81535339 -167.07109070]
[156.63050842 -155.67938232]
[164.37910461 -142.79267883]
[169.83824158 -128.78176880]
[172.85083008 -114.04974365]
[173.33018494 -99.02050018]
[171.26252747 -84.12644958]
[166.70733643 -69.79611969]
[159.79568481 -56.44183350]
[150.72642517 -44.44781113]
[139.76049805 -34.15914536]
[127.21343231 -25.87186623]
[113.44621277 -19.82441139]
[98.85495758 -16.19078064]
[107.51743317 -4.07423449]
[100.82798004 10.26318836]
[101.94362640 25.22164154]
[103.05927277 40.18009567]
[104.17491913 55.13854980]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[116.20524597 98.66998291]
[108.75717926 113.70003510]
[110.09541321 128.64021301]
[111.43364716 143.58039856]
[112.77188110 158.52058411]
[127.75697327 157.80485535]
[142.75886536 157.71308899]
[157.75160217 158.24546814]
[172.70921326 159.40106201]
[187.60578918 161.17787170]
[202.41557312 163.57281494]
[217.11291504 166.58175659]
[231.67234802 170.19947815]
[246.06871033 174.41972351]
[260.27703857 179.23516846]
[274.27276611 184.63751221]
[288.03164673 190.61737061]
[301.52984619 197.16439819]
[314.74401855 204.26725769]
[327.65130615 211.91368103]
[340.22930908 220.09039307]
[352.45632935 228.78326416]
[364.31112671 237.97721863]
[375.77319336 247.65637207]
[386.82272339 257.80395508]
[397.44058228 268.40240479]
[407.60833740 279.43334961]
[417.30844116 290.87771606]
[426.52404785 302.71566772]
[435.23925781 314.92675781]
[443.43896484 327.48980713]
[451.10897827 340.38308716]
[458.23599243 353.58425903]
[464.80767822 367.07046509]
[470.81268311 380.81838989]
[476.24060059 394.80419922]
[481.08203125 409.00372314]
[485.32858276 423.39233398]
[488.97293091 437.94512939]
[492.00872803 452.63693237]
[494.43075562 467.44232178]
[496.23480225 482.33563232]
[497.41775513 497.29110718]
[497.97753906 512.28283691]
[497.91320801 527.28485107]
[497.22488403 542.27124023]
[495.91372681 557.21600342]
[493.98202515 572.09332275]
[491.43313599 586.87738037]
[488.27145386 601.54260254]
[484.50244141 616.06359863]
[480.13265991 630.41528320]
[475.16964722 644.57275391]
[469.62197876 658.51153564]
[463.49929810 672.20745850]
[456.81219482 685.63677979]
[449.57223511 698.77636719]
[441.79196167 711.60339355]
[433.48480225 724.09564209]
[424.66522217 736.23156738]
[415.34838867 747.99005127]
[405.55053711 759.35083008]
[395.28854370 770.29418945]
[384.58020020 780.80114746]
[373.44406128 790.85363770]
[361.89938354 800.43414307]
[349.96618652 809.52606201]
[337.66510010 818.11376953]
[325.01742554 826.18231201]
[312.04504395 833.71777344]
[298.77044678 840.70709229]
[285.21658325 847.13812256]
[271.40692139 852.99975586]
[257.36538696 858.28186035]
[243.11628723 862.97528076]
[228.68428040 867.07189941]
[214.09434509 870.56463623]
[199.37174988 873.44744873]
[184.54197693 875.71533203]
[169.63069153 877.36431885]
[154.66372681 878.39160156]
[139.66699219 878.79534912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 133]
[73 132]
[74 131]
[75 130]
[78 128]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[85 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
