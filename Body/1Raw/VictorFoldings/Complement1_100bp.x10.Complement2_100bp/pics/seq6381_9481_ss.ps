%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[85.19219971 506.00924683]
[74.51552582 516.56512451]
[62.79393387 525.94708252]
[50.15585327 534.05242920]
[36.73975754 540.79235840]
[22.69263840 546.09289551]
[8.16840267 549.89611816]
[-6.67381334 552.16027832]
[-21.67139053 552.86053467]
[-36.66000748 551.98925781]
[-51.47544098 549.55603027]
[-65.95536041 545.58746338]
[-79.94112396 540.12707520]
[-93.27948761 533.23461914]
[-105.82431793 524.98565674]
[-117.43815613 515.47058105]
[-127.99376678 504.79367065]
[-137.37548828 493.07186890]
[-145.48052979 480.43359375]
[-152.22009277 467.01733398]
[-157.52032471 452.97006226]
[-161.32316589 438.44573975]
[-163.58694458 423.60348511]
[-164.28686523 408.60589600]
[-163.41523743 393.61727905]
[-160.98164368 378.80191040]
[-157.01271057 364.32208252]
[-151.55195618 350.33645630]
[-144.65919495 336.99826050]
[-136.40995789 324.45364380]
[-126.89460754 312.84002686]
[-116.21742249 302.28466797]
[-104.49537659 292.90322876]
[-91.85690308 284.79849243]
[-78.44048309 278.05926514]
[-64.39310455 272.75936890]
[-49.86868286 268.95687866]
[-35.02635574 266.69345093]
[-20.02874565 265.99389648]
[-5.04017210 266.86590576]
[9.77514172 269.29986572]
[24.25487137 273.26913452]
[29.71022797 259.29632568]
[35.16558456 245.32353210]
[40.62094116 231.35073853]
[46.07629776 217.37794495]
[35.24824905 207.09773254]
[29.16453362 193.41804504]
[28.78066635 178.41079712]
[34.18627167 164.36206055]
[44.58668900 153.42382812]
[58.41962051 147.28436279]
[73.58978271 146.90769958]
[79.04514313 132.93490601]
[84.50049591 118.96210480]
[89.95585632 104.98930359]
[76.25355530 111.09233093]
[61.79989243 107.08088684]
[53.20288849 94.78896332]
[54.39297867 79.83624268]
[64.82607269 69.05892181]
[79.73229218 67.38424683]
[92.29672241 75.57785034]
[96.77499390 89.89557648]
[103.65440369 76.56614685]
[110.53381348 63.23672104]
[117.41323090 49.90729141]
[124.29264069 36.57786179]
[111.82250977 44.91427994]
[97.26982117 48.55009460]
[82.34420013 47.05816650]
[68.79909515 40.61377335]
[58.22578049 29.97399139]
[51.86639023 16.38877296]
[50.46802139 1.45409715]
[54.19495010 -13.07552719]
[62.60934830 -25.49317360]
[74.72269440 -34.34003067]
[89.11192322 -38.57677460]
[104.08660889 -37.70568085]
[117.88753510 -31.82908249]
[128.89338684 -21.63735771]
[135.81120300 -8.32781982]
[137.82829285 6.53594065]
[134.70709229 21.20919800]
[144.53767395 9.87960529]
[154.36825562 -1.44998813]
[164.19883728 -12.77958107]
[174.02941895 -24.10917473]
[183.86000061 -35.43876648]
[193.69058228 -46.76836014]
[183.18278503 -57.48435211]
[173.57135010 -69.01113129]
[164.91859436 -81.27393341]
[157.28067017 -94.19322968]
[150.70707703 -107.68523407]
[145.24046326 -121.66245270]
[140.91629028 -136.03422546]
[137.76258850 -150.70735168]
[135.79983521 -165.58665466]
[135.04072571 -180.57565308]
[135.49020386 -195.57713318]
[137.14533997 -210.49378967]
[139.99542236 -225.22889709]
[144.02194214 -239.68688965]
[149.19880676 -253.77398682]
[155.49243164 -267.39883423]
[162.86201477 -280.47308350]
[171.25973511 -292.91192627]
[180.63113403 -304.63467407]
[190.91545105 -315.56533813]
[202.04595947 -325.63299561]
[213.95051575 -334.77236938]
[226.55186462 -342.92416382]
[239.76832581 -350.03555298]
[253.51414490 -356.06039429]
[267.70019531 -360.95959473]
[282.23446655 -364.70141602]
[297.02270508 -367.26156616]
[311.96899414 -368.62344360]
[326.97640991 -368.77819824]
[341.94760132 -367.72488403]
[356.78549194 -365.47027588]
[371.39385986 -362.02902222]
[385.67794800 -357.42343140]
[399.54510498 -351.68338013]
[412.90539551 -344.84609985]
[425.67221069 -336.95590210]
[437.76272583 -328.06399536]
[449.09851074 -318.22802734]
[459.60607910 -307.51181030]
[469.21725464 -295.98483276]
[477.86972046 -283.72183228]
[485.50738525 -270.80236816]
[492.08068848 -257.31021118]
[497.54696655 -243.33288574]
[501.87081909 -228.96101379]
[505.02420044 -214.28782654]
[506.98663330 -199.40847778]
[507.74542236 -184.41944885]
[507.29562378 -169.41798401]
[505.64013672 -154.50135803]
[502.78973389 -139.76632690]
[498.76287842 -125.30841827]
[493.58572388 -111.22143555]
[487.29177856 -97.59671783]
[479.92193604 -84.52264404]
[471.52392578 -72.08399200]
[462.15228271 -60.36143875]
[451.86773682 -49.43101120]
[440.73696899 -39.36359406]
[428.83224487 -30.22448349]
[416.23068237 -22.07294846]
[403.01409912 -14.96185589]
[389.26812744 -8.93732643]
[375.08197021 -4.03843021]
[360.54760742 -0.29693976]
[345.75930786 2.26288009]
[330.81298828 3.62442732]
[315.80557251 3.77887201]
[300.83441162 2.72521234]
[285.99655151 0.47028172]
[271.38827515 -2.97129560]
[257.10430908 -7.57719898]
[243.23727417 -13.31755733]
[229.87712097 -20.15514183]
[217.11048889 -28.04560661]
[205.02017212 -36.93777847]
[195.18959045 -25.60818672]
[185.35900879 -14.27859306]
[175.52842712 -2.94900036]
[165.69784546 8.38059235]
[155.86726379 19.71018600]
[146.03669739 31.03977966]
[137.62207031 43.45727539]
[130.74266052 56.78670502]
[123.86324310 70.11613464]
[116.98383331 83.44556427]
[110.10442352 96.77499390]
[103.92864990 110.44466400]
[98.47329712 124.41745758]
[93.01793671 138.39025879]
[87.56258392 152.36305237]
[98.46438599 162.91893005]
[104.47801971 176.80702209]
[104.71567535 191.89865112]
[99.17227173 205.89358521]
[88.72149658 216.67070007]
[74.97823334 222.60939026]
[60.04909897 222.83329773]
[54.59373856 236.80609131]
[49.13838196 250.77890015]
[43.68302536 264.75170898]
[38.22766876 278.72448730]
[51.56637192 285.61627197]
[64.11159515 293.86462402]
[75.72590637 303.37911987]
[86.28202820 314.05551147]
[95.66432190 325.77688599]
[103.76997375 338.41476440]
[110.51019287 351.83068848]
[115.81111145 365.87768555]
[119.61465454 380.40182495]
[121.87915802 395.24398804]
[122.57980347 410.24154663]
[121.70890808 425.23019409]
[119.27602386 440.04568481]
[115.30780029 454.52569580]
[109.84772491 468.51159668]
[102.95561218 481.85012817]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 194]
[43 193]
[44 192]
[45 191]
[46 190]
[53 183]
[54 182]
[55 181]
[56 180]
[64 179]
[65 178]
[66 177]
[67 176]
[68 175]
[85 174]
[86 173]
[87 172]
[88 171]
[89 170]
[90 169]
[91 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
