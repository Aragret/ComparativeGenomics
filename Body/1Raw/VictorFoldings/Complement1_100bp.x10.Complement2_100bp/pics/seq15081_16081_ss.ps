%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[51.33555603 535.53472900]
[40.99162674 546.40930176]
[29.79572868 556.40454102]
[17.82237625 565.45391846]
[5.15124893 573.49725342]
[-8.13332748 580.48101807]
[-21.94294548 586.35870361]
[-36.18569946 591.09124756]
[-50.76681137 594.64709473]
[-65.58924103 597.00256348]
[-80.55434418 598.14208984]
[-95.56253052 598.05798340]
[-110.51393127 596.75085449]
[-125.30902863 594.22937012]
[-139.84936523 590.51031494]
[-154.03819275 585.61846924]
[-167.78106689 579.58642578]
[-180.98654175 572.45422363]
[-193.56674194 564.26934814]
[-205.43791199 555.08636475]
[-216.52108765 544.96624756]
[-226.74250793 533.97650146]
[-236.03411865 522.19012451]
[-244.33412170 509.68557739]
[-251.58726501 496.54614258]
[-257.74526978 482.85922241]
[-262.76718140 468.71591187]
[-266.61953735 454.21032715]
[-269.27673340 439.43902588]
[-270.72109985 424.50024414]
[-270.94299316 409.49346924]
[-269.94094849 394.51852417]
[-267.72161865 379.67510986]
[-264.29980469 365.06195068]
[-259.69824219 350.77633667]
[-253.94760132 336.91336060]
[-247.08610535 323.56521606]
[-239.15943909 310.82077026]
[-230.22035217 298.76483154]
[-220.32832336 287.47766113]
[-209.54919434 277.03430176]
[-197.95471191 267.50433350]
[-185.62200928 258.95114136]
[-172.63317871 251.43162537]
[-159.07464600 244.99584961]
[-145.03665161 239.68664551]
[-130.61262512 235.53935242]
[-115.89854431 232.58155823]
[-100.99233246 230.83293152]
[-85.99318695 230.30514526]
[-71.00093842 231.00169373]
[-56.11534500 232.91793823]
[-41.43547821 236.04112244]
[-27.05903053 240.35046387]
[-13.08167171 245.81730652]
[0.40357548 252.40524292]
[8.06417274 239.50891113]
[15.72477055 226.61257935]
[23.38536835 213.71626282]
[31.04596519 200.81993103]
[30.89368248 185.92610168]
[44.59370422 178.01283264]
[52.25429916 165.11650085]
[52.10201645 150.22267151]
[65.80204010 142.30938721]
[65.64975739 127.41556549]
[79.34977722 119.50228882]
[80.06315613 112.14614105]
[87.22164917 106.47219086]
[87.79519653 92.50212860]
[99.99750519 85.67605591]
[107.84925842 72.89521027]
[115.70101929 60.11436844]
[123.55277252 47.33352661]
[131.40452576 34.55268478]
[139.25628662 21.77184296]
[147.10803223 8.99100018]
[154.95979309 -3.78984237]
[162.81155396 -16.57068443]
[170.66329956 -29.35152817]
[176.94065857 -42.97484207]
[181.55467224 -57.24757767]
[186.16868591 -71.52030945]
[190.78269958 -85.79304504]
[195.39669800 -100.06578064]
[187.92437744 -111.27197266]
[188.26551819 -124.54201508]
[196.07160950 -135.03710938]
[208.31297302 -139.05937195]
[213.13896179 -153.26182556]
[217.85910034 -167.49981689]
[222.47311401 -181.77253723]
[227.08711243 -196.04527283]
[222.81495667 -213.95701599]
[236.28785706 -225.20191956]
[240.68884277 -239.54176331]
[245.08984375 -253.88162231]
[249.49084473 -268.22146606]
[253.89184570 -282.56130981]
[258.29284668 -296.90115356]
[245.04141235 -304.03460693]
[233.43646240 -313.61642456]
[223.92405701 -325.27835083]
[216.86984253 -338.57211304]
[212.54492188 -352.98672485]
[211.11558533 -367.96817017]
[212.63673401 -382.94055176]
[217.04991150 -397.32839966]
[224.18548584 -410.57867432]
[233.76919556 -422.18206787]
[245.43266296 -431.69256592]
[258.72756958 -438.74465942]
[273.14288330 -443.06723022]
[288.12454224 -444.49414062]
[303.09667969 -442.97058105]
[317.48382568 -438.55505371]
[330.73294067 -431.41732788]
[342.33477783 -421.83175659]
[351.84341431 -410.16674805]
[358.89334106 -396.87069702]
[363.21356201 -382.45468140]
[364.63806152 -367.47280884]
[363.11206055 -352.50091553]
[358.69424438 -338.11450195]
[351.55435181 -324.86651611]
[341.96688843 -313.26623535]
[330.30035400 -303.75949097]
[317.00317383 -296.71173096]
[302.58645630 -292.39379883]
[287.60433960 -290.97174072]
[272.63269043 -292.50015259]
[268.23168945 -278.16030884]
[263.83068848 -263.82046509]
[259.42968750 -249.48062134]
[255.02870178 -235.14077759]
[250.62770081 -220.80091858]
[256.01626587 -209.97088623]
[252.46708679 -197.98809814]
[241.35984802 -191.43127441]
[236.74583435 -177.15853882]
[232.13183594 -162.88580322]
[233.06544495 -155.55435181]
[227.34141541 -148.43582153]
[222.51542664 -134.23336792]
[230.58688354 -119.47903442]
[225.38757324 -103.13026428]
[209.66943359 -95.45176697]
[205.05541992 -81.17903137]
[200.44142151 -66.90630341]
[195.82740784 -52.63356781]
[191.21339417 -38.36083603]
[202.15740967 -48.61893082]
[215.92254639 -54.57888412]
[230.89169312 -55.54052353]
[245.30627441 -51.39087677]
[257.47290039 -42.61743927]
[265.96224976 -30.25090599]
[269.77697754 -15.74408722]
[268.46896362 -0.80122709]
[262.19183350 12.82220173]
[251.68305969 23.52573204]
[238.17718506 30.05192375]
[223.26084900 31.63408661]
[208.68643188 28.08634949]
[196.16612244 19.82549667]
[187.17077637 7.82200623]
[182.75717163 -6.51396513]
[183.44415283 -21.49977112]
[175.59239197 -8.71892929]
[167.74063110 4.06191301]
[159.88888550 16.84275627]
[152.03712463 29.62359810]
[144.18536377 42.40444183]
[136.33361816 55.18528366]
[128.48185730 67.96612549]
[120.63010406 80.74697113]
[112.77835083 93.52780914]
[112.20480347 107.49787140]
[100.00249481 114.32394409]
[92.24610138 127.16288757]
[91.85044861 142.97914124]
[78.69836426 149.96998596]
[78.30271149 165.78625488]
[65.15062714 172.77709961]
[57.49002838 185.67343140]
[57.09437561 201.48968506]
[43.94229126 208.48052979]
[36.28169632 221.37686157]
[28.62109756 234.27317810]
[20.96050072 247.16950989]
[13.29990196 260.06582642]
[25.53597069 268.75671387]
[37.02293015 278.41604614]
[47.68433762 288.97952271]
[57.44923782 300.37686157]
[66.25265503 312.53222656]
[74.03599548 325.36471558]
[80.74745941 338.78890991]
[86.34239197 352.71548462]
[90.78355408 367.05175781]
[94.04138947 381.70233154]
[96.09421539 396.56970215]
[96.92837524 411.55493164]
[96.53831482 426.55828857]
[94.92662811 441.47991943]
[92.10404968 456.22055054]
[88.08935547 470.68203735]
[82.90926361 484.76818848]
[76.59824371 498.38522339]
[69.19830322 511.44253540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 191]
[57 190]
[58 189]
[59 188]
[60 187]
[62 185]
[63 184]
[65 182]
[67 180]
[69 179]
[71 177]
[72 176]
[73 175]
[74 174]
[75 173]
[76 172]
[77 171]
[78 170]
[79 169]
[80 168]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[89 144]
[90 143]
[91 141]
[92 140]
[93 139]
[95 136]
[96 135]
[97 134]
[98 133]
[99 132]
[100 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
