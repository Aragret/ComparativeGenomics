%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[53.37774658 759.90649414]
[38.35538101 760.01599121]
[23.45246887 758.12213135]
[8.93496799 754.25878906]
[-4.93803930 748.49481201]
[-17.91897392 740.93316650]
[-29.77617264 731.70874023]
[-40.29803467 720.98614502]
[-49.29677963 708.95672607]
[-56.61181641 695.83526611]
[-62.11260223 681.85583496]
[-65.70096588 667.26788330]
[-67.31287384 652.33184814]
[-66.91954803 637.31427002]
[-64.52802277 622.48309326]
[-60.18096542 608.10296631]
[-53.95595932 594.43066406]
[-45.96409988 581.71008301]
[-36.34800720 570.16821289]
[-25.27929497 560.01110840]
[-12.95549202 551.41998291]
[0.40346384 544.54815674]
[14.55916882 539.51831055]
[29.25899696 536.42016602]
[44.24061203 535.30902100]
[45.13342667 520.33563232]
[46.02624512 505.36221313]
[46.91905975 490.38882446]
[47.81187439 475.41540527]
[48.70469284 460.44198608]
[49.59750748 445.46859741]
[50.49032211 430.49517822]
[38.74502563 425.97808838]
[28.72814178 418.33157349]
[21.25304413 408.16394043]
[16.93025970 396.28857422]
[16.11762047 383.65914917]
[18.89065170 371.29281616]
[25.03568840 360.18835449]
[34.06629562 351.24560547]
[45.26176834 345.19238281]
[57.72463608 342.52539062]
[59.28515625 327.60678101]
[60.84568024 312.68817139]
[62.40620422 297.76956177]
[59.97563171 290.79000854]
[64.10263062 282.64105225]
[65.88510132 267.74734497]
[67.66756439 252.85362244]
[69.45002747 237.95989990]
[67.25480652 233.71842957]
[67.70075226 228.05290222]
[71.51371765 222.65171814]
[73.73883057 207.81767273]
[75.96395111 192.98362732]
[78.18907166 178.14958191]
[80.41418457 163.31553650]
[78.62369537 160.27803040]
[78.21549988 156.22236633]
[79.65210724 151.80767822]
[83.08416748 147.87474060]
[85.96944427 133.15484619]
[88.85471344 118.43495178]
[91.73999023 103.71505737]
[90.06379700 100.24191284]
[89.92666626 96.04679108]
[91.61669159 91.83361053]
[95.09677887 88.40887451]
[98.63645172 73.83249664]
[102.17612457 59.25612259]
[105.49838257 44.62866211]
[100.78438568 29.52605438]
[110.98799133 18.67544556]
[114.09210205 4.00014257]
[117.19621277 -10.67515945]
[120.30031586 -25.35046196]
[123.40442657 -40.02576447]
[126.50853729 -54.70106888]
[129.61265564 -69.37636566]
[132.71676636 -84.05167389]
[135.27259827 -98.83232880]
[137.27661133 -113.69785309]
[125.22383881 -128.31445312]
[127.64093781 -146.78254700]
[142.52986145 -157.43318176]
[144.09037781 -172.35177612]
[145.65090942 -187.27038574]
[139.39128113 -201.80062866]
[148.41067505 -213.65388489]
[149.97120667 -228.57249451]
[151.53172302 -243.49108887]
[153.09225464 -258.40969849]
[154.65277100 -273.32830811]
[156.21330261 -288.24691772]
[157.77381897 -303.16552734]
[143.48027039 -307.90985107]
[130.54103088 -315.61633301]
[119.56127930 -325.92453003]
[111.05455017 -338.35232544]
[105.41873932 -352.31842041]
[102.91742706 -367.16958618]
[103.66761780 -382.21124268]
[107.63420868 -396.73983765]
[114.63168335 -410.07586670]
[124.33276367 -421.59555054]
[136.28370667 -430.76010132]
[149.92553711 -437.14089966]
[164.62020874 -440.43945312]
[179.68043518 -440.50155640]
[194.40179443 -437.32424927]
[208.09577942 -431.05615234]
[220.12187195 -421.99041748]
[229.91758728 -410.55111694]
[237.02478027 -397.27322388]
[241.11102295 -382.77783203]
[241.98519897 -367.74288940]
[239.60641479 -352.87158203]
[234.08593750 -338.85949707]
[225.68196106 -326.36199951]
[214.78756714 -315.96362305]
[201.91230774 -308.15072632]
[187.65835571 -303.28869629]
[172.69242859 -301.60498047]
[171.13189697 -286.68637085]
[169.57138062 -271.76779175]
[168.01084900 -256.84918213]
[166.45033264 -241.93057251]
[164.88981628 -227.01196289]
[163.32928467 -212.09336853]
[169.70051575 -198.63020325]
[160.56950378 -185.70986938]
[159.00898743 -170.79125977]
[157.44845581 -155.87265015]
[166.38299561 -148.77757263]
[170.82908630 -138.14045715]
[169.57543945 -126.55934143]
[162.81849670 -116.92375946]
[152.14213562 -111.69384003]
[150.13812256 -96.82830811]
[163.46740723 -103.70798492]
[177.21856689 -97.71584320]
[181.25474548 -83.26907349]
[172.60061646 -71.01728821]
[157.63569641 -69.99205780]
[147.39205933 -80.94756317]
[144.28794861 -66.27226257]
[141.18383789 -51.59695816]
[138.07972717 -36.92165375]
[134.97561646 -22.24635124]
[131.87150574 -7.57104969]
[128.76739502 7.10425282]
[125.66329193 21.77955437]
[130.59931946 35.83248901]
[120.17368317 47.73277283]
[121.98174286 52.15317535]
[121.03212738 57.75632095]
[116.75249481 62.79579544]
[113.21282196 77.37216949]
[109.67315674 91.94854736]
[106.45987701 106.60033417]
[103.57460785 121.32022095]
[100.68933105 136.04011536]
[97.80406189 150.76000977]
[95.24822998 165.54066467]
[93.02310944 180.37471008]
[90.79799652 195.20875549]
[88.57287598 210.04278564]
[86.34776306 224.87683105]
[84.34375000 239.74237061]
[82.56127930 254.63607788]
[80.77881622 269.52978516]
[78.99634552 284.42352295]
[77.32480621 299.33007812]
[75.76428223 314.24868774]
[74.20376587 329.16729736]
[72.64324188 344.08590698]
[88.28137970 352.10934448]
[99.61629486 365.49621582]
[104.93028259 382.17593384]
[103.43419647 399.58227539]
[95.38446045 415.04803467]
[82.03964233 426.21380615]
[65.46372986 431.38800049]
[64.57091522 446.36141968]
[63.67809677 461.33480835]
[62.78528214 476.30822754]
[61.89246750 491.28161621]
[60.99964905 506.25503540]
[60.10683441 521.22845459]
[59.21401978 536.20184326]
[73.95744324 539.08538818]
[88.18495941 543.90838623]
[101.64266205 550.58471680]
[114.09037781 558.99530029]
[125.30596924 568.98999023]
[135.08927917 580.39044189]
[143.26570129 592.99322510]
[149.68933105 606.57336426]
[154.24552917 620.88854980]
[156.85298157 635.68328857]
[157.46516418 650.69360352]
[156.07113647 665.65155029]
[152.69578552 680.29022217]
[147.39935303 694.34832764]
[140.27635193 707.57507324]
[131.45390320 719.73431396]
[121.08945465 730.60913086]
[109.36797333 740.00543213]
[96.49863434 747.75549316]
[82.71112061 753.72106934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 190]
[26 189]
[27 188]
[28 187]
[29 186]
[30 185]
[31 184]
[32 183]
[42 176]
[43 175]
[44 174]
[45 173]
[47 172]
[48 171]
[49 170]
[50 169]
[53 168]
[54 167]
[55 166]
[56 165]
[57 164]
[61 163]
[62 162]
[63 161]
[64 160]
[68 159]
[69 158]
[70 157]
[71 154]
[73 152]
[74 151]
[75 150]
[76 149]
[77 148]
[78 147]
[79 146]
[80 145]
[81 139]
[82 138]
[85 133]
[86 132]
[87 131]
[89 129]
[90 128]
[91 127]
[92 126]
[93 125]
[94 124]
[95 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
