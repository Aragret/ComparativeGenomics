%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAGxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[149.23760986 467.97534180]
[153.53645325 453.54953003]
[160.65150452 440.28448486]
[170.29141235 428.72348022]
[182.06141663 419.33987427]
[195.47955322 412.51794434]
[191.50746155 398.05343628]
[187.53536987 383.58889771]
[183.56326294 369.12438965]
[179.59117126 354.65985107]
[175.61907959 340.19534302]
[161.63916016 335.12582397]
[153.22550964 322.64886475]
[153.77853394 307.43218994]
[163.29556274 295.31887817]
[159.32347107 280.85433960]
[154.81584167 266.54766846]
[149.77893066 252.41864014]
[144.74200439 238.28961182]
[139.70509338 224.16058350]
[134.66818237 210.03155518]
[129.42146301 195.97908020]
[123.96610260 182.00627136]
[118.51074982 168.03347778]
[113.05538940 154.06068420]
[107.60003662 140.08789062]
[102.14467621 126.11508942]
[96.68931580 112.14228821]
[90.92328644 98.29480743]
[84.84944916 84.57953644]
[78.77561951 70.86427307]
[72.70178223 57.14900208]
[66.62795258 43.43373871]
[59.06357193 30.48073769]
[50.10287476 18.45136070]
[41.14217758 6.42198324]
[32.18148422 -5.60739470]
[23.22078705 -17.63677216]
[15.58463001 -22.64945030]
[14.21781349 -29.91261673]
[5.43721008 -42.07407379]
[-3.34339309 -54.23552704]
[-18.69333839 -56.88447952]
[-27.42487335 -69.34300995]
[-24.80490875 -83.96051025]
[-33.58551025 -96.12196350]
[-33.19124603 -81.12715149]
[-39.72763443 -67.62619781]
[-51.73442841 -58.63526154]
[-66.52927399 -56.16294098]
[-80.80697632 -60.76155090]
[-91.37785339 -71.40376282]
[-95.88034821 -85.71206665]
[-93.30858612 -100.48995209]
[-84.23710632 -112.43601227]
[-70.69250488 -118.88145447]
[-55.70067978 -118.38636017]
[-42.61082458 -111.06131744]
[-49.29101944 -124.49169159]
[-55.97121048 -137.92207336]
[-62.65140533 -151.35244751]
[-69.33160400 -164.78282166]
[-76.01179504 -178.21319580]
[-90.13139343 -173.10098267]
[-104.74171448 -169.63165283]
[-119.65228271 -167.85040283]
[-134.66870117 -167.78048706]
[-149.59519958 -169.42280579]
[-164.23719788 -172.75595093]
[-178.40379333 -177.73645020]
[-191.91029358 -184.29939270]
[-204.58061218 -192.35920715]
[-216.24958801 -201.81082153]
[-226.76506042 -212.53102112]
[-235.98995972 -224.38003540]
[-243.80400085 -237.20338440]
[-250.10533142 -250.83389282]
[-254.81179810 -265.09387207]
[-257.86203003 -279.79739380]
[-259.21627808 -294.75280762]
[-258.85687256 -309.76507568]
[-256.78851318 -324.63854980]
[-253.03814697 -339.17926025]
[-247.65467834 -353.19766235]
[-240.70829773 -366.51101685]
[-232.28955078 -378.94577026]
[-222.50820923 -390.33975220]
[-211.49177551 -400.54446411]
[-199.38388062 -409.42684937]
[-186.34237671 -416.87109375]
[-172.53729248 -422.78018188]
[-158.14859009 -427.07705688]
[-143.36387634 -429.70571899]
[-128.37588501 -430.63183594]
[-113.38000488 -429.84341431]
[-98.57176208 -427.35067749]
[-84.14420319 -423.18615723]
[-70.28541565 -417.40414429]
[-57.17608643 -410.07998657]
[-44.98711395 -401.30920410]
[-33.87741089 -391.20611572]
[-23.99181747 -379.90246582]
[-15.45920658 -367.54559326]
[-8.39082241 -354.29660034]
[-2.87881470 -340.32821655]
[1.00495613 -325.82257080]
[3.20985699 -310.96871948]
[3.70714259 -295.96038818]
[2.49032998 -280.99319458]
[-0.42471761 -266.26226807]
[-4.99999619 -251.95965576]
[-11.17585754 -238.27182007]
[-18.87178802 -225.37724304]
[-27.98745346 -213.44398499]
[-38.40401077 -202.62765503]
[-49.98566437 -193.06924438]
[-62.58142090 -184.89338684]
[-55.90122604 -171.46301270]
[-49.22103119 -158.03263855]
[-42.54083633 -144.60226440]
[-35.86064148 -131.17189026]
[-29.18044662 -117.74150848]
[-21.42405510 -104.90256500]
[-12.64345264 -92.74111176]
[2.05590940 -90.62821198]
[11.13393402 -78.41984558]
[8.81806278 -63.01613235]
[17.59866524 -50.85467529]
[26.37926865 -38.69322205]
[35.25016403 -26.59746742]
[44.21086121 -14.56809044]
[53.17155838 -2.53871298]
[62.13225174 9.49066448]
[71.09294891 21.52004242]
[69.25928497 6.63254166]
[72.85671997 -7.92968607]
[81.41194916 -20.25072861]
[93.79937744 -28.70954132]
[108.38923645 -32.19322205]
[123.26197052 -30.24343300]
[136.46083069 -23.11670303]
[146.24925232 -11.75067329]
[151.33943176 2.35925698]
[151.06164551 17.35668373]
[145.45245361 31.26844025]
[135.24983215 42.26419067]
[121.79611969 48.89726257]
[106.86138153 50.29495239]
[92.41053772 46.27337646]
[80.34321594 37.35990143]
[86.41705322 51.07516861]
[92.49088287 64.79043579]
[98.56472015 78.50570679]
[104.63854980 92.22097015]
[108.00294495 94.10597992]
[110.52011108 97.46480560]
[111.55047607 101.88581848]
[110.66211700 106.68693542]
[116.11747742 120.65972900]
[121.57283020 134.63252258]
[127.02819061 148.60533142]
[132.48355103 162.57812500]
[137.93890381 176.55091858]
[143.39425659 190.52371216]
[148.30880737 194.94625854]
[149.99848938 200.37229919]
[148.79721069 204.99462891]
[153.83412170 219.12365723]
[158.87104797 233.25268555]
[163.90795898 247.38171387]
[168.94487000 261.51074219]
[177.63446045 249.28408813]
[192.60227966 248.30221558]
[202.81463623 259.28894043]
[200.74334717 274.14523315]
[187.91528320 281.91961670]
[173.78799438 276.88226318]
[177.76008606 291.34677124]
[192.12875366 296.90084839]
[200.37547302 309.70104980]
[199.51387024 324.72506714]
[190.08360291 336.22323608]
[194.05569458 350.68777466]
[198.02778625 365.15228271]
[201.99989319 379.61682129]
[205.97198486 394.08132935]
[209.94407654 408.54586792]
[224.96438599 407.55831909]
[239.87597656 409.61489868]
[254.06822205 414.63137817]
[266.95996094 422.40234375]
[278.02328491 432.60958862]
[286.80514526 444.83511353]
[292.94595337 458.57830811]
[296.19424438 473.27636719]
[296.41699219 488.32745361]
[293.60507202 503.11523438]
[287.87365723 517.03411865]
[279.45739746 529.51416016]
[268.70098877 540.04431152]
[256.04486084 548.19342041]
[242.00727844 553.62768555]
[227.16308594 556.12463379]
[212.12013245 555.58197021]
[197.49441528 552.02197266]
[183.88485718 545.59045410]
[171.84877014 536.55065918]
[161.87899780 525.27288818]
[154.38381958 512.21887207]
[149.67015076 497.92321777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[11 182]
[15 178]
[16 177]
[17 171]
[18 170]
[19 169]
[20 168]
[21 167]
[22 164]
[23 163]
[24 162]
[25 161]
[26 160]
[27 159]
[28 158]
[29 154]
[30 153]
[31 152]
[32 151]
[33 150]
[34 134]
[35 133]
[36 132]
[37 131]
[38 130]
[40 129]
[41 128]
[42 127]
[45 124]
[46 123]
[58 122]
[59 121]
[60 120]
[61 119]
[62 118]
[63 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
