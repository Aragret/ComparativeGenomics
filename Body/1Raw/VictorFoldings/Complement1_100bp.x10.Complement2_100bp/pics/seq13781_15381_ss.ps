%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[80.90418243 530.11370850]
[66.19392395 527.14459229]
[51.74312210 523.09716797]
[37.63069534 517.99359131]
[23.93372536 511.86169434]
[10.72701550 504.73498535]
[-1.91729903 496.65237427]
[-13.93015957 487.65802002]
[-25.24595642 477.80102539]
[-35.80288315 467.13528442]
[-45.54328537 455.71896362]
[-54.41395950 443.61450195]
[-62.36645889 430.88793945]
[-69.35734558 417.60885620]
[-75.34844208 403.84970093]
[-80.30702209 389.68566895]
[-84.20600891 375.19412231]
[-87.02410889 360.45419312]
[-88.74591827 345.54638672]
[-89.36204529 330.55212402]
[-88.86911774 315.55331421]
[-87.26983643 300.63189697]
[-84.57292175 285.86929321]
[-80.79311371 271.34619141]
[-75.95105743 257.14190674]
[-70.07319641 243.33403015]
[-63.19163513 229.99794006]
[-55.34395218 217.20648193]
[-46.57301712 205.02954102]
[-36.92673111 193.53361511]
[-26.45777893 182.78149414]
[-15.22334099 172.83187866]
[-3.28477454 163.73915100]
[9.29271412 155.55294800]
[22.44043159 148.31797791]
[36.08656693 142.07376099]
[50.15659332 136.85440063]
[64.57365417 132.68841553]
[79.25901794 129.59855652]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[90.00129700 58.31773376]
[89.10848236 43.34432602]
[88.21566772 28.37092209]
[79.67068481 15.05574894]
[86.63672638 1.89050937]
[85.74391174 -13.08289623]
[84.85109711 -28.05630302]
[69.84666443 -28.05195808]
[54.86832809 -28.93649673]
[39.96870041 -30.70681000]
[25.20011139 -33.35667801]
[10.61444378 -36.87679672]
[-3.73707414 -41.25479889]
[-17.80402946 -46.47530746]
[-31.53701401 -52.51998901]
[-44.88778687 -59.36760330]
[-57.80945206 -66.99410248]
[-70.25662994 -75.37269592]
[-82.18558502 -84.47395325]
[-93.55442810 -94.26591492]
[-104.32321930 -104.71417236]
[-114.45413208 -115.78202820]
[-123.91158295 -127.43061066]
[-132.66235352 -139.61900330]
[-140.67570496 -152.30439758]
[-147.92349243 -165.44223022]
[-154.38026428 -178.98634338]
[-160.02331543 -192.88917542]
[-164.83285522 -207.10189819]
[-168.79196167 -221.57458496]
[-171.88674927 -236.25637817]
[-174.10633850 -251.09573364]
[-175.44294739 -266.04049683]
[-175.89184570 -281.03823853]
[-175.45149231 -296.03619385]
[-174.12341309 -310.98171997]
[-171.91229248 -325.82235718]
[-168.82588196 -340.50592041]
[-164.87501526 -354.98083496]
[-160.07359314 -369.19628906]
[-154.43846130 -383.10235596]
[-147.98942566 -396.65014648]
[-140.74913025 -409.79211426]
[-132.74301147 -422.48208618]
[-123.99919128 -434.67544556]
[-114.54838562 -446.32943726]
[-104.42378235 -457.40307617]
[-93.66094971 -467.85745239]
[-82.29769897 -477.65591431]
[-70.37393188 -486.76397705]
[-57.93153763 -495.14965820]
[-45.01422119 -502.78350830]
[-31.66735458 -509.63876343]
[-17.93782234 -515.69128418]
[-3.87384486 -520.91979980]
[10.47517395 -525.30596924]
[25.05883217 -528.83441162]
[39.82590485 -531.49267578]
[54.72452164 -533.27148438]
[69.70235443 -534.16461182]
[84.70677948 -534.16882324]
[99.68511200 -533.28411865]
[114.58472443 -531.51367188]
[129.35328674 -528.86370850]
[143.93891907 -525.34344482]
[158.29040527 -520.96533203]
[172.35731506 -515.74468994]
[186.09024048 -509.69989014]
[199.44096375 -502.85214233]
[212.36256409 -495.22555542]
[224.80966187 -486.84683228]
[236.73854065 -477.74548340]
[248.10729980 -467.95343018]
[258.87600708 -457.50506592]
[269.00680542 -446.43713379]
[278.46417236 -434.78845215]
[287.21484375 -422.59997559]
[295.22805786 -409.91452026]
[302.47573853 -396.77664185]
[308.93240356 -383.23245239]
[314.57531738 -369.32955933]
[319.38473511 -355.11682129]
[323.34371948 -340.64410400]
[326.43838501 -325.96228027]
[328.65783691 -311.12289429]
[329.99429321 -296.17810059]
[330.44308472 -281.18038940]
[330.00259399 -266.18243408]
[328.67437744 -251.23689270]
[326.46313477 -236.39630127]
[323.37658691 -221.71275330]
[319.42559814 -207.23785400]
[314.62405396 -193.02244568]
[308.98880005 -179.11643982]
[302.53964233 -165.56869507]
[295.29922485 -152.42680359]
[287.29299927 -139.73690796]
[278.54907227 -127.54360962]
[269.09817505 -115.88971710]
[258.97348022 -104.81616974]
[248.21054077 -94.36186218]
[236.84721375 -84.56352997]
[224.92335510 -75.45556641]
[212.48089600 -67.06998444]
[199.56350708 -59.43623352]
[186.21658325 -52.58112335]
[172.48699951 -46.52873611]
[158.42297363 -41.30032730]
[144.07391357 -36.91426849]
[129.49023438 -33.38595963]
[114.72313690 -30.72779655]
[99.82450104 -28.94911766]
[100.71731567 -13.97571182]
[101.61013031 0.99769348]
[110.09125519 13.24186802]
[103.18907166 27.47810555]
[104.08188629 42.45151138]
[104.97470856 57.42491913]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[124.11124420 126.92415619]
[139.05972290 128.24705505]
[153.86968994 130.67033386]
[168.46023560 134.18074036]
[182.75169373 138.75912476]
[196.66598511 144.38047791]
[210.12713623 151.01408386]
[223.06161499 158.62371826]
[235.39877319 167.16783142]
[247.07122803 176.59973145]
[258.01525879 186.86793518]
[268.17102051 197.91633606]
[277.48312378 209.68460083]
[285.90066528 222.10845947]
[293.37768555 235.12004089]
[299.87335205 248.64828491]
[305.35217285 262.61932373]
[309.78424072 276.95681763]
[313.14532471 291.58251953]
[315.41708374 306.41647339]
[316.58709717 321.37768555]
[316.64898682 336.38446045]
[315.60241699 351.35482788]
[313.45312500 366.20703125]
[310.21279907 380.85992432]
[305.89916992 395.23352051]
[300.53576660 409.24926758]
[294.15194702 422.83062744]
[286.78250122 435.90347290]
[278.46771240 448.39633179]
[269.25302124 460.24102783]
[259.18872070 471.37280273]
[248.32978821 481.73092651]
[236.73551941 491.25881958]
[224.46926880 499.90438843]
[211.59800720 507.62048340]
[198.19203186 514.36492920]
[184.32458496 520.10083008]
[170.07138062 524.79693604]
[155.51028442 528.42761230]
[140.72082520 530.97296143]
[125.78376007 532.41912842]
[110.78068542 532.75817871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 167]
[41 166]
[43 164]
[44 163]
[45 162]
[46 161]
[47 160]
[49 158]
[50 157]
[51 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
