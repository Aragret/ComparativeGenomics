%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[80.94056702 530.63946533]
[66.47911835 534.91937256]
[51.40761566 535.46752930]
[36.67345428 532.24957275]
[23.20284081 525.46771240]
[11.84254742 515.54833984]
[3.30669379 503.11489868]
[-1.86815059 488.94903564]
[-3.35669017 473.94119263]
[-1.06535411 459.03482056]
[4.86182213 445.16687012]
[14.05225182 433.20916748]
[25.92821503 423.91336060]
[39.74318314 417.86376953]
[54.62873077 415.44067383]
[55.96696472 400.50048828]
[57.30519867 385.56030273]
[58.64343262 370.62011719]
[52.07245636 357.25332642]
[61.01009369 344.19845581]
[61.90290833 329.22506714]
[62.34951401 314.23171997]
[62.79612350 299.23837280]
[63.24272919 284.24502563]
[54.10404205 269.26330566]
[63.91185379 253.67843628]
[64.13517761 238.68009949]
[56.58823013 225.83903503]
[64.53013611 212.15559387]
[64.75346375 197.15725708]
[64.97679138 182.15892029]
[58.09511185 195.48718262]
[48.15323639 206.71923828]
[35.75911713 215.16824341]
[21.67066193 220.31756592]
[6.74938107 221.85227966]
[-8.09228230 219.67857361]
[-21.94675446 213.92933655]
[-33.96682739 204.95617676]
[-43.41747284 193.30776978]
[-49.72077942 179.69644165]
[-52.49129486 164.95451355]
[-51.55960083 149.98347473]
[-46.98267746 135.69880676]
[-39.04039383 122.97402191]
[-28.21843529 112.58724213]
[-15.17856121 105.17362976]
[-0.71816790 101.18652344]
[14.27848625 100.86973572]
[28.89435196 104.24264526]
[42.23566055 111.09899139]
[53.48658752 121.01950836]
[61.95913315 133.39755249]
[67.13520050 147.47619629]
[68.69826508 162.39456177]
[73.94498444 148.34208679]
[79.19170380 134.28962708]
[84.43842316 120.23715210]
[89.68514252 106.18467712]
[94.72205353 92.05564880]
[99.54805756 77.85319519]
[104.37405396 63.65073776]
[109.20005035 49.44828415]
[114.02604675 35.24582672]
[118.85204315 21.04337120]
[123.67803955 6.84091520]
[120.79210663 -8.71485329]
[132.21279907 -18.27607536]
[136.50692749 -32.64828873]
[140.26322937 -47.17034531]
[144.01953125 -61.69240570]
[139.98460388 -76.99044037]
[150.66253662 -87.37461090]
[154.41883850 -101.89667511]
[158.17512512 -116.41873169]
[161.93142700 -130.94079590]
[165.68772888 -145.46284485]
[157.92826843 -158.96945190]
[161.94456482 -173.64338684]
[174.86886597 -180.95761108]
[178.62516785 -195.47967529]
[182.38146973 -210.00172424]
[186.13777161 -224.52378845]
[173.41493225 -232.68385315]
[163.85015869 -244.36108398]
[158.37042236 -258.40390015]
[157.50067139 -273.43249512]
[161.31349182 -287.97433472]
[169.42332458 -300.60848999]
[181.02536011 -310.10443115]
[194.97538757 -315.54193115]
[209.90269470 -316.40023804]
[213.65899658 -330.92230225]
[217.41529846 -345.44436646]
[213.38037109 -360.74240112]
[224.05830383 -371.12658691]
[227.81459045 -385.64862061]
[231.57089233 -400.17068481]
[217.97839355 -406.62359619]
[205.85289001 -415.53253174]
[195.63273621 -426.57540894]
[187.68737793 -439.35302734]
[182.30404663 -453.40350342]
[179.67733765 -468.21893311]
[179.90219116 -483.26373291]
[182.97048950 -497.99404907]
[188.77133179 -511.87738037]
[197.09500122 -524.41186523]
[207.64059448 -535.14434814]
[220.02693176 -543.68695068]
[233.80621338 -549.73077393]
[248.48034668 -553.05731201]
[263.51889038 -553.54644775]
[278.37814331 -551.18035889]
[292.52105713 -546.04467773]
[305.43627930 -538.32501221]
[316.65698242 -528.30041504]
[325.77752686 -516.33331299]
[332.46820068 -502.85623169]
[336.48718262 -488.35644531]
[337.68914795 -473.35803223]
[336.03067017 -458.40322876]
[331.57168579 -444.03265381]
[324.47338867 -430.76574707]
[314.99237061 -419.08212280]
[303.47140503 -409.40414429]
[290.32690430 -402.08163452]
[276.03408813 -397.37933350]
[261.10958862 -395.46722412]
[246.09295654 -396.41439819]
[242.33665466 -381.89233398]
[238.58035278 -367.37026978]
[242.88395691 -353.11096191]
[231.93734741 -341.68804932]
[228.18104553 -327.16601562]
[224.42474365 -312.64395142]
[237.06369019 -304.65530396]
[246.62754822 -293.13565063]
[252.17004395 -279.20507812]
[253.13665771 -264.22320557]
[249.42021179 -249.65643311]
[241.37243652 -236.93446350]
[229.77087402 -227.30992126]
[215.74363708 -221.73503113]
[200.65983582 -220.76748657]
[196.90353394 -206.24542236]
[193.14723206 -191.72337341]
[189.39093018 -177.20130920]
[197.14772034 -164.53767395]
[193.54516602 -149.75672913]
[180.20979309 -141.70654297]
[176.45349121 -127.18449402]
[172.69718933 -112.66242981]
[168.94088745 -98.14037323]
[165.18458557 -83.61831665]
[169.48818970 -69.35899353]
[158.54158020 -57.93610382]
[154.78527832 -43.41404724]
[151.02899170 -28.89198685]
[165.08134460 -34.13898087]
[178.02302551 -26.55523491]
[180.31387329 -11.73120022]
[170.26518250 -0.59460539]
[155.28445435 -1.35493386]
[146.41525269 -13.45007706]
[149.64637756 1.08983696]
[137.88049316 11.66691303]
[133.05450439 25.86936951]
[128.22850037 40.07182312]
[123.40250397 54.27428055]
[118.57650757 68.47673798]
[113.75051117 82.67919159]
[108.92451477 96.88164520]
[110.11763000 101.98952484]
[108.36396790 107.40229034]
[103.73760986 111.43139648]
[98.49089050 125.48387146]
[93.24417877 139.53634644]
[87.99745941 153.58880615]
[82.75074005 167.64128113]
[79.97512817 182.38224792]
[79.75180054 197.38058472]
[79.52847290 212.37892151]
[87.05944824 226.29275513]
[79.13352203 238.90342712]
[78.91019440 253.90176392]
[87.31731415 263.68353271]
[86.82252502 276.17108154]
[78.23607635 284.69161987]
[77.78947449 299.68496704]
[77.34286499 314.67831421]
[76.89626312 329.67166138]
[79.08921814 333.41931152]
[79.89456177 337.28143311]
[79.44669342 340.80773926]
[78.01243591 343.63784790]
[75.95027924 345.53671265]
[82.42553711 359.97213745]
[73.58361816 371.95837402]
[72.24538422 386.89855957]
[70.90715027 401.83874512]
[69.56891632 416.77893066]
[83.78687286 421.80886841]
[96.30678558 430.21734619]
[106.34165192 441.47579956]
[113.26065826 454.87646484]
[116.62887573 469.57699585]
[116.23458099 484.65332031]
[112.10254669 499.15771484]
[104.49252319 512.17840576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 202]
[16 201]
[17 200]
[18 199]
[20 197]
[21 192]
[22 191]
[23 190]
[24 189]
[26 186]
[27 185]
[29 183]
[30 182]
[31 181]
[55 180]
[56 179]
[57 178]
[58 177]
[59 176]
[60 173]
[61 172]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[68 165]
[69 159]
[70 158]
[71 157]
[73 155]
[74 154]
[75 153]
[76 152]
[77 151]
[80 148]
[81 147]
[82 146]
[83 145]
[92 136]
[93 135]
[94 134]
[96 132]
[97 131]
[98 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
