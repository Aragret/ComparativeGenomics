%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[70.57316589 552.60247803]
[64.37249756 566.30139160]
[55.94575119 578.75524902]
[45.53538895 589.60571289]
[33.44093323 598.54058838]
[20.01036644 605.30279541]
[5.63011360 609.69781494]
[-9.28607941 611.59918213]
[-24.30904198 610.95220947]
[-39.00653458 607.77545166]
[-52.95567703 602.16033936]
[-65.75513458 594.26849365]
[-77.03662872 584.32684326]
[-86.47557831 572.62152100]
[-93.80039978 559.48931885]
[-98.80034637 545.30804443]
[-101.33155823 530.48571777]
[-101.32121277 515.44885254]
[-98.76959229 500.63003540]
[-93.75012970 486.45565796]
[-86.40724182 473.33355713]
[-76.95218658 461.64123535]
[-65.65702057 451.71514893]
[-52.84671402 443.84088135]
[-38.88985062 438.24499512]
[-24.18800163 435.08847046]
[-9.16416264 434.46215820]
[5.74939871 436.38406372]
[10.15039730 422.04421997]
[14.55139542 407.70437622]
[18.95239258 393.36453247]
[23.35339165 379.02465820]
[27.75438881 364.68481445]
[32.15538788 350.34497070]
[31.11273003 343.02822876]
[36.73012924 335.82528687]
[41.34413910 321.55255127]
[45.95814896 307.27981567]
[50.57215881 293.00708008]
[43.58286667 279.90420532]
[48.05880737 265.36389160]
[61.84970093 258.12173462]
[66.46370697 243.84898376]
[71.07772064 229.57626343]
[75.69172668 215.30352783]
[79.23139954 200.72714233]
[81.67713165 185.92787170]
[84.12285614 171.12860107]
[86.56858063 156.32933044]
[88.46187592 141.44929504]
[89.80010986 126.50911713]
[87.26589203 119.56652832]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[89.11119080 57.63361740]
[98.13059235 45.78035736]
[99.69110870 30.86175346]
[101.25163269 15.94314861]
[102.81215668 1.02454352]
[104.37268066 -13.89406109]
[105.93320465 -28.81266594]
[107.49372864 -43.73126984]
[109.05425262 -58.64987564]
[110.61477661 -73.56848145]
[112.17529297 -88.48708344]
[104.67438507 -98.97990417]
[106.28128052 -111.37351227]
[115.59365845 -119.09402466]
[117.37612152 -133.98773193]
[119.15859222 -148.88145447]
[120.94105530 -163.77517700]
[119.09118652 -167.70352173]
[118.63361359 -171.62208557]
[119.39430237 -175.09437561]
[121.07532501 -177.78524780]
[123.29867554 -179.49255371]
[125.96446991 -194.25376892]
[120.80290222 -209.20932007]
[130.67892456 -220.35891724]
[129.12445068 -229.36010742]
[133.49584961 -235.31936646]
[136.38113403 -250.03924561]
[139.26640320 -264.75915527]
[142.15167236 -279.47903442]
[145.03694153 -294.19891357]
[130.76448059 -298.87615967]
[117.17500305 -305.27191162]
[104.47450256 -313.28918457]
[92.85552979 -322.80648804]
[82.49422455 -333.67953491]
[73.54765320 -345.74346924]
[66.15145874 -358.81542969]
[60.41774750 -372.69720459]
[56.43345642 -387.17840576]
[54.25897598 -402.03948975]
[53.92727280 -417.05511475]
[55.44338226 -431.99771118]
[58.78431320 -446.64071655]
[63.89941788 -460.76217651]
[70.71115875 -474.14797974]
[79.11626434 -486.59521484]
[88.98731995 -497.91519165]
[100.17468262 -507.93630981]
[112.50875092 -516.50659180]
[125.80255127 -523.49621582]
[139.85455322 -528.79913330]
[154.45170593 -532.33502197]
[169.37275696 -534.05023193]
[184.39149475 -533.91876221]
[199.28022766 -531.94256592]
[213.81326294 -528.15173340]
[227.77026367 -522.60363770]
[240.93966675 -515.38238525]
[253.12181091 -506.59744263]
[264.13201904 -496.38201904]
[273.80340576 -484.89096069]
[281.98931885 -472.29849243]
[288.56567383 -458.79547119]
[293.43276978 -444.58663940]
[296.51684570 -429.88739014]
[297.77114868 -414.92056274]
[297.17660522 -399.91302490]
[294.74230957 -385.09228516]
[290.50512695 -370.68307495]
[284.52926636 -356.90377808]
[276.90536499 -343.96331787]
[267.74896240 -332.05786133]
[257.19891357 -321.36785889]
[245.41510010 -312.05541992]
[232.57618713 -304.26168823]
[218.87683105 -298.10482788]
[204.52467346 -293.67819214]
[189.73730469 -291.04882812]
[174.73890686 -290.25665283]
[159.75683594 -291.31365967]
[156.87156677 -276.59375000]
[153.98629761 -261.87387085]
[151.10101318 -247.15397644]
[148.21574402 -232.43408203]
[145.44013977 -217.69313049]
[150.79237366 -203.79338074]
[140.72567749 -191.58796692]
[138.05989075 -176.82675171]
[135.83477783 -161.99270630]
[134.05230713 -147.09898376]
[132.26983643 -132.20527649]
[130.48738098 -117.31155396]
[138.25302124 -101.57427979]
[127.09390259 -86.92655945]
[125.53337860 -72.00795746]
[123.97285461 -57.08935165]
[122.41233063 -42.17074966]
[120.85180664 -27.25214386]
[119.29128265 -12.33353806]
[117.73076630 2.58506656]
[116.17024231 17.50367165]
[114.60971832 32.42227554]
[113.04919434 47.34088135]
[119.42042542 60.80403900]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.74029541 127.84735107]
[103.40206146 142.78753662]
[116.41086578 135.31953430]
[130.41586304 140.69168091]
[135.09309387 154.94381714]
[126.99468231 167.56980896]
[112.09046173 169.26223755]
[101.36785126 158.77505493]
[98.92212677 173.57434082]
[96.47640228 188.37361145]
[94.03067017 203.17288208]
[104.73636627 192.66630554]
[119.23606110 188.82456970]
[133.73956299 192.65188599]
[144.45570374 203.14781189]
[148.58328247 217.56874084]
[145.04339600 232.14506531]
[134.76133728 243.06657410]
[120.42481995 247.47840881]
[105.78137207 244.22732544]
[94.65876007 234.16316223]
[89.96446228 219.91752625]
[85.35044861 234.19026184]
[80.73644257 248.46299744]
[76.12243652 262.73571777]
[83.06421661 276.68023682]
[78.18163300 291.08911133]
[64.84489441 297.62109375]
[60.23088074 311.89382935]
[55.61687088 326.16656494]
[51.00286484 340.43930054]
[46.49523544 354.74597168]
[42.09423447 369.08581543]
[37.69323730 383.42565918]
[33.29224014 397.76550293]
[28.89124298 412.10537720]
[24.49024391 426.44522095]
[20.08924675 440.78506470]
[33.51332092 447.56018066]
[45.59920502 456.50665283]
[55.99915695 467.36709595]
[64.41395569 479.82901001]
[70.60148621 493.53384399]
[74.38372040 508.08728027]
[75.65184021 523.07061768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 203]
[29 202]
[30 201]
[31 200]
[32 199]
[33 198]
[34 197]
[36 196]
[37 195]
[38 194]
[39 193]
[42 190]
[43 189]
[44 188]
[45 187]
[46 176]
[47 175]
[48 174]
[49 173]
[50 167]
[51 166]
[53 165]
[55 163]
[56 162]
[58 160]
[59 159]
[60 158]
[61 157]
[62 156]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[70 149]
[71 148]
[72 147]
[73 146]
[78 145]
[79 144]
[81 142]
[83 141]
[84 140]
[85 139]
[86 138]
[87 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
