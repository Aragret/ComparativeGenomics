%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUAGUUAAAGUAGUGUUGUUAAUAGUUAUAUUUUGGGGGACGGUAUUGGGUUAUGGUUUGCGGGGAGAAGCAGACUAGGCAGGAUUAGUGUCGUCAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[82.67109680 1001.13653564]
[67.70700836 1000.05810547]
[52.81184006 998.26342773]
[38.01984406 995.75665283]
[23.36504555 992.54364014]
[8.88115120 988.63159180]
[-5.39852667 984.02966309]
[-19.44114304 978.74841309]
[-33.21440125 972.79992676]
[-46.68661880 966.19793701]
[-59.82681274 958.95764160]
[-72.60475922 951.09564209]
[-84.99106598 942.63006592]
[-96.95725250 933.58032227]
[-108.47578430 923.96728516]
[-119.52017212 913.81304932]
[-130.06501770 903.14099121]
[-140.08605957 891.97564697]
[-149.56025696 880.34265137]
[-158.46582031 868.26879883]
[-166.78225708 855.78186035]
[-174.49044800 842.91052246]
[-181.57264709 829.68444824]
[-188.01258850 816.13403320]
[-193.79545593 802.29040527]
[-198.90792847 788.18548584]
[-203.33827209 773.85162354]
[-207.07627869 759.32183838]
[-210.11337280 744.62957764]
[-212.44253540 729.80859375]
[-214.05844116 714.89294434]
[-214.95735168 699.91699219]
[-215.13720703 684.91522217]
[-214.59759521 669.92199707]
[-213.33975220 654.97192383]
[-211.36659241 640.09936523]
[-208.68261719 625.33850098]
[-205.29403687 610.72326660]
[-201.20861816 596.28735352]
[-196.43577576 582.06390381]
[-190.98646545 568.08563232]
[-184.87324524 554.38470459]
[-178.11016846 540.99261475]
[-170.71278381 527.94018555]
[-162.69810486 515.25744629]
[-154.08456421 502.97357178]
[-144.89199829 491.11679077]
[-135.14151001 479.71435547]
[-124.85556030 468.79254150]
[-114.05779266 458.37643433]
[-102.77304077 448.49002075]
[-91.02725983 439.15603638]
[-78.84747314 430.39590454]
[-66.26168823 422.22982788]
[-53.29885864 414.67654419]
[-39.98879242 407.75347900]
[-26.36210823 401.47650146]
[-12.45014381 395.86007690]
[1.71509933 390.91711426]
[16.10104179 386.65899658]
[30.67459488 383.09552002]
[45.40224075 380.23486328]
[60.25010300 378.08358765]
[75.18402863 376.64669800]
[90.16967773 375.92745972]
[90.16967773 360.92745972]
[90.16967773 345.92745972]
[90.16967773 330.92745972]
[90.16967773 315.92745972]
[90.16967773 300.92745972]
[90.16967773 285.92745972]
[90.16967773 270.92745972]
[81.84072113 262.15505981]
[81.71795654 249.65830994]
[90.41259003 240.13117981]
[90.63591766 225.13284302]
[90.85924530 210.13450623]
[83.31229401 197.29344177]
[91.25420380 183.61000061]
[91.47753143 168.61166382]
[91.70085907 153.61332703]
[91.92418671 138.61499023]
[84.37723541 125.77392578]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[93.35250854 42.69117737]
[90.80862427 38.13313675]
[90.31668854 33.51671982]
[91.55533600 29.63331604]
[93.93564606 27.03207970]
[87.03347015 12.79584217]
[95.51458740 0.55166692]
[96.40740967 -14.42173862]
[89.50522614 -28.65797615]
[97.98635101 -40.90215302]
[98.87916565 -55.87555695]
[99.77198029 -70.84896088]
[86.08403015 -77.46020508]
[75.97176361 -88.80967712]
[70.97721863 -103.16665649]
[71.86203766 -118.34181976]
[78.49127960 -132.02105713]
[89.85404205 -142.11839294]
[104.21758270 -147.09403992]
[119.39156342 -146.18927002]
[133.06207275 -139.54203796]
[143.14443970 -128.16600037]
[148.10119629 -113.79592896]
[147.17646790 -98.62314606]
[140.51126099 -84.96139526]
[129.12196350 -74.89398956]
[114.74538422 -69.95614624]
[113.85256958 -54.98274231]
[112.95975494 -40.00933456]
[119.92579651 -26.84409523]
[111.38081360 -13.52892303]
[110.48799896 1.44448280]
[117.45404053 14.60972214]
[108.90905762 27.92489433]
[108.35084534 42.91450500]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[114.84845734 126.22765350]
[106.92252350 138.83831787]
[106.69919586 153.83665466]
[106.47586823 168.83499146]
[106.25254059 183.83332825]
[113.78351593 197.74716187]
[105.85758209 210.35783386]
[105.63425446 225.35617065]
[105.41092682 240.35450745]
[114.75037384 256.22448730]
[105.16967773 270.92745972]
[105.16967773 285.92745972]
[105.16967773 300.92745972]
[105.16967773 315.92745972]
[105.16967773 330.92745972]
[105.16967773 345.92745972]
[105.16967773 360.92745972]
[105.16967773 375.92745972]
[120.15532684 376.64669800]
[135.08924866 378.08358765]
[149.93711853 380.23486328]
[164.66476440 383.09552002]
[179.23831177 386.65899658]
[193.62425232 390.91711426]
[207.78950500 395.86007690]
[221.70146179 401.47650146]
[235.32815552 407.75347900]
[248.63821411 414.67654419]
[261.60104370 422.22982788]
[274.18682861 430.39590454]
[286.36660767 439.15603638]
[298.11239624 448.49002075]
[309.39715576 458.37643433]
[320.19491577 468.79254150]
[330.48086548 479.71435547]
[340.23135376 491.11679077]
[349.42391968 502.97357178]
[358.03744507 515.25744629]
[366.05212402 527.94018555]
[373.44952393 540.99261475]
[380.21261597 554.38470459]
[386.32583618 568.08563232]
[391.77511597 582.06390381]
[396.54797363 596.28735352]
[400.63339233 610.72326660]
[404.02197266 625.33850098]
[406.70593262 640.09936523]
[408.67910767 654.97192383]
[409.93695068 669.92199707]
[410.47656250 684.91522217]
[410.29669189 699.91699219]
[409.39779663 714.89294434]
[407.78189087 729.80859375]
[405.45272827 744.62957764]
[402.41564941 759.32183838]
[398.67764282 773.85162354]
[394.24728394 788.18548584]
[389.13479614 802.29040527]
[383.35195923 816.13403320]
[376.91201782 829.68444824]
[369.82980347 842.91052246]
[362.12161255 855.78186035]
[353.80517578 868.26879883]
[344.89962769 880.34265137]
[335.42541504 891.97564697]
[325.40435791 903.14099121]
[314.85952759 913.81304932]
[303.81512451 923.96728516]
[292.29660034 933.58032227]
[280.33041382 942.63006592]
[267.94412231 951.09564209]
[255.16616821 958.95764160]
[242.02597046 966.19793701]
[228.55375671 972.79992676]
[214.78050232 978.74841309]
[200.73788452 984.02966309]
[186.45820618 988.63159180]
[171.97430420 992.54364014]
[157.31950378 995.75665283]
[142.52751160 998.26342773]
[127.63234711 1000.05810547]
[112.66825867 1001.13653564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[75 137]
[76 136]
[77 135]
[79 133]
[80 132]
[81 131]
[82 130]
[84 128]
[86 126]
[87 125]
[88 124]
[89 123]
[93 122]
[95 120]
[96 119]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
