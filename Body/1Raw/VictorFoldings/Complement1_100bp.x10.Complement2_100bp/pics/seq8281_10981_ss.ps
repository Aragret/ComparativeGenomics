%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[18.19764328 681.24291992]
[6.56793308 690.73059082]
[-5.81490564 699.21185303]
[-18.86401558 706.62719727]
[-32.48786163 712.92462158]
[-46.59088898 718.05993652]
[-61.07416153 721.99707031]
[-75.83609772 724.70849609]
[-90.77314758 726.17517090]
[-105.78054047 726.38671875]
[-120.75300598 725.34179688]
[-135.58551025 723.04766846]
[-150.17404175 719.52038574]
[-164.41622925 714.78472900]
[-178.21221924 708.87396240]
[-191.46519470 701.82946777]
[-204.08222961 693.70068359]
[-215.97480774 684.54461670]
[-227.05952454 674.42553711]
[-237.25859070 663.41442871]
[-246.50050354 651.58843994]
[-254.72042847 639.03057861]
[-261.86068726 625.82897949]
[-267.87124634 612.07611084]
[-272.70986938 597.86859131]
[-276.34268188 583.30596924]
[-278.74417114 568.49047852]
[-279.89749146 553.52600098]
[-279.79455566 538.51745605]
[-278.43609619 523.57019043]
[-275.83163452 508.78900146]
[-271.99945068 494.27758789]
[-266.96640015 480.13775635]
[-260.76779175 466.46865845]
[-253.44714355 453.36621094]
[-245.05575562 440.92227173]
[-235.65251160 429.22418213]
[-225.30337524 418.35394287]
[-214.08093262 408.38784790]
[-202.06388855 399.39578247]
[-189.33654785 391.44082642]
[-175.98818970 384.57876587]
[-162.11244202 378.85772705]
[-147.80664062 374.31787109]
[-133.17111206 370.99102783]
[-118.30852509 368.90051270]
[-103.32314301 368.06103516]
[-88.32006073 368.47845459]
[-73.40453339 370.14981079]
[-58.68117523 373.06344604]
[-44.25326157 377.19888306]
[-30.22199440 382.52713013]
[-23.74249840 368.99877930]
[-17.26300240 355.47042847]
[-10.78350735 341.94210815]
[-4.30401134 328.41375732]
[2.17548418 314.88540649]
[8.24931812 301.17013550]
[13.91210461 287.28012085]
[19.57489204 273.39007568]
[25.23767853 259.50006104]
[30.90046501 245.61003113]
[19.27972221 237.10807800]
[10.03003788 226.06088257]
[3.69437790 213.10984802]
[0.64634180 199.00834656]
[1.06813931 184.57789612]
[4.93970299 170.66027832]
[12.03959370 158.06845093]
[21.95766258 147.53906250]
[34.11874008 139.68936157]
[47.81599045 134.98095703]
[62.25200272 133.69279480]
[76.58519745 135.90449524]
[82.45416260 122.10031128]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[98.35046387 76.71297455]
[103.93317413 71.86992645]
[110.00701141 58.15465927]
[116.08084106 44.43939209]
[122.15467834 30.72412491]
[120.66806793 14.97291756]
[132.89622498 6.46872759]
[136.00033569 -8.20657539]
[136.00033569 -23.20657539]
[136.00033569 -38.20657349]
[136.00033569 -53.20657349]
[121.21202850 -55.96710587]
[107.18285370 -61.39820099]
[94.39063263 -69.31488037]
[83.27107239 -79.44750214]
[74.20289612 -91.45095825]
[67.49497223 -104.91640472]
[63.37575912 -119.38522339]
[61.98555756 -134.36460876]
[63.37171936 -149.34437561]
[67.48703003 -163.81430054]
[74.19132996 -177.28155518]
[83.25627136 -189.28744507]
[94.37310028 -199.42306519]
[107.16318512 -207.34320068]
[121.19089508 -212.77807617]
[135.97845459 -215.54258728]
[151.02221680 -215.54258728]
[165.80978394 -212.77807617]
[179.83749390 -207.34320068]
[192.62757874 -199.42306519]
[203.74441528 -189.28744507]
[212.80934143 -177.28155518]
[219.51364136 -163.81430054]
[223.62896729 -149.34437561]
[225.01512146 -134.36460876]
[223.62492371 -119.38522339]
[219.50570679 -104.91640472]
[212.79777527 -91.45095825]
[203.72959900 -79.44750214]
[192.61004639 -69.31488037]
[179.81782532 -61.39820099]
[165.78865051 -55.96710587]
[151.00033569 -53.20657349]
[151.00033569 -38.20657349]
[151.00033569 -23.20657539]
[151.00033569 -8.20657539]
[157.63305664 -21.66046143]
[166.88423157 -33.46790695]
[178.36050415 -43.12684631]
[191.57389832 -50.22658157]
[205.96257019 -54.46522903]
[220.91470337 -55.66255951]
[235.79454041 -53.76765442]
[249.96936035 -48.86109543]
[262.83645630 -41.15150833]
[273.84872437 -30.96670723]
[282.53790283 -18.73975754]
[288.53451538 -4.99055243]
[291.58358765 9.69628239]
[291.55548096 24.69625664]
[288.45138550 39.37156296]
[282.40328979 53.09819794]
[273.66836548 65.29250336]
[262.61801147 75.43596649]
[249.72212219 83.09728241]
[235.52900696 87.95069122]
[220.64218140 89.78982544]
[205.69464111 88.53647614]
[191.32196045 84.24394226]
[178.13525391 77.09474182]
[166.69526672 67.39286804]
[157.48838806 55.55083847]
[150.90614319 42.07219315]
[147.22837830 27.53004456]
[146.61149597 12.54256153]
[148.53254700 27.31276131]
[135.86994934 36.79795837]
[129.79611206 50.51322556]
[123.72227478 64.22849274]
[117.64844513 77.94375610]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[96.25833893 127.96927643]
[90.38937378 141.77345276]
[102.74892426 151.37739563]
[112.19993591 163.84030151]
[118.10487366 178.31196594]
[120.06788635 193.80699158]
[117.96131897 209.27192688]
[111.93399811 223.65682983]
[102.40073395 235.98660278]
[90.01377869 245.42710876]
[75.61818695 251.34149170]
[60.19421005 253.33326721]
[44.79049301 251.27281189]
[39.12770462 265.16284180]
[33.46492004 279.05285645]
[27.80213165 292.94290161]
[22.13934517 306.83291626]
[22.88292313 311.11090088]
[22.28649712 315.01074219]
[20.63348007 318.15762329]
[18.29990959 320.30731201]
[15.70382977 321.36489868]
[9.22433376 334.89324951]
[2.74483824 348.42160034]
[-3.73465776 361.94992065]
[-10.21415329 375.47827148]
[-16.69364929 389.00662231]
[-3.74709487 396.59960938]
[8.51868439 405.24929810]
[20.01765251 414.89505005]
[30.66914940 425.46914673]
[40.39846420 436.89749146]
[49.13734818 449.09988403]
[56.82450485 461.99075317]
[63.40601349 475.47964478]
[68.83570862 489.47195435]
[73.07550812 503.86956787]
[76.09566498 518.57141113]
[77.87500000 533.47448730]
[78.40103149 548.47412109]
[77.67006683 563.46520996]
[75.68724060 578.34252930]
[72.46644592 593.00177002]
[68.03029633 607.34008789]
[62.40988922 621.25689697]
[55.64465714 634.65460205]
[47.78205490 647.43914795]
[38.87723160 659.52099609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 189]
[53 188]
[54 187]
[55 186]
[56 185]
[57 184]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[74 164]
[75 163]
[76 162]
[78 160]
[80 159]
[81 158]
[82 157]
[83 156]
[85 154]
[86 125]
[87 124]
[88 123]
[89 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
