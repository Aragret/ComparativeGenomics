%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[212.37487793 229.28205872]
[221.26904297 217.18669128]
[210.16180420 207.10556030]
[199.05458069 197.02441406]
[184.43020630 194.20005798]
[179.41146851 179.19595337]
[168.30424500 169.11482239]
[157.19700623 159.03367615]
[145.94091797 149.11903381]
[134.53845215 139.37306213]
[123.13598633 129.62709045]
[111.73352051 119.88113403]
[100.33106232 110.13516998]
[92.64457703 107.70812225]
[88.83277893 100.15821838]
[77.57668304 90.24356842]
[64.67856598 90.27883148]
[55.50745010 81.78916931]
[54.60933304 69.72600555]
[43.50209808 59.64486694]
[48.91622925 73.63368988]
[50.57813644 88.54134369]
[48.37758636 103.37905121]
[42.46054077 117.16268158]
[33.21945190 128.97802734]
[21.26724625 138.04139709]
[7.39667320 143.75167847]
[-7.47228193 145.73010254]
[-22.35341454 143.84545898]
[-36.25971603 138.22274780]
[-48.26882553 129.23490906]
[-57.58422470 117.47807312]
[-63.58805847 103.73201752]
[-65.88211060 88.90847778]
[-64.31423187 73.99064636]
[-58.98840714 59.96796417]
[-50.25788116 47.77051163]
[-38.70171738 38.20729446]
[-25.08639336 31.91261482]
[-10.31496906 29.30397034]
[4.63282156 30.55438423]
[18.76554680 35.58092117]
[31.14966011 44.05361176]
[23.87643051 30.93491554]
[16.60320091 17.81622314]
[9.32997131 4.69752836]
[2.05674195 -8.42116547]
[-5.21648741 -21.53985977]
[-12.48971653 -34.65855408]
[-19.76294708 -47.77724838]
[-27.03617668 -60.89594269]
[-34.30940628 -74.01463318]
[-41.58263397 -87.13333130]
[-49.62380600 -99.79585266]
[-58.40441132 -111.95731354]
[-67.18501282 -124.11876678]
[-75.96561432 -136.28022766]
[-84.74622345 -148.44168091]
[-97.85936737 -141.12307739]
[-111.73349762 -135.37634277]
[-126.18098450 -131.27919006]
[-141.00643921 -128.88702393]
[-156.00935364 -128.23219299]
[-170.98686218 -129.32356262]
[-185.73637390 -132.14637756]
[-200.05844116 -136.66246033]
[-213.75936890 -142.81072998]
[-226.65386963 -150.50802612]
[-238.56755066 -159.65026855]
[-249.33929443 -170.11383057]
[-258.82345581 -181.75717163]
[-266.89172363 -194.42285156]
[-273.43499756 -207.93957520]
[-278.36480713 -222.12455750]
[-281.61450195 -236.78593445]
[-283.14007568 -251.72544861]
[-282.92092896 -266.74105835]
[-280.96002197 -281.62969971]
[-277.28387451 -296.19000244]
[-271.94219971 -310.22506714]
[-265.00723267 -323.54507446]
[-256.57275391 -335.96990967]
[-246.75286865 -347.33151245]
[-235.68035889 -357.47625732]
[-223.50494385 -366.26693726]
[-210.39131165 -373.58465576]
[-196.51679993 -379.33047485]
[-182.06904602 -383.42666626]
[-167.24342346 -385.81784058]
[-152.24046326 -386.47167969]
[-137.26303101 -385.37930298]
[-122.51370239 -382.55548096]
[-108.19194031 -378.03845215]
[-94.49142456 -371.88928223]
[-81.59744263 -364.19113159]
[-69.68437195 -355.04806519]
[-58.91331863 -344.58380127]
[-49.42995071 -332.93981934]
[-41.36252213 -320.27362061]
[-34.82013702 -306.75643921]
[-29.89126778 -292.57113647]
[-26.64257431 -277.90954590]
[-25.11799431 -262.96990967]
[-25.33814430 -247.95433044]
[-27.30004501 -233.06582642]
[-30.97716522 -218.50576782]
[-36.31977844 -204.47106934]
[-43.25562668 -191.15150452]
[-51.69091797 -178.72724915]
[-61.51156616 -167.36628723]
[-72.58476257 -157.22227478]
[-63.80416107 -145.06082153]
[-55.02355957 -132.89936829]
[-46.24295425 -120.73791504]
[-37.46235275 -108.57646179]
[-36.06539917 -123.51126862]
[-26.24365997 -134.84852600]
[-11.66039848 -138.35971069]
[2.24519014 -132.73524475]
[10.28666401 -120.07291412]
[9.46475315 -105.09545135]
[0.08600867 -93.38907623]
[-14.35152912 -89.31998444]
[-28.46394157 -94.40656281]
[-21.19071198 -81.28786469]
[-13.91748142 -68.16917419]
[-6.64425230 -55.05047607]
[0.62897712 -41.93178177]
[7.90220642 -28.81308937]
[15.17543602 -15.69439507]
[22.44866562 -2.57570124]
[29.72189522 10.54299259]
[36.99512482 23.66168594]
[44.26835251 36.78038025]
[53.58323669 48.53763199]
[64.69046783 58.61877060]
[82.01670837 61.40594864]
[87.49134064 78.98747253]
[98.74742889 88.90212250]
[110.07702637 98.73270416]
[121.47948456 108.47866821]
[132.88195801 118.22463226]
[144.28440857 127.97060394]
[155.68687439 137.71656799]
[162.10661316 139.29721069]
[166.15646362 143.28414917]
[167.27815247 147.92645264]
[178.38537598 158.00758362]
[189.49261475 168.08872986]
[204.91145325 171.63415527]
[209.13571167 185.91717529]
[220.24295044 195.99832153]
[231.35017395 206.07945251]
[242.52952576 196.05816650]
[254.68002319 187.23947144]
[267.67288208 179.71685791]
[281.37036133 173.57008362]
[295.62728882 168.86430359]
[310.29251099 165.64938354]
[325.21054077 163.95942688]
[340.22329712 163.81234741]
[355.17156982 165.20967102]
[369.89697266 168.13662720]
[384.24334717 172.56216431]
[398.05862427 178.43937683]
[411.19641113 185.70596313]
[423.51736450 194.28489685]
[434.89089966 204.08522034]
[445.19647217 215.00306702]
[454.32482910 226.92268372]
[462.17919922 239.71772766]
[468.67630005 253.25254822]
[473.74728394 267.38369751]
[477.33840942 281.96133423]
[479.41156006 296.83096313]
[479.94482422 311.83496094]
[478.93249512 326.81423950]
[476.38531494 341.61007690]
[472.33032227 356.06555176]
[466.81045532 370.02746582]
[459.88424683 383.34780884]
[451.62509155 395.88537598]
[442.12060547 407.50729370]
[431.47149658 418.09030151]
[419.79064941 427.52227783]
[407.20190430 435.70318604]
[393.83868408 442.54632568]
[379.84268188 447.97915649]
[365.36224365 451.94409180]
[350.55084229 454.39910889]
[335.56555176 455.31817627]
[320.56515503 454.69152832]
[305.70874023 452.52581787]
[291.15371704 448.84402466]
[277.05441284 443.68515015]
[263.56030273 437.10391235]
[250.81440735 429.17004395]
[238.95185852 419.96765137]
[228.09838867 409.59432983]
[218.36904907 398.15997314]
[209.86698914 385.78585815]
[202.68234253 372.60311890]
[196.89125061 358.75149536]
[192.55511475 344.37783813]
[189.71989441 329.63452148]
[188.41564941 314.67779541]
[188.65618896 299.66629028]
[190.43899536 284.75903320]
[193.74514771 270.11413574]
[198.53959656 255.88679504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 153]
[3 152]
[4 151]
[6 149]
[7 148]
[8 147]
[9 144]
[10 143]
[11 142]
[12 141]
[13 140]
[15 139]
[16 138]
[19 136]
[20 135]
[43 134]
[44 133]
[45 132]
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
[51 126]
[52 125]
[53 124]
[54 115]
[55 114]
[56 113]
[57 112]
[58 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
