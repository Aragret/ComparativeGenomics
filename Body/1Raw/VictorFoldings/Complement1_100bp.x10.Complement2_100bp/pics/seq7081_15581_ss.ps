%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[121.82568359 711.49957275]
[108.35945892 704.87829590]
[95.38214111 697.34375000]
[82.95555878 688.93176270]
[71.13894653 679.68255615]
[59.98860168 669.64013672]
[49.55767059 658.85235596]
[39.89585495 647.37060547]
[31.04920578 635.24963379]
[23.05987549 622.54724121]
[15.96594143 609.32391357]
[9.80120754 595.64263916]
[4.59505177 581.56866455]
[0.37228459 567.16906738]
[-2.84697056 552.51245117]
[-5.04737234 537.66857910]
[-6.21843433 522.70837402]
[-6.35457659 507.70294189]
[-5.45514965 492.72390747]
[-3.52444005 477.84262085]
[-0.57164872 463.12997437]
[3.38915300 448.65609741]
[8.33909035 434.48999023]
[14.25457382 420.69912720]
[21.10741234 407.34924316]
[28.86495018 394.50396729]
[37.49021912 382.22451782]
[46.94211578 370.56936646]
[57.17559433 359.59408569]
[68.14189148 349.35098267]
[79.78874207 339.88888550]
[92.06064606 331.25283813]
[104.89911652 323.48403931]
[118.24298859 316.61950684]
[132.02865601 310.69195557]
[146.19041443 305.72958374]
[142.21832275 291.26507568]
[138.24623108 276.80053711]
[134.27412415 262.33599854]
[123.44277954 252.11196899]
[127.24949646 236.75555420]
[123.27739716 222.29103088]
[119.30529785 207.82650757]
[108.40218353 204.46670532]
[100.39195251 196.17503357]
[97.34780884 184.93104553]
[100.13767242 173.49786377]
[108.18083954 164.74320984]
[104.64116669 150.16682434]
[101.10149384 135.59045410]
[97.56182098 121.01407623]
[94.02214813 106.43770599]
[91.56304169 104.63706970]
[89.70475769 101.90186310]
[88.79471588 98.45291138]
[89.09387970 94.63626862]
[90.73319244 90.88852692]
[88.06739807 76.12730408]
[85.40160370 61.36608887]
[82.51633453 46.64619827]
[79.41222382 31.97089577]
[76.30811310 17.29559326]
[73.20400238 2.62029123]
[59.13684845 2.46412015]
[45.41884613 -0.62582034]
[32.65472031 -6.51060963]
[21.40658569 -14.92818260]
[12.16918850 -25.50499725]
[5.34814167 -37.77261353]
[1.24211872 -51.18843842]
[0.02977351 -65.15971375]
[1.76197112 -79.06974030]
[6.35965776 -92.30504608]
[13.61746502 -104.28249359]
[23.21288300 -114.47494507]
[34.72058868 -122.43446350]
[47.63129807 -127.81199646]
[44.96550369 -142.57321167]
[42.29970932 -157.33444214]
[39.63391495 -172.09565735]
[36.96811676 -186.85687256]
[26.90142441 -199.06228638]
[32.25366974 -212.96202087]
[17.21017075 -213.05044556]
[2.43910766 -215.90182495]
[-11.55642319 -221.41903687]
[-24.29973984 -229.41419983]
[-35.35680771 -239.61497498]
[-44.35102844 -251.67395020]
[-50.97606277 -265.18035889]
[-55.00626755 -279.67422485]
[-56.30436707 -294.66189575]
[-54.82615662 -309.63284302]
[-50.62197876 -324.07720947]
[-43.83502960 -337.50299072]
[-34.69646835 -349.45294189]
[-23.51754951 -359.52005005]
[-10.67902565 -367.36138916]
[3.38182950 -372.70996094]
[18.18610764 -375.38351440]
[33.22957993 -375.29104614]
[47.99987411 -372.43569946]
[61.99391937 -366.91470337]
[74.73507690 -358.91610718]
[85.78939819 -348.71234131]
[94.78036499 -336.65097046]
[101.40176392 -323.14276123]
[105.42805481 -308.64779663]
[106.72211456 -293.65979004]
[105.23986816 -278.68923950]
[101.03179932 -264.24603271]
[94.24123383 -250.82205200]
[85.09944916 -238.87457275]
[73.91781616 -228.81048584]
[61.07718277 -220.97257996]
[47.01488495 -215.62782288]
[56.89090347 -204.47822571]
[51.72933578 -189.52265930]
[54.39513016 -174.76144409]
[57.06092453 -160.00022888]
[59.72672272 -145.23901367]
[62.39251709 -130.47779846]
[78.34919739 -129.64184570]
[93.65529633 -125.02591705]
[107.42818451 -116.89199066]
[118.87261963 -105.70505524]
[127.32670593 -92.10650635]
[132.30015564 -76.87736511]
[133.50274658 -60.89344025]
[130.86120605 -45.07495880]
[124.52370453 -30.33357430]
[114.85153961 -17.51983643]
[102.39852142 -7.37411547]
[87.87930298 -0.48381889]
[90.98341370 14.19148350]
[94.08752441 28.86678505]
[97.19163513 43.54208755]
[100.63475800 46.85176468]
[102.03530884 52.35952759]
[100.16281891 58.70029449]
[102.82861328 73.46150970]
[105.49441528 88.22273254]
[108.59851837 102.89803314]
[112.13819122 117.47440338]
[115.67786407 132.05078125]
[119.21753693 146.62715149]
[122.75720978 161.20353699]
[139.30052185 170.43571472]
[143.76562500 188.51818848]
[133.76982117 203.85441589]
[137.74192810 218.31893921]
[141.71401978 232.78346252]
[152.82948303 244.04209900]
[148.73864746 258.36392212]
[152.71075439 272.82843018]
[156.68284607 287.29296875]
[160.65493774 301.75747681]
[175.36489868 298.79138184]
[190.24444580 296.84722900]
[205.22267151 295.93423462]
[220.22819519 296.05682373]
[235.18949890 297.21435547]
[250.03530884 299.40133667]
[264.69485474 302.60733032]
[279.09826660 306.81707764]
[293.17694092 312.01049805]
[306.86376953 318.16284180]
[320.09353638 325.24481201]
[332.80316162 333.22265625]
[344.93209839 342.05834961]
[356.42257690 351.70977783]
[367.21978760 362.13092041]
[377.27230835 373.27218628]
[386.53219604 385.08044434]
[394.95538330 397.49938965]
[402.50170898 410.46990967]
[409.13516235 423.93011475]
[414.82418823 437.81594849]
[419.54165649 452.06115723]
[423.26510620 466.59790039]
[425.97674561 481.35687256]
[427.66369629 496.26776123]
[428.31790161 511.25952148]
[427.93621826 526.26068115]
[426.52053833 541.19976807]
[424.07751465 556.00561523]
[420.61886597 570.60760498]
[416.16104126 584.93621826]
[410.72528076 598.92309570]
[404.33749390 612.50164795]
[397.02813721 625.60711670]
[388.83203125 638.17712402]
[379.78823853 650.15167236]
[369.93981934 661.47375488]
[359.33377075 672.08941650]
[348.02059937 681.94805908]
[336.05419922 691.00268555]
[323.49163818 699.21014404]
[310.39276123 706.53137207]
[296.82000732 712.93145752]
[282.83804321 718.37982178]
[268.51348877 722.85064697]
[253.91462708 726.32250977]
[239.11100769 728.77886963]
[224.17320251 730.20806885]
[209.17239380 730.60333252]
[194.18005371 729.96270752]
[179.26763916 728.28924561]
[164.50621033 725.59094238]
[149.96611023 721.88067627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 157]
[37 156]
[38 155]
[39 154]
[41 152]
[42 151]
[43 150]
[48 147]
[49 146]
[50 145]
[51 144]
[52 143]
[57 142]
[58 141]
[59 140]
[60 137]
[61 136]
[62 135]
[63 134]
[77 122]
[78 121]
[79 120]
[80 119]
[81 118]
[83 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
