%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[0.13794710 604.49627686]
[-7.75645065 617.26666260]
[-16.92208862 629.15765381]
[-27.26180458 640.04315186]
[-38.66599274 649.80780029]
[-51.01375961 658.34808350]
[-64.17421722 665.57348633]
[-78.00785065 671.40740967]
[-92.36802673 675.78796387]
[-107.10250854 678.66882324]
[-122.05510712 680.01928711]
[-137.06730652 679.82519531]
[-151.97999573 678.08850098]
[-166.63505554 674.82769775]
[-180.87716675 670.07727051]
[-194.55532837 663.88763428]
[-207.52456665 656.32434082]
[-219.64738464 647.46765137]
[-230.79528809 637.41137695]
[-240.85008240 626.26220703]
[-249.70520020 614.13818359]
[-257.26675415 601.16796875]
[-263.45462036 587.48901367]
[-268.20315552 573.24627686]
[-271.46206665 558.59075928]
[-273.19680786 543.67785645]
[-273.38894653 528.66564941]
[-272.03646851 513.71319580]
[-269.15371704 498.97909546]
[-264.77127075 484.61950684]
[-258.93554688 470.78662109]
[-251.70840454 457.62713623]
[-243.16648865 445.28048706]
[-233.40034485 433.87756348]
[-222.51347351 423.53927612]
[-210.62130737 414.37521362]
[-197.84989929 406.48248291]
[-184.33462524 399.94479370]
[-170.21876526 394.83139038]
[-155.65196228 391.19656372]
[-140.78862000 389.07876587]
[-125.78629303 388.50048828]
[-110.80403137 389.46786499]
[-96.00064850 391.97061157]
[-81.53305817 395.98223877]
[-67.55464172 401.46017456]
[-60.67523193 388.13073730]
[-53.79581833 374.80133057]
[-46.91640472 361.47189331]
[-40.03699112 348.14245605]
[-33.15758133 334.81301880]
[-43.97347641 325.30822754]
[-52.20069122 313.47985840]
[-57.35565567 300.01522827]
[-59.13346100 285.69802856]
[-57.42592621 271.36276245]
[-52.32813263 257.84603882]
[-44.13316345 245.93785095]
[-33.31526184 236.33531189]
[-20.50236130 229.60185242]
[-6.43966579 226.13424683]
[8.05370522 226.13912964]
[22.13242531 229.62075806]
[29.20953178 216.39523315]
[36.28663635 203.16969299]
[43.36374283 189.94416809]
[50.44084930 176.71864319]
[57.51795197 163.49311829]
[45.94848251 153.98641968]
[36.45573425 142.40550232]
[29.40443230 129.19531250]
[25.06549835 114.86340332]
[23.60563850 99.96041870]
[25.08094025 85.05895996]
[29.43472099 70.73155975]
[36.49970627 57.52868271]
[46.00444794 45.95760345]
[57.58376694 36.46289825]
[70.79276276 29.40936661]
[85.12393951 25.06801033]
[100.02667236 23.60563278]
[114.92837524 25.07841682]
[129.25651550 29.42977715]
[136.33361816 16.20425034]
[143.11361694 2.82397699]
[149.59310913 -10.70436859]
[156.07260132 -24.23271370]
[162.55210876 -37.76105881]
[169.03160095 -51.28940582]
[175.51109314 -64.81774902]
[181.99058533 -78.34609985]
[169.20141602 -86.21088409]
[157.30442810 -95.36943817]
[146.42994690 -105.72141266]
[136.69712830 -117.15338898]
[128.21263123 -129.54011536]
[121.06938171 -142.74586487]
[115.34566498 -156.62594604]
[111.10419464 -171.02828979]
[108.39144135 -185.79510498]
[107.23712158 -200.76458740]
[107.65388489 -215.77272034]
[109.63716888 -230.65505981]
[113.16523743 -245.24856567]
[118.19944763 -259.39334106]
[124.68462372 -272.93438721]
[132.54972839 -285.72335815]
[141.70857239 -297.62014771]
[152.06080627 -308.49438477]
[163.49301147 -318.22689819]
[175.87994385 -326.71112061]
[189.08586121 -333.85403442]
[202.96609497 -339.57742310]
[217.36854553 -343.81854248]
[232.13542175 -346.53094482]
[247.10491943 -347.68487549]
[262.11303711 -347.26776123]
[276.99533081 -345.28411865]
[291.58877563 -341.75567627]
[305.73339844 -336.72113037]
[319.27432251 -330.23562622]
[332.06311035 -322.37023926]
[343.95965576 -313.21109009]
[354.83361816 -302.85858154]
[364.56588745 -291.42614746]
[373.04980469 -279.03900146]
[380.19238281 -265.83291626]
[385.91543579 -251.95254517]
[390.15618896 -237.54998779]
[392.86825562 -222.78305054]
[394.02182007 -207.81352234]
[393.60433960 -192.80540466]
[391.62033081 -177.92315674]
[388.09155273 -163.32981873]
[383.05667114 -149.18528748]
[376.57083130 -135.64456177]
[368.70510864 -122.85595703]
[359.54568481 -110.95962524]
[349.19290161 -100.08590698]
[337.76022339 -90.35391998]
[325.37289429 -81.87031555]
[312.16662598 -74.72803497]
[298.28613281 -69.00533295]
[283.88345337 -64.76491547]
[269.11645508 -62.05323410]
[254.14689636 -60.90000534]
[239.13879395 -61.31786346]
[224.25659180 -63.30223083]
[209.66334534 -66.83136749]
[195.51893616 -71.86660004]
[189.03944397 -58.33825684]
[182.55995178 -44.80990982]
[176.08044434 -31.28156471]
[169.60095215 -17.75321770]
[163.12145996 -4.22487259]
[156.64196777 9.30347252]
[157.46244812 12.73263454]
[156.66275024 16.72957420]
[153.99409485 20.52846909]
[149.55915833 23.28135490]
[142.48204041 36.50688171]
[154.05151367 46.01358032]
[163.54426575 57.59450150]
[170.59556580 70.80468750]
[174.93449402 85.13659668]
[176.39436340 100.03958130]
[174.91906738 114.94104004]
[170.56527710 129.26844788]
[163.50028992 142.47131348]
[153.99554443 154.04240417]
[142.41622925 163.53709412]
[129.20722961 170.59063721]
[114.87606049 174.93199158]
[99.97332764 176.39436340]
[85.07162476 174.92158508]
[70.74347687 170.57022095]
[63.66637421 183.79574585]
[56.58927155 197.02127075]
[49.51216507 210.24681091]
[42.43505859 223.47233582]
[35.35795212 236.69786072]
[46.81139755 247.36616516]
[55.11282730 260.62255859]
[59.70312119 275.56332397]
[60.27590942 291.17169189]
[56.79803467 306.38702393]
[49.51139069 320.17681885]
[38.91613007 331.60693359]
[25.73632812 339.90466309]
[10.87049103 344.51113892]
[-4.66968060 345.11892700]
[-19.82815170 341.69244385]
[-26.70756340 355.02188110]
[-33.58697510 368.35128784]
[-40.46638870 381.68072510]
[-47.34580231 395.01016235]
[-54.22521210 408.33959961]
[-41.66214752 416.55990601]
[-30.01090431 426.02841187]
[-19.39498901 436.64471436]
[-9.92693806 448.29632568]
[-1.70711827 460.85971069]
[5.17733526 474.20169067]
[10.65344334 488.18081665]
[14.66315746 502.64895630]
[17.16397095 517.45263672]
[18.12937546 532.43505859]
[17.54913521 547.43731689]
[15.42940235 562.30035400]
[11.79264641 576.86669922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 197]
[47 196]
[48 195]
[49 194]
[50 193]
[51 192]
[63 181]
[64 180]
[65 179]
[66 178]
[67 177]
[68 176]
[83 161]
[84 160]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[90 151]
[91 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
