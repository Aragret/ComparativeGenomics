%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[145.82170105 604.33740234]
[141.78912354 589.61663818]
[144.55143738 574.60559082]
[153.56018066 562.28466797]
[167.02668762 555.10021973]
[166.35690308 540.11517334]
[165.68711853 525.13012695]
[162.82971191 521.30334473]
[162.34591675 515.64093018]
[165.22720337 509.69030762]
[165.00387573 494.69198608]
[164.78054810 479.69363403]
[164.55722046 464.69531250]
[164.33389282 449.69696045]
[162.99566650 434.75677490]
[160.54994202 419.95751953]
[158.10421753 405.15823364]
[155.65847778 390.35897827]
[153.21275330 375.55969238]
[150.76702881 360.76043701]
[148.32130432 345.96115112]
[145.76547241 331.18051147]
[142.77069092 316.48251343]
[132.40667725 305.78500366]
[136.89529419 290.61389160]
[133.57302856 275.98641968]
[130.25077820 261.35897827]
[114.67664337 260.52737427]
[99.95268250 255.34054565]
[87.27239227 246.21025085]
[77.66606140 233.86828613]
[71.91704559 219.30773926]
[70.49789429 203.70321655]
[73.53153229 188.31594849]
[80.78062439 174.39198303]
[91.66616058 163.06115723]
[105.31369019 155.24551392]
[101.77401733 140.66914368]
[98.23434448 126.09277344]
[94.69467163 111.51639557]
[91.32929993 126.13399506]
[84.34226227 139.40733337]
[74.19699860 150.45602417]
[61.56640625 158.54725647]
[47.28821945 163.14436340]
[32.30946732 163.94244385]
[17.62363052 160.88856506]
[4.20477104 154.18525696]
[-7.05708694 144.27716064]
[-15.41498566 131.82141113]
[-20.31457520 117.64418030]
[-21.43088150 102.68577576]
[-18.68986702 87.93833923]
[-12.27333355 74.38002014]
[-2.60686350 62.91008377]
[9.66839886 54.28929901]
[23.73827934 49.08944702]
[38.66957474 47.65541840]
[53.47194290 50.08232117]
[67.16359711 56.20919037]
[78.83642578 65.62965393]
[87.71620178 77.71888733]
[93.21521759 91.68003082]
[94.55345154 76.73985291]
[95.78042603 61.79011536]
[96.89607239 46.83166122]
[98.01171875 31.87320900]
[85.42916870 23.17685699]
[78.93177032 9.44075012]
[80.17397308 -5.60329580]
[88.72235870 -17.92324066]
[102.19886780 -24.26746941]
[103.31452179 -39.22592163]
[104.43016815 -54.18437576]
[105.54581451 -69.14282990]
[106.43863678 -84.11623383]
[107.10842133 -99.10127258]
[93.73978424 -106.38420105]
[84.89500427 -118.69910431]
[82.28487396 -133.57214355]
[86.37435150 -148.04409790]
[96.30075836 -159.25907898]
[110.05514526 -165.02816772]
[110.72492981 -180.01319885]
[111.39471436 -194.99824524]
[104.28134155 -209.13014221]
[112.57923126 -221.49922180]
[113.24901581 -236.48426819]
[113.91880035 -251.46929932]
[103.53223419 -263.07778931]
[104.42495728 -278.26519775]
[115.55588531 -288.09567261]
[116.22566986 -303.08071899]
[109.11229706 -317.21261597]
[117.41018677 -329.58169556]
[118.07997131 -344.56674194]
[118.74975586 -359.55178833]
[104.51341248 -364.63290405]
[92.40824127 -373.68588257]
[83.51062012 -385.90570068]
[78.61172485 -400.20578003]
[78.14716339 -415.31457520]
[82.15823364 -429.88861084]
[90.28828430 -442.63198853]
[101.81439209 -452.41156006]
[115.71166992 -458.35775757]
[130.74436951 -459.94183350]
[145.57580566 -457.02291870]
[158.88716125 -449.86059570]
[169.49482727 -439.09170532]
[176.45553589 -425.67379761]
[179.15039062 -410.80001831]
[177.33973694 -395.79293823]
[171.18458557 -381.98693848]
[161.23225403 -370.60964966]
[148.36767578 -362.67276001]
[133.73478699 -358.88198853]
[133.06500244 -343.89694214]
[132.39521790 -328.91192627]
[139.55650330 -315.85183716]
[131.21070862 -302.41091919]
[130.54092407 -287.42587280]
[140.75044250 -276.64157104]
[140.28465271 -261.43505859]
[128.90383911 -250.79951477]
[128.23405457 -235.81448364]
[127.56427002 -220.82943726]
[134.72555542 -207.76937866]
[126.37975311 -194.32846069]
[125.70996857 -179.34341431]
[125.04018402 -164.35838318]
[138.22503662 -157.38519287]
[147.11131287 -145.32933044]
[149.89335632 -130.55026245]
[145.96672058 -115.96938324]
[136.05853271 -104.49268341]
[122.09346008 -98.43148804]
[121.42367554 -83.44644928]
[123.92827606 -79.38000488]
[123.90495300 -73.69700623]
[120.50427246 -68.02718353]
[119.38861847 -53.06872559]
[118.27297211 -38.11027527]
[117.15732574 -23.15182114]
[129.54362488 -14.87866116]
[136.16987610 -1.42694426]
[135.16668701 13.63492775]
[126.70354462 26.25523186]
[112.97017670 32.98885727]
[111.85453033 47.94731140]
[110.73887634 62.90576553]
[113.37618256 69.80985260]
[109.49363708 78.07808685]
[108.15540314 93.01827240]
[109.27104950 107.97672272]
[112.81072235 122.55310059]
[116.35039520 137.12947083]
[119.89006805 151.70584106]
[134.33743286 152.16818237]
[148.15992737 156.35490417]
[160.41508484 163.97396851]
[170.26905823 174.49957275]
[177.05329895 187.20837402]
[180.30987549 201.22924805]
[179.82246399 215.60295105]
[175.63064575 229.34777832]
[168.02677917 241.52664185]
[157.53565979 251.31088257]
[144.87823486 258.03671265]
[148.20048523 272.66418457]
[151.52275085 287.29162598]
[162.12440491 299.03536987]
[157.39814758 313.16024780]
[160.94578552 316.98925781]
[162.51319885 321.35922241]
[162.22593689 325.42523193]
[160.52668762 328.51470947]
[165.13140869 336.40359497]
[163.12057495 343.51544189]
[165.56629944 358.31469727]
[168.01202393 373.11398315]
[170.45774841 387.91323853]
[172.90348816 402.71252441]
[175.34921265 417.51177979]
[177.79493713 432.31106567]
[184.55110168 418.91873169]
[197.04383850 410.61624146]
[212.00756836 409.57379150]
[225.53082275 416.06393433]
[234.07864380 428.39010620]
[235.41664124 443.33032227]
[229.19509888 456.97921753]
[217.04028320 465.76901245]
[202.12944031 467.40206909]
[188.36022949 461.45150757]
[179.33222961 449.47363281]
[179.55555725 464.47198486]
[179.77888489 479.47030640]
[180.00221252 494.46865845]
[180.22554016 509.46697998]
[180.67214966 524.46032715]
[181.34193420 539.44537354]
[182.01171875 554.43041992]
[196.06549072 560.38476562]
[206.13754272 571.85284424]
[210.22805786 586.55761719]
[207.52487183 601.57946777]
[198.56471252 613.93579102]
[185.12661743 621.17315674]
[169.87872314 621.85473633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 203]
[6 202]
[7 201]
[10 200]
[11 199]
[12 198]
[13 197]
[14 196]
[15 185]
[16 184]
[17 183]
[18 182]
[19 181]
[20 180]
[21 179]
[22 177]
[23 173]
[25 171]
[26 170]
[27 169]
[37 158]
[38 157]
[39 156]
[40 155]
[63 154]
[64 153]
[65 151]
[66 150]
[67 149]
[72 144]
[73 143]
[74 142]
[75 141]
[76 138]
[77 137]
[83 131]
[84 130]
[85 129]
[87 127]
[88 126]
[89 125]
[92 122]
[93 121]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
