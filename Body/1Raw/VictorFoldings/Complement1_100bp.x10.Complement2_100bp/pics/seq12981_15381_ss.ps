%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[75.57746887 389.50143433]
[72.15798950 374.84222412]
[71.75972748 359.79476929]
[74.39899445 344.97521973]
[79.96771240 330.99041748]
[88.23783875 318.41308594]
[98.87072754 307.75817871]
[111.43096161 299.46206665]
[125.40420532 293.86447144]
[122.73841095 279.10324097]
[112.86239624 267.95364380]
[118.02396393 252.99809265]
[115.35816956 238.23687744]
[111.07597351 232.21321106]
[112.76428223 223.23616028]
[110.31855011 208.43688965]
[100.60962677 197.14147949]
[105.99329376 182.26443481]
[103.54756927 167.46516418]
[101.10183716 152.66589355]
[91.39291382 141.37048340]
[96.77658081 126.49343109]
[94.33084869 111.69416046]
[91.44557953 96.97427368]
[88.12332153 82.34680939]
[77.52166748 70.60306549]
[82.24791718 56.47820282]
[78.92565918 41.85074234]
[75.60339355 27.22328186]
[72.28113556 12.59582138]
[61.67948151 0.85207760]
[66.40573120 -13.27278805]
[52.84692383 -16.71103287]
[42.14336014 -25.61327362]
[36.34740448 -38.19839096]
[36.53837204 -51.98652267]
[42.62199020 -64.28767395]
[53.35992050 -72.72650909]
[50.25580978 -87.40180969]
[47.15169907 -102.07711792]
[44.04758835 -116.75241852]
[34.97909164 -104.80410004]
[20.13730431 -102.63122559]
[8.02427959 -111.47852325]
[5.57890701 -126.27784729]
[14.20200729 -138.55148315]
[28.95387650 -141.26853943]
[41.38344955 -132.87333679]
[39.60098267 -147.76704407]
[37.81851578 -162.66076660]
[36.03604889 -177.55448914]
[34.25358582 -192.44819641]
[18.84358978 -193.61038208]
[3.95843697 -197.74647522]
[-9.83378220 -204.69674683]
[-22.00704956 -214.19410706]
[-32.09748840 -225.87432861]
[-39.72103119 -239.29010010]
[-44.58805084 -253.92808533]
[-46.51434708 -269.22854614]
[-45.42814255 -284.60684204]
[-41.37271881 -299.47564697]
[-34.50473404 -313.26754761]
[-25.08814430 -325.45648193]
[-13.48407173 -335.57797241]
[-0.13694952 -343.24676514]
[14.44249153 -348.17150879]
[12.43847752 -363.03704834]
[10.43446445 -377.90255737]
[8.43045044 -392.76809692]
[6.42643690 -407.63363647]
[4.42242336 -422.49914551]
[-10.58627319 -422.08547974]
[-25.55391121 -423.26947021]
[-40.31089783 -426.03775024]
[-54.69002533 -430.35894775]
[-68.52836609 -436.18411255]
[-81.66912079 -443.44720459]
[-93.96340179 -452.06597900]
[-105.27188873 -461.94271851]
[-115.46646881 -472.96554565]
[-124.43161011 -485.00955200]
[-132.06575012 -497.93829346]
[-138.28236389 -511.60525513]
[-143.01103210 -525.85559082]
[-146.19816589 -540.52777100]
[-147.80766296 -555.45568848]
[-147.82127380 -570.47009277]
[-146.23884583 -585.40081787]
[-143.07832336 -600.07885742]
[-138.37550354 -614.33770752]
[-132.18367004 -628.01593018]
[-124.57299805 -640.95849609]
[-115.62970734 -653.01873779]
[-105.45513916 -664.05999756]
[-94.16457367 -673.95727539]
[-81.88594818 -682.59826660]
[-68.75838470 -689.88519287]
[-54.93062592 -695.73541260]
[-40.55935669 -700.08270264]
[-25.80741501 -702.87774658]
[-10.84194756 -704.08886719]
[4.16747427 -703.70239258]
[19.05078125 -701.72271729]
[33.63933563 -698.17218018]
[47.76783371 -693.09106445]
[61.27619553 -686.53698730]
[74.01135254 -678.58410645]
[85.82901764 -669.32263184]
[96.59527588 -658.85748291]
[106.18814087 -647.30718994]
[114.49892426 -634.80267334]
[121.43344879 -621.48559570]
[126.91314697 -607.50683594]
[130.87593079 -593.02484131]
[133.27688599 -578.20367432]
[134.08882141 -563.21124268]
[133.30253601 -548.21746826]
[130.92694092 -533.39221191]
[126.98894501 -518.90344238]
[121.53317261 -504.91534424]
[114.62144470 -491.58642578]
[106.33207703 -479.06768799]
[96.75898743 -467.50100708]
[86.01065063 -457.01742554]
[74.20885468 -447.73574829]
[61.48731995 -439.76110840]
[47.99019241 -433.18389893]
[33.87040710 -428.07864380]
[19.28795242 -424.50317383]
[21.29196548 -409.63763428]
[23.29597855 -394.77212524]
[25.29999161 -379.90658569]
[27.30400658 -365.04104614]
[29.30801964 -350.17553711]
[43.86339188 -349.40951538]
[58.03218842 -345.97280884]
[71.32852173 -339.98168945]
[83.29612732 -331.64004517]
[93.52403259 -321.23251343]
[101.66066742 -309.11465454]
[107.42594147 -295.70089722]
[110.62089539 -281.45028687]
[111.13455963 -266.85079956]
[108.94782257 -252.40272522]
[104.13410187 -238.60136414]
[96.85693359 -225.92016602]
[87.36435699 -214.79444885]
[75.98050690 -205.60644531]
[63.09453964 -198.67219543]
[49.14730072 -194.23066711]
[50.92976761 -179.33694458]
[52.71223450 -164.44323730]
[54.49469757 -149.54951477]
[56.27716446 -134.65579224]
[58.72289276 -119.85652924]
[61.82700348 -105.18122864]
[64.93111420 -90.50592041]
[68.03522491 -75.83061981]
[83.51620483 -71.19902039]
[94.61292267 -59.32389450]
[98.22748566 -43.38175583]
[93.28098297 -27.70286179]
[81.03319550 -16.59504700]
[91.39721680 -5.89755774]
[86.90859985 9.27356148]
[90.23085785 23.90102196]
[93.55311584 38.52848053]
[96.87537384 53.15594101]
[107.23940277 63.85343170]
[102.75077820 79.02455139]
[106.07303619 93.65200806]
[108.50506592 95.48905945]
[110.32241821 98.25162506]
[111.18100739 101.71374512]
[110.82505798 105.52551270]
[109.13011932 109.24843597]
[111.57585144 124.04770660]
[121.45970917 136.40165710]
[115.90110779 150.22015381]
[118.34683990 165.01942444]
[120.79256439 179.81871033]
[130.67642212 192.17265320]
[125.11782074 205.99116516]
[127.56355286 220.79043579]
[130.11938477 235.57107544]
[132.78518677 250.33230591]
[142.85186768 262.53771973]
[137.49963379 276.43746948]
[140.16542053 291.19866943]
[155.21394348 291.55511475]
[169.88258362 294.93383789]
[183.57069397 301.19647217]
[195.71772766 310.08660889]
[205.82629395 321.24017334]
[213.48243713 334.20040894]
[218.37265015 348.43667603]
[220.29669189 363.36593628]
[219.17575073 378.37686157]
[215.05575562 392.85479736]
[208.10539246 406.20684814]
[198.60929871 417.88629150]
[186.95631409 427.41482544]
[173.62362671 434.40225220]
[159.15719604 438.56246948]
[144.14942932 439.72512817]
[129.21487427 437.84259033]
[114.96509552 432.99197388]
[101.98360443 425.37188721]
[90.80199432 415.29434204]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 190]
[10 189]
[12 187]
[13 186]
[15 185]
[16 184]
[18 182]
[19 181]
[20 180]
[22 178]
[23 177]
[24 172]
[25 171]
[27 169]
[28 168]
[29 167]
[30 166]
[32 164]
[38 159]
[39 158]
[40 157]
[41 156]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
