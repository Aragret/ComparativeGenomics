%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[102.59464264 587.56018066]
[96.70378876 573.70794678]
[93.72229004 558.95349121]
[93.77222443 543.90081787]
[96.85154724 529.16638184]
[102.83417511 515.35363770]
[111.47511292 503.02807617]
[122.42051697 492.69448853]
[135.22218323 484.77603149]
[149.35591125 479.59695435]
[147.13078308 464.76290894]
[144.90567017 449.92886353]
[142.68055725 435.09481812]
[133.14088440 423.65609741]
[138.74543762 408.86087036]
[136.52032471 394.02682495]
[134.29521179 379.19277954]
[121.01676178 372.49792480]
[114.14538574 359.10955811]
[116.50269318 344.06640625]
[127.39173889 333.16986084]
[125.16662598 318.33581543]
[115.62694550 306.89712524]
[121.23151398 292.10186768]
[119.00639343 277.26782227]
[116.78128052 262.43377686]
[101.90737152 260.78564453]
[87.95623779 255.33927917]
[75.88106537 246.46038818]
[66.50853729 234.74935913]
[60.48223495 221.00074768]
[58.21844864 206.14935303]
[59.87742996 191.20660400]
[65.35206604 177.19178772]
[74.27476501 165.06243896]
[86.04212189 155.64889526]
[99.85576630 149.59757996]
[97.63064575 134.76353455]
[88.09097290 123.32482910]
[93.69553375 108.52957916]
[90.70075989 93.83157349]
[86.94445801 79.30951691]
[83.18816376 64.78746033]
[79.43186188 50.26539993]
[75.67556000 35.74333954]
[70.58935547 49.85470200]
[59.59041214 60.05388260]
[45.13592911 64.06236267]
[30.45507050 60.98463058]
[18.82757950 51.50827026]
[12.85106659 37.75031281]
[13.86070061 22.78433228]
[21.63092613 9.95375919]
[34.42585373 2.12497902]
[49.38706589 1.04696095]
[63.17219162 6.96053696]
[72.70159912 18.54461861]
[71.36336517 3.60443449]
[70.02513123 -11.33575058]
[68.68689728 -26.27593613]
[59.74925995 -39.33078766]
[66.32023621 -52.69759750]
[64.98200226 -67.63777924]
[52.80316925 -71.93377686]
[43.18863678 -80.48572540]
[37.54322815 -91.99678040]
[36.67388153 -104.74132538]
[40.67449570 -116.82366180]
[48.91720200 -126.45998383]
[60.15063095 -132.24169922]
[59.25781631 -147.21510315]
[58.36500168 -162.18850708]
[57.47218323 -177.16191101]
[50.63541794 -163.81056213]
[39.25966644 -154.03343201]
[25.03245926 -149.28089905]
[10.06431580 -150.25798035]
[-3.42432833 -156.81971741]
[-13.43251324 -167.99273682]
[-18.47558403 -182.11956787]
[-17.80543137 -197.10458374]
[-11.52146816 -210.72486877]
[-0.55588281 -220.95989990]
[13.46464443 -226.29138184]
[28.46025276 -225.92843628]
[42.20643234 -219.92489624]
[52.66402054 -209.17134094]
[58.28133011 -195.26489258]
[60.50645065 -210.09893799]
[62.73156738 -224.93296814]
[64.95668030 -239.76701355]
[67.18180084 -254.60105896]
[69.40692139 -269.43511963]
[71.63203430 -284.26916504]
[73.63604736 -299.13467407]
[75.41851807 -314.02838135]
[77.20098114 -328.92211914]
[63.09322739 -334.23574829]
[50.66746140 -342.77178955]
[40.64609146 -354.03390503]
[33.61174774 -367.36737061]
[29.97340393 -381.99700928]
[29.94258308 -397.07223511]
[33.52108002 -411.71661377]
[40.50084305 -425.07873535]
[50.47608185 -436.38174438]
[62.86684418 -444.96850586]
[76.95275116 -450.33978271]
[91.91486359 -452.18331909]
[106.88330841 -450.39190674]
[120.98783875 -445.06970215]
[133.40843201 -436.52615356]
[143.42297363 -425.25796509]
[150.44921875 -411.92022705]
[154.07870483 -397.28839111]
[154.10037231 -382.21313477]
[150.51300049 -367.57095337]
[143.52514648 -354.21304321]
[133.54306030 -342.91607666]
[121.14708710 -334.33685303]
[107.05792236 -328.97409058]
[92.09469604 -327.13964844]
[90.31223297 -312.24594116]
[88.52976227 -297.35220337]
[90.72498322 -293.11074829]
[90.27904510 -287.44522095]
[86.46607971 -282.04403687]
[84.24095917 -267.20999146]
[82.01584625 -252.37594604]
[79.79072571 -237.54190063]
[77.56561279 -222.70785522]
[75.34049225 -207.87380981]
[73.11537933 -193.03976440]
[72.44558716 -178.05473328]
[73.33840942 -163.08132935]
[74.23122406 -148.10792542]
[75.12403870 -133.13452148]
[90.79030609 -125.99264526]
[100.73262024 -111.82706451]
[102.13813019 -94.48841858]
[94.52971649 -78.74603271]
[79.92218781 -68.97601318]
[81.26042175 -54.03583145]
[90.10234070 -42.04959869]
[83.62708282 -27.61417007]
[84.96531677 -12.67398453]
[86.30355072 2.26620030]
[87.64178467 17.20638466]
[90.19761658 31.98703957]
[93.95391846 46.50909805]
[97.71022034 61.03115845]
[101.46652222 75.55321503]
[105.22282410 90.07527924]
[112.75959778 77.10620117]
[126.82629395 71.89773560]
[140.99180603 76.83113098]
[148.77984619 89.65089417]
[146.62983704 104.49600983]
[135.52471924 114.57949066]
[120.54161835 115.29129791]
[108.52957916 106.30446625]
[118.22840881 118.80419159]
[112.46469116 132.53842163]
[114.68981171 147.37245178]
[129.67097473 149.10453796]
[143.68237305 154.65124512]
[155.77113342 163.62887573]
[165.11677551 175.42063904]
[171.08694458 189.21899414]
[173.28018188 204.08097839]
[171.55294800 218.99263000]
[166.02891541 232.93814087]
[157.09024048 244.96913147]
[145.35105896 254.26904297]
[131.61532593 260.20867920]
[133.84043884 275.04269409]
[136.06555176 289.87673950]
[145.76438904 302.37649536]
[140.00067139 316.11071777]
[142.22578430 330.94473267]
[155.83264160 338.16690063]
[162.49987793 351.85635376]
[159.85905457 366.67156982]
[149.12925720 376.96765137]
[151.35437012 391.80169678]
[153.57948303 406.63574219]
[163.27832031 419.13546753]
[157.51460266 432.86968994]
[159.73971558 447.70373535]
[161.96482849 462.53778076]
[164.18995667 477.37182617]
[179.22117615 478.17614746]
[193.78273010 481.99011230]
[207.27828979 488.65753174]
[219.15525818 497.90536499]
[228.92726135 509.35494995]
[236.19413757 522.53741455]
[240.65832520 536.91296387]
[242.13700867 551.89288330]
[240.56962585 566.86383057]
[236.02040100 581.21264648]
[228.67558289 594.35186768]
[218.83595276 605.74334717]
[206.90443420 614.92071533]
[193.36961365 621.50811768]
[178.78573608 625.23577881]
[163.75000000 625.95104980]
[148.87812805 623.62469482]
[134.77908325 618.35192871]
[122.03022003 610.34875488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 191]
[11 190]
[12 189]
[13 188]
[15 186]
[16 185]
[17 184]
[21 180]
[22 179]
[24 177]
[25 176]
[26 175]
[37 164]
[38 163]
[40 161]
[41 153]
[42 152]
[43 151]
[44 150]
[45 149]
[57 148]
[58 147]
[59 146]
[60 145]
[62 143]
[63 142]
[70 137]
[71 136]
[72 135]
[73 134]
[88 133]
[89 132]
[90 131]
[91 130]
[92 129]
[93 128]
[94 127]
[95 124]
[96 123]
[97 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
