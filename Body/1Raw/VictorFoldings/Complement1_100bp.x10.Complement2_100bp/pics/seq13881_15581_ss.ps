%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[73.18592072 679.81622314]
[58.71319580 683.81463623]
[43.89300156 686.22485352]
[28.89909363 687.01855469]
[13.90726757 686.18646240]
[-0.90670478 683.73828125]
[-15.36913681 679.70281982]
[-29.31046486 674.12725830]
[-42.56723404 667.07702637]
[-54.98401260 658.63482666]
[-66.41522217 648.89959717]
[-76.72683716 637.98553467]
[-85.79796600 626.02050781]
[-93.52224731 613.14483643]
[-99.80911255 599.50946045]
[-104.58486176 585.27435303]
[-107.79350281 570.60626221]
[-109.39739990 555.67730713]
[-109.37776947 540.66241455]
[-107.73482513 525.73767090]
[-104.48783875 511.07803345]
[-99.67488098 496.85543823]
[-93.35237122 483.23657227]
[-85.59444427 470.38116455]
[-76.49205780 458.43988037]
[-66.15193176 447.55279541]
[-54.69529724 437.84750366]
[-42.25648117 429.43777466]
[-28.98131943 422.42227173]
[-15.02545834 416.88320923]
[-0.55252129 412.88555908]
[14.26780319 410.47613525]
[29.26175308 409.68325806]
[44.25353622 410.51617432]
[46.69926071 395.71688843]
[49.14498901 380.91763306]
[51.59071732 366.11834717]
[54.03644562 351.31909180]
[45.14093781 341.99710083]
[43.20995331 329.06057739]
[49.17006683 317.19940186]
[61.04559708 310.84439087]
[55.69335556 296.94464111]
[65.76004791 284.73922729]
[68.42584229 269.97799683]
[71.09163666 255.21679688]
[73.75743103 240.45556641]
[68.40518951 226.55583191]
[78.47188568 214.35041809]
[81.13768005 199.58920288]
[75.78543091 185.68945312]
[85.85212708 173.48403931]
[80.49988556 159.58430481]
[90.56657410 147.37887573]
[92.01599884 132.44906616]
[92.23932648 117.45073700]
[82.22293854 106.98085785]
[82.43866730 92.49294281]
[92.76233673 82.32593536]
[92.98566437 67.32759857]
[93.20899200 52.32926178]
[80.13112640 44.39725494]
[72.82766724 31.07223320]
[73.17222595 15.98092270]
[80.97216797 3.17401171]
[94.04716492 -3.96110559]
[86.51618958 -17.87494469]
[94.44212341 -30.48560905]
[94.66545105 -45.48394775]
[94.88877869 -60.48228455]
[86.48165894 -70.26406097]
[86.97644043 -82.75160980]
[95.56288910 -91.27214050]
[96.00949860 -106.26549530]
[96.45610046 -121.25884247]
[96.90270996 -136.25219727]
[94.11033630 -142.24504089]
[94.67836761 -147.89962769]
[97.59243774 -151.68344116]
[98.48525238 -166.65684509]
[99.37806702 -181.63024902]
[92.47588348 -195.86648560]
[100.95700836 -208.11065674]
[101.84982300 -223.08407593]
[102.74264526 -238.05747986]
[95.84046173 -252.29371643]
[104.32158661 -264.53790283]
[89.62012482 -267.65634155]
[75.54768372 -272.93118286]
[62.41864777 -280.24459839]
[50.52632141 -289.43319702]
[40.13638306 -300.29168701]
[31.48095322 -312.57751465]
[24.75339127 -326.01617432]
[20.10399818 -340.30746460]
[17.63663864 -355.13208008]
[17.40643883 -370.15887451]
[19.41853714 -385.05215454]
[23.62798500 -399.47912598]
[29.94074249 -413.11755371]
[38.21577835 -425.66275024]
[48.26822662 -436.83441162]
[59.87351227 -446.38296509]
[72.77236938 -454.09512329]
[86.67662811 -459.79855347]
[101.27566528 -463.36587524]
[116.24333191 -464.71734619]
[131.24525452 -463.82284546]
[145.94625854 -460.70230103]
[160.01795959 -455.42544556]
[173.14595032 -448.11016846]
[185.03697205 -438.91986084]
[195.42535400 -428.05990601]
[204.07904053 -415.77285767]
[210.80468750 -402.33322144]
[215.45204163 -388.04129028]
[217.91728210 -373.21630859]
[218.14535522 -358.18948364]
[216.13113403 -343.29650879]
[211.91963196 -328.87011719]
[205.60493469 -315.23257446]
[197.32810974 -302.68856812]
[187.27406311 -291.51834106]
[175.66741943 -281.97143555]
[162.76747131 -274.26113892]
[148.86239624 -268.55966187]
[134.26284790 -264.99444580]
[119.29499054 -263.64508057]
[126.26103210 -250.47982788]
[117.71604919 -237.16465759]
[116.82323456 -222.19125366]
[115.93041229 -207.21784973]
[122.89645386 -194.05261230]
[114.35147095 -180.73744202]
[113.45865631 -165.76402283]
[112.56584167 -150.79061890]
[111.89605713 -135.80558777]
[111.44944763 -120.81223297]
[111.00284576 -105.81888580]
[110.55623627 -90.82553864]
[119.69492340 -75.84383392]
[109.88711548 -60.25895691]
[109.66378784 -45.26062012]
[109.44046021 -30.26228142]
[116.98741150 -17.42122459]
[109.04550171 -3.73777795]
[121.90226746 3.78346777]
[129.31744385 16.81693459]
[129.21252441 31.91181183]
[121.51556396 45.01347733]
[108.20732880 52.55258942]
[107.98400116 67.55092621]
[107.76067352 82.54926300]
[117.77706146 93.01914215]
[117.56133270 107.50705719]
[107.23766327 117.67406464]
[107.01433563 132.67239380]
[115.65574646 120.41165161]
[128.96286011 113.48915863]
[143.96281433 113.45141602]
[157.30458069 120.30686188]
[166.00758362 132.52397156]
[168.12754822 147.37339783]
[163.19087219 161.53776550]
[152.30041504 171.85270691]
[137.88912964 176.01382446]
[123.17654419 173.09153748]
[111.44948578 163.73867798]
[105.32779694 150.04467773]
[110.48936462 165.00024414]
[100.61334229 176.14984131]
[105.77491760 191.10539246]
[95.89889526 202.25498962]
[93.23310089 217.01620483]
[98.39466858 231.97177124]
[88.51865387 243.12136841]
[85.85285950 257.88259888]
[83.18705750 272.64379883]
[80.52126312 287.40502930]
[85.68283081 302.36056519]
[75.80681610 313.51016235]
[86.04276276 327.69625854]
[82.91352844 344.56405640]
[68.83571625 353.76480103]
[66.38998413 368.56408691]
[63.94425964 383.36334229]
[61.49853134 398.16262817]
[59.05280685 412.96188354]
[73.51545715 416.99661255]
[87.45708466 422.57141113]
[100.71422577 429.62091064]
[113.13146210 438.06243896]
[124.56320190 447.79705811]
[134.87539673 458.71060181]
[143.94717407 470.67514038]
[151.67214966 483.55038452]
[157.95974731 497.18539429]
[162.73626709 511.42028809]
[165.94569397 526.08819580]
[167.55039978 541.01708984]
[167.53157043 556.03198242]
[165.88943481 570.95678711]
[162.64323425 585.61657715]
[157.83103943 599.83947754]
[151.50926208 613.45861816]
[143.75202942 626.31445312]
[134.65028381 638.25622559]
[124.31073761 649.14392090]
[112.85462952 658.84979248]
[100.41626740 667.26019287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 188]
[35 187]
[36 186]
[37 185]
[38 184]
[42 181]
[44 179]
[45 178]
[46 177]
[47 176]
[49 174]
[50 173]
[52 171]
[54 169]
[55 157]
[56 156]
[59 153]
[60 152]
[61 151]
[66 146]
[68 144]
[69 143]
[70 142]
[73 140]
[74 139]
[75 138]
[76 137]
[79 136]
[80 135]
[81 134]
[83 132]
[84 131]
[85 130]
[87 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
