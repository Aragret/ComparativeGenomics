%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[85.49771118 485.93759155]
[74.95840454 496.62353516]
[63.56187820 506.39010620]
[51.38806915 515.16876221]
[38.52236938 522.89794922]
[25.05502701 529.52343750]
[11.08050442 534.99877930]
[-3.30317402 539.28552246]
[-17.99511528 542.35363770]
[-32.89226532 544.18164062]
[-47.89012909 544.75659180]
[-62.88350677 544.07458496]
[-77.76722717 542.14031982]
[-92.43689728 538.96740723]
[-106.78960419 534.57806396]
[-120.72468567 529.00311279]
[-134.14437866 522.28161621]
[-146.95457458 514.46081543]
[-159.06541443 505.59542847]
[-170.39192200 495.74777222]
[-180.85467529 484.98684692]
[-190.38027954 473.38818359]
[-198.90191650 461.03308105]
[-206.35980225 448.00823975]
[-212.70164490 434.40502930]
[-217.88293457 420.31881714]
[-221.86734009 405.84848022]
[-224.62692261 391.09548950]
[-226.14231873 376.16329956]
[-226.40289307 361.15667725]
[-225.40682983 346.18087769]
[-223.16110229 331.34094238]
[-219.68147278 316.74099731]
[-214.99234009 302.48342896]
[-209.12658691 288.66821289]
[-202.12539673 275.39230347]
[-194.03782654 262.74880981]
[-184.92065430 250.82643127]
[-174.83779907 239.70875549]
[-163.86000061 229.47378540]
[-152.06425476 220.19332886]
[-139.53330994 211.93246460]
[-126.35504913 204.74916077]
[-112.62191772 198.69377136]
[-98.43024445 193.80877686]
[-83.87958527 190.12847900]
[-69.07198334 187.67864990]
[-54.11132431 186.47648621]
[-39.10253906 186.53044128]
[-24.15090752 187.84010315]
[-9.36130524 190.39630127]
[5.16252851 194.18112183]
[19.31871605 199.16798401]
[33.00796127 205.32194519]
[40.28119278 192.20324707]
[47.55442047 179.08454895]
[46.95876312 164.20185852]
[60.41710281 155.88418579]
[67.69033051 142.76550293]
[74.96356201 129.64680481]
[82.23678589 116.52810669]
[89.51001740 103.40941620]
[74.59144592 104.97023010]
[63.96125793 94.38726807]
[65.45563507 79.46189117]
[77.97297668 71.19653320]
[92.28596497 75.68411255]
[97.84370422 89.61489868]
[106.07250977 77.07349396]
[91.62203217 81.09638977]
[77.52688599 75.96542358]
[69.04421234 63.59432220]
[69.33783722 48.59719467]
[78.29824066 36.56760406]
[92.58342743 31.99228859]
[106.86536407 36.57772827]
[115.81724548 48.61366653]
[116.09990692 63.61211395]
[125.76071930 52.13741684]
[135.42152405 40.66271591]
[145.08233643 29.18801498]
[154.74314880 17.71331406]
[143.92791748 7.31155729]
[133.82380676 -3.78224492]
[124.47496796 -15.51958179]
[115.92230988 -27.84912872]
[108.20322418 -40.71696854]
[101.35145569 -54.06683731]
[95.39697266 -67.84035492]
[90.36581421 -81.97730255]
[86.27997589 -96.41584778]
[83.15732574 -111.09286499]
[81.01152039 -125.94416809]
[79.85194397 -140.90481567]
[79.68366241 -155.90939331]
[80.50741577 -170.89228821]
[82.31960297 -185.78797913]
[85.11228943 -200.53134155]
[88.87327576 -215.05789185]
[93.58610535 -229.30412292]
[99.23018646 -243.20771790]
[105.78082275 -256.70788574]
[113.20937347 -269.74563599]
[121.48335266 -282.26388550]
[130.56658936 -294.20794678]
[140.41935730 -305.52557373]
[150.99858093 -316.16726685]
[162.25799561 -326.08651733]
[174.14834595 -335.23992920]
[186.61767578 -343.58749390]
[199.61143494 -351.09268188]
[213.07279968 -357.72271729]
[226.94291687 -363.44857788]
[241.16114807 -368.24520874]
[255.66529846 -372.09167480]
[270.39196777 -374.97113037]
[285.27673340 -376.87100220]
[300.25451660 -377.78295898]
[315.25982666 -377.70306396]
[330.22702026 -376.63159180]
[345.09072876 -374.57327271]
[359.78585815 -371.53710938]
[374.24822998 -367.53637695]
[388.41455078 -362.58856201]
[402.22290039 -356.71527100]
[415.61288452 -349.94226074]
[428.52593994 -342.29907227]
[440.90563965 -333.81915283]
[452.69784546 -324.53961182]
[463.85095215 -314.50100708]
[474.31622314 -303.74722290]
[484.04788208 -292.32528687]
[493.00335693 -280.28515625]
[501.14352417 -267.67947388]
[508.43280029 -254.56333923]
[514.83923340 -240.99415588]
[520.33489990 -227.03121948]
[524.89575195 -212.73561096]
[528.50177002 -198.16981506]
[531.13726807 -183.39755249]
[532.79064941 -168.48339844]
[533.45477295 -153.49258423]
[533.12664795 -138.49064636]
[531.80780029 -123.54319000]
[529.50390625 -108.71558380]
[526.22509766 -94.07266998]
[521.98571777 -79.67845917]
[516.80426025 -65.59590912]
[510.70339966 -51.88660049]
[503.70980835 -38.61046982]
[495.85409546 -25.82558250]
[487.17059326 -13.58783722]
[477.69726562 -1.95074832]
[467.47555542 9.03479671]
[456.55014038 19.32076263]
[444.96881104 28.86216736]
[432.78219604 37.61729431]
[420.04360962 45.54785156]
[406.80871582 52.61916733]
[393.13540649 58.80031586]
[379.08349609 64.06427002]
[364.71438599 68.38801575]
[350.09094238 71.75263977]
[335.27713013 74.14343262]
[320.33764648 75.54994202]
[305.33792114 75.96601105]
[290.34344482 75.38982391]
[275.41986084 73.82389832]
[260.63238525 71.27508545]
[246.04570007 67.75453186]
[231.72358704 63.27762985]
[217.72866821 57.86395264]
[204.12213135 51.53717422]
[190.96350098 44.32496643]
[178.31028748 36.25885773]
[166.21784973 27.37412453]
[156.55703735 38.84882355]
[146.89622498 50.32352448]
[137.23541260 61.79822540]
[127.57460785 73.27292633]
[118.61391449 85.30229950]
[110.38510132 97.84370422]
[102.62871552 110.68264771]
[95.35548401 123.80133820]
[88.08225250 136.92002869]
[80.80902100 150.03872681]
[73.53579712 163.15742493]
[73.61122894 178.97843933]
[60.67311478 186.35778809]
[53.39988708 199.47647095]
[46.12665558 212.59516907]
[58.59831619 220.94528198]
[70.32750702 230.30970764]
[81.23196411 240.62277222]
[91.23519897 251.81214905]
[100.26702881 263.79931641]
[108.26412201 276.50024414]
[115.17037201 289.82577515]
[120.93733978 303.68249512]
[125.52457428 317.97317505]
[128.89988708 332.59759521]
[131.03962708 347.45318604]
[131.92875671 362.43569946]
[131.56106567 377.44009399]
[129.93911743 392.36108398]
[127.07428741 407.09399414]
[122.98667145 421.53555298]
[117.70494843 435.58438110]
[111.26616669 449.14199829]
[103.71548462 462.11325073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 191]
[55 190]
[56 189]
[58 187]
[59 186]
[60 185]
[61 184]
[62 183]
[68 182]
[69 181]
[78 180]
[79 179]
[80 178]
[81 177]
[82 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
