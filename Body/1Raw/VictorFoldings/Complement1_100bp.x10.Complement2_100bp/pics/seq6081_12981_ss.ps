%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACGUAAACAUUAUUAGAAGAAGUAUCAUUAUGGGUAGUAUUAGCCUCCGAAACCGUUGACUGAUCAAGGGGAUUAUUAGCCACGGGGGCUAUACCGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[-26.70133591 359.26419067]
[-22.26651955 373.61383057]
[-19.62876511 388.39968872]
[-18.82806015 403.39764404]
[-19.87654305 418.38031006]
[-22.75831795 433.12054443]
[-27.42970085 447.39492798]
[-33.81987000 460.98703003]
[-41.83195877 473.69082642]
[-51.34450150 485.31369019]
[-62.21328735 495.67944336]
[-74.27355957 504.63095093]
[-87.34246826 512.03253174]
[-101.22191620 517.77191162]
[-115.70147705 521.76214600]
[-130.56164551 523.94274902]
[-145.57714844 524.28057861]
[-160.52037048 522.77056885]
[-175.16474915 519.43566895]
[-189.28828430 514.32635498]
[-202.67689514 507.52011108]
[-215.12757874 499.12008667]
[-226.45159912 489.25369263]
[-236.47727966 478.07043457]
[-245.05265808 465.73986816]
[-252.04771423 452.44894409]
[-257.35638428 438.39910889]
[-260.89825439 423.80340576]
[-262.61956787 408.88305664]
[-262.49426270 393.86425781]
[-260.52420044 378.97473145]
[-256.73928833 364.44015503]
[-251.19689941 350.48086548]
[-243.98104858 337.30850220]
[-235.20111084 325.12277222]
[-224.99020386 314.10836792]
[-213.50312805 304.43228149]
[-200.91400146 296.24121094]
[-187.41369629 289.65930176]
[-173.20686340 284.78637695]
[-158.50888062 281.69628906]
[-143.54254150 280.43585205]
[-128.53475952 281.02423096]
[-113.71305084 283.45245361]
[-99.30208588 287.68374634]
[-85.52034760 293.65393066]
[-72.57675934 301.27255249]
[-63.43795776 289.37792969]
[-54.29915237 277.48327637]
[-45.16035080 265.58865356]
[-36.02154922 253.69401550]
[-41.15019989 242.69073486]
[-41.11370087 230.47879028]
[-35.85762024 219.37588501]
[-26.32395172 211.51530457]
[-14.28289223 208.43612671]
[-2.00429201 210.78213501]
[7.48460627 199.16487122]
[16.97350502 187.54760742]
[12.38923359 175.00860596]
[14.61727715 161.73532104]
[23.18113327 151.21249390]
[35.92686081 146.25619507]
[49.56404877 148.26069641]
[59.22485733 136.78599548]
[68.88566589 125.31129456]
[78.54647827 113.83659363]
[88.20729065 102.36189270]
[97.69618988 90.74462891]
[107.01107025 78.98738098]
[92.91969299 84.12870026]
[77.95001984 83.17534637]
[64.62470245 76.28797150]
[55.18928909 64.62722778]
[51.23381424 50.15814972]
[53.42484283 35.31903458]
[61.39315033 22.61052895]
[73.79593658 14.17424297]
[88.54311371 11.43183899]
[103.14952087 14.84545898]
[115.15372467 23.83984947]
[122.53280640 36.89929581]
[124.04326630 51.82305145]
[119.42972565 66.09764099]
[130.83219910 56.35167694]
[136.29542542 41.50365829]
[150.99740601 39.11597443]
[162.39987183 29.37000847]
[173.80232239 19.62404251]
[185.20478821 9.87807751]
[196.60725403 0.13211177]
[208.00971985 -9.61385345]
[210.57063293 -15.70920277]
[215.13951111 -19.08889580]
[219.89982605 -19.47409248]
[231.58741760 -28.87624359]
[243.27499390 -38.27839279]
[254.96257019 -47.68054581]
[266.65014648 -57.08269501]
[278.33773804 -66.48484802]
[269.98431396 -78.95519257]
[262.74951172 -92.10613251]
[256.68844604 -105.83759308]
[251.84725952 -120.04505920]
[248.26274109 -134.62040710]
[245.96220398 -149.45269775]
[244.96315002 -164.42904663]
[245.27319336 -179.43548584]
[246.88996887 -194.35780334]
[249.80114746 -209.08241272]
[253.98461914 -223.49726868]
[259.40850830 -237.49266052]
[266.03155518 -250.96205139]
[273.80331421 -263.80294800]
[282.66470337 -275.91763306]
[292.54821777 -287.21389771]
[303.37869263 -297.60574341]
[315.07363892 -307.01409912]
[327.54409790 -315.36737061]
[340.69515991 -322.60195923]
[354.42669678 -328.66281128]
[368.63421631 -333.50381470]
[383.20962524 -337.08813477]
[398.04196167 -339.38845825]
[413.01831055 -340.38729858]
[428.02474976 -340.07705688]
[442.94705200 -338.46008301]
[457.67163086 -335.54867554]
[472.08642578 -331.36502075]
[486.08172607 -325.94091797]
[499.55102539 -319.31768799]
[512.39184570 -311.54574585]
[524.50634766 -302.68420410]
[535.80249023 -292.80050659]
[546.19415283 -281.96990967]
[555.60235596 -270.27481079]
[563.95544434 -257.80422974]
[571.18988037 -244.65309143]
[577.25054932 -230.92146301]
[582.09136963 -216.71385193]
[585.67547607 -202.13841248]
[587.97558594 -187.30606079]
[588.97424316 -172.32966614]
[588.66375732 -157.32324219]
[587.04656982 -142.40097046]
[584.13494873 -127.67643738]
[579.95111084 -113.26170349]
[574.52679443 -99.26647186]
[567.90338135 -85.79725647]
[560.13128662 -72.95657349]
[551.26953125 -60.84214401]
[541.38568115 -49.54617310]
[530.55493164 -39.15462494]
[518.85974121 -29.74659538]
[506.38903809 -21.39368057]
[493.23779297 -14.15945435]
[479.50607300 -8.09897327]
[465.29840088 -3.25836325]
[450.72290039 0.32553568]
[435.89050293 2.62544703]
[420.91412354 3.62386727]
[405.90768433 3.31319714]
[390.98544312 1.69580126]
[376.26095581 -1.21601069]
[361.84628296 -5.40007782]
[347.85110474 -10.82455635]
[334.38198853 -17.44816208]
[321.54141235 -25.22048378]
[309.42712402 -34.08236694]
[298.13128662 -43.96636963]
[287.73989868 -54.79726791]
[276.05230713 -45.39511490]
[264.36471558 -35.99296570]
[252.67713928 -26.59081268]
[240.98956299 -17.18866158]
[229.30198669 -7.78651094]
[217.75567627 1.78860867]
[206.35322571 11.53457451]
[194.95075989 21.28054047]
[183.54829407 31.02650642]
[172.14582825 40.77247238]
[160.74336243 50.51843643]
[156.09571838 64.66935730]
[140.57815552 67.75414276]
[129.17568970 77.50010681]
[118.76831818 88.30226135]
[109.45343781 100.05951691]
[108.86208344 105.27144623]
[105.39266968 109.78105164]
[99.68199158 112.02270508]
[90.02117920 123.49740601]
[80.36036682 134.97210693]
[70.69955444 146.44680786]
[61.03874588 157.92150879]
[65.32654572 174.28337097]
[59.07902908 189.82267761]
[44.94212723 198.48927307]
[28.59076881 197.03651428]
[19.10186958 208.65377808]
[9.61297131 220.27104187]
[14.75260544 237.65901184]
[8.48073769 254.50369263]
[-6.51446342 264.12631226]
[-24.12691689 262.83282471]
[-33.26572037 274.72744751]
[-42.40452194 286.62207031]
[-51.54332352 298.51672363]
[-60.68212509 310.41134644]
[-49.98614883 320.95532227]
[-40.66700745 332.73385620]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 208]
[48 207]
[49 206]
[50 205]
[51 204]
[57 200]
[58 199]
[59 198]
[64 194]
[65 193]
[66 192]
[67 191]
[68 190]
[69 187]
[70 186]
[84 185]
[85 184]
[87 182]
[88 181]
[89 180]
[90 179]
[91 178]
[92 177]
[95 176]
[96 175]
[97 174]
[98 173]
[99 172]
[100 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
