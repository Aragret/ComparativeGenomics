%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[87.80299377 388.10870361]
[85.63102722 402.98791504]
[80.97554779 417.28598022]
[73.97050476 430.59149170]
[64.81743622 442.52169800]
[53.77970123 452.73327637]
[41.17487335 460.93243408]
[27.36562347 466.88330078]
[12.74926758 470.41461182]
[-2.25365067 471.42477417]
[-17.21146774 469.88473511]
[-31.69381905 465.83880615]
[-45.28401566 459.40341187]
[-57.59104156 450.76367188]
[-68.26080322 440.16818237]
[-76.98630524 427.92181396]
[-83.51649475 414.37689209]
[-87.66349030 399.92315674]
[-89.30797577 384.97647095]
[-88.40263367 369.96685791]
[-84.97351837 355.32620239]
[-79.11927795 341.47570801]
[-71.00836182 328.81390381]
[-60.87413406 317.70510864]
[-49.00817871 308.46893311]
[-35.75189972 301.37109375]
[-21.48671150 296.61584473]
[-6.62304688 294.33999634]
[8.41143513 294.60903931]
[23.18416214 297.41519165]
[28.43087959 283.36273193]
[33.67759705 269.31027222]
[38.92431641 255.25778198]
[44.17103577 241.20532227]
[49.31299210 227.11418152]
[54.34991074 212.98513794]
[59.38682556 198.85610962]
[64.42374420 184.72708130]
[69.24974060 170.52462769]
[65.80249786 156.03443909]
[77.40959930 145.28335571]
[82.02360535 131.01062012]
[78.57636261 116.52042389]
[90.18346405 105.76934814]
[77.70262146 114.08971405]
[62.70690536 114.44805145]
[49.84289551 106.73330688]
[43.09664536 93.33599091]
[44.55855942 78.40740204]
[53.77564240 66.57331848]
[67.89188385 61.50067902]
[82.53321075 64.76127625]
[93.16284943 75.34479523]
[96.48707581 89.97206116]
[102.96657562 76.44371796]
[109.44606781 62.91536713]
[115.92556763 49.38702393]
[122.40505981 35.85867691]
[117.38851166 21.11174583]
[124.15235901 7.48438263]
[138.24221802 2.79274988]
[144.72171021 -10.73559570]
[151.20121765 -24.26394081]
[157.68070984 -37.79228592]
[164.16020203 -51.32063293]
[169.09179688 -65.48677063]
[172.41406250 -80.11422729]
[175.73631287 -94.74169159]
[179.05857849 -109.36914825]
[182.38082886 -123.99660492]
[180.79333496 -130.41465759]
[182.43843079 -135.85438538]
[186.02590942 -139.00701904]
[189.78221130 -153.52908325]
[193.53851318 -168.05114746]
[181.96640015 -177.94293213]
[175.86152649 -191.82160950]
[176.38574219 -206.91284180]
[183.38153076 -220.22525024]
[195.41389465 -229.14328003]
[210.06440735 -231.94114685]
[213.82070923 -246.46321106]
[217.57701111 -260.98526001]
[221.33331299 -275.50732422]
[225.08961487 -290.02938843]
[228.73770142 -304.57901001]
[232.27737427 -319.15536499]
[235.81704712 -333.73175049]
[221.75584412 -339.00811768]
[208.43318176 -345.94094849]
[196.04333496 -354.42910767]
[184.76699829 -364.34887695]
[174.76860046 -375.55554199]
[166.19395447 -387.88571167]
[159.16810608 -401.15954590]
[153.79350281 -415.18350220]
[150.14852905 -429.75302124]
[148.28634644 -444.65570068]
[148.23410034 -459.67416382]
[149.99253845 -474.58944702]
[153.53605652 -489.18399048]
[158.81294250 -503.24499512]
[165.74626160 -516.56738281]
[174.23490906 -528.95690918]
[184.15509033 -540.23291016]
[195.36212158 -550.23089600]
[207.69261169 -558.80505371]
[220.96670532 -565.83038330]
[234.99084473 -571.20446777]
[249.56053162 -574.84893799]
[264.46325684 -576.71057129]
[279.48175049 -576.76220703]
[294.39694214 -575.00323486]
[308.99136353 -571.45916748]
[323.05218506 -566.18176270]
[336.37432861 -559.24792480]
[348.76351929 -550.75885010]
[360.03912354 -540.83825684]
[370.03668213 -529.63079834]
[378.61041260 -517.29998779]
[385.63525391 -504.02566528]
[391.00881958 -490.00131226]
[394.65270996 -475.43148804]
[396.51376343 -460.52868652]
[396.56491089 -445.51019287]
[394.80532837 -430.59506226]
[391.26074219 -416.00079346]
[385.98278809 -401.94018555]
[379.04846191 -388.61828613]
[370.55889893 -376.22940063]
[360.63787842 -364.95416260]
[349.43008423 -354.95703125]
[337.09896851 -346.38375854]
[323.82434082 -339.35940552]
[309.79980469 -333.98638916]
[295.22985840 -330.34304810]
[280.32696533 -328.48251343]
[265.30850220 -328.43194580]
[250.39341736 -330.19207764]
[246.85374451 -315.61569214]
[243.31407166 -301.03933716]
[244.79039001 -293.79763794]
[239.61166382 -286.27307129]
[235.85536194 -271.75103760]
[232.09907532 -257.22897339]
[228.34277344 -242.70690918]
[224.58647156 -228.18484497]
[236.04287720 -218.63412476]
[242.24194336 -205.00030518]
[241.90536499 -189.96542358]
[235.04637146 -176.51275635]
[222.97766113 -167.33489990]
[208.06056213 -164.29484558]
[204.30427551 -149.77278137]
[200.54797363 -135.25071716]
[197.00830078 -120.67434692]
[193.68603516 -106.04689026]
[190.36376953 -91.41942596]
[187.04151917 -76.79196930]
[183.71925354 -62.16450882]
[193.84481812 -73.23126221]
[207.25186157 -79.95815277]
[222.17646790 -81.46014404]
[236.65505981 -77.53961182]
[248.78271484 -68.71237946]
[256.96383667 -56.13982010]
[260.12203979 -41.47606659]
[257.84185791 -26.65039253]
[250.42323303 -13.61336422]
[238.84223938 -4.08023167]
[224.62255859 0.69475919]
[209.63502502 0.08337592]
[195.85150146 -5.83394337]
[185.08546448 -16.27867317]
[178.75335693 -29.87663078]
[177.68855286 -44.84113693]
[171.20906067 -31.31279182]
[164.72955322 -17.78444481]
[158.25006104 -4.25609970]
[151.77056885 9.27224541]
[156.94664001 23.19143486]
[150.56822205 37.00340271]
[135.93341064 42.33817291]
[129.45391846 55.86651993]
[122.97441864 69.39486694]
[116.49491882 82.92321014]
[110.01542664 96.45155334]
[104.45619965 110.38335419]
[107.57341766 125.89443207]
[96.29634094 135.62463379]
[91.68233490 149.89736938]
[94.79955292 165.40844727]
[83.52247620 175.13864136]
[84.53104401 181.67272949]
[82.40720367 186.94400024]
[78.55277252 189.76400757]
[73.51585388 203.89303589]
[68.47894287 218.02206421]
[63.44202423 232.15109253]
[63.50805664 241.28527832]
[58.22350693 246.45202637]
[52.97678757 260.50451660]
[47.73006821 274.55697632]
[42.48334885 288.60943604]
[37.23663330 302.66192627]
[50.23364639 310.22402954]
[61.76559830 319.87402344]
[71.50068665 331.33419800]
[79.15882111 344.27487183]
[84.51965332 358.32369995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 205]
[31 204]
[32 203]
[33 202]
[34 201]
[35 199]
[36 198]
[37 197]
[38 196]
[39 193]
[41 191]
[42 190]
[44 188]
[54 187]
[55 186]
[56 185]
[57 184]
[58 183]
[61 180]
[62 179]
[63 178]
[64 177]
[65 176]
[66 160]
[67 159]
[68 158]
[69 157]
[70 156]
[73 155]
[74 154]
[75 153]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[86 141]
[87 140]
[88 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
