%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[154.54791260 428.66110229]
[165.44248962 418.24935913]
[178.44482422 410.63122559]
[174.04382324 396.29135132]
[169.64283752 381.95150757]
[165.24183655 367.61166382]
[160.84083557 353.27182007]
[156.43983459 338.93197632]
[152.71516418 335.94268799]
[150.82882690 330.58181763]
[152.12814331 324.09930420]
[148.15605164 309.63476562]
[144.18395996 295.17025757]
[140.21186829 280.70571899]
[129.38050842 270.48168945]
[133.18722534 255.12525940]
[129.21513367 240.66073608]
[125.24303436 226.19621277]
[121.27093506 211.73168945]
[116.46841431 206.11407471]
[117.34909058 197.02220154]
[113.59279633 182.50013733]
[109.83649445 167.97808838]
[106.08019257 153.45602417]
[102.32389069 138.93395996]
[98.56758881 124.41190338]
[94.81128693 109.88984680]
[90.94698334 95.39615631]
[86.97489166 80.93163300]
[83.00279236 66.46710968]
[76.72543335 52.84379196]
[68.31081390 40.42629623]
[59.89619446 28.00880051]
[51.48157501 15.59130383]
[43.06695557 3.17380857]
[34.65233994 -9.24368668]
[20.50559998 -16.32749748]
[19.77111626 -31.20398140]
[13.99911022 -34.42818451]
[11.14960480 -39.34523010]
[11.29727936 -44.11882782]
[3.25610614 -56.78135300]
[-4.78506660 -69.44387817]
[-12.92028236 -82.04618835]
[-21.14908981 -94.58759308]
[-29.37789917 -107.12899017]
[-37.60670471 -119.67038727]
[-50.76910782 -112.45989227]
[-64.46278381 -106.31795502]
[-78.60115051 -101.28340149]
[-93.09481812 -97.38806915]
[-107.85215759 -94.65658569]
[-122.77986145 -93.10621643]
[-137.78355408 -92.74676514]
[-152.76838684 -93.58049774]
[-167.63960266 -95.60215759]
[-182.30317688 -98.79895020]
[-196.66641235 -103.15067291]
[-210.63850403 -108.62980652]
[-224.13110352 -115.20170593]
[-237.05889893 -122.82483673]
[-249.34017944 -131.45098877]
[-260.89727783 -141.02561951]
[-271.65710449 -151.48820496]
[-281.55169678 -162.77259827]
[-290.51843262 -174.80744934]
[-298.50064087 -187.51667786]
[-305.44787598 -200.81991577]
[-311.31619263 -214.63305664]
[-316.06848145 -228.86877441]
[-319.67474365 -243.43705750]
[-322.11212158 -258.24581909]
[-323.36523438 -273.20141602]
[-323.42614746 -288.20928955]
[-322.29446411 -303.17456055]
[-319.97738647 -318.00262451]
[-316.48953247 -332.59970093]
[-311.85293579 -346.87353516]
[-306.09695435 -360.73385620]
[-299.25793457 -374.09304810]
[-291.37915039 -386.86663818]
[-282.51037598 -398.97387695]
[-272.70773315 -410.33822632]
[-262.03317261 -420.88781738]
[-250.55418396 -430.55593872]
[-238.34333801 -439.28152466]
[-225.47784424 -447.00933838]
[-212.03904724 -453.69055176]
[-198.11189270 -459.28292847]
[-183.78445435 -463.75109863]
[-169.14730835 -467.06680298]
[-154.29299927 -469.20910645]
[-139.31542969 -470.16445923]
[-124.30931091 -469.92681885]
[-109.36951447 -468.49768066]
[-94.59048462 -465.88607788]
[-80.06567383 -462.10852051]
[-65.88690186 -457.18890381]
[-52.14382553 -451.15832520]
[-38.92332458 -444.05490112]
[-26.30898857 -435.92358398]
[-14.38056755 -426.81573486]
[-3.21348071 -416.78894043]
[7.12167072 -405.90664673]
[16.55954361 -394.23757935]
[25.04046631 -381.85559082]
[32.51082230 -368.83889771]
[38.92337418 -355.26986694]
[44.23758698 -341.23422241]
[48.41986084 -326.82070923]
[51.44374847 -312.12051392]
[53.29013824 -297.22653198]
[53.94734955 -282.23291016]
[53.41123199 -267.23449707]
[51.68517685 -252.32608032]
[48.78009033 -237.60192871]
[44.71434402 -223.15513611]
[39.51364517 -209.07704163]
[33.21087265 -195.45664978]
[25.84587097 -182.38008118]
[17.46520996 -169.92999268]
[8.12187386 -158.18510437]
[-2.12506533 -147.21969604]
[-13.21082115 -137.10307312]
[-25.06530571 -127.89920044]
[-16.83649826 -115.35779572]
[-8.60768986 -102.81639862]
[-0.37888229 -90.27499390]
[5.91877365 -86.40701294]
[7.87745810 -77.48504639]
[15.91863155 -64.82252502]
[23.95980453 -52.15999985]
[32.18861008 -39.61859894]
[45.73348236 -33.42297363]
[47.06983185 -17.65830612]
[55.48445129 -5.24080992]
[63.89907074 7.17668533]
[72.31369019 19.59418106]
[80.72830963 32.01167679]
[89.14292908 44.42917252]
[87.18275452 29.55779839]
[89.08566284 14.67899036]
[94.72544098 0.77960491]
[103.72801971 -11.21846199]
[115.49628448 -20.51942253]
[129.24969482 -26.50637436]
[144.07604980 -28.78222847]
[158.99194336 -27.19603348]
[173.00807190 -21.85299492]
[185.19479370 -13.10749912]
[194.74382019 -1.53960299]
[201.02177429 12.08343697]
[203.61228943 26.85805321]
[202.34352112 41.80429840]
[197.29963684 55.93083954]
[188.81517029 68.30072021]
[177.45288086 78.09348297]
[163.96636963 84.65961456]
[149.25016785 87.56360626]
[134.28031921 86.61284637]
[120.04975128 81.87039185]
[107.50231171 73.65079498]
[97.46731567 62.49501038]
[101.43941498 76.95953369]
[105.41150665 91.42405701]
[110.41312408 97.74516296]
[109.33335114 106.13354492]
[113.08965302 120.65560913]
[116.84594727 135.17765808]
[120.60224915 149.69972229]
[124.35855103 164.22178650]
[128.11485291 178.74385071]
[131.87115479 193.26589966]
[135.73545837 207.75959778]
[139.70755005 222.22412109]
[143.67965698 236.68864441]
[147.65174866 251.15316772]
[158.76721191 262.41180420]
[154.67639160 276.73361206]
[158.64848328 291.19815063]
[162.62057495 305.66265869]
[166.59266663 320.12719727]
[170.77967834 334.53097534]
[175.18067932 348.87081909]
[179.58168030 363.21066284]
[183.98268127 377.55050659]
[188.38368225 391.89038086]
[192.78466797 406.23022461]
[207.82202148 405.24276733]
[222.68164062 407.75039673]
[236.56219482 413.61785889]
[248.71511841 422.52871704]
[258.48498535 434.00241089]
[265.34497070 447.42022705]
[268.92510986 462.05850220]
[269.03228760 477.12786865]
[265.66079712 491.81558228]
[258.99240112 505.32962036]
[249.38671875 516.94116211]
[237.36180115 526.02404785]
[223.56613159 532.08831787]
[208.74368286 534.80712891]
[193.69381714 534.03369141]
[179.22814941 529.80981445]
[166.12680054 522.36328125]
[155.09629822 512.09558105]
[146.73152161 499.56057739]
[141.48355103 485.43414307]
[139.63543701 470.47817993]
[141.28680420 455.49920654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 188]
[4 187]
[5 186]
[6 185]
[7 184]
[8 183]
[11 182]
[12 181]
[13 180]
[14 179]
[16 177]
[17 176]
[18 175]
[19 174]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[26 168]
[27 167]
[28 165]
[29 164]
[30 163]
[31 140]
[32 139]
[33 138]
[34 137]
[35 136]
[36 135]
[38 133]
[41 132]
[42 131]
[43 130]
[44 128]
[45 127]
[46 126]
[47 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
