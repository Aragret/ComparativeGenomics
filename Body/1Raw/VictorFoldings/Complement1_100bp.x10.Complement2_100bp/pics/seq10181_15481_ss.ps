%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[125.75321198 360.86453247]
[121.58990479 346.44732666]
[118.45395660 331.77236938]
[116.36097717 316.91275024]
[115.32139587 301.94250488]
[115.34039307 286.93621826]
[116.41788483 271.96865845]
[118.54848480 257.11437988]
[121.72158813 242.44738770]
[125.92139435 228.04077148]
[131.12696838 213.96629333]
[137.31236267 200.29406738]
[144.44679260 187.09222412]
[152.49470520 174.42651367]
[161.41600037 162.36004639]
[150.01353455 152.61408997]
[138.61106873 142.86811829]
[127.20860291 133.12216187]
[115.80614471 123.37619019]
[104.40367889 113.63022614]
[90.69329071 110.88854980]
[85.85035706 97.77223969]
[74.44789124 88.02627563]
[63.04542923 78.28030396]
[51.57072830 68.61949921]
[40.02442551 59.04437637]
[28.47812653 49.46925735]
[18.18659973 60.38882828]
[7.22323132 70.63368225]
[-4.36783600 80.16257477]
[-16.53992844 88.93711853]
[-29.24403191 96.92199707]
[-42.42899323 104.08505249]
[-56.04171753 110.39743805]
[-70.02738953 115.83374786]
[-84.32970428 120.37207794]
[-98.89105988 123.99415588]
[-113.65282440 126.68540192]
[-128.55555725 128.43498230]
[-143.53926086 129.23583984]
[-158.54357910 129.08476257]
[-173.50810242 127.98234558]
[-188.37258911 125.93304443]
[-203.07717896 122.94509888]
[-217.56263733 119.03054047]
[-231.77066040 114.20513916]
[-245.64404297 108.48831940]
[-259.12689209 101.90310669]
[-272.16494751 94.47601318]
[-284.70568848 86.23693848]
[-296.69863892 77.21907043]
[-308.09548950 67.45871735]
[-318.85034180 56.99518204]
[-328.91989136 45.87059402]
[-338.26361084 34.12974930]
[-346.84387207 21.81992722]
[-354.62609863 8.99069214]
[-361.57901001 -4.30629492]
[-367.67453003 -18.01749229]
[-372.88818359 -32.08768845]
[-377.19894409 -46.46022415]
[-380.58944702 -61.07723236]
[-383.04608154 -75.87985229]
[-384.55889893 -90.80847931]
[-385.12185669 -105.80300140]
[-384.73266602 -120.80303192]
[-383.39288330 -135.74818420]
[-381.10791016 -150.57827759]
[-377.88696289 -165.23358154]
[-373.74298096 -179.65509033]
[-368.69268799 -193.78474426]
[-362.75640869 -207.56562805]
[-355.95803833 -220.94227600]
[-348.32492065 -233.86080933]
[-339.88787842 -246.26921082]
[-330.68078613 -258.11752319]
[-320.74078369 -269.35800171]
[-310.10787964 -279.94543457]
[-298.82485962 -289.83715820]
[-286.93719482 -298.99337769]
[-274.49273682 -307.37716675]
[-261.54159546 -314.95480347]
[-248.13594055 -321.69577026]
[-234.32972717 -327.57293701]
[-220.17855835 -332.56262207]
[-205.73941040 -336.64471436]
[-191.07043457 -339.80282593]
[-176.23068237 -342.02416992]
[-161.27993774 -343.29989624]
[-146.27836609 -343.62478638]
[-131.28639221 -342.99755859]
[-116.36439514 -341.42074585]
[-101.57244110 -338.90069580]
[-86.97010803 -335.44754028]
[-72.61618042 -331.07519531]
[-58.56846237 -325.80130005]
[-44.88352203 -319.64703369]
[-31.61646271 -312.63720703]
[-18.82070732 -304.80004883]
[-6.54778051 -296.16708374]
[5.15290022 -286.77313232]
[16.23421860 -276.65597534]
[26.65155602 -265.85635376]
[36.36296463 -254.41777039]
[45.32933426 -242.38629150]
[53.51456833 -229.81033325]
[60.88570404 -216.74057007]
[67.41306305 -203.22959900]
[73.07035065 -189.33184814]
[77.83480072 -175.10327148]
[81.68722534 -160.60115051]
[84.61210632 -145.88389587]
[86.59767151 -131.01075745]
[87.63591766 -116.04164124]
[87.72267914 -101.03681183]
[86.85758972 -86.05668640]
[85.04414368 -71.16159058]
[82.28963470 -56.41149521]
[78.60516357 -41.86580276]
[74.00556946 -27.58307838]
[68.50935364 -13.62083626]
[62.13867188 -0.03529700]
[54.91915894 13.11883450]
[46.87989426 25.78859138]
[38.05324554 37.92295456]
[49.59954834 47.49807739]
[61.14584732 57.07319641]
[68.30120850 58.92322159]
[72.79139709 66.87784576]
[84.19385529 76.62380981]
[95.59632111 86.36977386]
[109.30670929 89.11145020]
[114.14964294 102.22776031]
[125.55210876 111.97372437]
[136.95457458 121.71969604]
[148.35704041 131.46565247]
[159.75949097 141.21162415]
[171.16195679 150.95759583]
[181.69223022 140.26635742]
[192.95042419 130.34455872]
[204.88044739 121.24163055]
[217.42286682 113.00289917]
[230.51519775 105.66943359]
[244.09220886 99.27774811]
[258.08627319 93.85970306]
[272.42764282 89.44229126]
[287.04492188 86.04750824]
[301.86523438 83.69226837]
[316.81475830 82.38832092]
[331.81906128 82.14214325]
[346.80331421 82.95497131]
[361.69293213 84.82275391]
[376.41366577 87.73619080]
[390.89227295 91.68075562]
[405.05651855 96.63681030]
[418.83590698 102.57965088]
[432.16177368 109.47968292]
[444.96771240 117.30252075]
[457.18994141 126.00918579]
[468.76754761 135.55632019]
[479.64288330 145.89634705]
[489.76174927 156.97775269]
[499.07373047 168.74533081]
[507.53244019 181.14045715]
[515.09570312 194.10137939]
[521.72595215 207.56352234]
[527.39001465 221.45982361]
[532.05975342 235.72105408]
[535.71185303 250.27615356]
[538.32818604 265.05261230]
[539.89562988 279.97683716]
[540.40649414 294.97442627]
[539.85809326 309.97070312]
[538.25329590 324.89093018]
[535.59997559 339.66079712]
[531.91143799 354.20672607]
[527.20605469 368.45620728]
[521.50720215 382.33828735]
[514.84338379 395.78381348]
[507.24765015 408.72576904]
[498.75793457 421.09967041]
[489.41653442 432.84390259]
[479.26998901 443.89996338]
[468.36880493 454.21273804]
[456.76733398 463.73086548]
[444.52334595 472.40692139]
[431.69787598 480.19769287]
[418.35479736 487.06433105]
[404.56057739 492.97265625]
[390.38394165 497.89324951]
[375.89553833 501.80157471]
[361.16751099 504.67816162]
[346.27328491 506.50866699]
[331.28704834 507.28399658]
[316.28341675 507.00027466]
[301.33718872 505.65890503]
[286.52282715 503.26660156]
[271.91409302 499.83523560]
[257.58383179 495.38192749]
[243.60336304 489.92889404]
[230.04238892 483.50323486]
[216.96844482 476.13702393]
[204.44668579 467.86694336]
[192.53948975 458.73419189]
[181.30615234 448.78424072]
[170.80267334 438.06668091]
[161.08137512 426.63491821]
[152.19067383 414.54589844]
[144.17486572 401.85986328]
[137.07388306 388.63998413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[22 131]
[23 130]
[24 129]
[25 127]
[26 126]
[27 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
