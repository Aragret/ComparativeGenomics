%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[150.32453918 567.48919678]
[149.87792969 552.49584961]
[149.43133545 537.50250244]
[148.98472595 522.50915527]
[148.53811646 507.51583862]
[148.09150696 492.52246094]
[147.64491272 477.52911377]
[146.97512817 462.54409790]
[146.08230591 447.57067871]
[145.18948364 432.59725952]
[129.70907593 420.77056885]
[127.88935852 401.06796265]
[141.35076904 386.15252686]
[139.79023743 371.23391724]
[138.22972107 356.31533813]
[136.66920471 341.39672852]
[135.10867310 326.47811890]
[133.54815674 311.55950928]
[131.98762512 296.64089966]
[129.76251221 281.80685425]
[126.87723541 267.08697510]
[123.99196625 252.36708069]
[121.10669708 237.64718628]
[118.22142029 222.92729187]
[115.22664642 208.22929382]
[112.12253571 193.55398560]
[109.01842499 178.87869263]
[98.81481934 168.02807617]
[103.52881622 152.92547607]
[100.42471313 138.25016785]
[97.32060242 123.57486725]
[94.21649170 108.89956665]
[90.24439240 94.43504333]
[85.41839600 80.23258209]
[80.59239960 66.03012848]
[75.76640320 51.82767487]
[71.05423737 47.19010544]
[69.60852051 41.69402313]
[71.01499939 37.12994003]
[66.61399841 22.79009438]
[62.21300125 8.45024681]
[57.81200409 -5.88960028]
[53.19799423 -20.16233444]
[48.37199783 -34.36478806]
[43.54600143 -48.56724548]
[38.72000122 -62.76969910]
[33.47328568 -76.82217407]
[27.81049728 -90.71219635]
[22.14771080 -104.60222626]
[16.48492432 -118.49225616]
[4.11034203 -128.35026550]
[6.47030783 -143.05671692]
[0.80752122 -156.94674683]
[-4.85526514 -170.83676147]
[-17.22984886 -180.69477844]
[-14.86988258 -195.40122986]
[-20.53266907 -209.29125977]
[-26.19545555 -223.18128967]
[-27.31365013 -208.22302246]
[-32.06824112 -193.99650574]
[-40.16848373 -181.37167358]
[-51.11904907 -171.12057495]
[-64.25029755 -163.87004089]
[-78.75926208 -160.06346130]
[-93.75869751 -159.93359375]
[-108.33139038 -163.48837280]
[-121.58621979 -170.51045227]
[-132.71264648 -180.57041931]
[-141.03027344 -193.05308533]
[-146.03048706 -207.19514465]
[-147.40751648 -222.13180542]
[-145.07714844 -236.94967651]
[-139.18191528 -250.74264526]
[-130.08227539 -262.66726685]
[-118.33470154 -271.99435425]
[-104.65754700 -278.15353394]
[-89.88718414 -280.76818848]
[-74.92682648 -279.67840576]
[-60.69129562 -274.95086670]
[-48.05110931 -266.87463379]
[-37.77922058 -255.94355774]
[-30.50374222 -242.82606506]
[-31.17352676 -257.81109619]
[-31.84331131 -272.79614258]
[-32.51309586 -287.78118896]
[-33.18288040 -302.76623535]
[-48.10253906 -304.64022827]
[-62.49083710 -309.00885010]
[-75.93379211 -315.74642944]
[-88.04462433 -324.65908813]
[-98.47488403 -335.49041748]
[-106.92446899 -347.92877197]
[-113.15026855 -361.61627197]
[-116.97315979 -376.15908813]
[-118.28313446 -391.13879395]
[-117.04251862 -406.12442017]
[-113.28700256 -420.68478394]
[-107.12463379 -434.40093994]
[-98.73272705 -446.87829590]
[-88.35272217 -457.75778198]
[-76.28327942 -466.72644043]
[-62.87166595 -473.52618408]
[-48.50374603 -477.96136475]
[-33.59292603 -479.90441895]
[-18.56821442 -479.29940796]
[-3.86190295 -476.16372681]
[10.10287762 -470.58761597]
[22.92433357 -462.73153687]
[34.23356628 -452.82147217]
[43.70518494 -441.14257812]
[51.06667328 -428.03088379]
[56.10622787 -413.86364746]
[58.67884827 -399.04846191]
[58.71051407 -384.01159668]
[56.20032120 -369.18572998]
[51.22048187 -354.99737549]
[43.91428757 -341.85479736]
[34.49194336 -330.13610840]
[23.22455215 -320.17849731]
[10.43630028 -312.26846313]
[-3.50486970 -306.63360596]
[-18.19784355 -303.43600464]
[-17.52805710 -288.45095825]
[-16.85827255 -273.46594238]
[-16.18848801 -258.48089600]
[-15.51870251 -243.49584961]
[-12.30542850 -228.84407043]
[-6.64264202 -214.95404053]
[-0.97985548 -201.06401062]
[10.98968697 -192.19952393]
[9.03476143 -176.49955750]
[14.69754791 -162.60952759]
[20.36033440 -148.71949768]
[32.32987595 -139.85499573]
[30.37495232 -124.15503693]
[36.03773880 -110.26501465]
[41.70052338 -96.37498474]
[47.36331177 -82.48496246]
[49.89183807 -81.27471161]
[52.09332275 -78.98996735]
[53.55610275 -75.75025940]
[53.91934586 -71.82183075]
[52.92245865 -67.59569550]
[57.74845505 -53.39324188]
[62.57445526 -39.19078827]
[67.40045166 -24.98833084]
[71.21247101 -22.11125565]
[73.25759888 -16.80894661]
[72.15185547 -10.29059887]
[76.55284882 4.04924870]
[80.95384979 18.38909531]
[85.35484314 32.72894287]
[89.96885681 47.00167465]
[94.79485321 61.20413208]
[99.62084961 75.40658569]
[104.44684601 89.60904694]
[110.16419220 75.74138641]
[122.88002777 67.78477478]
[137.85165405 68.70684052]
[149.49504089 78.16367340]
[153.46748352 92.62809753]
[148.28735352 106.70525360]
[135.88671875 115.14470673]
[120.89071655 114.79874420]
[108.89179230 105.79545593]
[111.99590302 120.47075653]
[115.10001373 135.14605713]
[118.20412445 149.82136536]
[128.62976074 161.72164917]
[123.69372559 175.77458191]
[126.79783630 190.44987488]
[129.90194702 205.12518311]
[134.73950195 212.87345886]
[132.94131470 220.04202271]
[135.82658386 234.76191711]
[138.71185303 249.48181152]
[141.59713745 264.20169067]
[144.48240662 278.92160034]
[153.72778320 267.10961914]
[168.60028076 265.15795898]
[180.58024597 274.18460083]
[182.80500793 289.01870728]
[174.00012207 301.16259766]
[159.20944214 303.65969849]
[146.90623474 295.08038330]
[148.46675110 309.99899292]
[150.02728271 324.91760254]
[151.58779907 339.83621216]
[153.14833069 354.75479126]
[154.70884705 369.67340088]
[156.26937866 384.59201050]
[165.97068787 389.03140259]
[172.90116882 397.03613281]
[175.86096191 407.11795044]
[174.38032532 417.43884277]
[168.79275513 426.14599609]
[160.16290283 431.70446777]
[161.05570984 446.67785645]
[161.94853210 461.65127563]
[165.26441956 467.37109375]
[165.20312500 473.05380249]
[162.63825989 477.08251953]
[163.08486938 492.07586670]
[163.53146362 507.06921387]
[163.97807312 522.06256104]
[164.42468262 537.05590820]
[164.87129211 552.04925537]
[165.31788635 567.04260254]
[171.83314514 582.69470215]
[158.59634399 593.28826904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[3 206]
[4 205]
[5 204]
[6 203]
[7 202]
[8 199]
[9 198]
[10 197]
[13 191]
[14 190]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[20 178]
[21 177]
[22 176]
[23 175]
[24 174]
[25 172]
[26 171]
[27 170]
[29 168]
[30 167]
[31 166]
[32 165]
[33 156]
[34 155]
[35 154]
[36 153]
[39 152]
[40 151]
[41 150]
[42 149]
[43 146]
[44 145]
[45 144]
[46 143]
[47 138]
[48 137]
[49 136]
[50 135]
[52 133]
[53 132]
[54 131]
[56 129]
[57 128]
[58 127]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
