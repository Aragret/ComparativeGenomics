%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[103.81789398 602.40368652]
[92.18864441 592.89190674]
[81.96295166 581.88513184]
[73.33130646 569.58843994]
[66.45452881 556.23089600]
[61.46071243 542.06134033]
[58.44289398 527.34381104]
[57.45729828 512.35241699]
[58.52228165 497.36642456]
[61.61800766 482.66503906]
[66.68679810 468.52218628]
[73.63423157 455.20126343]
[82.33087921 442.95043945]
[92.61473083 431.99798584]
[104.29419708 422.54794312]
[117.15170288 414.77630615]
[130.94772339 408.82788086]
[145.42523193 404.81347656]
[143.42121887 389.94793701]
[141.41720581 375.08242798]
[129.45362854 366.28421021]
[127.20951080 351.23699951]
[136.51899719 338.74816895]
[134.51498413 323.88262939]
[132.51097107 309.01708984]
[130.50695801 294.15158081]
[128.50294495 279.28604126]
[126.49893188 264.42053223]
[123.94309998 249.63986206]
[120.83898926 234.96455383]
[110.63538361 224.11395264]
[115.34938049 209.01133728]
[112.24526978 194.33604431]
[102.04167175 183.48542786]
[106.75566864 168.38282776]
[103.65155792 153.70751953]
[100.54744720 139.03221130]
[97.44333649 124.35691833]
[94.33922577 109.68161011]
[86.23086548 122.30122375]
[71.94562531 126.87637329]
[58.01453781 121.31538391]
[50.80669403 108.16064453]
[53.61743164 93.42633820]
[65.16172028 83.84879303]
[80.16165924 83.80672455]
[91.76043701 93.32096100]
[90.19991302 78.40235138]
[88.41744995 63.50863647]
[86.41343689 48.64310837]
[84.40941620 33.77758026]
[82.40540314 18.91205215]
[80.40139008 4.04652357]
[70.63624573 -4.37990761]
[69.27313995 -16.80269623]
[76.50064850 -26.50268173]
[74.71817780 -41.39639664]
[72.93571472 -56.29011536]
[71.15324402 -71.18383026]
[69.37078094 -86.07755280]
[67.58831787 -100.97126770]
[53.20747375 -102.84835815]
[39.70483398 -108.11491394]
[27.86629105 -116.45952606]
[18.37971306 -127.39179993]
[11.79497623 -140.27113342]
[8.49209785 -154.34428406]
[8.65930271 -168.78938293]
[12.28230095 -182.76400757]
[19.14539337 -195.45417786]
[28.84430122 -206.12194824]
[40.80997849 -214.14814758]
[54.34200668 -219.06840515]
[52.78148270 -233.98701477]
[51.22095871 -248.90562439]
[49.66043854 -263.82421875]
[48.09991455 -278.74282837]
[46.42837143 -293.64941406]
[44.64590836 -308.54312134]
[42.86344147 -323.43682861]
[40.30760956 -338.21749878]
[36.98534775 -352.84494019]
[33.66308975 -367.47241211]
[30.34082985 -382.09988403]
[15.28085995 -381.99325562]
[0.55015570 -385.12698364]
[-13.16230106 -391.35455322]
[-25.21515465 -400.38467407]
[-35.04467010 -411.79495239]
[-42.19110107 -425.05175781]
[-46.32020187 -439.53500366]
[-47.23884201 -454.56732178]
[-44.90405655 -469.44558716]
[-39.42504883 -483.47393799]
[-31.05807877 -495.99621582]
[-20.19448853 -506.42678833]
[-7.34238529 -514.27770996]
[6.89711380 -519.18188477]
[21.85800171 -520.90985107]
[36.84053040 -519.38085938]
[51.14393997 -514.66632080]
[64.09923553 -506.98684692]
[75.10047150 -496.70159912]
[83.63310242 -484.29156494]
[89.29803467 -470.33728027]
[91.83032227 -455.49136353]
[91.11151886 -440.44815063]
[87.17523956 -425.91131592]
[80.20559692 -412.56072998]
[70.52857971 -401.02084351]
[58.59678268 -391.83135986]
[44.96829224 -385.42211914]
[48.29055023 -370.79467773]
[51.61280823 -356.16720581]
[54.93507004 -341.53976440]
[62.85464478 -354.27868652]
[77.07018280 -359.06600952]
[91.08251953 -353.71304321]
[98.48542023 -340.66708374]
[95.89436340 -325.89257812]
[84.49395752 -316.14419556]
[69.49629974 -315.87881470]
[57.75716019 -325.21929932]
[59.53962326 -310.32559204]
[61.32209015 -295.43188477]
[65.23815918 -289.16400146]
[63.01851654 -280.30334473]
[64.57904053 -265.38473511]
[66.13956451 -250.46614075]
[67.70008850 -235.54753113]
[69.26061249 -220.62893677]
[84.62720490 -218.30778503]
[98.88214111 -212.08981323]
[111.05462646 -202.39221191]
[120.31407166 -189.86933899]
[126.02674866 -175.36857605]
[127.79917908 -159.87301636]
[125.50521851 -144.43476868]
[119.29504395 -130.10357666]
[109.58527374 -117.85540771]
[97.03110504 -108.52596283]
[82.48203278 -102.75373077]
[84.26449585 -87.86001587]
[86.04696655 -72.96630096]
[87.82942963 -58.07258224]
[89.61189270 -43.17886353]
[91.39436340 -28.28514671]
[102.65434265 -14.82484150]
[95.26692200 2.04251003]
[97.27093506 16.90803909]
[99.27494812 31.77356720]
[101.27896118 46.63909531]
[103.28297424 61.50462341]
[106.47039795 65.06121826]
[107.45742798 70.65789795]
[105.11851501 76.84182739]
[106.67903900 91.76043701]
[109.01452637 106.57750702]
[112.11863708 121.25280762]
[115.22274780 135.92811584]
[118.32685852 150.60340881]
[121.43096924 165.27871704]
[131.85659790 177.17900085]
[126.92057800 191.23193359]
[130.02468872 205.90722656]
[140.45031738 217.80751038]
[135.51429749 231.86045837]
[138.61840820 246.53575134]
[148.86357117 235.57963562]
[163.82839966 236.60629272]
[172.48136902 248.85888672]
[168.44381714 263.30529785]
[154.69210815 269.29611206]
[141.36445618 262.41650391]
[143.36846924 277.28204346]
[145.37248230 292.14755249]
[147.37649536 307.01309204]
[149.38050842 321.87863159]
[151.38453674 336.74414062]
[163.66880798 346.32192993]
[165.48939514 361.42623901]
[156.28273010 373.07839966]
[158.28674316 387.94393921]
[160.29075623 402.80947876]
[175.31448364 402.84680176]
[190.19319153 404.92962646]
[204.64967346 409.01907349]
[218.41464233 415.03897095]
[231.23165894 422.87722778]
[242.86193848 432.38775635]
[253.08882141 443.39340210]
[261.72180176 455.68917847]
[268.60003662 469.04595947]
[273.59536743 483.21493530]
[276.61477661 497.93218994]
[277.60198975 512.92346191]
[276.53863525 527.90954590]
[273.44451904 542.61126709]
[268.37722778 556.75469971]
[261.43124390 570.07635498]
[252.73593140 582.32812500]
[242.45326233 593.28167725]
[230.77482605 602.73303223]
[217.91815186 610.50604248]
[204.12278748 616.45599365]
[189.64570618 620.47192383]
[174.75662231 622.47912598]
[159.73289490 622.44012451]
[144.85443115 620.35571289]
[130.39837646 616.26470947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 184]
[19 183]
[20 182]
[23 179]
[24 178]
[25 177]
[26 176]
[27 175]
[28 174]
[29 168]
[30 167]
[32 165]
[33 164]
[35 162]
[36 161]
[37 160]
[38 159]
[39 158]
[47 157]
[48 156]
[49 153]
[50 152]
[51 151]
[52 150]
[53 149]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
[61 142]
[73 131]
[74 130]
[75 129]
[76 128]
[77 127]
[78 125]
[79 124]
[80 123]
[81 115]
[82 114]
[83 113]
[84 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
