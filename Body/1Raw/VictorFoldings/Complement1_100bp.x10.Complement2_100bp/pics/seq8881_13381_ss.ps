%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[65.20099640 911.29132080]
[50.19823837 911.20056152]
[35.21800232 910.37377930]
[20.29637909 908.81292725]
[5.46931696 906.52178955]
[-9.22746468 903.50592041]
[-23.75856018 899.77252197]
[-38.08896255 895.33056641]
[-52.18414688 890.19085693]
[-66.01016235 884.36572266]
[-79.53369141 877.86914062]
[-92.72216034 870.71685791]
[-105.54380035 862.92602539]
[-117.96771240 854.51550293]
[-129.96397400 845.50549316]
[-141.50369263 835.91766357]
[-152.55905151 825.77514648]
[-163.10342407 815.10241699]
[-173.11140442 803.92517090]
[-182.55889893 792.27032471]
[-191.42312622 780.16589355]
[-199.68273926 767.64111328]
[-207.31784058 754.72613525]
[-214.31004333 741.45214844]
[-220.64248657 727.85095215]
[-226.29992676 713.95550537]
[-231.26873779 699.79913330]
[-235.53694153 685.41607666]
[-239.09426880 670.84088135]
[-241.93212891 656.10864258]
[-244.04368591 641.25494385]
[-245.42387390 626.31555176]
[-246.06935120 611.32641602]
[-245.97856140 596.32366943]
[-245.15174866 581.34338379]
[-243.59086609 566.42181396]
[-241.29969788 551.59472656]
[-238.28376770 536.89794922]
[-234.55032349 522.36688232]
[-230.10836792 508.03649902]
[-224.96861267 493.94131470]
[-219.14341736 480.11532593]
[-212.64683533 466.59179688]
[-205.49450684 453.40335083]
[-197.70367432 440.58172607]
[-189.29309082 428.15783691]
[-180.28303528 416.16159058]
[-170.69519043 404.62191772]
[-160.55267334 393.56655884]
[-149.87991333 383.02221680]
[-138.70262146 373.01425171]
[-127.04772949 363.56680298]
[-114.94330597 354.70260620]
[-102.41851807 346.44302368]
[-89.50354004 338.80795288]
[-76.22947693 331.81579590]
[-62.62831497 325.48336792]
[-48.73282242 319.82595825]
[-34.57646942 314.85717773]
[-20.19336128 310.58901978]
[-5.61814976 307.03173828]
[9.11405373 304.19390869]
[23.96775627 302.08239746]
[38.90717697 300.70223999]
[53.89632034 300.05679321]
[68.89907837 300.14761353]
[83.87931061 300.97448730]
[85.43983459 286.05587769]
[87.00035858 271.13726807]
[88.56088257 256.21865845]
[89.56513977 241.25231934]
[90.01174927 226.25897217]
[90.45835114 211.26562500]
[90.90496063 196.27227783]
[81.76627350 181.29057312]
[91.57408142 165.70570374]
[91.79740906 150.70735168]
[92.02073669 135.70901489]
[92.24406433 120.71068573]
[92.46739197 105.71234894]
[89.76093292 101.21912384]
[89.76460266 95.52937317]
[92.92729950 90.27253723]
[93.59708405 75.28749847]
[94.26686859 60.30246353]
[94.93665314 45.31742477]
[86.07386017 29.17640686]
[96.08807373 14.76521015]
[96.53467560 -0.22813986]
[94.34171295 -3.97579050]
[93.53636932 -7.83790779]
[93.98424530 -11.36421108]
[95.41849518 -14.19432259]
[97.48065948 -16.09317398]
[98.81889343 -31.03335953]
[100.15712738 -45.97354507]
[101.49536133 -60.91373062]
[102.83359528 -75.85391235]
[88.77238464 -81.37287903]
[76.83646393 -90.63088226]
[67.99343109 -102.87741089]
[62.96015549 -117.11969757]
[62.14465332 -132.20318604]
[65.61303711 -146.90512085]
[73.08414459 -160.03369141]
[83.95231628 -170.52461243]
[97.33653259 -177.52743530]
[112.15177917 -180.47447205]
[127.19705963 -179.12683105]
[141.25273132 -173.59375000]
[153.17933655 -164.32376099]
[162.01005554 -152.06834412]
[167.02902222 -137.82101440]
[167.82937622 -122.73670959]
[164.34622192 -108.03826141]
[156.86193848 -94.91720581]
[145.98321533 -84.43721008]
[132.59197998 -77.44783783]
[117.77378082 -74.51567841]
[116.43554688 -59.57549667]
[115.09731293 -44.63531113]
[113.75907898 -29.69512558]
[112.42084503 -14.75494003]
[111.52803040 0.21846606]
[111.08142090 15.21181583]
[119.14550018 24.22831345]
[118.89613342 36.72317505]
[109.92169189 45.98720932]
[109.25190735 60.97224808]
[108.58212280 75.95728302]
[107.91233826 90.94232178]
[107.46572876 105.93567657]
[107.24240112 120.93401337]
[107.01907349 135.93234253]
[106.79574585 150.93067932]
[106.57241821 165.92903137]
[114.97953796 175.71080017]
[114.48475647 188.19834900]
[105.89830780 196.71888733]
[105.45170593 211.71223450]
[105.00509644 226.70558167]
[104.55848694 241.69892883]
[117.09973145 233.46987915]
[131.39965820 237.99890137]
[136.91690063 251.94737244]
[129.58435059 265.03302002]
[114.80728912 267.60955811]
[103.47948456 257.77920532]
[101.91896057 272.69778442]
[100.35843658 287.61639404]
[98.79791260 302.53500366]
[113.62499237 304.82604980]
[128.32179260 307.84188843]
[142.85290527 311.57522583]
[157.18331909 316.01705933]
[171.27853394 321.15673828]
[185.10458374 326.98181152]
[198.62814331 333.47830200]
[211.81665039 340.63052368]
[224.63832092 348.42126465]
[237.06228638 356.83175659]
[249.05859375 365.84173584]
[260.59835815 375.42947388]
[271.65374756 385.57189941]
[282.19818115 396.24459839]
[292.20623779 407.42181396]
[301.65377808 419.07662964]
[310.51806641 431.18099976]
[318.77774048 443.70571899]
[326.41290283 456.62063599]
[333.40518188 469.89465332]
[339.73767090 483.49575806]
[345.39520264 497.39120483]
[350.36407471 511.54751587]
[354.63235474 525.93060303]
[358.18972778 540.50579834]
[361.02767944 555.23797607]
[363.13931274 570.09167480]
[364.51956177 585.03106689]
[365.16513062 600.02020264]
[365.07440186 615.02294922]
[364.24765015 630.00323486]
[362.68685913 644.92480469]
[360.39578247 659.75189209]
[357.37991333 674.44866943]
[353.64654541 688.97979736]
[349.20465088 703.31018066]
[344.06497192 717.40539551]
[338.23983765 731.23144531]
[331.74331665 744.75500488]
[324.59106445 757.94348145]
[316.80029297 770.76513672]
[308.38977051 783.18908691]
[299.37976074 795.18536377]
[289.79199219 806.72509766]
[279.64953613 817.78045654]
[268.97680664 828.32489014]
[257.79959106 838.33288574]
[246.14472961 847.78039551]
[234.04035950 856.64465332]
[221.51560974 864.90429688]
[208.60066223 872.53942871]
[195.32664490 879.53167725]
[181.72550964 885.86413574]
[167.83004761 891.52160645]
[153.67372131 896.49047852]
[139.29063416 900.75872803]
[124.71543121 904.31604004]
[109.98324585 907.15399170]
[95.12955475 909.26556396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 151]
[68 150]
[69 149]
[70 148]
[71 142]
[72 141]
[73 140]
[74 139]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
[83 131]
[84 130]
[85 129]
[86 128]
[88 125]
[89 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
