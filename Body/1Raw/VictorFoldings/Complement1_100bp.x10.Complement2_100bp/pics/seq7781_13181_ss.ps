%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[199.67536926 883.21270752]
[185.54934692 878.15728760]
[171.70477295 872.37542725]
[158.17897034 865.88275146]
[145.00837708 858.69683838]
[132.22851562 850.83703613]
[119.87384796 842.32440186]
[107.97766113 833.18206787]
[96.57203674 823.43457031]
[85.68772125 813.10821533]
[75.35404968 802.23083496]
[65.59888458 790.83178711]
[56.44852829 778.94177246]
[47.92764664 766.59283447]
[40.05920792 753.81823730]
[32.86442566 740.65246582]
[26.36269188 727.13104248]
[20.57154083 713.29034424]
[15.50658131 699.16772461]
[11.18146706 684.80126953]
[7.60785818 670.22967529]
[4.79538965 655.49224854]
[2.75164199 640.62872314]
[1.48212564 625.67913818]
[0.99026275 610.68377686]
[1.27737927 595.68316650]
[2.34270144 580.71759033]
[4.18335676 565.82757568]
[6.79438400 551.05310059]
[10.16874313 536.43408203]
[14.29733849 522.00988770]
[19.16903877 507.81948853]
[24.77071381 493.90103149]
[31.08725739 480.29208374]
[38.10164642 467.02935791]
[45.79496765 454.14855957]
[54.14648056 441.68444824]
[63.13367462 429.67062378]
[72.73232269 418.13943481]
[82.91654205 407.12200928]
[93.65888214 396.64804077]
[104.93038177 386.74575806]
[116.70065308 377.44186401]
[128.93797302 368.76141357]
[141.60934448 360.72784424]
[154.68060303 353.36279297]
[168.11653137 346.68612671]
[181.88088989 340.71585083]
[176.63417053 326.66336060]
[171.38745117 312.61090088]
[166.14073181 298.55841064]
[152.52561951 292.62847900]
[147.00451660 278.45199585]
[153.31672668 264.21142578]
[148.07000732 250.15896606]
[133.14585876 249.71281433]
[119.49253845 243.57014465]
[109.20337677 232.63864136]
[103.86894989 218.56271362]
[104.33127594 203.47630310]
[110.55101013 189.67927551]
[121.60877228 179.28689575]
[116.36205292 165.23442078]
[111.11533356 151.18194580]
[105.86861420 137.12947083]
[100.62189484 123.07700348]
[95.37517548 109.02453613]
[89.82956696 103.17485809]
[90.15666199 94.72359467]
[78.23460388 84.32286835]
[81.24889374 69.73645782]
[76.21197510 55.60742569]
[71.17506409 41.47839737]
[59.25300217 31.07766914]
[62.26729202 16.49126053]
[47.48108673 19.20497513]
[32.45104218 19.51153564]
[17.56647873 17.40300179]
[3.21293926 12.93399143]
[-10.23778439 6.22025919]
[-22.43728638 -2.56429052]
[-33.06957245 -13.19211769]
[-41.85923386 -25.38793564]
[-48.57860565 -38.83584213]
[-53.05363464 -53.18750763]
[-55.16840744 -68.07118988]
[-54.86814880 -83.10135651]
[-52.16063309 -97.88870239]
[-47.11599350 -112.05019379]
[-39.86489868 -125.21900940]
[-30.59516716 -137.05404663]
[-19.54690742 -147.24876404]
[-7.00629950 -155.53907776]
[6.70182800 -161.71025085]
[21.22240067 -165.60244751]
[36.17930222 -167.11483765]
[51.18510818 -166.20823669]
[65.85113525 -162.90615845]
[79.79750061 -157.29411316]
[92.66295624 -149.51745605]
[104.11425781 -139.77764893]
[113.85478973 -128.32696533]
[121.63224792 -115.46199799]
[127.24517059 -101.51599121]
[130.54818726 -86.85016632]
[131.45571899 -71.84442139]
[129.94427490 -56.88742447]
[126.05299377 -42.36660385]
[119.88268280 -28.65808868]
[111.59316254 -16.11695862]
[101.39914703 -5.06805801]
[89.56468201 4.20241880]
[76.39632416 11.45434475]
[87.95810699 20.84446907]
[85.30409241 36.44147873]
[90.34100342 50.57051086]
[95.37792206 64.69953918]
[106.93970490 74.08966064]
[104.28569031 89.68667603]
[109.42765045 103.77781677]
[114.67436981 117.83028412]
[119.92108917 131.88275146]
[125.16780853 145.93522644]
[130.41452026 159.98770142]
[135.66123962 174.04017639]
[150.82411194 174.64266968]
[164.56410217 180.98739624]
[174.80052185 192.07926941]
[179.99635315 206.20692444]
[179.38909912 221.20680237]
[173.10238647 234.79438782]
[162.12248230 244.91224670]
[167.36920166 258.96472168]
[181.46971130 265.58386230]
[186.59045410 279.90982056]
[180.19320679 293.31170654]
[185.43992615 307.36416626]
[190.68664551 321.41665649]
[195.93336487 335.46911621]
[210.24243164 330.95773315]
[224.76637268 327.19515991]
[239.46601868 324.19146729]
[254.30175781 321.95483398]
[269.23361206 320.49121094]
[284.22128296 319.80459595]
[299.22439575 319.89682007]
[314.20248413 320.76763916]
[329.11520386 322.41473389]
[343.92233276 324.83361816]
[358.58395386 328.01779175]
[373.06054688 331.95864868]
[387.31304932 336.64559937]
[401.30310059 342.06600952]
[414.99295044 348.20523071]
[428.34567261 355.04675293]
[441.32531738 362.57208252]
[453.89688110 370.76098633]
[466.02645874 379.59136963]
[477.68133545 389.03939819]
[488.83010864 399.07965088]
[499.44274902 409.68502808]
[509.49063110 420.82693481]
[518.94665527 432.47534180]
[527.78527832 444.59887695]
[535.98278809 457.16482544]
[543.51702881 470.13931274]
[550.36767578 483.48736572]
[556.51629639 497.17300415]
[561.94622803 511.15933228]
[566.64294434 525.40863037]
[570.59375000 539.88250732]
[573.78790283 554.54193115]
[576.21691895 569.34741211]
[577.87420654 584.25903320]
[578.75531006 599.23651123]
[578.85778809 614.23956299]
[578.18139648 629.22772217]
[576.72802734 644.16052246]
[574.50152588 658.99780273]
[571.50793457 673.69952393]
[567.75524902 688.22601318]
[563.25366211 702.53820801]
[558.01531982 716.59741211]
[552.05426025 730.36578369]
[545.38665771 743.80615234]
[538.03039551 756.88238525]
[530.00531006 769.55914307]
[521.33312988 781.80230713]
[512.03717041 793.57885742]
[502.14242554 804.85699463]
[491.67568970 815.60638428]
[480.66513062 825.79797363]
[469.14041138 835.40441895]
[457.13262939 844.39965820]
[444.67413330 852.75958252]
[431.79852295 860.46154785]
[418.54049683 867.48486328]
[404.93579102 873.81054688]
[391.02111816 879.42156982]
[376.83398438 884.30279541]
[362.41259766 888.44110107]
[347.79583740 891.82531738]
[333.02313232 894.44628906]
[318.13433838 896.29693604]
[303.16952515 897.37231445]
[288.16906738 897.66955566]
[273.17340088 897.18774414]
[258.22296143 895.92828369]
[243.35804749 893.89453125]
[228.61872864 891.09197998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 139]
[49 138]
[50 137]
[51 136]
[54 133]
[55 132]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[69 119]
[71 117]
[72 116]
[73 115]
[75 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
