%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[107.77330017 479.27566528]
[106.21277618 464.35705566]
[104.65225220 449.43847656]
[103.09173584 434.51986694]
[99.26942444 428.19436646]
[101.62073517 419.36776733]
[92.77881622 407.38153076]
[99.25407410 392.94610596]
[97.91584015 378.00592041]
[95.80121613 363.15573120]
[92.91593933 348.43582153]
[90.03067017 333.71594238]
[87.14539337 318.99603271]
[84.26012421 304.27615356]
[81.37484741 289.55627441]
[70.96768951 300.35861206]
[56.01980972 299.10928345]
[47.55022812 286.72921753]
[51.80241013 272.34454346]
[65.64179993 266.55911255]
[78.86553955 273.63638306]
[77.08306885 258.74267578]
[75.30060577 243.84895325]
[73.51814270 228.95523071]
[64.32326508 217.23757935]
[70.36585236 202.61575317]
[68.58338928 187.72203064]
[63.58450317 201.86456299]
[55.87677765 214.73277283]
[45.76721191 225.81414795]
[33.65847015 234.66729736]
[20.03283119 240.93962097]
[5.43300438 244.38128662]
[-9.55950737 244.85520935]
[-24.34755707 242.34251404]
[-38.34214020 236.94329834]
[-50.98586273 228.87258911]
[-61.77512741 218.45185852]
[-70.28020477 206.09614563]
[-76.16233063 192.29757690]
[-79.18724060 177.60574341]
[-79.23443604 162.60580444]
[-76.30204010 147.89523315]
[-70.50685883 134.05992126]
[-62.07970810 121.65093231]
[-51.35623169 111.16250610]
[-38.76354599 103.01239014]
[-24.80321503 97.52521515]
[-10.03127098 94.91951752]
[4.96392632 95.29908752]
[19.58512115 98.64881134]
[33.24996185 104.83526611]
[45.41417694 113.61204529]
[55.59327316 124.62957764]
[63.38182068 137.44903564]
[68.46960449 151.55982971]
[70.65379333 166.39575195]
[75.26779938 152.12301636]
[79.88181305 137.85028076]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[93.50021362 70.57009888]
[104.77729797 60.83990097]
[109.39130402 46.56716537]
[108.33160400 42.35634613]
[108.63632202 38.42294312]
[110.05070496 35.16181946]
[112.21792603 32.84454727]
[114.72815704 31.59678841]
[120.18350983 17.62399101]
[125.63887024 3.65119362]
[131.09422302 -10.32160473]
[136.54959106 -24.29440308]
[141.90077209 -38.30742645]
[147.14749146 -52.35989761]
[152.39421082 -66.41236877]
[157.64093018 -80.46483612]
[160.41653442 -95.20580292]
[160.63986206 -110.20413971]
[160.86318970 -125.20247650]
[160.75152588 -140.20205688]
[160.30491638 -155.19540405]
[159.85830688 -170.18876648]
[151.71356201 -183.75244141]
[159.06849670 -196.70443726]
[158.51028442 -211.69406128]
[157.84049988 -226.67909241]
[157.17071533 -241.66413879]
[156.50093079 -256.64916992]
[141.69543457 -259.45886230]
[127.93724060 -265.60772705]
[115.96828461 -274.76419067]
[106.43405151 -286.43444824]
[99.84870911 -299.98916626]
[96.56739044 -314.69729614]
[96.76705933 -329.76571655]
[100.43694305 -344.38174438]
[107.37913513 -357.75720215]
[117.21924591 -369.17074585]
[129.42662048 -378.00686646]
[143.34291077 -383.78903198]
[158.21765137 -386.20541382]
[173.24864197 -385.12573242]
[187.62530518 -380.60815430]
[200.57231140 -372.89636230]
[211.39144897 -362.40625000]
[219.49926758 -349.70346069]
[224.45849609 -335.47311401]
[226.00170898 -320.48263550]
[224.04566956 -305.54037476]
[218.69587708 -291.45220947]
[210.24082947 -278.97787476]
[199.13650513 -268.79010010]
[185.98175049 -261.43832397]
[171.48596191 -257.31896973]
[172.15574646 -242.33392334]
[172.82553101 -227.34887695]
[173.49531555 -212.36384583]
[176.93435669 -205.82206726]
[174.06184387 -197.15104675]
[182.17465210 -184.65979004]
[174.85166931 -170.63536072]
[175.29826355 -155.64201355]
[175.74487305 -140.64866638]
[178.04669189 -137.97770691]
[179.16915894 -134.05915833]
[178.53999329 -129.45942688]
[175.86152649 -124.97914886]
[175.63819885 -109.98081207]
[175.41487122 -94.98247528]
[182.29655457 -108.31072998]
[192.23843384 -119.54279327]
[204.63253784 -127.99180603]
[218.72100830 -133.14111328]
[233.64228821 -134.67584229]
[248.48394775 -132.50212097]
[262.33840942 -126.75289917]
[274.35848999 -117.77972412]
[283.80914307 -106.13132477]
[290.11245728 -92.51998901]
[292.88296509 -77.77806854]
[291.95126343 -62.80703354]
[287.37432861 -48.52236557]
[279.43206787 -35.79758072]
[268.61010742 -25.41080093]
[255.57022095 -17.99718475]
[241.10983276 -14.01007843]
[226.11317444 -13.69329262]
[211.49731445 -17.06620026]
[198.15600586 -23.92254639]
[186.90507507 -33.84306335]
[178.43252563 -46.22110367]
[173.25646973 -60.29975510]
[171.69338989 -75.21812439]
[166.44668579 -61.16564941]
[161.19996643 -47.11317825]
[155.95324707 -33.06070709]
[156.55854797 -25.69488144]
[150.52238464 -18.83904457]
[145.06703186 -4.86624718]
[139.61166382 9.10655022]
[134.15631104 23.07934761]
[128.70095825 37.05214691]
[123.66403961 51.18117523]
[119.05002594 65.45391083]
[122.49727631 79.94410706]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[94.15454102 142.46429443]
[89.54053497 156.73703003]
[84.92652893 171.00975037]
[83.47710419 185.93955994]
[85.25957489 200.83328247]
[94.58193970 213.61624146]
[88.41185760 227.17276001]
[90.19432068 242.06648254]
[91.97679138 256.96020508]
[93.75925446 271.85391235]
[96.09474182 286.67098999]
[98.98001099 301.39086914]
[101.86528778 316.11077881]
[104.75055695 330.83065796]
[107.63583374 345.55056763]
[110.52110291 360.27044678]
[118.81645203 347.77294922]
[133.16822815 343.41098022]
[147.01498413 349.17880249]
[154.02616882 362.43939209]
[150.99636841 377.13018799]
[139.31076050 386.53482056]
[124.31185913 386.35354614]
[112.85602570 376.66769409]
[114.19425964 391.60787964]
[123.13189697 404.66271973]
[116.56092072 418.02954102]
[118.01033783 432.95935059]
[119.57086182 447.87792969]
[121.13138580 462.79653931]
[122.69190979 477.71514893]
[136.19311523 485.36346436]
[142.58959961 499.50082397]
[139.42176819 514.69110107]
[127.90773010 525.09332275]
[112.47485352 526.70764160]
[99.05740356 518.91333008]
[92.81466675 504.70739746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[6 199]
[8 197]
[9 196]
[10 188]
[11 187]
[12 186]
[13 185]
[14 184]
[15 183]
[21 182]
[22 181]
[23 180]
[24 179]
[26 177]
[27 176]
[57 175]
[58 174]
[59 173]
[60 172]
[61 171]
[63 169]
[65 167]
[66 166]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 159]
[77 158]
[78 157]
[79 156]
[80 132]
[81 131]
[82 130]
[83 126]
[84 125]
[85 124]
[87 122]
[88 120]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
