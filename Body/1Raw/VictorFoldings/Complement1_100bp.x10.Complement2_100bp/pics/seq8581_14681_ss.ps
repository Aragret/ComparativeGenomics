%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[-25.56106758 904.19421387]
[-40.47883987 905.78674316]
[-55.45303726 906.70837402]
[-70.45350647 906.95727539]
[-85.45004272 906.53289795]
[-100.41243744 905.43615723]
[-115.31055450 903.66925049]
[-130.11441040 901.23571777]
[-144.79417419 898.14044189]
[-159.32028198 894.38970947]
[-173.66348267 889.99102783]
[-187.79490662 884.95324707]
[-201.68606567 879.28656006]
[-215.30902100 873.00231934]
[-228.63630676 866.11322021]
[-241.64109802 858.63317871]
[-254.29719543 850.57714844]
[-266.57913208 841.96142578]
[-278.46212769 832.80340576]
[-289.92233276 823.12145996]
[-300.93658447 812.93505859]
[-311.48272705 802.26477051]
[-321.53955078 791.13214111]
[-331.08676147 779.55944824]
[-340.10516357 767.57012939]
[-348.57659912 755.18823242]
[-356.48397827 742.43872070]
[-363.81140137 729.34735107]
[-370.54406738 715.94036865]
[-376.66848755 702.24481201]
[-382.17227173 688.28826904]
[-387.04437256 674.09893799]
[-391.27496338 659.70520020]
[-394.85549927 645.13623047]
[-397.77880859 630.42126465]
[-400.03900146 615.58996582]
[-401.63150024 600.67218018]
[-402.55313110 585.69799805]
[-402.80197144 570.69750977]
[-402.37759399 555.70098877]
[-401.28085327 540.73858643]
[-399.51388550 525.84045410]
[-397.08032227 511.03662109]
[-393.98501587 496.35687256]
[-390.23425293 481.83074951]
[-385.83554077 467.48754883]
[-380.79772949 453.35614014]
[-375.13101196 439.46499634]
[-368.84677124 425.84207153]
[-361.95764160 412.51477051]
[-354.47756958 399.51000977]
[-346.42153931 386.85391235]
[-337.80581665 374.57202148]
[-328.64773560 362.68899536]
[-318.96575928 351.22885132]
[-308.77935791 340.21459961]
[-298.10906982 329.66848755]
[-286.97637939 319.61169434]
[-275.40368652 310.06448364]
[-263.41430664 301.04611206]
[-251.03242493 292.57470703]
[-238.28291321 284.66735840]
[-225.19149780 277.33996582]
[-211.78450012 270.60729980]
[-198.08895874 264.48291016]
[-184.13243103 258.97915649]
[-169.94303894 254.10707092]
[-155.54934692 249.87652588]
[-140.98033142 246.29598999]
[-126.26535797 243.37271118]
[-111.43405151 241.11256409]
[-96.51627350 239.52008057]
[-81.54206848 238.59851074]
[-66.54159546 238.34967041]
[-51.54506683 238.77406311]
[-36.58267593 239.87086487]
[-21.68456078 241.63783264]
[-6.88072252 244.07144165]
[7.79902697 247.16676331]
[22.32512283 250.91757202]
[36.66831207 255.31631470]
[41.70523071 241.18728638]
[46.74214554 227.05825806]
[51.77906418 212.92922974]
[56.81597900 198.80020142]
[61.85289383 184.67117310]
[66.88980865 170.54214478]
[71.92672729 156.41310120]
[76.96364594 142.28407288]
[82.00055695 128.15504456]
[87.03747559 114.02601624]
[80.92216492 100.89022064]
[85.78766632 87.24202728]
[98.83349609 80.93706512]
[103.87040710 66.80803680]
[108.90732574 52.67900467]
[95.63730621 45.62745667]
[83.53546143 36.71884918]
[72.85975647 26.14306831]
[63.83773422 14.12553787]
[56.66170883 0.92241430]
[51.48463058 -13.18487835]
[48.41685104 -27.89564323]
[47.52376175 -42.89631653]
[48.82439804 -57.86716461]
[52.29103470 -72.48907471]
[57.84978485 -86.45038605]
[65.38215637 -99.45350647]
[74.72760773 -111.22127533]
[85.68692780 -121.50286865]
[98.02652740 -130.07913208]
[111.48337555 -136.76725769]
[125.77065277 -141.42468262]
[140.58381653 -143.95213318]
[155.60711670 -144.29576111]
[170.52035522 -142.44821167]
[185.00563049 -138.44888306]
[198.75419617 -132.38301086]
[211.47300720 -124.37989807]
[222.89094543 -114.61013031]
[232.76464844 -103.28194427]
[240.88366699 -90.63681030]
[247.07492065 -76.94425201]
[251.20646667 -62.49612427]
[253.19021606 -47.60040283]
[252.98390198 -32.57458115]
[250.59191895 -17.73893929]
[246.06526184 -3.40969872]
[239.50039673 10.10771275]
[231.03726196 22.52516937]
[220.85624695 33.57799149]
[209.17437744 43.03059006]
[196.24063110 50.68148422]
[182.33070374 56.36758804]
[167.74108887 59.96770477]
[152.78274536 61.40510178]
[137.77453613 60.64913559]
[123.03635406 57.71591949]
[117.99944305 71.84494781]
[112.96252441 85.97398376]
[119.07783508 99.10977936]
[114.21233368 112.75797272]
[101.16650391 119.06293488]
[96.12959290 133.19197083]
[91.09267426 147.32099915]
[86.05575562 161.45002747]
[81.01883698 175.57905579]
[75.98192596 189.70808411]
[70.94500732 203.83711243]
[65.90808868 217.96614075]
[60.87117386 232.09516907]
[55.83425903 246.22419739]
[50.79734421 260.35324097]
[64.68853760 266.01986694]
[78.31150055 272.30404663]
[91.63881683 279.19308472]
[104.64363861 286.67309570]
[117.29976654 294.72906494]
[129.58172607 303.34469604]
[141.46478271 312.50271606]
[152.92498779 322.18463135]
[163.93928528 332.37097168]
[174.48548889 343.04119873]
[184.54234314 354.17382812]
[194.08961487 365.74645996]
[203.10806274 377.73577881]
[211.57952881 390.11764526]
[219.48695374 402.86709595]
[226.81442261 415.95846558]
[233.54716492 429.36541748]
[239.67163086 443.06094360]
[245.17547607 457.01742554]
[250.04762268 471.20678711]
[254.27825928 485.60046387]
[257.85885620 500.16946411]
[260.78222656 514.88439941]
[263.04248047 529.71569824]
[264.63500977 544.63348389]
[265.55670166 559.60766602]
[265.80560303 574.60815430]
[265.38128662 589.60467529]
[264.28457642 604.56707764]
[262.51770020 619.46520996]
[260.08416748 634.26904297]
[256.98895264 648.94879150]
[253.23822021 663.47491455]
[248.83955383 677.81817627]
[243.80181885 691.94958496]
[238.13514709 705.84075928]
[231.85095215 719.46374512]
[224.96188354 732.79101562]
[217.48184204 745.79583740]
[209.42585754 758.45196533]
[200.81018066 770.73388672]
[191.65216064 782.61694336]
[181.97021484 794.07708740]
[171.78385925 805.09136963]
[161.11361694 815.63757324]
[149.98095703 825.69439697]
[138.40830994 835.24163818]
[126.41897583 844.26007080]
[114.03710938 852.73150635]
[101.28763580 860.63891602]
[88.19623566 867.96636963]
[74.78927612 874.69909668]
[61.09375381 880.82348633]
[47.13724899 886.32733154]
[32.94786835 891.19946289]
[18.55418968 895.43005371]
[3.98519778 899.01062012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 153]
[82 152]
[83 151]
[84 150]
[85 149]
[86 148]
[87 147]
[88 146]
[89 145]
[90 144]
[91 143]
[94 140]
[95 139]
[96 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
