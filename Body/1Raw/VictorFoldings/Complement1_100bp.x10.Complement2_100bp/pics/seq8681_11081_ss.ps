%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[84.58683777 219.01208496]
[94.18213654 207.25219727]
[107.37957764 199.75607300]
[105.15445709 184.92202759]
[102.92934418 170.08798218]
[100.70422363 155.25393677]
[98.47910309 140.41989136]
[83.10160065 136.74949646]
[70.30561829 127.46496582]
[62.04595947 113.98470306]
[59.58443832 98.36802673]
[63.29708862 83.00066376]
[72.61674500 70.23024750]
[86.11965942 62.00766754]
[83.67393494 47.20839691]
[81.22821045 32.40912628]
[78.78247833 17.60985565]
[76.33675385 2.81058550]
[73.89102173 -11.98868561]
[71.44529724 -26.78795624]
[68.99957275 -41.58722687]
[66.55384064 -56.38649750]
[64.10811615 -71.18576813]
[49.21984100 -69.34150696]
[34.26905823 -68.10211182]
[19.28033066 -67.46962738]
[4.27828312 -67.44509125]
[-10.71243382 -68.02854156]
[-25.66719055 -69.21901703]
[-40.56142044 -71.01456451]
[-55.37064362 -73.41223907]
[-70.07054138 -76.40809631]
[-84.63694763 -79.99721527]
[-99.04593658 -84.17369843]
[-113.27383423 -88.93067932]
[-127.29726410 -94.26035309]
[-141.09318542 -100.15395355]
[-154.63893127 -106.60179901]
[-167.91224670 -113.59329987]
[-180.89132690 -121.11696625]
[-193.55484009 -129.16043091]
[-205.88198853 -137.71049500]
[-217.85250854 -146.75309753]
[-229.44674683 -156.27337646]
[-240.64562988 -166.25570679]
[-251.43078613 -176.68367004]
[-261.78448486 -187.54014587]
[-271.68969727 -198.80729675]
[-281.13015747 -210.46661377]
[-290.09039307 -222.49891663]
[-298.55563354 -234.88446045]
[-306.51199341 -247.60289001]
[-313.94638062 -260.63330078]
[-320.84661865 -273.95431519]
[-327.20132446 -287.54397583]
[-333.00009155 -301.38003540]
[-338.23336792 -315.43972778]
[-342.89257812 -329.69995117]
[-346.97006226 -344.13726807]
[-350.45910645 -358.72796631]
[-353.35397339 -373.44808960]
[-355.64993286 -388.27340698]
[-357.34323120 -403.17962646]
[-358.43103027 -418.14218140]
[-358.91156006 -433.13656616]
[-358.78402710 -448.13809204]
[-358.04867554 -463.12213135]
[-356.70669556 -478.06402588]
[-354.76028442 -492.93930054]
[-352.21261597 -507.72348022]
[-349.06793213 -522.39221191]
[-345.33135986 -536.92150879]
[-341.00906372 -551.28741455]
[-336.10812378 -565.46636963]
[-330.63656616 -579.43511963]
[-324.60345459 -593.17059326]
[-318.01864624 -606.65026855]
[-310.89297485 -619.85205078]
[-303.23815918 -632.75421143]
[-295.06674194 -645.33551025]
[-286.39218140 -657.57537842]
[-277.22872925 -669.45367432]
[-267.59140015 -680.95080566]
[-257.49609375 -692.04791260]
[-246.95935059 -702.72686768]
[-235.99848938 -712.96997070]
[-224.63153076 -722.76049805]
[-212.87713623 -732.08227539]
[-200.75462341 -740.92010498]
[-188.28392029 -749.25939941]
[-175.48550415 -757.08642578]
[-162.38040161 -764.38836670]
[-148.99015808 -771.15319824]
[-135.33676147 -777.36987305]
[-121.44264984 -783.02807617]
[-107.33064270 -788.11859131]
[-93.02393341 -792.63305664]
[-78.54602814 -796.56396484]
[-63.92071533 -799.90496826]
[-49.17201996 -802.65051270]
[-34.32417679 -804.79608154]
[-19.40157700 -806.33819580]
[-4.42874384 -807.27429199]
[10.56972504 -807.60284424]
[25.56918716 -807.32330322]
[40.54499817 -806.43609619]
[55.47255325 -804.94274902]
[70.32732391 -802.84564209]
[85.08490753 -800.14825439]
[99.72105408 -796.85510254]
[114.21172333 -792.97143555]
[128.53309631 -788.50372314]
[142.66165161 -783.45935059]
[156.57415771 -777.84649658]
[170.24778748 -771.67449951]
[183.66006470 -764.95336914]
[196.78894043 -757.69427490]
[209.61283875 -749.90905762]
[222.11071777 -741.61059570]
[234.26202393 -732.81237793]
[246.04678345 -723.52905273]
[257.44567871 -713.77569580]
[268.43991089 -703.56842041]
[279.01147461 -692.92395020]
[289.14297485 -681.85986328]
[298.81777954 -670.39422607]
[308.01998901 -658.54595947]
[316.73446655 -646.33453369]
[324.94692993 -633.77990723]
[332.64385986 -620.90283203]
[339.81259155 -607.72442627]
[346.44137573 -594.26629639]
[352.51934814 -580.55059814]
[358.03646851 -566.59985352]
[362.98367310 -552.43695068]
[367.35287476 -538.08520508]
[371.13687134 -523.56823730]
[374.32946777 -508.90979004]
[376.92538452 -494.13403320]
[378.92034912 -479.26519775]
[380.31112671 -464.32775879]
[381.09542847 -449.34619141]
[381.27191162 -434.34515381]
[380.84036255 -419.34930420]
[379.80142212 -404.38327026]
[378.15686035 -389.47161865]
[375.90930176 -374.63885498]
[373.06250000 -359.90936279]
[369.62112427 -345.30734253]
[365.59082031 -330.85678101]
[360.97821045 -316.58142090]
[355.79086304 -302.50473022]
[350.03732300 -288.64981079]
[343.72702026 -275.03945923]
[336.87033081 -261.69598389]
[329.47854614 -248.64137268]
[321.56375122 -235.89701843]
[313.13900757 -223.48390198]
[304.21813965 -211.42239380]
[294.81579590 -199.73231506]
[284.94741821 -188.43289185]
[274.62924194 -177.54264832]
[263.87817383 -167.07951355]
[252.71195984 -157.06066895]
[241.14888000 -147.50257874]
[229.20794678 -138.42092896]
[216.90879822 -129.83065796]
[204.27160645 -121.74588013]
[191.31716919 -114.17987061]
[178.06675720 -107.14505768]
[164.54214478 -100.65300751]
[150.76553345 -94.71438599]
[136.75958252 -89.33895111]
[122.54730225 -84.53552246]
[108.15202332 -80.31201172]
[93.59741974 -76.67533875]
[78.90738678 -73.63149261]
[81.35311127 -58.83222580]
[83.79884338 -44.03295517]
[86.24456787 -29.23368454]
[88.69029236 -14.43441296]
[91.13602448 0.36485809]
[93.58174896 15.16412926]
[96.02748108 29.96339989]
[98.47320557 44.76267242]
[100.91893005 59.56194305]
[114.65152740 62.29835892]
[126.62824249 69.55303192]
[135.41375732 80.45655060]
[139.95521545 93.70220184]
[139.70832825 107.70259857]
[134.70269775 120.77989960]
[125.53820038 131.36688232]
[113.31314850 138.19477844]
[115.53826904 153.02882385]
[117.76338196 167.86286926]
[119.98850250 182.69691467]
[122.21361542 197.53096008]
[137.02960205 200.82505798]
[149.65295410 209.25212097]
[158.37648010 221.67243958]
[162.02038574 236.40629578]
[160.09185791 251.46104431]
[152.85173035 264.80062866]
[141.27915955 274.62103271]
[126.93923950 279.59408569]
[111.77133179 279.04721069]
[97.82677460 273.05441284]
[86.99144745 262.42614746]
[80.73073578 248.59980774]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 196]
[6 195]
[7 194]
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[19 181]
[20 180]
[21 179]
[22 178]
[23 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
