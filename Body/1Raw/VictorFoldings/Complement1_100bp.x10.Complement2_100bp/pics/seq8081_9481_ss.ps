%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[36.25858688 625.00653076]
[22.02755356 629.87658691]
[7.15560436 632.12713623]
[-7.87918901 631.68579102]
[-22.59351921 628.56677246]
[-36.51438141 622.87036133]
[-49.19428253 614.77960205]
[-60.22560883 604.55462646]
[-69.25375366 592.52416992]
[-75.98849487 579.07489014]
[-80.21334076 564.63916016]
[-81.79248810 549.68103027]
[-80.67515564 534.68133545]
[-76.89727783 520.12219238]
[-70.58029175 506.47174072]
[-61.92726135 494.16870117]
[-51.21634674 483.60858154]
[-38.79185867 475.13085938]
[-25.05319595 469.00802612]
[-10.44199657 465.43695068]
[4.57204866 464.53240967]
[6.35451460 449.63867188]
[8.13698101 434.74496460]
[9.91944695 419.85125732]
[11.70191288 404.95751953]
[0.25392494 397.51034546]
[-6.90288734 385.80099487]
[-8.32320881 372.08486938]
[-3.67315555 359.03286743]
[6.19350767 349.21118164]
[19.39150238 344.57699585]
[13.42394066 330.93011475]
[22.93559265 318.28735352]
[24.93960762 303.42184448]
[26.94362068 288.55630493]
[17.20321846 299.96353149]
[3.51316452 306.09396362]
[-11.48320484 305.76397705]
[-24.89032555 299.03723145]
[-34.11949539 287.21255493]
[-37.38870239 272.57315063]
[-34.06671524 257.94564819]
[-24.79496002 246.15434265]
[-11.36366367 239.47599792]
[3.63379860 239.20008850]
[17.30165291 245.37986755]
[27.00084877 256.82214355]
[30.85867500 271.31884766]
[35.47268295 257.04611206]
[40.08669281 242.77339172]
[44.70070267 228.50065613]
[41.25345612 214.01045227]
[52.86056137 203.25936890]
[51.58929443 199.97056580]
[51.84783173 195.90261841]
[53.98502350 191.78125000]
[58.01241684 188.46052551]
[63.25913620 174.40806580]
[68.50585175 160.35559082]
[67.90054321 152.98976135]
[73.93671417 146.13392639]
[79.39206696 132.16113281]
[68.66123199 121.83819580]
[62.69264603 108.19672394]
[62.39329147 93.30966949]
[67.80866241 79.43928528]
[78.11583710 68.69331360]
[91.74854279 62.70471191]
[106.63513184 62.38351440]
[104.44667816 46.71439743]
[116.28291321 37.67267227]
[121.73826599 23.69987488]
[127.19362640 9.72707653]
[132.64898682 -4.24572134]
[138.10433960 -18.21851921]
[143.55969238 -32.19131851]
[149.01506042 -46.16411591]
[146.82659912 -61.83323288]
[158.66282654 -70.87495422]
[163.90954590 -84.92742920]
[168.94647217 -99.05645752]
[173.98338318 -113.18548584]
[178.17039490 -127.58927155]
[181.49266052 -142.21672058]
[184.81491089 -156.84419250]
[188.13717651 -171.47164917]
[183.64855957 -186.64276123]
[194.01257324 -197.34025574]
[197.33483887 -211.96771240]
[191.48170471 -229.42687988]
[203.89765930 -241.82894897]
[207.00177002 -256.50424194]
[210.10586548 -271.17953491]
[213.20997620 -285.85485840]
[208.49598694 -300.95745850]
[218.69958496 -311.80807495]
[221.80369568 -326.48336792]
[224.90780640 -341.15866089]
[228.01191711 -355.83398438]
[214.33363342 -362.14685059]
[202.40335083 -371.34555054]
[192.81950378 -382.96868896]
[186.06278992 -396.43325806]
[182.47215271 -411.06387329]
[182.22766113 -426.12667847]
[185.34161377 -440.86611938]
[191.65779114 -454.54287720]
[200.85939026 -466.47091675]
[212.48484802 -476.05197144]
[225.95106506 -482.80541992]
[240.58255005 -486.39251709]
[255.64540100 -486.63333130]
[270.38409424 -483.51583862]
[284.05932617 -477.19631958]
[295.98513794 -467.99185181]
[305.56335449 -456.36407471]
[312.31353760 -442.89620972]
[315.89709473 -428.26385498]
[316.13427734 -413.20095825]
[313.01318359 -398.46301270]
[306.69036865 -384.78933716]
[297.48300171 -372.86572266]
[285.85290527 -363.29034424]
[272.38342285 -356.54342651]
[257.75018311 -352.96340942]
[242.68722534 -352.72985840]
[239.58311462 -338.05456543]
[236.47900391 -323.37927246]
[233.37489319 -308.70394897]
[238.31091309 -294.65103149]
[227.88528442 -282.75073242]
[224.78117371 -268.07543945]
[221.67706299 -253.40013123]
[218.57295227 -238.72483826]
[224.90625000 -228.41873169]
[222.44027710 -216.16708374]
[211.96229553 -208.64546204]
[208.64002991 -194.01800537]
[213.36628723 -179.89312744]
[202.76463318 -168.14938354]
[199.44236755 -153.52192688]
[196.12011719 -138.89447021]
[192.79785156 -124.26700592]
[204.92837524 -133.09028625]
[219.92787170 -133.21365356]
[232.20188904 -124.59110260]
[237.17253113 -110.43861389]
[232.98585510 -96.03473663]
[221.20341492 -86.75174713]
[206.21974182 -86.05197144]
[193.62339783 -94.19641876]
[188.11241150 -108.14856720]
[183.07550049 -94.01953888]
[178.03857422 -79.89051056]
[179.23986816 -75.26818085]
[177.55017090 -69.84213257]
[172.63563538 -65.41960144]
[175.21429443 -50.74990845]
[162.98785400 -40.70875931]
[157.53250122 -26.73596001]
[152.07713318 -12.76316166]
[146.62178040 1.20963597]
[141.16642761 15.18243408]
[135.71105957 29.15523148]
[130.25570679 43.12802887]
[132.83436584 57.79771805]
[120.60793304 67.83886719]
[131.33876038 78.16180420]
[137.30735779 91.80327606]
[137.60670471 106.69033051]
[132.19132996 120.56071472]
[121.88416290 131.30668640]
[108.25145721 137.29528809]
[93.36486816 137.61648560]
[87.90950775 151.58927917]
[82.55832672 165.60231018]
[77.31160736 179.65478516]
[72.06488800 193.70724487]
[67.13329315 207.87338257]
[70.25051117 223.38446045]
[58.97343445 233.11465454]
[54.35942841 247.38739014]
[49.74541855 261.66012573]
[45.13140869 275.93286133]
[41.80915070 290.56033325]
[39.80513382 305.42584229]
[37.80112076 320.29138184]
[43.62534332 335.00155640]
[34.25703049 346.58102417]
[47.44696808 356.55184937]
[53.77254868 371.72689819]
[51.59469223 387.92794800]
[41.60166550 400.74572754]
[26.59563065 406.73999023]
[24.81316376 421.63369751]
[23.03069878 436.52743530]
[21.24823189 451.42114258]
[19.46576691 466.31484985]
[33.84233475 470.73684692]
[47.19819260 477.65499878]
[59.10400391 486.84692383]
[69.17704773 498.01715088]
[77.09350586 510.80657959]
[82.59891510 524.80407715]
[85.51628113 539.55969238]
[85.75183868 554.59912109]
[83.29800415 569.43890381]
[78.23366547 583.60192871]
[70.72161865 596.63305664]
[61.00333786 608.11322021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 198]
[22 197]
[23 196]
[24 195]
[25 194]
[31 189]
[33 187]
[34 186]
[35 185]
[48 184]
[49 183]
[50 182]
[51 181]
[53 179]
[57 178]
[58 177]
[59 176]
[61 175]
[62 174]
[69 167]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[79 157]
[80 154]
[81 153]
[82 152]
[83 143]
[84 142]
[85 141]
[86 140]
[88 138]
[89 137]
[91 134]
[92 133]
[93 132]
[94 131]
[96 129]
[97 128]
[98 127]
[99 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
