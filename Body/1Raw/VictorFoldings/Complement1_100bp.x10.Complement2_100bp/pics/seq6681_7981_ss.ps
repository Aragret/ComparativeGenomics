%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[46.34557343 871.08258057]
[31.35338783 871.66857910]
[16.35135841 871.44903564]
[1.38274395 870.42449951]
[-13.50930023 868.59802246]
[-28.28183556 865.97479248]
[-42.89226913 862.56243896]
[-57.29847336 858.37072754]
[-71.45890808 853.41180420]
[-85.33275604 847.69995117]
[-98.88000488 841.25158691]
[-112.06159973 834.08538818]
[-124.83953094 826.22198486]
[-137.17695618 817.68402100]
[-149.03831482 808.49609375]
[-160.38938904 798.68475342]
[-171.19746399 788.27832031]
[-181.43136597 777.30670166]
[-191.06159973 765.80157471]
[-200.06039429 753.79614258]
[-208.40179443 741.32495117]
[-216.06176758 728.42401123]
[-223.01820374 715.13055420]
[-229.25106812 701.48278809]
[-234.74238586 687.52020264]
[-239.47631836 673.28295898]
[-243.43920898 658.81213379]
[-246.61964417 644.14947510]
[-249.00845337 629.33721924]
[-250.59873962 614.41809082]
[-251.38594055 599.43511963]
[-251.36775208 584.43151855]
[-250.54425049 569.45050049]
[-248.91780090 554.53527832]
[-246.49310303 539.72888184]
[-243.27713013 525.07397461]
[-239.27917480 510.61279297]
[-234.51075745 496.38705444]
[-228.98561096 482.43780518]
[-222.71968079 468.80523682]
[-215.73104858 455.52862549]
[-208.03982544 442.64630127]
[-199.66821289 430.19540405]
[-190.64035034 418.21179199]
[-180.98226929 406.73004150]
[-170.72180176 395.78329468]
[-159.88853455 385.40304565]
[-148.51371765 375.61926270]
[-136.63012695 366.46014404]
[-124.27204132 357.95208740]
[-111.47509003 350.11965942]
[-98.27616119 342.98541260]
[-84.71332550 336.56994629]
[-70.82567596 330.89172363]
[-56.65325928 325.96710205]
[-42.23693466 321.81033325]
[-27.61827469 318.43338013]
[-12.83942604 315.84597778]
[2.05700135 314.05560303]
[17.02805519 313.06738281]
[32.03057098 312.88418579]
[47.02129364 313.50653076]
[61.95699692 314.93264771]
[64.18211365 300.09860229]
[66.40723419 285.26455688]
[68.63234711 270.43051147]
[70.85746765 255.59646606]
[73.08258057 240.76242065]
[61.01748276 229.63090515]
[57.93387222 213.33816528]
[65.24163818 198.26840210]
[80.23904419 190.44702148]
[82.24305725 175.58149719]
[84.24707031 160.71595764]
[75.04039764 149.06379700]
[76.86099243 133.95950317]
[89.14527130 124.38169861]
[91.14928436 109.51617432]
[92.70980835 94.59756470]
[93.82545471 79.63911438]
[94.94110870 64.68066406]
[95.83392334 49.70725632]
[96.50370789 34.72221756]
[97.17349243 19.73717690]
[96.72688293 4.74382734]
[95.16636658 -10.17477703]
[93.60584259 -25.09338188]
[91.93430328 -39.99995422]
[90.15183258 -54.89367294]
[88.36936951 -69.78739166]
[86.58689880 -84.68110657]
[71.68796539 -87.17076874]
[58.09456253 -93.75833893]
[46.90864944 -103.90979004]
[39.03701401 -116.80219269]
[35.11777878 -131.39042664]
[35.46865463 -146.49186707]
[40.06120300 -160.88232422]
[48.52312088 -173.39521790]
[60.16844177 -183.01618958]
[74.05313110 -188.96531677]
[89.05162048 -190.76031494]
[103.94804382 -188.25569153]
[117.53482056 -181.65446472]
[128.71054077 -171.49179077]
[136.56921387 -158.59147644]
[140.47378540 -143.99932861]
[140.10774231 -128.89823914]
[135.50074768 -114.51241302]
[127.02626038 -102.00801849]
[115.37127686 -92.39875031]
[101.48062134 -86.46357727]
[103.26308441 -71.56985474]
[105.04554749 -56.67613983]
[106.82801819 -41.78242111]
[110.74407959 -35.51454926]
[108.52444458 -26.65390587]
[110.08496857 -11.73530006]
[111.64549255 3.18330455]
[119.18680573 -9.78313637]
[132.15156555 -17.32733917]
[147.15081787 -17.47726631]
[160.26379395 -10.19372654]
[168.06278992 2.61937904]
[168.50915527 17.61273575]
[161.48623657 30.86711693]
[148.82980347 38.91785812]
[133.84819031 39.66051483]
[120.45758820 32.90095901]
[112.15853119 20.40696335]
[111.48874664 35.39200211]
[110.81896210 50.37704086]
[113.32356262 54.44348907]
[113.30024719 60.12648773]
[109.89955902 65.79631042]
[108.78391266 80.75476074]
[107.66825867 95.71321869]
[109.45426178 98.18297577]
[110.38109589 101.35717010]
[110.18611908 104.91883087]
[108.72745514 108.45839691]
[106.01481628 111.52018738]
[104.01080322 126.38571167]
[113.32028961 138.87455750]
[111.07617188 153.92176819]
[99.11259460 162.71998596]
[97.10858154 177.58551025]
[95.10456848 192.45103455]
[105.75408936 201.20195007]
[110.65013885 213.97094727]
[108.61373138 227.38447571]
[100.28251648 237.95495605]
[87.91662598 242.98754883]
[85.69151306 257.82159424]
[83.46639252 272.65563965]
[81.24127197 287.48968506]
[79.01615906 302.32373047]
[76.79103851 317.15777588]
[91.48783875 320.17654419]
[106.00141907 323.97985840]
[120.28991699 328.55673218]
[134.31214905 333.89395142]
[148.02767944 339.97616577]
[161.39697266 346.78582764]
[174.38145447 354.30325317]
[186.94372559 362.50683594]
[199.04753113 371.37289429]
[210.65798950 380.87585449]
[221.74162292 390.98831177]
[232.26647949 401.68115234]
[242.20220947 412.92349243]
[251.52015686 424.68295288]
[260.19345093 436.92562866]
[268.19711304 449.61618042]
[275.50802612 462.71807861]
[282.10516357 476.19351196]
[287.96945190 490.00360107]
[293.08401489 504.10858154]
[297.43408203 518.46777344]
[301.00714111 533.03973389]
[303.79284668 547.78247070]
[305.78320312 562.65350342]
[306.97247314 577.60992432]
[307.35720825 592.60864258]
[306.93634033 607.60638428]
[305.71099854 622.55987549]
[303.68478394 637.42608643]
[300.86355591 652.16204834]
[297.25537109 666.72540283]
[292.87069702 681.07403564]
[287.72213745 695.16662598]
[281.82458496 708.96258545]
[275.19500732 722.42205811]
[267.85250854 735.50628662]
[259.81826782 748.17749023]
[251.11547852 760.39923096]
[241.76921082 772.13616943]
[231.80642700 783.35455322]
[221.25581360 794.02197266]
[210.14784241 804.10772705]
[198.51449585 813.58264160]
[186.38935852 822.41949463]
[173.80735779 830.59277344]
[160.80477905 838.07885742]
[147.41911316 844.85626221]
[133.68894958 850.90539551]
[119.65390015 856.20880127]
[105.35440063 860.75122070]
[90.83170319 864.51953125]
[76.12766266 867.50286865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 158]
[64 157]
[65 156]
[66 155]
[67 154]
[68 153]
[72 148]
[73 147]
[74 146]
[77 143]
[78 142]
[79 137]
[80 136]
[81 135]
[82 132]
[83 131]
[84 130]
[85 119]
[86 118]
[87 117]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
