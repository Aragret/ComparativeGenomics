%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[173.84292603 404.65972900]
[170.56079102 390.01596069]
[168.38217163 375.16787720]
[167.31925964 360.19848633]
[167.37797546 345.19152832]
[168.55801392 330.23092651]
[170.85275269 315.40032959]
[174.24938965 300.78271484]
[178.72889709 286.45977783]
[184.26625061 272.51165771]
[190.83047485 259.01635742]
[198.38484192 246.04934692]
[206.88711548 233.68312073]
[216.28976440 221.98684692]
[205.33384705 211.74145508]
[198.30128479 209.46882629]
[194.29254150 201.26104736]
[183.49037170 190.85366821]
[168.95657349 187.59513855]
[164.38681030 172.44827271]
[149.85301208 169.18974304]
[145.28323364 154.04286194]
[134.48107910 143.63549805]
[123.67891693 133.22811890]
[112.87676239 122.82074738]
[102.07460785 112.41337585]
[91.04272461 102.24982452]
[79.78662872 92.33517456]
[68.53053284 82.42052460]
[57.27444077 72.50587463]
[41.80452728 69.19039917]
[37.36807632 54.97184753]
[26.11198044 45.05719757]
[30.77159309 59.31510925]
[29.69688225 74.27655792]
[23.04727554 87.72210693]
[11.80920506 97.65718079]
[-2.35022950 102.60797882]
[-17.33056068 101.84008026]
[-30.90954590 95.46739197]
[-41.07282257 84.43526459]
[-46.31272888 70.38024902]
[-45.85195541 55.38732910]
[-39.75885773 41.68061066]
[-28.93730736 31.29340172]
[-14.99261856 25.76658821]
[0.00659685 25.92003822]
[13.83370781 31.72991943]
[-0.61522913 25.28486061]
[-2.01324964 10.45600986]
[-10.97394562 -1.57336736]
[-19.93464088 -13.60274506]
[-28.89533806 -25.63212204]
[-37.85603333 -37.66149902]
[-50.75422287 -29.97770500]
[-64.37411499 -23.66085815]
[-78.57133484 -18.77792549]
[-93.19538116 -15.38066673]
[-108.09122467 -13.50509453]
[-123.10097504 -13.17109299]
[-138.06550598 -14.38220024]
[-152.82618713 -17.12557983]
[-167.22656250 -21.37214851]
[-181.11396790 -27.07689285]
[-194.34118652 -34.17933655]
[-206.76800537 -42.60419083]
[-218.26269531 -52.26214981]
[-228.70339966 -63.05083084]
[-237.97944641 -74.85586548]
[-245.99250793 -87.55212402]
[-252.65763855 -101.00500488]
[-257.90417480 -115.07191467]
[-261.67651367 -129.60371399]
[-263.93466187 -144.44639587]
[-264.65469360 -159.44258118]
[-263.82894897 -174.43330383]
[-261.46621704 -189.25968933]
[-257.59149170 -203.76454163]
[-252.24589539 -217.79409790]
[-245.48606873 -231.19964600]
[-237.38368225 -243.83909607]
[-228.02462769 -255.57843018]
[-217.50810242 -266.29321289]
[-205.94560242 -275.86990356]
[-193.45968628 -284.20690918]
[-180.18272400 -291.21591187]
[-166.25544739 -296.82260132]
[-151.82548523 -300.96752930]
[-137.04582214 -303.60675049]
[-122.07312012 -304.71231079]
[-107.06610107 -304.27249146]
[-92.18385315 -302.29193115]
[-77.58412170 -298.79162598]
[-63.42168808 -293.80871582]
[-49.84667587 -287.39599609]
[-37.00298309 -279.62145996]
[-25.02676773 -270.56747437]
[-14.04498005 -260.33007812]
[-4.17403412 -249.01776123]
[4.48143244 -236.75045776]
[11.82966709 -223.65818787]
[17.79277420 -209.87974548]
[22.30754280 -195.56120300]
[25.32611084 -180.85432434]
[26.81648254 -165.91502380]
[26.76285744 -150.90165710]
[25.16580582 -135.97337341]
[22.04225540 -121.28843689]
[17.42531776 -107.00250244]
[11.36393642 -93.26700592]
[3.92236400 -80.22756958]
[-4.82051373 -68.02239990]
[-14.77201748 -56.78088760]
[-25.82665634 -46.62219620]
[-16.86595917 -34.59281921]
[-7.90526390 -22.56344032]
[1.05543208 -10.53406334]
[10.01612854 1.49531436]
[23.82413673 7.07995176]
[25.86308479 22.76922417]
[36.02663422 33.80110168]
[47.28273010 43.71575165]
[61.94752884 46.32206345]
[67.18909454 61.24977493]
[78.44519043 71.16442871]
[89.70128632 81.07907867]
[100.95738220 90.99372864]
[104.80184937 91.29776764]
[108.49362946 93.29491425]
[111.27957916 96.87897491]
[112.48197937 101.61121368]
[123.28413391 112.01859283]
[134.08628845 122.42596436]
[144.88844299 132.83332825]
[155.69059753 143.24070740]
[170.99703979 147.24363708]
[174.79417419 161.64610291]
[190.10061646 165.64904785]
[193.89775085 180.05151367]
[204.69990540 190.45887756]
[215.57923889 200.78555298]
[226.53515625 211.03094482]
[237.57565308 200.86633301]
[249.34489441 191.55519104]
[261.77706909 183.14962769]
[274.80261230 175.69662476]
[288.34869385 169.23785400]
[302.33956909 163.80946350]
[316.69702148 159.44180298]
[331.34069824 156.15927124]
[346.18872070 153.98027039]
[361.15808105 152.91694641]
[376.16503906 152.97528076]
[391.12567139 154.15492249]
[405.95632935 156.44927979]
[420.57403564 159.84552002]
[434.89709473 164.32464600]
[448.84533691 169.86163330]
[462.34082031 176.42549133]
[475.30804443 183.97952271]
[487.67449951 192.48147583]
[499.37100220 201.88380432]
[510.33218384 212.13392639]
[520.49670410 223.17453003]
[529.80773926 234.94384766]
[538.21319580 247.37608337]
[545.66607666 260.40170288]
[552.12469482 273.94784546]
[557.55297852 287.93878174]
[561.92053223 302.29623413]
[565.20294189 316.93994141]
[567.38177490 331.78799438]
[568.44500732 346.75735474]
[568.38653564 361.76431274]
[567.20672607 376.72494507]
[564.91223145 391.55557251]
[561.51586914 406.17327881]
[557.03662109 420.49627686]
[551.49951172 434.44448853]
[544.93554688 447.93991089]
[537.38140869 460.90707397]
[528.87933350 473.27343750]
[519.47692871 484.96984863]
[509.22668457 495.93093872]
[498.18600464 506.09536743]
[486.41659546 515.40631104]
[473.98428345 523.81164551]
[460.95861816 531.26440430]
[447.41241455 537.72296143]
[433.42141724 543.15106201]
[419.06393433 547.51849365]
[404.42019653 550.80078125]
[389.57211304 552.97949219]
[374.60275269 554.04254150]
[359.59579468 553.98394775]
[344.63516235 552.80407715]
[329.80456543 550.50946045]
[315.18688965 547.11291504]
[300.86392212 542.63354492]
[286.91577148 537.09631348]
[273.42041016 530.53222656]
[260.45330811 522.97796631]
[248.08702087 514.47583008]
[236.39067078 505.07327271]
[225.42968750 494.82293701]
[215.26536560 483.78216553]
[205.95454407 472.01269531]
[197.54930115 459.58029175]
[190.09663391 446.55456543]
[183.63822937 433.00830078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 142]
[15 141]
[17 140]
[18 139]
[20 137]
[22 135]
[23 134]
[24 133]
[25 132]
[26 131]
[27 127]
[28 126]
[29 125]
[30 124]
[32 122]
[33 121]
[48 120]
[50 118]
[51 117]
[52 116]
[53 115]
[54 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
