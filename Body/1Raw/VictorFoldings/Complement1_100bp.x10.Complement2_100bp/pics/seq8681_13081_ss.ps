%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[116.11632538 722.78448486]
[102.60867310 716.24450684]
[89.64844513 708.67742920]
[77.31358337 700.12878418]
[65.67827606 690.64996338]
[54.81249237 680.29797363]
[44.78158951 669.13513184]
[35.64589691 657.22851562]
[27.46035004 644.64978027]
[20.27418327 631.47448730]
[14.13061428 617.78198242]
[9.06659222 603.65454102]
[5.11257315 589.17718506]
[2.29233742 574.43695068]
[0.62284601 559.52252197]
[0.11413977 544.52349854]
[0.76927811 529.53021240]
[2.58432102 514.63275146]
[5.54835224 499.92077637]
[9.64354610 485.48272705]
[14.84527206 471.40542603]
[21.12224770 457.77355957]
[28.43671989 444.66909790]
[36.74470139 432.17086792]
[45.99621964 420.35400391]
[56.13564301 409.28964233]
[67.10198975 399.04428101]
[78.82929230 389.67953491]
[91.24703979 381.25170898]
[104.28054047 373.81155396]
[117.85140991 367.40374756]
[131.87802124 362.06686401]
[146.27603149 357.83297729]
[143.17192078 343.15768433]
[140.06781006 328.48239136]
[136.96369934 313.80706787]
[133.85958862 299.13177490]
[130.75547791 284.45648193]
[127.65137482 269.78118896]
[124.54726410 255.10586548]
[112.13131714 242.70381165]
[117.98445129 225.24464417]
[114.66218567 210.61718750]
[111.33992767 195.98973083]
[100.97590637 185.29223633]
[105.46452332 170.12110901]
[95.10050201 159.42362976]
[99.58911896 144.25250244]
[96.26686096 129.62504578]
[89.78565979 143.15257263]
[77.07601929 151.11906433]
[62.07615280 151.05601501]
[49.43393326 142.98295593]
[43.06669235 129.40141296]
[44.94738770 114.51977539]
[54.49326706 102.94928741]
[68.74642944 98.27518463]
[83.29039001 101.94578552]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[88.76469421 58.63391113]
[87.42646027 43.69372559]
[85.31183624 28.84352875]
[82.42656708 14.12363720]
[79.54129028 -0.59625423]
[74.54956818 13.54880428]
[64.58203125 24.75809669]
[51.11731339 31.36879158]
[36.15281677 32.40023041]
[21.90843964 27.69940758]
[10.49725151 17.96366119]
[3.61203289 4.63722992]
[2.27416539 -10.30298805]
[6.68211365 -24.64069939]
[16.18198395 -36.24899292]
[29.36452866 -43.40584183]
[44.27419662 -45.04957581]
[58.69922256 -40.93635559]
[70.49974060 -31.67634964]
[77.92461395 -18.64504051]
[78.14794159 -33.64337540]
[78.37126923 -48.64171600]
[78.59459686 -63.64005280]
[78.81792450 -78.63838959]
[79.04125214 -93.63672638]
[79.26457977 -108.63506317]
[79.48790741 -123.63339996]
[79.71123505 -138.63174438]
[79.93456268 -153.63008118]
[80.15789032 -168.62841797]
[67.91067505 -177.97250366]
[63.56471634 -192.56585693]
[68.58580017 -206.75221252]
[80.85076904 -215.16104126]
[73.31979370 -229.07489014]
[81.24571991 -241.68554688]
[81.46904755 -256.68389893]
[67.63282013 -263.04617310]
[57.58545685 -274.49038696]
[53.06771469 -289.03378296]
[54.86232376 -304.15658569]
[62.65835953 -317.23870850]
[75.10511017 -326.01358032]
[90.04609680 -328.96087646]
[104.89271545 -325.57003784]
[117.07268524 -316.42846680]
[124.47576141 -303.12002563]
[125.81931305 -287.95050049]
[120.87055969 -273.54806519]
[110.48690796 -262.40808105]
[96.46738434 -256.46057129]
[96.24405670 -241.46221924]
[103.79101562 -228.62115479]
[95.84910583 -214.93771362]
[107.85827637 -206.16743469]
[112.45475006 -191.83787537]
[107.67622375 -177.38038635]
[95.15622711 -168.40509033]
[94.93289948 -153.40675354]
[94.70957184 -138.40841675]
[94.48624420 -123.41007233]
[94.26291656 -108.41173553]
[94.03958893 -93.41339874]
[93.81626129 -78.41506195]
[93.59293365 -63.41672516]
[93.36960602 -48.41838837]
[93.14627838 -33.42004776]
[92.92295074 -18.42171097]
[94.26118469 -3.48152685]
[97.14645386 11.23836422]
[100.03173065 25.95825577]
[108.32707977 13.46076965]
[122.67884827 9.09880733]
[136.52560425 14.86659908]
[143.53678894 28.12718964]
[140.50698853 42.81801224]
[128.82139587 52.22262573]
[113.82248688 52.04136276]
[102.36664581 42.35549164]
[103.70487976 57.29567719]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[110.89432526 126.30278778]
[114.21658325 140.93025208]
[124.81823730 152.67399597]
[120.09198761 166.79885864]
[130.69363403 178.54260254]
[125.96739197 192.66746521]
[129.28964233 207.29492188]
[132.61190796 221.92237854]
[143.08988953 229.44401550]
[145.55586243 241.69564819]
[139.22256470 252.00175476]
[142.32667542 266.67706299]
[145.43078613 281.35235596]
[148.53489685 296.02767944]
[151.63900757 310.70297241]
[154.74311829 325.37826538]
[157.84722900 340.05358887]
[160.95133972 354.72888184]
[175.83056641 352.77005005]
[190.81683350 351.97015381]
[205.82003784 352.33398438]
[220.74992371 353.85934448]
[235.51670837 356.53710938]
[250.03158569 360.35113525]
[264.20724487 365.27847290]
[277.95846558 371.28952026]
[291.20248413 378.34811401]
[303.85971069 386.41180420]
[315.85400391 395.43206787]
[327.11322021 405.35470581]
[337.56961060 416.12002563]
[347.16036987 427.66323853]
[355.82772827 439.91497803]
[363.51962280 452.80151367]
[370.18978882 466.24536133]
[375.79806519 480.16571045]
[380.31076050 494.47875977]
[383.70074463 509.09848022]
[385.94757080 523.93695068]
[387.03778076 538.90490723]
[386.96481323 553.91235352]
[385.72909546 568.86901855]
[383.33804321 583.68487549]
[379.80606079 598.27099609]
[375.15438843 612.53948975]
[369.41098022 626.40460205]
[362.61041260 639.78295898]
[354.79354858 652.59411621]
[346.00744629 664.76092529]
[336.30490112 676.21038818]
[325.74429321 686.87347412]
[314.38909912 696.68609619]
[302.30767822 705.58935547]
[289.57263184 713.52954102]
[276.26055908 720.45898438]
[262.45153809 726.33605957]
[248.22863770 731.12530518]
[233.67735291 734.79797363]
[218.88522339 737.33197021]
[203.94120789 738.71209717]
[188.93518066 738.92999268]
[173.95739746 737.98437500]
[159.09793091 735.88098145]
[144.44613647 732.63232422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 164]
[34 163]
[35 162]
[36 161]
[37 160]
[38 159]
[39 158]
[40 157]
[42 154]
[43 153]
[44 152]
[46 150]
[48 148]
[49 147]
[59 146]
[61 144]
[62 143]
[63 142]
[64 141]
[65 133]
[66 132]
[67 131]
[82 130]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[96 116]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
