%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[178.12472534 649.61627197]
[185.43235779 636.47668457]
[194.80313110 624.71917725]
[205.98143005 614.66455078]
[218.66229248 606.58709717]
[212.79333496 592.78289795]
[206.92437744 578.97875977]
[201.05540466 565.17456055]
[195.18644714 551.37036133]
[189.31748962 537.56622314]
[174.41403198 536.97253418]
[161.19186401 529.93811035]
[152.29870605 517.81072998]
[149.54164124 502.96423340]
[153.52018738 488.33349609]
[163.49691772 476.83453369]
[157.62796021 463.03036499]
[151.75898743 449.22616577]
[145.89002991 435.42199707]
[140.02107239 421.61782837]
[134.15211487 407.81365967]
[128.28315735 394.00946045]
[122.41419220 380.20529175]
[121.35219574 395.16766357]
[116.17186737 409.24472046]
[107.28173828 421.32635498]
[95.38292694 430.45971680]
[81.41382599 435.92453003]
[66.47608185 437.28979492]
[51.74776459 434.44784546]
[38.39040375 427.62283325]
[27.45741272 417.35299683]
[19.81101990 404.44824219]
[16.05424690 389.92630005]
[16.48337173 374.93243408]
[21.06454849 360.64913940]
[29.43648911 348.20281982]
[40.93894577 338.57507324]
[54.66478729 332.52517700]
[69.53153992 330.53024292]
[84.36674500 332.74761963]
[98.00043488 339.00241089]
[109.35740662 348.80136108]
[117.54345703 361.37478638]
[115.98294067 346.45617676]
[104.28662109 337.30569458]
[102.49150848 322.19833374]
[112.16871643 309.99218750]
[110.60819244 295.07357788]
[109.04766846 280.15499878]
[107.48714447 265.23638916]
[98.29074860 257.37808228]
[96.86855316 244.96191406]
[104.52485657 234.58193970]
[103.18662262 219.64175415]
[101.84838867 204.70156860]
[93.00646973 192.71534729]
[99.48171997 178.27990723]
[85.77284241 176.97793579]
[72.50421143 173.29389954]
[60.08643341 167.34181213]
[48.90375519 159.30587769]
[39.30223083 149.43475342]
[31.57896805 138.03387451]
[25.97296333 125.45606995]
[22.65769196 112.09053040]
[21.73574257 98.35086060]
[23.23564720 84.66221619]
[27.11098671 71.44820404]
[33.24184418 59.11770248]
[41.43850327 48.05229187]
[51.44731903 38.59437561]
[62.95857620 31.03662872]
[75.61606598 25.61292267]
[89.02809906 22.49109077]
[88.35831451 7.50605249]
[87.68852997 -7.47898674]
[84.45816803 -13.24754620]
[84.60405731 -18.92872047]
[87.22863007 -22.91879463]
[87.00530243 -37.91712952]
[86.78197479 -52.91547012]
[86.55864716 -67.91380310]
[86.33531952 -82.91213989]
[78.39340973 -96.59558868]
[85.94036102 -109.43664551]
[85.71703339 -124.43498230]
[85.49370575 -139.43331909]
[85.27037811 -154.43165588]
[85.04705048 -169.42999268]
[81.79022217 -177.96409607]
[84.93372345 -184.65290833]
[77.19641876 -198.45307922]
[84.93372345 -211.18035889]
[84.93372345 -226.18035889]
[77.19641876 -239.98052979]
[84.93372345 -252.70779419]
[70.68105316 -257.86892700]
[59.05512238 -267.59588623]
[51.45981979 -280.71408081]
[48.81231689 -295.63943481]
[51.43231201 -310.56967163]
[59.00342178 -323.70184326]
[70.61140442 -333.45019531]
[84.85454559 -338.63757324]
[100.01290131 -338.63757324]
[114.25603485 -333.45019531]
[125.86402130 -323.70184326]
[133.43513489 -310.56967163]
[136.05513000 -295.63943481]
[133.40762329 -280.71408081]
[125.81232452 -267.59588623]
[114.18639374 -257.86892700]
[99.93372345 -252.70779419]
[107.67102051 -239.98052979]
[99.93372345 -226.18035889]
[99.93372345 -211.18035889]
[107.67102051 -198.45307922]
[99.93372345 -184.65290833]
[100.04538727 -169.65332031]
[100.26871490 -154.65498352]
[100.49204254 -139.65664673]
[100.71537018 -124.65830994]
[100.93869781 -109.65997314]
[108.86463165 -97.04930878]
[101.33365631 -83.13546753]
[101.55698395 -68.13713074]
[101.78031158 -53.13879776]
[102.00363922 -38.14045715]
[102.22696686 -23.14212227]
[102.67356873 -8.14877129]
[103.34335327 6.83626699]
[104.01313782 21.82130623]
[120.03305817 24.32510185]
[135.19351196 30.07553673]
[148.84407043 38.82590103]
[160.39909363 50.20077896]
[169.36286926 63.71216965]
[175.35078430 78.78039551]
[178.10598755 94.75899506]
[177.51025391 110.96244049]
[173.58912659 126.69557953]
[166.51084900 141.28340149]
[156.57910156 154.10008240]
[144.21997070 164.59571838]
[129.96369934 172.32005310]
[114.42190552 176.94168091]
[123.35954285 189.99653625]
[116.78857422 203.36334229]
[118.12680817 218.30352783]
[119.46504211 233.24371338]
[130.40483093 248.05595398]
[122.40574646 263.67587280]
[123.96627045 278.59445190]
[125.52679443 293.51306152]
[127.08731842 308.43167114]
[139.08099365 318.37097168]
[140.45106506 333.52279663]
[130.90153503 344.89566040]
[132.46206665 359.81427002]
[136.21836853 374.33633423]
[142.08732605 388.14050293]
[147.95628357 401.94467163]
[153.82524109 415.74887085]
[159.69421387 429.55303955]
[165.56317139 443.35720825]
[171.43212891 457.16140747]
[177.30108643 470.96557617]
[192.50410461 471.75915527]
[205.80075073 479.04519653]
[214.57945251 491.33157349]
[217.14257812 506.15017700]
[213.03456116 520.55273438]
[203.12167358 531.69726562]
[208.99063110 545.50140381]
[214.85958862 559.30560303]
[220.72854614 573.10974121]
[226.59750366 586.91394043]
[232.46647644 600.71813965]
[247.08171082 597.19042969]
[262.07827759 596.11657715]
[277.04702759 597.52593994]
[291.57962036 601.37994385]
[305.27960205 607.57354736]
[317.77322388 615.93768311]
[328.71963501 626.24432373]
[337.82022095 638.21215820]
[344.82669067 651.51470947]
[349.54794312 665.78918457]
[351.85516357 680.64605713]
[351.68539429 695.68005371]
[349.04327393 710.48101807]
[344.00088501 724.64520264]
[336.69580078 737.78619385]
[327.32727051 749.54547119]
[316.15090942 759.60223389]
[303.47161865 767.68218994]
[289.63528442 773.56481934]
[275.01934814 777.08966064]
[260.02258301 778.16064453]
[245.05410767 776.74841309]
[230.52224731 772.89160156]
[216.82347107 766.69537354]
[204.33146667 758.32879639]
[193.38703918 748.02008057]
[184.28875732 736.05047607]
[177.28483582 722.74658203]
[172.56632996 708.47119141]
[170.26197815 693.61389160]
[170.43464661 678.57995605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 179]
[6 178]
[7 177]
[8 176]
[9 175]
[10 174]
[16 168]
[17 167]
[18 166]
[19 165]
[20 164]
[21 163]
[22 162]
[23 161]
[44 160]
[45 159]
[48 156]
[49 155]
[50 154]
[51 153]
[54 151]
[55 150]
[56 149]
[58 147]
[75 133]
[76 132]
[77 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[92 119]
[94 117]
[95 116]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
