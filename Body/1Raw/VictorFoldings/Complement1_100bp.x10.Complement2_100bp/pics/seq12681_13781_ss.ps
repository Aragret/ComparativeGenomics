%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[123.26333618 744.51757812]
[108.88597870 740.22705078]
[94.76928711 735.14410400]
[80.95690155 729.28454590]
[67.49150085 722.66638184]
[54.41471481 715.31011963]
[41.76696396 707.23846436]
[29.58733749 698.47644043]
[17.91348839 689.05102539]
[6.78149366 678.99139404]
[-3.77423406 668.32867432]
[-13.72106934 657.09582520]
[-23.02826500 645.32751465]
[-31.66705513 633.06018066]
[-39.61073685 620.33166504]
[-46.83475876 607.18133545]
[-53.31678772 593.64990234]
[-59.03678894 579.77911377]
[-63.97708130 565.61187744]
[-68.12239838 551.19201660]
[-71.45992279 536.56402588]
[-73.97934723 521.77313232]
[-75.67287445 506.86514282]
[-76.53527069 491.88604736]
[-76.56387329 476.88217163]
[-75.75859070 461.89990234]
[-74.12191772 446.98553467]
[-71.65891266 432.18518066]
[-68.37718201 417.54458618]
[-64.28687286 403.10900879]
[-59.40063477 388.92303467]
[-53.73355865 375.03054810]
[-47.30316925 361.47448730]
[-40.12934113 348.29672241]
[-32.23424911 335.53802490]
[-23.64229393 323.23782349]
[-14.38003540 311.43411255]
[-4.47610092 300.16339111]
[6.03889561 289.46051025]
[17.13245392 279.35852051]
[28.77028275 269.88867188]
[40.91641235 261.08026123]
[53.53329468 252.96044922]
[66.58193970 245.55438232]
[80.02200317 238.88493347]
[93.81195831 232.97273254]
[107.90916443 227.83602905]
[122.27005768 223.49072266]
[118.73038483 208.91435242]
[115.19071198 194.33796692]
[104.66856384 183.79597473]
[108.93081665 168.55970764]
[105.39114380 153.98333740]
[94.86899567 143.44132996]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[82.92700195 89.95220947]
[75.93997192 103.22554016]
[65.79470825 114.27423859]
[53.16411209 122.36547089]
[38.88592911 126.96257782]
[23.90717316 127.76065826]
[9.22133732 124.70677185]
[-4.19752216 118.00347900]
[-15.45938015 108.09537506]
[-23.81727791 95.63962555]
[-28.71686745 81.46239471]
[-29.83317566 66.50399017]
[-27.09216118 51.75655365]
[-20.67562675 38.19823074]
[-11.00915718 26.72829819]
[1.26610529 18.10751343]
[15.33598614 12.90766144]
[30.26728058 11.47362995]
[45.06964874 13.90053463]
[58.76130676 20.02740479]
[70.43412781 29.44787025]
[79.31390381 41.53710556]
[84.81291962 55.49824905]
[86.15115356 40.55806351]
[87.48938751 25.61787796]
[88.82762146 10.67769337]
[90.16585541 -4.26249170]
[90.16585541 -19.26249123]
[88.82762146 -34.20267868]
[87.48938751 -49.14286041]
[86.15115356 -64.08304596]
[84.81291962 -79.02323151]
[83.47468567 -93.96341705]
[74.53704834 -107.01827240]
[81.10802460 -120.38507843]
[66.45173645 -124.25405884]
[54.00437164 -132.90501404]
[45.26900864 -145.29327393]
[41.30048752 -159.92292786]
[42.57802582 -175.02735901]
[48.94735336 -188.78262329]
[59.63934326 -199.52772522]
[73.36288452 -205.96513367]
[88.46080017 -207.31748962]
[103.10993195 -203.42150879]
[115.54132843 -194.74763489]
[124.25384521 -182.34329224]
[128.19540405 -167.70634460]
[126.89002991 -152.60430908]
[120.49536896 -138.86079407]
[109.78359222 -128.13542175]
[96.04821014 -121.72331238]
[104.89012909 -109.73708344]
[98.41487122 -95.30165100]
[99.75310516 -80.36146545]
[101.09133911 -65.42127991]
[102.42957306 -50.48109436]
[103.76780701 -35.54091263]
[105.10604095 -20.60072517]
[112.07801819 -33.88197327]
[124.07026672 -42.89229965]
[138.76727295 -45.89194489]
[153.33128357 -42.30172729]
[164.95021057 -32.81486130]
[171.38061523 -19.26311493]
[171.38090515 -4.26311398]
[164.95100403 9.28887367]
[153.33242798 18.77617264]
[138.76855469 22.36693382]
[124.07143402 19.36783791]
[112.07884216 10.35796261]
[105.10604095 -2.92425776]
[103.76780701 12.01592731]
[102.42957306 26.95611191]
[101.09133911 41.89629745]
[99.75310516 56.83648300]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[124.48294830 136.24998474]
[119.96751404 150.44366455]
[123.50718689 165.02003479]
[134.28251648 176.60462952]
[129.76708984 190.79829407]
[133.30676270 205.37467957]
[136.84643555 219.95104980]
[151.60081482 217.22612000]
[166.48382568 215.32536316]
[181.44946289 214.25466919]
[196.45149231 214.01734924]
[211.44351196 214.61412048]
[226.37919617 216.04316711]
[241.21238708 218.30003357]
[255.89723206 221.37777710]
[270.38833618 225.26687622]
[284.64089966 229.95530701]
[298.61087036 235.42855835]
[312.25506592 241.66975403]
[325.53134155 248.65956116]
[338.39865112 256.37640381]
[350.81719971 264.79641724]
[362.74862671 273.89358521]
[374.15600586 283.63977051]
[385.00415039 294.00485229]
[395.25946045 304.95678711]
[404.89028931 316.46176147]
[413.86682129 328.48419189]
[422.16137695 340.98687744]
[429.74822998 353.93124390]
[436.60400391 367.27722168]
[442.70748901 380.98358154]
[448.03979492 395.00799561]
[452.58447266 409.30703735]
[456.32742310 423.83654785]
[459.25714111 438.55163574]
[461.36453247 453.40679932]
[462.64309692 468.35614014]
[463.08889771 483.35339355]
[462.70050049 498.35226440]
[461.47915649 513.30639648]
[459.42864990 528.16949463]
[456.55526733 542.89569092]
[452.86791992 557.43945312]
[448.37802124 571.75579834]
[443.09942627 585.80047607]
[437.04846191 599.53009033]
[430.24380493 612.90222168]
[422.70654297 625.87548828]
[414.45989990 638.40985107]
[405.52944946 650.46655273]
[395.94271851 662.00830078]
[385.72940063 672.99938965]
[374.92102051 683.40594482]
[363.55099487 693.19573975]
[351.65447998 702.33850098]
[339.26824951 710.80596924]
[326.43057251 718.57196045]
[313.18115234 725.61254883]
[299.56094360 731.90594482]
[285.61199951 737.43261719]
[271.37747192 742.17553711]
[256.90136719 746.12005615]
[242.22842407 749.25396729]
[227.40399170 751.56762695]
[212.47387695 753.05383301]
[197.48425293 753.70794678]
[182.48143005 753.52807617]
[167.51179504 752.51464844]
[152.62161255 750.67089844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 147]
[49 146]
[50 145]
[52 143]
[53 142]
[55 140]
[56 139]
[58 137]
[59 136]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
