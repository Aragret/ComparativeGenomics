%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[103.59298706 741.14611816]
[89.25679016 736.71282959]
[75.26061249 731.30102539]
[61.67115402 724.93652344]
[48.55316925 717.64959717]
[35.96918106 709.47497559]
[23.97915268 700.45172119]
[12.64022255 690.62268066]
[2.00642848 680.03479004]
[-7.87155533 668.73852539]
[-16.94665527 656.78765869]
[-25.17562294 644.23919678]
[-32.51924515 631.15283203]
[-38.94252396 617.59106445]
[-44.41485214 603.61840820]
[-48.91014862 589.30157471]
[-52.40699005 574.70861816]
[-54.88871384 559.90924072]
[-56.34349823 544.97393799]
[-56.76440048 529.97381592]
[-56.14942169 514.98040771]
[-54.50149155 500.06512451]
[-51.82846069 485.29910278]
[-48.14307404 470.75268555]
[-43.46288300 456.49517822]
[-37.81020355 442.59454346]
[-31.21196365 429.11700439]
[-23.69961357 416.12680054]
[-15.30894947 403.68585205]
[-6.07995892 391.85342407]
[3.94337773 380.68588257]
[14.71329403 370.23651123]
[26.17846680 360.55505371]
[38.28425980 351.68768311]
[50.97297668 343.67663574]
[64.18415833 336.56005859]
[77.85484314 330.37191772]
[91.91987610 325.14169312]
[106.31224823 320.89428711]
[120.96335602 317.64993286]
[118.73823547 302.81588745]
[116.51311493 287.98187256]
[114.28800201 273.14782715]
[111.04798126 269.63906860]
[109.97772980 264.05770874]
[112.22431183 257.83963013]
[110.44184875 242.94592285]
[108.65938568 228.05220032]
[106.87691498 213.15847778]
[105.09445190 198.26477051]
[103.31198120 183.37104797]
[101.52951813 168.47732544]
[99.63622284 153.59729004]
[97.63220978 138.73176575]
[95.62819672 123.86624146]
[93.62418365 109.00070953]
[82.59250641 119.16447449]
[67.74549103 117.02764130]
[60.02780151 104.16539764]
[65.12863159 90.05931854]
[79.28784180 85.10787201]
[92.06688690 92.95970154]
[91.17407227 77.98629761]
[90.28125763 63.01289368]
[89.38844299 48.03948593]
[80.27706909 38.91009903]
[79.84170532 26.42033195]
[87.77064514 17.28477287]
[87.10086060 2.29973412]
[72.97286224 0.35249019]
[59.40598297 -4.03267050]
[46.81737518 -10.71959496]
[35.59390640 -19.50137329]
[26.08022308 -30.10674477]
[18.56820679 -42.20846558]
[13.28799057 -55.43342209]
[10.40092373 -69.37412262]
[9.99463940 -83.60125732]
[12.08039093 -97.67692566]
[16.59274673 -111.16808319]
[23.39164543 -123.65992737]
[32.26673889 -134.76856995]
[42.94389343 -144.15292358]
[55.09367371 -151.52507019]
[68.34149933 -156.65922546]
[82.27917480 -159.39849854]
[82.05584717 -174.39683533]
[81.83251953 -189.39517212]
[81.60919189 -204.39350891]
[81.38586426 -219.39184570]
[81.16253662 -234.39018250]
[80.93920898 -249.38851929]
[80.71588135 -264.38687134]
[72.77397919 -278.07031250]
[80.32093048 -290.91137695]
[65.80739594 -295.13613892]
[53.18484116 -303.45254517]
[43.57566071 -315.12109375]
[37.83429337 -329.10421753]
[36.47126007 -344.15856934]
[39.60776138 -358.94552612]
[46.96489716 -372.15020752]
[57.88848114 -382.59851074]
[71.40718842 -389.36132812]
[86.31895447 -391.83737183]
[101.29782867 -389.80642700]
[115.01190186 -383.44909668]
[126.24172974 -373.33065796]
[133.98875427 -360.35086060]
[137.56413269 -345.66387939]
[136.64991760 -330.57562256]
[131.32743835 -316.42773438]
[122.06993103 -304.47824097]
[109.70058441 -295.78970337]
[95.31926727 -291.13470459]
[103.24520111 -278.52401733]
[95.71421814 -264.61019897]
[95.93754578 -249.61184692]
[96.16087341 -234.61351013]
[96.38420105 -219.61517334]
[96.60752869 -204.61683655]
[96.83085632 -189.61849976]
[97.05418396 -174.62016296]
[97.27751160 -159.62182617]
[112.81208038 -156.89146423]
[127.52674866 -151.19950867]
[140.86250305 -142.76033020]
[152.31233215 -131.89270020]
[161.44055176 -119.00776672]
[167.89933777 -104.59345245]
[171.44200134 -89.19604492]
[171.93240356 -73.39945221]
[169.35020447 -57.80306625]
[163.79164124 -42.99900818]
[155.46604919 -29.54968452]
[144.68785095 -17.96637917]
[131.86480713 -8.68984318]
[117.48246765 -2.07351351]
[102.08589935 1.62994897]
[102.75568390 16.61498833]
[112.98334503 30.87549019]
[104.36184692 47.14667130]
[105.25466156 62.12007904]
[106.14747620 77.09348297]
[107.04029846 92.06688690]
[108.48971558 106.99669647]
[110.49372864 121.86222839]
[112.49774170 136.72775269]
[114.50175476 151.59327698]
[118.74962616 159.67990112]
[116.42323303 166.69487000]
[118.20570374 181.58857727]
[119.98816681 196.48229980]
[121.77062988 211.37602234]
[123.55310059 226.26972961]
[125.33556366 241.16345215]
[127.11803436 256.05715942]
[129.12203979 270.92269897]
[131.34716797 285.75674438]
[133.57228088 300.59078979]
[135.79739380 315.42483521]
[150.75559998 314.22775269]
[165.76074219 314.06552124]
[180.74131775 314.93887329]
[195.62596130 316.84368896]
[210.34370422 319.77090454]
[224.82443237 323.70651245]
[238.99914551 328.63180542]
[252.80026245 334.52331543]
[266.16204834 341.35290527]
[279.02078247 349.08810425]
[291.31524658 357.69198608]
[302.98681641 367.12359619]
[313.97985840 377.33798218]
[324.24203491 388.28643799]
[333.72436523 399.91680908]
[342.38174438 412.17367554]
[350.17285156 424.99862671]
[357.06060791 438.33053589]
[363.01214600 452.10586548]
[367.99911499 466.25897217]
[371.99777222 480.72244263]
[374.98904419 495.42730713]
[376.95867920 510.30349731]
[377.89727783 525.28015137]
[377.80038452 540.28582764]
[376.66845703 555.24908447]
[374.50689697 570.09863281]
[371.32601929 584.76361084]
[367.14093018 599.17425537]
[361.97158813 613.26177979]
[355.84268188 626.95910645]
[348.78335571 640.20098877]
[340.82730103 652.92425537]
[332.01239014 665.06829834]
[322.38064575 676.57525635]
[311.97796631 687.39031982]
[300.85391235 697.46185303]
[289.06155396 706.74200439]
[276.65701294 715.18640137]
[263.69946289 722.75488281]
[250.25059509 729.41143799]
[236.37454224 735.12420654]
[222.13742065 739.86602783]
[207.60708618 743.61431885]
[192.85276794 746.35125732]
[177.94477844 748.06372070]
[162.95416260 748.74359131]
[147.95236206 748.38757324]
[133.01086426 746.99743652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 161]
[41 160]
[42 159]
[43 158]
[46 157]
[47 156]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[53 149]
[54 148]
[55 147]
[56 146]
[62 145]
[63 144]
[64 143]
[65 142]
[68 140]
[69 139]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[95 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
