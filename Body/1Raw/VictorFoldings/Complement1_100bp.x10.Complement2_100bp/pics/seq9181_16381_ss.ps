%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[299.77804565 414.96533203]
[290.99743652 402.80389404]
[282.12655640 390.70812988]
[273.16586304 378.67877197]
[264.20516968 366.64938354]
[255.24446106 354.61999512]
[242.35937500 354.55822754]
[231.70346069 346.97314453]
[227.29698181 334.45141602]
[230.95999146 321.49005127]
[222.17938232 309.32858276]
[213.39877319 297.16714478]
[204.61817932 285.00567627]
[190.89483643 279.21609497]
[189.08970642 263.49819946]
[180.30911255 251.33673096]
[178.00517273 266.15875244]
[166.79603577 276.12646484]
[151.80636597 276.68276978]
[139.88922119 267.57333374]
[136.49296570 252.96287537]
[143.17033386 239.53108215]
[156.86851501 233.41880798]
[171.32640076 237.42155457]
[163.85865784 224.41261292]
[150.81210327 217.22671509]
[150.65197754 201.40632629]
[143.18423462 188.39736938]
[135.71649170 175.38842773]
[119.30970764 171.69302368]
[110.47810364 156.98527527]
[115.10543823 140.11497498]
[107.44483948 127.21864319]
[99.78424072 114.32231903]
[87.68491364 107.31533051]
[87.31942749 93.33827972]
[79.65883636 80.44194794]
[74.08896637 76.87991333]
[71.53718567 71.80197144]
[71.96872711 67.04563141]
[58.51038361 58.72795868]
[59.10604477 43.84526825]
[51.83281708 30.72657394]
[44.55958557 17.60788155]
[29.26868820 17.23954773]
[16.30080605 9.31926727]
[9.08643150 -3.94041514]
[9.47511864 -18.93057442]
[17.26237679 -31.62798309]
[9.98914719 -44.74667740]
[2.71591759 -57.86537170]
[3.40726018 -42.88131332]
[1.20202398 -28.04430008]
[-3.81734610 -13.90902710]
[-11.46319771 -1.00395274]
[-21.44968414 10.18845940]
[-33.40345383 19.24977112]
[-46.87760925 25.84121895]
[-61.36840439 29.71637917]
[-76.33409119 30.73037338]
[-91.21517181 28.84529305]
[-105.45529938 24.13161278]
[-118.52209473 16.76556015]
[-129.92704773 7.02251577]
[-139.24378967 -4.73326588]
[-146.12399292 -18.06228828]
[-150.31044006 -32.46623611]
[-151.64660645 -47.40660477]
[-150.08256531 -62.32484055]
[-145.67675781 -76.66320801]
[-138.59393311 -89.88567352]
[-129.09884644 -101.49788666]
[-117.54651642 -111.06571960]
[-104.36881256 -118.23148346]
[-90.05839539 -122.72727203]
[-75.15028381 -124.38500977]
[-60.20181274 -123.14271545]
[-45.77185059 -119.04683685]
[-32.39987183 -112.25050354]
[-20.58579445 -103.00779724]
[-10.77129650 -91.66426849]
[-3.32580519 -78.64956665]
[-4.21862125 -93.62297058]
[-5.11143684 -108.59638214]
[-6.00425291 -123.56978607]
[-16.49818039 -138.70117188]
[-8.03758049 -154.07600403]
[-9.15322876 -169.03445435]
[-10.26887798 -183.99290466]
[-11.38452625 -198.95135498]
[-20.12680626 -212.13783264]
[-13.35754681 -225.40533447]
[-14.47319603 -240.36378479]
[-29.21246338 -243.71719360]
[-42.30763626 -251.26754761]
[-52.59430695 -262.34347534]
[-59.15778351 -275.96008301]
[-61.41445160 -290.90661621]
[-59.16364670 -305.85403442]
[-52.60551071 -319.47320557]
[-42.32318878 -330.55316162]
[-29.23097610 -338.10864258]
[-14.49302578 -341.46786499]
[0.58017576 -340.33206177]
[14.64832878 -334.80227661]
[26.46050262 -325.37020874]
[34.96636581 -312.87454224]
[39.40958405 -298.42639160]
[39.39506912 -283.31045532]
[34.92411423 -268.87084961]
[26.39426804 -256.39154053]
[14.56400394 -246.98217773]
[0.48525766 -241.47943115]
[1.60090637 -226.52098083]
[10.26338673 -214.40443420]
[3.57392693 -200.06700134]
[4.68957567 -185.10855103]
[5.80522442 -170.15010071]
[6.92087317 -155.19165039]
[15.87922192 -147.06301880]
[16.93110847 -134.61001587]
[8.96915245 -124.46260071]
[9.86196899 -109.48919678]
[10.75478458 -94.51579285]
[11.64760017 -79.54238129]
[15.83461189 -65.13860321]
[23.10784149 -52.01990891]
[30.38107109 -38.90121460]
[45.27572250 -38.77904510]
[58.19533157 -31.16723442]
[65.61931610 -18.02376366]
[65.46668243 -2.82924151]
[57.67827988 10.33465099]
[64.95150757 23.45334435]
[72.22473907 36.57204056]
[85.16284943 43.95137405]
[85.08741760 59.77239990]
[92.55516052 72.78135681]
[100.21575928 85.67768097]
[112.31508636 92.68466949]
[112.68057251 106.66172028]
[120.34116364 119.55805206]
[128.00177002 132.45437622]
[141.35000610 134.25411987]
[151.08244324 143.28131104]
[153.79838562 156.07606506]
[148.72544861 167.92068481]
[156.19319153 180.92962646]
[163.66093445 193.93858337]
[177.24162292 202.05496216]
[176.86759949 216.94487000]
[184.33534241 229.95382690]
[192.47056580 242.55613708]
[201.25115967 254.71759033]
[215.60253906 261.37704468]
[216.77963257 276.22506714]
[225.56022644 288.38653564]
[234.34083557 300.54797363]
[243.12144470 312.70944214]
[260.43942261 315.18075562]
[270.41552734 329.13754272]
[267.27383423 345.65930176]
[276.23452759 357.68869019]
[285.19522095 369.71804810]
[294.15591431 381.74743652]
[301.79208374 386.76013184]
[303.15890503 394.02328491]
[311.93951416 406.18475342]
[325.22583008 399.16906738]
[339.35928345 394.07083130]
[354.06472778 390.98928833]
[369.05593872 389.98443604]
[384.04110718 391.07580566]
[398.72851562 394.24212646]
[412.83230591 399.42184448]
[426.07794189 406.51406860]
[438.20755005 415.38076782]
[448.98507690 425.84933472]
[458.20068359 437.71603394]
[465.67504883 450.74984741]
[471.26263428 464.69708252]
[474.85467529 479.28622437]
[476.38128662 494.23330688]
[475.81271362 509.24740601]
[473.16003418 524.03625488]
[468.47488403 538.31195068]
[461.84851074 551.79663086]
[453.40982056 564.22784424]
[443.32312012 575.36358643]
[431.78472900 584.98706055]
[419.01925659 592.91101074]
[405.27517700 598.98114014]
[390.82003784 603.07934570]
[375.93521118 605.12585449]
[360.91043091 605.08074951]
[346.03814697 602.94494629]
[331.60787964 598.76007080]
[317.90048218 592.60754395]
[305.18280029 584.60711670]
[293.70239258 574.91455078]
[283.68270874 563.71850586]
[275.31878662 551.23687744]
[268.77343750 537.71264648]
[264.17407227 523.40905762]
[261.61019897 508.60458374]
[261.13174438 493.58737183]
[262.74804688 478.64968872]
[266.42758179 464.08236694]
[272.09878540 450.16894531]
[279.65121460 437.18020630]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 165]
[4 164]
[5 163]
[6 162]
[10 159]
[11 158]
[12 157]
[13 156]
[15 154]
[16 153]
[24 152]
[25 151]
[27 149]
[28 148]
[29 147]
[32 143]
[33 142]
[34 141]
[36 139]
[37 138]
[40 137]
[42 135]
[43 134]
[44 133]
[49 128]
[50 127]
[51 126]
[82 125]
[83 124]
[84 123]
[85 122]
[87 119]
[88 118]
[89 117]
[90 116]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
