%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAAGAAGCUUAAACGUUAAGUUAUACUUUUAGUGGAGCCUCGACCAUUUUUCUCCGGAUUGGGGACAGAAAUCUAAAUGUCAGGUUACGAAGUGAGUCxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[152.74095154 694.19854736]
[139.28044128 687.56927490]
[126.23630524 680.15417480]
[113.65435028 671.97937012]
[101.57877350 663.07354736]
[90.05199432 653.46801758]
[79.11449432 643.19653320]
[68.80470276 632.29510498]
[59.15882111 620.80206299]
[50.21073914 608.75775146]
[41.99188995 596.20452881]
[34.53113556 583.18646240]
[27.85468292 569.74926758]
[21.98598671 555.94018555]
[16.94566154 541.80767822]
[12.75140858 527.40136719]
[9.41796207 512.77191162]
[6.95703077 497.97067261]
[5.37725925 483.04962158]
[4.68419647 468.06121826]
[4.88027620 453.05807495]
[5.96480989 438.09289551]
[7.93398857 423.21823120]
[10.78089523 408.48635864]
[14.49552917 393.94900513]
[19.06484413 379.65725708]
[24.47278786 365.66128540]
[30.70036697 352.01025391]
[37.72570419 338.75216675]
[45.52412796 325.93350220]
[54.06823730 313.59936523]
[63.32802963 301.79306030]
[73.27097321 290.55603027]
[83.86214447 279.92773438]
[95.06433868 269.94558716]
[106.83821106 260.64456177]
[119.14241028 252.05738831]
[131.93370056 244.21418762]
[145.16717529 237.14253235]
[158.79634094 230.86726379]
[153.34097290 216.89447021]
[147.88562012 202.92167664]
[142.43026733 188.94886780]
[136.97491455 174.97607422]
[130.19491577 161.59580994]
[122.15373993 148.93327332]
[114.11257172 136.27075195]
[106.07139587 123.60823059]
[98.03022766 110.94570160]
[93.71386719 125.31125641]
[80.56964874 132.53825378]
[66.12716675 128.48674011]
[58.65973663 115.47760010]
[62.44504166 100.96307373]
[75.31468201 93.25773621]
[89.89557648 96.77499390]
[83.01616669 83.44556427]
[76.13675690 70.11613464]
[69.25733948 56.78670502]
[54.47017288 51.89003372]
[47.68335342 38.27409744]
[52.44270706 24.20696640]
[45.56329727 10.87753773]
[31.50958061 16.16994858]
[16.93647194 19.79500008]
[2.04105282 21.70367050]
[-12.97523212 21.87014389]
[-27.90930367 20.29217148]
[-42.55920029 16.99109268]
[-56.72679138 12.01154995]
[-70.22048187 5.42088747]
[-82.85778046 -2.69176507]
[-94.46778870 -12.21669197]
[-104.89349365 -23.02508163]
[-113.99389648 -34.97076035]
[-121.64591980 -47.89217758]
[-127.74608612 -61.61458588]
[-132.21189880 -75.95240784]
[-134.98295593 -90.71173096]
[-136.02178955 -105.69296265]
[-135.31433105 -120.69350433]
[-132.87017822 -135.51046753]
[-128.72236633 -149.94349670]
[-122.92700195 -163.79737854]
[-115.56244659 -176.88478088]
[-106.72830963 -189.02868652]
[-96.54405212 -200.06486511]
[-85.14740753 -209.84408569]
[-72.69251251 -218.23408508]
[-59.34778976 -225.12138367]
[-45.29372025 -230.41285706]
[-30.72037125 -234.03694153]
[-15.82482433 -235.94461060]
[-0.80852884 -236.11009216]
[14.12543869 -234.53111267]
[28.77511215 -231.22906494]
[42.94237137 -226.24856567]
[56.43562317 -219.65701294]
[69.07238007 -211.54351807]
[80.68175507 -202.01780701]
[91.10673523 -191.20872498]
[100.20633698 -179.26243591]
[107.85749817 -166.34051514]
[113.95674896 -152.61769104]
[118.42160797 -138.27958679]
[121.19168091 -123.52006531]
[122.22950745 -108.53876495]
[121.52106476 -93.53827667]
[119.07592010 -78.72146606]
[114.92714691 -64.28871918]
[109.13085175 -50.43521881]
[101.76542664 -37.34832001]
[92.93047333 -25.20500183]
[82.74548340 -14.16949368]
[71.34818268 -4.39103699]
[58.89272690 3.99812484]
[65.77214050 17.32755470]
[79.99543762 21.59759903]
[87.16202545 35.01753616]
[82.58676910 49.90729141]
[89.46618652 63.23672104]
[96.34559631 76.56614685]
[103.22500610 89.89557648]
[110.69274902 102.90453339]
[118.73392487 115.56705475]
[126.77509308 128.22958374]
[134.81626892 140.89210510]
[142.85743713 153.55462646]
[142.63479614 138.55628967]
[148.45677185 124.73222351]
[159.34226990 114.41205597]
[173.45689392 109.33490753]
[188.42207336 110.35635376]
[201.71592712 117.30428314]
[211.09819031 129.00784302]
[214.98779297 143.49476624]
[212.72926331 158.32376099]
[204.70321655 170.99588013]
[192.26217651 179.37564087]
[177.50268555 182.05091858]
[162.91195679 178.57087708]
[150.94770813 169.52072144]
[156.40306091 183.49351501]
[161.85841370 197.46630859]
[167.31378174 211.43911743]
[172.76913452 225.41191101]
[187.04475403 220.79240417]
[201.56895447 217.02671814]
[216.29072571 214.12805176]
[231.15837097 212.10662842]
[246.11965942 210.96951294]
[261.12200928 210.72071838]
[276.11279297 211.36109924]
[291.03927612 212.88842773]
[305.84906006 215.29734802]
[320.49014282 218.57936096]
[334.91110229 222.72296143]
[349.06124878 227.71359253]
[362.89086914 233.53373718]
[376.35144043 240.16293335]
[389.39566040 247.57789612]
[401.97766113 255.75257874]
[414.05331421 264.65829468]
[425.58020020 274.26373291]
[436.51779175 284.53515625]
[446.82766724 295.43649292]
[456.47363281 306.92944336]
[465.42184448 318.97363281]
[473.64080811 331.52679443]
[481.10165405 344.54479980]
[487.77822876 357.98193359]
[493.64706421 371.79098511]
[498.68750000 385.92346191]
[502.88186646 400.32971191]
[506.21545410 414.95913696]
[508.67651367 429.76037598]
[510.25640869 444.68139648]
[510.94961548 459.66979980]
[510.75366211 474.67294312]
[509.66925049 489.63815308]
[507.70019531 504.51281738]
[504.85342407 519.24468994]
[501.13891602 533.78210449]
[496.56973267 548.07391357]
[491.16192627 562.06988525]
[484.93444824 575.72094727]
[477.90924072 588.97912598]
[470.11093140 601.79785156]
[461.56692505 614.13208008]
[452.30722046 625.93847656]
[442.36437988 637.17559814]
[431.77331543 647.80395508]
[420.57119751 657.78625488]
[408.79739380 667.08734131]
[396.49328613 675.67462158]
[383.70205688 683.51794434]
[370.46865845 690.58972168]
[356.83953857 696.86511230]
[342.86260986 702.32208252]
[328.58697510 706.94146729]
[314.06274414 710.70703125]
[299.34091187 713.60552979]
[284.47326660 715.62683105]
[269.51196289 716.76379395]
[254.50959778 717.01251221]
[239.51884460 716.37194824]
[224.59237671 714.84448242]
[209.78259277 712.43548584]
[195.14154053 709.15332031]
[180.72064209 705.00958252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 146]
[41 145]
[42 144]
[43 143]
[44 142]
[45 128]
[46 127]
[47 126]
[48 125]
[49 124]
[56 123]
[57 122]
[58 121]
[59 120]
[62 117]
[63 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
