%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[236.54013062 285.18930054]
[246.35307312 273.82247925]
[236.18952942 262.79061890]
[221.87545776 258.67279053]
[218.21533203 243.28077698]
[203.90126038 239.16296387]
[200.24113464 223.77095032]
[190.07759094 212.73907471]
[179.91404724 201.70719910]
[167.84452820 200.89891052]
[159.28681946 191.79124451]
[159.22607422 178.89321899]
[149.22790527 167.71124268]
[139.22972107 156.52926636]
[132.42796326 153.63827515]
[129.16746521 145.10557556]
[119.33687592 133.77598572]
[109.50629425 122.44639587]
[99.67571259 111.11680603]
[97.53811646 125.96370697]
[85.61138153 135.06057739]
[70.72768402 133.19630432]
[61.41307831 121.43882751]
[63.00340271 106.52336884]
[74.58763885 96.99417877]
[89.52896881 98.30957031]
[80.74836731 86.14811707]
[71.96776581 73.98666382]
[63.18716049 61.82520676]
[65.68906403 76.61508179]
[64.88298035 91.59340668]
[60.80825043 106.02935791]
[53.66368103 119.21856689]
[43.79788208 130.51750183]
[31.69221687 139.37486267]
[17.93735313 145.35848999]
[3.20442200 148.17642212]
[-11.78772640 147.69114685]
[-26.30759239 143.92637634]
[-39.64671707 137.06578064]
[-51.15425873 127.44411469]
[-60.26873398 115.53083801]
[-66.54543304 101.90721130]
[-69.67809296 87.23797607]
[-69.51387787 72.23887634]
[-66.06078339 57.64175034]
[-59.48730850 44.15881729]
[-50.11418152 32.44794846]
[-38.39873886 23.08053780]
[-24.91260147 16.51364326]
[-10.31378841 13.06767941]
[4.68539095 12.91078186]
[19.35309410 16.05060387]
[32.97365189 22.33395004]
[44.88248444 31.45424080]
[54.49488068 42.96096039]
[50.95520782 28.38458443]
[47.41553497 13.80820847]
[36.64020920 2.22360945]
[41.15563965 -11.97005749]
[37.61596680 -26.54643250]
[34.07629395 -41.12280655]
[30.53662109 -55.69918442]
[26.99694824 -70.27555847]
[23.88986969 -73.30871582]
[22.09056282 -76.81970215]
[21.58866119 -80.33872223]
[22.22228050 -83.44760132]
[23.70799637 -85.82473755]
[21.04220009 -100.58595276]
[18.37640572 -115.34717560]
[15.71060944 -130.10838318]
[12.71583557 -144.80639648]
[9.39357567 -159.43385315]
[6.07131624 -174.06130981]
[2.74905682 -188.68878174]
[-0.57320273 -203.31623840]
[-3.89546227 -217.94369507]
[-7.21772194 -232.57115173]
[-22.22163391 -231.63372803]
[-37.18161011 -233.11537170]
[-51.71015167 -236.97772217]
[-65.43093109 -243.12071228]
[-77.98854828 -251.38523865]
[-89.05773926 -261.55722046]
[-98.35176849 -273.37319946]
[-105.62991333 -286.52706909]
[-110.70364380 -300.67816162]
[-113.44153595 -315.45993042]
[-113.77268219 -330.48944092]
[-111.68849945 -345.37744141]
[-107.24297333 -359.73828125]
[-100.55125427 -373.19995117]
[-91.78667450 -385.41381836]
[-81.17625427 -396.06347656]
[-68.99482727 -404.87307739]
[-55.55792999 -411.61444092]
[-41.21360397 -416.11291504]
[-26.33340263 -418.25204468]
[-11.30276108 -417.97637939]
[3.48899126 -415.29306030]
[17.65871429 -410.27157593]
[30.83937454 -403.04202271]
[42.68956757 -393.79168701]
[52.90233612 -382.76010132]
[61.21315384 -370.23306274]
[67.40674591 -356.53506470]
[71.32267761 -342.02087402]
[72.85953522 -327.06646729]
[71.97748566 -312.05920410]
[68.69939423 -297.38778687]
[63.11016846 -283.43225098]
[55.35457993 -270.55410767]
[45.63351440 -259.08688354]
[34.19877625 -249.32763672]
[21.34654999 -241.52914429]
[7.40973854 -235.89341736]
[10.73199749 -221.26596069]
[14.05425739 -206.63848877]
[17.37651634 -192.01103210]
[20.69877625 -177.38357544]
[24.02103615 -162.75611877]
[27.34329605 -148.12864685]
[30.11588669 -145.95033264]
[31.97113609 -142.32086182]
[32.23848724 -137.68600464]
[30.47182655 -132.77418518]
[33.13762283 -118.01296997]
[35.80341721 -103.25174713]
[38.46921158 -88.49053192]
[41.57332230 -73.81523132]
[45.11299515 -59.23885727]
[48.65266800 -44.66247940]
[52.19234085 -30.08610535]
[55.73201370 -15.50972939]
[66.25415802 -4.96773100]
[61.99190903 10.26853561]
[65.53158569 24.84491158]
[69.07125854 39.42128754]
[75.34861755 53.04460144]
[84.12921906 65.20606232]
[92.90982056 77.36751556]
[101.69042969 89.52896881]
[111.00531006 101.28622437]
[120.83589172 112.61581421]
[130.66647339 123.94540405]
[140.49705505 135.27499390]
[150.41169739 146.53109741]
[160.40988159 157.71307373]
[170.40805054 168.89505005]
[188.02984619 174.23863220]
[190.94592285 191.54364014]
[201.10946655 202.57553101]
[211.27301025 213.60740662]
[226.31405640 218.51429749]
[229.24720764 233.11723328]
[244.28825378 238.02412415]
[247.22140503 252.62707520]
[257.38494873 263.65893555]
[269.51632690 254.80867004]
[282.57751465 247.39900208]
[296.39822388 241.52651978]
[310.79824829 237.26777649]
[325.58987427 234.67831421]
[340.58029175 233.79190063]
[355.57400513 234.62005615]
[370.37561035 237.15200806]
[384.79208374 241.35475159]
[398.63549805 247.17347717]
[411.72537231 254.53233337]
[423.89105225 263.33538818]
[434.97393799 273.46786499]
[444.82955933 284.79769897]
[453.32940674 297.17712402]
[460.36264038 310.44479370]
[465.83761597 324.42773438]
[469.68295288 338.94363403]
[471.84848022 353.80325317]
[472.30599976 368.81286621]
[471.04953003 383.77679443]
[468.09545898 398.49993896]
[463.48229980 412.79037476]
[457.27020264 426.46179199]
[449.54013062 439.33593750]
[440.39288330 451.24499512]
[429.94769287 462.03369141]
[418.34075928 471.56137085]
[405.72338867 479.70382690]
[392.26007080 486.35491943]
[378.12631226 491.42788696]
[363.50643921 494.85665894]
[348.59097290 496.59649658]
[333.57443237 496.62472534]
[318.65252686 494.94097900]
[304.01983643 491.56723022]
[289.86712646 486.54739380]
[276.37890625 479.94699097]
[263.73101807 471.85205078]
[252.08831787 462.36807251]
[241.60264587 451.61871338]
[232.41067505 439.74414062]
[224.63226318 426.89916992]
[218.36878967 413.25119019]
[213.70191956 398.97821045]
[210.69252014 384.26626587]
[209.37979126 369.30718994]
[209.78086853 354.29595947]
[211.89051819 339.42828369]
[215.68122864 324.89804077]
[221.10359192 310.89462280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 159]
[3 158]
[5 156]
[7 154]
[8 153]
[9 152]
[12 150]
[13 149]
[14 148]
[16 147]
[17 146]
[18 145]
[19 144]
[26 143]
[27 142]
[28 141]
[29 140]
[56 139]
[57 138]
[58 137]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[69 130]
[70 129]
[71 128]
[72 127]
[73 123]
[74 122]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
