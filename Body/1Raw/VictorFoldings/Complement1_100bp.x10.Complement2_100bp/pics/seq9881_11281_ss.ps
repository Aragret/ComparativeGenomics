%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[135.96228027 652.22100830]
[126.05068970 640.94934082]
[117.15922546 628.85675049]
[109.35554504 616.03521729]
[102.69903564 602.58227539]
[97.24037170 588.60046387]
[93.02108002 574.19604492]
[90.07329559 559.47869873]
[88.41942596 544.56048584]
[88.07208252 529.55480957]
[89.03389740 514.57604980]
[91.29754639 499.73806763]
[94.84580994 485.15386963]
[99.65167999 470.93441772]
[105.67858124 457.18792725]
[112.88064575 444.01904297]
[121.20305634 431.52795410]
[130.58247375 419.80978394]
[140.94750977 408.95364380]
[152.21929932 399.04223633]
[164.31202698 390.15093994]
[177.13368225 382.34744263]
[190.58666992 375.69113159]
[185.13131714 361.71832275]
[179.67594910 347.74551392]
[174.22059631 333.77273560]
[168.76524353 319.79992676]
[163.30987549 305.82711792]
[149.60800171 300.10052490]
[143.87643433 286.00784302]
[149.97592163 271.67486572]
[144.52056885 257.70208740]
[139.06520081 243.72927856]
[133.60984802 229.75648499]
[128.15449524 215.78367615]
[121.15550232 229.05072021]
[106.86660767 233.61444092]
[93.47314453 226.86054993]
[88.64748383 212.65797424]
[95.15399170 199.14260864]
[109.26544189 194.05664062]
[122.89750671 200.31288147]
[118.71049500 185.90910339]
[114.52349091 171.50531006]
[110.33647919 157.10153198]
[106.14946747 142.69775391]
[101.96245575 128.29397583]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.21177673 63.08579636]
[72.96505737 49.03332520]
[69.51956177 46.39087677]
[67.31578827 43.11858368]
[66.39926910 39.68413925]
[66.65897369 36.52199173]
[67.85168457 33.98514938]
[63.45068359 19.64529991]
[58.94305420 5.33861399]
[54.32904434 -8.93411922]
[49.71503448 -23.20685196]
[44.09763718 -30.40981293]
[45.14029312 -37.72655106]
[40.73929596 -52.06639862]
[36.33829880 -66.40624237]
[31.83066940 -80.71292877]
[27.21665955 -94.98566437]
[12.49492550 -92.02453613]
[-2.46839571 -90.76089478]
[-17.47822571 -91.21121216]
[-32.33887863 -93.36962128]
[-46.85661697 -97.20797729]
[-60.84217453 -102.67625427]
[-74.11322021 -109.70314026]
[-86.49673462 -118.19704437]
[-97.83126831 -128.04721069]
[-107.96907043 -139.12524414]
[-116.77796173 -151.28671265]
[-124.14309692 -164.37306213]
[-129.96846008 -178.21368408]
[-134.17811584 -192.62814331]
[-136.71716309 -207.42851257]
[-137.55252075 -222.42184448]
[-136.67327881 -237.41267395]
[-134.09091187 -252.20553589]
[-129.83908081 -266.60760498]
[-123.97322845 -280.43112183]
[-116.56981659 -293.49584961]
[-107.72536469 -305.63150024]
[-97.55518341 -316.67980957]
[-86.19185638 -326.49676514]
[-73.78353119 -334.95437622]
[-60.49197388 -341.94238281]
[-46.49047089 -347.36968994]
[-31.96155739 -351.16552734]
[-17.09464836 -353.28042603]
[-2.08356452 -353.68679810]
[12.87599277 -352.37936401]
[27.58899689 -349.37515259]
[41.86363220 -344.71334839]
[55.51380157 -338.45468140]
[68.36154175 -330.68081665]
[80.23936462 -321.49304199]
[90.99240875 -311.01116943]
[100.48049164 -299.37182617]
[108.57991791 -286.72677612]
[115.18509674 -273.24087524]
[120.20990753 -259.08993530]
[123.58884430 -244.45845032]
[125.27786255 -229.53717041]
[125.25493622 -214.52059937]
[123.52036285 -199.60453796]
[120.09675598 -184.98342896]
[115.02876282 -170.84790039]
[108.38243866 -157.38223267]
[100.24443817 -144.76197815]
[90.72085571 -133.15168762]
[79.93585205 -122.70269012]
[68.03002930 -113.55123138]
[55.15860748 -105.81661224]
[41.48939514 -99.59967804]
[46.10340118 -85.32694244]
[51.15197372 -79.92937469]
[50.67814636 -70.80724335]
[55.07914352 -56.46739578]
[59.48014069 -42.12754822]
[63.98777008 -27.82086182]
[68.60177612 -13.54812813]
[73.21578979 0.72460479]
[78.26435852 6.12217045]
[77.79052734 15.24430275]
[82.19152832 29.58415031]
[87.01752472 43.78660583]
[92.26424408 57.83907700]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[119.80137634 96.45458221]
[134.75292969 95.24997711]
[145.12771606 106.08342743]
[143.27784729 120.96892548]
[130.56695557 128.93342590]
[116.36623383 124.10695648]
[120.55324554 138.51074219]
[124.74025726 152.91452026]
[128.92727661 167.31829834]
[133.11427307 181.72209167]
[137.30128479 196.12586975]
[142.12728882 210.32832336]
[147.58264160 224.30111694]
[153.03800964 238.27392578]
[158.49336243 252.24671936]
[163.94871521 266.21951294]
[178.14622498 272.62799072]
[183.47967529 286.87612915]
[177.28268433 300.37176514]
[182.73803711 314.34457397]
[188.19338989 328.31735229]
[193.64875793 342.29016113]
[199.10411072 356.26296997]
[204.55946350 370.23574829]
[218.96369934 366.01586914]
[233.68090820 363.06744385]
[248.59907532 361.41296387]
[263.60467529 361.06500244]
[278.58352661 362.02618408]
[293.42160034 364.28921509]
[308.00595093 367.83685303]
[322.22561646 372.64212036]
[335.97235107 378.66845703]
[349.14154053 385.86996460]
[361.63296509 394.19183350]
[373.35153198 403.57077026]
[384.20809937 413.93536377]
[394.11999512 425.20672607]
[403.01177979 437.29907227]
[410.81582642 450.12039185]
[417.47271729 463.57308960]
[422.93179321 477.55480957]
[427.15145874 491.95910645]
[430.09967041 506.67633057]
[431.75396729 521.59454346]
[432.10171509 536.60015869]
[431.14031982 551.57897949]
[428.87710571 566.41699219]
[425.32922363 581.00134277]
[420.52377319 595.22088623]
[414.49725342 608.96759033]
[407.29556274 622.13665771]
[398.97351074 634.62799072]
[389.59442139 646.34643555]
[379.22967529 657.20281982]
[367.95816040 667.11456299]
[355.86569214 676.00616455]
[343.04425049 683.81005859]
[329.59146118 690.46673584]
[315.60968018 695.92559814]
[301.20532227 700.14508057]
[286.48803711 703.09307861]
[271.56979370 704.74719238]
[256.56417847 705.09472656]
[241.58538818 704.13311768]
[226.74739075 701.86968994]
[212.16313171 698.32159424]
[197.94360352 693.51593018]
[184.19703674 687.48925781]
[171.02804565 680.28735352]
[158.53684998 671.96514893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 163]
[24 162]
[25 161]
[26 160]
[27 159]
[28 158]
[31 155]
[32 154]
[33 153]
[34 152]
[35 151]
[42 150]
[43 149]
[44 148]
[45 147]
[46 146]
[47 145]
[48 139]
[50 137]
[51 136]
[52 135]
[53 134]
[58 133]
[59 132]
[60 130]
[61 129]
[62 128]
[64 127]
[65 126]
[66 125]
[67 123]
[68 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
