%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGUAAGAUAUGGUUGUGGAUAAGACUAAAAAGCCAGUGGGACUUCAAAUAUAAGAAUAGGAUGGUCCGAAGCCUUAUUAGAGGGUAUAACAUUGAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[38.60877991 601.55432129]
[25.60885239 609.04754639]
[12.16822147 615.71807861]
[-1.66111541 621.54010010]
[-15.82565498 626.49108887]
[-30.27059746 630.55187988]
[-44.94005585 633.70678711]
[-59.77727890 635.94360352]
[-74.72486115 637.25366211]
[-89.72497559 637.63189697]
[-104.71958923 637.07684326]
[-119.65069580 635.59069824]
[-134.46051025 633.17907715]
[-149.09176636 629.85144043]
[-163.48782349 625.62060547]
[-177.59300232 620.50299072]
[-191.35275269 614.51831055]
[-204.71380615 607.68981934]
[-217.62448120 600.04382324]
[-230.03483582 591.60998535]
[-241.89686584 582.42095947]
[-253.16465759 572.51220703]
[-263.79461670 561.92205811]
[-273.74563599 550.69158936]
[-282.97921753 538.86419678]
[-291.45962524 526.48559570]
[-299.15405273 513.60375977]
[-306.03274536 500.26846313]
[-312.06906128 486.53131104]
[-317.23968506 472.44546509]
[-321.52456665 458.06539917]
[-324.90716553 443.44674683]
[-327.37435913 428.64608765]
[-328.91665649 413.72067261]
[-329.52804565 398.72827148]
[-329.20617676 383.72683716]
[-327.95230103 368.77444458]
[-325.77127075 353.92889404]
[-322.67147827 339.24768066]
[-318.66497803 324.78759766]
[-313.76727295 310.60455322]
[-307.99725342 296.75344849]
[-301.37725830 283.28784180]
[-293.93295288 270.25982666]
[-285.69308472 257.71984863]
[-276.68954468 245.71641541]
[-266.95715332 234.29592896]
[-256.53359985 223.50260925]
[-245.45918274 213.37818909]
[-233.77676392 203.96185303]
[-221.53152466 195.29002380]
[-208.77084351 187.39625549]
[-195.54409790 180.31108093]
[-181.90245056 174.06192017]
[-167.89868164 168.67294312]
[-153.58697510 164.16500854]
[-139.02268982 160.55555725]
[-124.26217651 157.85853577]
[-109.36254883 156.08439636]
[-94.38144684 155.23999023]
[-79.37682343 155.32858276]
[-64.40673828 156.34985352]
[-49.52909851 158.29983521]
[-34.80147171 161.17097473]
[-20.28083038 164.95219421]
[-6.02335644 169.62882996]
[7.91579151 175.18280029]
[21.48268509 181.59263611]
[34.62483978 188.83351135]
[42.66601181 176.17098999]
[50.70718384 163.50846863]
[58.74835587 150.84593201]
[59.03958511 135.95417786]
[72.96913910 128.45231628]
[81.01031494 115.78978729]
[89.05149078 103.12725830]
[74.88473511 108.05706787]
[60.27708435 104.64875793]
[49.75488281 93.95841980]
[46.57854462 79.29858398]
[51.73229599 65.21174622]
[63.61918640 56.06288147]
[78.55593872 54.68685532]
[91.91423798 61.51004791]
[99.55486298 74.41821289]
[99.11020660 89.41187286]
[108.77101898 77.93717194]
[118.43183136 66.46247101]
[128.09263611 54.98777008]
[124.51837158 40.00342178]
[130.38415527 25.95187187]
[143.24708557 18.14106369]
[158.06549072 19.38729477]
[167.72630310 7.91259384]
[177.38711548 -3.56210613]
[187.04791260 -15.03680611]
[176.52011108 -25.73726463]
[167.04058838 -37.37655258]
[158.69264221 -49.85238266]
[151.54965210 -63.05511856]
[145.67439270 -76.86872101]
[141.11848450 -91.17180634]
[137.92196655 -105.83866882]
[136.11294556 -120.74040985]
[135.70730591 -135.74607849]
[136.70861816 -150.72378540]
[139.10807800 -165.54191589]
[142.88461304 -180.07023621]
[148.00500488 -194.18109131]
[154.42428589 -207.75044250]
[162.08602905 -220.65905762]
[170.92289734 -232.79347229]
[180.85722351 -244.04707336]
[191.80172729 -254.32095337]
[203.66020203 -263.52481079]
[216.32844543 -271.57775879]
[229.69511414 -278.40905762]
[243.64276123 -283.95861816]
[258.04879761 -288.17773438]
[272.78659058 -291.02926636]
[287.72668457 -292.48818970]
[302.73773193 -292.54168701]
[317.68783569 -291.18927002]
[332.44558716 -288.44284058]
[346.88131714 -284.32650757]
[360.86816406 -278.87646484]
[374.28317261 -272.14062500]
[387.00848389 -264.17816162]
[398.93225098 -255.05903625]
[409.94970703 -244.86343384]
[419.96398926 -233.68090820]
[428.88711548 -221.60977173]
[436.64065552 -208.75610352]
[443.15646362 -195.23283386]
[448.37728882 -181.15884399]
[452.25726318 -166.65779114]
[454.76226807 -151.85713196]
[455.87030029 -136.88694763]
[455.57162476 -121.87876892]
[453.86883545 -106.96451569]
[450.77694702 -92.27524567]
[446.32308960 -77.94005585]
[440.54641724 -64.08493042]
[433.49768066 -50.83162689]
[425.23889160 -38.29661942]
[415.84252930 -26.59006882]
[405.39126587 -15.81485367]
[393.97689819 -6.06567049]
[381.69973755 2.57180285]
[368.66769409 10.02165890]
[354.99530029 16.21842575]
[340.80267334 21.10764503]
[326.21459961 24.64634895]
[311.35925293 26.80343819]
[296.36718750 27.55995750]
[281.37014771 26.90925789]
[266.49993896 24.85705566]
[251.88726807 21.42138863]
[237.66050720 16.63245010]
[223.94471741 10.53232384]
[210.86042786 3.17462206]
[198.52261353 -5.37599564]
[188.86181641 6.09870434]
[179.20100403 17.57340431]
[169.54019165 29.04810524]
[173.29309082 43.43746567]
[167.78819275 57.44318771]
[154.94158936 65.61741638]
[139.56733704 64.64858246]
[129.90652466 76.12328339]
[120.24571991 87.59798431]
[110.58490753 99.07268524]
[101.71401215 111.16843414]
[93.67283630 123.83095551]
[85.63166809 136.49348450]
[84.76528168 152.29095459]
[71.41088104 158.88711548]
[63.36970901 171.54963684]
[55.32853699 184.21215820]
[47.28736496 196.87467957]
[59.42951584 205.69027710]
[71.00011444 215.24369812]
[81.95439911 225.49797058]
[92.24999237 236.41343689]
[101.84704590 247.94786072]
[110.70845032 260.05661011]
[118.79990387 272.69287109]
[126.09011841 285.80770874]
[132.55088806 299.35043335]
[138.15719604 313.26861572]
[142.88739014 327.50842285]
[146.72312927 342.01473999]
[149.64959717 356.73147583]
[151.65547180 371.60168457]
[152.73298645 386.56784058]
[152.87796021 401.57202148]
[152.08985901 416.55618286]
[150.37171936 431.46237183]
[147.73019409 446.23291016]
[144.17547607 460.81063843]
[139.72135925 475.13919067]
[134.38504028 489.16311646]
[128.18719482 502.82815552]
[121.15177155 516.08142090]
[113.30600739 528.87170410]
[104.68025208 541.14941406]
[95.30787659 552.86712646]
[85.22515106 563.97955322]
[74.47106171 574.44360352]
[63.08723450 584.21881104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 180]
[70 179]
[71 178]
[72 177]
[74 175]
[75 174]
[76 173]
[86 172]
[87 171]
[88 170]
[89 169]
[93 165]
[94 164]
[95 163]
[96 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
