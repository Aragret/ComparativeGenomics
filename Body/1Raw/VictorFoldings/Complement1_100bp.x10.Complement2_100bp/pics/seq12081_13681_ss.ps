%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[136.46716309 393.85501099]
[135.12126160 378.90322876]
[135.24740601 363.89154053]
[136.84436035 348.96450806]
[139.89674377 334.26586914]
[144.37518311 319.93722534]
[150.23651123 306.11651611]
[157.42430115 292.93692017]
[165.86932373 280.52529907]
[175.49024963 269.00119019]
[186.19441223 258.47561646]
[197.87873840 249.04995728]
[189.64993286 236.50854492]
[181.42112732 223.96714783]
[173.19232178 211.42575073]
[159.74119568 205.02914429]
[158.63969421 189.24633789]
[145.18858337 182.84973145]
[144.08708191 167.06690979]
[135.21618652 154.97116089]
[125.72728729 143.35389709]
[116.23839569 131.73663330]
[102.94017792 135.52822876]
[89.19958496 133.97425842]
[77.08401489 127.30854797]
[68.41637421 116.53401947]
[64.50077820 103.27178192]
[65.92637634 89.51728058]
[72.47866821 77.34000397]
[63.16378403 65.58274841]
[48.52936172 59.57074738]
[46.69044876 44.79009628]
[37.37556458 33.03284454]
[28.06068420 21.27559280]
[18.74580002 9.51834202]
[5.03204441 12.27437305]
[-8.46685791 8.86911488]
[-19.13051796 0.02238519]
[-24.91429710 -12.49548244]
[-24.74123001 -26.21768188]
[-18.70209312 -38.46700668]
[-27.84089661 -50.36163712]
[-42.38418961 -56.59085846]
[-44.00283432 -71.39725494]
[-53.14163589 -83.29188538]
[-62.28043747 -95.18651581]
[-71.41924286 -107.08115387]
[-80.55804443 -118.97578430]
[-89.69684601 -130.87042236]
[-102.37117004 -122.82878876]
[-115.71531677 -115.95566559]
[-129.62185669 -110.30638123]
[-143.97882080 -105.92642212]
[-158.67059326 -102.85105896]
[-173.57890320 -101.10504913]
[-188.58370972 -100.70245361]
[-203.56419373 -101.64650726]
[-218.39974976 -103.92961884]
[-232.97091675 -107.53340149]
[-247.16038513 -112.42884064]
[-260.85391235 -118.57650757]
[-273.94122314 -125.92692566]
[-286.31695557 -134.42089844]
[-297.88143921 -143.99003601]
[-308.54162598 -154.55729675]
[-318.21163940 -166.03759766]
[-326.81359863 -178.33848572]
[-334.27828979 -191.36096191]
[-340.54562378 -205.00013733]
[-345.56506348 -219.14619446]
[-349.29626465 -233.68527222]
[-351.70916748 -248.50025940]
[-352.78430176 -263.47192383]
[-352.51309204 -278.47967529]
[-350.89764404 -293.40267944]
[-347.95098877 -308.12081909]
[-343.69689941 -322.51556396]
[-338.16955566 -336.47103882]
[-331.41351318 -349.87484741]
[-323.48312378 -362.61907959]
[-314.44229126 -374.60113525]
[-304.36376953 -385.72451782]
[-293.32873535 -395.89968872]
[-281.42599487 -405.04470825]
[-268.75143433 -413.08593750]
[-255.40707397 -419.95864868]
[-241.50036621 -425.60751343]
[-227.14328003 -429.98703003]
[-212.45140076 -433.06195068]
[-197.54304504 -434.80749512]
[-182.53822327 -435.20962524]
[-167.55776978 -434.26513672]
[-152.72227478 -431.98156738]
[-138.15121460 -428.37731934]
[-123.96189880 -423.48147583]
[-110.26857758 -417.33337402]
[-97.18148804 -409.98257446]
[-84.80601501 -401.48822021]
[-73.24180603 -391.91873169]
[-62.58195496 -381.35113525]
[-52.91230011 -369.87054443]
[-44.31069565 -357.56936646]
[-36.84639740 -344.54669189]
[-30.57950592 -330.90731812]
[-25.56048012 -316.76110840]
[-21.82972717 -302.22192383]
[-19.41728973 -287.40682983]
[-18.34259033 -272.43515015]
[-18.61428070 -257.42742920]
[-20.23017502 -242.50444031]
[-23.17726135 -227.78639221]
[-27.43181229 -213.39178467]
[-32.95957184 -199.43649292]
[-39.71603012 -186.03288269]
[-47.64679337 -173.28889465]
[-56.68799973 -161.30712891]
[-66.76685333 -150.18405151]
[-77.80221558 -140.00921631]
[-68.66341400 -128.11459351]
[-59.52460861 -116.21995544]
[-50.38580704 -104.32531738]
[-41.24700546 -92.43068695]
[-32.10820007 -80.53605652]
[-18.21857643 -75.15761566]
[-15.94626331 -59.50044250]
[-6.80746078 -47.60580826]
[9.15537071 -50.11588287]
[24.29304504 -44.19923782]
[34.43944550 -31.38255119]
[36.75100327 -15.10519791]
[30.50305176 0.20345923]
[39.81793594 11.96071053]
[49.13281631 23.71796227]
[58.44770050 35.47521210]
[72.41586304 40.64625931]
[74.92103577 56.26786804]
[84.23591614 68.02511597]
[99.72973633 64.35134888]
[115.27747345 67.78978729]
[127.77722931 77.65442657]
[134.73519897 91.97719574]
[134.76319885 107.90058136]
[127.85565948 122.24773407]
[137.34455872 133.86499023]
[146.83345032 145.48225403]
[148.25106812 130.54939270]
[158.84704590 119.93218231]
[173.77703857 118.48466492]
[186.21525574 126.86862183]
[190.47511292 141.25102234]
[184.60906982 155.05644226]
[171.29898071 161.97320557]
[156.62847900 158.83810425]
[170.66818237 166.13174438]
[171.18110657 181.01751709]
[185.22080994 188.31117249]
[185.73371887 203.19694519]
[193.96252441 215.73834229]
[202.19132996 228.27973938]
[210.42013550 240.82113647]
[223.71827698 233.85504150]
[237.63517761 228.22595215]
[252.03680420 223.98808289]
[266.78448486 221.18223572]
[281.73617554 219.83544922]
[296.74786377 219.96069336]
[311.67501831 221.55674744]
[326.37384033 224.60826111]
[340.70275879 229.08583069]
[354.52380371 234.94633484]
[367.70385742 242.13333130]
[380.11599731 250.57760620]
[391.64065552 260.19784546]
[402.16687012 270.90136719]
[411.59323120 282.58514404]
[419.82901001 295.13659668]
[426.79483032 308.43487549]
[432.42364502 322.35186768]
[436.66122437 336.75360107]
[439.46676636 351.50134277]
[440.81326294 366.45303345]
[440.68771362 381.46475220]
[439.09136963 396.39184570]
[436.03955078 411.09060669]
[431.56170654 425.41943359]
[425.70092773 439.24035645]
[418.51367188 452.42028809]
[410.06915283 464.83224487]
[400.44866943 476.35671997]
[389.74493408 486.88269043]
[378.06097412 496.30883789]
[365.50936890 504.54437256]
[352.21096802 511.50991821]
[338.29382324 517.13848877]
[323.89202881 521.37573242]
[309.14422607 524.18103027]
[294.19247437 525.52722168]
[279.18078613 525.40136719]
[264.25372314 523.80468750]
[249.55502319 520.75262451]
[235.22628784 516.27447510]
[221.40547180 510.41342163]
[208.22570801 503.22589111]
[195.81391907 494.78109741]
[184.28962708 485.16040039]
[173.76385498 474.45645142]
[164.33793640 462.77230835]
[156.10267639 450.22055054]
[149.13737488 436.92199707]
[143.50912476 423.00476074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 160]
[13 159]
[14 158]
[15 157]
[17 155]
[19 153]
[20 145]
[21 144]
[22 143]
[29 137]
[30 136]
[32 134]
[33 133]
[34 132]
[35 131]
[41 126]
[42 125]
[44 123]
[45 122]
[46 121]
[47 120]
[48 119]
[49 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
