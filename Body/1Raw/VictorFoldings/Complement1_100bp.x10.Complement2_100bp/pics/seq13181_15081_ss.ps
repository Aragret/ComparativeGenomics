%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[68.62352753 725.89276123]
[59.50880051 738.09283447]
[46.21669769 745.52520752]
[31.05015755 746.90216064]
[16.63687515 741.98510742]
[5.47403908 731.62603760]
[-0.50432378 717.61962891]
[-0.26242480 702.39263916]
[6.15782547 688.58319092]
[17.64407921 678.58392334]
[32.20627594 674.12719727]
[33.98874283 659.23345947]
[35.77120590 644.33972168]
[37.55367279 629.44604492]
[30.32616425 619.74603271]
[31.68927574 607.32324219]
[41.45442200 598.89685059]
[43.45843506 584.03131104]
[31.50331688 570.16802979]
[33.51255035 551.65112305]
[48.67412567 540.29150391]
[50.23464966 525.37286377]
[51.79516983 510.45425415]
[42.24565506 499.08139038]
[43.61572647 483.92956543]
[55.60939407 473.99026489]
[57.16991806 459.07168579]
[58.17417908 444.10531616]
[58.62078476 429.11196899]
[51.26585388 416.15997314]
[59.41060638 402.59628296]
[59.85721207 387.60293579]
[60.30381775 372.60958862]
[57.73894501 368.58087158]
[57.67765427 362.89816284]
[60.99354553 357.17834473]
[61.88636398 342.20492554]
[62.77917862 327.23153687]
[63.67199326 312.25811768]
[64.56481171 297.28472900]
[65.45762634 282.31130981]
[66.35044098 267.33792114]
[59.38439941 254.17266846]
[67.92938232 240.85749817]
[68.82219696 225.88409424]
[69.71501160 210.91069031]
[70.60783386 195.93728638]
[61.74283600 208.03735352]
[48.54666519 215.16905212]
[33.56728745 215.95533752]
[19.69698715 210.24440002]
[9.61390400 199.13893127]
[5.26492214 184.78321838]
[7.48976231 169.94914246]
[15.85884190 157.50090027]
[28.75622368 149.84208679]
[43.69162369 148.45146179]
[57.78125381 153.59756470]
[68.30461884 164.28675842]
[73.22998047 178.45637512]
[76.76965332 163.88000488]
[80.30932617 149.30363464]
[83.84899902 134.72724915]
[87.38866425 120.15087891]
[90.92833710 105.57450104]
[93.26382446 90.75743866]
[94.26808929 75.79109192]
[95.16090393 60.81768417]
[88.25872040 46.58144760]
[96.73984528 34.33727264]
[97.63265991 19.36386681]
[90.73047638 5.12762928]
[99.21160126 -7.11654568]
[100.10441589 -22.08995056]
[100.88574219 -37.06958771]
[101.55552673 -52.05462646]
[102.22531128 -67.03966522]
[102.89509583 -82.02470398]
[100.15200043 -90.73752594]
[103.68804932 -97.22737122]
[104.58086395 -112.20078278]
[105.47368622 -127.17418671]
[97.51172638 -137.32160950]
[98.56361389 -149.77461243]
[107.52196503 -157.90322876]
[108.63761139 -172.86167908]
[109.75325775 -187.82014465]
[110.86891174 -202.77859497]
[108.84547424 -206.62042236]
[108.21338654 -210.51464844]
[108.81827545 -214.01744080]
[110.37746429 -216.78068542]
[112.52235413 -218.58555603]
[114.52636719 -233.45109558]
[116.53038788 -248.31661987]
[118.53440094 -263.18215942]
[120.53841400 -278.04766846]
[121.98783112 -292.97747803]
[122.88064575 -307.95089722]
[123.77346039 -322.92428589]
[110.08551788 -329.53552246]
[99.97324371 -340.88500977]
[94.97870636 -355.24200439]
[95.86351776 -370.41714478]
[102.49275970 -384.09640503]
[113.85552216 -394.19372559]
[128.21907043 -399.16937256]
[143.39305115 -398.26458740]
[157.06355286 -391.61737061]
[167.14593506 -380.24133301]
[172.10267639 -365.87124634]
[171.17794800 -350.69848633]
[164.51274109 -337.03671265]
[153.12344360 -326.96932983]
[138.74687195 -322.03146362]
[137.85404968 -307.05807495]
[136.96124268 -292.08465576]
[149.74192810 -299.93667603]
[163.90066528 -294.98388672]
[169.00016785 -280.87731934]
[161.28126526 -268.01580811]
[146.43403625 -265.88037109]
[135.40394592 -276.04367065]
[133.39993286 -261.17813110]
[131.39591980 -246.31260681]
[129.39189148 -231.44708252]
[127.38788605 -216.58154297]
[125.82736206 -201.66294861]
[124.71171570 -186.70448303]
[123.59606171 -171.74603271]
[122.48041534 -156.78758240]
[130.94100952 -141.41276550]
[120.44709015 -126.28137207]
[119.55427551 -111.30796051]
[118.66145325 -96.33455658]
[117.88013458 -81.35491943]
[117.21035004 -66.36988068]
[116.54056549 -51.38484192]
[115.87078094 -36.39980316]
[118.71247101 -29.57729912]
[115.07782745 -21.19713593]
[114.18500519 -6.22372961]
[121.15104675 6.94150972]
[112.60606384 20.25668335]
[111.71324921 35.23008728]
[118.67929077 48.39532852]
[110.13430786 61.71050262]
[109.24149323 76.68390656]
[111.98129272 83.54796600]
[108.22228241 91.87308502]
[117.57814789 80.14842224]
[131.27369690 74.03025055]
[146.24929810 74.88539124]
[159.15937805 82.52279663]
[167.11978149 95.23625183]
[168.35212708 110.18553925]
[162.58113098 124.03096008]
[151.09602356 133.67939758]
[136.46261597 136.97537231]
[121.95005035 133.18255615]
[110.80046844 123.14826202]
[105.50471497 109.11417389]
[101.96504211 123.69055176]
[98.42536926 138.26692200]
[94.88569641 152.84330750]
[91.34602356 167.41967773]
[87.80635071 181.99604797]
[85.58123779 196.83009338]
[84.68842316 211.80349731]
[83.79560852 226.77690125]
[82.90278625 241.75032043]
[89.80496979 255.98655701]
[81.32384491 268.23071289]
[80.43103027 283.20413208]
[79.53821564 298.17755127]
[78.64540100 313.15093994]
[77.75258636 328.12435913]
[76.85977173 343.09774780]
[75.96694946 358.07116699]
[75.29716492 373.05621338]
[74.85056305 388.04956055]
[74.40395355 403.04290771]
[81.72694397 417.06732178]
[73.61413574 429.55859375]
[73.16752625 444.55194092]
[85.70876312 436.32287598]
[100.00868988 440.85189819]
[105.52593231 454.80038452]
[98.19338989 467.88601685]
[83.41632843 470.46255493]
[72.08852386 460.63220215]
[70.52799988 475.55081177]
[80.20520020 487.75692749]
[78.41008759 502.86428833]
[66.71377563 512.01477051]
[65.15325165 526.93341064]
[63.59273148 541.85198975]
[72.73342133 549.45361328]
[77.02575684 560.41156006]
[75.51110840 571.96142578]
[68.68045807 581.24896240]
[58.32396317 586.03533936]
[56.31995010 600.90081787]
[63.70736694 617.76818848]
[52.44739151 631.22851562]
[50.66492462 646.12219238]
[48.88245773 661.01593018]
[47.09999084 675.90966797]
[60.19923782 683.67687988]
[69.00148773 696.10424805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 208]
[12 207]
[13 206]
[14 205]
[17 203]
[18 202]
[21 197]
[22 196]
[23 195]
[26 192]
[27 191]
[28 185]
[29 184]
[31 182]
[32 181]
[33 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[42 173]
[44 171]
[45 170]
[46 169]
[47 168]
[60 167]
[61 166]
[62 165]
[63 164]
[64 163]
[65 162]
[66 150]
[67 148]
[68 147]
[70 145]
[71 144]
[73 142]
[74 141]
[75 139]
[76 138]
[77 137]
[78 136]
[80 135]
[81 134]
[82 133]
[85 131]
[86 130]
[87 129]
[88 128]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
