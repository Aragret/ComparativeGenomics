%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[172.78721619 540.19726562]
[171.22668457 525.27862549]
[169.66616821 510.36001587]
[168.10563660 495.44143677]
[166.54512024 480.52282715]
[164.98458862 465.60421753]
[153.92626953 451.97775269]
[161.56399536 435.22225952]
[159.78153992 420.32855225]
[150.58665466 408.61087036]
[156.62924194 393.98907471]
[154.84678650 379.09533691]
[153.06431580 364.20162964]
[151.28184509 349.30792236]
[142.08697510 337.59024048]
[148.12956238 322.96841431]
[138.93469238 311.25076294]
[144.97727966 296.62893677]
[135.78240967 284.91128540]
[141.82499695 270.28945923]
[140.04252625 255.39573669]
[138.26007080 240.50202942]
[136.47760010 225.60830688]
[127.28273010 213.89064026]
[133.32531738 199.26882935]
[129.35322571 184.80430603]
[123.27938843 171.08903503]
[117.20555115 157.37376404]
[111.13172150 143.65849304]
[105.05788422 129.94323730]
[98.98404694 116.22796631]
[88.39193726 111.38560486]
[83.75541687 100.70178986]
[87.45326996 89.65792084]
[81.58431244 75.85374451]
[75.71534729 62.04956436]
[69.84638977 48.24538803]
[64.80234528 43.97114182]
[62.95185471 38.59780884]
[64.01498413 33.94175720]
[58.55962372 19.96895981]
[53.00039673 6.03716135]
[47.33761215 -7.85286570]
[41.67482376 -21.74289322]
[36.01203918 -35.63291931]
[30.34925079 -49.52294540]
[29.26094246 -34.56248093]
[24.67086029 -20.28203201]
[16.83859634 -7.48923588]
[6.20710468 3.09241652]
[-6.62235403 10.86448097]
[-20.92421150 15.38741016]
[-35.88962555 16.40540886]
[-50.67223358 13.86090660]
[-64.43600464 7.89780569]
[-76.40253448 -1.14665163]
[-85.89505768 -12.76095676]
[-92.37671661 -26.28826523]
[-95.48094940 -40.96353912]
[-95.03219604 -55.95682526]
[-91.05583954 -70.42018127]
[-83.77675629 -83.53562927]
[-73.60662079 -94.56142426]
[-61.12059021 -102.87401581]
[-47.02482224 -108.00327301]
[-32.11649704 -109.65912628]
[-17.23875427 -107.74791718]
[-3.23299837 -102.37773895]
[9.10867405 -93.85229492]
[19.08828163 -82.65374756]
[26.14181900 -69.41442871]
[25.69521332 -84.40777588]
[25.24860573 -99.40113068]
[24.57882118 -114.38616943]
[23.68600464 -129.35957336]
[22.79319000 -144.33297729]
[21.90037346 -159.30638123]
[21.00755882 -174.27978516]
[20.11474228 -189.25320435]
[16.79885101 -194.97302246]
[16.86014175 -200.65573120]
[19.42501259 -204.68444824]
[18.97840691 -219.67779541]
[18.53180122 -234.67114258]
[7.48421049 -224.52467346]
[-7.50747395 -225.02407837]
[-17.85533524 -235.88325500]
[-17.63164711 -250.88159180]
[-6.96455050 -261.42733765]
[8.03535843 -261.47943115]
[18.77507210 -251.00891113]
[19.66788864 -265.98229980]
[20.56070518 -280.95571899]
[21.45351982 -295.92910767]
[18.84081650 -302.00244141]
[19.57695770 -307.63760376]
[22.60239029 -311.33300781]
[23.94062424 -326.27319336]
[25.27885818 -341.21337891]
[11.35859680 -347.13632202]
[-0.04873135 -357.07254028]
[-7.82555151 -370.04852295]
[-11.20996952 -384.79302979]
[-9.87041664 -399.86157227]
[-3.93812633 -413.77786255]
[6.00571442 -425.17852783]
[18.98690987 -432.94665527]
[33.73369598 -436.32119751]
[48.80133057 -434.97152710]
[62.71364212 -429.02993774]
[74.10764313 -419.07846069]
[81.86706543 -406.09204102]
[85.23171997 -391.34301758]
[83.87197876 -376.27627563]
[77.92104340 -362.36795044]
[67.96192932 -350.98062134]
[54.97033691 -343.22988892]
[40.21904373 -339.87512207]
[38.88080978 -324.93493652]
[37.54257584 -309.99475098]
[36.42692566 -295.03631592]
[35.53411102 -280.06289673]
[34.64129257 -265.08950806]
[33.74847794 -250.11608887]
[33.52515030 -235.11775208]
[33.97175598 -220.12440491]
[34.41836166 -205.13105774]
[35.08814621 -190.14601135]
[35.98096466 -175.17260742]
[36.87377930 -160.19920349]
[37.76659393 -145.22579956]
[38.65941238 -130.25239563]
[39.55222702 -115.27898407]
[42.46629333 -111.49517059]
[43.03432846 -105.84058380]
[40.24195480 -99.84773254]
[40.68856430 -84.85438538]
[41.13516998 -69.86103821]
[44.23927689 -55.18573380]
[49.90206528 -41.29570770]
[55.56484985 -27.40567970]
[61.22763824 -13.51565266]
[66.89042664 0.37437454]
[72.32646942 5.38149452]
[72.53242493 14.51360226]
[77.98777771 28.48640060]
[83.65056610 42.37642670]
[89.51952362 56.18060303]
[95.38848877 69.98477936]
[101.25744629 83.78895569]
[114.91571045 93.52693176]
[112.69931793 110.15412903]
[118.77314758 123.86940002]
[124.84698486 137.58467102]
[130.92082214 151.29992676]
[136.99465942 165.01519775]
[143.06848145 178.73046875]
[143.90759277 163.75395203]
[148.87776184 149.60130310]
[157.58702087 137.38865662]
[169.34854126 128.07916260]
[183.23472595 122.40698242]
[198.15048218 120.81946564]
[212.91949463 123.44180298]
[226.37698364 130.06719971]
[237.46166992 140.17312622]
[245.29934692 152.96260071]
[249.27191162 167.42700195]
[249.06607056 182.42558289]
[244.69805908 196.77551270]
[236.51234436 209.34509277]
[225.15451050 219.14302063]
[211.52026367 225.39660645]
[196.68486023 227.61265564]
[181.81828308 225.61640930]
[168.09298706 219.56529236]
[156.59138489 209.93653870]
[148.21903992 197.48635864]
[157.54139709 210.26931763]
[151.37132263 223.82583618]
[153.15377808 238.71955872]
[154.93624878 253.61328125]
[156.71871948 268.50698853]
[166.04107666 281.28994751]
[159.87100220 294.84646606]
[169.19335938 307.62942505]
[163.02328491 321.18597412]
[172.34565735 333.96893311]
[166.17556763 347.52545166]
[167.95803833 362.41915894]
[169.74049377 377.31286621]
[171.52296448 392.20660400]
[180.84533691 404.98956299]
[174.67524719 418.54608154]
[176.45771790 433.43978882]
[186.09632874 442.01068115]
[187.27432251 454.45239258]
[179.90319824 464.04370117]
[181.46372986 478.96231079]
[183.02424622 493.88088989]
[184.58476257 508.79949951]
[186.14529419 523.71813965]
[187.70581055 538.63671875]
[201.20703125 546.28503418]
[207.60351562 560.42236328]
[204.43568420 575.61267090]
[192.92163086 586.01489258]
[177.48876953 587.62921143]
[164.07131958 579.83489990]
[157.82856750 565.62896729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[5 199]
[6 198]
[8 195]
[9 194]
[11 192]
[12 191]
[13 190]
[14 189]
[16 187]
[18 185]
[20 183]
[21 182]
[22 181]
[23 180]
[25 178]
[26 157]
[27 156]
[28 155]
[29 154]
[30 153]
[31 152]
[34 150]
[35 149]
[36 148]
[37 147]
[40 146]
[41 145]
[42 143]
[43 142]
[44 141]
[45 140]
[46 139]
[71 138]
[72 137]
[73 136]
[74 133]
[75 132]
[76 131]
[77 130]
[78 129]
[79 128]
[82 127]
[83 126]
[84 125]
[91 124]
[92 123]
[93 122]
[94 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
