%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAAAUGGAGUGGGGGUGACUACAAGCGGCUGGCAACUGAUAAGAGAUGUUUGGUGUUUCUGUAACCUUGUGAUAUGGAUAAUAAGCCGCGUACUCGAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[96.58091736 991.98480225]
[81.61345673 990.96868896]
[66.69704437 989.36932373]
[51.85438156 987.18920898]
[37.10808182 984.43164062]
[22.48060226 981.10083008]
[7.99421310 977.20184326]
[-6.32902241 972.74066162]
[-20.46729279 967.72399902]
[-34.39906693 962.15954590]
[-48.10313034 956.05578613]
[-61.55861664 949.42193604]
[-74.74502563 942.26824951]
[-87.64228821 934.60546875]
[-100.23075867 926.44531250]
[-112.49126434 917.80023193]
[-124.40514374 908.68334961]
[-135.95423889 899.10864258]
[-147.12097168 889.09057617]
[-157.88833618 878.64447021]
[-168.23994446 867.78619385]
[-178.16001892 856.53234863]
[-187.63345337 844.89996338]
[-196.64582825 832.90686035]
[-205.18342590 820.57128906]
[-213.23321533 807.91198730]
[-220.78297424 794.94824219]
[-227.82118225 781.69976807]
[-234.33712769 768.18682861]
[-240.32089233 754.42993164]
[-245.76336670 740.45007324]
[-250.65625000 726.26849365]
[-254.99209595 711.90679932]
[-258.76431274 697.38690186]
[-261.96713257 682.73083496]
[-264.59570312 667.96099854]
[-266.64599609 653.09985352]
[-268.11492920 638.17004395]
[-269.00021362 623.19427490]
[-269.30053711 608.19537354]
[-269.01544189 593.19616699]
[-268.14532471 578.21948242]
[-266.69155884 563.28820801]
[-264.65634155 548.42498779]
[-262.04275513 533.65246582]
[-258.85482788 518.99316406]
[-255.09733582 504.46945190]
[-250.77606201 490.10336304]
[-245.89758301 475.91683960]
[-240.46929932 461.93145752]
[-234.49949646 448.16848755]
[-227.99726868 434.64892578]
[-220.97250366 421.39337158]
[-213.43591309 408.42196655]
[-205.39895630 395.75448608]
[-196.87388611 383.41024780]
[-187.87368774 371.40798950]
[-178.41206360 359.76605225]
[-168.50341797 348.50210571]
[-158.16282654 337.63336182]
[-147.40606689 327.17633057]
[-136.24951172 317.14694214]
[-124.71012878 307.56048584]
[-112.80551147 298.43151855]
[-100.55378723 289.77401733]
[-87.97360229 281.60110474]
[-75.08412170 273.92523193]
[-61.90497589 266.75811768]
[-48.45623016 260.11068726]
[-34.75836563 253.99299622]
[-20.83224487 248.41441345]
[-6.69907188 243.38342285]
[7.61962938 238.90766907]
[22.10205460 234.99400330]
[36.72614670 231.64836121]
[51.46964264 228.87583923]
[66.31008148 226.68066406]
[81.22486877 225.06617737]
[96.19129181 224.03482056]
[95.74468231 209.04147339]
[95.29808044 194.04812622]
[94.85147095 179.05477905]
[94.40486908 164.06143188]
[93.95825958 149.06808472]
[82.97492981 139.07298279]
[82.30841827 123.87395477]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[83.54862213 59.46817780]
[90.90355682 46.51618195]
[76.16365814 43.35408783]
[62.60911942 36.75575638]
[51.02798462 27.10480881]
[42.09356689 14.96233749]
[36.32530212 1.03428853]
[34.05854797 -13.86957836]
[35.42508698 -28.88277245]
[40.34547806 -43.13244629]
[48.53364944 -55.79014206]
[59.51355362 -66.11995697]
[72.64683533 -73.52133179]
[87.16994476 -77.56396484]
[102.23851776 -78.01280975]
[116.97649384 -74.84178162]
[130.52702332 -68.23523712]
[142.10231018 -58.57726669]
[151.02935791 -46.42938232]
[156.78918457 -32.49783707]
[159.04690552 -17.59259796]
[157.67126465 -2.58023572]
[152.74223328 11.66645241]
[144.54638672 24.31918335]
[133.56022644 34.64234161]
[120.42245483 42.03575134]
[105.89690399 46.06957245]
[114.00971222 58.56083679]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[119.08121490 122.77860260]
[119.32054901 137.99035645]
[108.95161438 148.62147522]
[109.39821625 163.61482239]
[109.84482574 178.60816956]
[110.29142761 193.60151672]
[110.73803711 208.59486389]
[111.18463898 223.58822632]
[126.18591309 223.72691345]
[141.17034912 224.45080566]
[156.11514282 225.75877380]
[170.99751282 227.64881897]
[185.79481506 230.11810303]
[200.48451233 233.16282654]
[215.04423523 236.77836609]
[229.45179749 240.95921326]
[243.68527222 245.69900513]
[257.72299194 250.99053955]
[271.54354858 256.82571411]
[285.12591553 263.19570923]
[298.44943237 270.09075928]
[311.49377441 277.50039673]
[324.23907471 285.41329956]
[336.66595459 293.81750488]
[348.75546265 302.70013428]
[360.48919678 312.04766846]
[371.84930420 321.84591675]
[382.81848145 332.07992554]
[393.38000488 342.73410034]
[403.51779175 353.79226685]
[413.21643066 365.23751831]
[422.46112061 377.05245972]
[431.23779297 389.21911621]
[439.53311157 401.71893311]
[447.33441162 414.53286743]
[454.62979126 427.64144897]
[461.40820312 441.02465820]
[467.65930176 454.66217041]
[473.37353516 468.53317261]
[478.54220581 482.61657715]
[483.15750122 496.89089966]
[487.21234131 511.33444214]
[490.70056152 525.92517090]
[493.61685181 540.64093018]
[495.95675659 555.45922852]
[497.71673584 570.35754395]
[498.89410400 585.31317139]
[499.48706055 600.30340576]
[499.49472046 615.30529785]
[498.91705322 630.29608154]
[497.75491333 645.25292969]
[496.01013184 660.15301514]
[493.68533325 674.97369385]
[490.78405762 689.69244385]
[487.31069946 704.28668213]
[483.27059937 718.73437500]
[478.66989136 733.01342773]
[473.51556396 747.10205078]
[467.81546021 760.97888184]
[461.57830811 774.62274170]
[454.81353760 788.01287842]
[447.53149414 801.12890625]
[439.74328613 813.95080566]
[431.46072388 826.45904541]
[422.69647217 838.63464355]
[413.46380615 850.45904541]
[403.77685547 861.91418457]
[393.65036011 872.98266602]
[383.09970093 883.64758301]
[372.14096069 893.89276123]
[360.79086304 903.70257568]
[349.06665039 913.06213379]
[336.98620605 921.95709229]
[324.56790161 930.37390137]
[311.83068848 938.29986572]
[298.79388428 945.72277832]
[285.47744751 952.63140869]
[271.90155029 959.01519775]
[258.08694458 964.86450195]
[244.05464172 970.17034912]
[229.82601929 974.92462158]
[215.42271423 979.12017822]
[200.86669922 982.75054932]
[186.18011475 985.81030273]
[171.38534546 988.29461670]
[156.50489807 990.19989014]
[141.56144714 991.52307129]
[126.57775879 992.26220703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[87 122]
[89 120]
[90 119]
[92 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
