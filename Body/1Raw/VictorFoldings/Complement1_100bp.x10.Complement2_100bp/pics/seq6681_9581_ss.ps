%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUGAGGCCUUUUUUUCUUGGUAAACCUAUGUAUCCAUACCAGACUCGAUACUAUAGUUAACCGAAGGAUCCCAAAUAGCACACUCGUGUGGUAUAUAAxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[47.38273621 474.62832642]
[54.66083527 487.83032227]
[58.56732178 502.39062500]
[58.87507629 517.46276855]
[55.56620789 532.17041016]
[48.83309174 545.65850830]
[39.06718445 557.14282227]
[26.83625412 565.95574951]
[12.85139847 571.58489990]
[-2.07432342 573.70300293]
[-17.07315063 572.18688965]
[-31.27306938 567.12469482]
[-43.84851456 558.81072998]
[-54.06836700 547.72839355]
[-61.33846283 534.52203369]
[-65.23612213 519.95935059]
[-65.53473663 504.88702393]
[-62.21695328 490.18139648]
[-55.47566223 476.69738770]
[-45.70279312 465.21896362]
[-33.46652222 456.41342163]
[-19.47825623 450.79275513]
[-4.55125332 448.68374634]
[10.44665146 450.20895386]
[15.48356724 436.07992554]
[20.52048302 421.95089722]
[25.55739975 407.82186890]
[30.59431648 393.69284058]
[27.58002663 379.10644531]
[39.50208282 368.70571899]
[36.48779297 354.11929321]
[48.40985107 343.71856689]
[53.44676590 329.58953857]
[57.20306778 315.06747437]
[59.64879608 300.26821899]
[62.09452438 285.46893311]
[55.03933334 269.40060425]
[66.84136963 255.26577759]
[69.06649017 240.43173218]
[71.29161072 225.59768677]
[73.51672363 210.76364136]
[75.74184418 195.92959595]
[77.96695709 181.09556580]
[75.89899445 176.79060364]
[76.51342010 171.14086914]
[80.48551178 165.85560608]
[83.15130615 151.09439087]
[85.81710052 136.33317566]
[88.48290253 121.57196045]
[91.14869690 106.81073761]
[93.70452881 92.03009033]
[95.48699188 77.13636780]
[96.60263824 62.17791748]
[97.71829224 47.21946335]
[98.83393860 32.26100922]
[99.94958496 17.30255699]
[100.95384979 2.33621216]
[101.84666443 -12.63719368]
[99.51117706 -27.45426178]
[94.05581665 -41.42705917]
[88.60046387 -55.39985657]
[76.37402344 -65.44100952]
[78.95268250 -80.11069489]
[73.49732971 -94.08349609]
[67.93810272 -108.01529694]
[62.27531433 -121.90531921]
[56.61252594 -135.79534912]
[50.94974136 -149.68537903]
[44.81216812 -156.45057678]
[45.30774307 -163.82460022]
[39.85238647 -177.79739380]
[34.39702988 -191.77020264]
[28.94167328 -205.74299622]
[23.48631668 -219.71578979]
[8.78746128 -216.56304932]
[-6.22679090 -215.80911255]
[-21.16753578 -217.47354126]
[-35.64776993 -221.51321411]
[-49.29242325 -227.82350159]
[-61.74806595 -236.24092102]
[-72.69207001 -246.54748535]
[-81.84095001 -258.47619629]
[-88.95773315 -271.71807861]
[-93.85808563 -285.93014526]
[-96.41506195 -300.74426270]
[-96.56243896 -315.77670288]
[-94.29640198 -330.63809204]
[-89.67563629 -344.94351196]
[-82.81983948 -358.32238770]
[-73.90659332 -370.42816162]
[-63.16676712 -380.94732666]
[-50.87855148 -389.60733032]
[-37.36024094 -396.18392944]
[-22.96198845 -400.50671387]
[-8.05674934 -402.46374512]
[6.96939802 -402.00433350]
[21.72723961 -399.14038086]
[35.83451462 -393.94604492]
[48.92580414 -386.55590820]
[60.66202164 -377.16137695]
[70.73915863 -366.00576782]
[78.89620972 -353.37808228]
[84.92186737 -339.60534668]
[88.66007233 -325.04437256]
[90.01398468 -310.07229614]
[88.94853210 -295.07693481]
[85.49132538 -280.44671631]
[79.73189545 -266.56054688]
[71.81945038 -253.77816772]
[61.95891571 -242.43064880]
[50.40571976 -232.81193542]
[37.45911407 -225.17115784]
[42.91447067 -211.19834900]
[48.36982727 -197.22555542]
[53.82518387 -183.25276184]
[59.28054047 -169.27995300]
[64.83976746 -155.34815979]
[70.50255585 -141.45812988]
[76.16534424 -127.56810760]
[81.82812500 -113.67807770]
[87.26416779 -108.67095947]
[87.47012329 -99.53885651]
[92.92548370 -85.56605530]
[104.76171875 -76.52433014]
[102.57325745 -60.85521317]
[108.02861786 -46.88241577]
[113.48397064 -32.90961838]
[114.78201294 -47.85334778]
[119.02169037 -62.24171829]
[126.03413391 -75.50164032]
[135.54005432 -87.10498047]
[147.16082764 -96.58957672]
[160.43360901 -103.57767487]
[174.82972717 -107.79092407]
[189.77581787 -109.06152344]
[204.67657471 -107.33885956]
[218.93850708 -102.69155121]
[231.99354553 -95.30469513]
[243.32174683 -85.47250366]
[252.47189331 -73.58660126]
[259.07955933 -60.12038422]
[262.88153076 -45.61021423]
[263.72637939 -30.63402748]
[261.58050537 -15.78831577]
[256.52932739 -1.66437984]
[248.77403259 11.17523003]
[238.62353516 22.21911621]
[226.48211670 31.02740669]
[212.83337402 37.24926758]
[198.22090149 40.63688660]
[183.22674561 41.05533981]
[168.44808960 38.48795319]
[154.47358704 33.03699112]
[141.85980225 24.91955757]
[131.10917664 14.45897007]
[122.64987183 2.07187033]
[116.82006836 -11.74437809]
[115.92725372 3.22902822]
[118.66705322 10.09308529]
[114.90804291 18.41820526]
[113.79238892 33.37665939]
[112.67674255 48.33511353]
[111.56109619 63.29356384]
[110.44544983 78.25202179]
[122.48867798 69.30994415]
[137.34706116 71.36628723]
[146.50903320 83.24308014]
[144.72621155 98.13675690]
[133.01986694 107.51554108]
[118.09593201 106.00684357]
[108.50379944 94.47581482]
[110.40104675 102.30990601]
[105.90991211 109.47653961]
[103.24411774 124.23775482]
[100.57832336 138.99897766]
[97.91252899 153.76019287]
[95.24672699 168.52140808]
[92.80100250 183.32067871]
[90.57588196 198.15472412]
[88.35076904 212.98876953]
[86.12564850 227.82281494]
[83.90053558 242.65684509]
[81.67541504 257.49090576]
[88.70031738 268.30816650]
[86.54161835 280.61767578]
[76.89379120 287.91467285]
[74.44806671 302.71392822]
[72.00234222 317.51321411]
[82.07805634 306.40106201]
[95.94457245 300.68093872]
[110.92446136 301.45727539]
[124.12535858 308.58023071]
[132.99836731 320.67443848]
[135.83026123 335.40469360]
[132.07423401 349.92681885]
[122.45552063 361.43682861]
[108.83133698 367.71231079]
[93.83230591 367.54156494]
[80.35450745 360.95758057]
[71.00028992 349.23159790]
[67.57579803 334.62646484]
[62.53887939 348.75549316]
[65.19289398 364.35250854]
[53.63111496 373.74261475]
[56.28512955 389.33963013]
[44.72334671 398.72976685]
[39.68642807 412.85879517]
[34.64951324 426.98782349]
[29.61259651 441.11685181]
[24.57567978 455.24588013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 210]
[25 209]
[26 208]
[27 207]
[28 206]
[30 204]
[32 202]
[33 201]
[34 188]
[35 187]
[36 186]
[38 183]
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[46 177]
[47 176]
[48 175]
[49 174]
[50 173]
[51 171]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[57 158]
[58 157]
[59 127]
[60 126]
[61 125]
[63 123]
[64 122]
[65 120]
[66 119]
[67 118]
[68 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
