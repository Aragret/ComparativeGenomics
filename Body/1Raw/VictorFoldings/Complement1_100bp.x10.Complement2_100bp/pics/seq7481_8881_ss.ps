%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUAxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[77.72782135 464.68750000]
[62.83217621 466.93859863]
[47.80911636 465.81811523]
[33.41219711 461.38229370]
[20.36356354 453.85363770]
[9.31772709 443.60974121]
[0.82874304 431.16445923]
[-4.67758512 417.14205933]
[-6.92506170 402.24584961]
[-5.80095434 387.22308350]
[-1.36164808 372.82723999]
[6.17018366 359.78042603]
[16.41674805 348.73706055]
[28.86407852 340.25109863]
[42.88782883 334.74816895]
[57.78456497 332.50430298]
[58.90021515 317.54583740]
[60.01586151 302.58740234]
[57.63344193 298.44818115]
[57.82595825 292.76840210]
[61.39394379 287.20233154]
[55.02270889 273.73916626]
[64.15372467 260.81884766]
[65.71424866 245.90022278]
[67.27477264 230.98162842]
[68.83529663 216.06301880]
[66.91095734 213.10848999]
[66.32207489 209.07508850]
[67.56011963 204.60066223]
[70.81314850 200.51838684]
[73.03826141 185.68434143]
[75.26338196 170.85031128]
[77.48849487 156.01626587]
[79.71361542 141.18222046]
[81.93873596 126.34817505]
[73.25894928 138.58178711]
[61.63529587 148.06285095]
[47.90688705 154.10691833]
[33.06478882 156.27766418]
[18.18046570 154.41838074]
[4.32843161 148.66328430]
[-7.49132490 139.42784119]
[-16.42552376 127.37877655]
[-21.82920074 113.38591003]
[-23.31225586 98.45940399]
[-20.76762962 83.67681885]
[-14.37901688 70.10531616]
[-4.60762072 58.72463989]
[7.84115505 50.35636902]
[22.06862259 45.60461426]
[37.04768753 44.81240845]
[51.69700241 48.03694534]
[64.95901489 55.04544449]
[75.87632751 65.33194733]
[83.66082001 78.15386963]
[87.75051880 92.58558655]
[87.85002899 107.58641052]
[87.17493439 93.62088776]
[98.71959686 85.73339844]
[105.39978790 72.30302429]
[112.07998657 58.87264633]
[118.76017761 45.44226837]
[125.44037628 32.01189423]
[132.12057495 18.58151627]
[135.76866150 4.03189659]
[136.21525574 -10.96145344]
[136.66186523 -25.95480347]
[137.10847473 -40.94815445]
[129.78549194 -54.97257614]
[137.89830017 -67.46383667]
[137.89830017 -82.46383667]
[137.45169067 -97.45718384]
[137.00508118 -112.45053864]
[136.55847168 -127.44388580]
[127.02398682 -115.86401367]
[112.53330994 -111.98840332]
[98.49111938 -117.26256561]
[90.13479614 -129.71936035]
[90.58103943 -144.71272278]
[99.66342163 -156.65049744]
[113.99443817 -161.08016968]
[128.22895813 -156.34960938]
[137.05824280 -144.22207642]
[138.39648438 -159.16226196]
[139.73471069 -174.10244751]
[141.07295227 -189.04263306]
[142.41117859 -203.98281860]
[143.74942017 -218.92300415]
[143.97274780 -233.92134094]
[143.07992554 -248.89474487]
[142.18711853 -263.86816406]
[141.29429626 -278.84155273]
[140.40148926 -293.81497192]
[139.50866699 -308.78836060]
[138.61584473 -323.76177979]
[124.08125305 -328.06539917]
[111.89698029 -337.08312988]
[103.53433228 -349.72598267]
[100.00315094 -364.46731567]
[101.72983551 -379.52700806]
[108.50588989 -393.08654785]
[119.51305389 -403.50854492]
[133.42218018 -409.53448486]
[148.55366516 -410.43673706]
[163.08030701 -406.10632324]
[175.24794006 -397.06616211]
[183.58728027 -384.40789795]
[187.09127808 -369.66009521]
[185.33685303 -354.60360718]
[178.53582764 -341.05657959]
[167.50946045 -330.65490723]
[153.58926392 -324.65460205]
[154.48207092 -309.68118286]
[155.37489319 -294.70776367]
[156.26770020 -279.73437500]
[157.16052246 -264.76095581]
[158.05332947 -249.78756714]
[158.94615173 -234.81414795]
[167.05892944 -247.43092346]
[180.34762573 -254.38870239]
[195.33860779 -253.86872864]
[208.11326599 -246.00692749]
[215.33235168 -232.85835266]
[215.10879517 -217.86001587]
[207.50105286 -204.93244934]
[194.49774170 -197.45487976]
[179.49792480 -197.38192749]
[166.42250061 -204.73266602]
[158.68960571 -217.58476257]
[157.35136414 -202.64457703]
[156.01313782 -187.70439148]
[154.67489624 -172.76420593]
[153.33666992 -157.82402039]
[151.99842834 -142.88385010]
[151.55183411 -127.89049530]
[151.99842834 -112.89714050]
[152.44503784 -97.90379333]
[152.89164734 -82.91044617]
[154.83712769 -80.89221954]
[156.10038757 -77.98175049]
[156.33757019 -74.43504333]
[155.30378723 -70.62770844]
[152.89164734 -67.01723480]
[160.24658203 -54.06523514]
[152.10182190 -40.50154877]
[151.65521240 -25.50819778]
[151.20861816 -10.51484776]
[150.76200867 4.47850227]
[157.80351257 -8.76601601]
[167.33483887 -20.34848976]
[178.97637939 -29.80759048]
[192.26443481 -36.76657104]
[206.66976929 -40.94825363]
[221.61860657 -42.18608093]
[236.51554871 -40.43075943]
[250.76725769 -35.75219727]
[263.80609131 -28.33673859]
[275.11270142 -18.47974014]
[284.23675537 -6.57380295]
[290.81488037 6.90686464]
[294.58505249 21.42533302]
[295.39706421 36.40333557]
[293.21862793 51.24430847]
[288.13650513 65.35713959]
[280.35308838 78.17971802]
[270.17840576 89.20132446]
[258.01773071 97.98297882]
[244.35536194 104.17490387]
[229.73550415 107.53047943]
[214.74046326 107.91606140]
[199.96746826 105.31628418]
[186.00494385 99.83470154]
[173.40899658 91.68963623]
[162.68132019 81.20550537]
[154.24919128 68.79988861]
[148.44847107 54.96689987]
[145.51019287 40.25749969]
[145.55094910 25.26171112]
[138.87074280 38.69208908]
[132.19055176 52.12246323]
[125.51036072 65.55284119]
[118.83016968 78.98321533]
[112.14997101 92.41358948]
[112.82506561 106.37911224]
[101.28040314 114.26660156]
[96.77277374 128.57328796]
[94.54766083 143.40733337]
[92.32254028 158.24137878]
[90.09742737 173.07542419]
[87.87230682 187.90946960]
[85.64719391 202.74351501]
[83.75389862 217.62355042]
[82.19337463 232.54214478]
[80.63285065 247.46075439]
[79.07232666 262.37936401]
[85.33194733 276.90960693]
[76.31255341 288.76284790]
[74.97431183 303.70303345]
[73.85866547 318.66149902]
[72.74301910 333.61993408]
[87.14208221 338.04879761]
[100.19436646 345.57113647]
[111.24516296 355.80966187]
[119.74018097 368.25082397]
[125.25330353 382.27056885]
[127.50799561 397.16567993]
[126.39117432 412.18899536]
[121.95883942 426.58700562]
[114.43333435 439.63745117]
[104.19212341 450.68576050]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 200]
[17 199]
[18 198]
[21 197]
[23 195]
[24 194]
[25 193]
[26 192]
[30 191]
[31 190]
[32 189]
[33 188]
[34 187]
[35 186]
[57 185]
[59 183]
[60 182]
[61 181]
[62 180]
[63 179]
[64 178]
[65 148]
[66 147]
[67 146]
[68 145]
[70 143]
[71 138]
[72 137]
[73 136]
[74 135]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
