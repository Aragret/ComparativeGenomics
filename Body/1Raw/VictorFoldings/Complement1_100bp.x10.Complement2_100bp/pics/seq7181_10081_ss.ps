%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGUxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[-3.80728841 403.44412231]
[3.75317907 416.47436523]
[8.22409153 430.86041260]
[9.38118935 445.88070679]
[7.16643381 460.78179932]
[1.69091558 474.81628418]
[-6.77071571 487.28015137]
[-17.79402733 497.54827881]
[-30.82609558 505.10559082]
[-45.21323776 509.57302856]
[-60.23379898 510.72647095]
[-75.13435364 508.50811768]
[-89.16750336 503.02920532]
[-101.62934113 494.56454468]
[-111.89479065 483.53872681]
[-119.44894409 470.50485229]
[-123.91288757 456.11660767]
[-125.06270599 441.09576416]
[-122.84072876 426.19577026]
[-117.35840607 412.16394043]
[-108.89073944 399.70416260]
[-97.86244965 389.44137573]
[-84.82672119 381.89038086]
[-70.43741608 377.42993164]
[-55.41629791 376.28375244]
[-40.51681900 378.50933838]
[-35.06146240 364.53652954]
[-29.60610390 350.56375122]
[-30.10168076 343.18972778]
[-23.96410751 336.42449951]
[-18.30132103 322.53448486]
[-12.63853359 308.64447021]
[-14.99849987 293.93798828]
[-2.62391710 284.07998657]
[-16.83382225 288.88400269]
[-30.33926964 282.35693359]
[-35.40372467 268.23773193]
[-29.12603760 254.61457825]
[-15.10235310 249.29139709]
[-1.36607397 255.31755066]
[4.21404123 269.24005127]
[11.09345436 255.91062927]
[17.97286606 242.58119202]
[24.85227966 229.25177002]
[31.73169136 215.92233276]
[21.54963684 204.98565674]
[15.71278954 191.19941711]
[14.94339561 176.22001648]
[19.35359001 161.85437012]
[28.42954254 149.84199524]
[41.09124374 141.64434814]
[55.82099533 138.26701355]
[70.84532928 140.13644409]
[69.80682373 125.27808380]
[83.01154327 116.56339264]
[89.89096069 103.23396301]
[95.96479034 89.51869965]
[101.21150970 75.46622467]
[106.45822906 61.41375351]
[111.70494843 47.36128235]
[110.83934021 42.21368027]
[111.92613983 37.70012665]
[114.39688110 34.45814133]
[117.51246643 32.80723953]
[123.38142395 19.00306511]
[129.25038147 5.19888735]
[135.11935425 -8.60528946]
[131.02714539 -20.83708000]
[136.19960022 -32.21378708]
[147.36734009 -36.86226273]
[153.44117737 -50.57752991]
[159.51499939 -64.29279327]
[147.47372437 -74.40944672]
[138.77517700 -87.49447632]
[134.11604309 -102.48509979]
[133.86532593 -118.16654968]
[138.03511047 -133.27046204]
[146.28030396 -146.57749939]
[157.92712402 -157.01576233]
[172.02819824 -163.74717712]
[187.43957520 -166.23469543]
[202.91357422 -164.28523254]
[208.78253174 -178.08940125]
[214.65148926 -191.89358521]
[207.81175232 -207.99443054]
[214.59921265 -223.75022888]
[230.36521912 -229.60446167]
[236.02799988 -243.49449158]
[241.69078064 -257.38452148]
[245.55508423 -271.87820435]
[247.55909729 -286.74374390]
[249.56311035 -301.60928345]
[251.56713867 -316.47479248]
[253.57115173 -331.34033203]
[239.30813599 -336.13232422]
[226.20989990 -343.53723145]
[214.74992371 -353.28738403]
[205.34248352 -365.03030396]
[198.32766724 -378.34155273]
[193.95903015 -392.73986816]
[192.39450073 -407.70477295]
[193.69064331 -422.69531250]
[197.80061340 -437.16958618]
[204.57580566 -450.60437012]
[213.77134705 -462.51397705]
[225.05477905 -472.46789551]
[238.01823425 -480.10629272]
[252.19309998 -485.15304565]
[267.06695557 -487.42575073]
[282.10211182 -486.84219360]
[296.75506592 -483.42349243]
[310.49612427 -477.29327393]
[322.82855225 -468.67306519]
[333.30654907 -457.87454224]
[341.55130005 -445.28802490]
[347.26483154 -431.36853027]
[350.24057007 -416.61926270]
[350.37091064 -401.57333374]
[347.65121460 -386.77468872]
[342.17971802 -372.75830078]
[334.15426636 -360.03082275]
[323.86495972 -349.05236816]
[311.68374634 -340.21978760]
[298.05099487 -333.85235596]
[283.45947266 -330.18029785]
[268.43667603 -329.33630371]
[266.43264771 -314.47079468]
[264.42864990 -299.60525513]
[262.42462158 -284.73971558]
[260.42062378 -269.87420654]
[269.24047852 -282.00723267]
[281.48410034 -290.67288208]
[295.85940552 -294.95666504]
[310.84930420 -294.40649414]
[324.87191772 -289.08047485]
[336.44735718 -279.54058838]
[344.35406494 -266.79367065]
[347.75762939 -252.18493652]
[346.29888916 -237.25602722]
[340.13171387 -223.58247375]
[329.90701294 -212.60725403]
[316.70379639 -205.48861694]
[301.91543579 -202.97781372]
[287.10256958 -205.33981323]
[273.82843018 -212.32534790]
[263.49389648 -223.19720459]
[257.18957520 -236.80807495]
[255.58081055 -251.72174072]
[249.91802979 -237.83171082]
[244.25523376 -223.94168091]
[250.86514282 -212.88099670]
[249.88293457 -199.83810425]
[241.44378662 -189.59158325]
[228.45567322 -186.02462769]
[222.58670044 -172.22044373]
[216.71774292 -158.41627502]
[227.97836304 -149.54803467]
[236.56362915 -138.05506897]
[241.88201904 -124.71872711]
[243.56439209 -110.44772339]
[241.48954773 -96.21620941]
[235.79302979 -82.99729919]
[226.85818481 -71.69649506]
[215.29046631 -63.08969879]
[201.87632751 -57.76989746]
[187.52983093 -56.10635757]
[173.23027039 -58.21895981]
[167.15643311 -44.50369644]
[161.08261108 -30.78842735]
[163.88916016 -13.46531773]
[148.92352295 -2.73632860]
[143.05456543 11.06784821]
[137.18560791 24.87202454]
[131.31665039 38.67620087]
[125.75741577 52.60800171]
[120.51069641 66.66046906]
[115.26398468 80.71294403]
[110.01726532 94.76541138]
[123.21784210 87.64188385]
[138.09934998 89.52356720]
[149.11135864 99.70864105]
[152.14663696 114.39833832]
[146.07313538 128.11373901]
[133.15609741 135.73936462]
[118.21326447 134.43103027]
[106.81793976 124.67671967]
[103.22039032 110.11337280]
[96.34097290 123.44280243]
[96.88742065 139.25457764]
[84.17475891 147.01585388]
[94.40245056 158.17916870]
[100.18285370 172.14193726]
[100.83615112 187.21156311]
[96.30277252 201.56838989]
[87.14826965 213.48545837]
[74.49284363 221.53622437]
[59.87428665 224.76527405]
[45.06111908 222.80175781]
[38.18170929 236.13117981]
[31.30229568 249.46060181]
[24.42288399 262.79003906]
[17.54347038 276.11947632]
[11.26610947 289.74279785]
[13.22103500 305.44274902]
[1.25149286 314.30725098]
[-4.41129351 328.19726562]
[-10.07408047 342.08731079]
[-15.63330650 356.01910400]
[-21.08866310 369.99188232]
[-26.54401970 383.96469116]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 210]
[27 209]
[28 208]
[30 207]
[31 206]
[32 205]
[34 203]
[41 202]
[42 201]
[43 200]
[44 199]
[45 198]
[53 190]
[55 188]
[56 187]
[57 178]
[58 177]
[59 176]
[60 175]
[64 174]
[65 173]
[66 172]
[67 171]
[70 169]
[71 168]
[72 167]
[82 156]
[83 155]
[84 154]
[87 150]
[88 149]
[89 148]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
