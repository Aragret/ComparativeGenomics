%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[-5.45061064 938.42401123]
[-20.41107750 939.54986572]
[-35.40787125 939.97326660]
[-50.40802383 939.69317627]
[-65.37856293 938.71038818]
[-80.28658295 937.02691650]
[-95.09931183 934.64660645]
[-109.78418732 931.57452393]
[-124.30892944 927.81750488]
[-138.64160156 923.38385010]
[-152.75070190 918.28326416]
[-166.60522461 912.52691650]
[-180.17471313 906.12756348]
[-193.42932129 899.09912109]
[-206.33993530 891.45721436]
[-218.87815857 883.21850586]
[-231.01641846 874.40118408]
[-242.72807312 865.02459717]
[-253.98733521 855.10937500]
[-264.76947021 844.67724609]
[-275.05078125 833.75128174]
[-284.80868530 822.35534668]
[-294.02169800 810.51458740]
[-302.66958618 798.25500488]
[-310.73330688 785.60357666]
[-318.19519043 772.58807373]
[-325.03878784 759.23712158]
[-331.24908447 745.58001709]
[-336.81240845 731.64691162]
[-341.71655273 717.46832275]
[-345.95071411 703.07543945]
[-349.50561523 688.49987793]
[-352.37338257 673.77380371]
[-354.54776001 658.92944336]
[-356.02398682 643.99945068]
[-356.79876709 629.01672363]
[-356.87042236 614.01409912]
[-356.23876953 599.02465820]
[-354.90524292 584.08123779]
[-352.87277222 569.21679688]
[-350.14578247 554.46392822]
[-346.73028564 539.85516357]
[-342.63378906 525.42248535]
[-337.86529541 511.19769287]
[-332.43530273 497.21203613]
[-326.35574341 483.49627686]
[-319.63998413 470.08056641]
[-312.30276489 456.99438477]
[-304.36026001 444.26647949]
[-295.82986450 431.92486572]
[-286.73037720 419.99664307]
[-277.08178711 408.50805664]
[-266.90530396 397.48434448]
[-256.22329712 386.94973755]
[-245.05924988 376.92739868]
[-233.43771362 367.43936157]
[-221.38421631 358.50650024]
[-208.92526245 350.14840698]
[-196.08822632 342.38348389]
[-182.90135193 335.22882080]
[-169.39363098 328.70010376]
[-155.59471130 322.81170654]
[-141.53497314 317.57656860]
[-127.24530792 313.00619507]
[-112.75711823 309.11062622]
[-98.10225677 305.89843750]
[-83.31294250 303.37670898]
[-68.42167664 301.55093384]
[-53.46120834 300.42517090]
[-38.46441269 300.00186157]
[-23.46426010 300.28195190]
[-8.49372292 301.26483154]
[6.41429043 302.94833374]
[21.22700882 305.32876587]
[35.91186905 308.40090942]
[39.66817093 293.87884521]
[43.42446899 279.35678101]
[47.18077087 264.83471680]
[41.31398392 254.25608826]
[44.32456970 242.12678528]
[55.12794876 235.08052063]
[59.10004807 220.61599731]
[63.07214355 206.15147400]
[58.98131561 191.82966614]
[70.09677887 180.57101440]
[74.06887817 166.10649109]
[78.04096985 151.64196777]
[82.01306915 137.17744446]
[85.98516846 122.71292114]
[89.95726013 108.24839783]
[93.49693298 93.67201996]
[96.60104370 78.99671936]
[98.49433899 64.11668396]
[99.16412354 49.13164520]
[92.05075073 34.99975204]
[100.34863281 22.63066101]
[101.01841736 7.64562273]
[101.68820190 -7.33941603]
[102.35798645 -22.32445526]
[103.02777100 -37.30949402]
[89.38710785 -44.08091736]
[79.68493652 -55.81921768]
[75.60220337 -70.49066162]
[77.84628296 -85.55332947]
[86.02836609 -98.39752960]
[98.73085785 -106.79792023]
[113.75297546 -109.29908752]
[128.49205017 -105.46768188]
[140.39443970 -95.96752930]
[147.39799500 -82.44458008]
[148.28929138 -67.24176788]
[142.91392517 -52.99307632]
[132.20320129 -42.16717148]
[118.01280975 -36.63970947]
[117.34302521 -21.65467072]
[116.67324066 -6.66963100]
[116.00345612 8.31540775]
[115.33367157 23.30044746]
[122.49495697 36.36051178]
[114.14916229 49.80143356]
[113.47937775 64.78646851]
[122.48200989 52.78844452]
[135.98931885 46.26522064]
[150.98374939 46.67409897]
[164.11549377 53.92374039]
[172.45089722 66.39454651]
[174.12779236 81.30052185]
[168.77157593 95.31162262]
[157.57884216 105.29773712]
[143.05004883 109.02793884]
[128.43099976 105.66889191]
[116.98760223 95.97102356]
[111.27634430 82.10083008]
[108.17223358 96.77613068]
[109.61226654 99.46236420]
[110.10671234 102.73192596]
[109.43763733 106.23560333]
[107.51916504 109.54856873]
[104.42178345 112.22049713]
[100.44969177 126.68502045]
[96.47759247 141.14953613]
[92.50549316 155.61405945]
[88.53340149 170.07858276]
[84.56130219 184.54312134]
[88.36801910 199.89953613]
[77.53666687 210.12356567]
[73.56456757 224.58808899]
[69.59247589 239.05261230]
[74.66017151 256.75573730]
[61.70283127 268.59100342]
[57.94652939 283.11306763]
[54.19022751 297.63513184]
[50.43392944 312.15719604]
[64.76662445 316.59082031]
[78.87574768 321.69134521]
[92.73029327 327.44760132]
[106.29980469 333.84695435]
[119.55445099 340.87527466]
[132.46508789 348.51718140]
[145.00334167 356.75579834]
[157.14166260 365.57308960]
[168.85334778 374.94964600]
[180.11265564 384.86480713]
[190.89483643 395.29687500]
[201.17620850 406.22280884]
[210.93414307 417.61868286]
[220.14720154 429.45941162]
[228.79513550 441.71893311]
[236.85893250 454.37036133]
[244.32086182 467.38583374]
[251.16453552 480.73675537]
[257.37487793 494.39379883]
[262.93826294 508.32690430]
[267.84246826 522.50549316]
[272.07669067 536.89831543]
[275.63165283 551.47381592]
[278.49948120 566.19995117]
[280.67395020 581.04431152]
[282.15020752 595.97424316]
[282.92504883 610.95703125]
[282.99676514 625.95959473]
[282.36520386 640.94909668]
[281.03173828 655.89245605]
[278.99929810 670.75695801]
[276.27236938 685.50982666]
[272.85696411 700.11865234]
[268.76052856 714.55133057]
[263.99209595 728.77612305]
[258.56216431 742.76177979]
[252.48268127 756.47760010]
[245.76696777 769.89331055]
[238.42980957 782.97955322]
[230.48733521 795.70745850]
[221.95701599 808.04913330]
[212.85757446 819.97735596]
[203.20903015 831.46600342]
[193.03259277 842.48974609]
[182.35063171 853.02441406]
[171.18663025 863.04681396]
[159.56512451 872.53491211]
[147.51167297 881.46783447]
[135.05274963 889.82592773]
[122.21576691 897.59094238]
[109.02892303 904.74566650]
[95.52121735 911.27441406]
[81.72233582 917.16290283]
[67.66262054 922.39807129]
[53.37296677 926.96850586]
[38.88479233 930.86413574]
[24.22994614 934.07641602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 153]
[76 152]
[77 151]
[78 150]
[81 148]
[82 147]
[83 146]
[85 144]
[86 143]
[87 142]
[88 141]
[89 140]
[90 139]
[91 134]
[92 133]
[93 121]
[94 120]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
